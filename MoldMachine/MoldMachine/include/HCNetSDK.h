#ifndef _HC_NET_SDK_H_
#define _HC_NET_SDK_H_



#ifndef _WINDOWS_
#if (defined(_WIN32) || defined(_WIN64))
#include <winsock2.h>
#include <windows.h>    
#endif
#endif

#ifndef __PLAYRECT_defined
#define __PLAYRECT_defined
typedef struct __PLAYRECT
{
	int x;
	int y;
	int uWidth;
	int uHeight;
}PLAYRECT;
#endif

#if (defined(_WIN32)) //windows
#define NET_DVR_API  extern "C" __declspec(dllimport)
typedef  unsigned __int64   UINT64;
typedef  signed   __int64   INT64;
#elif defined(__linux__) || defined(__APPLE__) //linux
#define  BOOL  int
typedef  unsigned int       DWORD;
typedef  unsigned short     WORD;
typedef  unsigned short     USHORT;
typedef  short              SHORT;
typedef  int                LONG;
typedef  unsigned char      BYTE;
typedef  unsigned int       UINT;
typedef  void*              LPVOID;
typedef  void*              HANDLE;
typedef  unsigned int*      LPDWORD;
typedef  unsigned long long UINT64;
typedef  signed long long   INT64;

#ifndef TRUE
#define TRUE  1
#endif
#ifndef FALSE
#define FALSE 0
#endif
#ifndef NULL
#define NULL 0
#endif

#define __stdcall 
#define CALLBACK  

#define NET_DVR_API extern "C"
typedef unsigned int   COLORKEY;
typedef unsigned int   COLORREF;

#ifndef __HWND_defined
#define __HWND_defined
#if defined(__linux__)
typedef unsigned int HWND;
#else
typedef void* HWND;
#endif
#endif

#ifndef __HDC_defined
#define __HDC_defined
#if defined(__linux__)
typedef struct __DC
{
	void*   surface;        //SDL Surface
	HWND    hWnd;           //HDC window handle
}DC;
typedef DC* HDC;
#else
typedef void* HDC;
#endif
#endif

typedef struct tagInitInfo
{
	int uWidth;
	int uHeight;
}INITINFO;
#endif

//?那?“??
#define MAX_NAMELEN                16        //DVR㊣?????????
#define MAX_RIGHT                32        //?豕㊣??∫?????“???“1-12㊣赤??㊣????“????13-32㊣赤???????“????
#define NAME_LEN                32      //???∫???∟??
#define MIN_PASSWD_LEN          8          //℅????????∟??
#define PASSWD_LEN                16      //?????∟??
#define STREAM_PASSWD_LEN         12      //???‾????????℅??車?∟??
#define MAX_PASSWD_LEN_EX            64      //?????∟??64??
#define GUID_LEN                16      //GUID?∟??
#define DEV_TYPE_NAME_LEN        24      //?豕㊣??角???????∟??
#define SERIALNO_LEN            48      //?辰?????∟??
#define MACADDR_LEN                6       //mac???﹞?∟??
#define MAC_ADDRESS_NUM         48      //Mac???﹞?∟??
#define MAX_SENCE_NUM           16      //???∼??
#define RULE_REGION_MAX         128      //℅??車???辰
#define MAX_ETHERNET            2       //?豕㊣?????????????
#define MAX_NETWORK_CARD        4       //?豕㊣?????℅??車???“????
#define MAX_NETWORK_CARD_EX     12      //?豕㊣?????℅??車???“????????
#define PATHNAME_LEN            128     //?﹞???∟??
#define MAX_PRESET_V13          16      //?∟????
#define MAX_TEST_COMMAND_NUM   32      //?迆??????㊣???℅????∟??
#define MAX_NUMBER_LEN            32        //????℅??車?∟??
#define MAX_NAME_LEN            128        //?豕㊣?????℅??車?∟??
#define MAX_INDEX_LED           8       //LED?‾??℅??車?? 2013-11-19
#define    MAX_CUSTOM_DIR            64      //℅??“??????℅??車?∟??
#define URL_LEN_V40             256        //℅??車URL?∟??
#define CLOUD_NAME_LEN          48      //??????﹞????‾???∫???∟??
#define CLOUD_PASSWD_LEN        48      //??????﹞????‾?????∟??
#define MAX_SENSORNAME_LEN      64      //?????‾?????∟??
#define MAX_SENSORCHAN_LEN      32      //?????‾?“???∟??
#define MAX_DESCRIPTION_LEN     32      //?????‾?豕???∟??
#define MAX_DEVNAME_LEN_EX      64      //?豕㊣??????∟??????
#define NET_SDK_MAX_FILE_PATH   256     //?????﹞???∟?? 
#define MAX_TMEVOICE_LEN        64      //TME??????㊣“?????∟??
#define ISO_8601_LEN            32      //ISO_8601?㊣???∟??
#define MODULE_INFO_LEN            32    //???谷?????∟??
#define VERSION_INFO_LEN        32    //∼?㊣??????∟??

#define MAX_NUM_INPUT_BOARD     512     //????∼?℅??車????
#define MAX_SHIPSDETE_REGION_NUM    8 // ?????足?????辰??㊣赤℅??車????

#define MAX_RES_NUM_ONE_VS_INPUT_CHAN  8  //?????谷?????????“???∫????﹞?㊣?????℅??車????
#define MAX_VS_INPUT_CHAN_NUM  16  //?谷?????????“??℅??車????

#define NET_SDK_MAX_FDID_LEN 256//??????ID℅??車?∟??
#define NET_SDK_MAX_PICID_LEN 256 //????ID℅??車?∟??
#define NET_SDK_FDPIC_CUSTOM_INFO_LEN 96 //??????????℅??“???????∟??
#define NET_DVR_MAX_FACE_ANALYSIS_NUM      32   //℅??車?∫????????????㊣????????????辰????
#define NET_DVR_MAX_FACE_SEARCH_NUM      5   //℅??車?∫?????‾???????辰????
#define NET_SDK_SECRETKEY_LEN      128   //?????????????∟??
#define NET_SDK_CUSTOM_LEN                  512 //℅??“??????℅??車?∟??
#define NET_SDK_CHECK_CODE_LEN          128//???谷???∟??
//?????角LED?????‾
#define  MAX_LEN_TEXT_CONTENT    128  //℅?﹞??????∟??
#define  MAX_NUM_INPUT_SOURCE_TEXT    32    //????????????????㊣?????
#define  MAX_NUM_OUTPUT_CHANNEL  512  //LED???辰∼邦??????????????

//℅??∼??????OSD
#define MAX_LEN_OSD_CONTENT  256  //OSD????℅??車?∟??
#define MAX_NUM_OSD_ONE_SUBWND  8  //????℅??∼???∫????℅??車OSD????
#define MAX_NUM_SPLIT_WND  64 //?????∼???∫????℅??車﹞????∼???????“??℅??∼????????
#define MAX_NUM_OSD 8

//2013-11-19
#define MAX_DEVNAME_LEN         32      //?豕㊣?????℅??車?∟??
#define MAX_LED_INFO            256     //????℅???????????℅??車?∟??
#define MAX_TIME_LEN            32      //?㊣??℅??車?∟??
#define MAX_CARD_LEN            24      //?“??℅??車?∟??
#define MAX_OPERATORNAME_LEN    32      //??℅‾???㊣????℅??車?∟??

#define THERMOMETRY_ALARMRULE_NUM 40     //??????㊣“?????辰??
#define MAX_THERMOMETRY_REGION_NUM  40  //???????足?????辰℅??車?∫????
#define MAX_THERMOMETRY_DIFFCOMPARISON_NUM  40 //??????????㊣“?????辰??
#define MAX_SHIPS_NUM           20      //?????足??℅??車??????
#define KEY_WORD_NUM             3 //???邦℅?????
#define KEY_WORD_LEN            128  //???邦℅??∟??
//?足?????????‾℅????那?“??
#define ASYN_LOGIN_SUCC            1        //?足??????????
#define ASYN_LOGIN_FAILED        0        //?足???????∫∼?

#define NET_SDK_MAX_VERIFICATION_CODE_LEN  32        //???????谷?∟???∟??
#define NET_SDK_MAX_OPERATE_CODE_LEN  64        //????????℅‾???∟??
#define MAX_TIMESEGMENT_V30        8       //9000?豕㊣?℅??車?㊣??????
#define MAX_TIMESEGMENT            4       //8000?豕㊣?℅??車?㊣??????
#define MAX_ICR_NUM             8       //℅????迆?足?????????∟??????2013-07-09
#define MAX_VEHICLEFLOW_INFO                       24       //???‾??????℅??車????
#define MAX_SHELTERNUM            4       //8000?豕㊣?℅??車???????辰??
#define MAX_DAYS                7       //?????足??
#define PHONENUMBER_LEN            32      //pppoe????????℅??車?∟??
#define MAX_ACCESSORY_CARD      256      //????∼?????℅??車?∟??
#define MAX_DISKNUM_V30            33        //9000?豕㊣?℅??車??????/* ℅??角33??????(∼邦?“16??????SATA??????1??eSATA??????16??NFS??) */

#define NET_SDK_DISK_LOCATION_LEN  16      //?????????∟??
#define NET_SDK_SUPPLIER_NAME_LEN  32      //???????????∟??
#define NET_SDK_DISK_MODEL_LEN     64      //?????????∟??
#define NET_SDK_MAX_DISK_VOLUME    33      //℅??車?????赤????
#define NET_SDK_DISK_VOLUME_LEN    36      //?????赤?????∟??

#define MAX_DISKNUM                16      //8000?豕㊣?℅??車??????
#define MAX_DISKNUM_V10            8       //1.2∼?㊣????∼∼?㊣?
#define CARD_READER_DESCRIPTION    32            //???“?‾?豕??
#define MAX_FACE_NUM               2             //℅??車??????

#define MAX_WINDOW_V30            32      //9000?豕㊣?㊣???????℅??車??﹞??∼????
#define MAX_WINDOW_V40            64      //Netra 2.3.1????
#define MAX_WINDOW                16      //8000?豕㊣?℅??車??????
#define MAX_VGA_V30                4       //9000?豕㊣?℅??車????VGA??
#define MAX_VGA                    1       //8000?豕㊣?℅??車????VGA??

#define MAX_USERNUM_V30            32      //9000?豕㊣?℅??車???∫??
#define MAX_USERNUM                16      //8000?豕㊣?℅??車???∫??
#define MAX_EXCEPTIONNUM_V30    32      //9000?豕㊣?℅??車?足?????赤??
#define MAX_EXCEPTIONNUM        16      //8000?豕㊣?℅??車?足?????赤??
#define MAX_LINK                6       //8000?豕㊣????“??℅??車?????‾??????
#define MAX_ITC_EXCEPTIONOUT    32      //℅????迆℅??車㊣“??????
#define MAX_SCREEN_DISPLAY_LEN            512    //????????℅?﹞??∟??

#define MAX_DECPOOLNUM            4       //???﹞?????‾?????????“??℅??車?????﹞??????
#define MAX_DECNUM                4       //???﹞?????‾??℅??車?????“?????“??????????????????????㊣?????
#define MAX_TRANSPARENTNUM        2       //???﹞?????‾??????℅??車???‾?“????
#define MAX_CYCLE_CHAN            16      //???﹞?????‾℅??車?????“????
#define MAX_CYCLE_CHAN_V30      64      //℅??車?????“?????“??????
#define MAX_DIRNAME_LENGTH        80      //℅??車?????∟??
#define MAX_WINDOWS                16      //℅??車?∼????


#define MAX_STRINGNUM_V30        8        //9000?豕㊣?℅??車OSD℅?﹞???????
#define MAX_STRINGNUM            4       //8000?豕㊣?℅??車OSD℅?﹞???????
#define MAX_STRINGNUM_EX        8       //8000?“??????
#define MAX_AUXOUT_V30            16      //9000?豕㊣?℅??車?“?迆??????
#define MAX_AUXOUT                4       //8000?豕㊣?℅??車?“?迆??????
#define MAX_HD_GROUP            16      //9000?豕㊣?℅??車????℅谷??
#define MAX_HD_GROUP_V40        32      //?豕㊣?℅??車????℅谷??
#define MAX_NFS_DISK            8       //8000?豕㊣?℅??車NFS??????
#define NET_SDK_VERSION_LIST_LEN 64 //??﹞“??∼?㊣?℅??車??
#define IW_ESSID_MAX_SIZE        32      //WIFI??SSID???∟??
#define IW_ENCODING_TOKEN_MAX    32      //WIFI????℅??車℅?????
#define MAX_SERIAL_NUM            64        //℅??角?∫???????‾?“???﹞??
#define MAX_DDNS_NUMS            10      //9000?豕㊣?℅??車????ddns??
#define MAX_DOMAIN_NAME            64        /* ℅??車?辰???∟?? */
#define MAX_EMAIL_ADDR_LEN        48      //℅??車email???﹞?∟??
#define MAX_EMAIL_PWD_LEN        32      //℅??車email?????∟??
#define MAX_SLAVECAMERA_NUM     8       //???????迆????
#define MAX_CALIB_NUM           6       //㊣那?“????????
#define MAX_CALIB_NUM_EX        20      //????㊣那?“????????   
#define MAX_LEDDISPLAYINFO_LEN  1024    //℅??車LED???????∟??
#define MAX_PEOPLE_DETECTION_NUM    8  //℅??車???㊣?足?????辰??
#define MAXPROGRESS                100     //??﹞??㊣??℅??車∼?﹞???
#define MAX_SERIALNUM            2       //8000?豕㊣??∫?????????? 1-232?? 2-485
#define CARDNUM_LEN                20      //?“???∟??
#define PATIENTID_LEN              64
#define CARDNUM_LEN_OUT            32      //?????芍?????“???∟??
#define MAX_VIDEOOUT_V30        4       //9000?豕㊣?????????????
#define MAX_VIDEOOUT            2       //8000?豕㊣?????????????

#define MAX_PRESET_V30            256        /* 9000?豕㊣??∫???????“?∟?????? */
#define MAX_TRACK_V30            256        /* 9000?豕㊣??∫???????“?足???? */
#define MAX_CRUISE_V30            256        /* 9000?豕㊣??∫???????“?????? */
#define MAX_PRESET                128        /* 8000?豕㊣??∫???????“?∟?????? */
#define MAX_TRACK                128        /* 8000?豕㊣??∫???????“?足???? */
#define MAX_CRUISE                128        /* 8000?豕㊣??∫???????“?????? */

#define MAX_PRESET_V40            300        /* ???“?∫????℅??車?∟?????? */
#define MAX_CRUISE_POINT_NUM    128     /* ℅??車?∫???????????????? */
#define MAX_CRUISEPOINT_NUM_V50 256     //℅??車?∫????????????????????

#define CRUISE_MAX_PRESET_NUMS    32         /* ????????℅??角???????? */
#define MAX_FACE_PIC_NUM        30      /*????℅???????*/
#define LOCKGATE_TIME_NUM       4       //?????㊣????????

#define MAX_SERIAL_PORT         8       //9000?豕㊣??∫??232??????
#define MAX_PREVIEW_MODE        8       /* ?豕㊣??∫??℅??車?∟?????????? 1????,4????,9????,16????.... */
#define MAX_MATRIXOUT           16      /* ℅??車???????車???????? */
#define LOG_INFO_LEN            11840   /* ???????????? */
#define DESC_LEN                16      /* ???“?豕??℅?﹞????∟?? */
#define PTZ_PROTOCOL_NUM        200     /* 9000℅??車?∫???????“???谷?? */
#define IPC_PROTOCOL_NUM        50   //ipc ???谷℅??車????

#define MAX_AUDIO                1       //8000?????????“????
#define MAX_AUDIO_V30            2       //9000?????????“????
#define MAX_CHANNUM                16      //8000?豕㊣?℅??車?“????
#define MAX_ALARMIN                16      //8000?豕㊣?℅??車㊣“????????
#define MAX_ALARMOUT            4       //8000?豕㊣?℅??車㊣“????????
//9000 IPC????
#define MAX_ANALOG_CHANNUM      32      //℅??車32???????“??
#define MAX_ANALOG_ALARMOUT     32      //℅??車32?﹞????㊣“?????? 
#define MAX_ANALOG_ALARMIN      32      //℅??車32?﹞????㊣“??????

#define MAX_IP_DEVICE           32      //???赤??????℅??車IP?豕㊣???
#define MAX_IP_DEVICE_V40       64      // ???赤??????℅??車IP?豕㊣??? ℅??角???赤??64?? IVMS 2000?????豕㊣?
#define MAX_IP_CHANNEL          32      //???赤??????℅??角IP?“????
#define MAX_IP_ALARMIN          128     //???赤??????℅??角㊣“????????
#define MAX_IP_ALARMOUT         64      //???赤??????℅??角㊣“????????
#define MAX_IP_ALARMIN_V40      4096    //???赤??????℅??角㊣“????????
#define MAX_IP_ALARMOUT_V40     4096    //???赤??????℅??角㊣“????????

#define MAX_RECORD_FILE_NUM     20      // ?????????辰????????℅??車??????
//SDK_V31 ATM
#define MAX_ACTION_TYPE            12        //℅??“?????谷???????℅????℅??車???????? 
#define MAX_ATM_PROTOCOL_NUM    256   //????????﹞?????????ATM℅??車???谷??
#define ATM_CUSTOM_PROTO        1025   //℅??“?????谷 ????1025
#define ATM_PROTOCOL_SORT       4       //ATM???谷???? 
#define ATM_DESC_LEN            32      //ATM?豕??℅?﹞????∟??
// SDK_V31 ATM


#define MAX_IPV6_LEN              64   //IPv6???﹞℅??車?∟??
#define MAX_EVENTID_LEN         64   //????ID?∟??

#define INVALID_VALUE_UINT32    0xffffffff   //???∫??
#define MAX_CHANNUM_V40         512
#define MAX_MULTI_AREA_NUM      24

//SDK ?????‾?迆
#define COURSE_NAME_LEN                32    //????????
#define INSTRUCTOR_NAME_LEN            16    //????????
#define COURSE_DESCRIPTION_LEN        256    //????????

#define MAX_TIMESEGMENT_V40            16    //??????????


#define MAX_MIX_CHAN_NUM        16    /*???∼?∫????℅??車?足???“??????㊣??∼?“?? + MIC + LINE IN + ℅??角4????????*/ 
#define MAX_LINE_IN_CHAN_NUM    16    //℅??車line in?“????
#define MAX_MIC_CHAN_NUM        16    //℅??車MIC?“????
#define INQUEST_CASE_NO_LEN        64    //?車??∼???㊣角???∟??
#define INQUEST_CASE_NAME_LEN    64    //?車??∼????????∟??
#define CUSTOM_INFO_LEN            64    //℅??“???????∟??
#define INQUEST_CASE_LEN        64    //?車???????∟??


#define MAX_FILE_ID_LEN         128    //????????????????ID??℅??車?∟??
#define MAX_PIC_NAME_LEN        128 //?????????∟??

/* ℅??車?∫?????“???? ℅??車????????℅??車IP?∫?? */
#define MAX_CHANNUM_V30               ( MAX_ANALOG_CHANNUM + MAX_IP_CHANNEL )//64
#define MAX_ALARMOUT_V40             (MAX_IP_ALARMOUT_V40 +MAX_ANALOG_ALARMOUT) //4128
#define MAX_ALARMOUT_V30              ( MAX_ANALOG_ALARMOUT + MAX_IP_ALARMOUT )//96
#define MAX_ALARMIN_V30               ( MAX_ANALOG_ALARMIN + MAX_IP_ALARMIN )//160
#define MAX_ALARMIN_V40             (MAX_IP_ALARMIN_V40 +MAX_ANALOG_ALARMOUT) //4128
#define MAX_ANALOG_ALARM_WITH_VOLT_LIMIT    16 //?????????“??????㊣“??℅??車??????

#define MAX_ROIDETECT_NUM       8    //?∫????ROI???辰??
#define MAX_LANERECT_NUM        5    //℅??車??????㊣????辰??
#define MAX_FORTIFY_NUM         10   //℅??車??﹞?????
#define MAX_INTERVAL_NUM        4    //℅??車?㊣??????????
#define MAX_CHJC_NUM            3    //℅??車??????﹞??辰??℅?﹞?????
#define MAX_VL_NUM              5    //℅??車?谷??????????
#define MAX_DRIVECHAN_NUM       16   //℅??車??????
#define MAX_COIL_NUM            3    //℅??車????????
#define MAX_SIGNALLIGHT_NUM     6   //℅??車??????????
#define LEN_16                    16
#define LEN_32                    32
#define LEN_64                    64
#define LEN_31                    31 
#define	MAX_LINKAGE_CHAN_NUM      16  //㊣“?????????“????℅??車????
#define MAX_CABINET_COUNT       8    //℅??車?∫???迆??????
#define MAX_ID_LEN              48
#define MAX_PARKNO_LEN          16
#define MAX_ALARMREASON_LEN     32
#define MAX_UPGRADE_INFO_LEN    48 //????????????????????(????????)
#define MAX_CUSTOMDIR_LEN       32 //℅??“???????∟??
#define MAX_LED_INFO_LEN        512//LED?????∟??
#define MAX_VOICE_INFO_LEN      128//??????㊣“?????∟??
#define MAX_LITLE_INFO_LEN      64 //???㊣㊣那???????∟??
#define MAX_CUSTOM_INFO_LEN     64 //???㊣℅??“???????????∟??
#define MAX_PHONE_NUM_LEN       16 //???????∼?????∟??
#define MAX_APP_SERIALNUM_LEN   32 //?????辰?????∟??

#define AUDIOTALKTYPE_G722       0
#define AUDIOTALKTYPE_G711_MU    1
#define AUDIOTALKTYPE_G711_A     2
#define AUDIOTALKTYPE_MP2L2      5
#define AUDIOTALKTYPE_G726         6
#define AUDIOTALKTYPE_AAC         7
#define AUDIOTALKTYPE_PCM         8
#define AUDIOTALKTYPE_G722C       9
#define AUDIOTALKTYPE_MP3         15

//packet type
#define FILE_HEAD            0 //file head
#define VIDEO_I_FRAME        1 //video I frame
#define VIDEO_B_FRAME        2 //video B frame
#define VIDEO_P_FRAME        3 //video P frame
#define AUDIO_PACKET        10 //audio packet
#define PRIVT_PACKET        11 //private packet
//E frame
#define HIK_H264_E_FRAME    (1 << 6)   // ???∼E????????,??P??????????
#define MAX_TRANSPARENT_CHAN_NUM      4   //???????????赤?“????℅??車???‾?“????
#define MAX_TRANSPARENT_ACCESS_NUM    4   //?????角?????????赤??????℅??車?‾?迆??

//ITS
#define MAX_PARKING_STATUS       8    //????℅??? 0?迆㊣赤??????1?迆㊣赤??????2?迆㊣赤????(??????℅???), 3???????? 
#define MAX_PARKING_NUM             4    //?????“??℅??車4?????? (??℅車???????? ??℅谷0??3)

#define MAX_ITS_SCENE_NUM        16   //℅??車???∼????
#define MAX_SCENE_TIMESEG_NUM    16   //℅??車???∼?㊣????????
#define MAX_IVMS_IP_CHANNEL      128  //℅??車IP?“????
#define DEVICE_ID_LEN            48   //?豕㊣?㊣角???∟??
#define MONITORSITE_ID_LEN       48   //?角????㊣角???∟??
#define MAX_AUXAREA_NUM          16   //?“?迆???辰℅??車????
#define MAX_SLAVE_CHANNEL_NUM    16   //℅??車???“??????
#define MAX_DEVDESC_LEN          64   //?豕㊣??豕??????℅??車?∟??
#define ILLEGAL_LEN       32      //??﹞“?迆???∟??
#define MAX_TRUCK_AXLE_NUM      10      //?????芍℅??車??
#define MAX_CATEGORY_LEN        8       //????????????℅??車℅?﹞?
#define SERIAL_NO_LEN           16      //??????㊣角??


#define MAX_SECRETKEY_LEN           512     //℅??車?????∟??
#define MAX_INDEX_CODE_LEN          64      //℅??車?辰???∟??
#define MAX_ILLEGAL_LEN          64     //??﹞“?迆??℅??車℅?﹞??∟??
#define CODE_LEN        64  //???“??
#define ALIAS_LEN       32  //㊣?????????
#define MAX_SCH_TASKS_NUM        10

#define MAX_SERVERID_LEN            64 //℅??車﹞????‾ID???∟??
#define MAX_SERVERDOMAIN_LEN        128 //﹞????‾?辰??℅??車?∟??
#define MAX_AUTHENTICATEID_LEN      64 //???∟ID℅??車?∟??
#define MAX_AUTHENTICATEPASSWD_LEN  32 //???∟????℅??車?∟??
#define MAX_SERVERNAME_LEN          64 //℅??車﹞????‾???∫?? 
#define MAX_COMPRESSIONID_LEN       64 //㊣角??ID??℅??車?∟??
#define MAX_SIPSERVER_ADDRESS_LEN   128 //SIP﹞????‾???﹞?∫???辰????IP???﹞
//????㊣“??
#define MAX_PlATE_NO_LEN            32   //????????℅??車?∟?? 2013-09-27
#define UPNP_PORT_NUM                12      //upnp????????????????

#define MAX_PEOPLE_DETECTION_NUM    8  //℅??車???㊣?足?????辰??

#define MAX_NOTICE_NUMBER_LEN       32   //????㊣角??℅??車?∟??
#define MAX_NOTICE_THEME_LEN        64   //?????‾??℅??車?∟??
#define MAX_NOTICE_DETAIL_LEN       1024 //?????那?谷℅??車?∟??
#define MAX_NOTICE_PIC_NUM          6    //????????℅??車????????
#define MAX_DEV_NUMBER_LEN          32   //?豕㊣?㊣角??℅??車?∟??
#define LOCK_NAME_LEN                   32  //??????


#define HOLIDAY_GROUP_NAME_LEN          32  //????℅谷?????∟??
#define MAX_HOLIDAY_PLAN_NUM            16  //????℅谷℅??車??????????
#define TEMPLATE_NAME_LEN               32  //??????∼??????∟??
#define MAX_HOLIDAY_GROUP_NUM           16   //??????∼?℅??車????℅谷??
#define DOOR_NAME_LEN                   32  //??????
#define STRESS_PASSWORD_LEN             8   //?????????∟??
#define SUPER_PASSWORD_LEN              8   //?????????∟??
#define GROUP_NAME_LEN                  32  //??℅谷?????∟??
#define GROUP_COMBINATION_NUM           8   //??℅谷℅谷????
#define MULTI_CARD_GROUP_NUM            4   //????℅??車?角???“℅谷??
#define ACS_CARD_NO_LEN                 32  //?????“???∟??
#define NET_SDK_EMPLOYEE_NO_LEN         32  //?∟???∟??
#define NET_SDK_UUID_LEN                36  //UUID?∟??
#define NET_SDK_EHOME_KEY_LEN           32  //EHome Key?∟??
#define CARD_PASSWORD_LEN               8   //?“?????∟??
#define MAX_DOOR_NUM                    32  //℅??車????
#define MAX_CARD_RIGHT_PLAN_NUM         4   //?“?“??℅??車????????
#define MAX_GROUP_NUM_128               128 //℅??車??℅谷??
#define MAX_CARD_READER_NUM             64  //℅??車???“?‾??
#define MAX_SNEAK_PATH_NODE             8   //℅??車?車?????“?‾??
#define MAX_MULTI_DOOR_INTERLOCK_GROUP  8   //℅??車?角??????℅谷??
#define MAX_INTER_LOCK_DOOR_NUM         8   //?????角??????℅谷??℅??車????????
#define MAX_CASE_SENSOR_NUM             8   //℅??車case sensor??﹞??‾??
#define MAX_DOOR_NUM_256                256 //℅??車????
#define MAX_READER_ROUTE_NUM            16  //℅??車???“???辰?﹞?? 
#define MAX_FINGER_PRINT_NUM            10  //℅??車????????
#define MAX_CARD_READER_NUM_512            512 //℅??車???“?‾??
#define NET_SDK_MULTI_CARD_GROUP_NUM_20     20   //????℅??車?角???“℅谷??

#define ERROR_MSG_LEN      32 //??﹞??赤?車????
#define MAX_DOOR_CODE_LEN               8 //﹞????迆???∟??
#define MAX_LOCK_CODE_LEN               8 //???迆???∟??
#define PER_RING_PORT_NUM                2   //?????﹞????????
#define SENSORNAME_LEN                  32  //?????‾?????∟??
#define MAX_SENSORDESCR_LEN             64  //?????‾?豕???∟??
#define MAX_DNS_SERVER_NUM              2 //℅??車DNS????
#define SENSORUNIT_LEN                  32 //℅??車?????∟??

#define WEP_KEY_MAX_SIZE                32 //℅??車WEP?????????∟??
#define WEP_KEY_MAX_NUM                 4  //℅??車WEP????????????
#define WPA_KEY_MAX_SIZE                64 //℅??車WPA???赤?????∟??

#define MAX_SINGLE_FTPPICNAME_LEN       20 //℅??車????FTP?“??????
#define MAX_CAMNAME_LEN                 32 //℅??車?“??????
#define MAX_FTPNAME_NUM                 12 //TFP??????


#define MAX_IDCODE_LEN      128 //  ??㊣???℅??車?∟??
#define MAX_VERSIIN_LEN     64  //∼?㊣?℅??車?∟??
#define MAX_IDCODE_NUM      32  // ??㊣???????
#define SDK_LEN_2048        2048
#define SDK_MAX_IP_LEN 48

#define RECT_POINT_NUM                    4    //????????

#define MAX_PUBLIC_KEY_LEN 512 // ℅??車?????∟??
#define CHIP_SERIALNO_LEN 32 //?????????辰?????∟??
#define ENCRYPT_DEV_ID_LEN        20  //?豕㊣?ID?∟??

//MCU?角????
#define MAX_SEARCH_ID_LEN               36  //???‾㊣那??﹞?℅??車?∟??
#define TERMINAL_NAME_LEN               64  //?????????∟??
#define MAX_URL_LEN                     512 //URL?∟??
#define REGISTER_NAME_LEN               64 //????℅??芍GK????℅??車?∟??

//????
#define MAX_PORT_NUM            64  //℅??車??????
#define MAX_SINGLE_CARD_PORT_NO 4   //??????﹞??‾???“℅??車??????
#define MAX_FUNC_CARD_NUM       32  //??????﹞??‾℅??車?????“??
#define MAX_FC_CARD_NUM         33  //??????﹞??‾℅??車?“??
#define MAX_REMARKS_LEN         128 //℅???℅??車?∟??
#define MAX_OUTPUT_PORT_NUM                32    //???﹞????∼邦????℅??車??????????
#define MAX_SINGLE_PORT_RECVCARD_NUM    64    //??????????????℅??車?????“??
#define MAX_GAMMA_X_VALUE                256    //GAMMA㊣赤X?芍????????
#define NET_DEV_NAME_LEN        64  //?豕㊣??????∟??
#define NET_DEV_TYPE_NAME_LEN  64  //?豕㊣??角???????∟??
#define ABNORMAL_INFO_NUM               4        //?足???㊣????????

#define PLAYLIST_NAME_LEN                64            //??﹞?㊣赤?????∟?? 
#define PLAYLIST_ITEM_NUM                64            //??﹞???????  

//?車???角??
#define NET_SDK_MAX_LOGIN_PASSWORD_LEN           128 //???∫????????℅??車?∟??
#define NET_SDK_MAX_ANSWER_LEN                   256 //∼?????????∼?℅??車?∟??
#define NET_SDK_MAX_QUESTION_LIST_LEN            32//∼?????????㊣赤℅??車?∟??

#define  MAX_SCREEN_AREA_NUM  128  //???????辰℅??車????
#define NET_SDK_MAX_THERMOMETRYALGNAME           128//??????﹞“??∼?㊣?℅??車?∟??
#define NET_SDK_MAX_SHIPSALGNAME                 128//??????﹞“??∼?㊣?℅??車?∟??
#define NET_SDK_MAX_FIRESALGNAME                 128//??????﹞“??∼?㊣?℅??車?∟??

#define MAX_PASSPORT_NUM_LEN          16     //℅??車?∟???∟?????∟??
#define MAX_PASSPORT_INFO_LEN         128    //℅??車?∟???“???????∟??
#define MAX_PASSPORT_NAME_LEN         64     //℅??車?∟???????∟??
#define MAX_PASSPORT_MONITOR_LEN      1024   //℅??車?∟???角?∟?????∟??
#define MAX_NATIONALITY_LEN           16     //℅??車?∟???迆???∟??
#define MAX_PASSPORT_TYPE_LEN         4      //℅??車?∟???∟???角???∟??

/*******************?????赤?車?? begin**********************/
#define NET_DVR_NOERROR                     0    //?????赤?車
#define NET_DVR_PASSWORD_ERROR                 1    //???∫???????赤?車
#define NET_DVR_NOENOUGHPRI                 2    //?“????℅?
#define NET_DVR_NOINIT                         3    //??????????
#define NET_DVR_CHANNEL_ERROR                 4    //?“?????赤?車
#define NET_DVR_OVER_MAXLINK                 5    //??????DVR?????∫??????????℅??車
#define NET_DVR_VERSIONNOMATCH                6    //∼?㊣???????
#define NET_DVR_NETWORK_FAIL_CONNECT        7    //????﹞????‾?∫∼?
#define NET_DVR_NETWORK_SEND_ERROR            8    //?辰﹞????‾﹞????∫∼?
#define NET_DVR_NETWORK_RECV_ERROR            9    //??﹞????‾?????????∫∼?
#define NET_DVR_NETWORK_RECV_TIMEOUT        10    //??﹞????‾???????????㊣
#define NET_DVR_NETWORK_ERRORDATA            11    //?????????????車
#define NET_DVR_ORDER_ERROR                    12    //?‾?????辰?赤?車
#define NET_DVR_OPERNOPERMIT                13    //?????“??
#define NET_DVR_COMMANDTIMEOUT                14    //DVR?邦?????????㊣
#define NET_DVR_ERRORSERIALPORT                15    //???????赤?車
#define NET_DVR_ERRORALARMPORT                16    //㊣“???????赤?車
#define NET_DVR_PARAMETER_ERROR             17  //?????赤?車
#define NET_DVR_CHAN_EXCEPTION                18    //﹞????‾?“???????赤?車℅???
#define NET_DVR_NODISK                        19    //????????
#define NET_DVR_ERRORDISKNUM                20    //???????赤?車
#define NET_DVR_DISK_FULL                    21    //﹞????‾?????迆
#define NET_DVR_DISK_ERROR                    22    //﹞????‾???????赤
#define NET_DVR_NOSUPPORT                    23    //﹞????‾???∫??
#define NET_DVR_BUSY                        24    //﹞????‾??
#define NET_DVR_MODIFY_FAIL                    25    //﹞????‾??????????
#define NET_DVR_PASSWORD_FORMAT_ERROR        26    //?????????????????﹞
#define NET_DVR_DISK_FORMATING                27    //??????????????????????????℅‾
#define NET_DVR_DVRNORESOURCE                28    //DVR℅?????℅?
#define    NET_DVR_DVROPRATEFAILED                29  //DVR??℅‾?∫∼?
#define NET_DVR_OPENHOSTSOUND_FAIL             30  //?辰??PC?迄???∫∼?
#define NET_DVR_DVRVOICEOPENED                 31  //﹞????‾????????㊣?????
#define    NET_DVR_TIMEINPUTERROR                32  //?㊣???????????﹞
#define    NET_DVR_NOSPECFILE                    33  //??﹞??㊣﹞????‾???????“??????
#define NET_DVR_CREATEFILE_ERROR            34    //???“???????赤
#define    NET_DVR_FILEOPENFAIL                35  //?辰?????????赤
#define    NET_DVR_OPERNOTFINISH                36  //????????℅‾???????那??
#define    NET_DVR_GETPLAYTIMEFAIL                37  //?????㊣?∼??﹞????㊣?????赤
#define    NET_DVR_PLAYFAIL                    38  //??﹞????赤
#define NET_DVR_FILEFORMAT_ERROR            39  //?????????????﹞
#define NET_DVR_DIR_ERROR                    40    //?﹞???赤?車
#define NET_DVR_ALLOC_RESOURCE_ERROR        41  //℅???﹞????赤?車
#define NET_DVR_AUDIO_MODE_ERROR            42    //?迄?“?????赤?車
#define NET_DVR_NOENOUGH_BUF                43    //??????????
#define NET_DVR_CREATESOCKET_ERROR             44    //???“SOCKET???赤
#define NET_DVR_SETSOCKET_ERROR                45    //?豕??SOCKET???赤
#define NET_DVR_MAX_NUM                        46    //????????℅??車
#define NET_DVR_USERNOTEXIST                47    //???∫??????
#define NET_DVR_WRITEFLASHERROR                48  //??FLASH???赤
#define NET_DVR_UPGRADEFAIL                    49  //DVR?????∫∼?
#define NET_DVR_CARDHAVEINIT                50  //?????“????????????
#define NET_DVR_PLAYERFAILED                51    //?‾????﹞??????????????∫∼?
#define NET_DVR_MAX_USERNUM                    52  //?豕㊣??????∫??????℅??車
#define NET_DVR_GETLOCALIPANDMACFAIL        53  //???????∫????IP???﹞?辰???赤???﹞?∫∼?
#define NET_DVR_NOENCODEING                    54    //???“??????㊣角??
#define NET_DVR_IPMISMATCH                    55    //IP???﹞??????
#define NET_DVR_MACMISMATCH                    56    //MAC???﹞??????
#define NET_DVR_UPGRADELANGMISMATCH            57    //??????????????????
#define NET_DVR_MAX_PLAYERPORT                58    //??﹞??‾?﹞??????℅??車
#define NET_DVR_NOSPACEBACKUP                59    //㊣?﹞??豕㊣???????℅???????????㊣?﹞?
#define NET_DVR_NODEVICEBACKUP                60    //???????????“??㊣?﹞??豕㊣?
#define NET_DVR_PICTURE_BITS_ERROR            61    //????????????﹞?????24??
#define NET_DVR_PICTURE_DIMENSION_ERROR        62    //??????*?赤?????? ??128*256
#define NET_DVR_PICTURE_SIZ_ERROR            63    //?????車??????????100K
#define NET_DVR_LOADPLAYERSDKFAILED            64    //?????㊣?∼??????Player Sdk???赤
#define NET_DVR_LOADPLAYERSDKPROC_ERROR        65    //??????Player Sdk??????????????
#define NET_DVR_LOADDSSDKFAILED                66    //?????㊣?∼??????DSsdk???赤
#define NET_DVR_LOADDSSDKPROC_ERROR            67    //??????DsSdk??????????????
#define NET_DVR_DSSDK_ERROR                    68    //?‾??????????DsSdk???????????∫∼?
#define NET_DVR_VOICEMONOPOLIZE                69    //?迄?“㊣?????
#define NET_DVR_JOINMULTICASTFAILED            70    //?????角??℅谷?∫∼?
#define NET_DVR_CREATEDIR_ERROR                71    //?“???????????????∫∼?
#define NET_DVR_BINDSOCKET_ERROR            72    //∼車?“?℅??℅??∫∼?
#define NET_DVR_SOCKETCLOSE_ERROR            73    //socket?????????????赤?車?“?????????????????辰????????????
#define NET_DVR_USERID_ISUSING                74    //℅??迆?㊣???∫ID????????????℅‾
#define NET_DVR_SOCKETLISTEN_ERROR            75    //?角???∫∼?
#define NET_DVR_PROGRAM_EXCEPTION            76    //???辰?足??
#define NET_DVR_WRITEFILE_FAILED            77    //???????∫∼?
#define NET_DVR_FORMAT_READONLY                78  //??????????????????
#define NET_DVR_WITHSAMEUSERNAME            79  //???∫?????芍?????????角???????∫??
#define NET_DVR_DEVICETYPE_ERROR            80  /*?????????㊣?豕㊣???????????*/
#define NET_DVR_LANGUAGE_ERROR              81  /*?????????㊣??????????*/
#define NET_DVR_PARAVERSION_ERROR           82  /*?????????㊣?赤??∼?㊣???????*/
#define NET_DVR_IPCHAN_NOTALIVE             83  /*?∟???㊣????IP?“????????*/
#define NET_DVR_RTSP_SDK_ERROR                84    /*????????IPC?“????StreamTransClient.dll?∫∼?*/
#define NET_DVR_CONVERT_SDK_ERROR            85    /*????℅??????∫∼?*/
#define NET_DVR_IPC_COUNT_OVERFLOW            86  /*????℅??車??ip?????“????*/
#define NET_DVR_MAX_ADD_NUM                 87  /*?赤??㊣那??(????????????64)??????????℅??車*/
#define NET_DVR_PARAMMODE_ERROR             88 //?????????????????????赤?車?“?????????豕???㊣?????∫???????赤???豕???㊣?赤?車????
#define NET_DVR_CODESPITTER_OFFLINE            89 //????℅??????“????﹞??‾??????
#define NET_DVR_BACKUP_COPYING                90  //?豕㊣?????㊣?﹞?
#define NET_DVR_CHAN_NOTSUPPORT             91  // ?“?????∫??????℅‾
#define NET_DVR_CALLINEINVALID              92  // ?????????????????辰?∟???????????㊣ 
#define NET_DVR_CALCANCELCONFLICT           93  // ????㊣那?“???????????豕???????辰?∼???????????車??????????
#define NET_DVR_CALPOINTOUTRANGE            94     // ㊣那?“??????﹞??∫ 
#define NET_DVR_FILTERRECTINVALID           95  // ?????????‾??﹞??????車
#define NET_DVR_DDNS_DEVOFFLINE             96  //?豕㊣?????℅??芍??ddns??
#define NET_DVR_DDNS_INTER_ERROR            97  //DDNS ﹞????‾?????赤?車
#define NET_DVR_FUNCTION_NOT_SUPPORT_OS     98  //?????????∫??????℅‾????
#define NET_DVR_DEC_CHAN_REBIND             99  //?????“??∼車?“????????????????
#define NET_DVR_INTERCOM_SDK_ERROR          100 //?????㊣?∼???????????????????∫∼?
#define NET_DVR_NO_CURRENT_UPDATEFILE       101 //???????﹞??????∼邦  
#define NET_DVR_USER_NOT_SUCC_LOGIN         102  //???∫????????????
#define NET_DVR_USE_LOG_SWITCH_FILE            103  //????????????????????
#define NET_DVR_POOL_PORT_EXHAUST            104  //????????????∼車?“????????????
#define    NET_DVR_PACKET_TYPE_NOT_SUPPORT        105    //???‾﹞?℅∼?????赤?車
#define NET_DVR_IPPARA_IPID_ERROR           106  //IP?????????㊣IPID???車

#define NET_DVR_LOAD_HCPREVIEW_SDK_ERROR           107         //?∟??℅谷???????∫∼?
#define NET_DVR_LOAD_HCVOICETALK_SDK_ERROR         108         //????℅谷???????∫∼?
#define NET_DVR_LOAD_HCALARM_SDK_ERROR             109         //㊣“??℅谷???????∫∼?
#define NET_DVR_LOAD_HCPLAYBACK_SDK_ERROR          110         //??﹞?℅谷???????∫∼?
#define NET_DVR_LOAD_HCDISPLAY_SDK_ERROR           111         //????℅谷???????∫∼?
#define NET_DVR_LOAD_HCINDUSTRY_SDK_ERROR          112         //????????℅谷???????∫∼?
#define NET_DVR_LOAD_HCGENERALCFGMGR_SDK_ERROR     113         //?“?????????赤℅谷???????∫∼?
#define NET_DVR_LOAD_HCCOREDEVCFG_SDK_ERROR        114         //?豕㊣?????????℅谷???????∫∼?
#define NET_DVR_LOAD_HCNETUTILS_SDK_ERROR          115         //HCNetUtils?????∫∼?

#define NET_DVR_CORE_VER_MISMATCH                  121    //????????℅谷???㊣??℅谷????core∼?㊣???????
#define NET_DVR_CORE_VER_MISMATCH_HCPREVIEW        122    //?∟??℅谷????core∼?㊣???????
#define NET_DVR_CORE_VER_MISMATCH_HCVOICETALK      123    //????℅谷????core∼?㊣???????
#define NET_DVR_CORE_VER_MISMATCH_HCALARM          124    //㊣“??℅谷????core∼?㊣???????
#define NET_DVR_CORE_VER_MISMATCH_HCPLAYBACK       125    //??﹞?℅谷????core∼?㊣???????
#define NET_DVR_CORE_VER_MISMATCH_HCDISPLAY        126    //????℅谷????core∼?㊣???????
#define NET_DVR_CORE_VER_MISMATCH_HCINDUSTRY       127    //????????℅谷????core∼?㊣???????
#define NET_DVR_CORE_VER_MISMATCH_HCGENERALCFGMGR  128    //?“?????????赤℅谷????core∼?㊣???????

#define NET_DVR_COM_VER_MISMATCH_HCPREVIEW         136    //?∟??℅谷????HCNetSDK∼?㊣???????
#define NET_DVR_COM_VER_MISMATCH_HCVOICETALK       137    //????℅谷????HCNetSDK∼?㊣???????
#define NET_DVR_COM_VER_MISMATCH_HCALARM           138    //㊣“??℅谷????HCNetSDK∼?㊣???????
#define NET_DVR_COM_VER_MISMATCH_HCPLAYBACK        139    //??﹞?℅谷????HCNetSDK∼?㊣???????
#define NET_DVR_COM_VER_MISMATCH_HCDISPLAY         140    //????℅谷????HCNetSDK∼?㊣???????
#define NET_DVR_COM_VER_MISMATCH_HCINDUSTRY        141    //????????℅谷????HCNetSDK∼?㊣???????
#define NET_DVR_COM_VER_MISMATCH_HCGENERALCFGMGR   142    //?“?????????赤℅谷????HCNetSDK∼?㊣???????

#define NET_ERR_CONFIG_FILE_IMPORT_FAILED          145  //?????????????∫∼?
#define NET_ERR_CONFIG_FILE_EXPORT_FAILED          146  //?????????????∫∼?

#define NET_DVR_ALIAS_DUPLICATE                150    //㊣???????  //2011-08-31 ?“??㊣????辰???辰??????﹞????豕㊣?????∼?㊣?ddns??????
#define    NET_DVR_INVALID_COMMUNICATION        151    //???∫?“??
#define    NET_DVR_USERNAME_NOT_EXIST            152    //???∫?????????“???∫??????????IPC5.1.7??﹞????????????迄???????????車?????迆?﹞?????赤?車??????????
#define    NET_DVR_USER_LOCKED                    153 //???∫㊣????“
#define NET_DVR_INVALID_USERID              154 //???∫???∫ID
#define NET_DVR_LOW_LOGIN_VERSION           155 //????∼?㊣???
#define NET_DVR_LOAD_LIBEAY32_DLL_ERROR     156 //????libeay32.dll???∫∼?
#define NET_DVR_LOAD_SSLEAY32_DLL_ERROR     157 //????ssleay32.dll???∫∼?
#define NET_ERR_LOAD_LIBICONV           158 //????libiconv???∫∼?
#define NET_ERR_SSL_CONNECT_FAILED      159 //SSL?????∫∼?
#define NET_ERR_MCAST_ADDRESS_ERROR      160 //?????角?????﹞?赤?車

#define NET_DVR_SERVER_NOT_EXIST         164 //??????﹞????‾??????,?谷???㊣???????迆??㊣角???辰??﹞????‾?角???赤?車
#define NET_DVR_TEST_SERVER_FAIL_CONNECT            165    //????????﹞????‾?∫∼?
#define NET_DVR_NAS_SERVER_INVALID_DIR                166    //NAS﹞????‾?????????∫∼??????????∫
#define NET_DVR_NAS_SERVER_NOENOUGH_PRI                167    //NAS﹞????‾?????????∫∼????????“??
#define NET_DVR_EMAIL_SERVER_NOT_CONFIG_DNS            168    //﹞????‾?????辰????????????????DNS???????足???辰?????∫??
#define    NET_DVR_EMAIL_SERVER_NOT_CONFIG_GATEWAY        169    //???????????????????足??﹞????????∫∼???
#define    NET_DVR_TEST_SERVER_PASSWORD_ERROR            170    //???∫???????????﹞??????﹞????‾?????∫???辰?????赤?車
#define    NET_DVR_EMAIL_SERVER_CONNECT_EXCEPTION_WITH_SMTP    171    //?豕㊣???smtp﹞????‾?????足??
#define    NET_DVR_FTP_SERVER_FAIL_CREATE_DIR            172    //FTP﹞????‾???“?????∫∼?
#define    NET_DVR_FTP_SERVER_NO_WRITE_PIR                173    //FTP﹞????‾?????????“??
#define    NET_DVR_IP_CONFLICT                            174    //IP????
#define NET_DVR_INSUFFICIENT_STORAGEPOOL_SPACE      175  //?????????????迆
#define NET_DVR_STORAGEPOOL_INVALID      176  //??﹞????‾?????????∫,???????????????辰????????ID?赤?車
#define NET_DVR_EFFECTIVENESS_REBOOT     177  //?迆?∫?豕??????
#define NET_ERR_ANR_ARMING_EXIST         178  //??????????﹞?????????????(???赤?車??????HIK??????﹞??????“?????谷????????????﹞????????????????㊣??﹞?????)
#define NET_ERR_UPLOADLINK_EXIST         179  //????????????????????????(EHOME???谷??HIK SDK???谷?????????㊣?∫???????????????㊣???????谷???????㊣?辰???赤???????????“???∼??㊣“?赤?????赤?車????)
#define NET_ERR_INCORRECT_FILE_FORMAT    180  //?????????????????﹞
#define NET_ERR_INCORRECT_FILE_CONTENT   181  //?????????????????﹞
#define NET_ERR_MAX_HRUDP_LINK           182 //HRUDP ?????? ?????豕㊣?????
// 2010-5-28
// ?車???赤?車??
#define RAID_ERROR_INDEX                    200
#define NET_DVR_NAME_NOT_ONLY               (RAID_ERROR_INDEX + 0)  // ??????????
#define NET_DVR_OVER_MAX_ARRAY              (RAID_ERROR_INDEX + 1 ) // ?車??????????
#define NET_DVR_OVER_MAX_VD                 (RAID_ERROR_INDEX + 2 ) // ?谷??????????????
#define NET_DVR_VD_SLOT_EXCEED              (RAID_ERROR_INDEX + 3 ) // ?谷?????????????迆
#define NET_DVR_PD_STATUS_INVALID           (RAID_ERROR_INDEX + 4 ) // ???“?車???迄?豕???赤????℅????赤?車
#define NET_DVR_PD_BE_DEDICATE_SPARE        (RAID_ERROR_INDEX + 5 ) // ???“?車???迄?豕???赤?????????“??㊣?
#define NET_DVR_PD_NOT_FREE                 (RAID_ERROR_INDEX + 6 ) // ???“?車???迄?豕???赤????﹞?????
#define NET_DVR_CANNOT_MIG2NEWMODE          (RAID_ERROR_INDEX + 7 ) // ???????㊣?∼???車???角???“?????????車???角??
#define NET_DVR_MIG_PAUSE                   (RAID_ERROR_INDEX + 8 ) // ?“????℅‾??????
#define NET_DVR_MIG_CANCEL                  (RAID_ERROR_INDEX + 9 ) // ???????????“????℅‾??????
#define NET_DVR_EXIST_VD                    (RAID_ERROR_INDEX + 10) // ?車?????車?????????谷??????????﹞“?????車??
#define NET_DVR_TARGET_IN_LD_FUNCTIONAL     (RAID_ERROR_INDEX + 11) // ???車???赤???????谷??????℅谷????﹞????∟℅‾????
#define NET_DVR_HD_IS_ASSIGNED_ALREADY      (RAID_ERROR_INDEX + 12) // ???“?????赤????㊣?﹞??????谷??????
#define NET_DVR_INVALID_HD_COUNT            (RAID_ERROR_INDEX + 13) // ???赤?????????????“??RAID??????????
#define NET_DVR_LD_IS_FUNCTIONAL            (RAID_ERROR_INDEX + 14) // ?車??????????﹞“???“
#define NET_DVR_BGA_RUNNING                 (RAID_ERROR_INDEX + 15) // ???????????????車?“????
#define NET_DVR_LD_NO_ATAPI                 (RAID_ERROR_INDEX + 16) // ??﹞“??ATAPI?????“?谷??????
#define NET_DVR_MIGRATION_NOT_NEED          (RAID_ERROR_INDEX + 17) // ?車?????豕?“??
#define NET_DVR_HD_TYPE_MISMATCH            (RAID_ERROR_INDEX + 18) // ???赤???????????????角??
#define NET_DVR_NO_LD_IN_DG                 (RAID_ERROR_INDEX + 19) // ???谷??????????﹞“??????????℅‾
#define NET_DVR_NO_ROOM_FOR_SPARE           (RAID_ERROR_INDEX + 20) // ????????????????﹞“㊣????“????㊣???
#define NET_DVR_SPARE_IS_IN_MULTI_DG        (RAID_ERROR_INDEX + 21) // ??????㊣?﹞????????車????㊣???
#define NET_DVR_DG_HAS_MISSING_PD           (RAID_ERROR_INDEX + 22) // ?車???㊣????

// x86 64bit nvr???? 2012-02-04
#define NET_DVR_NAME_EMPTY                    (RAID_ERROR_INDEX + 23) /*????????*/
#define NET_DVR_INPUT_PARAM                    (RAID_ERROR_INDEX + 24) /*???????????車*/
#define NET_DVR_PD_NOT_AVAILABLE            (RAID_ERROR_INDEX + 25) /*???赤??????????*/
#define NET_DVR_ARRAY_NOT_AVAILABLE            (RAID_ERROR_INDEX + 26) /*?車????????*/
#define NET_DVR_PD_COUNT                    (RAID_ERROR_INDEX + 27) /*???赤???????????﹞*/
#define NET_DVR_VD_SMALL                    (RAID_ERROR_INDEX + 28) /*?谷??????????*/
#define NET_DVR_NO_EXIST                    (RAID_ERROR_INDEX + 29) /*??????*/
#define NET_DVR_NOT_SUPPORT                    (RAID_ERROR_INDEX + 30) /*???∫??????℅‾*/
#define NET_DVR_NOT_FUNCTIONAL                 (RAID_ERROR_INDEX + 31) /*?車??℅???????????℅???*/
#define NET_DVR_DEV_NODE_NOT_FOUND            (RAID_ERROR_INDEX + 32) /*?谷???????豕㊣???????????*/
#define NET_DVR_SLOT_EXCEED                    (RAID_ERROR_INDEX + 33) /*????????????*/ 
#define NET_DVR_NO_VD_IN_ARRAY                (RAID_ERROR_INDEX + 34) /*?車???????????谷??????*/
#define NET_DVR_VD_SLOT_INVALID                (RAID_ERROR_INDEX + 35) /*?谷?????????????∫*/
#define NET_DVR_PD_NO_ENOUGH_SPACE            (RAID_ERROR_INDEX + 36) /*?迄?豕???赤??????????℅?*/
#define NET_DVR_ARRAY_NONFUNCTION            (RAID_ERROR_INDEX + 37) /*????????????℅??????車???????????“??*/
#define NET_DVR_ARRAY_NO_ENOUGH_SPACE        (RAID_ERROR_INDEX + 38) /*?車????????℅?*/
#define NET_DVR_STOPPING_SCANNING_ARRAY        (RAID_ERROR_INDEX + 39) /*????????∼???∼????辰?????“?豕*/
#define NET_DVR_NOT_SUPPORT_16T             (RAID_ERROR_INDEX + 40) /*???∫?????“?車??16T???車??*/
#define NET_DVR_ARRAY_FORMATING             (RAID_ERROR_INDEX + 41) /*?????????????????車????﹞“????*/ 
#define NET_DVR_QUICK_SETUP_PD_COUNT        (RAID_ERROR_INDEX + 42) /*???邦?????????豕?????谷??????*/ 

//?豕㊣????∟???㊣???????∫∼???﹞????赤?車??
#define    NET_DVR_ERROR_DEVICE_NOT_ACTIVATED    250//?豕㊣????∟??
//??SDK?????豕㊣????豕?????∫?????辰???∟?????㊣?辰??﹞????????㊣???赤?車??
#define  NET_DVR_ERROR_RISK_PASSWORD          251 //??﹞?????????
//???∟?????豕㊣????????∟???㊣﹞????赤?車??
#define    NET_DVR_ERROR_DEVICE_HAS_ACTIVATED    252//?豕㊣????∟??


// ?????赤?車?? 
#define VCA_ERROR_INDEX                     300 // ?????赤?車???‾??
#define NET_DVR_ID_ERROR                    (VCA_ERROR_INDEX + 0)   // ????ID?????赤
#define NET_DVR_POLYGON_ERROR               (VCA_ERROR_INDEX + 1)   // ?角㊣?????﹞??????車
#define NET_DVR_RULE_PARAM_ERROR            (VCA_ERROR_INDEX + 2)   // ???辰?????????赤
#define NET_DVR_RULE_CFG_CONFLICT           (VCA_ERROR_INDEX + 3)   // ????????????
#define NET_DVR_CALIBRATE_NOT_READY         (VCA_ERROR_INDEX + 4)   // ?㊣?∼????㊣那?“????
#define NET_DVR_CAMERA_DATA_ERROR           (VCA_ERROR_INDEX + 5)   // ?????迆?????????赤
#define NET_DVR_CALIBRATE_DATA_UNFIT        (VCA_ERROR_INDEX + 6)    // ?∟?????????㊣????????㊣那?“
#define NET_DVR_CALIBRATE_DATA_CONFLICT     (VCA_ERROR_INDEX + 7)    // ㊣那?“???赤???????迄?????????辰????????????
#define NET_DVR_CALIBRATE_CALC_FAIL         (VCA_ERROR_INDEX + 8)    // ?????迆㊣那?“???????????∫∼?
#define    NET_DVR_CALIBRATE_LINE_OUT_RECT        (VCA_ERROR_INDEX + 9)    // ???????迄㊣?㊣那?“?????????迄㊣??????????辰
#define NET_DVR_ENTER_RULE_NOT_READY        (VCA_ERROR_INDEX + 10)    // ?????豕?????????辰
#define NET_DVR_AID_RULE_NO_INCLUDE_LANE    (VCA_ERROR_INDEX + 11)    // ???“???????辰??????∼邦?“?????“????????????????
#define NET_DVR_LANE_NOT_READY                (VCA_ERROR_INDEX + 12)    // ?㊣?∼?????豕??????
#define NET_DVR_RULE_INCLUDE_TWO_WAY        (VCA_ERROR_INDEX + 13)    // ???????辰??∼邦??2??????﹞??辰
#define NET_DVR_LANE_TPS_RULE_CONFLICT      (VCA_ERROR_INDEX + 14)  // ?????????????辰????
#define NET_DVR_NOT_SUPPORT_EVENT_TYPE      (VCA_ERROR_INDEX + 15)  // ???∫?????????角??
#define NET_DVR_LANE_NO_WAY                 (VCA_ERROR_INDEX + 16)  // ????????﹞??辰
#define NET_DVR_SIZE_FILTER_ERROR           (VCA_ERROR_INDEX + 17)  // ?????????辰?????赤
#define NET_DVR_LIB_FFL_NO_FACE             (VCA_ERROR_INDEX + 18) // ???‾???“???㊣??????????????????
#define NET_DVR_LIB_FFL_IMG_TOO_SMALL       (VCA_ERROR_INDEX + 19) // ???‾???“???㊣??????????????
#define NET_DVR_LIB_FD_IMG_NO_FACE          (VCA_ERROR_INDEX + 20) // ?????????????足???㊣??????????????????
#define NET_DVR_LIB_FACE_TOO_SMALL          (VCA_ERROR_INDEX + 21) // ?“???㊣????????
#define NET_DVR_LIB_FACE_QUALITY_TOO_BAD    (VCA_ERROR_INDEX + 22) // ?“???㊣????????????????
#define NET_DVR_KEY_PARAM_ERR               (VCA_ERROR_INDEX + 23) //?????????豕???赤?車
#define NET_DVR_CALIBRATE_DATA_ERR          (VCA_ERROR_INDEX + 24) //㊣那?“?迄㊣??????赤?車???辰???????赤?車???辰?迄㊣?????????????
#define NET_DVR_CALIBRATE_DISABLE_FAIL      (VCA_ERROR_INDEX + 25) //?迄???????辰?????赤????㊣那?“
#define NET_DVR_VCA_LIB_FD_SCALE_OUTRANGE   (VCA_ERROR_INDEX + 26) //℅??車?????辰???赤??℅?????????℅????????辰???赤??℅??車????㊣?????
#define NET_DVR_LIB_FD_REGION_TOO_LARGE     (VCA_ERROR_INDEX + 27) //?㊣?∼?足?????辰﹞??∫???車???足????℅??車????????2/3
#define NET_DVR_TRIAL_OVERDUE               (VCA_ERROR_INDEX + 28) //????∼??????????芍??
#define NET_DVR_CONFIG_FILE_CONFLICT        (VCA_ERROR_INDEX + 29) //?豕㊣??角?????????????????“?????﹞?角????????﹞???????????﹞??赤?車???芍????
//??﹞“???角???赤?車??
#define NET_DVR_FR_FPL_FAIL                 (VCA_ERROR_INDEX + 30)   // ???????‾???“???∫∼?
#define NET_DVR_FR_IQA_FAIL                 (VCA_ERROR_INDEX + 31)   // ??????﹞??∫∼?
#define NET_DVR_FR_FEM_FAIL                 (VCA_ERROR_INDEX + 32)   // ???????‾?芍???∫∼?
#define NET_DVR_FPL_DT_CONF_TOO_LOW         (VCA_ERROR_INDEX + 33)   // ???‾???“???㊣?????足????????????
#define NET_DVR_FPL_CONF_TOO_LOW            (VCA_ERROR_INDEX + 34)   // ???‾???“????????????
#define NET_DVR_E_DATA_SIZE                 (VCA_ERROR_INDEX + 35)  // ?????∟????????
#define NET_DVR_FR_MODEL_VERSION_ERR        (VCA_ERROR_INDEX + 36)  // ????????????????????∼?㊣??赤?車
#define NET_DVR_FR_FD_FAIL                  (VCA_ERROR_INDEX + 37)  // ??㊣??????????足???∫∼?
#define NET_DVR_FA_NORMALIZE_ERR            (VCA_ERROR_INDEX + 38)  // ?????谷???????赤
//?????赤?車??
#define NET_DVR_DOG_PUSTREAM_NOT_MATCH      (VCA_ERROR_INDEX + 39)  // ?????﹞???∼?????‾?豕㊣??角????????
#define NET_DVR_DEV_PUSTREAM_NOT_MATCH      (VCA_ERROR_INDEX + 40)  // ?∼?????‾?豕㊣?∼?㊣???????
#define NET_DVR_PUSTREAM_ALREADY_EXISTS     (VCA_ERROR_INDEX + 41)  // ?豕㊣????????“???????赤???????∼???豕㊣?
#define NET_DVR_SEARCH_CONNECT_FAILED       (VCA_ERROR_INDEX + 42)  // ?????足?‾﹞????‾?∫∼?
#define NET_DVR_INSUFFICIENT_DISK_SPACE     (VCA_ERROR_INDEX + 43)  // ??????????????????℅?
#define NET_DVR_DATABASE_CONNECTION_FAILED  (VCA_ERROR_INDEX + 44)  // ???????????∫∼?
#define NET_DVR_DATABASE_ADM_PW_ERROR       (VCA_ERROR_INDEX + 45)  // ?????????∫?????????赤?車
#define NET_DVR_DECODE_YUV                  (VCA_ERROR_INDEX + 46)  // ?????∫∼?
#define NET_DVR_IMAGE_RESOLUTION_ERROR      (VCA_ERROR_INDEX + 47)  //
#define NET_DVR_CHAN_WORKMODE_ERROR         (VCA_ERROR_INDEX + 48)  //

#define NET_DVR_RTSP_ERROR_NOENOUGHPRI          401  //???“????﹞????‾﹞???401?㊣??℅????????赤?車??
#define NET_DVR_RTSP_ERROR_ALLOC_RESOURCE       402  //﹞???℅????∫∼?
#define NET_DVR_RTSP_ERROR_PARAMETER            403  //?????赤?車
#define NET_DVR_RTSP_ERROR_NO_URL               404  //???“??URL???﹞????????﹞????‾﹞???404?㊣??℅????????赤?車??
#define NET_DVR_RTSP_ERROR_FORCE_STOP           406  //???∫????????????

#define NET_DVR_RTSP_GETPORTFAILED                407  //rtsp ?????????赤?車
#define NET_DVR_RTSP_DESCRIBERROR                410  //rtsp decribe ?????赤?車
#define NET_DVR_RTSP_DESCRIBESENDTIMEOUT        411  //rtsp decribe ﹞??????㊣
#define NET_DVR_RTSP_DESCRIBESENDERROR            412  //rtsp decribe ﹞????∫∼?
#define NET_DVR_RTSP_DESCRIBERECVTIMEOUT        413  //rtsp decribe ???????㊣
#define NET_DVR_RTSP_DESCRIBERECVDATALOST        414  //rtsp decribe ?????????赤?車
#define NET_DVR_RTSP_DESCRIBERECVERROR            415  //rtsp decribe ?????∫∼?
#define NET_DVR_RTSP_DESCRIBESERVERERR            416  //rtsp decribe ﹞????‾﹞????赤?車℅???

#define NET_DVR_RTSP_SETUPERROR                    420  //rtsp setup ?????赤?車
#define NET_DVR_RTSP_SETUPSENDTIMEOUT            421  //rtsp setup ﹞??????㊣
#define NET_DVR_RTSP_SETUPSENDERROR                422  //rtsp setup ﹞????赤?車
#define NET_DVR_RTSP_SETUPRECVTIMEOUT            423  //rtsp setup ???????㊣
#define NET_DVR_RTSP_SETUPRECVDATALOST            424  //rtsp setup ?????????赤?車
#define NET_DVR_RTSP_SETUPRECVERROR                425  //rtsp setup ?????∫∼?
#define NET_DVR_RTSP_OVER_MAX_CHAN                426  //????﹞????‾℅??車?????????辰??﹞????‾℅?????℅???﹞????‾﹞???453?㊣??℅????????赤?車????
#define NET_DVR_RTSP_SETUPSERVERERR                427  //rtsp setup ﹞????‾﹞????赤?車℅???

#define NET_DVR_RTSP_PLAYERROR                    430  //rtsp play ?????赤?車
#define NET_DVR_RTSP_PLAYSENDTIMEOUT            431  //rtsp play ﹞??????㊣
#define NET_DVR_RTSP_PLAYSENDERROR                432  //rtsp play ﹞????赤?車
#define NET_DVR_RTSP_PLAYRECVTIMEOUT            433  //rtsp play ???????㊣
#define NET_DVR_RTSP_PLAYRECVDATALOST            434  //rtsp play ?????????赤?車
#define NET_DVR_RTSP_PLAYRECVERROR                435  //rtsp play ?????∫∼?
#define NET_DVR_RTSP_PLAYSERVERERR                436  //rtsp play ﹞????‾﹞????赤?車℅???

#define NET_DVR_RTSP_TEARDOWNERROR                440  //rtsp teardown ?????赤?車
#define NET_DVR_RTSP_TEARDOWNSENDTIMEOUT        441  //rtsp teardown ﹞??????㊣
#define NET_DVR_RTSP_TEARDOWNSENDERROR            442  //rtsp teardown ﹞????赤?車
#define NET_DVR_RTSP_TEARDOWNRECVTIMEOUT        443  //rtsp teardown ???????㊣
#define NET_DVR_RTSP_TEARDOWNRECVDATALOST        444  //rtsp teardown ?????????赤?車
#define NET_DVR_RTSP_TEARDOWNRECVERROR            445  //rtsp teardown ?????∫∼?
#define NET_DVR_RTSP_TEARDOWNSERVERERR            446  //rtsp teardown ﹞????‾﹞????赤?車℅???

#define  NET_PLAYM4_NOERROR                        500    //no error
#define     NET_PLAYM4_PARA_OVER                    501    //input parameter is invalid;
#define  NET_PLAYM4_ORDER_ERROR                    502    //The order of the function to be called is error.
#define     NET_PLAYM4_TIMER_ERROR                    503    //Create multimedia clock failed;
#define  NET_PLAYM4_DEC_VIDEO_ERROR                504    //Decode video data failed.
#define  NET_PLAYM4_DEC_AUDIO_ERROR                505    //Decode audio data failed.
#define     NET_PLAYM4_ALLOC_MEMORY_ERROR            506    //Allocate memory failed.
#define  NET_PLAYM4_OPEN_FILE_ERROR                507    //Open the file failed.
#define  NET_PLAYM4_CREATE_OBJ_ERROR            508    //Create thread or event failed
#define  NET_PLAYM4_CREATE_DDRAW_ERROR            509    //Create DirectDraw object failed.
#define  NET_PLAYM4_CREATE_OFFSCREEN_ERROR      510    //failed when creating off-screen surface.
#define  NET_PLAYM4_BUF_OVER                    511    //buffer is overflow
#define  NET_PLAYM4_CREATE_SOUND_ERROR            512    //failed when creating audio device.    
#define     NET_PLAYM4_SET_VOLUME_ERROR            513    //Set volume failed
#define  NET_PLAYM4_SUPPORT_FILE_ONLY            514    //The function only support play file.
#define  NET_PLAYM4_SUPPORT_STREAM_ONLY            515    //The function only support play stream.
#define  NET_PLAYM4_SYS_NOT_SUPPORT                516    //System not support.
#define  NET_PLAYM4_FILEHEADER_UNKNOWN          517    //No file header.
#define  NET_PLAYM4_VERSION_INCORRECT            518    //The version of decoder and encoder is not adapted.  
#define  NET_PALYM4_INIT_DECODER_ERROR          519    //Initialize decoder failed.
#define  NET_PLAYM4_CHECK_FILE_ERROR            520    //The file data is unknown.
#define  NET_PLAYM4_INIT_TIMER_ERROR            521    //Initialize multimedia clock failed.
#define     NET_PLAYM4_BLT_ERROR                    522    //Blt failed.
#define  NET_PLAYM4_UPDATE_ERROR                523    //Update failed.
#define  NET_PLAYM4_OPEN_FILE_ERROR_MULTI       524   //openfile error, streamtype is multi
#define  NET_PLAYM4_OPEN_FILE_ERROR_VIDEO       525   //openfile error, streamtype is video
#define  NET_PLAYM4_JPEG_COMPRESS_ERROR         526   //JPEG compress error
#define  NET_PLAYM4_EXTRACT_NOT_SUPPORT         527    //Don't support the version of this file.
#define  NET_PLAYM4_EXTRACT_DATA_ERROR          528    //extract video data failed.

//℅?﹞?℅∼???赤?車??
#define  NET_CONVERT_ERROR_NOT_SUPPORT          581  //convert not support

//???????????赤?車??
#define  NET_AUDIOINTERCOM_OK                   600  //???赤?車
#define  NET_AUDIOINTECOM_ERR_NOTSUPORT         601 //???∫??
#define  NET_AUDIOINTECOM_ERR_ALLOC_MEMERY      602 //?????那???赤?車
#define  NET_AUDIOINTECOM_ERR_PARAMETER            603 //?????赤?車
#define  NET_AUDIOINTECOM_ERR_CALL_ORDER        604 //?‾?????辰?赤?車
#define  NET_AUDIOINTECOM_ERR_FIND_DEVICE       605 //??﹞????豕㊣?
#define  NET_AUDIOINTECOM_ERR_OPEN_DEVICE       606 //?????辰???豕㊣???
#define  NET_AUDIOINTECOM_ERR_NO_CONTEXT        607 //?豕㊣??????????赤
#define  NET_AUDIOINTECOM_ERR_NO_WAVFILE        608 //WAV???????赤
#define  NET_AUDIOINTECOM_ERR_INVALID_TYPE      609 //???∫??WAV?????角??
#define  NET_AUDIOINTECOM_ERR_ENCODE_FAIL       610 //㊣角???∫∼?
#define  NET_AUDIOINTECOM_ERR_DECODE_FAIL       611 //?????∫∼?
#define  NET_AUDIOINTECOM_ERR_NO_PLAYBACK       612 //??﹞??∫∼?
#define  NET_AUDIOINTECOM_ERR_DENOISE_FAIL      613 //?????∫∼?
#define  NET_AUDIOINTECOM_ERR_UNKOWN            619 //?????赤?車

#define NET_QOS_OK                                 700                    //no error
#define NET_QOS_ERROR                             (NET_QOS_OK - 1)        //qos error
#define NET_QOS_ERR_INVALID_ARGUMENTS             (NET_QOS_OK - 2)        //invalid arguments 
#define NET_QOS_ERR_SESSION_NOT_FOUND             (NET_QOS_OK - 3)        //session net found
#define NET_QOS_ERR_LIB_NOT_INITIALIZED          (NET_QOS_OK - 4)        //lib not initialized
#define NET_QOS_ERR_OUTOFMEM                     (NET_QOS_OK - 5)        //outtofmem
#define NET_QOS_ERR_PACKET_UNKNOW                (NET_QOS_OK - 10)        //packet unknow
#define NET_QOS_ERR_PACKET_VERSION               (NET_QOS_OK - 11)        //packet version error
#define NET_QOS_ERR_PACKET_LENGTH                (NET_QOS_OK - 12)        //packet length error
#define NET_QOS_ERR_PACKET_TOO_BIG               (NET_QOS_OK - 13)        //packet too big
#define NET_QOS_ERR_SCHEDPARAMS_INVALID_BANDWIDTH (NET_QOS_OK - 20)        //schedparams invalid bandwidth
#define NET_QOS_ERR_SCHEDPARAMS_BAD_FRACTION      (NET_QOS_OK - 21)        //schedparams bad fraction
#define NET_QOS_ERR_SCHEDPARAMS_BAD_MINIMUM_INTERVAL (NET_QOS_OK - 22)    //schedparams bad minimum interval

#define NET_ERROR_TRUNK_LINE                        711 //℅???????㊣?????????
#define NET_ERROR_MIXED_JOINT                        712 //?????????足??????
#define NET_ERROR_DISPLAY_SWITCH                    713 //?????????????“??????
#define NET_ERROR_USED_BY_BIG_SCREEN                714 //????℅???㊣??車??????
#define NET_ERROR_USE_OTHER_DEC_RESOURCE            715 //????????????????℅?????℅???
#define NET_ERROR_DISP_MODE_SWITCH                  716 //?????“??????℅?????????
#define NET_ERROR_SCENE_USING                        717    //???∼????????
#define NET_ERR_NO_ENOUGH_DEC_RESOURCE              718 //????℅?????℅?
#define NET_ERR_NO_ENOUGH_FREE_SHOW_RESOURCE        719 //????℅?????℅?
#define NET_ERR_NO_ENOUGH_VIDEO_MEMORY              720 //????℅?????℅?
#define NET_ERR_MAX_VIDEO_NUM                       721 //?????角℅?????℅?
#define NET_ERR_WIN_COVER_FREE_SHOW_AND_NORMAL      722 //?∼????????????????????﹞???????????
#define NET_ERR_FREE_SHOW_WIN_SPLIT                 723 //?????∼?????∫??﹞???
#define NET_ERR_INAPPROPRIATE_WIN_FREE_SHOW         724 //??????????????㊣????∼?????∫??????????
#define NET_DVR_TRANSPARENT_WIN_NOT_SUPPORT_SPLIT   725 //???????‾?????∼?????∫??﹞???
#define NET_DVR_SPLIT_WIN_NOT_SUPPORT_TRANSPARENT   726 //?????角﹞??????∼?????∫?????‾???豕??
#define NET_ERR_MAX_LOGO_NUM                        727 //logo??????????
#define NET_ERR_MAX_WIN_LOOP_NUM                    728 //?????∼????????????
#define NET_ERR_VIRTUAL_LED_VERTICAL_CROSS          729 //?谷??LED????℅??辰????
#define NET_ERR_MAX_VIRTUAL_LED_HEIGHT              730 //?谷??LED????????
#define NET_ERR_VIRTUAL_LED_ILLEGAL_CHARACTER       731 //?谷??LED????∼邦??﹞?﹞“℅?﹞?
#define NET_ERR_BASEMAP_NOT_EXIST                   732 //?℅????????????
#define NET_ERR_LED_NOT_SUPPORT_VIRTUAL_LED         733 //LED???????∫???谷??LED
#define NET_ERR_LED_RESOLUTION_NOT_SUPPORT          734 //LED﹞?㊣??????∫??
#define NET_ERR_PLAN_OVERDUE                        735 //?∟∼??????????????‾??
#define NET_ERR_PROCESSER_MAX_SCREEN_BLK            736 //???????赤?‾????????????????????????????
#define NET_ERR_WND_SIZE_TOO_SMALL                  737 //???∼?∼???赤??????
#define NET_ERR_WND_SPLIT_NOT_SUPPORT_ROAM          738 //﹞????∼?????∫??????
#define NET_ERR_OUTPUT_ONE_BOARD_ONE_WALL           739 //??????℅?∼?????????????∼車?“????????????
#define NET_ERR_WND_CANNOT_LCD_AND_LED_OUTPUT       740 //?∼?????????㊣??LCD??LED??????
#define NET_ERR_MAX_OSD_NUM                         741 //OSD????????℅??車

#define NET_SDK_CANCEL_WND_TOPKEEP_ATTR_FIRST       751 //??????????㊣????∼????????㊣??????????????????℅??℅‾
#define NET_SDK_ERR_LED_SCREEN_CHECKING             752 //????????LED????
#define NET_SDK_ERR_NOT_SUPPORT_SINGLE_RESOLUTION   753 //LCD/LED??????∼車?“???車???∫??????????????﹞?㊣???????
#define NET_SDK_ERR_LED_RESOLUTION_MISMATCHED       754 //??????????LED﹞?㊣?????????????????LED﹞?㊣????????????豕???迆℅??????????????????赤


#define NET_SDK_ERR_MAX_VIRTUAL_LED_WIDTH           755 //?谷??LED?赤????????∼邦?“℅??車????℅?????
#define NET_SDK_ERR_MAX_VIRTUAL_LED_IN_SCREEN       756 //?????谷??LED????????
#define NET_SDK_ERR_MAX_VIRTUAL_LED_IN_WALL         757 //?????谷??LED????????
#define NET_SDK_ERR_VIRTUAL_LED_OVERLAP             758 //?谷??LED?????赤?車
#define NET_SDK_ERR_VIRTUAL_LED_TYPE                759 //?角???赤?車
#define NET_SDK_ERR_VIRTUAL_LED_COLOUR              760 //?????赤?車
#define NET_SDK_ERR_VIRTUAL_LED_MOVE_DIRECTION      761 //????﹞??辰?赤?車
#define NET_SDK_ERR_VIRTUAL_LED_MOVE_MODE           762 //?????????赤?車
#define NET_SDK_ERR_VIRTUAL_LED_MOVE_SPEED          763 //?????????赤?車
#define NET_SDK_ERR_VIRTUAL_LED_DISP_MODE           764 //???????????車
#define NET_SDK_ERR_VIRTUAL_LED_NO                  765 //?谷??LED?辰???赤?車
#define NET_SDK_ERR_VIRTUAL_LED_PARA                766 //?谷??LED?????????赤?車??∼邦?“?芍??????????????
#define NET_SDK_ERR_BASEMAP_POSITION                767 //?℅???∼???赤???????赤?車
#define NET_SDK_ERR_BASEMAP_PICTURE_LEN             768 //?℅???????∟??????
#define NET_SDK_ERR_BASEMAP_PICTURE_RESOLUTION      769 //?℅??????﹞?㊣????赤?車
#define NET_SDK_ERR_BASEMAP_PICTURE_FORMAT          770 //?℅???????????赤?車
#define NET_SDK_ERR_MAX_VIRTUAL_LED_NUM             771 //?豕㊣??∫?????谷??LED????????
#define NET_SDK_ERR_MAX_TIME_VIRTUAL_LED_IN_WALL    772 //???????????∫?????㊣???谷??LED??????????

#define NET_ERR_TERMINAL_BUSY                        780    //?????????????????芍?谷??

#define NET_ERR_DATA_RETURNED_ILLEGAL               790 //?豕㊣?﹞?????????????﹞“
#define NET_DVR_FUNCTION_RESOURCE_USAGE_ERROR       791 //?豕㊣????邦????????℅?????????????????﹞“????


#define NET_DVR_DEV_NET_OVERFLOW                    800    //?????‾???????豕㊣?????????
#define NET_DVR_STATUS_RECORDFILE_WRITING_NOT_LOCK  801 //??????????????????﹞“㊣????“ 
#define NET_DVR_STATUS_CANT_FORMAT_LITTLE_DISK      802 //??????????????﹞“??????

//N+1?赤?車??
#define NET_SDK_ERR_REMOTE_DISCONNECT                803 //??????﹞“????
#define NET_SDK_ERR_RD_ADD_RD                        804 //㊣??迆?????赤??㊣??迆
#define NET_SDK_ERR_BACKUP_DISK_EXCEPT                805 //㊣?﹞????足??
#define NET_SDK_ERR_RD_LIMIT                        806 //㊣??迆??????????
#define NET_SDK_ERR_ADDED_RD_IS_WD                    807 //?赤????㊣??迆???∟℅‾?迆
#define NET_SDK_ERR_ADD_ORDER_WRONG                    808 //?赤?????辰???赤??㊣???????㊣??∟℅‾?迆?赤????㊣??迆?????赤???∟℅‾?迆
#define NET_SDK_ERR_WD_ADD_WD                        809 //?∟℅‾?迆?????赤???∟℅‾?迆
#define NET_SDK_ERR_WD_SERVICE_EXCETP                810 //?∟℅‾?迆CVR﹞????足??
#define NET_SDK_ERR_RD_SERVICE_EXCETP                811 //㊣??迆CVR﹞????足??
#define NET_SDK_ERR_ADDED_WD_IS_RD                    812 //?赤?????∟℅‾?迆??㊣??迆
#define NET_SDK_ERR_PERFORMANCE_LIMIT                813 //????????????
#define NET_SDK_ERR_ADDED_DEVICE_EXIST                814 //?赤?????豕㊣?????????

//?車???迆?赤?車??
#define NET_SDK_ERR_INQUEST_RESUMING                815 //?車????????
#define NET_SDK_ERR_RECORD_BACKUPING                816 //?車??㊣?﹞???
#define NET_SDK_ERR_DISK_PLAYING                    817 //??????﹞???
#define NET_SDK_ERR_INQUEST_STARTED                    818 //?車????????
#define NET_SDK_ERR_LOCAL_OPERATING                    819 //㊣?????℅‾??????
#define NET_SDK_ERR_INQUEST_NOT_START                820 //?車????????
//Netra3.1.0?赤?車??                
#define NET_SDK_ERR_CHAN_AUDIO_BIND                 821  //?“????∼車?“?辰∼車?“?????????∫∼?
//???????赤?車??
#define NET_DVR_N_PLUS_ONE_MODE                     822 //?豕㊣??㊣?∼????N+1????
#define NET_DVR_CLOUD_STORAGE_OPENED                823 //????????????????

#define NET_DVR_ERR_OPER_NOT_ALLOWED                824   //?豕㊣?????N+0㊣?????℅??????????赤????℅‾
#define NET_DVR_ERR_NEED_RELOCATE                    825   //?豕㊣?????N+0㊣?????℅??????豕?????????“?辰??????????????℅‾

//???車?‾?迆?赤?車??
#define NET_SDK_ERR_IR_PORT_ERROR                   830 //?足?????????赤?車
#define NET_SDK_ERR_IR_CMD_ERROR                    831 //?足???????????邦?????赤?車
#define NET_SDK_ERR_NOT_INQUESTING                  832 //?豕㊣?????﹞??車??℅???
#define NET_SDK_ERR_INQUEST_NOT_PAUSED              833 //?豕㊣?????﹞?????℅???
#define NET_DVR_CHECK_PASSWORD_MISTAKE_ERROR        834 //???谷?????赤?車
#define NET_DVR_CHECK_PASSWORD_NULL_ERROR           835 //???谷????????????
#define NET_DVR_UNABLE_CALIB_ERROR                  836  // ?㊣?∼??﹞“㊣那?“
#define NET_DVR_PLEASE_CALIB_ERROR                  837  //?????那??㊣那?“
#define NET_DVR_ERR_PANORAMIC_CAL_EMPTY             838 //Flash?????∼㊣那?“????
#define NET_DVR_ERR_CALIB_FAIL_PLEASEAGAIN          839 //㊣那?“?∫∼?????????㊣那?“(Calibration failed. Please calibrate again.)
#define NET_DVR_ERR_DETECTION_LINE                  840 //???辰???????赤?車???????????????辰?????﹞㊣????辰???????足?????辰??(Please set detection line again. The detection line should be within the red count area.)
#define NET_DVR_ERR_TURN_OFF_IMAGE_PARA             841 //??????㊣?????????????????(Please turn off the image parameters switch first.)
#define NET_DVR_EXCEED_FACE_IMAGES_ERROR            843  //????????????℅??車????
#define NET_DVR_ANALYSIS_FACE_IMAGES_ERROR          844  //??????????㊣??∫∼?
#define NET_ERR_ALARM_INPUT_OCCUPIED                845  //A<-1㊣“????????????﹞?????℅???Alarm Input No. A<-1 is used to trigger vehicle capture.
#define NET_DVR_FACELIB_DATABASE_ERROR              846  //??????????????∼?㊣???????
#define NET_DVR_FACELIB_DATA_ERROR                  847  //???????????赤?車
#define NET_DVR_FACE_DATA_ID_ERROR                  848  //????????PID???∫
#define NET_DVR_FACELIB_ID_ERROR                    849  //??????ID???∫
#define NET_DVR_EXCEED_FACE_LIBARY_ERROR            850  //??????????℅??車????
#define NET_DVR_PIC_ANALYSIS_NO_TARGET_ERROR           851  //????????㊣?????㊣那
#define NET_DVR_SUBPIC_ANALYSIS_MODELING_ERROR         852  //℅????“???∫∼?
#define NET_DVR_PIC_ANALYSIS_NO_RESOURCE_ERROR         853  //??????????﹞????????∫????????????㊣?
#define NET_DVR_ANALYSIS_ENGINES_NO_RESOURCE_ERROR                 854//??﹞???????℅???
#define NET_DVR_ANALYSIS_ENGINES_USAGE_EXCEED_ERROR                855//??????????????????????100%
#define NET_DVR_EXCEED_HUMANMISINFO_FILTER_ENABLED_ERROR           856  //???????????????車㊣“℅??車?“??????
#define NET_DVR_NAME_ERROR                                         857  //?????赤?車
#define NET_DVR_NAME_EXIST_ERROR                                   858  //??????????
#define NET_DVR_FACELIB_PIC_IMPORTING_ERROR                        859  //????????????????
#define NET_DVR_ERR_CALIB_POSITION                  860 //㊣那?“?????????????迆????﹞??∫
#define NET_DVR_ERR_DELETE                          861 //??﹞“????
#define NET_DVR_ERR_SCENE_ID                        862 //???∼ID???∫
#define NET_DVR_ERR_CALIBING                        863 //㊣那?“??
#define NET_DVR_PIC_FORMAT_ERROR                                   864  //?????????赤?車
#define NET_DVR_PIC_RESOLUTION_INVALID_ERROR                       865  //????﹞?㊣??????∫?赤?車
#define NET_DVR_PIC_SIZE_EXCEED_ERROR                              866  //???????車
#define NET_DVR_PIC_ANALYSIS_TARGRT_NUM_EXCEED_ERROR               867  //??????㊣那????????????
#define NET_DVR_ANALYSIS_ENGINES_LOADING_ERROR                     868//﹞???????????????
#define NET_DVR_ANALYSIS_ENGINES_ABNORMA_ERROR                     869//﹞????????足??
#define NET_DVR_ANALYSIS_ENGINES_FACELIB_IMPORTING                 870//﹞?????????????????????
#define NET_DVR_NO_DATA_FOR_MODELING_ERROR         871  //?????“??????
#define NET_DVR_FACE_DATA_MODELING_ERROR           872 //?豕㊣??????????????“????℅‾?????∫????﹞????赤
#define NET_ERR_FACELIBDATA_OVERLIMIT              873  //?????豕㊣????∫????????????℅??車?????????“????????????????????
#define NET_DVR_ANALYSIS_ENGINES_ASSOCIATED_CHANNEL  874//﹞??????????????“??
#define NET_DVR_ERR_CUSTOMID_LEN                     875 //????℅??“??ID???∟??℅???32℅?﹞??∟??
#define NET_DVR_ERR_CUSTOMFACELIBID_REPEAT           876 //??????﹞???????℅??“????????ID
#define NET_DVR_ERR_CUSTOMHUMANID_REPEAT             877 //??????﹞???????℅??“?????㊣ID
#define NET_DVR_ERR_URL_DOWNLOAD_FAIL                878 //url?????∫∼?
#define NET_DVR_ERR_URL_DOWNLOAD_NOTSTART            879 //url??????????

#define NET_DVR_CFG_FILE_SECRETKEY_ERROR         880  //????????∼??????谷?????赤?車
#define NET_DVR_WDR_NOTDISABLE_ERROR             881  //??????㊣??迄???“???㊣?∼????????℅????????????赤????
#define NET_DVR_HLC_NOTDISABLE_ERROR             882  //??????㊣??迄???“???㊣?∼????????℅???????????????????

#define NET_DVR_THERMOMETRY_REGION_OVERSTEP_ERROR         883  //???????辰????


#define NET_DVR_ERR_MODELING_DEVICEINTERNAL     884 //?“???∫∼????豕㊣??????赤?車
#define NET_DVR_ERR_MODELING_FACE               885 //?“???∫∼????????“???赤?車
#define NET_DVR_ERR_MODELING_FACEGRADING        886 //?“???∫∼?????????????﹞??赤?車
#define NET_DVR_ERR_MODELING_FACEGFEATURE       887 //?“???∫∼??????‾???芍???赤?車
#define NET_DVR_ERR_MODELING_FACEGANALYZING     888 //?“???∫∼????????芍???赤?車

#define NET_DVR_ERR_STREAM_LIMIT                889 //???‾???????????????????????‾?﹞??
#define NET_DVR_ERR_STREAM_DESCRIPTION          890 //?????????‾?豕??
#define NET_DVR_ERR_STREAM_DELETE               891 //???‾??????????﹞“????
#define NET_DVR_ERR_CUSTOMSTREAM_NAME           892 //℅??“?????‾?????????辰????﹞“
#define NET_DVR_ERR_CUSTOMSTREAM_NOTEXISTED     893 //??℅??“?????‾??????

#define NET_DVR_ERR_TOO_SHORT_CALIBRATING_TIME     894 //㊣那?“?㊣??????
#define NET_DVR_ERR_AUTO_CALIBRATE_FAILED     895 //℅???㊣那?“?∫∼?
#define NET_DVR_ERR_VERIFICATION_FAILED     896 //???谷?∫∼?

#define NET_DVR_NO_TEMP_SENSOR_ERROR         897  //???????????‾
#define NET_DVR_PUPIL_DISTANCE_OVERSIZE_ERROR         898  //???角???車
#define NET_DVR_ERR_UNOPENED_FACE_SNAP           899 //??℅‾???∫??????????????℅???
//2011-10-25?角???????‾?赤?車???“900-950??
#define  NET_ERR_CUT_INPUTSTREAM_OVERLIMIT           900 //??????????????????
#define  NET_ERR_WINCHAN_IDX                        901    // ???∼?“?????赤?車
#define  NET_ERR_WIN_LAYER                            902    // ?∼???????赤?車????????????℅??角???????∼??????
#define  NET_ERR_WIN_BLK_NUM                        903    // ?∼?????谷???赤?車???????∼??????????????????
#define  NET_ERR_OUTPUT_RESOLUTION                    904    // ????﹞?㊣????赤?車
#define  NET_ERR_LAYOUT                                905    // ???????赤?車
#define  NET_ERR_INPUT_RESOLUTION                    906 // ????﹞?㊣??????∫??
#define  NET_ERR_SUBDEVICE_OFFLINE                  907 // ℅??豕㊣???????
#define  NET_ERR_NO_DECODE_CHAN                     908 // ?????????????“??
#define  NET_ERR_MAX_WINDOW_ABILITY                 909 // ???∼????????, ﹞??????角???????‾??????℅??豕㊣??????????辰?????????赤?‾????????????
#define  NET_ERR_ORDER_ERROR                        910 // ?‾?????辰???車
#define  NET_ERR_PLAYING_PLAN                        911 // ?????????∟∼?
#define  NET_ERR_DECODER_USED                        912 // ????∼?????????
#define     NET_ERR_OUTPUT_BOARD_DATA_OVERFLOW            913    // ????∼???????????
#define     NET_ERR_SAME_USER_NAME                        914    // ???∫???角??
#define     NET_ERR_INVALID_USER_NAME                    915    // ???∫???∫??
#define     NET_ERR_MATRIX_USING                        916    // ???????車????????
#define     NET_ERR_DIFFERENT_CHAN_TYPE                917    // ?“???角???????“???車?????“?????????‾???????????????角????
#define     NET_ERR_INPUT_CHAN_BINDED                    918    // ?????“??????㊣????????車∼車?“
#define     NET_ERR_BINDED_OUTPUT_CHAN_OVERFLOW        919    // ?????????????車?????“?????????????車???????‾∼車?“???“??????
#define     NET_ERR_MAX_SIGNAL_NUM                        920    // ??????????????????????
#define  NET_ERR_INPUT_CHAN_USING                    921    // ?????“??????????
#define  NET_ERR_MANAGER_LOGON                         922    // ???赤?㊣????????????℅‾?∫∼?
#define  NET_ERR_USERALREADY_LOGON                     923    // ?????∫????????????℅‾?∫∼?
#define  NET_ERR_LAYOUT_INIT                         924    // ??????????????????℅‾?∫∼?
#define     NET_ERR_BASEMAP_SIZE_NOT_MATCH                925    // ?℅???車????﹞? 
#define  NET_ERR_WINDOW_OPERATING                    926    // ?∼????????????????℅‾??㊣?????℅‾?∫∼?
#define  NET_ERR_SIGNAL_UPLIMIT                        927 // ?????????∼????????????
#define  NET_ERR_SIGNAL_MAX_ENLARGE_TIMES           928 // ??????﹞??車㊣??????? 
#define  NET_ERR_ONE_SIGNAL_MULTI_CROSS             929 // ???????????????角??????
#define  NET_ERR_ULTRA_HD_SIGNAL_MULTI_WIN          930 // ???????????????????????∼ 
#define  NET_ERR_MAX_VIRTUAL_LED_WIDTH              931 //?谷??LED?赤???車????????
#define  NET_ERR_MAX_VIRTUAL_LED_WORD_LEN           932 //?谷??LED℅?﹞????車????????
#define     NET_ERR_SINGLE_OUTPUTPARAM_CONFIG            933//???∫???????????????????豕??
#define  NET_ERR_MULTI_WIN_BE_COVER                 934//?角﹞????∼??㊣?????
#define  NET_ERR_WIN_NOT_EXIST                        935 //?∼????????
#define  NET_ERR_WIN_MAX_SIGNALSOURCE                936//?∼????????????????????
#define  NET_ERR_MULTI_WIN_MOVE                        937//???角﹞????∼??????
#define  NET_ERR_MULTI_WIN_YPBPR_SDI                938 // YPBPR ??SDI?????????∫??9/16﹞???      
#define  NET_ERR_DIFF_TYPE_OUTPUT_MIXUSE            939  //?????角??????∼??足??
#define  NET_ERR_SPLIT_WIN_CROSS                    940//???????∼??﹞???
#define  NET_ERR_SPLIT_WIN_NOT_FULL_SCREEN            941  //?????迆???∼??﹞???
#define  NET_ERR_SPLIT_WIN_MANY_WIN                    942  //?????????????????角???∼?????∼??﹞???
#define  NET_ERR_WINDOW_SIZE_OVERLIMIT              943   //?∼???車??????
#define  NET_ERR_INPUTSTREAM_ALREADY_JOINT           944    //???????????????? 
#define  NET_ERR_JOINT_INPUTSTREAM_OVERLIMIT          945    //??????????????????      

#define  NET_ERR_LED_RESOLUTION                        946  //LED ﹞?㊣????車??????﹞?㊣???
#define  NET_ERR_JOINT_SCALE_OVERLIMIT              947  //????????????????????
#define  NET_ERR_INPUTSTREAM_ALREADY_DECODE            948  //????????????
#define  NET_ERR_INPUTSTREAM_NOTSUPPORT_CAPTURE     949  //?????????∫??℅???
#define  NET_ERR_JOINT_NOTSUPPORT_SPLITWIN            950  //?????????????∫??﹞???

//?????‾?赤?車???“951-999??
#define NET_ERR_MAX_WIN_OVERLAP                        951 //????℅??車?∼????????
#define NET_ERR_STREAMID_CHAN_BOTH_VALID            952 //stream ID???“???????㊣???∫
#define NET_ERR_NO_ZERO_CHAN                        953 //?豕㊣??????“??
#define NEED_RECONNECT                                955 //?豕?????“?辰?“℅???℅???????????
#define NET_ERR_NO_STREAM_ID                        956 //?‾ID??????
#define NET_DVR_TRANS_NOT_START                        957 //℅?????????
#define NET_ERR_MAXNUM_STREAM_ID                    958 //?‾ID??????????
#define NET_ERR_WORKMODE_MISMATCH                    959 //?∟℅‾??????????
#define NET_ERR_MODE_IS_USING                        960 //???∟℅‾???㊣?∼????
#define NET_ERR_DEV_PROGRESSING                        961 //?豕㊣????????赤??
#define NET_ERR_PASSIVE_TRANSCODING                    962 //????㊣???℅???

#define NET_ERR_RING_NOT_CONFIGURE                 964 //?﹞????????

#define NET_ERR_CLOSE_WINDOW_FIRST                    971  //???????????????㊣㊣???????㊣????????????????∼??
#define NET_ERR_SPLIT_WINDOW_NUM_NOT_SUPPORT        972  //VGA/DVI/DP/HDMI/HDBase_T???????????????????????∫??9/16????
#define NET_ERR_REACH_ONE_SIGNAL_PREVIEW_MAX_LINK   973  //????????????????????????
#define NET_ERR_ONLY_SPLITWND_SUPPORT_AMPLIFICATION  974  //????﹞????∼???∫??℅??∼??﹞??車
#define NET_DVR_ERR_WINDOW_SIZE_PLACE  975  //?∼???????赤?車
#define NET_DVR_ERR_RGIONAL_RESTRICTIONS  976  //?????角??????
#define NET_ERR_WNDZOOM_NOT_SUPPORT  977  //???∼?????∫??℅??∼??????????
#define NET_ERR_LED_SCREEN_SIZE  978  //LED???赤???????﹞
#define NET_ERR_OPEN_WIN_IN_ERROR_AREA  979  //??﹞?﹞“???辰???∼(∼邦?“??LCD/LED??)
#define NET_ERR_TITLE_WIN_NOT_SUPPORT_MOVE  980  //???????????∫??????
#define NET_ERR_TITLE_WIN_NOT_SUPPORT_COVER  981  //???????????∫??????????
#define NET_ERR_TITLE_WIN_NOT_SUPPORT_SPLIT  982  //???????????∫??﹞???
#define NET_DVR_LED_WINDOWS_ALREADY_CLOSED  983  //LED???辰??????????﹞?㊣???﹞??迆㊣??????豕㊣?????㊣??????辰?????迄??LED?∼??
#define NET_DVR_ERR_CLOSE_WINDOWS  984  //??℅‾?∫∼?????????㊣??∼??
#define NET_DVR_ERR_MATRIX_LOOP_ABILITY            985 //????????????????????
#define NET_DVR_ERR_MATRIX_LOOP_TIME           986 //?????????㊣?????∫??
#define NET_DVR_ERR_LINKED_OUT_ABILITY           987 //?????“????????????
#define NET_ERR_REACH_SCENE_MAX_NUM         988 //???∼????????????
#define NET_ERR_SCENE_MEM_NOT_ENOUGH        989 //??????℅?????﹞“???“???∼
#define NET_ERR_RESOLUTION_NOT_SUPPORT_ODD_VOUT     990     //???????∫????﹞?㊣???
#define NET_ERR_RESOLUTION_NOT_SUPPORT_EVEN_VOUT    991     //???????∫????﹞?㊣???

#define NET_DVR_CANCEL_WND_OPENKEEP_ATTR_FIRST    992     //?????∼???豕????????????????????㊣???㊣?
#define NET_SDK_LED_MODE_NOT_SUPPORT_SPLIT        993     //LED?????????∫???∼??﹞???
#define NET_ERR_VOICETALK_ONLY_SUPPORT_ONE_TALK   994     //???㊣???∫?????﹞????????
#define NET_ERR_WND_POSITION_ADJUSTED             995     //?∼??????㊣??豕㊣??‾?????????豕?????????????∼??????
#define NET_SDK_ERR_STARTTIME_CANNOT_LESSTHAN_CURTIME   996     //?????㊣???????????㊣?∼?㊣??
#define NET_SDK_ERR_NEED_ADJUST_PLAN            997     //???∼??㊣??∟∼??????????????????∼???∟∼???????

//?????????????赤?車??
#define XML_ABILITY_NOTSUPPORT                      1000  //???∫??????????????
#define    XML_ANALYZE_NOENOUGH_BUF                    1001        //??????????℅?
#define    XML_ANALYZE_FIND_LOCALXML_ERROR                1002        //??﹞“??????????㊣???xml
#define    XML_ANALYZE_LOAD_LOCALXML_ERROR                1003        //????㊣???xml???赤
#define    XML_NANLYZE_DVR_DATA_FORMAT_ERROR            1004        //?豕㊣??????????????赤?車
#define    XML_ANALYZE_TYPE_ERROR                        1005        //???????角???赤?車
#define    XML_ANALYZE_XML_NODE_ERROR                    1006        //XML?????????????赤?車
#define XML_INPUT_PARAM_ERROR                       1007  //??????????XML???????赤?車

#define NET_DVR_ERR_RETURNED_XML_DATA  1008  //?豕㊣?﹞?????XML???????車

//?????赤?車??
#define NET_ERR_LEDAREA_EXIST_WINDOW        1051 //LED???辰???∼??????(????LED???辰?????????∼?????????????赤????LED???辰??
#define NET_ERR_AUDIO_EXIST                 1052 //???????????????????????????赤????∼車?“
#define NET_ERR_MATERIAL_NAME_EXIST                1053 //??????????????
#define NET_ERR_MATERIAL_APPROVE_STATE             1054 //?????車??℅????赤?車
#define NET_ERR_DATAHD_SIGNAL_FORMAT               1055 //?????????????????赤??????????

#define NET_ERR_SCENE_SWITCHING             1056 //???∼????????
#define NER_ERR_DATA_TRANSFER               1057 //?豕㊣?????????℅?????
#define NET_ERR_DATA_RESTORE                1058 //?豕㊣???????????????
#define NET_ERR_CHECK_NOT_ENABLE            1059  //??????????????
#define NET_ERR_AREA_OFFLINE                1060  //???辰??????
#define NET_ERR_SCREEN_TYPE                 1061 //?????角????????
#define NET_ERR_MIN_OPERATE_UNIT            1062 //℅?????℅‾??????????
#define NET_ERR_MAINHD_NOT_BACKUP           1063 //???????????????“???“?‾?????????豕????㊣?﹞???
#define NET_ERR_ONE_BACKUP_HD               1064 //?豕??㊣?﹞????㊣???豕㊣??????????谷???“??
#define NET_ERR_CONNECT_SUB_SYSTEM_ABNORMAL     1065  //????℅??????足??
#define NET_ERR_SERIAL_PORT_VEST             1066     //?赤?車???????谷??
#define NET_ERR_WHITE_LIST_FULL        1067           //∼℅??????㊣赤???????迆
#define NET_ERR_NOT_MATCH_SOURCE    1068         //???????????????角??
#define NET_ERR_CLOCK_VIRTUAL_LED_FULL    1069        //?????㊣?????????谷??LED??????
#define NET_ERR_MAX_WIN_SIGNAL_LOOP_NUM   1070      //?∼????????????????????????
#define NET_ERR_RESOLUTION_NO_MATCH_FRAME 1071   //﹞?㊣??????㊣?∼??????????
#define NET_ERR_NOT_UPDATE_LOW_VERSION    1072   //???∫???辰??∼?㊣?????
#define NET_ERR_NO_CUSTOM_TO_UPDATE       1073   //﹞??“?????辰??﹞“????
#define NET_ERR_CHAN_RESOLUTION_NOT_SUPPORT_SPLIT  1074   //????????﹞?㊣??????∫??﹞???
#define NET_ERR_HIGH_DEFINITION_NOT_SUPPORT_SPLIT  1075    //?????????∫??9/16????﹞???
#define NET_ERR_MIRROR_IMAGE_BY_VIDEO_WALL         1076    //?????????????赤
#define NET_ERR_MAX_OSD_FONT_SIZE                  1077    //????OSD℅??車?∫??℅?﹞???
#define NET_ERR_HIGH_DEFINITION_NOT_SUPPORT_VIDEO_SET  1078  //???????∫???????????豕??
#define NET_ERR_TILE_MODE_NOT_SUPPORT_JOINT        1079  //???????????∫???????∼??
#define NET_ERR_ADD_AUDIO_MATRIX_FAILED         1080  //???“???????車?∫∼?
#define NET_ERR_ONE_VIRTUAL_LED_AREA_BIND_ONE_AUDIO_AREA   1081  //?????谷??LED???辰????∼車?“???????????辰
#define NET_ERR_NAT_NOT_MODIFY_SERVER_NETWORK_PARAM   1082  //NAT????﹞“????﹞????‾????????


//?????赤?車???“1100??1200??
#define NET_ERR_PLT_USERID                          1100 //?谷?∟???“userid?赤?車
#define NET_ERR_TRANS_CHAN_START                    1101 //???‾?“?????辰?????㊣?∼??℅‾??﹞“?那??
#define NET_ERR_DEV_UPGRADING                        1102 //?豕㊣?????????
#define NET_ERR_MISMATCH_UPGRADE_PACK_TYPE          1103 //????∼邦?角????????
#define NET_ERR_DEV_FORMATTING                      1104 //?豕㊣???????????
#define NET_ERR_MISMATCH_UPGRADE_PACK_VERSION       1105 //????∼邦∼?㊣???????
#define NET_ERR_PT_LOCKED                           1106 //PT???“????

#define NET_DVR_LOGO_OVERLAY_WITHOUT_UPLOAD_PIC     1110 //logo?????∫∼???????????logo????
#define NET_DVR_ERR_ILLEGAL_VERIFICATION_CODE        1111 //????﹞“?谷?∟??
#define NET_DVR_ERR_LACK_VERIFICATION_CODE            1112 //?㊣???谷?∟??
#define NET_DVR_ERR_FORBIDDEN_IP                    1113 //??IP???﹞??㊣????????????赤????(?豕㊣??∫????IP???﹞????????)
#define NET_DVR_ERR_UNLOCKPTZ                       1114 //??℅‾???∫?????????“???“
#define NET_DVR_ERR_COUNTAREA_LARGE                 1116 //???????辰?????赤?車?????辰?????車???豕㊣????赤??
#define NET_DVR_ERR_LABEL_ID_EXCEED                 1117//㊣那??ID????
#define NET_DVR_ERR_LABEL_TYPE                      1118//㊣那???角???赤?車
#define NET_DVR_ERR_LABEL_FULL                      1119//㊣那???迆
#define NET_DVR_ERR_LABEL_DISABLED                  1120//㊣那????????
#define NET_DVR_ERR_DOME_PT_TRANS_TO_DOME_XY        1121//?辰?迆PT℅??辰?迆XY?∫∼?
#define NET_DVR_ERR_DOME_PT_TRANS_TO_PANORAMA_XY    1122//?辰?迆PT℅????∼XY?∫∼?
#define NET_DVR_ERR_PANORAMA_XY_TRANS_TO_DOME_PT    1123//???∼XY℅?㊣那℅??辰?迆PT?赤?車
#define NET_DVR_ERR_SCENE_DUR_TIME_LESS_THAN_INTERV_TIME 1124//???∼?????㊣?????車???足??????
#define NET_DVR_ERR_HTTP_BKN_EXCEED_ONE            1125//??????????﹞????∫?????﹞
#define NET_DVR_ERR_DELETING_FAILED_TURN_OFF_HTTPS_ESDK_WEBSOCKETS_FIRST    1126//?????∫∼?????????㊣?HTTPS??????﹞?????????????SDK﹞????∼WebSockets﹞?????
#define NET_DVR_ERR_DELETING_FAILED_TURN_OFF_HTTPS_ESDK_FIRST    1127//?????∫∼?????????㊣?HTTPS??????﹞?????????????SDK﹞?????
//2012-10-16 ㊣“???豕㊣??赤?車???“1200~1300??
#define NET_ERR_SEARCHING_MODULE                    1201 // ???????‾???????谷
#define NET_ERR_REGISTERING_MODULE                  1202 // ????℅??芍???????谷
#define NET_ERR_GETTING_ZONES                        1203 // ????????﹞???????
#define NET_ERR_GETTING_TRIGGERS                    1204 // ??????????﹞??‾
#define NET_ERR_ARMED_STATUS                        1205 // ??????????﹞?℅???
#define    NET_ERR_PROGRAM_MODE_STATUS                    1206 // ????????㊣角??????
#define    NET_ERR_WALK_TEST_MODE_STATUS                1207 // ????????????????
#define    NET_ERR_BYPASS_STATUS                        1208 // ???﹞℅???
#define NET_ERR_DISABLED_MODULE_STATUS                1209 // ??????????
#define    NET_ERR_NOT_SUPPORT_OPERATE_ZONE            1210 // ﹞??????∫??????℅‾
#define NET_ERR_NOT_SUPPORT_MOD_MODULE_ADDR            1211 // ???谷???﹞????㊣?????
#define NET_ERR_UNREGISTERED_MODULE                    1212 // ???谷??℅??芍
#define NET_ERR_PUBLIC_SUBSYSTEM_ASSOCIATE_SELF        1213 // ????℅?????????℅??赤
#define NET_ERR_EXCEEDS_ASSOCIATE_SUBSYSTEM_NUM        1214 // ????????℅?????℅??車????????
#define NET_ERR_BE_ASSOCIATED_BY_PUBLIC_SUBSYSTEM    1215 // ℅?????㊣?????????℅?????????
#define    NET_ERR_ZONE_FAULT_STATUS                    1216 // ﹞???????????℅???
#define NET_ERR_SAME_EVENT_TYPE                    1217 // ??????﹞?㊣“??????????????????﹞?㊣“????????㊣??????角???????角??    
#define NET_ERR_ZONE_ALARM_STATUS                    1218 // ﹞???????㊣“??℅???
#define NET_ERR_EXPANSION_BUS_SHORT_CIRCUIT            1219 //????℅??????﹞
#define NET_ERR_PWD_CONFLICT                        1220  //????????
#define NET_ERR_DETECTOR_GISTERED_BY_OTHER_ZONE     1221    //?????‾??㊣?????﹞???℅??芍
#define NET_ERR_DETECTOR_GISTERED_BY_OTHER_PU       1222    //?????‾??㊣??????‾?迆℅??芍
#define NET_ERR_DETECTOR_DISCONNECT                 1223    //?????‾??????
#define NET_ERR_CALL_BUSY                           1224    //?豕㊣??????“?∼??
#define NET_DVR_ERR_ZONE_TAMPER_STAUS                1225    //﹞???????﹞???℅???
#define NET_DVR_ERR_WIRELESS_DEV_REGISTER             1226    //???????豕??㊣??????‾?迆℅??芍
#define NET_DVR_ERR_WIRELESS_DEV_ADDED                1227   //???????豕??㊣??赤??
#define NET_DVR_ERR_WIRELESS_DEV_OFFLINE              1228  //???????豕??????
#define NET_DVR_ERR_WIRELESS_DEV_TAMPER_STATUS         1229  //???????豕????﹞???℅???
#define NET_DVR_ERR_GPRS_PHONE_CONFLICT    1230   //???∼㊣“????????㊣“??????????
//????﹞????‾?迆
#define NET_ERR_GET_ALL_RETURN_OVER                    1300  //?????迄??﹞???????????
#define NET_ERR_RESOURCE_USING                      1301  //????﹞???℅?????????????????????
#define NET_ERR_FILE_SIZE_OVERLIMIT                    1302  //?????車??????

//????﹞???﹞????‾?赤?車??
#define NET_ERR_MATERIAL_NAME                       1303  //????????﹞?﹞“
#define NET_ERR_MATERIAL_NAME_LEN                   1304  //?????????∟??﹞?﹞“
#define NET_ERR_MATERIAL_REMARK                     1305  //?????豕??﹞?﹞“
#define NET_ERR_MATERIAL_REMARK_LEN                 1306  //?????豕???∟??﹞?﹞“
#define NET_ERR_MATERIAL_SHARE_PROPERTY             1307  //???????赤????﹞?﹞“
#define NET_ERR_UNSUPPORT_MATERIAL_TYPE             1308  //?????角?????∫??
#define NET_ERR_MATERIAL_NOT_EXIST                  1309  //??????????
#define NET_ERR_READ_FROM_DISK                      1310  //???????????????????∫∼?
#define NET_ERR_WRITE_TO_DISK                       1311  //?辰???????????????∫∼?
#define NET_ERR_WRITE_DATA_BASE                     1312  //?????????????∫∼?
#define NET_ERR_NO_APPROVED_NOT_EXPORT               1313  //???車??????????﹞???

//?角???????赤?車??
#define    NET_ERR_MAX_SCREEN_CTRL_NUM                    1351    //??????????????????????
#define    NET_ERR_FILE_NOT_EXIST                        1352    //??????????
#define NET_ERR_THUMBNAIL_NOT_EXIST                    1353    //????????????
#define NET_ERR_DEV_OPEN_FILE_FAIL                    1354    //?豕㊣????辰???????∫∼?
#define NET_ERR_SERVER_READ_FILE_FAIL                1355    //?豕㊣????????????∫∼?
#define NET_ERR_FILE_SIZE                            1356    //?????車???赤?車
#define    NET_ERR_FILE_NAME                            1357    //?????????赤?車???????辰????﹞“

//﹞????赤?車???“1351-1400??
#define NET_ERR_BROADCAST_BUSY                     1358     //?豕㊣???????????

//2012-12-20℅????迆?赤?車???“1400-1499??
#define NET_DVR_ERR_LANENUM_EXCEED                  1400  //??????????????
#define NET_DVR_ERR_PRAREA_EXCEED                   1401  //???????辰???車
#define NET_DVR_ERR_LIGHT_PARAM                     1402  //???????????????赤?車
#define NET_DVR_ERR_LANE_LINE_INVALID               1403  //???????????赤?車
#define NET_DVR_ERR_STOP_LINE_INVALID               1404  //???????????赤?車
#define NET_DVR_ERR_LEFTORRIGHT_LINE_INVALID        1405  //℅車/??℅?﹞??????????赤?車
#define NET_DVR_ERR_LANE_NO_REPEAT                  1406  //??????????????
#define NET_DVR_ERR_PRAREA_INVALID                  1407  //?????角㊣?????﹞??????車
#define NET_DVR_ERR_LIGHT_NUM_EXCEED                1408  //?????足?????“????????????????℅??車??
#define NET_DVR_ERR_SUBLIGHT_NUM_INVALID            1409  //?????足?????“????????℅???????????﹞“
#define NET_DVR_ERR_LIGHT_AREASIZE_INVALID          1410  //?????足?????“?????????????辰?車??????﹞“
#define NET_DVR_ERR_LIGHT_COLOR_INVALID             1411  //?????足?????“????????????????????﹞“
#define NET_DVR_ERR_LIGHT_DIRECTION_INVALID         1412  //?????足?????“????????﹞??辰????????﹞“
#define NET_DVR_ERR_LACK_IOABLITY                    1413  //IO???????∫??????????℅?

#define NET_DVR_ERR_FTP_PORT                        1414  //FTP??????﹞?﹞“?“???????????辰???足????
#define NET_DVR_ERR_FTP_CATALOGUE                   1415  //FTP??????﹞?﹞“?“?????角?????????角????????????????
#define NET_DVR_ERR_FTP_UPLOAD_TYPE                 1416  //FTP?????角??﹞?﹞“?“??ftp???∫??????/??ftp???∫???“??????????
#define NET_DVR_ERR_FLASH_PARAM_WRITE               1417  //?????????㊣??FLASH?∫∼?
#define NET_DVR_ERR_FLASH_PARAM_READ                1418  //?????????㊣??FLASH?∫∼?
#define NET_DVR_ERR_PICNAME_DELIMITER               1419  //FTP?????邦??﹞???﹞?﹞?﹞“
#define NET_DVR_ERR_PICNAME_ITEM                    1420  //FTP?????邦????﹞?﹞“?“???? ﹞???﹞???
#define NET_DVR_ERR_PLATE_RECOGNIZE_TYPE            1421  //???????辰?角??﹞?﹞“ ?“???????角㊣??????∫?????谷??
#define NET_DVR_ERR_CAPTURE_TIMES                   1422  //℅???????﹞?﹞“ ?“???∫????0??5??
#define NET_DVR_ERR_LOOP_DISTANCE                   1423  //?????角??﹞?﹞“ ?“???∫????0??2000ms??
#define NET_DVR_ERR_LOOP_INPUT_STATUS               1424  //????????℅???﹞?﹞“ ?“???∫????
#define NET_DVR_ERR_RELATE_IO_CONFLICT              1425  //????℅谷IO????????
#define NET_DVR_ERR_INTERVAL_TIME                   1426  //?????????㊣??﹞?﹞“ ?“0??6000ms??
#define NET_DVR_ERR_SIGN_SPEED                      1427  //㊣那????????﹞?﹞“?“?車??㊣那???????????車??????㊣那?????? ??
#define NET_DVR_ERR_PIC_FLIP                        1428  //????????﹞?℅? ?“?????????∼?足??
#define NET_DVR_ERR_RELATE_LANE_NUMBER              1429  //???????????赤?車 (???? ???∫?????谷1??99)
#define NET_DVR_ERR_TRIGGER_MODE                    1430  //????℅????迆??﹞?????﹞?﹞“
#define NET_DVR_ERR_DELAY_TIME                      1431  //??﹞????㊣?㊣???赤?車(2000ms)
#define NET_DVR_ERR_EXCEED_RS485_COUNT              1432  //????℅??車485????????
#define NET_DVR_ERR_RADAR_TYPE                      1433  //?℅???角???赤?車
#define NET_DVR_ERR_RADAR_ANGLE                     1434  //?℅???????赤?車
#define NET_DVR_ERR_RADAR_SPEED_VALID_TIME          1435  //?℅?????∫?㊣???赤?車
#define NET_DVR_ERR_RADAR_LINE_CORRECT              1436  //?℅???????????????赤?車
#define NET_DVR_ERR_RADAR_CONST_CORRECT             1437  //?℅???????????????赤?車
#define NET_DVR_ERR_RECORD_PARAM                    1438  //???????????∫?“?∟???㊣????????10s??
#define NET_DVR_ERR_LIGHT_WITHOUT_COLOR_AND_DIRECTION 1439   //?????足??????????????????????????????????????????﹞??辰????????
#define NET_DVR_ERR_LIGHT_WITHOUT_DETECTION_REGION   1440   //?????足???????????????????????????????????足?????辰
#define NET_DVR_ERR_RECOGNIZE_PROVINCE_PARAM         1441   //??????????﹞?????????﹞“??

#define NET_DVR_ERR_SPEED_TIMEOUT                 1442    //IO???????㊣?㊣??﹞?﹞“?“???∫???車??0??
#define NET_DVR_ERR_NTP_TIMEZONE                  1443    //ntp?㊣???????赤?車
#define NET_DVR_ERR_NTP_INTERVAL_TIME             1444    //ntp???㊣?????赤?車
#define NET_DVR_ERR_NETWORK_CARD_NUM              1445    //?????????“?????赤?車
#define NET_DVR_ERR_DEFAULT_ROUTE                 1446    //?????﹞???赤?車
#define NET_DVR_ERR_BONDING_WORK_MODE             1447    //bonding???“?∟℅‾?????赤?車
#define NET_DVR_ERR_SLAVE_CARD                    1448    //slave???“?赤?車
#define NET_DVR_ERR_PRIMARY_CARD                  1449    //Primary???“?赤?車
#define NET_DVR_ERR_DHCP_PPOE_WORK                1450    //dhcp??pppoE???????㊣????
#define NET_DVR_ERR_NET_INTERFACE                 1451    //?????????赤?車
#define NET_DVR_ERR_MTU                           1452    //MTU?赤?車
#define NET_DVR_ERR_NETMASK                       1453    //℅????????赤?車
#define NET_DVR_ERR_IP_INVALID                    1454    //IP???﹞????﹞“
#define NET_DVR_ERR_MULTICAST_IP_INVALID          1455    //?角?????﹞????﹞“
#define NET_DVR_ERR_GATEWAY_INVALID               1456    //????????﹞“
#define NET_DVR_ERR_DNS_INVALID                   1457    //DNS????﹞“
#define NET_DVR_ERR_ALARMHOST_IP_INVALID          1458    //?????‾?迆???﹞????﹞“
#define NET_DVR_ERR_IP_CONFLICT                   1459    //IP????
#define NET_DVR_ERR_NETWORK_SEGMENT               1460    //IP???∫????????
#define NET_DVR_ERR_NETPORT                       1461    //?????赤?車

#define NET_DVR_ERR_PPPOE_NOSUPPORT               1462  //PPPOE???∫??
#define NET_DVR_ERR_DOMAINNAME_NOSUPPORT          1463  //?辰?????∫??
#define NET_DVR_ERR_NO_SPEED                      1464  //?????????????? 
#define NET_DVR_ERR_IOSTATUS_INVALID              1465  //IO℅????赤?車
#define NET_DVR_ERR_BURST_INTERVAL_INVALID        1466  //????????﹞?﹞“    
#define NET_DVR_ERR_RESERVE_MODE                  1467  //㊣????????赤?車

#define NET_DVR_ERR_LANE_NO                       1468  //???????????赤?車
#define NET_DVR_ERR_COIL_AREA_TYPE                1469  //???????辰?角???赤?車
#define NET_DVR_ERR_TRIGGER_AREA_PARAM            1470  //??﹞????辰?????赤?車
#define NET_DVR_ERR_SPEED_LIMIT_PARAM             1471  //?????????????赤?車
#define NET_DVR_ERR_LANE_PROTOCOL_TYPE            1472  //???????????谷?角???赤?車

#define NET_DVR_ERR_INTERVAL_TYPE                 1473  //?????????角??﹞?﹞“
#define NET_DVR_ERR_INTERVAL_DISTANCE             1474  //?????????角??﹞?﹞“
#define NET_DVR_ERR_RS485_ASSOCIATE_DEVTYPE       1475  //RS485?????角??﹞?﹞“
#define NET_DVR_ERR_RS485_ASSOCIATE_LANENO        1476  //RS485??????????﹞?﹞“
#define NET_DVR_ERR_LANENO_ASSOCIATE_MULTIRS485   1477  //???????????角??RS485??
#define NET_DVR_ERR_LIGHT_DETECTION_REGION        1478  //?????足?????????????????????????????足?????辰?赤?辰????0

#define NET_DVR_ERR_DN2D_NOSUPPORT            1479  //???∫??℅?????2D????
#define NET_DVR_ERR_IRISMODE_NOSUPPORT        1480  //???∫???????﹞?角??
#define NET_DVR_ERR_WB_NOSUPPORT              1481  //???∫????∼℅????????
#define NET_DVR_ERR_IO_EFFECTIVENESS          1482  //IO???????∫??
#define NET_DVR_ERR_LIGHTNO_MAX               1483  //???????足???‾?????足/????????(16)
#define NET_DVR_ERR_LIGHTNO_CONFLICT          1484  //???????足???‾?????足/????????      

#define NET_DVR_ERR_CANCEL_LINE                1485  //?㊣????﹞???
#define NET_DVR_ERR_STOP_LINE               1486  //????????????
#define NET_DVR_ERR_RUSH_REDLIGHT_LINE      1487  //???足????﹞??? 
#define NET_DVR_ERR_IOOUTNO_MAX             1488  //IO??????㊣角??????

#define NET_DVR_ERR_IOOUTNO_AHEADTIME_MAX    1489  //IO???????芍?∼?㊣??????
#define NET_DVR_ERR_IOOUTNO_IOWORKTIME      1490  //IO?????????∫?????㊣??????
#define NET_DVR_ERR_IOOUTNO_FREQMULTI       1491  //IO????????????????㊣??????赤
#define NET_DVR_ERR_IOOUTNO_DUTYRATE        1492  //IO????????????????????㊣????赤
#define NET_DVR_ERR_VIDEO_WITH_EXPOSURE     1493  //?????????∫???∟℅‾﹞??????∫??????
#define NET_DVR_ERR_PLATE_BRIGHTNESS_WITHOUT_FLASHDET   1494  //????????℅??????????????????????????????????????∫

#define NET_DVR_ERR_RECOGNIZE_TYPE_PARAM            1495 //??㊣??角??﹞?﹞“ ??????㊣??????“???車??????????㊣??辰?????辰????㊣那??㊣?????
#define NET_DVR_ERR_PALTE_RECOGNIZE_AREA_PARAM      1496 //????????﹞?﹞“ ???????辰?????㊣???????赤
#define NET_DVR_ERR_PORT_CONFLICT                   1497 //??????????
#define NET_DVR_ERR_LOOP_IP                         1498 //IP?????豕???????﹞???﹞
#define NET_DVR_ERR_DRIVELINE_SENSITIVE             1499 //?????谷???????赤(??????????????)


//2013-3-6VQD?赤?車???“1500??1550??
#define NET_ERR_VQD_TIME_CONFLICT                    1500 //VQD?????㊣????????
#define NET_ERR_VQD_PLAN_NO_EXIST                    1501 //VQD??????????????
#define NET_ERR_VQD_CHAN_NO_EXIST                    1502 //VQD?角??????????
#define NET_ERR_VQD_CHAN_MAX                        1503 //VQD??????????????
#define NET_ERR_VQD_TASK_MAX                        1504 //VQD??????????????

#define NET_SDK_GET_INPUTSTREAMCFG                  1551  //??????????
#define NET_SDK_AUDIO_SWITCH_CONTROL                1552 //℅??∼??????????????
#define NET_SDK_GET_VIDEOWALLDISPLAYNO              1553  //?????豕㊣???????????
#define NET_SDK_GET_ALLSUBSYSTEM_BASIC_INFO         1554//?????迄??℅??????迄㊣?????
#define NET_SDK_SET_ALLSUBSYSTEM_BASIC_INFO         1555 //?豕???迄??℅??????迄㊣?????
#define NET_SDK_GET_AUDIO_INFO                      1556//?????迄??????????
#define NET_SDK_GET_MATRIX_STATUS_V50               1557 // ????????℅??????“℅???_V50
#define NET_SDK_DELETE_MONITOR_INFO                 1558//????Monitor????
#define NET_SDK_DELETE_CAMERA_INFO                  1559//????Camaera????


//℅????迆?赤?車??????????(1600~1900)
#define NET_DVR_ERR_EXCEED_MAX_CAPTURE_TIMES        1600 //℅??????????????㊣℅??車℅?????????2??(IVT??????)
#define NET_DVR_ERR_REDAR_TYPE_CONFLICT             1601 //?角??485???????℅???角?????? 
#define NET_DVR_ERR_LICENSE_PLATE_NULL              1602 //??????????
#define NET_DVR_ERR_WRITE_DATABASE                  1603 //???????????∫∼?
#define NET_DVR_ERR_LICENSE_EFFECTIVE_TIME          1604 //???????∫?㊣???赤?車
//????????
#define NET_DVR_ERR_PRERECORDED_STARTTIME_LONG      1605 //?∟???????㊣???車????﹞“℅???????
//?足???“??
#define NET_DVR_ERR_TRIGGER_RULE_LINE               1606 //??﹞????辰???赤?車
#define NET_DVR_ERR_LEFTRIGHT_TRIGGERLINE_NOTVERTICAL 1607 //℅車/????﹞????????㊣
#define NET_DVR_ERR_FLASH_LAMP_MODE                 1608 //???????????????赤?車
#define NET_DVR_ERR_ILLEGAL_SNAPSHOT_NUM            1609 //????℅????????赤?車
#define NET_DVR_ERR_ILLEGAL_DETECTION_TYPE          1610 //?????足???角???赤?車
#define NET_DVR_ERR_POSITIVEBACK_TRIGGERLINE_HIGH   1611 //??㊣??辰??﹞????????赤?車
#define NET_DVR_ERR_MIXEDMODE_CAPTYPE_ALLTARGETS    1612 //?足???????????∫???迆﹞???℅????角??

#define NET_DVR_ERR_CARSIGNSPEED_GREATERTHAN_LIMITSPEED  1613//????㊣那???????車????????
#define NET_DVR_ERR_BIGCARSIGNSPEED_GREATERTHAN_LIMITSPEED  1614//?車??㊣那???????車????????
#define NET_DVR_ERR_BIGCARSIGNSPEED_GREATERTHAN_CARSIGNSPEED  1615//?車??㊣那???????車??????㊣那????????
#define NET_DVR_ERR_BIGCARLIMITSPEED_GREATERTHAN_CARLIMITSPEED  1616//?車?????????車????????????
#define NET_DVR_ERR_BIGCARLOWSPEEDLIMIT_GREATERTHAN_CARLOWSPEEDLIMIT  1617//?車?????????????車????????????????
#define NET_DVR_ERR_CARLIMITSPEED_GREATERTHAN_EXCEPHIGHSPEED  1618//?????????車???足????????
#define NET_DVR_ERR_BIGCARLIMITSPEED_GREATERTHAN_EXCEPHIGHSPEED  1619//?車???????車???足????????
#define NET_DVR_ERR_STOPLINE_MORETHAN_TRIGGERLINE  1620//???????????㊣????﹞???
#define NET_DVR_ERR_YELLOWLIGHTTIME_INVALID        1621/*?????足???????????㊣??????﹞“㊣“?赤*/
#define NET_DVR_ERR_TRIGGERLINE1_FOR_NOT_YIELD_TO_PEDESTRIAN_CANNOT_EXCEED_TRIGGERLINE2 1622//??????????????????﹞?????????????????????????????????﹞???
#define NET_DVR_ERR_TRIGGERLINE2_FOR_NOT_YIELD_TO_PEDESTRIAN_CANNOT_EXCEED_TRIGGERLINE1 1623//??????????????????﹞?????????????????????????????????﹞???

//?????‾?迆?赤?車??
#define NET_ERR_TIME_OVERLAP                        1900 //?㊣????????
#define NET_ERR_HOLIDAY_PLAN_OVERLAP                1901 //????????????
#define NET_ERR_CARDNO_NOT_SORT                     1902 //?“???????辰
#define NET_ERR_CARDNO_NOT_EXIST                    1903 //?“????????
#define NET_ERR_ILLEGAL_CARDNO                      1904 //?“???赤?車
#define NET_ERR_ZONE_ALARM                          1905 //﹞?????????﹞?℅???(?????????????赤)
#define NET_ERR_ZONE_OPERATION_NOT_SUPPORT          1906 //﹞??????∫??????℅‾
#define NET_ERR_INTERLOCK_ANTI_CONFLICT             1907 //?角????????﹞??㊣?????㊣?????赤?車
#define NET_ERR_DEVICE_CARD_FULL                    1908 //?“???迆?“?“????10W?車﹞?????
#define NET_ERR_HOLIDAY_GROUP_DOWNLOAD              1909 //????℅谷?????∫∼?
#define NET_ERR_LOCAL_CONTROL_OFF                    1910 //?????????‾????
#define NET_ERR_LOCAL_CONTROL_DISADD                1911 //?????????‾???赤??
#define NET_ERR_LOCAL_CONTROL_HASADD                1912 //?????????‾???赤??
#define NET_ERR_LOCAL_CONTROL_DOORNO_CONFLICT        1913 //?????赤?????????????‾??㊣角??????
#define NET_ERR_LOCAL_CONTROL_COMMUNICATION_FAIL    1914 //?????????‾?“???∫∼?
#define NET_ERR_OPERAND_INEXISTENCE                  1915 //??℅‾???車???????“??????㊣“????????㊣“???????角????℅‾???㊣???車???赤???㊣﹞?????
#define NET_ERR_LOCAL_CONTROL_OVER_LIMIT              1916 //?????????‾?????豕㊣?℅??車?????“?‾????????????????????
#define NET_ERR_DOOR_OVER_LIMIT                         1917 //???????豕㊣?℅??車????
#define NET_ERR_ALARM_OVER_LIMIT                         1918 //㊣“???????????????豕㊣?℅??車????
#define NET_ERR_LOCAL_CONTROL_ADDRESS_INCONFORMITY_TYPE      1919 //?????????‾???﹞???角????﹞?
#define NET_ERR_NOT_SUPPORT_ONE_MORE_CARD           1920 //???∫???????角?“
#define NET_ERR_DELETE_NO_EXISTENCE_FACE            1921 //????????????????
#define NET_ERR_DOOR_SPECIAL_PASSWORD_REPEAT        1922 //???豕㊣???????????????
#define NET_ERR_AUTH_CODE_REPEAT                    1923 //???豕㊣????∟??????
#define NET_ERR_DEPLOY_EXCEED_MAX                   1924 //??﹞?????℅??車??????
#define NET_ERR_NOT_SUPPORT_DEL_FP_BY_ID            1925 //???“?‾???∫??∼?????ID????????
#define NET_ERR_TIME_RANGE                          1926 //???∫??????????﹞??∫???車

//?????????赤?車??
#define NET_DVR_ERR_OUTDOOR_COMMUNICATION            1950 //???????迆?“???足??
#define NET_DVR_ERR_ROOMNO_UNDEFINED                1951 //???豕??﹞?????
#define NET_DVR_ERR_NO_CALLING                        1952 //??????
#define NET_DVR_ERR_RINGING                            1953 //?足??
#define NET_DVR_ERR_IS_CALLING_NOW                    1954 //?????“?∼
#define NET_DVR_ERR_LOCK_PASSWORD_WRONG             1955//???????????赤?車
#define NET_DVR_ERR_CONTROL_LOCK_FAILURE            1956//???????∫∼?    
#define NET_DVR_ERR_CONTROL_LOCK_OVERTIME           1957//?????????㊣    
#define NET_DVR_ERR_LOCK_DEVICE_BUSY                1958//???????豕㊣?﹞㊣??
#define NET_DVR_ERR_UNOPEN_REMOTE_LOCK_FUNCTION     1959//???????????????辰??


//?車???赤?車?? ?“2100 - 3000??
#define NET_DVR_ERR_FILE_NOT_COMPLETE               2100    //?????????????那??
#define NET_DVR_ERR_IPC_EXIST                       2101    //??IPC????????
#define NET_DVR_ERR_ADD_IPC                         2102    //???“?????赤??IPC
#define NET_DVR_ERR_OUT_OF_RES                      2103    //???????赤??????℅?
#define NET_DVR_ERR_CONFLICT_TO_LOCALIP             2104    //IPC??ip???﹞?迆DVR??ip???﹞????
#define NET_DVR_ERR_IP_SET                          2105    //﹞?﹞“ip???﹞
#define NET_DVR_ERR_PORT_SET                        2106    //﹞?﹞“????????

#define NET_ERR_WAN_NOTSUPPORT                      2107     //?????????????辰??????﹞“?豕??∼????????辰????GUID????
#define NET_ERR_MUTEX_FUNCTION                      2108     //????????
#define NET_ERR_QUESTION_CONFIGNUM                  2109     //∼????????????????赤?車
#define NET_ERR_FACECHAN_NORESOURCE                 2110     //?????????“??℅????????那
#define NET_ERR_DATA_CALLBACK                       2111     //???????????“
#define NET_ERR_ATM_VCA_CHAN_IS_RELATED             2112     //ATM?????“????㊣?????
#define NET_ERR_ATM_VCA_CHAN_IS_OVERLAPED           2113     //ATM?????“????㊣?????
#define NET_ERR_FACE_CHAN_UNOVERLAP_EACH_OTHER      2114     //?????“?????????角????
#define NET_ERR_ACHIEVE_MAX_CHANNLE_LIMIT           2115     //????℅??車?﹞??????
#define NET_DVR_SMD_ENCODING_NORESOURSE             2116  //SMD㊣角??℅?????℅?
#define NET_DVR_SMD_DECODING_NORESOURSE             2117  //SMD????℅?????℅?
#define NET_DVR_FACELIB_DATA_PROCESSING             2118  //?????????????????赤
#define NET_DVR_ERR_LARGE_TIME_DIFFRENCE            2119  //?豕㊣???﹞????‾???????㊣?????足???車
#define NET_DVR_NO_SUPPORT_WITH_PLAYBACK            2120  //????????﹞??????∫??㊣?????
#define NET_DVR_CHANNEL_NO_SUPPORT_WITH_SMD         2121  //?“????????SMD?????∫??㊣?????
#define NET_DVR_CHANNEL_NO_SUPPORT_WITH_FD          2122  //?“????????????℅????????∫??㊣?????
#define NET_DVR_ILLEGAL_PHONE_NUMBER                2123  //﹞?﹞“?????∼????
#define NET_DVR_ILLEGAL_CERITIFICATE_NUMBER         2124  //﹞?﹞“???∟??????
#define NET_DVR_ERR_CHANNEL_RESOLUTION_NO_SUPPORT   2125  //?“??﹞?㊣??????∫??
#define NET_DVR_ERR_CHANNEL_COMPRESSION_NO_SUPPORT  2126  //?“??㊣角?????????∫??

#define NET_DVR_ERR_CLUSTER_DEVICE_TOO_LESS                 2127  //?豕㊣????????????赤????
#define NET_DVR_ERR_CLUSTER_DEL_DEVICE_CM_PLAYLOAD          2128  //???豕㊣????????‾?迆???????赤????
#define NET_DVR_ERR_CLUSTER_DEVNUM_OVER_UPPER_LIMIT         2129  //?豕㊣??????????????????赤????
#define NET_DVR_ERR_CLUSTER_DEVICE_TYPE_INCONFORMITY        2130  //?豕㊣??角????????
#define NET_DVR_ERR_CLUSTER_DEVICE_VERSION_INCONFORMITY     2131  //?豕㊣?∼?㊣???????
#define NET_DVR_ERR_CLUSTER_IP_CONFLICT                     2132  //????????IP???﹞??????ipv4???﹞??????ipv6???﹞????
#define NET_DVR_ERR_CLUSTER_IP_INVALID                      2133  //????????IP???﹞???∫??ipv4﹞?﹞“??ipv6﹞?﹞“
#define NET_DVR_ERR_CLUSTER_PORT_CONFLICT                   2134  //????????????????
#define NET_DVR_ERR_CLUSTER_PORT_INVALID                    2135  //????????????﹞?﹞“
#define NET_DVR_ERR_CLUSTER_USERNAEM_OR_PASSWORD_INVALID    2136  //℅谷?????∫???辰????﹞?﹞“
#define NET_DVR_ERR_CLUSTER_DEVICE_ALREADY_EXIST            2137  //?????角???豕㊣?
#define NET_DVR_ERR_CLUSTER_DEVICE_NOT_EXIST                2138  //?豕㊣???????(℅谷???㊣??﹞???cs??㊣赤?????豕㊣??????????????“cs???????????????????㊣?辰??﹞???id????)
#define NET_DVR_ERR_CLUSTER_NON_CLUSTER_MODE                2139  //?豕㊣?????﹞?????????
#define NET_DVR_ERR_CLUSTER_IP_NOT_SAME_LAN                 2140  //IP???﹞???????????辰???????????辰???????赤℅谷??/????

#define NET_DVR_ERR_CAPTURE_PACKAGE_FAILED                  2141  //℅?∼邦?∫∼?
#define NET_DVR_ERR_CAPTURE_PACKAGE_PROCESSING              2142  //????℅?∼邦
#define NET_DVR_ERR_SAFETY_HELMET_NO_RESOURCE               2143  //∼????㊣?足??℅?????℅?
#define NET_DVR_NO_SUPPORT_WITH_ABSTRACT                    2144  //???????????????????∫??㊣?????
#define NET_DVR_ERR_TAPE_LIB_NEED_STOP_ARCHIVE              2145  //???????谷???豕??????
#define NET_DVR_INSUFFICIENT_DEEP_LEARNING_RESOURCES        2146  //?????∫?∼℅???????
#define NET_DVR_ERR_IDENTITY_KEY                            2147  //?????????赤?車
#define NET_DVR_MISSING_IDENTITY_KEY                        2148  //?????????㊣?∫
#define NET_DVR_NO_SUPPORT_WITH_PERSON_DENSITY_DETECT       2149  //?????????㊣?????足???????∫??㊣?????
#define NET_DVR_IPC_RESOLUTION_OVERFLOW                     2150  //IPC﹞?㊣???????
#define NET_DVR_IPC_BITRATE_OVERFLOW                        2151  //IPC????????
#define NET_DVR_ERR_INVALID_TASKID                          2152  //???∫??taskID
#define NET_DVR_PANEL_MODE_NOT_CONFIG                       2153  //??????????∼??﹞????
#define NET_DVR_NO_HUMAN_ENGINES_RESOURCE                   2154  //????????℅?????℅?
#define NET_DVR_ERR_TASK_NUMBER_OVERFLOW                    2155  //????????????????
#define NET_DVR_ERR_COLLISION_TIME_OVERFLOW                 2156  //??℅??㊣??????????
#define NET_DVR_ERR_CAPTURE_PACKAGE_NO_USB                  2157  //????㊣???U??????????U???辰????????
#define NET_DVR_ERR_NO_SET_SECURITY_EMAIL                   2158  //???豕??∼???????
#define NET_DVR_ERR_EVENT_NOTSUPPORT                        2159  //???????????∫??
#define NET_DVR_ERR_PASSWORD_FORMAT                         2160  //????????????
#define NET_DVR_ACCESS_FRONT_DEVICE_PARAM_FAILURE           2161  //?????∼???豕㊣??????∫∼?
#define NET_DVR_ACCESS_FRONT_DEVICE_STREAM_FAILURE          2162  //???∼???豕㊣????‾?∫∼?
#define NET_DVR_ERR_USERNAME_FORMAT                         2163  //???∫??????????
#define NET_DVR_ERR_UNOPENED_HIGH_RESOLUTION_MODE           2164  //????﹞?㊣?????????????
#define NET_DVR_ERR_TOO_SMALL_QUATO                         2165  //?????豕??????
#define NET_DVR_ERR_EMAIL_FORMAT                            2166  //????????????
#define NET_DVR_ERR_SECURITY_CODE_FORMAT                    2167  //∼?????????????
#define NET_DVR_PD_SPACE_TOO_SMALL                          2168  //?車??????????????
#define NET_DVR_PD_NUM_TOO_BIG                              2169  //?車??????℅???????℅?????????﹞?????
#define NET_DVR_ERR_USB_IS_FULL                             2170  //U?????迆
#define NET_DVR_EXCEED_MAX_SMD_TYPE                         2171  //????℅??車SMD???????角????
#define NET_DVR_CHANNEL_NO_SUPPORT_WITH_BEHAVIOR            2172  //?“????????????﹞????????∫??㊣?????
#define NET_DVR_NO_BEHAVIOR_ENGINES_RESOURCE                2173  //????﹞???℅?????℅?
#define NET_DVR_NO_RETENTION_ENGINES_RESOURCE               2174  //???㊣?????足??℅?????℅?
#define NET_DVR_NO_LEAVE_POSITION_ENGINES_RESOURCE          2175  //?????足??℅?????℅?
#define NET_DVR_NO_PEOPLE_NUM_CHANGE_ENGINES_RESOURCE       2176  //?????足??℅?????℅?
#define NET_DVR_PANEL_MODE_NUM_OVER_LIMIT                   2177  //??????∼??﹞℅??車?﹞??
#define NET_DVR_SURROUND_MODE_NUM_OVER_LIMIT                2178  //?????﹞???﹞℅??車?﹞??
#define NET_DVR_FACE_MODE_NUM_OVER_LIMIT                    2179  //?????????﹞℅??車?﹞??
#define NET_DVR_SAFETYCABIN_MODE_NUM_OVER_LIMIT             2180  //????﹞??∟???﹞℅??車?﹞??
#define NET_DVR_DETECT_REGION_RANGE_INVALID                 2181  //?足?????辰﹞??∫﹞?﹞“
#define NET_DVR_CHANNEL_CAPTURE_PICTURE_FAILURE             2182  //?“??℅????∫∼?
#define NET_DVR_VCACHAN_IS_NORESOURCE                       2183  //?????“??℅??????那
#define NET_DVR_IPC_NUM_REACHES_LIMIT                       2184  // Ipc?“??????????????
#define NET_DVR_IOT_NUM_REACHES_LIMIT                       2185  // IOT?“??????????????
#define NET_DVR_IOT_CHANNEL_DEVICE_EXIST                    2186  //?㊣?∼IOT?“???????赤???豕㊣?
#define NET_DVR_IOT_CHANNEL_DEVICE_NOT_EXIST                2187  //?㊣?∼IOT?“?????????豕㊣?
#define NET_DVR_INVALID_IOT_PROTOCOL_TYPE                   2188  //﹞?﹞“??IOT???谷?角??
#define NET_DVR_INVALID_EZVIZ_SECRET_KEY                    2189  //﹞?﹞“??????℅??芍?谷?∟??
#define NET_DVR_DUPLICATE_IOT_DEVICE                        2190  //??????IOT?豕㊣?
#define NET_DVR_SADP_MODIFY_FALIURE                         2191  // SADP?????∫∼?
#define NET_DVR_IPC_NETWORK_ABNORMAL                        2192  // IPC?????足?? 
#define NET_DVR_IPC_PASSWORD_ERROR                          2193  // IPC???∫???????赤?車
#define NET_DVR_ERROR_IPC_TYPE                              2194  //IPC?角??????
#define NET_DVR_ERROR_IPC_LIST_NOT_EMPTY                    2195  //???赤??IPC??㊣赤???????????∫?????邦????
#define NET_DVR_ERROR_IPC_LIST_NOT_MATCH_PAIRING            2196  //IPC??㊣赤????????????
#define NET_DVR_ERROR_IPC_BAD_LANGUAGE                      2197  //IPC???????豕㊣???????
#define NET_DVR_ERROR_IPC_IS_LOCKING                        2198  //IPC??㊣???
#define NET_DVR_ERROR_IPC_NOT_ACTIVATED                     2199  //IPC???∟??
#define NET_DVR_FIELD_CODING_NOT_SUPPORT                    2200  //??㊣角?????∫??
#define NET_DVR_ERROR_H323_NOT_SUPPORT_H265                 2201  //H323?????芍?谷?????∫??H265???‾
#define NET_DVR_ERROR_EXPOSURE_TIME_TOO_BIG_IN_MODE_P       2202  //P?????????????㊣?????車
#define NET_DVR_ERROR_EXPOSURE_TIME_TOO_BIG_IN_MODE_N       2203  //N?????????????㊣?????車
#define NET_DVR_ERROR_PING_PROCESSING                       2204  //????PING
#define NET_DVR_ERROR_PING_NOT_START                        2205  //Ping??????????
#define NET_DVR_ERROR_NEED_DOUBLE_VERIFICATION              2206  //?豕?????????∟
#define NET_DVR_NO_DOUBLE_VERIFICATION_USER                 2207  //?????????∟???∫
#define NET_DVR_CHANNEL_OFFLINE                             2208  //?“??????
#define NET_DVR_TIMESPAN_NUM_OVER_LIMIT                     2209  //?㊣?????????∫??℅??車????
#define NET_DVR_CHANNEL_NUM_OVER_LIMIT                      2210  //?“???????????∫??℅??車????
#define NET_DVR_NO_SEARCH_ID_RESOURCE                       2211  //﹞????谷????searchID℅?????℅?
#define NET_DVR_ERROR_ONEKEY_EXPORT                         2212  //??????????????℅‾???????車????
#define NET_DVR_NO_CITY_MANAGEMENT_ENGINES_RESOURCE         2213  //??????﹞“????℅?????℅?
#define NET_DVR_NO_SITUATION_ANALYSIS_ENGINES_RESOURCE      2214  //????﹞???????℅?????℅?
#define NET_DVR_INTELLIGENT_ANALYSIS_IPC_CANNT_DELETE       2215  //????????????﹞?????IPC??﹞“????
#define NET_DVR_NOSUPPORT_RESET_PASSWORD                    2216  //NVR???∫????IPC????????
#define NET_DVR_ERROR_IPC_NEED_ON_LAN                       2217  // IPC?豕???????辰????
#define NET_DVR_CHANNEL_NO_SUPPORT_WITH_SAFETY_HELMET       2218  //?“????????∼????㊣?足???????∫??㊣?????
#define NET_DVR_ERROR_GET_RESETPASSWORDTYPE_IS_ABNORMAL     2219  /*IPC?????????㊣??????IPC???????????角???足??*/
#define NET_DVR_ERROR_IPC_NOSUPPORT_RESET_PASSWORD          2220  /* IPC???∫??????????*/
#define NET_DVR_ERROR_IP_IS_NOT_ONLY_ONE                    2221  /*IPC??IP???“??????????*/
#define NET_DVR_NO_SUPPORT_WITH_SMD_OR_SCD                  2222  //??????SMD/SCD?????∫??㊣??????“SCD?????∼㊣??邦??
#define NET_DVR_NO_SUPPORT_WITH_FD                          2223  //??????????℅????????∫??㊣?????
#define NET_DVR_NO_FD_ENGINES_RESOURCE                      2224  //????℅???℅?????℅?
#define NET_DVR_ERROR_ONEKEY_REMOVE                         2225  //??????????????℅‾???????車????
#define NET_DVR_FACE_PIP_BACKGROUND_CHANNEL_OVERFLOW        2226  //??????????㊣??∼?“?????? 
#define NET_DVR_MICIN_CHANNEL_OCCUPIED                      2227  //micin?“??㊣?????
#define NET_DVR_IPC_CHANNEL_IS_IN_PIP                       2228  //??℅‾?∫∼??????“???????????車???“??????????????????????????

#define NET_DVR_INVALID_RECHARGE_CARD                       2230 //???∫???????“
#define NET_DVR_CLOUD_PLATFORM_SERVER_EXCEPTION             2231 //?????“﹞????‾?足??
#define NET_DVR_OPERATION_FAILURE_WITHOUT_LOGIN             2232 //????????℅‾?∫∼?
#define NET_DVR_INVALID_ASSOCIATED_SERIAL_NUMBER            2233 //?????辰????﹞?﹞“
#define NET_DVR_CLOUD_PLATFORM_ACCOUNT_NOT_EXIST            2234 //?????“??????????
#define NET_DVR_DEVICE_SERIAL_NUMBER_REGISTERED             2235 //?豕㊣??辰??????℅??芍
#define NET_DVR_CONFERENCE_ROOM_NOT_EXIST                   2236 //?芍?谷????????
#define NET_DVR_NEED_DISABLED_ANALOG_CHANNEL                2237//?豕?????????“??
#define NET_DVR_STUDENT_ROLL_CALL_FAILURE                   2238//?∫?迆?????∫∼?
#define NET_DVR_SUB_DEVICE_NOT_ENABLE_INDIVIDUAL_BEHAVIOR   2239//℅??豕㊣???????????????????
#define NET_DVR_SUB_DEVICE_CHANNEL_CONTROL_FAILED           2240//℅??豕㊣??“???????∫∼?
#define NET_DVR_DEVICE_NOT_IN_CONFERENCE                    2241//?豕㊣??????芍?谷??
#define NET_DVR_ALREADY_EXIST_CONFERENCE                    2242//?㊣?∼?????????芍?谷
#define NET_DVR_NO_SUPPORT_WITH_VIDEO_CONFERENCE            2243//?㊣?∼?????????芍?谷???????∫??㊣?????
#define NET_DVR_START_INTERACTION_FAILURE                   2244//?????????∫∼?
#define NET_DVR_ASK_QUESTION_STARTED                        2245//???????芍??
#define NET_DVR_ASK_QUESTION_CLOSED                         2246//???芍???芍??
#define NET_DVR_UNABLE_OPERATE_BY_HOST                      2247//??㊣??‾????????????﹞“??℅‾
#define NET_DVR_REPEATED_ASK_QUESTION                       2248//?????芍??
#define NET_DVR_TIMEDIFF_LESS_LIMIT                         2249/*?????迆?㊣??????????????(10﹞???)*/
#define NET_DVR_CHANNEL_DEVICE_EXIST                        2250  //?㊣?∼?“???????赤???豕㊣?
#define NET_DVR_CHANNEL_DEVICE_NOT_EXIST                    2251  //?㊣?∼?“?????????豕㊣?


//???????迆???角???赤?車???“3001 - 3500??
#define NET_DVR_ERR_NOTSUPPORT_DEICING    3001    //?豕㊣??㊣?∼℅??????∫????㊣迄?????“????POE+??AC24V??DC12V???????∫????㊣迄??????
#define NET_DVR_ERR_THERMENABLE_CLOSE     3002    //????????℅?????????????(??NET_DVR_THERMOMETRY_BASICPARAM??????????)
#define NET_DVR_ERR_NOTMEET_DEICING       3003    //?㊣?∼???????????迆℅???????㊣迄?????????“?豕????????????30????????????
#define NET_DVR_ERR_PANORAMIC_LIMIT_OPERATED   3004    //???∼?????????????????㊣??℅‾
#define NET_DVR_ERR_SMARTH264_ROI_OPERATED   3005    //SmartH264??ROI???????㊣??℅‾
#define NET_DVR_ERR_RULENUM_LIMIT   3006    //???辰??????
#define NET_DVR_ERR_LASER_DEICING_OPERATED   3007    //?∟?????∼??㊣迄???????????㊣??℅‾
#define NET_DVR_ERR_OFFDIGITALZOOM_OR_MINZOOMLIMIT   3008    //??????㊣?????㊣?㊣??????辰㊣?㊣??????豕????℅????????㊣?????????足????????﹞??????????足??????????????????????????㊣??????㊣??????????㊣?????㊣?㊣??辰??㊣?㊣??????????豕????℅??????㊣?????芍?芍?????赤?車????
#define NET_DVR_ERR_FIREWAITING 3009 //?豕㊣????“??????????????
#define NET_DVR_SYNCHRONIZEFOV_ERROR 3010 //???????????赤?車
#define NET_DVR_CERTIFICATE_VALIDATION_ERROR 3011 //?∟?谷?谷?∟???“??
#define NET_DVR_CERTIFICATES_NUM_EXCEED_ERROR 3012 //?∟?谷????????????

#define NET_ERR_NPQ_BASE_INDEX    8000    //NPQ???赤?車??
#define NET_ERR_NPQ_PARAM       (NET_ERR_NPQ_BASE_INDEX + 1)        //NPQ?????????車
#define NET_ERR_NPQ_SYSTEM      (NET_ERR_NPQ_BASE_INDEX + 2)        //NPQ????℅‾?????‾???赤?車(∼邦?“℅????那???∫∼??辰?????赤?車????
#define NET_ERR_NPQ_GENRAL      (NET_ERR_NPQ_BASE_INDEX + 3)        //NPQ???????“???赤?車
#define NET_ERR_NPQ_PRECONDITION    (NET_ERR_NPQ_BASE_INDEX + 4)        //NPQ???‾?????辰?赤?車
#define NET_ERR_NPQ_NOTSUPPORT        (NET_ERR_NPQ_BASE_INDEX + 5)        //NPQ?????????∫??

#define NET_ERR_NPQ_NOTCALLBACK    (NET_ERR_NPQ_BASE_INDEX + 100)   //???????????‾????
#define NET_ERR_NPQ_LOADLIB (NET_ERR_NPQ_BASE_INDEX + 101)   //NPQ???????∫∼?
#define NET_ERR_NPQ_STEAM_CLOSE (NET_ERR_NPQ_BASE_INDEX + 104) //㊣??﹞???‾NPQ??????????
#define NET_ERR_NPQ_MAX_LINK (NET_ERR_NPQ_BASE_INDEX + 110) //NPQ???‾?﹞??????????
#define NET_ERR_NPQ_STREAM_CFG (NET_ERR_NPQ_BASE_INDEX + 111) //㊣角??????????????????

/*******************?????赤?車?? end**********************/

/*************************************************
NET_DVR_IsSupport()﹞?????
1??9??﹞?㊣?㊣赤???????????“??????TRUE)㊣赤???∫????
**************************************************/
#define NET_DVR_SUPPORT_DDRAW            0x01//?∫??DIRECTDRAW?????????∫?????辰??﹞??‾?????∟℅‾??
#define NET_DVR_SUPPORT_BLT                0x02//???“?∫??BLT??℅‾?????????∫?????辰??﹞??‾?????∟℅‾??
#define NET_DVR_SUPPORT_BLTFOURCC        0x04//???“BLT?∫??????℅????????????∫??????﹞??‾?芍???赤??﹞?﹞“℅‾RGB℅?????
#define NET_DVR_SUPPORT_BLTSHRINKX        0x08//???“BLT?∫??X?芍?????????????∫?????????芍???赤??﹞?﹞“℅?????
#define NET_DVR_SUPPORT_BLTSHRINKY        0x10//???“BLT?∫??Y?芍?????????????∫?????????芍???赤??﹞?﹞“℅?????
#define NET_DVR_SUPPORT_BLTSTRETCHX        0x20//???“BLT?∫??X?芍﹞??車?????????∫?????????芍???赤??﹞?﹞“℅?????
#define NET_DVR_SUPPORT_BLTSTRETCHY        0x40//???“BLT?∫??Y?芍﹞??車?????????∫?????????芍???赤??﹞?﹞“℅?????
#define NET_DVR_SUPPORT_SSE                0x80//CPU?∫??SSE??????Intel Pentium3?????∫??SSE??????
#define NET_DVR_SUPPORT_MMX                0x100//CPU?∫??MMX????????Intel Pentium3?????∫??SSE??????

/**********************???“?????邦?? begin*************************/
#define LIGHT_PWRON        2    /* ???“???????? */
#define WIPER_PWRON        3    /* ???“?那?????? */
#define FAN_PWRON        4    /* ???“﹞??????? */
#define HEATER_PWRON    5    /* ???“?????‾???? */
#define AUX_PWRON1        6    /* ???“?“?迆?豕㊣????? */
#define AUX_PWRON2        7    /* ???“?“?迆?豕㊣????? */
#define SET_PRESET        8    /* ?豕???∟???? */
#define CLE_PRESET        9    /* ?????∟???? */

#define ZOOM_IN            11    /* ???角??????SS㊣??車(㊣???㊣??車) */
#define ZOOM_OUT        12    /* ???角??????SS㊣???(㊣???㊣???) */
#define FOCUS_NEAR      13  /* ??????????SS?∼?‾ */
#define FOCUS_FAR       14  /* ??????????SS?車?‾ */
#define IRIS_OPEN       15  /* ??????????SS???車 */
#define IRIS_CLOSE      16  /* ??????????SS???? */

#define TILT_UP            21    /* ???“??SS?????????? */
#define TILT_DOWN        22    /* ???“??SS?????????? */
#define PAN_LEFT        23    /* ???“??SS??????℅車℅? */
#define PAN_RIGHT        24    /* ???“??SS????????℅? */
#define UP_LEFT            25    /* ???“??SS????????????℅車℅? */
#define UP_RIGHT        26    /* ???“??SS??????????????℅? */
#define DOWN_LEFT        27    /* ???“??SS????????????℅車℅? */
#define DOWN_RIGHT        28    /* ???“??SS??????????????℅? */
#define PAN_AUTO        29    /* ???“??SS??????℅車??℅????“?豕 */

#define FILL_PRE_SEQ    30    /* ???∟?????????????辰?? */
#define SET_SEQ_DWELL    31    /* ?豕?????????????㊣?? */
#define SET_SEQ_SPEED    32    /* ?豕?????????? */
#define CLE_PRE_SEQ        33    /* ???∟???????????辰???????? */
#define STA_MEM_CRUISE    34    /* ?????????足?? */
#define STO_MEM_CRUISE    35    /* ?????????足?? */
#define RUN_CRUISE        36    /* ?????足?? */
#define RUN_SEQ            37    /* ???????? */
#define STOP_SEQ        38    /* ???????? */
#define GOTO_PRESET        39    /* ?足?辰℅????∟???? */

#define DEL_SEQ         43  /* ?????????﹞?? */
#define STOP_CRUISE        44    /* ?????足?? */
#define DELETE_CRUISE    45    /* ?????????足?? */
#define DELETE_ALL_CRUISE 46/* ?????迄???足?? */

#define PAN_CIRCLE      50   /* ???“??SS??????℅????????“?豕 */
#define DRAG_PTZ        51   /* ????PTZ */
#define LINEAR_SCAN     52   /* ???辰?“?豕 */ //2014-03-15 
#define CLE_ALL_PRESET  53   /* ?∟???????????? */ 
#define CLE_ALL_SEQ     54   /* ???????????? */ 
#define CLE_ALL_CRUISE  55   /* ?足?????????? */ 

#define POPUP_MENU      56   /* ??????℅‾???? */

#define TILT_DOWN_ZOOM_IN    58    /* ???“??SS??????????&&???角??????SS㊣??車(㊣???㊣??車) */
#define TILT_DOWN_ZOOM_OUT  59  /* ???“??SS??????????&&???角??????SS㊣???(㊣???㊣???) */
#define PAN_LEFT_ZOOM_IN    60  /* ???“??SS??????℅車℅?&&???角??????SS㊣??車(㊣???㊣??車)*/
#define PAN_LEFT_ZOOM_OUT   61  /* ???“??SS??????℅車℅?&&???角??????SS㊣???(㊣???㊣???)*/
#define PAN_RIGHT_ZOOM_IN    62  /* ???“??SS????????℅?&&???角??????SS㊣??車(㊣???㊣??車) */
#define PAN_RIGHT_ZOOM_OUT  63  /* ???“??SS????????℅?&&???角??????SS㊣???(㊣???㊣???) */
#define UP_LEFT_ZOOM_IN     64  /* ???“??SS????????????℅車℅?&&???角??????SS㊣??車(㊣???㊣??車)*/
#define UP_LEFT_ZOOM_OUT    65  /* ???“??SS????????????℅車℅?&&???角??????SS㊣???(㊣???㊣???)*/
#define UP_RIGHT_ZOOM_IN    66  /* ???“??SS??????????????℅?&&???角??????SS㊣??車(㊣???㊣??車)*/
#define UP_RIGHT_ZOOM_OUT   67  /* ???“??SS??????????????℅?&&???角??????SS㊣???(㊣???㊣???)*/
#define DOWN_LEFT_ZOOM_IN   68  /* ???“??SS????????????℅車℅?&&???角??????SS㊣??車(㊣???㊣??車) */
#define DOWN_LEFT_ZOOM_OUT  69  /* ???“??SS????????????℅車℅?&&???角??????SS㊣???(㊣???㊣???) */
#define DOWN_RIGHT_ZOOM_IN    70  /* ???“??SS??????????????℅?&&???角??????SS㊣??車(㊣???㊣??車) */
#define DOWN_RIGHT_ZOOM_OUT    71  /* ???“??SS??????????????℅?&&???角??????SS㊣???(㊣???㊣???) */
#define TILT_UP_ZOOM_IN        72    /* ???“??SS??????????&&???角??????SS㊣??車(㊣???㊣??車) */
#define TILT_UP_ZOOM_OUT    73    /* ???“??SS??????????&&???角??????SS㊣???(㊣???㊣???) */
/**********************???“?????邦?? end*************************/

#define DVR_VEHICLE_CONTROL_LIST   0x1 //??????∼℅?????????角??(﹞??????????角??)2013-11-04


/*************************************************
??﹞??㊣??﹞??????邦???那?“??
NET_DVR_PlayBackControl
NET_DVR_PlayControlLocDisplay
NET_DVR_DecPlayBackCtrl???那?“??
?????∫???谷?????????‾???迆??
**************************************************/
#define NET_DVR_PLAYSTART        1//??????﹞?
#define NET_DVR_PLAYSTOP        2//??????﹞?
#define NET_DVR_PLAYPAUSE        3//??????﹞?
#define NET_DVR_PLAYRESTART        4//??????﹞?
#define NET_DVR_PLAYFAST        5//?足﹞?
#define NET_DVR_PLAYSLOW        6//??﹞?
#define NET_DVR_PLAYNORMAL        7//????????
#define NET_DVR_PLAYFRAME        8//????﹞?
#define NET_DVR_PLAYSTARTAUDIO    9//?辰???迄??
#define NET_DVR_PLAYSTOPAUDIO    10//??㊣??迄??
#define NET_DVR_PLAYAUDIOVOLUME    11//?‾??????
#define NET_DVR_PLAYSETPOS        12//??㊣???????﹞???????
#define NET_DVR_PLAYGETPOS        13//??????????﹞???????
#define NET_DVR_PLAYGETTIME        14//?????㊣?∼??????﹞????㊣??(∼???????﹞????㊣?辰???∫)
#define NET_DVR_PLAYGETFRAME    15//?????㊣?∼??????﹞???????(∼???????﹞????㊣?辰???∫)
#define NET_DVR_GETTOTALFRAMES  16//?????㊣?∼??﹞?????℅???????(∼???????﹞????㊣?辰???∫)
#define NET_DVR_GETTOTALTIME    17//?????㊣?∼??﹞?????℅????㊣??(∼???????﹞????㊣?辰???∫)
#define NET_DVR_THROWBFRAME        20//??B??
#define NET_DVR_SETSPEED        24//?豕?????‾????
#define NET_DVR_KEEPALIVE        25//㊣??????豕㊣???????(???????‾℅豕?????“?谷2??﹞???????)
#define NET_DVR_PLAYSETTIME        26//∼??????㊣???“??
#define NET_DVR_PLAYGETTOTALLEN    27//????∼??㊣????﹞??????㊣?????????迄????????℅??∟??
#define NET_DVR_PLAYSETTIME_V50    28//∼??????㊣???“??(?∫???㊣??????)
#define NET_DVR_PLAY_FORWARD    29 //??﹞?????????﹞?
#define NET_DVR_PLAY_REVERSE    30 //??﹞?????????﹞?
#define NET_DVR_SET_DECODEFFRAMETYPE 31 
#define NET_DVR_SET_TRANS_TYPE    32 //?豕??℅???????
#define NET_DVR_PLAY_CONVERT    33 //??﹞?℅???
#define NET_DVR_START_DRAWFRAME 34 //?????谷????﹞?
#define NET_DVR_STOP_DRAWFRAME  35 //?????谷????﹞?
#define NET_DVR_CHANGEWNDRESOLUTION   36    //?∼???車????㊣????“????﹞???
#define NET_DVR_RESETBUFFER	    37  //???????車???????????“??????﹞???????
#define NET_DVR_VOD_DRAG_ING    38 //??﹞???????
#define NET_DVR_VOD_DRAG_END    39 //??﹞??????芍??
#define NET_DVR_VOD_RESET_PLAYTIME    40 //???豕??﹞??㊣??


#define PLAYM4_DECODE_NORMAIL              0   //????????
#define PLAYM4_DECODE_KEY_FRAME            1   //????I??
#define PLAYM4_DECODE_NONE                 2   //??????
#define PLAYM4_DECODE_TEMPORAL_LAYER_0     3   //??1/2
#define PLAYM4_DECODE_TEMPORAL_LAYER_1     4   //??1/4


//????∼??邦?“????????
/* key value send to CONFIG program */
#define KEY_CODE_1      1
#define KEY_CODE_2      2
#define KEY_CODE_3      3
#define KEY_CODE_4      4
#define KEY_CODE_5      5
#define KEY_CODE_6      6
#define KEY_CODE_7      7
#define KEY_CODE_8      8
#define KEY_CODE_9      9
#define KEY_CODE_0      10
#define KEY_CODE_POWER  11
#define KEY_CODE_MENU   12
#define KEY_CODE_ENTER  13
#define KEY_CODE_CANCEL 14
#define KEY_CODE_UP     15
#define KEY_CODE_DOWN   16
#define KEY_CODE_LEFT   17
#define KEY_CODE_RIGHT  18
#define KEY_CODE_EDIT   19
#define KEY_CODE_ADD    20
#define KEY_CODE_MINUS  21
#define KEY_CODE_PLAY   22
#define KEY_CODE_REC    23
#define KEY_CODE_PAN    24
#define KEY_CODE_M      25
#define KEY_CODE_A      26
#define KEY_CODE_F1     27
#define KEY_CODE_F2     28

/* for PTZ control */
#define KEY_PTZ_UP_START        KEY_CODE_UP
#define KEY_PTZ_UP_STOP         32

#define KEY_PTZ_DOWN_START      KEY_CODE_DOWN
#define KEY_PTZ_DOWN_STOP       33

#define KEY_PTZ_LEFT_START      KEY_CODE_LEFT
#define KEY_PTZ_LEFT_STOP       34

#define KEY_PTZ_RIGHT_START     KEY_CODE_RIGHT
#define KEY_PTZ_RIGHT_STOP      35

#define KEY_PTZ_AP1_START       KEY_CODE_EDIT /*????+*/
#define KEY_PTZ_AP1_STOP        36

#define KEY_PTZ_AP2_START       KEY_CODE_PAN /*????-*/
#define KEY_PTZ_AP2_STOP        37

#define KEY_PTZ_FOCUS1_START    KEY_CODE_A /*????+*/
#define KEY_PTZ_FOCUS1_STOP     38

#define KEY_PTZ_FOCUS2_START    KEY_CODE_M /*????-*/
#define KEY_PTZ_FOCUS2_STOP     39

#define KEY_PTZ_B1_START        40 /*㊣?㊣?+*/
#define KEY_PTZ_B1_STOP         41

#define KEY_PTZ_B2_START        42 /*㊣?㊣?-*/
#define KEY_PTZ_B2_STOP         43

//9000????
#define KEY_CODE_11             44
#define KEY_CODE_12             45
#define KEY_CODE_13             46
#define KEY_CODE_14             47
#define KEY_CODE_15             48
#define KEY_CODE_16             49



/*************************?????????邦?? begin*******************************/
//????NET_DVR_SetDVRConfig??NET_DVR_GetDVRConfig,℅????????????????芍??

#define NET_DVR_GET_DEVICECFG        100        //?????豕㊣?????
#define NET_DVR_SET_DEVICECFG        101        //?豕???豕㊣?????
#define NET_DVR_GET_NETCFG            102        //????????????
#define NET_DVR_SET_NETCFG            103        //?豕??????????
#define NET_DVR_GET_PICCFG            104        //???????車????
#define NET_DVR_SET_PICCFG            105        //?豕?????車????
#define NET_DVR_GET_COMPRESSCFG        106        //????????????
#define NET_DVR_SET_COMPRESSCFG        107        //?豕??????????
#define NET_DVR_GET_RECORDCFG        108        //?????????㊣??????
#define NET_DVR_SET_RECORDCFG        109        //?豕???????㊣??????
#define NET_DVR_GET_DECODERCFG        110        //?????????‾????
#define NET_DVR_SET_DECODERCFG        111        //?豕???????‾????
#define NET_DVR_GET_RS232CFG         112        //????232????????
#define NET_DVR_SET_RS232CFG        113        //?豕??232????????
#define NET_DVR_GET_ALARMINCFG         114        //????㊣“??????????
#define NET_DVR_SET_ALARMINCFG        115        //?豕??㊣“??????????
#define NET_DVR_GET_ALARMOUTCFG     116        //????㊣“??????????
#define NET_DVR_SET_ALARMOUTCFG        117        //?豕??㊣“??????????
#define NET_DVR_GET_TIMECFG         118        //????DVR?㊣??
#define NET_DVR_SET_TIMECFG            119        //?豕??DVR?㊣??
#define NET_DVR_GET_PREVIEWCFG         120        //?????∟??????
#define NET_DVR_SET_PREVIEWCFG        121        //?豕???∟??????
#define NET_DVR_GET_VIDEOOUTCFG     122        //????????????????
#define NET_DVR_SET_VIDEOOUTCFG        123        //?豕??????????????
#define NET_DVR_GET_USERCFG         124        //???????∫????
#define NET_DVR_SET_USERCFG            125        //?豕?????∫????
#define NET_DVR_GET_EXCEPTIONCFG     126        //?????足??????
#define NET_DVR_SET_EXCEPTIONCFG    127        //?豕???足??????
#define NET_DVR_GET_ZONEANDDST        128        //?????㊣???????㊣??????
#define NET_DVR_SET_ZONEANDDST        129        //?豕???㊣???????㊣??????

//℅??????邦?????∫??4??OSD???角?????“??????V30???????豕㊣?∼?㊣???
#define NET_DVR_GET_SHOWSTRING        130        //????????℅?﹞?????
#define NET_DVR_SET_SHOWSTRING        131        //?豕??????℅?﹞?????

#define NET_DVR_GET_EVENTCOMPCFG    132        //??????????﹞?????????
#define NET_DVR_SET_EVENTCOMPCFG    133        //?豕????????﹞?????????
#define NET_DVR_GET_FTPCFG            134        //????℅?????FTP????(?迄??)
#define NET_DVR_SET_FTPCFG            135        //?豕??℅?????FTP????(?迄??)
#define NET_DVR_GET_AUXOUTCFG        140        //????㊣“????﹞??“?迆?????豕??(HS?豕㊣??“?迆????2006-02-28)
#define NET_DVR_SET_AUXOUTCFG        141        //?豕??㊣“????﹞??“?迆?????豕??(HS?豕㊣??“?迆????2006-02-28)
#define NET_DVR_GET_PREVIEWCFG_AUX     142        //????-s???????????∟??????(-s??????????2006-04-13)
#define NET_DVR_SET_PREVIEWCFG_AUX    143        //?豕??-s???????????∟??????(-s??????????2006-04-13)

#define NET_DVR_GET_PASSWORD_MANAGE_CFG 144        //???????????赤????
#define NET_DVR_SET_PASSWORD_MANAGE_CFG    145        //?豕?????????赤????
#define NET_DVR_UNLOCK_USER             146        //???∫????
#define NET_DVR_GET_SECURITY_CFG         147        //????∼??????∟????
#define NET_DVR_SET_SECURITY_CFG         148        //?豕??∼??????∟????
#define    NET_DVR_GET_LOCKED_INFO_LIST    149        //?????迄??㊣????“????


/*********************************??????﹞????? begin***************************************/
//?????????“NET_VCA_RULECFG??
#define NET_DVR_SET_RULECFG            152    //?豕??????﹞??????辰
#define NET_DVR_GET_RULECFG            153    //????????﹞??????辰
//?辰?迆㊣那?“?????“NET_DVR_TRACK_CFG ??
#define NET_DVR_SET_TRACK_CFG       160//?豕???辰?迆?????????? 
#define NET_DVR_GET_TRACK_CFG       161//?????辰?迆??????????

//????﹞????????‾?????芍??
#define NET_DVR_SET_IVMS_STREAMCFG    162        //?豕??????﹞????????‾????
#define NET_DVR_GET_IVMS_STREAMCFG    163        //????????﹞????????‾????
//?????????????芍??
#define NET_DVR_SET_VCA_CTRLCFG        164     //?豕??????????????
#define NET_DVR_GET_VCA_CTRLCFG        165     //????????????????
//??㊣????辰NET_VCA_MASK_REGION_LIST
#define NET_DVR_SET_VCA_MASK_REGION    166     //?豕????㊣????辰????
#define NET_DVR_GET_VCA_MASK_REGION    167     //??????㊣????辰????

//ATM???????辰 NET_VCA_ENTER_REGION
#define NET_DVR_SET_VCA_ENTER_REGION 168     //?豕?????????辰????
#define NET_DVR_GET_VCA_ENTER_REGION 169     //???????????辰????

//㊣那?“??????NET_VCA_LINE_SEGMENT_LIST
#define NET_DVR_SET_VCA_LINE_SEGMENT 170     //?豕??㊣那?“??
#define NET_DVR_GET_VCA_LINE_SEGMENT 171     //????㊣那?“??

// ivms??㊣????辰NET_IVMS_MASK_REGION_LIST
#define NET_DVR_SET_IVMS_MASK_REGION 172     //?豕??IVMS??㊣????辰????
#define NET_DVR_GET_IVMS_MASK_REGION 173     //????IVMS??㊣????辰????
// ivms?????足?????辰NET_IVMS_ENTER_REGION
#define NET_DVR_SET_IVMS_ENTER_REGION 174     //?豕??IVMS???????辰????
#define NET_DVR_GET_IVMS_ENTER_REGION 175     //????IVMS???????辰????

#define NET_DVR_SET_IVMS_BEHAVIORCFG  176    //?豕??????﹞????????????辰????
#define NET_DVR_GET_IVMS_BEHAVIORCFG  177    //????????﹞????????????辰????

// IVMS ??﹞??足?‾
#define NET_DVR_IVMS_SET_SEARCHCFG        178    //?豕??IVMS??﹞??足?‾????
#define NET_DVR_IVMS_GET_SEARCHCFG        179    //????IVMS??﹞??足?‾????

#define NET_DVR_SET_POSITION_TRACK      180     // ?豕?????∼?迆℅?????????
#define NET_DVR_GET_POSITION_TRACK      181     // ???????∼?迆℅?????????

#define NET_DVR_SET_CALIBRATION         182    // ?豕??㊣那?“????
#define NET_DVR_GET_CALIBRATION         183    // ????㊣那?“????

#define NET_DVR_SET_PDC_RULECFG         184    // ?豕?????‾?????????辰
#define NET_DVR_GET_PDC_RULECFG         185    // ???????‾?????????辰

#define NET_DVR_SET_PU_STREAMCFG        186     // ?豕???∼?????‾?豕㊣?????
#define NET_DVR_GET_PU_STREAMCFG        187     // ?????∼?????‾?豕㊣?????

#define NET_VCA_SET_IVMS_BEHAVIOR_CFG        192  // ?豕??IVMS???????辰???? ?????㊣????
#define NET_VCA_GET_IVMS_BEHAVIOR_CFG        193  // ????IVMS???????辰???? ?????㊣????

#define NET_VCA_SET_SIZE_FILTER         194     // ?豕???????????????‾
#define NET_VCA_GET_SIZE_FILTER         195     // ?????????????????‾

#define NET_DVR_SET_TRACK_PARAMCFG      196     // ?豕???辰?迆㊣??????????辰
#define NET_DVR_GET_TRACK_PARAMCFG      197     // ?????辰?迆㊣??????????辰

#define NET_DVR_SET_DOME_MOVEMENT_PARAM 198     // ?豕???辰?迆?迆??????
#define NET_DVR_GET_DOME_MOVEMENT_PARAM 199     // ?????辰?迆?迆??????

#define NET_DVR_GET_PICCFG_EX        200        //???????車????(SDK_V14?????邦??)
#define NET_DVR_SET_PICCFG_EX        201        //?豕?????車????(SDK_V14?????邦??)
#define NET_DVR_GET_USERCFG_EX         202        //???????∫????(SDK_V15?????邦??)
#define NET_DVR_SET_USERCFG_EX        203        //?豕?????∫????(SDK_V15?????邦??)
#define NET_DVR_GET_COMPRESSCFG_EX    204        //????????????(SDK_V15?????邦??2006-05-15)
#define NET_DVR_SET_COMPRESSCFG_EX    205        //?豕??????????(SDK_V15?????邦??2006-05-15)


#define NET_DVR_GET_NETAPPCFG        222        //???????????????? NTP/DDNS/EMAIL
#define NET_DVR_SET_NETAPPCFG        223        //?豕?????????????? NTP/DDNS/EMAIL
#define NET_DVR_GET_NTPCFG            224        //???????????????? NTP
#define NET_DVR_SET_NTPCFG            225        //?豕?????????????? NTP
#define NET_DVR_GET_DDNSCFG            226        //???????????????? DDNS
#define NET_DVR_SET_DDNSCFG            227        //?豕?????????????? DDNS
//????NET_DVR_EMAILPARA
#define NET_DVR_GET_EMAILCFG        228        //???????????????? EMAIL
#define NET_DVR_SET_EMAILCFG        229        //?豕?????????????? EMAIL

#define NET_DVR_GET_NFSCFG            230        /* NFS disk config */
#define NET_DVR_SET_NFSCFG            231        /* NFS disk config */

/*℅??????邦?????“???????∫??8??OSD???角???????芍????V30?豕㊣?∼?㊣????∼??
NET_DVR_GET_SHOWSTRING ??NET_DVR_SET_SHOWSTRING ?邦?????“???“?谷??????*/
#define NET_DVR_GET_SHOWSTRING_EX    238        //????????℅?﹞?????????(?∫??8??℅?﹞?)
#define NET_DVR_SET_SHOWSTRING_EX    239        //?豕??????℅?﹞?????????(?∫??8??℅?﹞?)
#define NET_DVR_GET_NETCFG_OTHER    244        //????????????
#define NET_DVR_SET_NETCFG_OTHER    245        //?豕??????????

//????NET_DVR_EMAILCFG?芍??
#define NET_DVR_GET_EMAILPARACFG    250        //Get EMAIL parameters
#define NET_DVR_SET_EMAILPARACFG    251        //Setup EMAIL parameters


#define NET_DVR_GET_DDNSCFG_EX        274    //????????DDNS????
#define NET_DVR_SET_DDNSCFG_EX        275    //?豕??????DDNS????

#define    NET_DVR_SET_PTZPOS            292        //???“?豕??PTZ????
#define    NET_DVR_GET_PTZPOS            293        //???“????PTZ????
#define    NET_DVR_GET_PTZSCOPE        294        //???“????PTZ﹞??∫

#define NET_DVR_GET_AP_INFO_LIST    305//????????????℅???????
#define NET_DVR_SET_WIFI_CFG        306    //?豕??IP?角???豕㊣?????????
#define NET_DVR_GET_WIFI_CFG        307    //????IP?角???豕㊣?????????
#define NET_DVR_SET_WIFI_WORKMODE    308    //?豕??IP?角???豕㊣??????∟℅‾????????
#define NET_DVR_GET_WIFI_WORKMODE    309    //????IP?角???豕㊣??????∟℅‾????????
#define    NET_DVR_GET_WIFI_STATUS        310    //?????豕㊣??㊣?∼wifi????℅???
/*********************************???????“????begin***************************************/
#define NET_DVR_GET_REFERENCE_REGION            400      //???????????辰
#define NET_DVR_SET_REFERENCE_REGION            401      //?豕?????????辰

#define NET_DVR_GET_TRAFFIC_MASK_REGION         402     //???????“??????㊣????辰
#define NET_DVR_SET_TRAFFIC_MASK_REGION         403     //?豕?????“??????㊣????辰
#define NET_DVR_SET_AID_RULECFG                 404     //?豕?????“???????辰????
#define NET_DVR_GET_AID_RULECFG                 405     //???????“???????辰????

#define NET_DVR_SET_TPS_RULECFG                 406     //?豕?????“???????辰????
#define NET_DVR_GET_TPS_RULECFG                 407     //???????“???????辰????

#define NET_DVR_SET_LANECFG                        408        //?豕?????????辰
#define    NET_DVR_GET_LANECFG                        409        //???????????辰
#define NET_DVR_GET_VCA_RULE_COLOR_CFG          410     //???????????辰??????????????
#define NET_DVR_SET_VCA_RULE_COLOR_CFG          411     //?豕?????????辰??????????????
#define NET_DVR_GET_SWITCH_LAMP_CFG             412     //???????????足?????辰????????
#define NET_DVR_SET_SWITCH_LAMP_CFG             413     //?豕?????????足?????辰???????? 


/*********************************???????“????end***************************************/
#define NET_DVR_SET_FACEDETECT_RULECFG          420         // ?豕???????足?????辰
#define NET_DVR_GET_FACEDETECT_RULECFG          421         // ?????????足?????辰

#define NET_DVR_SET_VEHICLE_RECOG_TASK          422      //??????????㊣??????芍??
#define NET_DVR_GET_VEHICLE_RECOG_TASK          423      //??????????㊣?????????

#define NET_DVR_SET_TIMECORRECT                    432      //???㊣?????“??℅????㊣??℅‾???????????㊣???? eg.NET_DVR_SET_TIMECFG ?芍?????豕㊣??????㊣?????“NTP???㊣???芍㊣??????????????㊣????
#define    NET_DVR_GET_CONNECT_LIST                433         //?????????豕㊣???㊣赤????

/***************************DS9000?????邦??(_V30) begin *****************************/
//????(NET_DVR_NETCFG_V30?芍??)
#define NET_DVR_GET_NETCFG_V30                    1000        //????????????
#define NET_DVR_SET_NETCFG_V30                    1001        //?豕??????????

//???車(NET_DVR_PICCFG_V30?芍??)
#define NET_DVR_GET_PICCFG_V30                    1002        //???????車????
#define NET_DVR_SET_PICCFG_V30                    1003        //?豕?????車????

//?????㊣??(NET_DVR_RECORD_V30?芍??)
#define NET_DVR_GET_RECORDCFG_V30                1004        //????????????
#define NET_DVR_SET_RECORDCFG_V30                1005        //?豕??????????

//???∫(NET_DVR_USER_V30?芍??)
#define NET_DVR_GET_USERCFG_V30                 1006        //???????∫????
#define NET_DVR_SET_USERCFG_V30                    1007        //?豕?????∫????

//?????㊣??(NET_DVR_RECORD_V40?芍??)
#define NET_DVR_GET_RECORDCFG_V40                1008        //????????????(????)
#define NET_DVR_SET_RECORDCFG_V40                1009        //?豕??????????(????)

//9000DDNS????????(NET_DVR_DDNSPARA_V30?芍??)
#define     NET_DVR_GET_DDNSCFG_V30                1010        //????DDNS(9000????)
#define     NET_DVR_SET_DDNSCFG_V30                1011        //?豕??DDNS(9000????)

//EMAIL????(NET_DVR_EMAILCFG_V30?芍??)
#define NET_DVR_GET_EMAILCFG_V30                1012     //????EMAIL???? 
#define NET_DVR_SET_EMAILCFG_V30                1013     //?豕??EMAIL???? 

#define NET_DVR_GET_NETCFG_V50     1015    //????????????????(V50)
#define NET_DVR_SET_NETCFG_V50     1016    //?豕??????????????(V50)

#define NET_GET_CRUISEPOINT_V40                    1018     //?????????﹞??????

//???????? (NET_DVR_CRUISE_PARA?芍??)
#define     NET_DVR_GET_CRUISE                    1020        
#define     NET_DVR_SET_CRUISE                    1021        


//㊣“???????芍?????? (NET_DVR_ALARMINCFG_V30?芍??)
#define     NET_DVR_GET_ALARMINCFG_V30            1024        
#define     NET_DVR_SET_ALARMINCFG_V30            1025

//㊣“???????芍?????? (NET_DVR_ALARMOUTCFG_V30?芍??)
#define     NET_DVR_GET_ALARMOUTCFG_V30            1026        
#define     NET_DVR_SET_ALARMOUTCFG_V30            1027

//?????????芍?????? (NET_DVR_VIDEOOUT_V30?芍??)
#define     NET_DVR_GET_VIDEOOUTCFG_V30            1028        
#define     NET_DVR_SET_VIDEOOUTCFG_V30            1029


/*???邦???∫??8??OSD???角???“???豕㊣?∼?㊣???V30?????㊣???????芍?“???豕㊣?∼?㊣?????????
???㊣???????∼??NET_DVR_GET_SHOWSTRING ??NET_DVR_SET_SHOWSTRING ?邦?????“?“?谷??????*/
//????℅?﹞??芍?????? (NET_DVR_SHOWSTRING_V30?芍??)
#define     NET_DVR_GET_SHOWSTRING_V30            1030        
#define     NET_DVR_SET_SHOWSTRING_V30            1031

//?足???芍?????? (NET_DVR_EXCEPTION_V30?芍??)
#define     NET_DVR_GET_EXCEPTIONCFG_V30        1034        
#define     NET_DVR_SET_EXCEPTIONCFG_V30        1035

//????232?芍?????? (NET_DVR_RS232CFG_V30?芍??)
#define     NET_DVR_GET_RS232CFG_V30            1036        
#define     NET_DVR_SET_RS232CFG_V30            1037

//?????????????芍?????? (NET_DVR_NET_DISKCFG?芍??)
#define        NET_DVR_GET_NET_DISKCFG                1038        //????????????????
#define        NET_DVR_SET_NET_DISKCFG                1039        //?????????????豕??
//???????? (NET_DVR_COMPRESSIONCFG_V30?芍??)
#define     NET_DVR_GET_COMPRESSCFG_V30            1040        
#define     NET_DVR_SET_COMPRESSCFG_V30            1041        

//????485?????‾???? (NET_DVR_DECODERCFG_V30?芍??)
#define     NET_DVR_GET_DECODERCFG_V30            1042        //?????????‾????
#define     NET_DVR_SET_DECODERCFG_V30            1043        //?豕???????‾????

//?????∟?????? (NET_DVR_PREVIEWCFG_V30?芍??)
#define     NET_DVR_GET_PREVIEWCFG_V30            1044        //?????∟??????
#define     NET_DVR_SET_PREVIEWCFG_V30            1045        //?豕???∟??????

//?“?迆?∟?????? (NET_DVR_PREVIEWCFG_AUX_V30?芍??)
#define     NET_DVR_GET_PREVIEWCFG_AUX_V30        1046        //?????“?迆?∟??????
#define     NET_DVR_SET_PREVIEWCFG_AUX_V30        1047        //?豕???“?迆?∟??????

//IP???????????? ?“NET_DVR_IPPARACFG?芍????
#define     NET_DVR_GET_IPPARACFG               1048        //????IP???????????? 
#define     NET_DVR_SET_IPPARACFG               1049        //?豕??IP????????????

//IP㊣“?????????????????? ?“NET_DVR_IPALARMINCFG?芍????
#define     NET_DVR_GET_IPALARMINCFG            1050        //????IP㊣“?????????????????? 
#define     NET_DVR_SET_IPALARMINCFG            1051        //?豕??IP㊣“??????????????????

//IP㊣“?????????????????? ?“NET_DVR_IPALARMOUTCFG?芍????
#define     NET_DVR_GET_IPALARMOUTCFG           1052        //????IP㊣“?????????????????? 
#define     NET_DVR_SET_IPALARMOUTCFG           1053        //?豕??IP㊣“??????????????????

//???????赤?????????? (NET_DVR_HDCFG?芍??)
#define     NET_DVR_GET_HDCFG                    1054        //???????????赤????????
#define     NET_DVR_SET_HDCFG                    1055        //?豕?????????赤????????
//??℅谷???赤?????????? (NET_DVR_HDGROUP_CFG?芍??)
#define     NET_DVR_GET_HDGROUP_CFG                1056        //??????℅谷???赤????????
#define     NET_DVR_SET_HDGROUP_CFG                1057        //?豕????℅谷???赤????????

//?豕㊣?㊣角???角??????(NET_DVR_COMPRESSION_AUDIO?芍??)
#define     NET_DVR_GET_COMPRESSCFG_AUD         1058        //?????豕㊣?????????㊣角??????
#define     NET_DVR_SET_COMPRESSCFG_AUD         1059        //?豕???豕㊣?????????㊣角??????

//IP???????????? ?“NET_DVR_IPPARACFG_V31?芍????
#define     NET_DVR_GET_IPPARACFG_V31           1060        //????IP???????????? 
#define     NET_DVR_SET_IPPARACFG_V31           1061        //?豕??IP????????????

// ?“??℅??????? (NET_DVR_IPPARACFG_V40?芍??)
#define NET_DVR_GET_IPPARACFG_V40               1062        // ????IP????????
#define NET_DVR_SET_IPPARACFG_V40               1063        // ?豕??IP????????

#define NET_DVR_GET_CCDPARAMCFG                 1067       //IPC????CCD????????
#define NET_DVR_SET_CCDPARAMCFG                 1068       //IPC?豕??CCD????????

#define NET_DVR_GET_IOINCFG                        1070    //????℅????迆IO????????
#define NET_DVR_SET_IOINCFG                        1071     //?豕??℅????迆IO????????

#define NET_DVR_GET_IOOUTCFG                    1072    //????℅????迆IO????????
#define NET_DVR_SET_IOOUTCFG                    1073     //?豕??℅????迆IO????????

#define NET_DVR_GET_FLASHCFG                    1074    //????IO??????????????
#define NET_DVR_SET_FLASHCFG                    1075     //?豕??IO??????????????

#define NET_DVR_GET_LIGHTSNAPCFG                1076    //????℅????迆?足????????
#define NET_DVR_SET_LIGHTSNAPCFG                1077     //?豕??℅????迆?足????????

#define NET_DVR_GET_MEASURESPEEDCFG                1078    //????℅????迆????????
#define NET_DVR_SET_MEASURESPEEDCFG                1079     //?豕??℅????迆????????

#define NET_DVR_GET_IMAGEOVERLAYCFG                1080//????℅????迆????????????????
#define NET_DVR_SET_IMAGEOVERLAYCFG                1081//?豕??℅????迆????????????????

#define NET_DVR_GET_SNAPCFG                        1082//??????IO??﹞?℅???????????
#define NET_DVR_SET_SNAPCFG                        1083//?豕????IO??﹞?℅???????????

#define NET_DVR_GET_VTPPARAM                    1084//?????谷??????????
#define NET_DVR_SET_VTPPARAM                    1085//?豕???谷??????????

#define NET_DVR_GET_SNAPENABLECFG                1086//????℅????迆????????
#define NET_DVR_SET_SNAPENABLECFG                1087//?豕??℅????迆????????

#define NET_DVR_GET_POSTEPOLICECFG              1088//?????“??????????
#define NET_DVR_SET_POSTEPOLICECFG              1089//?豕???“??????????

#define NET_DVR_GET_JPEGCFG_V30                    1090//????℅?????JPEG????(?迄??)
#define NET_DVR_SET_JPEGCFG_V30                    1091//?豕??℅?????JPEG????(?迄??)

#define NET_DVR_GET_SPRCFG                        1092//??????????㊣?????
#define NET_DVR_SET_SPRCFG                        1093//?豕????????㊣?????
#define NET_DVR_GET_PLCCFG                      1094//????????????????????
#define NET_DVR_SET_PLCCFG                      1095//?豕??????????????????

#define NET_DVR_GET_DEVICESTATECFG              1096//?????豕㊣??㊣?∼℅???????
#define NET_DVR_SET_CALIBRATE_TIME              1097//?豕???????㊣?????㊣
#define NET_DVR_GET_CALIBRATE_TIME              1098//?????????㊣?????㊣

#define NET_DVR_GET_DEVICECFG_V40                1100//?????????豕㊣????? 
#define NET_DVR_SET_DEVICECFG_V40                1101//?豕???????豕㊣?????

#define NET_DVR_GET_ZEROCHANCFG                   1102    //???????“?????????? 
#define NET_DVR_SET_ZEROCHANCFG                  1103    //?豕?????“??????????

#define NET_DVR_GET_ZERO_PREVIEWCFG_V30         1104    // ???????“???∟??????????
#define NET_DVR_SET_ZERO_PREVIEWCFG_V30         1105    // ?豕?????“???∟??????????

#define NET_DVR_SET_ZERO_ZOOM                    1106     //?豕?????“??????﹞????? 
#define NET_DVR_GET_ZERO_ZOOM                    1107     //???????“??????﹞?????

#define    NET_DVR_NATASSOCIATECFG_GET                1110    //????NAT?????角??????
#define    NET_DVR_NATASSOCIATECFG_SET                1111     //?豕??NAT?????角??????

#define NET_DVR_GET_SNMPCFG                       1112    //????SNMP???? 
#define NET_DVR_SET_SNMPCFG                      1113    //?豕??SNMP????

#define NET_DVR_GET_SNMPCFG_V30                   1114        //????SNMPv30???? 
#define NET_DVR_SET_SNMPCFG_V30                  1115        //?豕??SNMPv30????

#define    NET_DVR_VIDEOPLATFORMALARMCFG_GET        1130  //????????℅??????“㊣“??????
#define    NET_DVR_VIDEOPLATFORMALARMCFG_SET        1131  //?豕??????℅??????“㊣“??????

#define NET_DVR_GET_RAID_ADAPTER_INFO           1134    // ?????????‾????
#define NET_DVR_SET_RAID_ADAPTER_INFO           1135    // ?豕???????‾????   

#define    NET_DVR_MATRIX_BIGSCREENCFG_GET            1140//?????車??????????
#define    NET_DVR_MATRIX_BIGSCREENCFG_SET            1141//?豕???車??????????

#define NET_DVR_GET_MB_PLATFORMPARA                1145 //???????“????????
#define NET_DVR_SET_MB_PLATFORMPARA                1146 //?豕?????“????????
#define NET_DVR_GET_MB_DEVSTATUS                1147 //?????????豕㊣?℅???

#define  NET_DVR_GET_DECODER_JOINT_CHAN            1151//?????????????“??
#define  NET_DVR_SET_DECODER_JOINT_CHAN            1152//?豕???????????“??

//?角???“????
#define NET_DVR_GET_NETCFG_MULTI                1161        //?????角???“????
#define NET_DVR_SET_NETCFG_MULTI                1162        //?豕???角???“????
#define NET_DVR_GET_NETCFG_MULTI_V50            1163        //?????角???“????(﹞?℅谷)
#define NET_DVR_SET_NETCFG_MULTI_V50            1164        //?豕???角???“????(﹞?℅谷)

#define NET_DVR_GET_CMSPARA                        1170//???????“????
#define NET_DVR_SET_CMSPARA                        1171//?豕?????“????
#define NET_DVR_GET_DIALSTATUS                    1172//????????℅???????
#define NET_DVR_GET_SMSRELATIVEPARA                1173//?????????角??????
#define NET_DVR_SET_SMSRELATIVEPARA                1174//?豕???????角??????
#define NET_DVR_GET_PINSTATUS                    1175//????Pin℅???
#define NET_DVR_SET_PINCMD                        1176//?豕??PIN?邦??
#define NET_DVR_SET_SENSOR_CFG                    1180//?豕????????????
#define NET_DVR_GET_SENSOR_CFG                    1181//??????????????
#define NET_DVR_SET_ALARMIN_PARAM                1182//?豕??㊣“??????????
#define NET_DVR_GET_ALARMIN_PARAM                1183//????㊣“??????????
#define NET_DVR_SET_ALARMOUT_PARAM                1184//?豕??㊣“??????????
#define NET_DVR_GET_ALARMOUT_PARAM                1185//????㊣“??????????
#define NET_DVR_SET_SIREN_PARAM                    1186//?豕??????????
#define NET_DVR_GET_SIREN_PARAM                    1187//????????????
#define NET_DVR_SET_ALARM_RS485CFG                1188//?豕??㊣“???‾?迆485????
#define NET_DVR_GET_ALARM_RS485CFG                1189//????㊣“???‾?迆485????
#define NET_DVR_GET_ALARMHOST_MAIN_STATUS        1190//????㊣“???‾?迆?‾??℅???
#define NET_DVR_GET_ALARMHOST_OTHER_STATUS        1191//????㊣“???‾?迆????℅???
#define NET_DVR_SET_ALARMHOST_ENABLECFG            1192//????㊣“???‾?迆????℅???
#define NET_DVR_GET_ALARMHOST_ENABLECFG            1193//?豕??㊣“???‾?迆????℅???
#define NET_DVR_SET_ALARM_CAMCFG                1194//?豕??????℅??????“㊣“????﹞?CAM??℅‾????
#define NET_DVR_GET_ALARM_CAMCFG                1195//?豕??????℅??????“㊣“????﹞?CAM??℅‾????
#define NET_DVR_GET_GATEWAY_CFG                 1196//????????????????
#define NET_DVR_SET_GATEWAY_CFG                 1197//?豕??????????????

#define NET_DVR_GET_ALARMDIALMODECFG            1198//????㊣“???‾?迆????????
#define NET_DVR_SET_ALARMDIALMODECFG            1199//?豕??㊣“???‾?迆????????
#define NET_DVR_SET_ALARMIN_PARAM_V50            1200        // ?豕??﹞???????V50
#define NET_DVR_GET_ALARMIN_PARAM_V50            1201            // ????﹞???????V50
#define    NET_DVR_SET_WINCFG                        1202//?∼???????豕??
#define NET_DVR_GET_ALARMHOSTDIALSETUPMODE        1204//????㊣“???‾?迆????????﹞???
#define NET_DVR_SET_ALARMHOSTDIALSETUPMODE        1205//?豕??㊣“???‾?迆????????﹞???

//????㊣“???‾?迆????∼??邦??(????㊣“???‾?迆 V1.3)
#define NET_DVR_SET_SUBSYSTEM_ALARM                1210    //?豕??℅???????/?﹞﹞?
#define NET_DVR_GET_SUBSYSTEM_ALARM                1211    //????℅???????/?﹞﹞?
#define NET_DVR_GET_WHITELIST_ALARM                1215    //????∼℅????????
#define NET_DVR_SET_WHITELIST_ALARM                1216    //?豕??∼℅????????
#define    NET_DVR_GET_ALARMHOST_MODULE_LIST        1222    //?????迄?????谷
#define NET_DVR_SET_PRIOR_ALARM                    1223    //?豕??℅???????/?﹞﹞?
#define NET_DVR_GET_PRIOR_ALARM                    1224    //????℅???????/?﹞﹞?    
#define NET_DVR_SET_TAMPER_ALARMIN_PARAM        1225    // ?豕??﹞???﹞???????
#define NET_DVR_GET_TAMPER_ALARMIN_PARAM        1226    // ????﹞???﹞???????

#define NET_DVR_GET_HOLIDAY_PARAM_CFG           1240// ??????????????
#define NET_DVR_SET_HOLIDAY_PARAM_CFG           1241// ?豕????????????

#define NET_DVR_GET_MOTION_HOLIDAY_HANDLE       1242// ?????????足??????㊣“?????赤﹞???
#define NET_DVR_SET_MOTION_HOLIDAY_HANDLE       1243// ?????????足??????㊣“?????赤﹞???

#define NET_DVR_GET_VILOST_HOLIDAY_HANDLE       1244// ???????????????∫????㊣“?????赤﹞???
#define NET_DVR_SET_VILOST_HOLIDAY_HANDLE       1245// ???????????????∫????㊣“?????赤﹞???

#define NET_DVR_GET_HIDE_HOLIDAY_HANDLE         1246// ????????????㊣“?????赤﹞???
#define NET_DVR_SET_HIDE_HOLIDAY_HANDLE         1247// ?豕??????????㊣“?????赤﹞???

#define NET_DVR_GET_ALARMIN_HOLIDAY_HANDLE      1248// ????㊣“??????????㊣“?????赤﹞???
#define NET_DVR_SET_ALARMIN_HOLIDAY_HANDLE      1249// ?豕??㊣“??????????㊣“?????赤﹞???
#define NET_DVR_GET_ALARMOUT_HOLIDAY_HANDLE     1250// ????㊣“??????????㊣“?????赤﹞???
#define NET_DVR_SET_ALARMOUT_HOLIDAY_HANDLE     1251// ?豕??㊣“??????????㊣“?????赤﹞???
#define NET_DVR_GET_HOLIDAY_RECORD              1252// ????????????????
#define NET_DVR_SET_HOLIDAY_RECORD              1253// ?豕??????????????
#define NET_DVR_GET_NETWORK_BONDING             1254// ????BONDING????????
#define NET_DVR_SET_NETWORK_BONDING             1255// ?豕??BONDING????????
#define NET_DVR_GET_LINK_STATUS                 1256// ?????“??IP?∟℅‾℅???
#define NET_DVR_GET_DISK_QUOTA_CFG              1278// ????????????????
#define NET_DVR_SET_DISK_QUOTA_CFG              1279// ?豕??????????????
#define NET_DVR_GET_JPEG_CAPTURE_CFG            1280// ????DVR℅???????
#define NET_DVR_SET_JPEG_CAPTURE_CFG            1281// ?豕??DVR℅???????
#define NET_DVR_GET_SCHED_CAPTURECFG            1282// ????℅???????
#define NET_DVR_SET_SCHED_CAPTURECFG            1283// ?豕??℅???????
#define NET_DVR_GET_VGA_PREVIEWCFG              1284// ????VGA?∟??????
#define NET_DVR_SET_VGA_PREVIEWCFG              1285// ?豕??VGA?∟?????? 
#define NET_DVR_GET_VIDEO_INPUT_EFFECT          1286// ?????“??????????????????
#define NET_DVR_SET_VIDEO_INPUT_EFFECT          1287// ?豕???“??????????????????

#define NET_DVR_GET_STORAGE_SERVER_SWITCH        1290//????????﹞????‾????℅???
#define NET_DVR_SET_STORAGE_SERVER_SWITCH        1291//?豕??????﹞????‾????℅???


#define NET_DVR_GET_OPTICAL_CHANNEL                1300//????????℅??????“??????????
#define NET_DVR_SET_OPTICAL_CHANNEL                1301//?豕??????℅??????“??????????
#define NET_DVR_GET_FIBER_CASCADE                1302//????????????????
#define NET_DVR_SET_FIBER_CASCADE                1303//?豕??????????????
#define NET_DVR_GET_SPARTAN_STATUS                1304//????????℅???
#define NET_DVR_SET_SPARTAN_STATUS                1305//?豕??????℅???
#define NET_DVR_GET_ETHERNET_CHANNEL            1306//????????????????
#define NET_DVR_SET_ETHERMET_CHANNEL            1307//?豕??????????????
#define NET_DVR_OPTICAL_REBOOT                    1320//?????迆????
#define NET_DVR_SET_AUDIOCHAN_CFG                1321//?豕??????????????
#define NET_DVR_GET_AUDIOCHAN_CFG                1322//????????????????
//SDI???車1.0
#define NET_DVR_SET_MATRIX_BASE_CFG             1332 //?豕?????車?迄㊣?????
#define NET_DVR_GET_MATRIX_BASE_CFG             1333 //???????車?迄㊣?????
#define NET_DVR_SWITCH_MATRIX_IO                1334 //???車???????????? 
#define NET_DVR_GET_MATRIX_IO_RELATION          1335 //???????車????????????????

#define    NET_DVR_V6PSUBSYSTEMARAM_GET            1501//????V6℅?????????
#define    NET_DVR_V6PSUBSYSTEMARAM_SET            1502//?豕??V6℅?????????
#define    NET_DVR_GET_ALLWINCFG                    1503 //?∼??????????

#define    NET_DVR_BIGSCREENASSOCIATECFG_GET        1511 //?????車??????????
#define    NET_DVR_BIGSCREENASSOCIATECFG_SET        1512 //?豕???車??????????

//1200??
#define    NET_DVR_GETSCREENINFO                    1601 //?????車??????????
#define    NET_DVR_SETSCREENINFO                    1602 //?豕???車??????????
#define    NET_DVR_GET_SCREEN_WINCFG                1603//?????∼??????????
#define    NET_DVR_LAYOUTLIST_GET                     1605//??????????㊣赤
#define    NET_DVR_SET_LAYOUTCFG                    1606 //?????豕??
#define    NET_DVR_LAYOUTCTRL                        1607//??????????1-open??2-close
#define    NET_DVR_INPUTLIST_GET                    1608 //????????????????㊣赤
#define    NET_DVR_SET_INPUTSTREAMCFG                1609 //???????????豕?? 
#define    NET_DVR_OUTPUT_SET                        1610 //?????????豕??
#define    NET_DVR_OUTPUT_GET                        1611 //????????????
#define    NET_DVR_SET_OSDCFG                        1612 //OSD?????豕??
#define    NET_DVR_GET_OSDCFG                        1613 //OSD????????
#define    NET_DVR_BIGSCREEN_GETSERIAL             1614//?????車??????????
#define    NET_DVR_GET_PLANLIST                    1615//?????∟∼???㊣赤
#define    NET_DVR_SET_PLAN                        1616//?豕???∟∼?
#define    NET_DVR_CTRL_PLAN                        1617//?????∟∼?
#define    NET_DVR_GET_DEVICE_RUN_STATUS           1618//?????豕㊣?????℅???
#define NET_DVR_GET_EXTERNAL_MATRIX_CFG            1619//???????車????
#define    NET_DVR_SET_EXTERNAL_MATRIX_CFG            1620//?豕?????車????
#define    NET_DVR_GET_OUTPUT_SCREEN_RELATION        1621//????????????????∼車?“????
#define    NET_DVR_SET_OUTPUT_SCREEN_RELATION        1622//?豕??????????????∼車?“????
#define NET_DVR_GET_VCS_USER_CFG                1623//???????∫????????
#define    NET_DVR_SET_VCS_USER_CFG                1624//?豕?????∫????????
#define    NET_DVR_CONTROL_SCREEN                    1625//????????
#define    NET_DVR_GET_EXTERNAL_MATRIX_CFG_V50        1626    //???????車????
#define    NET_DVR_SET_EXTERNAL_MATRIX_CFG_V50        1627    //?豕?????車????

#define NET_DVR_GET_DEV_BASEINFO                1650//?????????豕㊣?????
#define NET_DVR_SET_DEV_BASEINFO                1651//?豕???????豕㊣?????
#define NET_DVR_GET_DEV_NETINFO                    1652//?????豕㊣???????????
#define NET_DVR_SET_DEV_NETINFO                    1653//?豕???豕㊣???????????
#define NET_DVR_GET_SIGNAL_SOURCE_INFO            1654//??????????????
#define NET_DVR_SET_SIGNAL_SOURCE_INFO            1655//?豕????????????
#define NET_DVR_ADJUST_PIC_V40                    1656//???????‾
#define NET_DVR_RESTORE_V40                        1657//????????????
#define    NET_DVR_SET_NET_SIGNAL                    1658//?豕????????????
#define NET_DVR_REBOOT_V40                        1659//????
#define NET_DVR_CONTROL_PICTURE_V41                1660//????????V41

#define NET_DVR_GET_AUTO_REBOOT_CFG             1710//????℅???????????
#define NET_DVR_SET_AUTO_REBOOT_CFG             1711//?豕??℅???????????
#define NET_DVR_GET_TRUNK_USE_STATE             1713//???????“????????℅???
#define NET_DVR_SET_PTZ_CTRL_INFO                 1714//?豕??PTZ????????
#define NET_DVR_GET_PTZ_CTRL_INFO                 1715//????PTZ????????
#define NET_DVR_GET_PTZ_STATUS                     1716//????PTZ℅???
#define    NET_DVR_GET_DISP_ROUTE_LIST                1717//?????????﹞????㊣赤

#define NET_DVR_GET_DEC_RESOURCE_LIST            1720//????????????℅?????㊣赤
#define NET_DVR_SET_DEC_RESOURCE_LIST            1721//?∟﹞???????℅??? 
#define NET_DVR_GET_DEC_YUV                        1722//?????????“??????YUV????????
#define NET_DVR_SET_DEC_YUV                        1723//?豕???????“??????YUV????????
#define NET_DVR_GET_DEC_RESOUCE                    1724//?辰????℅??????“?那??????℅???
#define NET_DVR_FREE_DEC_RESOURCE                1725//??﹞?????℅???

#define NET_DVR_SET_VIDEOWALLDISPLAYMODE        1730//?豕????????????????
#define NET_DVR_GET_VIDEOWALLDISPLAYMODE        1731//??????????????????
#define NET_DVR_GET_VIDEOWALLDISPLAYNO          1732//?????豕㊣???????????
#define    NET_DVR_SET_VIDEOWALLDISPLAYPOSITION    1733//?豕??????????????????
#define    NET_DVR_GET_VIDEOWALLDISPLAYPOSITION    1734//????????????????????
#define NET_DVR_GET_VIDEOWALLWINDOWPOSITION     1735//???????????∼??????
#define NET_DVR_SET_VIDEOWALLWINDOWPOSITION     1736//?豕?????????∼??????
#define    NET_DVR_VIDEOWALLWINDOW_CLOSEALL        1737//????????㊣??迄???∼??
#define    NET_DVR_SET_VIRTUALLED                    1738//?谷??LED?豕??
#define    NET_DVR_GET_VIRTUALLED                    1739//?谷??LED????
#define NET_DVR_GET_IMAGE_CUT_MODE              1740//????????????????
#define NET_DVR_SET_IMAGE_CUT_MODE              1741//?豕??????????????
#define NET_DVR_GET_USING_SERIALPORT            1742//?????㊣?∼????????
#define NET_DVR_SET_USING_SERIALPORT            1743//?豕???㊣?∼????????
#define NET_DVR_SCENE_CONTROL                   1744//???∼????
#define NET_DVR_GET_CURRENT_SCENE               1745//?????㊣?∼???∼??
#define NET_DVR_GET_VW_SCENE_PARAM              1746//?????????????∼????????
#define NET_DVR_SET_VW_SCENE_PARAM              1747//?豕???????????∼????????
#define NET_DVR_DISPLAY_CHANNO_CONTROL          1748//??????????㊣角??????
#define NET_DVR_GET_WIN_DEC_INFO                1749//?????∼???????????“?迆????
#define NET_DVR_RESET_VIDEOWALLDISPLAYPOSITION  1750  //??????????????????∼車?“ 
#define NET_DVR_SET_VW_AUDIO_CFG                1752    //?豕??????????????
#define    NET_DVR_GET_VW_AUDIO_CFG                1753    //????????????????
#define NET_DVR_GET_GBT28181_DECCHANINFO_CFG    1754    //????GBT28181???谷?????豕㊣????????“??????
#define NET_DVR_SET_GBT28181_DECCHANINFO_CFG    1755    //?豕??GBT28181???谷?????豕㊣????????“??????
#define    NET_DVR_SET_MAINBOARD_SERIAL            1756  //?豕???‾??∼?????????
#define    NET_DVR_GET_MAINBOARD_SERIAL            1757  //?????‾??∼?????????
#define NET_DVR_GET_SUBBOARD_INFO               1758  //????℅?∼?????
#define NET_DVR_GET_SUBBOARD_EXCEPTION          1759  //?????足??℅?∼??足??????

#define NET_DVR_GET_CAMERACHAN_SERIALCFG    1760   //????Camera?“??∼車?“????????
#define NET_DVR_SET_CAMERACHAN_SERIALCFG    1761   //?豕??Camera?“??∼車?“????????
#define NET_DVR_GET_MATRIX_STATUS            1762   //????????℅??????“℅???
#define    NET_SET_MULTIFUNCTION_SERIALCFG     1763  //?豕???角????????????
#define    NET_GET_MULTIFUNCTION_SERIALCFG        1764  //?????角????????????
#define NET_DVR_PTZ_3D_SPEED                1765  // 3?????????????“????

#define  NET_DVR_GET_SIGNAL_JOINT            1766   //??????????∼車?“????
#define  NET_DVR_SET_SIGNAL_JOINT            1767   //?豕????????∼車?“????
#define  NET_DVR_SIGNAL_CUT                    1768   //??????????
#define  NET_DVR_DYNAMIC_DECODE_BATCH        1769     //?迆??????????
#define  NET_DVR_DECSWITCH_SET_BATCH        1770    //?迆???豕???????“??????
#define  NET_DVR_DECSWITCH_GET_BATCH        1771    //?迆???????????“??????
#define  NET_DVR_GET_ALL_SIGNAL_JOINT        1772   //?????迄????????∼車?“????
#define     NET_DVR_GET_PLAYING_PLAN            1773    //?????????????∟∼?
#define  NET_DVR_WALL_RELATION_GET            1774   //?????豕㊣????????赤????????
#define  NET_DVR_WALL_RELATION_SET            1775   //?豕???豕㊣????????赤????????
#define     NET_DVR_SET_INPUTSTREAMCFG_V40        1776   //???????????豕??
#define  NET_DVR_PTZCFG_INPUTSTREAM_GET        1777  //??????????﹞??辰???“????????
#define  NET_DVR_PTZCFG_INPUTSTREAM_SET        1778  //?豕????????﹞??辰???“????????
#define  NET_DVR_SIGNAL_CUTPARAM_GET        1779  //??????????????????

#define NET_DVR_GET_SUBSYSTEM_NETCFG            1780    //????℅????????“????
#define NET_DVR_SET_SUBSYSTEM_NETCFG              1781    //?豕??℅????????“????
#define    NET_DVR_DEL_SIGNAL_JOINT                1782    //??????????????

#define NET_DVR_GET_PICTURE_INFO                1783     //????????????
#define NET_DVR_SET_PICTURE_INFO                1784     //?豕??????????
#define NET_DVR_GET_VIDEO_INFO                    1785     //????????????
#define NET_DVR_SET_VIDEO_INFO                    1786     //?豕??????????
#define NET_DVR_SET_PLAYLIST                    1787     //?豕????﹞???㊣赤
#define NET_DVR_GET_PLAYLIST                    1788     //??????﹞???㊣赤
#define NET_DVR_GET_ALL_PLAYLIST                1789     //?????迄????﹞???㊣赤
#define NET_DVR_PLAYITEM_CONTROL                1790     //??﹞?????℅‾
#define NET_DVR_SET_PLAYPLAN_TEMPLATE            1791     //?豕????﹞???????∼?
#define NET_DVR_GET_PLAYPLAN_TEMPLATE            1792     //??????﹞?????
#define NET_DVR_GET_ALL_PLAYPLAN_TEMPLATE        1793     //?????迄????﹞?????
#define NET_DVR_SET_WINDOW_PLAYPLAN                1794     //?豕???∼????﹞?????
#define NET_DVR_GET_WINDOW_PLAYPLAN                1795     //?????∼????﹞?????
#define NET_DVR_TOPLAY_ITEM                        1796     //???“??﹞?
#define NET_DVR_DEVICE_PLAY_CONTROL                1797     //?豕㊣???﹞?????
#define NET_DVR_GET_PLAY_INFO                    1798     //?????㊣?∼??﹞?????
#define NET_DVR_GET_ALL_PICTURE_INFO            1799     //????????????
#define NET_DVR_GET_ALL_VIDEO_INFO                1800     //????????????
#define NET_DVR_DELETE_VIDEO_FILE                1801     //????????


#define NET_DVR_GET_ALARMHOSTSUBSYSTEM_CFG        2001//㊣“???‾?迆????℅?????????
#define NET_DVR_SET_ALARMHOSTSUBSYSTEM_CFG        2002//㊣“???‾?迆?豕??℅?????????
#define NET_DVR_GETEXTENDALARMININFO            2003//????﹞???㊣角??????
#define NET_DVR_MODIFYALARMINNO                 2004//????﹞???㊣角??????
#define NET_DVR_GET_ALARMHOST_WIRELESS_NETWORK_CFG    2005//????????????????????
#define    NET_DVR_SET_ALARMHOST_WIRELESS_NETWORK_CFG    2006//?豕??????????????????
#define    NET_DVR_GET_ALARMHOST_NETCFG            2007//????????????????
#define    NET_DVR_SET_ALARMHOST_NETCFG            2008//?豕??????????????
#define NET_DVR_GET_LED_SCREEN_CFG                2009// ????LED????????
#define NET_DVR_SET_LED_SCREEN_CFG                2010// ?豕??LED????????
#define NET_DVR_GET_LED_CONTENT_CFG                2011// ????LED????????
#define    NET_DVR_SET_LED_CONTENT_CFG                2012// ?豕??LED????????
#define NET_DVR_TURNON_LED                        2013// ?辰??LED??
#define NET_DVR_TURNOFF_LED                        2014// ??㊣?LED??
#define NET_DVR_GET_LED_TIMER_SWITCH            2015// ????LED???“?㊣????????
#define NET_DVR_SET_LED_TIMER_SWITCH            2016// ?豕??LED???“?㊣????????
#define NET_DVR_SET_LED_BRIGHTNESS                2017// ?????豕??LED??????
#define NET_DVR_GET_LED_TIMER_BRIGHTNESS            2018//?豕??﹞??㊣LED??????
#define NET_DVR_SET_LED_TIMER_BRIGHTNESS            2019//????﹞??㊣LED??????
#define NET_DVR_LED_CHECKTIME                        2020//LED???㊣
#define NET_DVR_GET_ALARMHOST_AUDIO_ASSOCIATE_ALARM    2021//?????????迆??㊣“??????
#define NET_DVR_SET_ALARMHOST_AUDIO_ASSOCIATE_ALARM    2022//?豕???????迆??㊣“??????
#define    NET_DVR_GET_LED_STATUS                        2023//????LED??℅???
#define NET_DVR_CLOSE_SUBSYSTEM_FAULT_ALARM         2027//??㊣?℅??????????芍????
#define NET_DVR_SET_SUBSYSTEM_BYPASS                2028//℅????????﹞
#define NET_DVR_CANCEL_SUBSYSTEM_BYPASS                2029//℅????????﹞????

#define NET_DVR_GET_ALARMHOST_SUBSYSTEM_CFG_EX        2030//????℅?????????????
#define    NET_DVR_SET_ALARMHOST_SUBSYSTEM_CFG_EX        2031//?豕??℅?????????????
#define NET_DVR_GET_ALARMHOST_PRINTER_CFG            2032//?????辰???迆?辰??????
#define    NET_DVR_SET_ALARMHOST_PRINTER_CFG            2033//?豕???辰???迆?辰??????
#define    NET_DVR_GET_ALARMHOST_ZONE_LIST_IN_SUBSYSTEM 2034//???????“℅??????????迄??﹞???
#define    NET_DVR_GET_ALARMHOST_TRIGGER_LIST            2035//?????迄????﹞??‾
#define    NET_DVR_ARM_ALARMHOST_SUBSYSTEM                2036//∼???﹞??角????℅???????﹞?
#define    NET_DVR_GET_ALARMHOST_EVENT_TRIG_ALARMOUT_CFG 2037// ??????????﹞?㊣“??????????
#define NET_DVR_SET_ALARMHOST_EVENT_TRIG_ALARMOUT_CFG 2038// ?豕????????﹞?㊣“??????????
#define    NET_DVR_GET_ALARMHOST_FAULT_CFG                2039// ???????????赤????
#define NET_DVR_SET_ALARMHOST_FAULT_CFG                2040// ?豕?????????赤????
#define NET_DVR_SEARCH_ARMHOST_EXTERNAL_MODULE         2041//℅??????‾
#define    NET_DVR_REGISTER_ALARMHOST_EXTERNAL_MODULE    2042//℅???℅??芍
#define NET_DVR_CLOSE_ALARMHOST_OVERALL_FAULT_ALARM 2043//??㊣??????????芍????

#define NET_DVR_GET_SAFETYCABIN_WORK_MODE            2044 //????﹞??∟???∟℅‾????????
#define NET_DVR_SET_SAFETYCABIN_WORK_MODE            2045 //?豕??﹞??∟???∟℅‾????????
#define NET_DVR_GET_SAFETYCABIN_PERSON_SIGNAL_CFG   2046 //????﹞??∟????????????????
#define NET_DVR_SET_SAFETYCABIN_PERSON_SIGNAL_CFG   2047 //?豕??﹞??∟????????????????

#define  NET_DVR_GET_ALARMHOST_MODULE_CFG            2048//???????谷????
//#define  NET_DVR_SET_ALARMHOST_MODULE_CFG            2049//?豕?????谷????(?∟??)

#define     NET_DVR_GET_ALARMHOST_EXTERNAL_DEVICE_STATE        2050//????485?????豕㊣?℅???
#define  NET_DVR_SET_ALARMHOST_EXTERNAL_DEVICE_LIMIT_VALUE  2051//?豕???????豕㊣?㊣“??????
#define  NET_DVR_GET_ALARMHOST_EXTERNAL_DEVICE_LIMIT_VALUE  2052//?????????豕㊣?㊣“??????
#define  NET_DVR_GET_ALARMHOST_SENSOR_JOINT_CFG                2053// ??????????????????
#define  NET_DVR_SET_ALARMHOST_SENSOR_JOINT_CFG                2054// ?豕????????????????
#define     NET_DVR_SET_ALARMHOST_RS485_SLOT_CFG                2055// ?豕??㊣“???‾?迆485????????
#define  NET_DVR_GET_ALARMHOST_RS485_SLOT_CFG                2056// ????㊣“???‾?迆485????????

#define NET_DVR_GET_ALL_VARIABLE_INFO      2057   // ?????迄??㊣???????????
#define NET_DVR_GET_ALARM_POINT_CFG       2058   // ????????????
#define NET_DVR_SET_ALARM_POINT_CFG       2059   // ?豕??????????
#define NET_DVR_GET_HISTORY_VALUE          2060   // ?????迆?﹞????
#define NET_DVR_GET_ALARMHOST_ALARM_MODE  2061   // ????????????﹞???
#define NET_DVR_SET_ALARMHOST_ALARM_MODE  2062   // ?豕??????????﹞???
#define NET_DVR_GET_ALARMHOST_SENSOR_VALUE 2063   // ?????????????㊣????

#define NET_DVR_GET_ALARMHOST_REPORT_CENTER_V40    2064   // ????????????﹞???
#define NET_DVR_SET_ALARMHOST_REPORT_CENTER_V40    2065   // ?豕??????????﹞???
#define NET_DVR_GET_OUTPUT_SCHEDULE_RULECFG        2068   // ?????㊣??????????
#define NET_DVR_SET_OUTPUT_SCHEDULE_RULECFG     2069   // ?豕???㊣??????????
#define NET_DVR_GET_CMS_CFG                     2070
#define    NET_DVR_SET_CMS_CFG                        2071

#define NET_DVR_GET_PASSTHROUGH_CAP  2073  //?????豕㊣???????????

#define NET_DVR_GET_ALARMHOST_MAIN_STATUS_V40    2072   // ?????‾??℅???V40
#define NET_DVR_GET_ALARMHOST_MAIN_STATUS_V51    2083   // ?????‾??℅???V51

/*************************************????㊣“???‾?迆1.3 begin*************************************/
#define NET_DVR_GET_ALARM_CAPTRUE_CFG                 2074    //????㊣“??℅???????????
#define    NET_DVR_SET_ALARM_CAPTRUE_CFG                2075    //?豕??㊣“??℅???????????
#define NET_DVR_GET_ONE_OUTPUT_SCH_RULECFG_V40        2078   // ?????????㊣??????????V40
#define NET_DVR_SET_ONE_OUTPUT_SCH_RULECFG_V40        2079   // ?豕???????㊣??????????V40
#define NET_DVR_GET_OUTPUT_SCHEDULE_RULECFG_V40        2080   // ?????㊣??????????V40
#define NET_DVR_SET_OUTPUT_SCHEDULE_RULECFG_V40     2081   // ?豕???㊣??????????V40
#define  NET_DVR_ALARMHOST_CLOSE_SUBSYSTEM  2082  //??℅??????﹞﹞???℅‾
/*************************************????㊣“???‾?迆1.3 end**************************************/


#define NET_DVR_GET_WEEK_PLAN_CFG               2100    //??????℅?????????????
#define NET_DVR_SET_WEEK_PLAN_CFG               2101    //?豕????℅?????????????
#define NET_DVR_GET_DOOR_STATUS_HOLIDAY_PLAN    2102    //??????℅???????????????
#define NET_DVR_SET_DOOR_STATUS_HOLIDAY_PLAN    2103    //?豕????℅???????????????
#define NET_DVR_GET_DOOR_STATUS_HOLIDAY_GROUP   2104    //??????℅???????℅谷????
#define NET_DVR_SET_DOOR_STATUS_HOLIDAY_GROUP   2105    //?豕????℅???????℅谷????
#define NET_DVR_GET_DOOR_STATUS_PLAN_TEMPLATE   2106    //??????℅?????????∼?????
#define NET_DVR_SET_DOOR_STATUS_PLAN_TEMPLATE   2107    //?豕????℅?????????∼?????
#define NET_DVR_GET_DOOR_CFG                    2108    //??????????
#define NET_DVR_SET_DOOR_CFG                    2109    //?豕????????
#define NET_DVR_GET_DOOR_STATUS_PLAN            2110    //??????℅???????????
#define NET_DVR_SET_DOOR_STATUS_PLAN            2111    //?豕????℅???????????
#define NET_DVR_GET_GROUP_CFG                   2112    //??????℅谷????
#define NET_DVR_SET_GROUP_CFG                   2113    //?豕????℅谷????
#define NET_DVR_GET_MULTI_CARD_CFG              2114    //?????角???“????
#define NET_DVR_SET_MULTI_CARD_CFG              2115    //?豕???角???“????
#define NET_DVR_GET_CARD_CFG                    2116    //?????“????
#define NET_DVR_SET_CARD_CFG                    2117    //?豕???“????
#define NET_DVR_CLEAR_ACS_PARAM                    2118    //?????????‾?迆????
#define NET_DVR_GET_SNEAK_CFG                    2119    //????﹞??㊣??????
#define NET_DVR_SET_SNEAK_CFG                   2120    //?豕??﹞??㊣??????
#define NET_DVR_GET_MULTI_DOOR_INTERLOCK_CFG    2121    //?????角??????????
#define NET_DVR_SET_MULTI_DOOR_INTERLOCK_CFG    2122    //?豕???角??????????
#define NET_DVR_GET_ACS_WORK_STATUS                2123    //?????????‾?迆?∟℅‾℅???
#define NET_DVR_GET_VERIFY_WEEK_PLAN            2124    //???????“?‾?谷?∟﹞?????????????
#define NET_DVR_SET_VERIFY_WEEK_PLAN            2125    //?豕?????“?‾?谷?∟﹞?????????????
#define NET_DVR_GET_CARD_RIGHT_WEEK_PLAN        2126    //?????“?“????????????
#define NET_DVR_SET_CARD_RIGHT_WEEK_PLAN        2127    //?豕???“?“????????????
#define NET_DVR_GET_VERIFY_HOLIDAY_PLAN         2128    //???????“?‾?谷?∟﹞???????????????
#define NET_DVR_SET_VERIFY_HOLIDAY_PLAN         2129    //?豕?????“?‾?谷?∟﹞???????????????
#define NET_DVR_GET_CARD_RIGHT_HOLIDAY_PLAN     2130    //?????“?“??????????????
#define NET_DVR_SET_CARD_RIGHT_HOLIDAY_PLAN     2131    //?豕???“?“??????????????
#define NET_DVR_GET_VERIFY_HOLIDAY_GROUP        2132    //???????“?‾?谷?∟﹞???????℅谷????
#define NET_DVR_SET_VERIFY_HOLIDAY_GROUP        2133    //?豕?????“?‾?谷?∟﹞???????℅谷????
#define NET_DVR_GET_CARD_RIGHT_HOLIDAY_GROUP    2134    //?????“?“??????℅谷????
#define NET_DVR_SET_CARD_RIGHT_HOLIDAY_GROUP    2135    //?豕???“?“??????℅谷????
#define NET_DVR_GET_VERIFY_PLAN_TEMPLATE        2136    //???????“?‾?谷?∟﹞?????????∼?????
#define NET_DVR_SET_VERIFY_PLAN_TEMPLATE        2137    //?豕?????“?‾?谷?∟﹞?????????∼?????
#define NET_DVR_GET_CARD_RIGHT_PLAN_TEMPLATE    2138    //?????“?“????????∼?????
#define NET_DVR_SET_CARD_RIGHT_PLAN_TEMPLATE    2139    //?豕???“?“????????∼?????
#define NET_DVR_GET_CARD_READER_CFG                2140    //???????“?‾????
#define NET_DVR_SET_CARD_READER_CFG             2141    //?豕?????“?‾????
#define NET_DVR_GET_CARD_READER_PLAN            2142    //???????“?‾?谷?∟????????
#define NET_DVR_SET_CARD_READER_PLAN            2143    //?豕?????“?‾?谷?∟????????
#define NET_DVR_GET_CASE_SENSOR_CFG                2144    //??????????﹞??‾????
#define NET_DVR_SET_CASE_SENSOR_CFG             2145    //?豕????????﹞??‾????
#define NET_DVR_GET_CARD_READER_ANTI_SNEAK_CFG  2146    //???????“?‾﹞??㊣??????
#define NET_DVR_SET_CARD_READER_ANTI_SNEAK_CFG  2147    //?豕?????“?‾﹞??㊣??????
#define NET_DVR_GET_PHONE_DOOR_RIGHT_CFG        2148    //???????迆???????“??????
#define NET_DVR_SET_PHONE_DOOR_RIGHT_CFG        2149    //???????迆???????“??????
#define NET_DVR_GET_FINGERPRINT_CFG             2150    //????????????
#define NET_DVR_SET_FINGERPRINT_CFG             2151    //?豕??????????
#define NET_DVR_DEL_FINGERPRINT_CFG             2152    //????????????
#define NET_DVR_GET_EVENT_CARD_LINKAGE_CFG      2153    //?????????“??????????????
#define NET_DVR_SET_EVENT_CARD_LINKAGE_CFG      2154    //?豕???????“??????????????
#define NET_DVR_GET_ANTI_SNEAK_HOST_CFG            2155    //?????‾?迆℅谷﹞??㊣??????
#define NET_DVR_SET_ANTI_SNEAK_HOST_CFG         2156    //?豕???‾?迆℅谷﹞??㊣??????
#define NET_DVR_GET_READER_ANTI_SNEAK_HOST_CFG  2157    //?????‾?迆℅谷???“?‾﹞??㊣??????
#define NET_DVR_SET_READER_ANTI_SNEAK_HOST_CFG  2158    //?豕???‾?迆℅谷???“?‾﹞??㊣??????
#define NET_DVR_GET_ACS_CFG                     2159    //?????????‾?迆????
#define NET_DVR_SET_ACS_CFG                     2160    //?豕???????‾?迆????
#define NET_DVR_GET_CARD_PASSWD_CFG                2161    //?????“????????????????
#define NET_DVR_SET_CARD_PASSWD_CFG             2162    //?豕???“????????????????
#define NET_DVR_GET_CARD_USERINFO_CFG           2163    //?????“?????????∫????????
#define NET_DVR_SET_CARD_USERINFO_CFG           2164    //?豕???“?????????∫????????

#define NET_DVR_GET_ACS_EXTERNAL_DEV_CFG        2165    //?????????‾?迆???????豕????
#define NET_DVR_SET_ACS_EXTERNAL_DEV_CFG        2166    //?豕???????‾?迆???????豕????
#define NET_DVR_GET_PERSONNEL_CHANNEL_CFG       2167    //???????㊣?“??????
#define NET_DVR_SET_PERSONNEL_CHANNEL_CFG       2168    //?豕?????㊣?“??????
#define NET_DVR_SET_PLATFORM_VERIFY_CFG         2169    //??﹞????“???∟?芍??
#define NET_DVR_GET_PERSON_STATISTICS_CFG        2170   //????????????????
#define NET_DVR_SET_PERSON_STATISTICS_CFG        2171   //?豕??????????????
#define NET_DVR_GET_ACS_SCREEN_DISPLAY_CFG        2172   //????????℅?﹞???????????
#define NET_DVR_SET_ACS_SCREEN_DISPLAY_CFG        2173   //?豕??????℅?﹞???????????
#define NET_DVR_GET_GATE_TIME_CFG               2174  //???????㊣?“???????㊣??????
#define NET_DVR_SET_GATE_TIME_CFG               2175  //?豕?????㊣?“???????㊣??????
#define NET_DVR_GET_LOCAL_CONTROLLER_STATUS     2176    //?????????????‾℅???
#define NET_DVR_GET_ONLINE_LOCAL_CONTROLLER     2177    //???‾?????????????‾
#define NET_DVR_GET_CARD_CFG_V50                2178    //???????“????(V50)
#define NET_DVR_SET_CARD_CFG_V50                2179    //?豕?????“????(V50)
#define NET_DVR_GET_ACS_WORK_STATUS_V50         2180    //?????????‾?迆?∟℅‾℅???(V50)
#define NET_DVR_GET_EVENT_CARD_LINKAGE_CFG_V50  2181    //?????????“??????????????(V50)
#define NET_DVR_SET_EVENT_CARD_LINKAGE_CFG_V50  2182    //?豕???????“??????????????(V50)
#define NET_DVR_GET_FINGERPRINT_CFG_V50         2183    //????????????V50
#define NET_DVR_SET_FINGERPRINT_CFG_V50         2184    //?豕??????????V50

#define NET_DVR_GET_SAFETYCABIN_STATE            2197    //????﹞??∟??℅???
#define NET_DVR_GET_RS485_CASCADE_CFG            2198   //????Rs485?????豕㊣?????
#define NET_DVR_SET_RS485_CASCADE_CFG            2199   //?豕??Rs485?????豕㊣?????

/*************************************????㊣“???‾?迆2.0 begin*************************************/
#define NET_DVR_GET_REMOTECONTROLLER_PERMISION_CFG        2200    //?????????‾?“??????
#define NET_DVR_SET_REMOTECONTROLLER_PERMISION_CFG        2201    //?豕???????‾?“??????
#define NET_DVR_GET_KEYBOARD_CFG                        2202    //?????邦??????????
#define NET_DVR_SET_KEYBOARD_CFG                        2203    //?豕???邦??????????
#define    NET_DVR_GET_ALARMHOST_WIRELESS_BUSINNESS_INFO    2204    //?????????谷??
#define    NET_DVR_GET_ALL_REMOTECONTROLLER_LIST            2205    //?????迄???????‾
#define    NET_DVR_GET_PREVIEW_DELAY_CFG                    2206    //?????????∟??????????
#define    NET_DVR_SET_PREVIEW_DELAY_CFG                    2207    //?豕???????∟??????????
#define NET_DVR_GET_ZONE_CHANNEL_LINKAGE_CFG            2208    //????﹞????????????“??????
#define NET_DVR_SET_ZONE_CHANNEL_LINKAGE_CFG            2209    //?豕??﹞????????????“??????
#define NET_DVR_GET_CENTER_SERVER_CFG                    2210    //????㊣“??????﹞????‾
#define NET_DVR_SET_CENTER_SERVER_CFG                    2211    //?豕??㊣“??????﹞????‾
/*************************************????㊣“???‾?迆2.0 end**************************************/

/********************************???邦?????㊣㊣“???迆?﹞V1.0.0 begin********************************/
#define NET_DVR_GET_EMERGENCE_ALARM_PRODUCT_CAP            2212    //???????邦?????㊣㊣“???迆?﹞????
#define NET_DVR_GET_CALL_WAITTING_CFG_CAP                2213    //????????????????????????
#define NET_DVR_GET_CALL_WAITTING_CFG                    2214    //????????????????????
#define NET_DVR_SET_CALL_WAITTING_CFG                    2215    //?豕??????????????????
#define NET_DVR_GET_ALARM_LAMP_CFG_CAP                    2216    //????????????????????
#define NET_DVR_GET_ALARM_LAMP_CFG                        2217    //????????????????
#define NET_DVR_SET_ALARM_LAMP_CFG                        2218    //?豕??????????????
#define NET_DVR_GET_VOICE_PROMPTION_CFG_CAP                2219    //?????????芍??????????
#define NET_DVR_GET_VOICE_PROMPTION_CFG                    2220    //?????????芍??????
#define NET_DVR_SET_VOICE_PROMPTION_CFG                    2221    //?豕???????芍??????
#define NET_DVR_GET_EMERGENCE_ALARM_RESPONSE_CAP        2222    //???????㊣㊣“?????赤????
#define NET_DVR_EMERGENCE_ALARM_RESPONSE_CTRL            2223    //???㊣㊣“?????赤????
/********************************???邦?????㊣㊣“???迆?﹞V1.0.0 end**********************************/

//????㊣“???‾?迆 V2.2
#define NET_DVR_GET_ALARMHOST_NETCFG_V50                2224    //????㊣“???‾?迆????????????V50
#define NET_DVR_SET_ALARMHOST_NETCFG_V50                2225    //?豕??㊣“???‾?迆????????????V50
#define    NET_DVR_REGISTER_ALARM_RS485                    2226    //RS485????℅??芍
/**********************************???﹞㊣“???‾?迆V3.0****************************************/

#define NET_DVR_GET_ALARMIN_PARAM_LIST                    2227    //????﹞?????????㊣赤
//????㊣“???‾?迆1.0.0
#define NET_DVR_GET_ALARMHOST_OTHER_STATUS_V50            2228    //????㊣“???‾?迆????℅???v50
#define NET_DVR_GET_ALARMHOST_OTHER_STATUS_V51            2236    //????㊣“???‾?迆????℅???V51
#define NET_DVR_GET_ALARMIN_ASSOCIATED_CHAN_LIST        2229    //????﹞???﹞????????????“????????㊣赤
#define NET_DVR_GET_ALARMIN_TRIGGER                     2230    //????㊣“???‾?迆﹞???????????
#define NET_DVR_SET_ALARMIN_TRIGGER                     2231    //?豕??㊣“???‾?迆﹞???????????
#define NET_DVR_GET_EMERGENCY_CALL_HELP_TRIGGER         2232    //????㊣“???‾?迆???㊣?車?迆????????
#define NET_DVR_SET_EMERGENCY_CALL_HELP_TRIGGER         2233    //?豕??㊣“???‾?迆???㊣?車?迆????????
#define NET_DVR_GET_CONSULT_TRIGGER                     2234    //????㊣“???‾?迆????℅???????????
#define NET_DVR_SET_CONSULT_TRIGGER                     2235    //?豕??㊣“???‾?迆????℅???????????
#define NET_DVR_GET_ALARMIN_PARAM_LIST_V50              2237    //????﹞?????????㊣赤V50

#define NET_DVR_GET_CARD_RIGHT_WEEK_PLAN_V50    2304  //?????“?“????????????V50
#define NET_DVR_SET_CARD_RIGHT_WEEK_PLAN_V50    2305  //?豕???“?“????????????V50

#define NET_DVR_GET_CARD_RIGHT_HOLIDAY_PLAN_V50    2310  //?????“?“??????????????V50
#define NET_DVR_SET_CARD_RIGHT_HOLIDAY_PLAN_V50    2311  //?豕???“?“??????????????V50

#define NET_DVR_GET_CARD_RIGHT_HOLIDAY_GROUP_V50      2316 //???“?“??????℅谷????V50
#define NET_DVR_SET_CARD_RIGHT_HOLIDAY_GROUP_V50      2317 //?豕???“?“??????℅谷????V50

#define NET_DVR_GET_CARD_RIGHT_PLAN_TEMPLATE_V50     2322 //?????“?“????????∼?????V50
#define NET_DVR_SET_CARD_RIGHT_PLAN_TEMPLATE_V50     2323//?豕???“?“????????∼?????V50

/**********************************???????????????迆?﹞V1.0 ?豕㊣???℅?****************************************/
#define NET_DVR_GET_SCHEDULE_INFO                       2500    //??????∼角????
#define NET_DVR_GET_ATTENDANCE_SUMMARY_INFO             2501    //??????????℅?????
#define NET_DVR_GET_ATTENDANCE_RECORD_INFO              2502    //????????????????
#define NET_DVR_GET_ABNORMAL_INFO                       2503    //?????足??????????
/**********************************???????????????迆?﹞V1.0****************************************/

/*************************************?????????????迆1.0 begin**************************************/
#define NET_DVR_CAPTURE_FINGERPRINT_INFO                2504    //????????????
/*************************************?????????????迆1.0 end**************************************/

/*************************************??????????????1.0 begin**************************************/
#define NET_DVR_BULK_UPLOAD_BLACK_LIST_PICTURE          2520       //?迆????????????????
#define NET_DVR_BULK_UPLOAD_ID_BLACK_LIST        2521        //?迆???????赤﹞??∟??????
#define NET_DVR_GET_FAILED_FACE_INFO             2522        //?????豕㊣??????“???∫∼???????????
#define NET_DVR_GET_FACE_AND_TEMPLATE            2523        //?????????∼??∼?????
#define NET_DVR_SET_FACE_AND_TEMPLATE            2524        //?豕???????∼??∼?????
/*************************************??????????????1.0 end**************************************/

/*************************************??????㊣??????????迆1.0 begin**************************************/
#define NET_DVR_GET_CARD_READER_CFG_V50                    2505    //???????“?‾????(V50)
#define NET_DVR_SET_CARD_READER_CFG_V50                 2506    //?豕?????“?‾????(V50)
#define NET_DVR_GET_FACE_PARAM_CFG                      2507    //????????????
#define NET_DVR_SET_FACE_PARAM_CFG                      2508    //?豕??????????
#define NET_DVR_DEL_FACE_PARAM_CFG                      2509    //????????????
#define    NET_DVR_CAPTURE_FACE_INFO                        2510    //????????????
/*************************************??????㊣??????????迆1.0 end**************************************/
#define NET_DVR_GET_REGISTER_INFO                       2511    //????????????

#define NET_DVR_GET_SMSRELATIVEPARA_V50                    2512    //?????????角??????
#define NET_DVR_SET_SMSRELATIVEPARA_V50                    2513    //?豕???????角??????
#define NET_DVR_GET_ACS_EVENT                           2514    //?豕㊣?????????
#define NET_DVR_GET_MULTI_CARD_CFG_V50                  2515    //?????角???“????V50
#define NET_DVR_SET_MULTI_CARD_CFG_V50                  2516    //?豕???角???“????V50
#define NET_DVR_DEL_FINGERPRINT_CFG_V50                 2517    //????????????V50
#define NET_DVR_GET_EVENT_CARD_LINKAGE_CFG_V51          2518    //?????????“??????????????(V51)
#define NET_DVR_SET_EVENT_CARD_LINKAGE_CFG_V51          2519    //?豕???????“??????????????(V51)

#define NET_DVR_SET_EXAM_INFO                           2530    //??????????﹞?
#define NET_DVR_SET_EXAMINEE_INFO                       2531    //???迆??????﹞?
#define NET_DVR_SEARCH_EXAM_COMPARE_RESULT              2532    //????㊣????芍???谷??
#define NET_DVR_BULK_CHECK_FACE_PICTURE                 2533    //?迆?????谷????????
#define NET_DVR_JSON_CONFIG                         2550    //JSON????????
#define NET_DVR_FACE_DATA_RECORD                        2551    //?赤??????????????????
#define NET_DVR_FACE_DATA_SEARCH                        2552    //?谷????????????????????
#define NET_DVR_FACE_DATA_MODIFY                        2553    //??????????????????????

#define NET_DVR_GET_ALL_ALARM_RS485CFG            2705    // ????485????
#define NET_DVR_GET_ALL_ALARMHOST_RS485_SLOT_CFG        2706        // ?????迄??㊣“???‾?迆485????????
#define NET_DVR_GET_DEVICE_SELF_CHECK_STATE        2707    //?????豕㊣?℅??足????
#define NET_DVR_GET_ALL_ALARM_POINT_CFG            2708    // ?????迄??????????
#define NET_DVR_GET_ALL_ALARM_SENSOR_CFG        2709    // ?????迄????????????
#define NET_DVR_GET_ALL_ALARM_SENSOR_JOINT        2710    //?????迄????????????????
#define NET_DVR_GET_AIR_CONDITION_PARAM            2711    //???????‾????
#define NET_DVR_GET_OUT_SCALE_CFG                2712        //?????‾?“??????????
#define NET_DVR_SET_OUT_SCALE_CFG                2713        //?豕???‾?“??????????
#define NET_DVR_GET_ALARM_CHAN_ABLITITY            2714        //????㊣“???角???“????
/**********************************???﹞㊣“???‾?迆V3.0****************************************/

//???﹞㊣“???‾?迆D2000 V1.0
#define NET_DVR_GET_ALARMCENTER_NETCFG            2715        //????㊣“??????????????????
#define NET_DVR_SET_ALARMCENTER_NETCFG            2716        //????㊣“??????????????????


#define NET_ITC_GET_TRIGGERCFG                  3003  //??????﹞?????
#define NET_ITC_SET_TRIGGERCFG                  3004  //?豕????﹞?????
#define NET_ITC_GET_IOOUT_PARAM_CFG                3005  //????IO?????????“3.1?????車∼?㊣???
#define NET_ITC_SET_IOOUT_PARAM_CFG                3006  //?豕??IO?????????“3.1?????車∼?㊣???

#define NET_DVR_GET_CAMERA_SETUPCFG                3007  //?????角?迆???豕????
#define NET_DVR_SET_CAMERA_SETUPCFG                3008  //?豕???角?迆???豕????

#define NET_ITC_GET_TRIGGER_DEFAULTCFG          3013  //??????﹞?????????????
#define NET_DVR_GET_STATUS_DETECTCFG            3015  //????℅????足??????????
#define NET_DVR_SET_STATUS_DETECTCFG            3016  //?豕??℅????足??????????
#define NET_ITC_GET_VIDEO_TRIGGERCFG            3017  //??????????????﹞?????
#define NET_ITC_SET_VIDEO_TRIGGERCFG            3018  //?豕????????????﹞?????
#define NET_DVR_GET_TPS_ALARMCFG                3019  //???????“????㊣“??????
#define NET_DVR_SET_TPS_ALARMCFG                3020  //?豕?????“????㊣“??????


#define NET_DVR_GET_REDAREACFG                  3100   //?????足???????辰????
#define NET_DVR_SET_REDAREACFG                  3101   //?豕???足???????辰????
#define    NET_DVR_GET_TEST_SPOT                    3102   //????SPOT??????℅????????㊣?∼??????
#define    NET_DVR_SET_TEST_SPOT                    3103   //?豕??SPOT??????℅????????㊣?∼??????
#define NET_DVR_GET_CABINETCFG                    3104   //?迆??????????????
#define NET_DVR_SET_CABINETCFG                    3105   //?迆???????????豕??
#define NET_DVR_VEHICLE_CHECK_START                3106   //???????邦?谷????????
#define NET_DVR_SET_CAPTUREPIC_CFG                3107   //????℅????????豕???邦??
#define NET_DVR_GET_CAPTUREPIC_CFG                3108   //????℅????????????邦??
#define NET_DVR_SET_MOBILEPLATE_RECOG_CFG        3109   //??????????㊣??????豕???邦??
#define NET_DVR_GET_MOBILEPLATE_RECOG_CFG        3110   //??????????㊣??????????邦??
#define NET_DVR_SET_MOBILE_RADAR_CFG            3111   //?????℅???????豕???邦??
#define NET_DVR_GET_MOBILE_RADAR_CFG            3112   //?????℅???????????邦??
#define NET_DVR_SET_MOBILE_LOCALPLATECHK_CFG    3113   //??????????㊣?????㊣??????豕???邦??
#define NET_DVR_GET_MOBILE_LOCALPLATECHK_CFG    3114   //??????????㊣?????㊣??????????邦??

#define  NET_ITC_GET_ICRCFG                        3115   //????ICR????????
#define  NET_ITC_SET_ICRCFG                        3116   //?豕??ICR????????
#define  NET_ITC_GET_RS485_ACCESSINFO            3117   //????Rs485?????????豕㊣??????? 
#define  NET_ITC_SET_RS485_ACCESSINFO            3118   //?豕??Rs485?????????豕㊣???????
#define  NET_ITC_GET_EXCEPTIONCFG                 3119   //?????足??????
#define  NET_ITC_SET_EXCEPTIONCFG                3120   //?豕???足??????
#define  NET_ITC_GET_FTPCFG                        3121   //????ITC  FTP?豕??????
#define  NET_ITC_SET_FTPCFG                        3122   //?豕??ITC FTP?豕??????

#define  NET_DVR_VEHICLE_CONTROL_LIST_START     3123   //?豕????????∼℅????????
#define  NET_DVR_GET_ALL_VEHICLE_CONTROL_LIST   3124   //?????迄????????∼℅????????
#define  NET_DVR_VEHICLE_DELINFO_CTRL           3125   //?????豕㊣???????????????????
#define  NET_DVR_GET_ENTRANCE_PARAMCFG            3126   //??????????????????
#define  NET_DVR_SET_ENTRANCE_PARAMCFG            3127   //?豕????????????????
#define  NET_DVR_BARRIERGATE_CTRL               3128   //????????????
#define  NET_DVR_GATELAMP_CTRL                  3129   //??????????
#define  NET_DVR_GET_CURTRIGGERMODE             3130   //?????豕㊣??㊣?∼??﹞?????
#define  NET_DVR_GET_GPSDATACFG                    3131   //????GPS????
#define  NET_DVR_SET_GPSDATACFG                    3132   //?豕??GPS????
#define  NET_DVR_VEHICLELIST_CTRL_START            3133   //?豕????????∼℅????????

#define  NET_DVR_GET_GUARDCFG                   3134   //??????????㊣??足?????? 
#define  NET_DVR_SET_GUARDCFG                   3135   //?豕????????㊣??足??????
#define  NET_DVR_GET_SNAPINFO_CFG               3136   //????℅??????????? 
#define  NET_DVR_SET_SNAPINFO_CFG               3137   //?豕??℅???????????
#define  NET_DVR_GET_SNAPINFO_CFG_V40           3138   //????℅??????????????? 
#define  NET_DVR_SET_SNAPINFO_CFG_V40           3139   //?豕??℅???????????????
#define  NET_DVR_SET_CURTRIGGERMODE                3140   //?豕???豕㊣??㊣?∼??﹞?????(??IPC/D?∫??)
#define     NET_DVR_GET_TRAFFIC_DATA                3141   //?∟???????????“????
#define     NET_DVR_GET_TRAFFIC_FLOW                3142   //?∟???????????“?‾??
#define  NET_DVR_PARKING_VEHICLE_SEND           3143   //??????????????﹞?
#define  NET_DVR_PARKING_CARD_SEND              3144   //?????“??﹞?
#define     NET_DVR_PARKING_CARD_CTRL                3145   //???????????“????????

#define    NET_DVR_GET_ALARMCTRL_CAPABILITIES        3146   //????㊣“??????????
#define    NET_DVR_SET_ALARMCTRL_CFG                3147   //?豕??㊣“??????
#define    NET_DVR_GET_ALARMCTRL_CFG                3148   //????㊣“??????

#define NET_DVR_GET_AUDIO_INPUT                 3201   //????????????????
#define NET_DVR_SET_AUDIO_INPUT                 3202  //?豕??????????????
#define NET_DVR_GET_CAMERA_DEHAZE_CFG           3203   //???????赤????????
#define NET_DVR_SET_CAMERA_DEHAZE_CFG           3204  //?豕?????赤????????
#define NET_DVR_REMOTECONTROL_ALARM             3205  //?????????????‾??﹞?
#define NET_DVR_REMOTECONTROL_DISALARM          3206  //?????????????‾?﹞﹞?
#define NET_DVR_REMOTECONTROL_STUDY             3207  //?????????????‾?∫?∼
#define NET_DVR_WIRELESS_ALARM_STUDY            3208  //????????????㊣“???∫?∼
#define NET_IPC_GET_AUX_ALARMCFG                3209   //?????“?迆㊣“??????????
#define NET_IPC_SET_AUX_ALARMCFG                3210  //?豕???“?迆㊣“??????????
#define NET_DVR_GET_PREVIEW_DISPLAYCFG            3211  //?????∟??????????
#define NET_DVR_SET_PREVIEW_DISPLAYCFG             3212  //?豕???∟??????????
#define NET_DVR_REMOTECONTROL_PTZ                3213  //????????PTZ
#define NET_DVR_REMOTECONTROL_PRESETPOINT       3214   //?????????∟????
#define NET_DVR_REMOTECONTROL_CRUISE             3215   //????????????

#define NET_DVR_GET_MULTI_STREAM_COMPRESSIONCFG  3216 //?????????角???‾????????
#define NET_DVR_SET_MULTI_STREAM_COMPRESSIONCFG  3217 //?????豕???角???‾???????? 

#define NET_DVR_GET_WPSCFG                        3218  //????WPS????
#define NET_DVR_SET_WPSCFG                        3219  //?豕??WPS????
#define NET_DVR_WPS_CONNECT                     3220  //????????WPS????
#define NET_DVR_GET_DEVICE_PIN                  3221  //?????豕㊣?PIN??
#define NET_DVR_UPDATE_PIN                      3223  //?邦???豕㊣?PIN??
#define NET_DVR_GET_PRESETCFG                   3224  //?????∟????????
#define NET_DVR_GET_PTZCRUISECFG                3225  //?????????﹞??????
#define NET_DVR_GET_PRESET_NUM                    3226  //?????∟????????
#define NET_DVR_GET_PTZCRUISE_NUM                3227  //?????????﹞??????

#define NET_DVR_GET_MOTION_TRACK_CFG            3228  //?????迆℅?????
#define NET_DVR_SET_MOTION_TRACK_CFG            3229  //?豕???迆℅?????
#define NET_DVR_CLEAR_IPC_PARAM                    3230  //?????∼??????
#define NET_DVR_GET_IPADDR_FILTERCFG            3232  //????IP???﹞????????
#define NET_DVR_SET_IPADDR_FILTERCFG            3233  //?豕??IP???﹞????????

#define NET_DVR_GET_LOGO_OVERLAYCFG                3234  //????LOGO???????????? 
#define NET_DVR_SET_LOGO_OVERLAYCFG                3235  //?豕??LOGO????????????

#define NET_DVR_GET_IPV6_LIST                   3236  //???????“??????IPV6???﹞????
#define NET_DVR_GET_AUDIOOUT_VOLUME             3237  //?????????????車??
#define NET_DVR_SET_AUDIOOUT_VOLUME             3238  //?豕???????????車??
#define NET_DVR_GET_FUZZY_UPGRADE               3239  //????????????????????

#define NET_DVR_GET_BV_CORRECT_PARAM            3240  //?????角?迆????????
#define NET_DVR_SET_BV_CORRECT_PARAM            3241  //?豕???角?迆????????
#define NET_DVR_GET_OUTPUT_VIDEO_TYPE           3242  //?????????????角??
#define NET_DVR_SET_OUTPUT_VIDEO_TYPE           3243  //?豕???????????角??

#define NET_DVR_FISHEYE_CFG                     3244  //?????∟????????
#define NET_DVR_GET_PTZ_POINT                   3245  //????PTZ??℅?㊣那
#define NET_DVR_SET_PTZ_POINT                   3246  //?豕??PTZ??℅?㊣那
#define NET_DVR_REMOTECONTROL_DEV_PARAM         3247  //?豕???豕㊣????????∫??????
#define NET_DVR_GET_FISHEYE_STREAM_STATUS       3248  //???????????‾℅???

#define NET_DVR_GET_GBT28181_ACCESS_CFG            3249  //????GBT28181???谷????????        
#define NET_DVR_SET_GBT28181_ACCESS_CFG            3250  //?豕??GBT28181???谷????????
#define NET_DVR_GET_GBT28181_CHANINFO_CFG        3251  //????GBT28181???谷?????豕㊣????“??????
#define NET_DVR_SET_GBT28181_CHANINFO_CFG        3252  //?豕??GBT28181???谷?????豕㊣????“??????
#define NET_DVR_GET_GBT28181_ALARMINCFG            3253  //????GBT28181???谷?????豕㊣???㊣“??????
#define NET_DVR_SET_GBT28181_ALARMINCFG            3254  //?豕??GBT28181???谷?????豕㊣???㊣“??????
#define NET_DVR_GET_ISP_CAMERAPARAMCFG            3255  //????ISP?∼??????????
#define NET_DVR_SET_ISP_CAMERAPARAMCFG            3256  //?豕??ISP?∼??????????
#define NET_DVR_GET_DEVSERVER_CFG                3257  //???????谷﹞???????
#define NET_DVR_SET_DEVSERVER_CFG                3258  //?豕?????谷﹞???????

//2013-11-25
#define    NET_DVR_GET_WIPERINFO_CFG                3259     //?那??????????
#define    NET_DVR_SET_WIPERINFO_CFG                3260     //?那???????豕??
#define NET_DVR_GET_TRACK_DEV_PARAM             3261   //?????迆℅??豕㊣?????
#define NET_DVR_SET_TRACK_DEV_PARAM             3262   //?豕???迆℅??豕㊣?????
#define NET_DVR_GET_PTZ_TRACK_PARAM             3263   //????PTZ?迆℅?????
#define NET_DVR_SET_PTZ_TRACK_PARAM             3264   //?豕??PTZ?迆℅?????
#define NET_DVR_GET_CENTER_POINT_CFG            3265   //??????????????
#define NET_DVR_SET_CENTER_POINT_CFG            3266   //?豕????????????
#define NET_DVR_GET_CENTER_POINT_CFG_CAPABILITIES        3267    //??????????????????
#define NET_DVR_GET_FISHEYE_CAPABILITIES        3268        //????????????

#define NET_DVR_GET_BASICPARAMCFG                3270 //????PTZ?????迄㊣?????????        
#define NET_DVR_SET_BASICPARAMCFG                3271 //?豕??PTZ?????迄㊣?????????
#define NET_DVR_GET_PTZOSDCFG                    3272 //????PTZ OSD????????????        
#define NET_DVR_SET_PTZOSDCFG                    3273 //?豕??PTZ OSD????????????
#define NET_DVR_GET_POWEROFFMEMCFG                3274 //????????????????????????    
#define NET_DVR_SET_POWEROFFMEMCFG                3275 //?豕??????????????????????
#define NET_DVR_GET_LIMITCFG                    3276 //????????????????????    
#define NET_DVR_SET_LIMITCFG                    3277 //?豕??????????????????
#define NET_DVR_PTZLIMIT_CTRL                    3278 //????????????????    

#define NET_DVR_PTZ_CLEARCTRL                    3279 //????????????????????    
#define NET_DVR_GET_PRIORITIZECFG                3281 //???????“????????????    
#define NET_DVR_SET_PRIORITIZECFG                3282 //?豕?????“????????????
#define NET_DVR_PTZ_INITIALPOSITIONCTRL            3283 //??﹞?????????    
#define NET_DVR_GET_PRIVACY_MASKSCFG            3285 //??????????㊣?????
#define NET_DVR_SET_PRIVACY_MASKSCFG            3286 //?豕????????㊣?????
#define NET_DVR_GET_PTZLOCKCFG                    3287 //???????“???“????    
#define NET_DVR_SET_PTZLOCKCFG                    3288 //?豕?????“???“????
#define NET_DVR_PTZ_ZOOMRATIOCTRL                3289 //?豕???迆℅?㊣???    
#define NET_DVR_GET_PTZLOCKINFO                    3290 //???????“???“???角????
#define NET_DVR_GET_PRIVACY_MASKS_ENABLECFG        3291 //????????????    
#define NET_DVR_SET_PRIVACY_MASKS_ENABLECFG        3292 //?豕??????????
#define NET_DVR_GET_SMARTTRACKCFG                3293 //?????????????迆℅?????????    
#define NET_DVR_SET_SMARTTRACKCFG                3294 //?豕???????????迆℅?????????
#define NET_DVR_GET_EPTZ_CFG                    3295 //????EPTZ????
#define NET_DVR_SET_EPTZ_CFG                    3296 //?豕??EPTZ????
#define NET_DVR_GET_EPTZ_CFG_CAPABILITIES        3297 //????EPTZ????????

#define NET_DVR_GET_LOW_LIGHTCFG                3303//?????足?辰???????豕??????
#define NET_DVR_SET_LOW_LIGHTCFG                3304//?豕???足?辰???????豕??????
#define NET_DVR_GET_FOCUSMODECFG                3305//?????足?辰????????????
#define NET_DVR_SET_FOCUSMODECFG                3306//?豕???足?辰????????????
#define NET_DVR_GET_INFRARECFG                  3307//?????足?辰?足???豕??????
#define NET_DVR_SET_INFRARECFG                  3308//?豕???足?辰?足???豕??????
#define NET_DVR_GET_AEMODECFG                   3309//?????足?辰?????豕??????
#define NET_DVR_SET_AEMODECFG                   3310//?豕???足?辰?????豕??????
#define NET_DVR_CONTROL_RESTORE_SUPPORT         3311 //?????∼??????????(???????????????∼???????????角??????????)
#define NET_DVR_CONTROL_RESTART_SUPPORT         3312 //?足?辰?迆??????
#define NET_DVR_CONTROL_PTZ_PATTERN             3313//???“?“?迄?“?豕
#define NET_DVR_GET_PTZ_PARKACTION_CFG          3314//???????“????????
#define NET_DVR_SET_PTZ_PARKACTION_CFG          3315//?豕?????“????????
#define NET_DVR_CONTROL_PTZ_MANUALTRACE         3316//?????迆℅??“??
#define NET_DVR_GET_ROI_DETECT_NUM                3349 //????ROI?足?????辰㊣角??????
#define NET_DVR_GET_ROI_DETECT                    3350 //????ROI?足?????辰????
#define NET_DVR_SET_ROI_DETECT                    3351 //?豕??ROI?足?????辰????
#define NET_DVR_GET_FACE_DETECT                    3352 //?????????足??????
#define NET_DVR_SET_FACE_DETECT                    3353 //?豕???????足??????
#define NET_DVR_GET_CORRIDOR_MODE                3354 //????℅???????????????
#define NET_DVR_SET_CORRIDOR_MODE                3355 //?豕??℅???????????????
#define NET_DVR_GET_SCENECHANGE_DETECTIONCFG    3356 //???????∼㊣??邦㊣“??????
#define NET_DVR_SET_SCENECHANGE_DETECTIONCFG    3357 //?豕?????∼㊣??邦㊣“??????
#define NET_DVR_GET_TRAVERSE_PLANE_DETECTION    3360 
#define NET_DVR_SET_TRAVERSE_PLANE_DETECTION    3361 
#define NET_DVR_GET_FIELD_DETECTION                3362 //???????辰?足??????
#define NET_DVR_SET_FIELD_DETECTION                3363 //?豕?????辰?足??????
#define NET_DVR_GET_DEFOCUSPARAM                3364 //?????谷???足??????????
#define NET_DVR_SET_DEFOCUSPARAM                3365 //?豕???谷???足??????????
#define NET_DVR_GET_AUDIOEXCEPTIONPARAM            3366 //?????????足??????
#define NET_DVR_SET_AUDIOEXCEPTIONPARAM            3367 //?豕???????足??????
#define NET_DVR_GET_CCDPARAMCFG_EX              3368 //????CCD????????
#define NET_DVR_SET_CCDPARAMCFG_EX              3369 //?豕??CCD????????
#define NET_DVR_START_GET_INPUTVOLUME            3370//????????????
#define NET_DVR_SET_SCH_TASK                    3380 //?豕???辰?迆?“?㊣????
#define NET_DVR_GET_SCH_TASK                    3381  //?????辰?迆?“?㊣????
#define NET_DVR_SET_PRESET_NAME                    3382 //?豕???∟????????
#define NET_DVR_GET_PRESET_NAME                    3383 //?????∟????????
#define NET_DVR_SET_AUDIO_NAME                    3384 //?豕??????????
#define NET_DVR_GET_AUDIO_NAME                    3385  //????????????
#define NET_DVR_RESUME_INITRACKPOS              3386  //?????迆℅???????
#define NET_DVR_NTP_SERVER_TEST                    3387    //NTP﹞????‾????
#define    NET_DVR_NAS_SERVER_TEST                    3388    //NAS﹞????‾????
#define    NET_DVR_EMAIL_SERVER_TEST                3389    //Email﹞????‾????
#define    NET_DVR_FTP_SERVER_TEST                    3390    //FTP﹞????‾????
#define    NET_DVR_IP_TEST                            3391    //IP????
#define NET_DVR_GET_NET_DISKCFG_V40             3392 //????????????????v40
#define NET_DVR_SET_NET_DISKCFG_V40                3393 //?????????????豕??v40
#define    NET_DVR_GET_IOOUT_CFG                    3394//??????????????
#define    NET_DVR_SET_IOOUT_CFG                    3395//?豕????????????
#define    NET_DVR_GET_SIGNAL_SYNC                    3396//??????????????????????
#define    NET_DVR_SET_SIGNAL_SYNC                    3397//?豕????????????????????    

#define    NET_DVR_GET_EZVIZ_ACCESS_CFG            3398//????EZVIZ????????
#define    NET_DVR_SET_EZVIZ_ACCESS_CFG            3399//?豕??EZVIZ????????
#define    NET_DVR_GET_SCHEDULE_AUTO_TRACK_CFG        3400//?????“?㊣?????迆℅?????
#define    NET_DVR_SET_SCHEDULE_AUTO_TRACK_CFG        3401//?豕???“?㊣?????迆℅?????
#define    NET_DVR_MAKE_I_FRAME                    3402//????I??
#define NET_DVR_GET_ALARM_RELATE                3403//????㊣“???????“??????????
#define NET_DVR_SET_ALARM_RELATE                3404//?豕??㊣“???????“??????????
#define NET_DVR_GET_PDC_RULECFG_V42             3405  //?豕?????‾?????????辰(????)
#define NET_DVR_SET_PDC_RULECFG_V42             3406  //???????‾?????????辰(????)
#define NET_DVR_GET_HEATMAP_CFG                 3407  //?豕????????????????
#define NET_DVR_SET_HEATMAP_CFG                 3408  //??????????????????
#define NET_DVR_REMOTECONTROL_LINEARSCAN        3409   //?豕??℅車??㊣??????? 2014-03-15
#define NET_DVR_DPC_CTRL                        3410//????????????
#define NET_DVR_FFC_MANUAL_CTRL                 3411//﹞??迄????????(FFC)????????
#define NET_DVR_FFC_BACKCOMP_CTRL               3412//﹞??迄????????(FFC)㊣??∼????
#define NET_DVR_GET_FOCUSING_POSITION_STATE     3413//????????????℅???????
#define NET_DVR_GET_PRIVATE_PROTOCOL_CFG        3414   //???? ???????邦????????????????????
#define NET_DVR_SET_PRIVATE_PROTOCOL_CFG        3415   //?豕?? ???????邦????????????????????
#define NET_DVR_COMPLETE_RESTORE_CTRL           3420    //?豕???那?????????∫??

#define NET_DVR_CLOUDSTORAGE_SERVER_TEST        3421  //??????﹞????‾????
#define NET_DVR_PHONE_NUM_TEST                  3422  //???∼????????
#define NET_DVR_GET_REMOTECONTROL_STATUS        3423  //??????????﹞?℅???
#define NET_DVR_GET_MONITOR_LOCATION_INFO        3424  //?????角????????
#define NET_DVR_SET_MONITOR_LOCATION_INFO        3425  //?豕???角????????


#define    NET_DVR_GET_SMART_CAPABILITIES                3500    //????Smart????
#define    NET_DVR_GET_EVENT_TRIGGERS_CAPABILITIES        3501    //??????????﹞?????
#define    NET_DVR_GET_REGION_ENTRANCE_CAPABILITIES    3502    //???????????辰?足??????
#define    NET_DVR_GET_REGION_ENTR_DETECTION            3503    //???????????辰????
#define    NET_DVR_SET_REGION_ENTR_DETECTION            3504    //?豕?????????辰????
#define    NET_DVR_GET_REGION_ENTR_REGION                3505    //???????????辰?????????辰????
#define    NET_DVR_SET_REGION_ENTR_REGION                3506    //?豕?????????辰?????????辰????
#define    NET_DVR_GET_REGION_ENTR_TRIGGER                3507    //???????????辰????????
#define    NET_DVR_SET_REGION_ENTR_TRIGGER                3508    //?豕?????????辰????????
#define    NET_DVR_GET_REGION_ENTR_SCHEDULE            3509    //???????????辰??﹞??㊣??????
#define    NET_DVR_SET_REGION_ENTR_SCHEDULE            3510    //?豕?????????辰??﹞??㊣??????
#define    NET_DVR_GET_REGION_EXITINT_CAPABILITIES        3511    //???????????辰?足??????
#define    NET_DVR_GET_REGION_EXITING_DETECTION        3512    //???????????辰????
#define    NET_DVR_SET_REGION_EXITING_DETECTION        3513    //?豕?????????辰????
#define    NET_DVR_GET_REGION_EXITING_REGION            3514    //???????????辰?????????辰????
#define    NET_DVR_SET_REGION_EXITING_REGION            3515    //?豕?????????辰?????????辰????
#define    NET_DVR_GET_REGION_EXIT_TRIGGER                3516    //???????????辰????????
#define    NET_DVR_SET_REGION_EXIT_TRIGGER                3517    //?豕?????????辰????????
#define    NET_DVR_GET_REGION_EXIT_SCHEDULE            3518    //???????????辰??﹞??㊣??????
#define    NET_DVR_SET_REGION_EXIT_SCHEDULE            3519    //?豕?????????辰??﹞??㊣??????
#define    NET_DVR_GET_LOITERING_CAPABILITIES            3520    //?????????足??????
#define    NET_DVR_GET_LOITERING_DETECTION                3521    //?????????足??????
#define    NET_DVR_SET_LOITERING_DETECTION                3522    //?豕???????足??????
#define    NET_DVR_GET_LOITERING_REGION                3523    //?????????????????辰????
#define    NET_DVR_SET_LOITERING_REGION                3524    //?豕???????????????辰????
#define    NET_DVR_GET_LOITERING_TRIGGER                3525    //????????????????
#define    NET_DVR_SET_LOITERING_TRIGGER                3526    //?豕??????????????
#define    NET_DVR_GET_LOITERING_SCHEDULE                3527    //??????????﹞??㊣??????
#define    NET_DVR_SET_LOITERING_SCHEDULE                3528    //?豕????????﹞??㊣??????
#define    NET_DVR_GET_GROUPDETECTION_CAPABILITIES        3529    //???????㊣?????足??????
#define    NET_DVR_GET_GROUP_DETECTION                    3530    //???????㊣?????足??????
#define    NET_DVR_SET_GROUP_DETECTION                    3531    //?豕?????㊣?????足??????
#define    NET_DVR_GET_GROUPDETECTION_REGION            3532    //???????㊣?????????????辰????
#define    NET_DVR_SET_GROUPDETECTION_REGION            3533    //?豕?????㊣?????????????辰????
#define    NET_DVR_GET_GROUPDETECTION_TRIGGER            3534    //???????㊣????????????
#define    NET_DVR_SET_GROUPDETECTION_TRIGGER            3535    //?豕?????㊣????????????
#define    NET_DVR_GET_GROUPDETECTION_SCHEDULE            3536    //???????㊣??????﹞??㊣??????
#define    NET_DVR_SET_GROUPDETECTION_SCHEDULE            3537    //?豕?????㊣??????﹞??㊣??????
#define    NET_DVR_GET_RAPIDMOVE_CAPABILITIES            3538    //?????足???????足??????
#define    NET_DVR_GET_RAPIDMOVE_DETECTION                3539    //?????足???????足??????
#define    NET_DVR_SET_RAPIDMOVE_DETECTION                3540    //?豕???足???????足??????
#define    NET_DVR_GET_RAPIDMOVE_REGION                3541    //?????足???????????????辰????
#define    NET_DVR_SET_RAPIDMOVE_REGION                3542    //?豕???足???????????????辰????
#define    NET_DVR_GET_RAPIDMOVE_TRIGGER                3543    //?????足??????????????
#define    NET_DVR_SET_RAPIDMOVE_TRIGGER                3544    //?豕???足??????????????
#define    NET_DVR_GET_RAPIDMOVE_SCHEDULE                3545    //?????足??????????﹞??㊣??????
#define    NET_DVR_SET_RAPIDMOVE_SCHEDULE                3546    //?豕???足??????????﹞??㊣??????
#define    NET_DVR_GET_PATKING_CAPABILITIES            3547    //?????????足??????
#define    NET_DVR_GET_PARKING_DETECTION               3548    //?????????足??????
#define    NET_DVR_SET_PARKING_DETECTION                3549    //?豕???????足??????
#define    NET_DVR_GET_PARKING_REGION                    3550    //?????????足???????????辰????
#define    NET_DVR_SET_PARKING_REGION                    3551    //?豕???????足???????????辰????
#define    NET_DVR_GET_PARKING_TRIGGER                    3552    //?????????足??????????
#define    NET_DVR_SET_PARKING_TRIGGER                    3553    //?豕???????足??????????
#define    NET_DVR_GET_PARKING_SCHEDULE                3554    //?????????足??????﹞??㊣??????
#define    NET_DVR_SET_PARKING_SCHEDULE                3555    //?豕???????足??????﹞??㊣??????
#define    NET_DVR_GET_UNATTENDED_BAGGAGE_CAPABILITIES    3556    //???????﹞?????足??????
#define    NET_DVR_GET_UNATTENDED_BAGGAGE_DETECTION    3557    //???????﹞?????足??????
#define    NET_DVR_SET_UNATTENDED_BAGGAGE_DETECTION    3558    //?豕?????﹞?????足??????
#define    NET_DVR_GET_UNATTENDED_BAGGAGE_REGION        3559    //???????﹞?????足???????????辰????
#define    NET_DVR_SET_UNATTENDED_BAGGAGE_REGION        3560    //?豕?????﹞?????足???????????辰????
#define    NET_DVR_GET_UNATTENDED_BAGGAGE_TRIGGER        3561    //???????﹞?????足??????????
#define    NET_DVR_SET_UNATTENDED_BAGGAGE_TRIGGER        3562    //?豕?????﹞?????足??????????
#define    NET_DVR_GET_UNATTENDED_BAGGAGE_SCHEDULE        3563    //???????﹞?????足??????﹞??㊣??????
#define    NET_DVR_SET_UNATTENDED_BAGGAGE_SCHEDULE        3564    //?豕?????﹞?????足??????﹞??㊣??????
#define    NET_DVR_GET_ATTENDEDBAGGAGE_CAPABILITIES    3565    //???????﹞?????足??????
#define    NET_DVR_GET_ATTENDEDBAGGAGE_DETECTION        3566    //???????﹞?????足??????
#define    NET_DVR_SET_ATTENDEDBAGGAGE_DETECTION        3567    //?豕?????﹞?????足??????
#define    NET_DVR_GET_ATTENDEDBAGGAGE_REGION            3568    //???????﹞?????足???????????辰????
#define    NET_DVR_SET_ATTENDEDBAGGAGE_REGION            3569    //?豕?????﹞?????足???????????辰????
#define    NET_DVR_GET_ATTENDEDBAGGAGE_TRIGGER            3570    //???????﹞?????足??????????
#define    NET_DVR_SET_ATTENDEDBAGGAGE_TRIGGER            3571    //?豕?????﹞?????足??????????
#define    NET_DVR_GET_ATTENDEDBAGGAGE_SCHEDULE        3572    //???????﹞?????足??????﹞??㊣??????
#define    NET_DVR_SET_ATTENDEDBAGGAGE_SCHEDULE        3573    //?豕?????﹞?????足??????﹞??㊣??????
#define    NET_DVR_GET_REGIONCLIP_CAPABILITIES            3574    //???????辰????????
#define    NET_DVR_GET_REGION_CLIP                     3575    //???????辰????????
#define    NET_DVR_SET_REGION_CLIP                     3576    //?豕?????辰????????
#define    NET_DVR_GET_NETWORK_CAPABILITIES            3577    //????????????
#define    NET_DVR_GET_WIRELESS_DIAL                     3578    //????????????????
#define    NET_DVR_SET_WIRELESS_DIAL                     3579    //?豕??????????????
#define    NET_DVR_GET_WIRELESSDIAL_CAPABILITIES        3580    //????????????????????
#define    NET_DVR_GET_WIRELESSDIAL_SCHEDULE            3581    //????????????????
#define    NET_DVR_SET_WIRELESSDIAL_SCHEDULE            3582    //?豕??????????????
#define    NET_DVR_GET_WIRELESSDIAL_STATUS             3583    //????????℅???
#define    NET_DVR_GET_REGION_ENTRANCE_SCHEDULE_CAPABILITIES    3584    //???????????辰?足????﹞??㊣??????
#define    NET_DVR_GET_REGION_EXITING_SCHEDULE_CAPABILITIES    3585    //???????????辰?足????﹞??㊣??????
#define    NET_DVR_GET_LOITERING_SCHEDULE_CAPABILITIES    3586    //?????????足????﹞??㊣??????
#define    NET_DVR_GET_GROUP_SCHEDULE_CAPABILITIES    3587    //???????㊣?????足????﹞??㊣??????
#define    NET_DVR_GET_RAPIDMOVE_SCHEDULE_CAPABILITIES    3588    //?????足???????足????﹞??㊣??????
#define    NET_DVR_GET_PARKING_SCHEDULE_CAPABILITIES    3589    //?????????足????﹞??㊣??????
#define    NET_DVR_GET_UNATTENDEDBAGGAGE_SCHEDULE_CAPABILITIES    3590    //???????﹞?????足????﹞??㊣??????
#define    NET_DVR_GET_ATTENDEDBAGGAGE_SCHEDULE_CAPABILITIES    3591    //???????﹞?????足????﹞??㊣??????
#define    NET_DVR_GET_WIRELESSDIAL_SCHEDULE_CAPABILITIES    3592    //????????????????
#define    NET_DVR_WIRELESSDIAL_CONNECT    3593    //????????????????????

#define    NET_DVR_GET_LITESTORAGE                    3594    //?????芍????????
#define    NET_DVR_SET_LITESTORAGE                    3595    //?豕???芍????????
#define    NET_DVR_GET_LITESTORAGE_CAPABILITIES    3596    //?????芍????????

#define    NET_DVR_GET_VEHICLE_CAPABILITIES    3597    //?????????足??㊣那?“????
#define    NET_DVR_GET_VEHICLE_CALIBRATION     3598    //?????????足??㊣那?“

#define    NET_DVR_GET_SLAVECAMERA_CAPABILITIES    3599    //???????????迆IP????????????    
#define    NET_DVR_GET_SLAVECAMERA                    3600    //???????????迆IP????????
#define    NET_DVR_SET_SLAVECAMERA                    3601    //?豕?????????迆IP????????
#define    NET_DVR_GET_SLAVECAMERA_STATUS            3602    //???????????迆????℅???
#define    NET_DVR_GET_SLAVECAMERA_CALIB_CAPABILITIES    3603  //???????????迆????&&㊣那?“????    
#define    NET_DVR_GET_SLAVECAMERA_CALIB            3604    //???????????迆㊣那?“????
#define    NET_DVR_SET_SLAVECAMERA_CALIB            3605    //?豕?????????迆㊣那?“????
#define NET_DVR_GET_PHY_RATIO                    3606    //???????赤㊣???℅?㊣那????    
#define NET_DVR_SET_PHY_RATIO                    3607    //?豕?????赤㊣???℅?㊣那????
#define NET_DVR_GET_MASTERSLAVETRACKING_CAPABILITIES   3608  //?????‾???迆℅?????
#define    NET_DVR_SET_TRACKINGRATIO                3610    //?豕?????????迆?迆℅?㊣???
#define    NET_DVR_GET_TRACKING                    3611    //?????‾???迆℅??????角?迆?迆℅?????
#define    NET_DVR_SET_TRACKING                    3612    //?豕???‾???迆℅??????角?迆?迆℅?????
#define    NET_DVR_GET_TRACKING_CAPABILITIES        3613    //?????‾???迆℅??????角?迆?迆℅?????????

#define    NET_DVR_GET_SLAVECAMERA_CALIB_V50        3614    //???????????迆㊣那?“????V50
#define    NET_DVR_SET_SLAVECAMERA_CALIB_V50        3615    //?豕?????????迆㊣那?“????V50
#define    NET_DVR_SET_TRACKINGRATIO_MANUAL        3616    //?豕?????????迆?????迆℅?㊣???
#define    NET_DVR_GET_TRACKINGRATIO_MANUAL        3617    //???????????迆?????迆℅?㊣???
#define    NET_DVR_SET_TRACK_INITPOSTION            3618    //?豕?????????迆?????迆℅?????
#define    NET_DVR_GET_PTZ_CAPABILITIES            3619    //????ptz?辰?迆????????

#define    NET_DVR_GET_THERMOMETRY_BASICPARAM_CAPABILITIES    3620 //????????????????
#define    NET_DVR_GET_THERMOMETRY_BASICPARAM      3621    //????????????????
#define    NET_DVR_SET_THERMOMETRY_BASICPARAM        3622    //?豕??????????????
#define    NET_DVR_GET_THERMOMETRY_SCENE_CAPABILITIES    3623 //?????????∟????????????????
#define    NET_DVR_GET_THERMOMETRY_PRESETINFO      3624    //?????????∟????????????????
#define    NET_DVR_SET_THERMOMETRY_PRESETINFO        3625    //?豕???????∟????????????????
#define    NET_DVR_GET_THERMOMETRY_ALARMRULE_CAPABILITIES    3626//????????㊣“??﹞???????????
#define    NET_DVR_GET_THERMOMETRY_ALARMRULE       3627    //?????????∟????㊣“?????辰????????
#define    NET_DVR_SET_THERMOMETRY_ALARMRULE        3628    //?豕???????∟????㊣“?????辰????????
#define    NET_DVR_GET_REALTIME_THERMOMETRY        3629    //???㊣?????足??
#define    NET_DVR_GET_THERMOMETRY_DIFFCOMPARISON  3630    //?????????∟???????????辰????????
#define    NET_DVR_SET_THERMOMETRY_DIFFCOMPARISON    3631    //?豕???????∟???????????辰????????
#define    NET_DVR_GET_THERMOMETRY_TRIGGER            3632    //????????????????
#define    NET_DVR_SET_THERMOMETRY_TRIGGER            3633    //?豕??????????????

#define    NET_DVR_GET_THERMAL_CAPABILITIES        3634    //???????????“Thermal??????
#define    NET_DVR_GET_FIREDETECTION_CAPABILITIES    3635    //?????????足??????????
#define    NET_DVR_GET_FIREDETECTION               3636    //?????????足??????
#define    NET_DVR_SET_FIREDETECTION               3637    //?豕???????足??????
#define    NET_DVR_GET_FIREDETECTION_TRIGGER       3638    //?????????足??????????
#define    NET_DVR_SET_FIREDETECTION_TRIGGER        3639    //?豕???????足??????????

#define NET_DVR_GET_OIS_CAPABILITIES            3640    //???????∫﹞???????????????
#define NET_DVR_GET_OIS_CFG                     3641    //???????∫﹞???????
#define NET_DVR_SET_OIS_CFG                     3642    //?豕?????∫﹞???????
#define NET_DVR_GET_MACFILTER_CAPABILITIES      3643    //????MAC???﹞????????????
#define NET_DVR_GET_MACFILTER_CFG               3644    //????MAC???﹞????????
#define NET_DVR_SET_MACFILTER_CFG               3645    //?豕??MAC???﹞????????
#define NET_DVR_GET_EAGLEFOCUS_CALCFG_CAPABILITIES   3646    //????????㊣那?“????????
#define NET_DVR_GET_EAGLEFOCUSING_CALCFG        3647    //????????????㊣那?“????
#define NET_DVR_SET_EAGLEFOCUSING_CALCFG        3648    //?豕??????????㊣那?“????
#define NET_DVR_GET_EAGLEFOCUSING_CFG_CAPABILITIES   3649   //????????????????????
#define NET_DVR_GET_EAGLEFOCUSING_CTRL          3650    //????????????????
#define NET_DVR_SET_EAGLEFOCUSING_CTRL          3651    //?豕??????????????

#define    NET_DVR_GET_PXOFFLINE_CAPABILITIES      3652    //???????????㊣?????迆?????????? ????
#define    NET_DVR_SET_PXOFFLINE_CFG                3653    //?豕?????????㊣?????迆??????????????
#define    NET_DVR_GET_PXOFFLINE_CFG                3654    //???????????㊣?????迆??????????????
#define    NET_DVR_GET_PAPERCHARGEINFO_CAPABILITIES  3655  //???????????????????㊣??????﹞? ????
#define    NET_DVR_SET_PAPERCHARGEINFO                3656    //?豕?????????????????㊣??????﹞?
#define    NET_DVR_GET_PARKINGSAPCE_CAPABILITIES    3657    //????????????????????????????﹞? ????
#define    NET_DVR_SET_PARKINGSAPCE_INFO            3658    //?豕??????????????????????????﹞?
#define    NET_DVR_GET_PXMULTICTRL_CAPABILITIES    3659    //???????????㊣???????豕㊣??角???????????? ????
#define    NET_DVR_GET_CHARGEACCOUNT_CAPABILITIES    3661    //???????????㊣??????????????
#define    NET_DVR_SET_CHARGE_ACCOUNTINFO          3662    //?豕????﹞?????????
#define    NET_DVR_SET_PXMULTICTRL_CFG                3663    //?豕?????????㊣???????豕㊣??角????????????????
#define    NET_DVR_GET_PXMULTICTRL_CFG                3664    //???????????㊣???????豕㊣??角????????????????
#define    NET_DVR_GET_TME_CHARGERULE              3665    //???????????????????“??﹞????辰???辰
#define    NET_DVR_SET_TME_CHARGERULE                3666    //?豕?????????????????“??﹞????辰???辰
#define    NET_DVR_GET_TME_CHARGERULE_CAPABILITIES 3667    //???????????????? ???“??﹞?????????????
#define    NET_DVR_GET_ILLEGALCARDFILTERING_CAPABILITIES  3668    //???????????㊣??????????????
#define    NET_DVR_GET_ILLEGALCARDFILTERING_CFG    3669    //???????????㊣??????????
#define    NET_DVR_SET_ILLEGALCARDFILTERING_CFG    3670    //?豕?????????㊣??????????
#define    NET_DVR_GET_LEDDISPLAY_CAPABILITIES        3671    //????LED????????????????????????
#define    NET_DVR_SET_LEDDISPLAY_CFG              3672    //?豕??LED????????????
#define    NET_DVR_GET_LEDDISPLAY_CFG              3673    //????LED????????????
#define    NET_DVR_GET_VOICEBROADCAST_CAPABILITIES    3674    //??????????㊣“????????????????????
#define    NET_DVR_SET_VOICEBROADCAST_CFG          3675    //?豕????????㊣“????????
#define    NET_DVR_GET_PAPERPRINTFORMAT_CAPABILITIES    3676//???????㊣?辰??????????????
#define    NET_DVR_GET_PAPERPRINTFORMAT_CFG        3677    //???????㊣?辰??????????????
#define    NET_DVR_SET_PAPERPRINTFORMAT_CFG        3678    //?豕?????㊣?辰??????????????
#define    NET_DVR_GET_LOCkGATE_CAPABILITIES       3679    //????????????????????
#define    NET_DVR_GET_LOCKGATE_CFG                3680    //????????????????????
#define    NET_DVR_SET_LOCKGATE_CFG                3681    //?豕??????????????????
#define NET_DVR_GET_PARKING_DATASTATE            3682    //????????????℅???
#define NET_DVR_SET_PARKING_DATASTATE           3683    //?豕??????????℅???
#define    NET_DVR_GET_TME_CAPABILITIES            3684    //?????????????????豕㊣? ????

#define    NET_DVR_GET_TMEVOICE_CAPABILITIES       3686    //????????????????????
#define    NET_DVR_SET_TMEVOICE_CFG                3687    //?豕??????????????
#define    NET_DVR_GET_TMEVOICE_CFG                3688    //????????????????
#define    NET_DVR_DEL_TMEVOICE_CFG                3689    //????????????????
#define    NET_DVR_GET_POSITION                    3698    // ????﹞???????????????
#define    NET_DVR_SET_POSITION                    3699    // ?豕??﹞???????????????
#define    NET_DVR_GET_CENTRALIZEDCTRL_CAPABILITIES    3700//????????????????
#define    NET_DVR_GET_CENTRALIZEDCTRL                3701//????????????????????
#define    NET_DVR_SET_CENTRALIZEDCTRL              3702//?豕??????????????????
#define    NET_DVR_GET_COMPASS_CAPABILITIES        3703//??????℅?????????
#define    NET_DVR_GET_VANDALPROOFALARM              3704//????﹞?????㊣“??????????
#define    NET_DVR_SET_VANDALPROOFALARM            3705//?豕??﹞?????㊣“??????????
#define    NET_DVR_COMPASS_CALIBRATE_CTRL            3706//??℅?????????????????
#define    NET_DVR_COMPASS_NORTH_CTRL                3707//??℅????????辰??㊣㊣????????
#define    NET_DVR_GET_AZIMUTHINFO                    3708//????﹞???????????????


#define    NET_DVR_GET_SATELLITETIME                3709//?????????“??????????
#define    NET_DVR_SET_SATELLITETIME                3710//?豕???????“??????????
#define    NET_DVR_GET_GISINFO                     3711//?????㊣?∼?辰?迆??GIS????????
#define    NET_DVR_GET_STREAMING_CAPABILITIES        3712//?????????‾??????
#define    NET_DVR_GET_REFRESHFRAME_CAPABILITIES    3713//????????????????
#define    NET_DVR_STREAMING_REFRESH_FRAME            3714//???‾?∟??????????????
#define    NET_DVR_FACECAPTURE_STATISTICS            3715//?∟???????㊣????
#define    NET_DVR_GET_WIRELESSSERVER_CAPABILITIES    3716    //???????????????????谷??????
#define    NET_DVR_GET_WIRELESSSERVER                3717    //???????????????????谷
#define    NET_DVR_SET_WIRELESSSERVER                3718    //?豕?????????????????谷
#define    NET_DVR_GET_CONNECT_LIST_CAPABILITIES    3719    //?????????豕㊣???㊣赤??????????
#define    NET_DVR_GET_THSCREEN_CAPABILITIES        3720 //?????????????????谷??????
#define    NET_DVR_GET_THSCREEN                    3721 //?????????????????谷
#define    NET_DVR_GET_EXTERNALDEVICE_CAPABILITIES    3722//???????豕???????谷??????
#define    NET_DVR_GET_EXTERNALDEVICE              3723//???????豕???????谷
#define    NET_DVR_SET_EXTERNALDEVICE                3724//?豕?????豕???????谷
#define    NET_DVR_GET_LEDDISPLAYINFO_CAPABILITIES     3725   //????LED??????????????
#define    NET_DVR_SET_LEDDISPLAYINFO                 3726   //?豕??LED????????
#define    NET_DVR_GET_SUPPLEMENTLIGHT_CAPABILITIES 3727   //?????????????????????谷?????? (?辰?迆?∫?????赤?????????????????豕?????豕㊣???????)
#define    NET_DVR_GET_SUPPLEMENTLIGHT                 3728    //?????????????????????谷
#define    NET_DVR_SET_SUPPLEMENTLIGHT                 3729    //?豕???????????????????谷
#define    NET_DVR_SET_THSCREEN                     3730 //?豕???????????????谷
#define    NET_DVR_GET_LOWPOWER_CAPABILITIES        3731   //?????????????????谷??????
#define    NET_DVR_GET_LOWPOWER                     3732    //?????????????????谷
#define    NET_DVR_SET_LOWPOWER                     3733    //?豕???????????????谷
#define    NET_DVR_GET_ZOOMLINKAGE_CAPABILITIES     3734   //????㊣?㊣????????????谷??????
#define    NET_DVR_GET_ZOOMLINKAGE                     3735    //????㊣?㊣????????????谷
#define    NET_DVR_SET_ZOOMLINKAGE                     3736    //?豕??㊣?㊣????????????谷
#define    NET_DVR_THSCREEN_TIMING                     3737    //??????
#define NET_DVR_GET_OSD_BATTERY_POWER_CFG        3741        //????OSD????????????????
#define NET_DVR_SET_OSD_BATTERY_POWER_CFG        3742        //?豕??OSD????????????????
#define    NET_DVR_GET_OSD_BATTERY_POWER_CFG_CAPABILITIES    3743//OSD??????????????????????
#define    NET_DVR_GET_VANDALPROOFALARM_TRIGGER    3744    //????﹞?????㊣“??????????
#define    NET_DVR_SET_VANDALPROOFALARM_TRIGGER    3745    //?豕??﹞?????㊣“??????????
#define    NET_DVR_GET_PANORAMAIMAGE_CAPABILITIES    3746    //???????∼??????????
#define    NET_DVR_GET_PANORAMAIMAGE                3747    //???????∼?????????????谷
#define    NET_DVR_SET_PANORAMAIMAGE                3748    //?豕?????∼?????????????谷
#define    NET_DVR_GET_STREAMENCRYPTION            3749    //???????‾????????
#define    NET_DVR_SET_STREAMENCRYPTION            3750    //?豕?????‾????????
#define    NET_DVR_GET_STREAMENCRYPTION_CAPABILITIES 3751  //???????‾????????
#define    NET_DVR_GET_REVISE_GPS_CAPABILITIES     3752    //??????℅?GPS??????????
#define    NET_DVR_GET_REVISE_GPS                  3753    //??????℅?GPS??????????
#define    NET_DVR_SET_REVISE_GPS                  3754    //?豕????℅?GPS??????????
#define NET_DVR_GET_PDC_RECOMMEND                3755    //???????‾????㊣赤????????
#define NET_DVR_REMOVE_FLASHSTORAGE                3756    //???‾??????????℅‾
#define    NET_DVR_GET_COUNTING_CAPABILITIES        3757    //???????‾??????????
#define    NET_DVR_SET_SENSOR_ADJUSTMENT            3758    //?豕??Sensor ?‾???????????谷
#define    NET_DVR_GET_SENSOR_ADJUSTMENT_CAPABILITIES        3759    //????Sensor ?‾???????????谷??????
#define    NET_DVR_GET_WIRELESSSERVER_FULLVERSION_CFG         3760    //????wifi????????????(?那??∼?)
#define    NET_DVR_SET_WIRELESSSERVER_FULLVERSION_CFG         3761    //?豕??wifi????????????(?那??∼?)
#define    NET_DVR_GET_ONLINEUSER_INFO                3762    //?∟???????????∫????????
#define    NET_DVR_GET_SENSOR_ADJUSTMENT_INFO        3763    //???????“sensor?‾??????
#define NET_DVR_SENSOR_RESET_CTRL               3764    //Sensor ?‾??????

#define    NET_DVR_GET_POSTRADAR_CAPABILITIES        3765    //?????℅??????????????
#define    NET_DVR_GET_POSTRADARSPEED_CFG          3766    //?????℅??????????
#define    NET_DVR_SET_POSTRADARSPEED_CFG          3767    //?豕???℅??????????
#define    NET_DVR_GET_POSTRADARSPEED_RECOM_CFG    3768    //?????℅????????????
#define    NET_DVR_GET_POSTRADARPARAM_CFG          3769    //?????℅??????????
#define    NET_DVR_SET_POSTRADARPARAM_CFG          3770    //?豕???℅??????????
#define    NET_DVR_GET_POSTRADARPARAM_RECOM_CFG    3771    //?????℅????????????

#define NET_DVR_GET_ENCRYPT_DEVICE_INFO        3772   //?????????豕㊣?????
#define NET_DVR_GET_ANR_ARMING_HOST            3773  //???????????????‾?迆????
#define NET_DVR_GET_FIRMWARE_VERSION    3776    //GET firmware version
/********************************IPC?迄??FF????****************************/
#define    NET_DVR_GET_FTP_CAPABILITIES            3782    //????ftp????
#define    NET_DVR_GET_FTPUPLOAD_CFG                3783    //????ftp????????????????
#define    NET_DVR_SET_FTPUPLOAD_CFG                3784    //?豕??ftp????????????????
#define NET_DVR_GET_VEHICLE_INFORMATION             3785 //????????????    
#define    NET_DVR_GET_DDNS_COUNTRY_ABILITY        3800//?????豕㊣??∫????DDNS?迆????????㊣赤
#define NET_DVR_GET_DEVICECFG_V50    3801    //?????豕㊣?????
#define NET_DVR_SET_DEVICECFG_V50    3802    //?豕???豕㊣?????
#define  NET_DVR_SET_VEHICLE_RECOG_TASK_V50    3851  //??????????㊣??????芍??V50????
#define NET_DVR_GET_SMARTCALIBRATION_CAPABILITIES    3900// Smart????㊣那?“????????????????
#define NET_DVR_GET_TEMPERATURE_TRIGGER              3903    //?????????????????? 
#define NET_DVR_SET_TEMPERATURE_TRIGGER              3904    //?豕???????????????? 

#define    NET_DVR_GET_SMARTCALIBRATION_CFG             3910 //????Smart????㊣那?“????????????
#define    NET_DVR_SET_SMARTCALIBRATION_CFG             3911  //?豕??Smart????㊣那?“????????????
#define NET_DVR_POST_SETUP_CALIB                     3912  //???豕㊣那?“
#define NET_DVR_SET_POS_INFO_OVERLAY                 3913//?豕??Pos???????‾????????
#define NET_DVR_GET_POS_INFO_OVERLAY                 3914//????Pos???????‾????????
#define NET_DVR_GET_CAMERA_WORK_MODE                 3915  //?豕???角?迆?∟℅‾????????
#define NET_DVR_SET_CAMERA_WORK_MODE                 3916  //?????角?迆?∟℅‾????????
#define NET_DVR_GET_RESOLUTION_SWITCH_CAPABILITIES   3917  //????﹞?㊣???????????????
#define NET_DVR_GET_RESOLUTION_SWITCH                3918    //????﹞?㊣???????????????
#define NET_DVR_SET_RESOLUTION_SWITCH                3919     //?豕??﹞?㊣???????????????
#define NET_DVR_GET_CONFIRM_MECHANISM_CAPABILITIES   3920    //㊣“???????﹞???迆??????????
#define NET_DVR_CONFIRM_MECHANISM_CTRL               3921    //㊣“???????﹞???迆??????
#define NET_DVR_GET_VEHICLLE_RESULT_CAPABILITIES     3951   //?????????????????芍??????
#define NET_DVR_GET_CALIB_CAPABILITIES               3952//???????豕㊣那?“????
#define NET_DVR_GET_POSINFO_OVERLAY_CAPABILITIES     3953//????????Pos????????
#define NET_SDK_FINDMEDICALFILE      3954    //???∼?????????????谷??????????
#define NET_SDK_FINDMEDICALPICTURE   3955    //???∼?????????????谷??????????
#define NET_DVR_SET_POSINFO_OVERLAY                  3960//?豕??Pos????
#define NET_DVR_GET_POSINFO_OVERLAY                  3961//????Pos????
#define NET_DVR_GET_FACELIB_TRIGGER                  3962   //????????㊣???????????????
#define NET_DVR_SET_FACELIB_TRIGGER                  3963   //?豕??????㊣???????????????
#define NET_DVR_GET_FACECONTRAST_TRIGGER             3965//????????㊣???????????
#define NET_DVR_SET_FACECONTRAST_TRIGGER             3966//?豕??????㊣???????????
#define NET_DVR_GET_FACECONTRAST_SCHEDULE_CAPABILITIES 3967 //????????㊣?????﹞??㊣??????
#define NET_DVR_GET_FACECONTRAST_SCHEDULE            3968//????????㊣?????﹞??㊣??????
#define NET_DVR_SET_FACECONTRAST_SCHEDULE            3969//?豕??????㊣?????﹞??㊣??????
#define NET_DVR_GET_FACELIB_SCHEDULE_CAPABILITIES    3970 //????????㊣?????????﹞??㊣??????
#define NET_DVR_GET_VCA_VERSION_LIST                 3973//??????﹞“??∼?㊣?
#define NET_DVR_GET_SETUP_CALIB                      3974//???????豕㊣那?“
#define NET_DVR_GET_PANORAMA_LINKAGE                 3975//????????℅???????????????
#define NET_DVR_SET_PANORAMA_LINKAGE                 3976//?豕??????℅???????????????
#define NET_DVR_GET_FACELIB_SCHEDULE                 3977 //????????㊣?????????﹞??㊣??????
#define NET_DVR_SET_FACELIB_SCHEDULE                 3978 //?豕??????㊣?????????﹞??㊣??????
#define NET_DVR_GET_SOFTWARE_SERVICE_CAPABILITIES    3980//?????赤??﹞???????
#define NET_DVR_GET_SOFTWARE_SERVICE                 3981//?????赤??﹞???????
#define NET_DVR_SET_SOFTWARE_SERVICE                 3982//?豕???赤??﹞???????
#define NET_DVR_GET_PREVIEW_MODE_CAPABILITIES        3983//?????∟??????????????
#define NET_DVR_SET_EAGLE_FOCUS_GOTOSCENE            3984//?????????豕???????迆℅??辰???“?????∼ID
#define NET_DVR_EAGLE_FOCUS_SCENE_DEL                3985//????????????㊣那?“?????∼
#define NET_DVR_GET_SAFETY_HELMET_TRIGGER            3986   //????∼????㊣?足??????????
#define NET_DVR_SET_SAFETY_HELMET_TRIGGER            3987  //?豕??∼????㊣?足??????????
#define NET_DVR_GET_SAFETY_HELMET_SCHEDULE_CAPABILITIES 3988 //????∼????㊣?足????﹞??㊣??????
#define NET_DVR_GET_SAFETY_HELMET_SCHEDULE           3989//????∼????㊣?足????﹞??㊣??????
#define NET_DVR_SET_SAFETY_HELMET_SCHEDULE           3990//?豕??∼????㊣?足????﹞??㊣??????

#define NET_DVR_GET_SIGN_ABNORMAL_TRIGGER            4150   //???????‾?足??????????
#define NET_DVR_SET_SIGN_ABNORMAL_TRIGGER            4151   //?豕?????‾?足??????????

#define NET_DVR_ONE_KEY_CONFIG_SAN_V50               4152  //???邦????SAN(V50)
#define NET_DVR_GET_HDCFG_V50                        4153  //????????????????V50
#define NET_DVR_SET_HDCFG_V50                        4154  //?豕??????????????V50
#define NET_DVR_GET_HDVOLUME_CFG                     4155  //?????????赤????
#define NET_DVR_SET_HDVOLUME_CFG                     4156  //?豕???????赤????
#define NET_DVR_GET_POWER_SUPPLY_CABINET_TRIGGER     4157  //?????迆???????足????????????
#define NET_DVR_SET_POWER_SUPPLY_CABINET_TRIGGER     4158  //?豕???迆???????足????????????
#define NET_DVR_GET_SENSOR_TRIGGER                   4159  //?????????‾?足????????????
#define NET_DVR_SET_SENSOR_TRIGGER                   4160  //?豕???????‾?足????????????
#define	NET_DVR_GET_FACESNAP_TRIGGER                 4161  //????????℅???????????
#define	NET_DVR_SET_FACESNAP_TRIGGER	             4162  //?豕??????℅???????????
#define NET_DVR_GET_FACESNAP_SCHEDULE_CAPABILITIES   4163  //????????℅?????﹞??㊣??????
#define NET_DVR_GET_FACESNAP_SCHEDULE                4164  //????????℅?????﹞??㊣??????
#define NET_DVR_SET_FACESNAP_SCHEDULE                4165  //?豕??????℅?????﹞??㊣??????

#define NET_DVR_SET_SCREEN_SWITCH                    4171  //????????????
#define NET_DVR_GET_BV_CALIB_PIC                     4172  //?????豕㊣?℅?????????????????
#define NET_DVR_GET_BV_CALIB_RESULT                  4173  //????????????㊣那?“?芍??
#define NET_DVR_GET_BV_HCORRECTION                   4174  //????????????????????
#define NET_DVR_DEL_BV_CALIB_PIC                     4175  //?????迄㊣?????
#define NET_DVR_GET_TV_SCREEN_CFG                    4176  //?????????????????㊣??????
#define NET_DVR_SET_TV_SCREEN_CFG                    4177  //?豕???????????????㊣??????
#define NET_DVR_ADJUST_BV_CALIB                      4178 //????㊣那?“???‾
#define NET_DVR_GET_HUMAN_CALIB                      4179 //????????℅?㊣那㊣那?“????
#define NET_DVR_SET_HUMAN_CALIB                      4180 //?豕??????℅?㊣那㊣那?“????
#define NET_DVR_GET_USERCFG_V51                      4181    //???????∫????
#define NET_DVR_SET_USERCFG_V51                      4182    //?豕?????∫????
#define NET_DVR_GET_SOFTIO_TRIGGER                   4183   //????SoftIO????????
#define NET_DVR_SET_SOFTIO_TRIGGER                   4184   //?豕??SoftIO????????
#define NET_DVR_GET_SOFTIO_SCHEDULE_CAPABILITIES     4185 //????SoftIO??﹞??㊣??????
#define NET_DVR_GET_SOFTIO_SCHEDULE                  4186 //????SoftIO??﹞??㊣??????
#define NET_DVR_SET_SOFTIO_SCHEDULE                  4187 //?豕??SoftIO??﹞??㊣??????
#define NET_DVR_GET_HFPD_TRIGGER                     4188 //???????????㊣?足??????????
#define NET_DVR_SET_HFPD_TRIGGER                     4189 //?豕?????????㊣?足??????????
#define NET_DVR_GET_HFPD_SCHEDULE_CAPABILITIES       4190 //???????????㊣?足????﹞??㊣??????
#define NET_DVR_GET_HFPD_SCHEDULE                    4191 //???????????㊣?足????﹞??㊣??????
#define NET_DVR_SET_HFPD_SCHEDULE                    4192 //?豕?????????㊣?足????﹞??㊣??????
#define	NET_DVR_GET_ALARM_INFO                       4193	//????㊣“??????????
#define NET_DVR_GET_USERCFG_V52                      4194    //???????∫????
#define NET_DVR_SET_USERCFG_V52                      4195    //?豕?????∫????

/********************************NVR_?車???迆?﹞??****************************/
#define NET_DVR_GET_MUTEX_FUNCTION              4353  //????????????????

#define NET_DVR_GET_SINGLE_CHANNELINFO          4360  //?????????“??????????
#define NET_DVR_GET_CHANNELINFO                 4361  //?????“??????????
#define NET_DVR_CHECK_LOGIN_PASSWORDCFG                 4362  //???∫???????????谷
#define NET_DVR_GET_SINGLE_SECURITY_QUESTION_CFG        4363    //?????????豕㊣?∼???????
#define NET_DVR_SET_SINGLE_SECURITY_QUESTION_CFG        4364    //?豕???????豕㊣?∼???????
#define NET_DVR_GET_SECURITY_QUESTION_CFG       4365    //?????豕㊣?∼???????
#define NET_DVR_SET_SECURITY_QUESTION_CFG       4366    //?豕???豕㊣?∼???????
#define NET_DVR_GET_ONLINEUSERLIST_SC           4367  //???????????????∫?????“????????

#define NET_DVR_GET_BLACKLIST_FACECONTRAST_TRIGGER   4368   //??????????????㊣???????????
#define NET_DVR_SET_BLACKLIST_FACECONTRAST_TRIGGER   4369   //?豕????????????㊣???????????
#define NET_DVR_GET_WHITELIST_FACECONTRAST_TRIGGER   4370   //????∼℅????????㊣???????????
#define NET_DVR_SET_WHITELIST_FACECONTRAST_TRIGGER   4371   //?豕??∼℅????????㊣???????????
#define NET_DVR_GET_BLACKLIST_FACECONTRAST_SCHEDULE_CAPABILITIES 4372 //??????????????㊣?????﹞??㊣??????
#define NET_DVR_GET_BLACKLIST_FACECONTRAST_SCHEDULE  4373   //??????????????㊣?????﹞??㊣??????
#define NET_DVR_SET_BLACKLIST_FACECONTRAST_SCHEDULE  4374   //?豕????????????㊣?????﹞??㊣??????
#define NET_DVR_GET_WHITELIST_FACECONTRAST_SCHEDULE_CAPABILITIES 4375 //????∼℅????????㊣?????﹞??㊣??????
#define NET_DVR_GET_WHITELIST_FACECONTRAST_SCHEDULE  4376 //????∼℅????????㊣?????﹞??㊣??????
#define NET_DVR_SET_WHITELIST_FACECONTRAST_SCHEDULE  4377 //?豕??∼℅????????㊣?????﹞??㊣??????

#define NET_DVR_GET_HUMAN_RECOGNITION_SCHEDULE_CAPABILITIES 4378 //??????????㊣???﹞??㊣??????
#define NET_DVR_GET_HUMAN_RECOGNITION_SCHEDULE 4379 //??????????㊣???﹞??㊣??????
#define NET_DVR_SET_HUMAN_RECOGNITION_SCHEDULE 4380 //?豕????????㊣???﹞??㊣??????
#define NET_DVR_GET_HUMAN_RECOGNITION_TRIGGER               4381 //??????????㊣?????????
#define NET_DVR_SET_HUMAN_RECOGNITION_TRIGGER               4382 //?豕????????㊣?????????
#define NET_DVR_GET_GBT28181_AUDIO_OUTPUT_CFG               4383 //????GBT28181???谷?????豕㊣???????????????
#define NET_DVR_SET_GBT28181_AUDIO_OUTPUT_CFG               4384 //?豕??GBT28181???谷?????豕㊣???????????????

#define NET_DVR_GET_STUDENTS_STOODUP_TRIGGER         4386   //?????∫?迆?????足??????????
#define NET_DVR_SET_STUDENTS_STOODUP_TRIGGER         4387   //?豕???∫?迆?????足??????????
#define NET_DVR_GET_FRAMES_PEOPLE_COUNTING_SCHEDULE_CAPABILITIES    4388 //???????辰??????????﹞??㊣??????
#define NET_DVR_GET_FRAMES_PEOPLE_COUNTING_SCHEDULE  4389    //???????辰??????????﹞??㊣??????
#define NET_DVR_SET_FRAMES_PEOPLE_COUNTING_SCHEDULE  4390    //?豕?????辰??????????﹞??㊣??????
#define NET_DVR_GET_FRAMES_PEOPLE_COUNTING_TRIGGER   4391   //???????辰????????????????
#define NET_DVR_SET_FRAMES_PEOPLE_COUNTING_TRIGGER   4392   //?豕?????辰????????????????

#define NET_DVR_GET_PERSONDENSITY_TRIGGER   4393   //???????㊣?????足????????????
#define NET_DVR_SET_PERSONDENSITY_TRIGGER   4394   //?豕?????㊣?????足????????????
#define NET_DVR_GET_PERSONDENSITY_SCHEDULE_CAPABILITIES 4395 //???????㊣?????足??????﹞??㊣??????
#define NET_DVR_GET_PERSONDENSITY_SCHEDULE 4396 //???????㊣?????足??????﹞??㊣??????
#define NET_DVR_SET_PERSONDENSITY_SCHEDULE 4397 //?豕?????㊣?????足??????﹞??㊣??????

#define NET_DVR_GET_STUDENTS_STOODUP_SCHEDULE_CAPABILITIES  4398 //?????∫?迆?????足????﹞??㊣??????
#define NET_DVR_GET_STUDENTS_STOODUP_SCHEDULE        4399    //?????∫?迆?????足????﹞??㊣??????
#define NET_DVR_SET_STUDENTS_STOODUP_SCHEDULE        4400    //?豕???∫?迆?????足????﹞??㊣??????

#define NET_DVR_SET_FACE_THERMOMETRY_TRIGGER         4401 //?豕??????????????????
#define NET_DVR_GET_FACE_THERMOMETRY_SCHEDULE_CAPABILITIES 4402 //??????????????﹞??㊣??????
#define NET_DVR_GET_FACE_THERMOMETRY_SCHEDULE        4403 //??????????????﹞??㊣??????
#define NET_DVR_SET_FACE_THERMOMETRY_SCHEDULE        4404 //?豕????????????﹞??㊣??????
#define NET_DVR_GET_FACE_THERMOMETRY_TRIGGER         4405 //????????????????????
#define	NET_DVR_GET_PERSONQUEUE_TRIGGER   4406   //???????㊣?????足????????????
#define	NET_DVR_SET_PERSONQUEUE_TRIGGER	  4407   //?豕?????㊣?????足????????????
#define	NET_DVR_GET_PERSONQUEUE_SCHEDULE_CAPABILITIES	4408 //???????㊣?????足??????﹞??㊣??????
#define	NET_DVR_GET_PERSONQUEUE_SCHEDULE	4409	//???????㊣?????足??????﹞??㊣??????
#define	NET_DVR_SET_PERSONQUEUE_SCHEDULE	4410	//?豕?????㊣?????足??????﹞??㊣??????


/********************************??????????㊣?****************************/
#define NET_DVR_GET_FACESNAPCFG                 5001  //????????℅???????
#define NET_DVR_SET_FACESNAPCFG                 5002  //?豕??????℅???????
#define NET_DVR_GET_DEVACCESS_CFG               5005  //?????????豕㊣?????
#define NET_DVR_SET_DEVACCESS_CFG               5006  //?豕???????豕㊣?????
#define NET_DVR_GET_SAVE_PATH_CFG               5007  //????????????????
#define NET_DVR_SET_SAVE_PATH_CFG               5008  //?豕??????????????
#define NET_VCA_GET_RULECFG_V41                    5011  //????????﹞???????(????)
#define NET_VCA_SET_RULECFG_V41                    5012  //?豕??????﹞???????(????)
#define NET_DVR_GET_AID_RULECFG_V41             5013  //???????“???????辰????
#define NET_DVR_SET_AID_RULECFG_V41             5014  //?豕?????“???????辰????
#define NET_DVR_GET_TPS_RULECFG_V41             5015  //???????“???????辰????(????)
#define NET_DVR_SET_TPS_RULECFG_V41             5016  //?豕?????“???????辰????(????)
#define NET_VCA_GET_FACEDETECT_RULECFG_V41      5017  //????ATM?????足?????辰(????) 
#define NET_VCA_SET_FACEDETECT_RULECFG_V41      5018  //?豕??ATM?????足?????辰(????)
#define NET_DVR_GET_PDC_RULECFG_V41             5019  //?豕?????‾?????????辰(????)
#define NET_DVR_SET_PDC_RULECFG_V41             5020  //???????‾?????????辰(????)
#define NET_DVR_GET_TRIAL_VERSION_CFG           5021  //????????∼?????
#define NET_DVR_GET_VCA_CTRLINFO_CFG            5022  //?迆??????????????????
#define NET_DVR_SET_VCA_CTRLINFO_CFG            5023  //?迆???豕??????????????
#define NET_DVR_SYN_CHANNEL_NAME                5024  //?????“????
#define NET_DVR_GET_RESET_COUNTER               5025  //?????????????????????“???‾???????“??????
#define NET_DVR_SET_RESET_COUNTER               5026  //?豕???????????????????“???‾???????“??????
#define NET_DVR_GET_OBJECT_COLOR                5027  //????????????????
#define NET_DVR_SET_OBJECT_COLOR                5028  //?豕??????????????
#define NET_DVR_GET_AUX_AREA                    5029  //?????“?迆???辰
#define NET_DVR_SET_AUX_AREA                    5030  //?豕???“?迆???辰
#define NET_DVR_GET_CHAN_WORKMODE               5031  //?????“???∟℅‾????
#define NET_DVR_SET_CHAN_WORKMODE               5032  //?豕???“???∟℅‾????
#define NET_DVR_GET_SLAVE_CHANNEL               5033  //???????“??????
#define NET_DVR_SET_SLAVE_CHANNEL               5034  //?豕?????“??????
#define NET_DVR_GET_VQD_EVENT_RULE              5035  //???????????????????????辰
#define NET_DVR_SET_VQD_EVENT_RULE              5036  //?豕?????????????????????辰
#define NET_DVR_GET_BASELINE_SCENE              5037  //?????迄℅????∼????
#define NET_DVR_SET_BASELINE_SCENE              5038  //?豕???迄℅????∼????
#define NET_DVR_CONTROL_BASELINE_SCENE          5039  //?迄℅????∼??℅‾
#define NET_DVR_SET_VCA_DETION_CFG                5040  //?豕??????????????????
#define NET_DVR_GET_VCA_DETION_CFG                5041  //????????????????????
#define NET_DVR_GET_STREAM_ATTACHINFO_CFG       5042  //???????‾????????????
#define NET_DVR_SET_STREAM_ATTACHINFO_CFG       5043  //?豕?????‾????????????

#define NET_DVR_GET_BV_CALIB_TYPE               5044  //????????㊣那?“?角??
#define NET_DVR_CONTROL_BV_SAMPLE_CALIB         5045  //?????迄㊣?㊣那?“
#define NET_DVR_GET_BV_SAMPLE_CALIB_CFG         5046  //????????㊣那?“????
#define NET_DVR_GET_RULECFG_V42                    5049  //????????﹞???????(?∫??16?????辰????)
#define NET_DVR_SET_RULECFG_V42                    5050  //?豕??????﹞???????(?∫??16?????辰????)
#define NET_DVR_SET_VCA_DETION_CFG_V40            5051  //?豕??????????????????
#define NET_DVR_GET_VCA_DETION_CFG_V40          5052  //????????????????????
#define NET_DVR_SET_FLASH_CFG                   5110  //??????????Flash ????????
/********************************??????????㊣? end****************************/

//2014-12-03  
#define    NET_DVR_GET_T1TEST_CFG   5053     //?迆???????????????“??????
#define    NET_DVR_SET_T1TEST_CFG   5054     ////?迆???????????????“?豕????

/********************************ITS****************************/
#define NET_ITS_GET_OVERLAP_CFG_V50                5055  //????℅?﹞?????????????????
#define NET_ITS_SET_OVERLAP_CFG_V50                5056  //?豕??℅?﹞?????????????????

#define NET_DVR_GET_PARKLAMP_STATE                5057  //????????????????℅???????
#define NET_DVR_GET_CLOUDSTORAGE_CFG            5058  //??????????????????
#define NET_DVR_SET_CLOUDSTORAGE_CFG            5059  //?豕????????????????

#define NET_ITS_GET_BASE_INFO                    5060  //?????????迄㊣?????
#define NET_DVR_GET_SENSOR_INFO                 5061  //?????‾?????谷??
#define    NET_DVR_SET_SENSOR_SWITCH                5062  //?????‾????????
#define NET_ITS_GET_IMGMERGE_CFG                5063  //????????????????????
#define NET_ITS_SET_IMGMERGE_CFG                5064  //?豕??????????????????
#define NET_ITS_GET_UPLOAD_CFG                    5065  //????????????????
#define NET_ITS_SET_UPLOAD_CFG                    5066  //?豕??????????????
#define    NET_DVR_GET_SENSOR_PORT_CAPABILITIES    5067  //?????????‾????
#define NET_ITS_GET_WORKSTATE                    5069  //?????????∟℅‾℅???
#define NET_ITS_GET_IPC_CHAN_CFG                5070  //?????“??IPC????
#define NET_ITS_SET_IPC_CHAN_CFG                5071  //?豕???“??IPC????
#define NET_ITS_GET_OVERLAP_CFG                    5072  //????℅?﹞?????????????
#define NET_ITS_SET_OVERLAP_CFG                    5073  //?豕??℅?﹞?????????????
#define NET_DVR_GET_TRIGGEREX_CFG               5074  //????ITC????????
#define NET_DVR_SET_TRIGGEREX_CFG               5075  //?豕??ITC????????
#define NET_ITS_GET_ROAD_INFO                    5076  //?????﹞??????

#define NET_ITS_REMOTE_DEVICE_CONTROL            5077//?豕???????豕㊣?????
#define NET_ITS_GET_GATEIPC_CHAN_CFG            5078//??????????????
#define NET_ITS_SET_GATEIPC_CHAN_CFG            5079//?豕????????????
#define NET_ITS_TRANSCHAN_START                    5080//????????﹞????‾?“??????
#define NET_ITS_GET_ECTWORKSTATE                5081//???????????????∟℅‾℅???
#define NET_ITS_GET_ECT_CHAN_INFO                5082//???????????????“??℅???
#define NET_DVR_GET_HEATMAP_RESULT              5083//???????????谷??
#define NET_DVR_SET_ITS_EXDEVCFG                5084 //?豕??ITS?????豕㊣?????
#define NET_DVR_GET_ITS_EXDEVCFG                5085 //????ITS?????豕㊣?????
#define NET_DVR_GET_ITS_EXDEVSTATUS                5086 //????ITS?迄???????豕㊣?????
#define NET_DVR_SET_ITS_ENDEVCMD                5087 //?豕??ITS???????????????邦??
#define NET_DVR_SET_ENISSUED_DATADEL            5088 //?豕??ITS??????????????????
#define NET_DVR_GET_PDC_RESULT                  5089//???‾???????谷?? 2014-03-21
#define NET_ITS_GET_LAMP_CTRLCFG                5090  //????????????????
#define NET_ITS_SET_LAMP_CTRLCFG                5091  //?豕??????????????
#define NET_ITS_GET_PARKSPACE_ATTRIBUTE_CFG     5092  //????????????????
#define NET_ITS_SET_PARKSPACE_ATTRIBUTE_CFG     5093  //?豕??????????????
#define NET_ITS_SET_LAMP_EXTERNAL_CFG            5095  //?豕??????????????
#define NET_ITS_SET_COMPEL_CAPTURE                5096  //?豕??????????℅???
#define NET_DVR_SET_TIMESIGN_CFG                5097  //?豕?????????㊣℅??“??㊣那??
#define NET_DVR_GET_TIMESIGN_CFG                5098  //???????????㊣℅??“??㊣那??
#define NET_DVR_GET_SIGNALLAMP_STATUS           5099  //???????足??
/********************************ITS end****************************/

#define NET_DVR_GET_MONITOR_PLAN_VQD            5100  //?∟????????????﹞????‾????
#define NET_DVR_GET_MONITORID_VQD               5101  //?∟?????????????????????角????????
#define NET_DVR_SET_MONITOR_INFO                5102  //?迆???豕???????????角???????? 
#define NET_DVR_DEL_MONITOR_PLAN_VQD            5103  //????????
#define NET_DVR_GET_MONITOR_VQD_STATUS          5104  //???“?谷??????﹞????‾??℅???
#define NET_DVR_GET_RECORD_INFO                 5105  //????℅????????谷??
#define NET_DVR_GET_MONITOR_VQDCFG              5106  //????﹞????‾???角????????
#define NET_DVR_SET_MONITOR_VQDCFG              5107  //?豕??﹞????‾???角????????
#define NET_DVR_SET_MONITOR_PLAN_VQDCFG         5108  //?豕?????赤????(??????????)

#define NET_DVR_SCENE_CHANGE_UPDATE                5109   //???∼㊣??邦?????邦??

#define NET_DVR_GET_CALIBRATE_POINT             5153  //?谷????℅?㊣那℅????“???辰?????豕㊣? ?????????邦???? ?迄???迆??????????﹞??????????芍???迄????/*************************?????角???∼********************************/
#define NET_DVR_GET_SCENE_CFG                   5201  //???????∼????
#define NET_DVR_SET_SCENE_CFG                   5202  //?豕?????∼????
#define NET_DVR_GET_SCENE_REFERENCE_REGION      5203  //???????????辰
#define NET_DVR_SET_SCENE_REFERENCE_REGION      5204  //?豕?????????辰
#define NET_DVR_GET_SCENE_CALIBRATION           5205  //????㊣那?“????
#define NET_DVR_SET_SCENE_CALIBRATION           5206  //?豕??㊣那?“????
#define NET_DVR_GET_SCENE_MASK_REGION           5207  //??????㊣????辰
#define NET_DVR_SET_SCENE_MASK_REGION           5208  //?豕????㊣????辰
#define    NET_DVR_GET_SCENE_LANECFG                5209  //???????????辰
#define NET_DVR_SET_SCENE_LANECFG                5210  //?豕?????????辰
#define NET_DVR_GET_SCENE_AID_RULECFG           5211  //???????“???????辰????
#define NET_DVR_SET_SCENE_AID_RULECFG           5212  //?豕?????“???????辰????
#define NET_DVR_GET_SCENE_TPS_RULECFG           5213  //???????“???????辰????
#define NET_DVR_SET_SCENE_TPS_RULECFG           5214  //?豕?????“???????辰????
#define NET_DVR_GET_SCENE_TIME_CFG              5215  //?????“???????∼?㊣????????
#define NET_DVR_SET_SCENE_TIME_CFG              5216  //?豕???“???????∼?㊣????????
#define NET_DVR_GET_FORENSICS_MODE              5217  //???????∟﹞???????
#define NET_DVR_SET_FORENSICS_MODE              5218  //?豕?????∟﹞???????
#define NET_DVR_FORCESTOP_FORENSICS_CTRL        5219  //???????????∟
#define NET_DVR_GET_ALARM_PROCESS_CFG           5220   //????㊣“?????赤????
#define NET_DVR_SET_ALARM_PROCESS_CFG           5221   //?豕??㊣“?????赤????
#define NET_DVR_GET_BLACKLIST_ALARM_INFO        5222   //??????∼℅????㊣“???足??
#define NET_DVR_GET_STORAGE_RESOURCE_CFG        5225   //????????℅???????
#define NET_DVR_SET_STORAGE_RESOURCE_CFG        5226   //?豕??????℅???????
#define NET_DVR_DEL_BLACKLIST_ALARM_RECORD        5227   //????????????㊣“??????
#define NET_DVR_SET_BLACKLIST_GROUP_INFO        5229   //????﹞?℅谷??㊣赤????????
#define NET_DVR_DEL_BLACKLIST_GROUP_INFO        5230   //????????﹞?℅谷??㊣赤
#define NET_DVR_GET_BLACKLIST_GROUP_INFO        5231   //????????????﹞?℅谷??㊣赤
#define NET_DVR_SET_BLACKLIST_GROUP_RECORD_CFG    5232   //﹞?℅谷????????????
#define NET_DVR_GET_BLACKLIST_GROUP_RECORD_CFG    5234   //????????﹞?℅谷????????
#define NET_DVR_DEL_BLACKLIST_GROUP_RECORD_CFG    5235   //????????﹞?℅谷????????
#define    NET_DVR_GET_AREA_MONITOR_CFG            5236   //???????辰?角????????
#define    NET_DVR_SET_AREA_MONITOR_CFG            5237   //?豕?????辰?角????????
#define    NET_DVR_DEL_AREA_MONITOR_CFG            5238   //???????辰?角????
#define NET_DVR_RETRIEVAL_SNAP_RECORD            5240   //℅??????足?‾
#define NET_DVR_GET_ALARMLIST                    5241   //????????㊣“????㊣赤
#define NET_DVR_DETECT_IMAGE                    5242   //?????????足??
#define NET_DVR_GET_SNAP_RECORD                 5243   //????℅???????
#define NET_DVR_DEL_SNAP_RECORD                 5244   //????℅???????
#define NET_DVR_GET_FACE_RECORD                 5245   //??????????????????㊣赤
#define NET_DVR_SET_FACE_RECORD                    5246   //?赤??????????
#define NET_DVR_DEL_FACE_RECORD                    5247   //????????????
#define NET_DVR_GET_FACE_DATABASE                5248   //??????????????????
#define NET_DVR_SET_FACE_DATABASE                5249   //?豕????????????????
#define NET_DVR_DEL_FACE_DATABASE                5250   //??????????
#define NET_DVR_RETRIEVAL_FACE_DATABASE            5251   //???????足?‾
#define NET_DVR_SET_BLACKLIST_REL_DEV_CFG        5252   //?豕㊣?????????﹞?℅谷????
#define NET_DVR_DEL_BLACKLIST_REL_DEV            5253   //???? ?豕㊣?????????﹞?℅谷????
/*************************?????角???∼end*****************************/

#define NET_DVR_GET_DISK_RAID_INFO              6001  //????????Raid????
#define NET_DVR_SET_DISK_RAID_INFO              6002  //?豕??????Raid????

#define NET_DVR_GET_DVR_SYNCHRONOUS_IPC         6005  //????????﹞????∼??IPC?????豕㊣?????
#define NET_DVR_SET_DVR_SYNCHRONOUS_IPC         6006  //?豕??????﹞????∼??IPC?????豕㊣?????

#define NET_DVR_SET_DVR_IPC_PASSWD              6008  //?豕????IPC???∫??????
#define NET_DVR_GET_DEVICE_NET_USING_INFO       6009  //???????㊣?∼?豕㊣?????℅????????谷??

#define NET_DVR_SET_DVR_IPC_NET                 6012  //?豕?????豕???∼??IPC?????????﹞

#define NET_DVR_GET_RECORD_CHANNEL_INFO         6013  //???????????“??????
#define NET_DVR_SET_RECORD_CHANNEL_INFO         6014  //?豕?????????“??????


#define NET_DVR_MOUNT_DISK                        6015     // ????????
#define NET_DVR_UNMOUNT_DISK                    6016     // ????????

// CVR 
#define NET_DVR_GET_STREAM_SRC_INFO                6017  //???????‾????????
#define NET_DVR_SET_STREAM_SRC_INFO                6018  //?豕?????‾????????
#define NET_DVR_GET_STREAM_RECORD_INFO            6019  //???????‾????????
#define NET_DVR_SET_STREAM_RECORD_INFO            6020  //?豕?????‾????????
#define NET_DVR_GET_STREAM_RECORD_STATUS        6021  //???????‾????℅???
#define NET_DVR_SET_STREAM_RECORD_STATUS        6022  //?豕?????‾????℅???
#define NET_DVR_GET_STREAM_INFO                    6023  //???????赤?????‾ID????
#define NET_DVR_GET_STREAM_SRC_INFO_V40            6024  //???????‾????????
#define NET_DVR_SET_STREAM_SRC_INFO_V40          6025  //?豕?????‾????????
#define NET_DVR_GET_RELOCATE_INFO               6026  //????N+0?????????“?辰????
#define NET_DVR_START_GOP_INFO_PASSBACK         6032  //????????????
#define NET_DVR_GET_CHANS_RECORD_STATUS_CFG     6035    //?????“??????℅???????
#define NET_DVR_SET_CHANS_RECORD_STATUS_CFG     6036    //?豕???“??????℅???????
//NVR??96xx
#define NET_DVR_GET_IP_ALARM_GROUP_NUM          6100  //??????IP?“??㊣“??????????℅谷??
#define NET_DVR_GET_IP_ALARM_IN                 6101  //??????IP?“??㊣“??????????
#define NET_DVR_GET_IP_ALARM_OUT                6102  //??????IP?“??㊣“??????????

//9000 v2.2
#define NET_DVR_GET_FTPCFG_SECOND                6103      //????????????FTP????
#define NET_DVR_SET_FTPCFG_SECOND                6104      //?豕??????????FTP????

#define NET_DVR_GET_DEFAULT_VIDEO_EFFECT        6105       // ?????????????∫????????????
#define NET_DVR_SET_VIDEO_EFFECT                6106       // ?豕???“??????????????????
#define NET_DVR_DEL_INVALID_DISK                6107       // ???????∫????

#define NET_DVR_GET_DRAWFRAME_DISK_QUOTA_CFG    6109    //?????谷???“??????????
#define NET_DVR_SET_DRAWFRAME_DISK_QUOTA_CFG    6110    //?豕???谷???“??????????

#define NET_DVR_GET_NAT_CFG                     6111     //????NAT????????
#define NET_DVR_SET_NAT_CFG                     6112     //?豕??NAT????????  
#define NET_DVR_GET_AES_KEY                     6113     //?????豕㊣?AES????????
#define NET_DVR_GET_POE_CFG                     6114     //????POE????
#define NET_DVR_SET_POE_CFG                     6115     //?豕??POE????
#define NET_DVR_GET_CUSTOM_PRO_CFG              6116     //????℅??“?????谷????
#define NET_DVR_SET_CUSTOM_PRO_CFG              6117     //?豕??℅??“?????谷????
#define NET_DVR_GET_STREAM_CABAC                6118     //???????‾????????????
#define NET_DVR_SET_STREAM_CABAC                6119     //?豕?????‾????????????   
#define NET_DVR_GET_ESATA_MINISAS_USAGE_CFG        6120  //????eSATA??miniSAS????
#define NET_DVR_SET_ESATA_MINISAS_USAGE_CFG        6121  //?豕??eSATA??miniSAS???? 

#define NET_DVR_GET_HDCFG_V40                    6122  //????????????????
#define NET_DVR_SET_HDCFG_V40                    6123  //?豕??????????????
#define NET_DVR_GET_POE_CHANNEL_ADD_MODE        6124     //????POE?“???赤??﹞???
#define NET_DVR_SET_POE_CHANNEL_ADD_MODE        6125     //?豕??POE?“???赤??﹞???
#define NET_DVR_GET_DIGITAL_CHANNEL_STATE       6126     //?????豕㊣???℅??“??℅???
#define   NET_DVR_GET_BONJOUR_CFG               6127 // ????Bonjour????
#define   NET_DVR_SET_BONJOUR_CFG               6128 // ?豕??Bonjour????


#define NET_DVR_GET_SOCKS_CFG                    6130//????SOCKS???? 
#define NET_DVR_SET_SOCKS_CFG                      6131//?豕??SOCKS????

#define    NET_DVR_GET_QOS_CFG                        6132//????QoS????
#define NET_DVR_SET_QOS_CFG                        6133//?豕??QoS????

#define NET_DVR_GET_HTTPS_CFG                    6134//????HTTPS????
#define NET_DVR_SET_HTTPS_CFG                    6135//?豕??HTTPS????

#define NET_DVR_GET_WD1_CFG                     6136//????????WD1????????
#define NET_DVR_SET_WD1_CFG                     6137//?????豕??WD1????????

#define NET_DVR_CREATE_CERT                     6138//???“?∟?谷
#define NET_DVR_DELETE_CERT                     6139//?????∟?谷


#define NET_DVR_GET_RECORD_LOCK_PERCENTAGE        6140  //?????????????“㊣???
#define NET_DVR_SET_RECORD_LOCK_PERCENTAGE      6141  //?豕???????????“㊣???

#define NET_DVR_CMD_TRIGGER_PERIOD_RECORD        6144 //?????邦????﹞????“?㊣??????
#define NET_DVR_UPLOAD_CERT                     6145    //?????∟?谷
#define NET_DVR_DOWNLOAD_CERT                   6146     //?????∟?谷
#define NET_DVR_GET_CERT                        6147     //?????∟?谷

#define NET_DVR_GET_POS_FILTER_CFG                6148    //????POS???????辰
#define NET_DVR_SET_POS_FILTER_CFG                6149    //?豕??POS???????辰
#define NET_DVR_GET_CONNECT_POS_CFG                6150    //????DVR??POS????﹞???
#define NET_DVR_SET_CONNECT_POS_CFG                6151    //?豕??DVR??POS????﹞???
#define NET_DVR_GET_CHAN_FILTER_CFG                6152    //???????辰???“??????????
#define NET_DVR_SET_CHAN_FILTER_CFG                6153    //?豕?????辰???“??????????


#define NET_DVR_GET_FTPCFG_V40                    6162    //????FTP????
#define NET_DVR_SET_FTPCFG_V40                    6163    //?豕??FTP????

#define NET_DVR_GET_MONTHLY_RECORD_DISTRIBUTION 6164   //???????迆????﹞???
#define NET_DVR_GET_ACCESS_DEVICE_CHANNEL_INFO  6165   //???????????豕㊣??“??????
#define NET_DVR_GET_PREVIEW_SWITCH_CFG            6166   //?????豕㊣?㊣????∟??????????
#define NET_DVR_SET_PREVIEW_SWITCH_CFG            6167   //?豕???豕㊣?㊣????∟??????????

//Netra3.0.0
#define NET_DVR_GET_N_PLUS_ONE_WORK_MODE            6168    //????N+1?∟℅‾????
#define NET_DVR_SET_N_PLUS_ONE_WORK_MODE            6169    //?豕??N+1?∟℅‾????

#define NET_DVR_GET_HD_STATUS                         6170    //????????℅???
#define NET_DVR_SET_HD_STATUS                         6171    //?豕??????℅???

#define NET_DVR_IMPORT_IPC_CFG_FILE                    6172    //????IPC????????
#define NET_DVR_EXPORT_IPC_CFG_FILE                    6173    //????IPC????????
#define NET_DVR_UPGRADE_IPC                            6174    //????IP?“??

#define NET_DVR_GET_RAID_BACKGROUND_TASK_SPEED        6175    //????RAID?車?“????????
#define NET_DVR_SET_RAID_BACKGROUND_TASK_SPEED        6176    //?豕??RAID?車?“????????

//marvell 256?﹞NVR
#define NET_DVR_GET_EXCEPTIONCFG_V40                6177    //?????足??????????
#define NET_DVR_SET_EXCEPTIONCFG_V40                6178    //?豕???足??????????
#define NET_DVR_GET_PICCFG_V40                      6179    //???????車???? ?∫??㊣??∟    NetSDK_
#define NET_DVR_SET_PICCFG_V40                      6180    //?豕?????車?????? ?∫??㊣??∟
#define NET_DVR_GET_ALARMINCFG_V40                  6181    //????㊣“?????????????∫??㊣??∟
#define NET_DVR_SET_ALARMINCFG_V40                  6182    //????㊣“?????????????∫??㊣??∟
#define NET_DVR_GET_IPALARMINCFG_V40                6183    //????IP㊣“?????????????????? 
#define NET_DVR_GET_IPALARMOUTCFG_V40               6185    //????IP㊣“?????????????????? 
#define NET_DVR_GET_USERCFG_V40                     6187    //???????∫????
#define NET_DVR_SET_USERCFG_V40                     6188    //?豕?????∫????
#define NET_DVR_GET_WORK_STATUS                     6189    //?????豕㊣??∟℅‾℅???
#define NET_DVR_GET_JPEG_CAPTURE_CFG_V40            6190    //????DVR℅???????
#define NET_DVR_SET_JPEG_CAPTURE_CFG_V40            6191    //?豕??DVR℅???????
#define NET_DVR_GET_HDGROUP_CFG_V40                 6192    //??????℅谷???赤????????
#define NET_DVR_SET_HDGROUP_CFG_V40                 6193    //?豕????℅谷???赤????????
#define NET_DVR_GET_SMD_HOLIDAY_HANDLE              6194    //?????辰?℅????????????
#define NET_DVR_SET_SMD_HOLIDAY_HANDLE              6195    //?豕???辰?℅????????????
#define NET_DVR_GET_PIC_MODEL_CFG                   6196    //?????????“??????????
#define NET_DVR_SET_PIC_MODEL_CFG                   6197    //?豕???????“??????????
#define NET_DVR_START_LOCAL_MOUSE_EVENT             6198    //?????豕㊣?㊣????車㊣那????????
#define NET_DVR_START_SIMULARE_MOUSE_EVENT          6199    //?????????車㊣那????
#define  NET_DVR_GET_WORK_STATUS_V50                6200    //?????豕㊣??∟℅‾℅???V50

//91????HD-SDI????DVR
#define NET_DVR_GET_ACCESS_CAMERA_INFO          6201 // ?????∼???角?迆????
#define NET_DVR_SET_ACCESS_CAMERA_INFO          6202 // ?豕???∼???角?迆????
#define NET_DVR_PULL_DISK                        6203 // ∼???∼???
#define NET_DVR_SCAN_RAID                        6204 // ?“?豕?車??
// CVR 2.0.X
#define NET_DVR_GET_USER_RIGHT_CFG                6210        // ???????∫?“??
#define NET_DVR_SET_USER_RIGHT_CFG                6211        // ?豕?????∫?“??

#define NET_DVR_ONE_KEY_CONFIG                    6212        // ???邦????CVR
#define NET_DVR_RESTART_SERVICE                    6213        // ????CVR﹞???

#define NET_DVR_GET_MAX_MACHINE_NUM_CFG            6214        // ????㊣??迆℅??車????
#define NET_DVR_SET_MAX_MACHINE_NUM_CFG            6215        // ?豕??㊣??迆℅??車????

#define NET_DVR_ADD_DEVICE                        6216        //N+1?????赤???豕㊣?
#define NET_DVR_DEL_DEVICE                        6217        //N+1?????????豕㊣?

#define NET_DVR_GET_DATA_CALLBACK_CFG            6218        // ???????????“℅???
#define NET_DVR_SET_DATA_CALLBACK_CFG            6219        // ?豕?????????“℅???

#define NET_DVR_CLONE_LUN                        6220    //????LUN?赤
#define NET_DVR_EXPAND_LUN                        6221    //?????????邦??LUN?赤

#define NET_DVR_GET_N_PLUS_ONE_DEVICE_INFO        6222    //????N+1?豕㊣?????
#define NET_DVR_MODIFY_DVR_NET_DISK                6223    //????DVR????
//#define NET_DVR_DEL_DVR_NET_DISK                6224    //????DVR????

#define NET_DVR_CREATE_NAS                        6225    //???“NAS
#define NET_DVR_DELETE_NAS                        6226    //????NAS 

#define NET_DVR_OPEN_ISCSI                         6227    //????iSCSI
#define NET_DVR_CLOSE_ISCSI                        6228    //??㊣?iSCSI 

#define NET_DVR_GET_FC                            6229    //????????????
#define NET_DVR_OPEN_FC                             6230    //????FC
#define NET_DVR_CLOSE_FC                         6231    //??㊣?FC
#define NET_DVR_ONE_KEY_CONFIG_SAN                6232   // ???邦????SAN, ?????邦????CVR???????迄

//CVR2.3.2
#define NET_DVR_RECORD_CHECK                        6233  //?????那?????足??
#define NET_DVR_ADD_RECORD_PASSBACK_TASK_MANUAL        6234  //?????赤??????????????
#define NET_DVR_GET_ALL_RECORD_PASSBACK_TASK_MANUAL    6235  //?????迄???????赤??????????????
#define NET_DVR_RECORD_PASSBACK_TASK_MANUAL_CTRL    6236  //????????????????????
#define NET_DVR_DEL_RECORD_PASSBACK_TASK_MANUAL        6237  //????????????????????
#define NET_DVR_GET_RECORD_PASSBACK_PLAN_CFG        6238  //????????????????????
#define NET_DVR_SET_RECORD_PASSBACK_PLAN_CFG        6239  //?豕??????????????????
#define NET_DVR_GET_DEV_STORAGE_CFG                    6240  //?????豕㊣?????????
#define NET_DVR_GET_ONLINE_USER_CFG                    6241  //???????????∫????
#define NET_DVR_GET_RECORD_SEGMENT_CFG                6242  //??????????℅???

#define NET_DVR_GET_REC_PASSBACK_TASK_EXECUTABLE    6243    //?谷??????????????????????????
#define NET_DVR_GET_STREAM_MEDIA_CFG                6244    //?????‾?????????????????????“?‾ID﹞?????
#define NET_DVR_SET_STREAM_MEDIA_CFG                6245    //?豕???‾?????????????????????“?‾ID﹞?????
#define NET_DVR_GET_USERCFG_V50                     6246  //???????∫????V50
#define NET_DVR_SET_USERCFG_V50                     6247  //?豕?????∫????V50

#define NET_DVR_GET_RECORD_PASSBACK_BASIC_CFG_CAP    6248  //????CVR?????????迄??????????
#define NET_DVR_GET_RECORD_PASSBACK_BASIC_CFG        6249  //????CVR?????????迄??????
#define NET_DVR_SET_RECORD_PASSBACK_BASIC_CFG        6250  //?豕??CVR?????????迄??????
#define NET_DVR_ONE_KEY_CONFIG_V50                    6251  // ???邦????CVR(V50)
#define NET_DVR_GET_RACM_CAP                        6252  //????????℅??????“RACM??????
#define NET_DVR_GET_THUMBNAILS                        6253  //???????????“????????????????????(?∫???‾ID)
#define NET_DVR_ADD_RECORD_PASSBACK_TASK_MANUAL_V50        6254  //?????赤??????????????V50?“﹞???????ID??
#define NET_DVR_GET_RECORD_PASSBACK_HISTORY_PLAN_CFG_CAP    6255  //????CVR?????迆?﹞????????????
#define NET_DVR_GET_RECORD_PASSBACK_HISTORY_PLAN_CFG        6256  //????CVR?????迆?﹞????????????
#define NET_DVR_SET_RECORD_PASSBACK_HISTORY_PLAN_CFG        6257  //?豕??CVR?????迆?﹞????????????
#define NET_DVR_ONE_KEY_CONFIG_V51                          6258  // ???邦????CVR(V51)


#define NET_DVR_GET_RECORD_PACK                    6301    //?????????辰∼邦????
#define NET_DVR_SET_RECORD_PACK                    6302    //?豕???????辰∼邦????

#define NET_DVR_GET_CLOUD_STORAGE_CFG           6303     //?????豕㊣??㊣?∼?∟℅‾????
#define NET_DVR_SET_CLOUD_STORAGE_CFG           6304    //?豕???豕㊣??㊣?∼?∟℅‾????
#define NET_DVR_GET_GOP_INFO                    6305    //????GOP???? 
#define NET_DVR_GET_PHY_DISK_INFO               6306     //???????赤????????
//?????‾?迆?????邦??
#define NET_DVR_GET_RECORDING_AUTO_TRACK_CFG    6307    //????SDI℅????迆℅?????????
#define NET_DVR_SET_RECORDING_AUTO_TRACK_CFG    6308    //?豕??SDI℅????迆℅?????????

#define NET_DVR_GET_RECORDING_PUBLISH_CFG        6309  //???????邦﹞??????? 
#define NET_DVR_SET_RECORDING_PUBLISH_CFG        6310  //?豕?????邦﹞???????


#define NET_DVR_RECORDING_ONEKEY_CONTROL        6311  //?????‾?迆????

#define NET_DVR_GET_RECORDING_END_TIME    6312  //???????????角?㊣??

#define NET_DVR_RECORDING_PUBLISH                6313  //???邦﹞???????

#define NET_DVR_GET_CURRICULUM_CFG            6314    //??????㊣赤????????
#define NET_DVR_SET_CURRICULUM_CFG            6315  //?豕????㊣赤????????

#define NET_DVR_GET_COURSE_INDEX_CFG        6316    //?????????????‾??
#define NET_DVR_SET_COURSE_INDEX_CFG        6317  //?豕???????????‾??

#define    NET_DVR_GET_PPT_CHANNEL                6318    //????PPT?∫???“????
#define    NET_DVR_GET_PPT_DETECT_CFG            6319    //????PPT?足??????
#define    NET_DVR_SET_PPT_DETECT_CFG            6320    //?豕??PPT?足??????

#define NET_DVR_GET_RECORDINGHOST_CFG            6321    //?????????‾?迆????????
#define NET_DVR_SET_RECORDINGHOST_CFG            6322    //?豕???????‾?迆????????
#define NET_DVR_GET_BACKUP_RECORD_CFG           6323    //???????邦㊣?﹞?????????
#define NET_DVR_SET_BACKUP_RECORD_CFG           6324    //?豕?????邦㊣?﹞?????????

//???車?‾?迆
#define NET_DVR_GET_AUDIO_ACTIVATION_CFG        6326    //?????????∟??????????
#define NET_DVR_SET_AUDIO_ACTIVATION_CFG        6327    //?豕???????∟??????????
#define NET_DVR_GET_DECODERCFG_V40              6328    //?????????‾????????
#define NET_DVR_SET_DECODERCFG_V40                6329    //?豕???????‾????????

#define NET_DVR_INFRARED_OUTPUT_CONTROL         6330   //?足??????????
#define NET_DVR_GET_INFRARED_CMD_NAME_CFG       6331   //?????足???邦??????????????
#define NET_DVR_SET_INFRARED_CMD_NAME_CFG       6332   //?豕???足???邦??????????????
#define NET_DVR_START_INFRARED_LEARN            6333   //?????足???∫??

#define NET_DVR_GET_TRIAL_SYSTEM_CFG            6334   //???????車?‾?迆????????
#define NET_DVR_SET_CASE_INFO                    6335    //∼???????????
#define NET_DVR_GET_TRIAL_MICROPHONE_STATUS        6336  //?????車??﹞?℅???????
#define NET_DVR_SET_TRIAL_MICROPHONE_STATUS        6337  //?????車??﹞?℅???????
#define NET_DVR_GET_TRIAL_HOST_STATUS            6338  //???????車?‾?迆℅???????
#define NET_DVR_GET_LAMP_OUT                    6339  //????LAMP??????????
#define NET_DVR_SET_LAMP_OUT                    6340  //?豕??LAMP??????????
#define NET_DVR_LAMP_REMOTE_CONTROL                6341  // LAMP????
#define NET_DVR_REMOTE_CONTROL_PLAY                6342  //????????㊣?????﹞?
#define NET_DVR_GET_LOCAL_INPUT_CFG                6343  //???????車?‾?迆℅??????????車?‾?迆㊣???????????
#define NET_DVR_SET_LOCAL_INPUT_CFG                6344  //?豕?????車?‾?迆㊣???????????
#define NET_DVR_GET_CASE_INFO                    6345  //?????㊣?∼∼???????

//?車???迆?????邦??
#define NET_DVR_INQUEST_GET_CDW_STATUS             6350  //?????車???迆????℅???-?∟????
#define NET_DVR_GET_MIX_AUDIOIN_CFG             6351  //?????足????????????????
#define NET_DVR_SET_MIX_AUDIOIN_CFG             6352  //?豕???足????????????????
#define NET_DVR_GET_MIX_AUDIOOUT_CFG            6353  //?????足????????????????
#define NET_DVR_SET_MIX_AUDIOOUT_CFG            6354  //?豕???足????????????????
#define NET_DVR_GET_AUDIOIN_VOLUME_CFG          6355  //???????????????????‾??????????
#define NET_DVR_SET_AUDIOIN_VOLUME_CFG          6356  //?豕?????????????????‾??????????
#define NET_DVR_GET_AREA_MASK_CFG               6357  //?????赤?邦?????辰????
#define NET_DVR_SET_AREA_MASK_CFG               6358  //?豕???赤?邦?????辰????
#define NET_DVR_GET_AUDIO_DIACRITICAL_CFG       6359  //????????㊣???????
#define NET_DVR_SET_AUDIO_DIACRITICAL_CFG       6360  //?豕??????㊣???????
#define NET_DVR_GET_WIFI_DHCP_ADDR_CFG          6361  //??WIFI DHCP ???﹞﹞??∫????????
#define NET_DVR_SET_WIFI_DHCP_ADDR_CFG          6362  //?豕WIFI DHCP ???﹞﹞??∫????????
#define NET_DVR_GET_WIFI_CLIENT_LIST_INFO       6363  //????wifi?????????????豕㊣?????
#define NET_DVR_REMOTECONTROL_POWER_ON            6364  //???????迆
#define NET_DVR_GET_MULTISTREAM_RELATION_CHAN_CFG      6365  //?????角???‾?????“??????????
#define NET_DVR_SET_MULTISTREAM_RELATION_CHAN_CFG     6366  //?豕???角???‾?????“??????????
#define NET_DVR_GET_VIDEOOUT_RESOLUTION_CFG        6367  //?????豕㊣?㊣?????????????﹞?㊣???
#define NET_DVR_SET_VIDEOOUT_RESOLUTION_CFG        6368  //?豕???豕㊣?㊣?????????????﹞?㊣???
#define NET_DVR_GET_AUDIOOUT_VOLUME_CFG         6369  //???????????????????‾??????????
#define NET_DVR_SET_AUDIOOUT_VOLUME_CFG         6370  //?豕?????????????????‾??????????
#define NET_DVR_INQUEST_PAUSE_CDW               6371  //????????
#define NET_DVR_INQUEST_RESUME_CDW              6372  //????????
#define NET_DVR_GET_INPUT_CHAN_CFG              6373  //?????????“??????
#define NET_DVR_SET_INPUT_CHAN_CFG              6374  //?豕???????“??????
#define  NET_DVR_GET_INQUEST_MIX_AUDIOIN_CFG    6375    //?????車???迆?????????足??????
#define  NET_DVR_SET_INQUEST_MIX_AUDIOIN_CFG    6376    //?豕???車???迆?????????足??????
#define     NET_DVR_CASE_INFO_CTRL                    6377    //∼???????????????
#define  NET_DVR_GET_INQUEST_USER_RIGHT            6378    //?????車???迆???∫?“??
#define  NET_DVR_SET_INQUEST_USER_RIGHT            6379    //?豕???車???迆???∫?“??
#define NET_DVR_GET_INQUEST_CASE_INFO            6380    //?????車??∼???????????
#define NET_DVR_SET_INQUEST_CASE_INFO            6381    //?豕???車??∼???????????

#define    NET_DVR_GET_FILM_MODE_CFG               6387    //???????∼????
#define    NET_DVR_SET_FILM_MODE_CFG               6388    //?豕?????∼????
#define    NET_DVR_GET_FILM_MODE_CFG_CAP            6389    //???????∼????????????

#define    NET_DVR_GET_DIRECTED_STRATEGY_CFG       6390    //?????????????角??
#define    NET_DVR_SET_DIRECTED_STRATEGY_CFG        6391    //?豕???????????角??
#define    NET_DVR_GET_DIRECTED_STRATEGY_CFG_CAP    6392    //???????∼????????????
#define    NET_DVR_GET_FRAME_CFG                    6393    //????????㊣??辰
#define    NET_DVR_SET_FRAME_CFG                    6394    //?豕??????㊣??辰
#define    NET_DVR_GET_FRAME_CFG_CAP                6395    //????????㊣??辰????????
#define    NET_DVR_GET_AUDIO_EFFECTIVE_CFG            6396    //????????????????
#define    NET_DVR_SET_AUDIO_EFFECTIVE_CFG            6397    //?豕???????∫??????
#define    NET_DVR_GET_AUDIO_EFFECTIVE_CFG_CAP        6398    //?????????∫??????????????
#define    NET_DVR_GET_RECORD_VIDEO_CFG              6399    //????????????????
#define    NET_DVR_SET_RECORD_VIDEO_CFG            6400    //?豕??????????????


#define NET_DVR_GET_OUTPUT_CFG                  6401        //????????????????
#define NET_DVR_SET_OUTPUT_CFG                  6402        //?豕??????????????
#define NET_DVR_CODER_DISPLAY_START             6403        //????????
#define NET_DVR_CODER_DISPLAY_STOP              6404        //????????
#define NET_DVR_GET_WINDOW_STATUS               6405        //?????????∼??℅???

//VQD????????
#define NET_DVR_GET_VQD_LOOP_DIAGNOSE_CFG       6406        //????VQD???﹞????????????
#define NET_DVR_SET_VQD_LOOP_DIAGNOSE_CFG       6407        //?豕??VQD???﹞????????????
#define NET_DVR_GET_VQD_DIAGNOSE_INFO           6408        //????????VQD????????

#define    NET_DVR_RECORDING_PUBLISH_FILE            6421        //????﹞???
#define    NET_DVR_GET_RECORDING_PUBLISH_FILE_CAP    6422        //????????﹞???????
#define    NET_DVR_GET_PUBLISH_PROGRESS            6423           //????﹞???????
#define    NET_DVR_GET_RECORD_VIDEO_CFG_CAP        6424        //????????????????????
#define    NET_DVR_GET_RTMP_CFG                    6425        //????RTMP????
#define    NET_DVR_SET_RTMP_CFG                    6426        //?豕??RTMP????
#define    NET_DVR_GET_RTMP_CFG_CAP                  6427        //????RTMP????????
#define    NET_DVR_DEL_BACKGROUND_PIC                6428        //????㊣??∼????????
#define    NET_DVR_GET_BACKGROUND_PIC_CFG            6429        //?谷??㊣??∼????????
#define    NET_DVR_GET_BACKGROUND_PIC_INFO            6430        //????????????℅‾??㊣??∼????
#define    NET_DVR_SET_BACKGROUND_PIC_INFO            6431        //?豕??????????℅‾??㊣??∼????
#define    NET_DVR_GET_BACKGROUND_PIC_INFO_CAP      6432           //????????????℅‾??㊣??∼????????????
#define    NET_DVR_GET_RECORD_HOST_CAP                6433        //?????????‾?迆℅?????
#define NET_DVR_GET_COURSE_LIST                 6434    //??????????㊣赤
#define    NET_DVR_GET_RECORD_STATUS                6435 //?谷???????‾?迆?㊣?∼℅???
#define    NET_DVR_MANUAL_CURRICULUM_CONTROL        6436    //??????㊣赤????
#define    NET_DVR_GET_IMAGE_DIFF_DETECTION_CFG        6437    //??????????﹞??足??????
#define    NET_DVR_SET_IMAGE_DIFF_DETECTION_CFG        6438    //?豕????????﹞??足??????
#define    NET_DVR_GET_IMAGE_DIFF_DETECTION_CFG_CAP    6439    //??????????﹞??足??????????
#define    NET_DVR_GET_RECORDING_PUBLISH_FILE_INFO    6440    //????﹞???????????????
#define    NET_DVR_SET_RECORDING_PUBLISH_FILE_INFO    6441    //?豕??﹞???????????????
#define    NET_DVR_GET_RECORDING_PUBLISH_FILE_INFO_CAP        6442    //????﹞???????????????????
#define    NET_DVR_MANUAL_CURRICULUM_CONTROL_CAP        6443    //??????????????????????
#define NET_DVR_GET_STATISTIC_DATA_LIST             6444    //??????????????㊣赤

#define    NET_DVR_GET_DEVICE_LAN_ENCODE            6501        //?????豕㊣???????㊣角??
#define NET_DVR_GET_GBT28181_SERVICE_CFG        6503        //????GB28181﹞????‾????
#define NET_DVR_SET_GBT28181_SERVICE_CFG        6504        //?豕??GB28181﹞????‾????
#define NET_DVR_GET_GBT28181_SERVICE_CAPABILITIES 6505      //????GB28181﹞????‾????

#define NET_DVR_GET_CLOUD_URL               6506    //??????????URL
#define NET_DVR_GET_CLOUD_URL_CAP           6507    //??????????URL-??????
#define NET_DVR_GET_CLOUD_CFG               6508    //??????????????????
#define NET_DVR_SET_CLOUD_CFG               6509    //?豕????????????????
#define NET_DVR_GET_CLOUD_CFG_CAP           6510    //??????????????-??????
#define NET_DVR_GET_CLOUD_UPLOADSTRATEGY    6511    //??????????????????
#define NET_DVR_SET_CLOUD_UPLOADSTRATEGY    6512    //?豕????????????????
#define NET_DVR_GET_CLOUDSTORAGE_UPLOADSTRATEGY_CAP     6513    //??????????????????-??????

#define    NET_DVR_GET_VIDEO_IMAGE_DB_CFG        6601        //??????????????
#define    NET_DVR_SET_VIDEO_IMAGE_DB_CFG        6602        //?豕????????????
#define    NET_DVR_GET_VIDEO_IMAGE_DB_CFG_CAP    6603        //???????????角??????
#define    NET_DVR_GET_FILE_INFO_BY_ID            6604        //?迄??????ID????????????????????
#define    NET_DVR_QUERY_FILE_INFO_CAP            6605        //?迄?????????谷??????????????
#define    NET_DVR_DEL_FILE_FROM_DB            6606        //??????????????????
#define    NET_DVR_GET_VIDEO_IMAGE_DB_CAP        6607        //??????????℅?????

#define NET_DVR_GET_FIGURE                    6610       //??????????

#define    NET_DVR_SYNC_IPC_PASSWD                  6621        //????IPC??????NVR????
#define    NET_DVR_GET_VEHICLE_BLACKLST_SCHEDULE 6622    //????????????﹞??㊣??????
#define    NET_DVR_SET_VEHICLE_BLACKLST_SCHEDULE 6623    //?豕??????????﹞??㊣??????

#define    NET_DVR_GET_VEHICLE_WHITELST_SCHEDULE 6624    //????∼℅??????﹞??㊣??????
#define    NET_DVR_SET_VEHICLE_WHITELST_SCHEDULE 6625    //?豕??∼℅??????﹞??㊣??????

#define    NET_DVR_GET_VEHICLE_BLACKLIST_EVENT_TRIGGER     6626    //????????????﹞?????????
#define    NET_DVR_SET_VEHICLE_BLACKLIST_EVENT_TRIGGER     6627    //?豕??????????﹞?????????

#define    NET_DVR_GET_VEHICLE_WHITELIST_EVENT_TRIGGER     6628    //????∼℅??????﹞?????????
#define    NET_DVR_SET_VEHICLE_WHITELIST_EVENT_TRIGGER     6629    //?豕??∼℅??????﹞?????????

#define    NET_DVR_GET_TRAFFIC_CAP    6630    //????℅????角????????
#define    NET_DVR_GET_VEHICLE_ALLLIST_EVENT_TRIGGER     6631    //?????????????足????﹞?????????
#define    NET_DVR_SET_VEHICLE_ALLLIST_EVENT_TRIGGER     6632    //?豕???????????足????﹞?????????
#define    NET_DVR_GET_VEHICLE_OTHERLIST_EVENT_TRIGGER     6633    //????????????﹞?????????
#define    NET_DVR_SET_VEHICLE_OTHERLIST_EVENT_TRIGGER     6634    //?豕??????????﹞?????????

#define    NET_DVR_GET_STORAGEDETECTION_EVENT_TRIGGER     6635    //?????????????足??????????
#define    NET_DVR_SET_STORAGEDETECTION_EVENT_TRIGGER     6636    //?豕???????????足??????????
#define    NET_DVR_GET_STORAGEDETECTION_SCHEDULE_CAPABILITIES    6637    //?????????????足????﹞??㊣??????
#define    NET_DVR_GET_STORAGEDETECTION_SCHEDULE         6638    //??????????????﹞??㊣??????
#define    NET_DVR_SET_STORAGEDETECTION_SCHEDULE         6639    //?豕????????????﹞??㊣??????
#define    NET_DVR_GET_STORAGEDETECTION_STATE             6640    //????????????℅???

#define    NET_DVR_GET_STORAGEDETECTION_RWLOCK             6646    //?????????足??????????????
#define    NET_DVR_GET_STORAGEDETECTION_RWLOCK_CAPABILITIES    6647    //?????????足??????????????????
#define    NET_DVR_SET_STORAGEDETECTION_RWLOCK             6648    //?豕???????足??????????????
#define    NET_DVR_GET_PTZTRACKSTATUS                     6649    //?????辰?迆?????迆℅?℅???

#define    NET_DVR_SET_STORAGEDETECTION_UNLOCK             6653    //?豕???????足????????????
#define    NET_DVR_GET_STORAGEDETECTION_UNLOCK_CAPABILITIES    6654    //?????????足????????????????

#define    NET_DVR_SET_SHIPSDETECTION_CFG                 6655    //?豕???????足??????????
#define    NET_DVR_GET_SHIPSDETECTION_CFG                 6656    //?????????足??????????
#define    NET_DVR_GET_SHIPSDETECTION_CAPABILITIES         6657    //?????????足??????????????
#define    NET_DVR_GET_SHIPSDETECTION_COUNT               6658    //????????????????
#define    NET_DVR_SHIPSCOUNT_DELETE_CTRL                  6659   //????????????????

#define    NET_DVR_GET_BAREDATAOVERLAY_CAPABILITIES     6660   //??????????????????
#define    NET_DVR_SET_BAREDATAOVERLAY_CFG                 6661    //?豕????????????
#define    NET_DVR_GET_BAREDATAOVERLAY_CFG                 6662    //??????????????
#define    NET_DVR_GET_SHIPSDETECTION_SCHEDULE             6663    //?????????足????﹞??㊣??????
#define    NET_DVR_SET_SHIPSDETECTION_SCHEDULE             6664    //?豕???????足????﹞??㊣??????
#define    NET_DVR_GET_SHIPSDETECTION_EVENT_TRIGGER     6665    //?????????足??????????
#define    NET_DVR_SET_SHIPSDETECTION_EVENT_TRIGGER     6666    //?豕???????足??????????
#define    NET_DVR_GET_SHIPSDETECTION_SCHEDULE_CAPABILITIES    6667    //?????????足????﹞??㊣??????

#define    NET_DVR_FIRE_FOCUSZOOM_CTRL         6670        //?????????????﹞????㊣?㊣?

#define    NET_DVR_GET_FIREDETECTION_SCHEDULE_CAPABILITIES    6671 //?????????足????﹞??㊣??????
#define    NET_DVR_GET_FIREDETECTION_SCHEDULE    6672    //?????????足????﹞??㊣??????
#define    NET_DVR_SET_FIREDETECTION_SCHEDULE    6673    //?豕???????足????﹞??㊣??????
#define    NET_DVR_GET_MANUALRANGING_CAPABILITIES    6675    //???????????角????????
#define    NET_DVR_SET_MANUALRANGING           6677        //?豕?????????角????
#define    NET_DVR_GET_MANUALDEICING_CAPABILITIES    6678//??????????㊣迄????????
#define    NET_DVR_SET_MANUALDEICING           6679        //?豕????????㊣迄
#define    NET_DVR_GET_MANUALDEICING           6680        //??????????㊣迄

#define    NET_DVR_GET_THERMALPOWER_CAPABILITIES   6689    //?????角?迆????????????
#define    NET_DVR_GET_THERMALPOWER                6690    //?????角?迆????????????
#define    NET_DVR_SET_THERMALPOWER                6691    //?豕???角?迆????????????
#define    NET_DVR_GET_PTZABSOLUTEEX_CAPABILITIES  6695    //??????????PTZ????????????????????
#define    NET_DVR_GET_PTZABSOLUTEEX               6696    //??????????PTZ????????????????
#define    NET_DVR_SET_PTZABSOLUTEEX               6697    //?豕????????PTZ????????????????

#define    NET_DVR_GET_CRUISE_CAPABILITIES              6698    //?????豕㊣?????????????????
#define    NET_DVR_GET_CRUISE_INFO                      6699    //?????豕㊣?????????
#define    NET_DVR_GET_TEMP_HUMI_CAPABILITIES           6700    //?????????㊣????????
#define NET_DVR_GET_TEMP_HUMI_INFO                   6701   //?????????㊣????

#define    NET_DVR_GET_MANUALTHERM_INFO                 6706   //???????????㊣????
#define    NET_DVR_GET_MANUALTHERM_CAPABILITIES         6707   //???????????????㊣????????
#define    NET_DVR_SET_MANUALTHERM                      6708     //?豕???????????????豕??

//DVR96000
#define    NET_DVR_GET_ACCESSORY_CARD_INFO_CAPABILITIES    6709 //????????∼?????????
#define    NET_DVR_GET_ACCESSORY_CARD_INFO                    6710 //????????∼?????

#define    NET_DVR_GET_THERMINTELL_CAPABILITIES    6711         //??????????????????????
#define    NET_DVR_GET_THERMINTELL                 6712         //??????????????????????????
#define    NET_DVR_SET_THERMINTELL                 6713         //?豕????????????????????????
#define NET_GET_CRUISEPOINT_V50                      6714 //?????????﹞??????????
#define    NET_DVR_GET_MANUALTHERM_BASIC_CAPABILITIES     6715   //?????????????迄㊣?????????????
#define    NET_DVR_SET_MANUALTHERM_BASICPARAM           6716     //?豕???????????迄㊣?????
#define    NET_DVR_GET_MANUALTHERM_BASICPARAM           6717     //?????????????迄㊣?????

#define    NET_DVR_GET_FIRESHIELDMASK_CAPABILITIES            6718   //???????????辰??㊣?????

#define NET_DVR_GET_HIDDEN_INFORMATION_CAPABILITIES    6720 //????????????????
#define NET_DVR_GET_HIDDEN_INFORMATION                 6721 //????????????????
#define NET_DVR_SET_HIDDEN_INFORMATION                 6722 //?豕??????????????

#define    NET_DVR_SET_FIRESHIELDMASK_CFG                  6723    //?豕?????????辰??㊣?????
#define    NET_DVR_GET_FIRESHIELDMASK_CFG                  6724     //???????????辰??㊣?????

#define    NET_DVR_GET_SMOKESHIELDMASK_CAPABILITIES            6725   //???????赤???辰??㊣?????
#define    NET_DVR_SET_SMOKESHIELDMASK_CFG                     6726     //?豕?????赤???辰??㊣?????
#define    NET_DVR_GET_SMOKESHIELDMASK_CFG                     6727        //???????赤???辰??㊣?????

#define    NET_DVR_GET_AREASCAN_CAPABILITIES                  6728   //???????辰?“?豕????
#define    NET_DVR_GET_AREASCAN_CFG                          6730        //???????辰?“?豕????

#define    NET_DVR_DEL_AREASCAN_CFG                          6731        //?“?豕???辰????
#define    NET_DVR_AREASCAN_INIT_CTRL                        6732        //???????辰?“?豕?豕??
#define    NET_DVR_AREASCAN_CONFIRM_CTRL                     6733        //㊣??????辰?“?豕?豕??
#define    NET_DVR_AREASCAN_STOP_CTRL                        6734        //???????辰?“?豕?豕??
#define    NET_DVR_SAVE_SCANZOOM_CTRL                        6735        //?豕???“?豕㊣?????㊣????㊣?∼???∫㊣??????“?豕㊣???
#define    NET_DVR_GET_SCANZOOM_CTRL                         6736        //?????“?豕㊣????????∟?????????????∫㊣???﹞??????㊣?∼?“?豕㊣?????
#define    NET_DVR_DEL_FIRESHIELDMASK_CTRL                   6737        //??????????㊣????辰
#define    NET_DVR_DEL_SMOKESHIELDMASK_CTRL                  6738        //???????赤??㊣????辰

#define    NET_DVR_GET_DENSEFOG_EVENT_TRIGGER                6740     //?????車?赤?足??????????
#define    NET_DVR_SET_DENSEFOG_EVENT_TRIGGER                6741     //?豕???車?赤?足??????????
#define    NET_DVR_SET_DENSEFOGDETECTION_CFG                 6742     //?豕???車?赤?足??????????
#define    NET_DVR_GET_DENSEFOGDETECTION_CFG                 6743     //?????車?赤?足??????????
#define    NET_DVR_GET_DENSEFOGDETECTION_CAPABILITIES        6744     //?????車?赤?足??????????????

#define    NET_DVR_GET_THERMOMETRY_SCHEDULE_CAPABILITIES     6750     //?????????足????﹞??㊣??????
#define    NET_DVR_GET_THERMOMETRY_SCHEDULE                  6751     //?????????足????﹞??㊣??????
#define    NET_DVR_SET_THERMOMETRY_SCHEDULE                  6752     //?豕???????足????﹞??㊣??????
#define    NET_DVR_GET_TEMPERTURE_SCHEDULE_CAPABILITIES      6753     //??????????﹞??㊣??????
#define    NET_DVR_GET_TEMPERTURE_SCHEDULE                   6754     //??????????﹞??㊣??????
#define    NET_DVR_SET_TEMPERTURE_SCHEDULE                   6755     //?豕????????﹞??㊣??????
#define NET_DVR_GET_SEARCH_LOG_CAPABILITIES               6756     //?????角???∫??????
#define    NET_DVR_GET_VEHICLEFLOW                           6758     //???????‾??????
#define NET_DVR_GET_IPADDR_FILTERCFG_V50                  6759     //????IP???﹞????????????
#define NET_DVR_SET_IPADDR_FILTERCFG_V50                  6760     //?豕??IP???﹞????????????
#define    NET_DVR_GET_TEMPHUMSENSOR_CAPABILITIES            6761     //???????????????‾??????
#define    NET_DVR_GET_TEMPHUMSENSOR                         6762     //???????????????‾???????谷
#define    NET_DVR_SET_TEMPHUMSENSOR                         6763     //?豕?????????????‾???????谷

#define    NET_DVR_GET_THERMOMETRY_MODE_CAPABILITIES  6764  //????????????????
#define    NET_DVR_GET_THERMOMETRY_MODE               6765  //????????????????
#define    NET_DVR_SET_THERMOMETRY_MODE               6766  //?豕??????????????

#define    NET_DVR_GET_THERMAL_PIP_CAPABILITIES    6767    //????????????????????????
#define    NET_DVR_GET_THERMAL_PIP   6768    //????????????????????????
#define    NET_DVR_SET_THERMAL_PIP   6769    //?豕??????????????????????
#define    NET_DVR_GET_THERMAL_INTELRULEDISPLAY_CAPABILITIES    6770    //?????????????????辰????????
#define    NET_DVR_GET_THERMAL_INTELRULE_DISPLAY   6771    //?????????????????辰????????
#define    NET_DVR_SET_THERMAL_INTELRULE_DISPLAY   6772    //?豕???????????????辰????????
#define    NET_DVR_GET_THERMAL_ALGVERSION   6773   //???????????角????﹞“??∼?㊣?
#define    NET_DVR_GET_CURRENT_LOCK_CAPABILITIES    6774    //???????‾???“????????
#define    NET_DVR_GET_CURRENT_LOCK   6775    //???????‾???“????????
#define    NET_DVR_SET_CURRENT_LOCK   6776    //?豕?????‾???“????????

#define    NET_DVR_DEL_MANUALTHERM_RULE                      6778     //???????????????辰

#define NET_DVR_GET_UPGRADE_INFO    6779    //????????????

#define    NET_DVR_SWITCH_TRANSFER  7000  

#define NET_DVR_GET_MB_POWERCTRLPARA            8000//????????????????
#define    NET_DVR_SET_MB_POWERCTRLPARA            8001 //?豕??????????????
#define NET_DVR_GET_AUTOBACKUPPARA                8002//????℅???㊣?﹞?????
#define NET_DVR_SET_AUTOBACKUPPARA                8003 //?豕??℅???㊣?﹞?????
#define NET_DVR_GET_MB_GPSPARA                    8004//????GPS????
#define NET_DVR_SET_MB_GPSPARA                    8005 //?豕??GPS????
#define NET_DVR_GET_MB_SENSORINPARA                8006//????SENSOR????
#define NET_DVR_SET_MB_SENSORINPARA                8007 //?豕??SENSOR????
#define NET_DVR_GET_GSENSORPARA                    8008//????GSENSOR????
#define NET_DVR_SET_GSENSORPARA                    8009 //?豕??GSENSOR????
#define NET_DVR_GET_MB_DOWNLOADSVRPARA            8010//????????﹞????‾????
#define NET_DVR_SET_MB_DOWNLOADSVRPARA            8011//?豕??????﹞????‾????
#define NET_DVR_GET_PLATERECOG_PARA                8012//??????????㊣?????
#define NET_DVR_SET_PLATERECOG_PARA                8013//?豕????????㊣?????
#define NET_DVR_GET_ENFORCESYS_PARA                8014//?????????邦?谷????
#define NET_DVR_SET_ENFORCESYS_PARA                8015//?豕???????邦?谷????
#define NET_DVR_GET_GPS_DATA                    8016 //????GPS????
#define NET_DVR_GET_ANALOG_ALARMINCFG            8017//????????㊣“??????????
#define NET_DVR_SET_ANALOG_ALARMINCFG            8018//?豕??????㊣“??????????

#define NET_DVR_GET_SYSTEM_CAPABILITIES         8100 //?????豕㊣???????????
#define NET_DVR_GET_EAGLEEYE_CAPABILITIES       8101 //?????豕㊣?????????
#define NET_DVR_GET_SLAVECAMERA_CALIB_V51       8102    //???????????迆㊣那?“????V51
#define NET_DVR_SET_SLAVECAMERA_CALIB_V51       8103    //?豕?????????迆㊣那?“????V51
#define NET_DVR_SET_GOTOSCENE                   8105  //?豕???‾?????迆℅??辰???“?????∼ID

//I??K??E????NVR?迆?﹞????
#define NET_DVR_GET_PTZ_NOTIFICATION        8201//?????角?“??????????PTZ
#define NET_DVR_SET_PTZ_NOTIFICATION        8202//?豕???角?“??????????PTZ
/*****************************?????? start****************************/
#define    NET_DVR_MATRIX_WALL_SET                    9001  //?豕??????????????????
#define    NET_DVR_MATRIX_WALL_GET                    9002  //????????????????????
#define    NET_DVR_WALLWIN_GET                        9003  //?????????????∼??????
#define    NET_DVR_WALLWIN_SET                        9004  //?????????豕???∼??????
#define    NET_DVR_WALLWINPARAM_SET                9005  //?豕?????????∼???角??????
#define    NET_DVR_WALLWINPARAM_GET                9006  //???????????∼???角??????
#define NET_DVR_WALLSCENEPARAM_GET                9007  //?豕?????∼????????
#define NET_DVR_WALLSCENEPARAM_SET                9008  //???????∼????????
#define NET_DVR_MATRIX_GETWINSTATUS             9009  //?????∼??????℅???
#define    NET_DVR_GET_WINASSOCIATEDDEVINFO        9010  //????????????????℅???????
#define    NET_DVR_WALLOUTPUT_GET                    9011  //????????????????????????
#define    NET_DVR_WALLOUTPUT_SET                    9012  //?????????豕??????????????
#define NET_DVR_GET_UNITEDMATRIXSYSTEM          9013  //????????????????℅???
#define NET_DVR_GET_WALL_CFG                    9014  //??????????????????
#define NET_DVR_SET_WALL_CFG                    9015  //?豕????????????????
#define NET_DVR_CLOSE_ALL_WND                    9016  //??㊣??迄???∼??
#define NET_DVR_SWITCH_WIN_TOP                  9017  //?∼??????
#define NET_DVR_SWITCH_WIN_BOTTOM               9018  //?∼?????℅

#define    NET_DVR_CLOSE_ALL_WND_V41                9019  //????????㊣??迄???∼??v41?“???角??????????
#define    NET_DVR_GET_WALL_WINDOW_V41                9020  //???????????????∼??v41
#define    NET_DVR_SET_WALL_WINDOW_V41                9021  //?豕?????????????∼??v41
#define    NET_DVR_GET_CURRENT_SCENE_V41            9022  //?????㊣?∼?????????????????????∼v41
#define    NET_DVR_GET_WALL_SCENE_PARAM_V41        9023  //?????㊣?∼?????????????????????∼v41
#define    NET_DVR_SET_WALL_SCENE_PARAM_V41        9024  //?豕???㊣?∼?????????????????????∼v41
#define NET_DVR_GET_MATRIX_LOGO_CFG             9025  //????logo????
#define NET_DVR_SET_MATRIX_LOGO_CFG             9026  //?豕??logo????
#define NET_DVR_GET_WIN_LOGO_CFG                9027  //?????∼??logo????
#define NET_DVR_SET_WIN_LOGO_CFG                9028  //?豕???∼??logo????
#define NET_DVR_DELETE_LOGO                     9029  //????logo
#define NET_DVR_SET_DISPLAY_EFFECT_CFG            9030  //?豕???????????∫??????v41
#define NET_DVR_GET_DISPLAY_EFFECT_CFG            9031  //?????????????∫??????v41
#define NET_DVR_DEC_PLAY_REMOTE_FILE            9032  //??????﹞?????????
#define NET_DVR_DEC_PLAY_REMOTE_FILE_V50        9314  //??????﹞?????????V50
#define NET_DVR_GET_WIN_ZOOM_STATUS             9033  //?????∼????℅?﹞??車℅???
#define NET_DVR_GET_ALL_MATRIX_LOGOCFG          9034  //?????迄??logo????

/*****************************?????? end******************************/

/*******************************LCD?????? begin******************************************/
#define NET_DVR_SIMULATE_REMOTE_CONTROL         9035    //????????∼??邦 2013-09-05
#define NET_DVR_SET_SCREEN_SIGNAL_CFG            9036    //?豕????????????????
#define    NET_DVR_GET_SCREEN_SIGNAL_CFG            9037    //??????????????????
#define NET_DVR_SET_SCREEN_SPLICE_CFG              9038    //?豕??????????
#define    NET_DVR_GET_SCREEN_SPLICE_CFG            9039    //????????????
#define NET_DVR_GET_SCREEN_FAN_WORK_MODE         9040    //????﹞????∟℅‾﹞???
#define NET_DVR_SET_SCREEN_FAN_WORK_MODE         9041    //?豕??﹞????∟℅‾﹞???
#define NET_DVR_SHOW_SCREEN_WORK_STATUS          9044    //????????℅???
#define NET_DVR_GET_VGA_CFG                      9045    //????VGA????????
#define NET_DVR_SET_VGA_CFG                      9046    //?豕??VGA????????
#define NET_DVR_GET_SCREEN_MENU_CFG                9048   //????????????????
#define NET_DVR_SET_SCREEN_MENU_CFG              9049    //?豕??????????????
#define NET_DVR_SET_SCREEN_DISPLAY_CFG          9050    //?豕?????????? 2013-08-28
#define    NET_DVR_GET_SCREEN_DISPLAY_CFG            9051    //???????????? 2013-08-28

#define NET_DVR_SET_FUSION_CFG                    9052    //?豕??????????????
#define NET_DVR_GET_FUSION_CFG                    9053    //????????????????

#define NET_DVR_SET_PIP_CFG                      9060    //?豕????????????
#define    NET_DVR_GET_PIP_CFG                        9061    //??????????????
#define NET_DVR_SET_DEFOG_LCD                      9073    //?豕?????赤????
#define    NET_DVR_GET_DEFOG_LCD                    9074    //???????赤????
#define NET_DVR_SHOW_IP                          9075    //????IP
#define NET_DVR_SCREEN_MAINTENANCE_WALL            9076    //????????
#define NET_DVR_SET_SCREEN_POS                  9077    //?豕??????????????
#define    NET_DVR_GET_SCREEN_POS                    9078    //????????????????
/*******************************LCD?????? end******************************************/

/*******************************LCD??????V1.2 begin******************************************/
#define    NET_DVR_SCREEN_INDEX_SET                9079    //?????‾???角???????豕??
#define    NET_DVR_SCREEN_INDEX_GET                9080    //?????‾???角??????????
#define NET_DVR_SCREEN_SPLICE_SET               9081    //?豕??????????????
#define NET_DVR_SCREEN_SPLICE_GET               9082    //????????????????
#define NET_DVR_SET_SCREEN_PARAM                9083    //?豕???????角??????
#define NET_DVR_GET_SCREEN_PARAM                9084    //?????????角??????
#define NET_DVR_SET_SWITCH_CFG                  9085    //?豕???“?㊣?????迆????
#define NET_DVR_GET_SWITCH_CFG                  9086    //?????“?㊣?????迆????
#define NET_DVR_SET_POWERON_DELAY_CFG           9087    //?豕?????㊣???迆????
#define NET_DVR_GET_POWERON_DELAY_CFG           9088    //???????㊣???迆????
#define    NET_DVR_SET_SCREEN_POSITION                9089    //?豕??????????????
#define    NET_DVR_GET_SCREEN_POSITION                9090    //????????????????
#define NET_DVR_SCREEN_SCENE_CONTROL            9091    //???????∼????
#define NET_DVR_GET_CURRENT_SCREEN_SCENE        9092    //?????㊣?∼???????∼??
#define NET_DVR_GET_SCREEN_SCENE_PARAM          9093    //???????????∼????????
#define NET_DVR_SET_SCREEN_SCENE_PARAM          9094    //?豕?????????∼????????
#define NET_DVR_GET_EXTERNAL_MATRIX_RELATION    9095    //???????????車????????????????
#define NET_DVR_GET_LCD_AUDIO_CFG                9096     //????LCD????????????
#define NET_DVR_SET_LCD_AUDIO_CFG                9097     //?豕??LCD????????????
#define NET_DVR_GET_LCD_WORK_STATE                9098     //????LCD?????∟℅‾℅???
#define NET_DVR_GET_BOOT_LOGO_CFG                9099    //????LCD???????迆logo????????
#define NET_DVR_SET_BOOT_LOGO_CFG                9100    //?豕??LCD???????迆logo????????

/*******************************LCD??????V1.2 end ******************************************/
#define NET_DVR_GET_STREAM_DST_COMPRESSIONINFO    9101  //??????㊣那????????
#define NET_DVR_SET_STREAM_DST_COMPRESSIONINFO  9102  //?豕????㊣那????????
#define NET_DVR_GET_STREAM_TRANS_STATUS            9103  //?????‾℅???
#define NET_DVR_GET_DEVICE_TRANS_STATUS            9104  //?????豕㊣?℅???℅???
#define NET_DVR_GET_ALLSTREAM_SRC_INFO          9105  //?????迄???‾????
#define NET_DVR_GET_BIG_SCREEN_AUDIO            9106  //?????車??????????
#define NET_DVR_SET_BIG_SCREEN_AUDIO            9107  //?豕???車??????????
#define NET_DVR_GET_DEV_WORK_MODE                9108  //????℅????豕㊣??∟℅‾????
#define NET_DVR_SET_DEV_WORK_MODE                9109  //?豕??℅????豕㊣??∟℅‾????
#define NET_DVR_APPLY_TRANS_CHAN                9110  //∼??‾ID?那??℅????“??
#define NET_DVR_GET_DISPCHAN_CFG                9111  //?迆???????????“??????
#define NET_DVR_SET_DISPCHAN_CFG                9112  //?迆???豕???????“??????

#define NET_DVR_GET_DEC_CHAN_STATUS                9113  //?????????“??????℅???
#define NET_DVR_GET_DISP_CHAN_STATUS            9114  //?????????“??℅???        
#define NET_DVR_GET_ALARMIN_STATUS                9115  //????㊣“??????℅???
#define NET_DVR_GET_ALARMOUT_STATUS                9116  //????㊣“??????℅???
#define NET_DVR_GET_AUDIO_CHAN_STATUS            9117  //????????????℅???

#define    NET_DVR_GET_VIDEO_AUDIOIN_CFG            9118   //??????????????????????
#define NET_DVR_SET_VIDEO_AUDIOIN_CFG            9119   //?豕????????????????????

#define    NET_DVR_SET_BASEMAP_CFG                    9120  //?豕???℅??????
#define NET_DVR_GET_BASEMAP_CFG                    9121  //?????℅??????
#define NET_DVR_GET_VIRTUAL_SCREEN_CFG          9122  //??????????????℅?????????
#define NET_DVR_SET_VIRTUAL_SCREEN_CFG          9123  //?豕????????????℅?????????
#define NET_DVR_GET_BASEMAP_WIN_CFG                9124  //?????℅???∼??????
#define NET_DVR_SET_BASEMAP_WIN_CFG                9125  //?豕???℅???∼??????
#define NET_DVR_DELETE_PICTURE                    9126  //?????℅??
#define NET_DVR_GET_BASEMAP_PIC_INFO            9127  //?????℅??????????
#define    NET_DVR_SET_BASEMAP_WIN_CFG_V40         9128  //?豕???℅???∼??????V40
#define NET_DVR_GET_BASEMAP_WIN_CFG_V40         9129  //?????℅???∼??????V40

#define NET_DVR_GET_DEC_VCA_CFG                    9130    //?????????‾????㊣“??????
#define NET_DVR_SET_DEC_VCA_CFG                    9131    //?豕???????‾????㊣“??????

#define NET_DVR_SET_VS_INPUT_CHAN_INIT_ALL  9132  //???????谷????℅?∼????迄???????“??
#define NET_DVR_GET_VS_INPUT_CHAN_INIT_ALL  9133  //?????谷????℅?∼????迄???????“??????????????
#define NET_DVR_GET_VS_INPUT_CHAN_INIT 9134  //?????谷?????????“??????????????
#define NET_DVR_GET_VS_INPUT_CHAN_CFG  9135  //?????谷?????????“??????????

#define NET_DVR_GET_TERMINAL_CONFERENCE_STATUS    9136    //?????????芍?谷℅???
#define NET_DVR_GET_TERMINAL_INPUT_CFG_CAP        9137    //????????????????????
#define NET_DVR_GET_TERMINAL_INPUT_CFG            9138    //?????????????芍?谷????????
#define NET_DVR_SET_TERMINAL_INPUT_CFG            9139    //?豕???????????芍?谷????????

#define NET_DVR_GET_CONFERENCE_REGION_CAP        9140    //?????????芍?谷???辰????
#define NET_DVR_GET_CONFERENCE_REGION            9141    //?????????芍?谷???辰????
#define NET_DVR_SET_CONFERENCE_REGION            9142    //?豕???????芍?谷???辰????
#define NET_DVR_GET_TERMINAL_CALL_CFG_CAP        9143    //????????????????????
#define NET_DVR_GET_TERMINAL_CALL_CFG            9144    //????????????????
#define NET_DVR_SET_TERMINAL_CALL_CFG            9145    //?豕??????????????
#define NET_DVR_GET_TERMINAL_CTRL_CAP            9146    //????????????????????
#define NET_DVR_TERMINAL_CTRL                    9147    //????????????
#define    NET_DVR_GET_CALL_QUERY_CAP                9148    //?????芍?谷?谷??????
#define NET_DVR_GET_CALLINFO_BY_COND            9149    //∼??????谷??????????

#define    NET_DVR_SET_FUSION_SCALE                9150    //?豕??????????????
#define NET_DVR_GET_FUSION_SCALE                9151    //????????????????

#define NET_DVR_GET_VCS_CAP                        9152    //????MCU??????


#define NET_DVR_GET_TERMINAL_GK_CFG_CAP            9153    //????????℅??芍GK????
#define NET_DVR_GET_TERMINAL_GK_CFG                9154    //????????℅??芍GK????
#define NET_DVR_SET_TERMINAL_GK_CFG                9155    //?豕??????℅??芍GK????
#define NET_DVR_GET_MCU_CONFERENCESEARCH_CAP    9156    //????MCU?豕㊣???????
#define NET_DVR_SET_VS_INPUT_CHAN_CFG  9157  //?豕???谷?????????“??????????
#define NET_DVR_GET_VS_NETSRC_CFG      9158  //?豕???谷??????????????
#define NET_DVR_SET_VS_NETSRC_CFG      9159  //?豕???谷??????????????

#define    NET_DVR_GET_LLDP_CFG                    9160    //????LLDP????
#define    NET_DVR_SET_LLDP_CFG                    9161    //?豕??LLDP????
#define NET_DVR_GET_LLDP_CAP                    9162    //????LLDP??????
#define    NET_DVR_GET_FIBER_CONVERT_BASIC_INFO    9163    //??????????﹞??‾?迄㊣?????
#define    NET_DVR_GET_FIBER_CONVERT_WORK_STATE    9164    //??????????﹞??‾?∟℅‾℅?
#define    NET_DVR_GET_FIBER_CONVERT_TOPOLOGY      9165    //??????????﹞??‾????????
#define    NET_DVR_GET_FC_PORT_REMARKS                9166    //??????????﹞??‾????℅???????
#define    NET_DVR_SET_FC_PORT_REMARKS                9167    //?豕????????﹞??‾????℅???????
#define NET_DVR_GET_PORT_REMARKS_CAP            9168    //??????????﹞??‾????℅?????????

#define NET_DVR_GET_MCU_CONFERENCECONTROL_CAP   9169    //?????芍?谷????????
#define NET_DVR_GET_MCU_TERMINALCONTROL_CAP     9170    //????????????????
#define NET_DVR_GET_MCU_TERIMINALGROUP_CAP      9171    //????????﹞?℅谷????
#define NET_DVR_GET_MCU_TERMINAL_CAP            9174    //???????????赤????
#define NET_DVR_GET_MCU_CONFERENCE_CAP          9175    //?????芍?谷????
#define NET_DVR_GET_MCU_GK_CFG_CAP              9176    //????MCUGK????????
#define NET_DVR_GET_MCU_GK_SERVER_CAP           9177    //????MCUGK﹞???????

#define NET_DVR_GET_EDID_CFG_FILE_INFO  9178  //????EDID????????????
#define NET_DVR_GET_EDID_CFG_FILE_INFO_LIST  9179  //?????迄??EDID????????????
#define NET_DVR_SET_EDID_CFG_FILE_INFO  9180  //?豕??EDID????????????
#define NET_DVR_DEL_EDID_CFG_FILE_INFO  9181  //????EDID?????????????“∼邦?“??????
#define NET_DVR_GET_EDID_CFG_FILE_INFO_CAP  9182  //EDID??????????????????

#define NET_DVR_GET_SUBWND_DECODE_OSD  9183  //????℅??∼??????OSD????
#define NET_DVR_GET_SUBWND_DECODE_OSD_ALL  9184  //?????迄??℅??∼??????OSD????
#define NET_DVR_SET_SUBWND_DECODE_OSD  9185  //?豕??℅??∼??????OSD????
#define NET_DVR_GET_SUBWND_DECODE_OSD_CAP  9186  //????℅??∼??????OSD??????????
#define NET_DVR_GET_DECODE_CHANNEL_OSD  9187  //?????????“??OSD????
#define NET_DVR_SET_DECODE_CHANNEL_OSD  9188  //?豕???????“??OSD????


#define NET_DVR_GET_OUTPUT_PIC_INFO             9200    //??????????????????
#define NET_DVR_SET_OUTPUT_PIC_INFO             9201    //?豕????????????????
#define NET_DVR_GET_OUTPUT_PIC_WIN_CFG          9202    //???????????????∼??????
#define NET_DVR_SET_OUTPUT_PIC_WIN_CFG          9203    //?豕?????????????∼??????
#define NET_DVR_GET_OUTPUT_ALL_PIC_WIN_CFG      9204    //???????????迄???????∼??????
#define NET_DVR_DELETE_OUPUT_PIC                9205    //??????????????
#define NET_DVR_GET_OUTPUT_OSD_CFG              9206    //??????????OSD????
#define NET_DVR_SET_OUTPUT_OSD_CFG              9207    //?豕????????OSD????
#define NET_DVR_GET_OUTPUT_ALL_OSD_CFG          9208    //???????????迄??OSD????
#define NET_DVR_GET_CHAN_RELATION               9209    //????㊣角???“??????℅???????
#define NET_DVR_SET_CHAN_RELATION               9210    //?豕??㊣角???“??????℅???????
#define NET_DVR_GET_ALL_CHAN_RELATION           9211    //?????迄??㊣角???“??????℅???????
#define NET_DVR_GET_NS_RING_CFG                    9212    //????????∼??﹞??????
#define NET_DVR_SET_NS_RING_CFG                   9213    //?豕??????∼??﹞??????
#define NET_DVR_GET_NS_RING_STATUS              9214    //????????∼??﹞??℅???
#define NET_DVR_GET_OPTICAL_PORT_INFO            9220    //????????????
#define NET_DVR_SET_OPTICAL_PORT_INFO            9221    //?豕??????????
#define NET_DVR_GET_OPTICAL_CHAN_RELATE_CFG        9222    //????㊣角???“????????????????????
#define NET_DVR_SET_OPTICAL_CHAN_RELATE_CFG        9223    //?豕??㊣角???“????????????????????
#define  NET_DVR_GET_WIN_ROAM_SWITCH_CFG        9224    //?????????‾?∼??????????????
#define  NET_DVR_SET_WIN_ROAM_SWITCH_CFG        9225    //?豕???????‾?∼??????????????
#define    NET_DVR_START_SCREEN_CRTL                9226    //????????????
#define    NET_DVR_GET_SCREEN_FLIE_LIST            9227    //??????????????㊣赤
#define    NET_DVR_GET_SCREEN_FILEINFO                9228    //????????????????????
#define    NET_DVR_SET_SCREEN_FILEINFO             9229    //?豕??????????????????

/*******************************?????角LED?????? begin***************************************/
#define NET_DVR_GET_LED_OUTPUT_CFG                9230    //????﹞????“????????
#define NET_DVR_SET_LED_OUTPUT_CFG                9231    //?豕??﹞????“????????
#define NET_DVR_GET_LED_OUTPUT_PORT_CFG            9232    //????LED﹞????“????????????
#define NET_DVR_SET_LED_OUTPUT_PORT_CFG            9233    //?豕??LED﹞????“????????????
#define NET_DVR_GET_LED_DISPLAY_AREA_CFG        9234    //????LED﹞????“???????辰
#define NET_DVR_SET_LED_DISPLAY_AREA_CFG        9235    //?豕??LED﹞????“???????辰
#define NET_DVR_GET_LED_PORT_CFG                9236    //????LED﹞????“????????
#define NET_DVR_SET_LED_PORT_CFG                9237    //?豕??LED﹞????“????????
#define NET_DVR_GET_LED_DISPLAY_CFG                9238    //????LED﹞????“????????
#define NET_DVR_SET_LED_DISPLAY_CFG                9239    //?豕??LED﹞????“????????
#define NET_DVR_GET_ALL_LED_PORT_CFG            9240    //????LED﹞????“????????????
#define NET_DVR_SAVE_LED_CONFIGURATION            9241    //????????
#define NET_DVR_GET_LED_TEST_SIGNAL_CFG            9242    //????LED??????????????
#define NET_DVR_SET_LED_TEST_SIGNAL_CFG            9243    //?豕??LED??????????????
#define NET_DVR_GET_LED_NOSIGNAL_CFG            9244    //????LED????????????????????
#define NET_DVR_SET_LED_NOSIGNAL_CFG            9245    //?豕??LED????????????????????
#define NET_DVR_GET_LED_INPUT_CFG                9246    //????LED﹞????“????????
#define NET_DVR_SET_LED_INPUT_CFG                9247    //?豕??LED﹞????“????????
#define NET_DVR_GET_LED_RECV_GAMMA_CFG            9248    //?????????“GAMMA㊣赤????
#define NET_DVR_SET_LED_RECV_GAMMA_CFG            9249    //?豕???????“GAMMA㊣赤????
#define NET_DVR_GET_LED_RECV_CFG                9250    //?????????“?迄㊣?????
#define NET_DVR_SET_LED_RECV_CFG                9251    //?豕???????“?迄㊣?????
#define NET_DVR_GET_LED_RECV_ADVANCED_CFG        9252    //?????????“????????
#define NET_DVR_SET_LED_RECV_ADVANCED_CFG        9253    //?豕???????“????????
#define NET_DVR_GET_LED_SCREEN_DISPLAY_CFG        9254    //????LED??????????
#define NET_DVR_SET_LED_SCREEN_DISPLAY_CFG        9255    //?豕??LED??????????
/*******************************?????角LED?????? end*****************************************/

#define NET_DVR_GET_INSERTPLAY_PROGRESS            9273    //????????????

#define    NET_DVR_GET_SCREEN_CONFIG               9260    //????????﹞????‾????
#define    NET_DVR_SET_SCREEN_CONFIG               9261    //?豕??????﹞????‾????
#define NET_DVR_GET_SCREEN_CONFIG_CAP              9262    //????????﹞????‾??????????

#define    NET_DVR_GET_SCHEDULE_PUBLISH_PROGRESS    9271    //????????﹞???????
#define    NET_DVR_GET_PUBLISH_UPGRADE_PROGRESS    9272    //????????﹞???????????????

#define NET_DVR_GET_INPUT_BOARD_CFG                9281    //????????∼?????????
#define NET_DVR_GET_INPUT_BOARD_CFG_LIST        9282    //????????∼???????????㊣赤
#define NET_DVR_SET_INPUT_BOARD_CFG                9283    //?豕??????∼?????????

#define NET_DVR_GET_INPUT_SOURCE_TEXT_CAP    9284            //??????????℅?﹞?????????
#define NET_DVR_GET_INPUT_SOURCE_TEXT_CFG    9285            //??????????℅?﹞?????????
#define NET_DVR_GET_INPUT_SOURCE_TEXT_CFG_LSIT 9286        //??????????℅?﹞???????????㊣赤
#define NET_DVR_SET_INPUT_SOURCE_TEXT_CFG    9287            //?豕????????℅?﹞?????????
#define NET_DVR_SET_INPUT_SOURCE_TEXT_CFG_LIST 9288        //?豕????????℅?﹞???????????㊣赤
#define NET_DVR_GET_INPUT_SOURCE_RESOLUTION_CAP    9289    //??????????℅??“??﹞?㊣???????
#define NET_DVR_GET_INPUT_SOURCE_RESOLUTION_CFG    9290    //??????????℅??“??﹞?㊣???????
#define NET_DVR_GET_INPUT_SOURCE_RESOLUTION_CFG_LIST    9291 //??????????℅??“??﹞?㊣?????㊣赤
#define NET_DVR_SET_INPUT_SOURCE_RESOLUTION_CFG    9292    //?豕????????℅??“??﹞?㊣???????
#define NET_DVR_SET_INPUT_SOURCE_RESOLUTION_CFG_LIST  9293  //?豕????????℅??“??﹞?㊣???????
#define NET_DVR_GET_LED_AREA_INFO_LIST  9295  //????LED???辰??㊣赤

#define NET_DVR_GET_DISPINPUT_CFG  9296  //????????????????
#define NET_DVR_GET_DISPINPUT_CFG_LIST  9297  //?????迄??????????????
#define NET_DVR_SET_DISPINPUT_CFG  9298  //?豕??????????????
#define NET_DVR_GET_DISPINPUT_CFG_CAP  9299  //??????????????????????
#define NET_DVR_GET_CURRENT_VALID_PORT          9300    //?????㊣?∼???∫??,??????????????

#define    NET_DVR_SET_ONLINE_UPGRADE                9301    //???赤????????
#define NET_DVR_GET_ONLINEUPGRADE_PROGRESS      9302    //????????????????
#define    NET_DVR_GET_FIRMWARECODE                9303    //??????㊣???
#define NET_DVR_GET_ONLINEUPGRADE_SERVER        9304    //????????﹞????‾℅???
#define NET_DVR_GET_ONLINEUPGRADE_VERSION       9305    //??????∼?㊣?????
#define NET_DVR_GET_RECOMMEN_VERSION            9306    //?足????﹞?????????????∼?㊣?
#define NET_DVR_GET_ONLINEUPGRADE_ABILITY       9309    //??????????????????

#define    NET_DVR_GET_FIBER_CONVERT_BASIC_INFO_V50     9310    //??????????????﹞??‾?迄㊣?????V50
#define    NET_DVR_GET_FIBER_CONVERT_WORK_STATE_V50     9311    //??????????????﹞??‾?∟℅‾℅???

#define NET_SDK_LED_SCREEN_CHECK            9312    //LED????????
#define NET_SDK_GENERATE_OUTPUT_CONTROL	    9315    //?“???????????????谷????
#define  NET_SDK_GET_MATRIX_STATUS_V51   9313    /*????????℅??????“℅???*/

//DS-19D2000-S V2.0???? ㊣“???????????????邦????
#define  NET_DVR_GET_ALARM_LINKAGE_CFG    9316    //???????﹞㊣“??????????????
#define  NET_DVR_SET_ALARM_LINKAGE_CFG    9317    //?豕?????﹞㊣“??????????????


#define NET_DVR_GET_RS485_WORK_MODE             10001 //????RS485?????∟℅‾????
#define NET_DVR_SET_RS485_WORK_MODE             10002 //?豕??RS485?????∟℅‾????
#define NET_DVR_GET_SPLITTER_TRANS_CHAN_CFG     10003 //??????﹞??‾???‾?“??????
#define NET_DVR_SET_SPLITTER_TRANS_CHAN_CFG     10004 //?豕????﹞??‾???‾?“??????

#define NET_DVR_GET_RS485_PROTOCOL_VERSION              10301       //????RS485???谷??∼?㊣?????
#define	 NET_DVR_ALARMHOST_REGISTER_DETECTOR  10302			//℅???℅??芍?????‾

#define  NET_DVR_GET_SIP_CFG                    11001   //IP???????迆????SIP????
#define  NET_DVR_SET_SIP_CFG                    11002   //IP???????迆?豕??SIP????
#define  NET_DVR_GET_IP_VIEW_DEVCFG                11003   //????IP????﹞??迆????
#define  NET_DVR_SET_IP_VIEW_DEVCFG                11004   //?豕??IP????﹞??迆????
#define  NET_DVR_GET_IP_VIEW_AUDIO_CFG            11005   //????IP????﹞??迆????????
#define  NET_DVR_SET_IP_VIEW_AUDIO_CFG            11006   //?豕??IP????﹞??迆????????
#define     NET_DVR_GET_IP_VIEW_CALL_CFG            11007   //????IP????﹞??迆????????
#define  NET_DVR_SET_IP_VIEW_CALL_CFG            11008   //?豕??IP????﹞??迆????????
#define     NET_DVR_GET_AUDIO_LIMIT_ALARM_CFG        11009    //?????迄??????????????
#define     NET_DVR_SET_AUDIO_LIMIT_ALARM_CFG        11010    //?豕???迄??????????????
#define     NET_DVR_GET_BUTTON_DOWN_ALARM_CFG        11011    //????∼???∼???????????????
#define     NET_DVR_SET_BUTTON_DOWN_ALARM_CFG        11012    //?豕??∼???∼???????????????

#define  NET_DVR_GET_ISCSI_CFG                  11070   // ????ISCSI???????????谷 
#define  NET_DVR_SET_ISCSI_CFG                  11071   // ????ISCSI???????????谷 

#define NET_DVR_GET_SECURITYMODE                12004   //?????㊣?∼∼???????
//2013-11-21 ?????豕㊣??㊣?∼????????????
#define  NET_DVR_GET_TEMP_HUMI                  12005

//2014-02-15 ????IPC℅?????????????
#define  NET_DVR_SET_ALARMSOUNDMODE             12006   //?豕??㊣“???迄??????
#define  NET_DVR_GET_ALARMSOUNDMODE             12007   //????㊣“???迄??????

#define    NET_DVR_SET_IPDEVICE_ACTIVATED       13000//?“??NVR?∟???∼???豕㊣?
#define NET_DVR_GET_DIGITAL_CHAN_SECURITY_STATUS    13001   //??????℅??“???????豕㊣?∼???℅???
#define    NET_DVR_GET_ACTIVATE_IPC_ABILITY     13003    //????NVR?∟??IPC??????


/*******************************?????????????迆 start***********************************/
#define NET_DVR_GET_VIDEO_INTERCOM_DEVICEID_CFG  16001  //?????????????豕㊣?㊣角??
#define NET_DVR_SET_VIDEO_INTERCOM_DEVICEID_CFG  16002  //?豕???????????豕㊣?㊣角??
#define NET_DVR_SET_PRIVILEGE_PASSWORD           16003  //?豕???“??????????????
#define NET_DVR_GET_OPERATION_TIME_CFG           16004  //??????℅‾?㊣??????
#define NET_DVR_SET_OPERATION_TIME_CFG           16005  //?豕????℅‾?㊣??????
#define NET_DVR_GET_VIDEO_INTERCOM_RELATEDEV_CFG 16006  //?????????????豕㊣?????
#define NET_DVR_SET_VIDEO_INTERCOM_RELATEDEV_CFG 16007  //?豕???????????豕㊣?????
#define NET_DVR_REMOTECONTROL_NOTICE_DATA        16008  //??????????﹞?
#define NET_DVR_REMOTECONTROL_GATEWAY            16009  //????????
#define NET_DVR_REMOTECONTROL_OPERATION_AUTH     16010  //??℅‾?“???谷?∟

#define NET_DVR_GET_VIDEO_INTERCOM_IOIN_CFG      16016  //????IO????????
#define NET_DVR_SET_VIDEO_INTERCOM_IOIN_CFG      16017  //?豕??IO????????
#define NET_DVR_GET_VIDEO_INTERCOM_IOOUT_CFG     16018  //????IO????????
#define NET_DVR_SET_VIDEO_INTERCOM_IOOUT_CFG     16019  //?豕??IO????????
#define NET_DVR_GET_ELEVATORCONTROL_CFG          16020  //?????????‾????
#define NET_DVR_SET_ELEVATORCONTROL_CFG          16021  //?豕???????‾????
#define NET_DVR_GET_VIDEOINTERCOM_STREAM         16022  //?????????????‾?“??????
#define NET_DVR_SET_VIDEOINTERCOM_STREAM         16023  //?豕???????????‾?“??????
#define NET_DVR_GET_WDR_CFG                      16024  //?????赤????????????
#define NET_DVR_SET_WDR_CFG                      16025  //?豕???赤????????????
#define NET_DVR_GET_VIS_DEVINFO                  16026  //???????豕㊣?㊣角??????
#define NET_DVR_GET_VIS_REGISTER_INFO            16027  //???????豕㊣?℅??芍???豕㊣?????
#define NET_DVR_GET_ELEVATORCONTROL_CFG_V40      16028  //?????????‾????-????
#define NET_DVR_SET_ELEVATORCONTROL_CFG_V40      16029  //?豕???????‾????-????
#define NET_DVR_GET_CALL_ROOM_CFG                 16030  //????∼??邦????℅??∫????
#define NET_DVR_SET_CALL_ROOM_CFG                 16031  //?豕??∼??邦????℅??∫????
#define NET_DVR_VIDEO_CALL_SIGNAL_PROCESS        16032  //?????∼???????????赤
#define NET_DVR_GET_CALLER_INFO                  16033  //?????‾???∟??????
#define NET_DVR_GET_CALL_STATUS                  16034  //?????“?∼℅???
#define NET_DVR_GET_SERVER_DEVICE_INFO           16035  //?????豕㊣???㊣赤
#define NET_DVR_SET_CALL_SIGNAL                  16036  //???????????迆??﹞???????
#define NET_DVR_GET_VIDEO_INTERCOM_ALARM_CFG       16037    //????????????㊣“??????????
#define NET_DVR_SET_VIDEO_INTERCOM_ALARM_CFG       16038    //?豕??????????㊣“??????????
#define NET_DVR_GET_RING_LIST                    16039    //?谷????????????㊣赤

#define NET_DVR_GET_ROOM_CUSTOM_CFG             16040  //﹞???℅??“??????
#define NET_DVR_SET_ROOM_CUSTOM_CFG             16041  //﹞???℅??“???豕??
#define NET_DVR_GET_ELEVATORCONTROL_CFG_V50     16042  //?????????‾????V50
#define NET_DVR_SET_ELEVATORCONTROL_CFG_V50     16043  //?豕???????‾????V50
#define NET_DVR_GET_SIP_CFG_V50                 16044   //????SIP????V50
#define NET_DVR_SET_SIP_CFG_V50                 16045   //?豕??SIP????V50
#define NET_DVR_GET_NOTICE_VIDEO_DATA           16050  //????????????

/*******************************?????????????迆 end***********************************/

#define    NET_DVR_DEBUGINFO_START                     18000    //?????豕㊣??‾???????????邦??
#define    NET_DVR_AUTO_TEST_START                     18001    //℅????????∟????????

#define NET_DVR_GET_SELFCHECK_RESULT        20000    //?????豕㊣?℅??足?芍??
#define NET_DVR_SET_TEST_COMMAND            20001    //?豕???????????邦??
#define NET_DVR_SET_TEST_DEVMODULE          20002    //?豕?????????????谷?????邦??
#define NET_DVR_GET_TEST_DEVMODULE          20003    //???????????????谷?????邦??

#define NET_DVR_SET_AUTOFOCUS_TEST          20004    //㊣???℅??????????? 2013-10-26
#define NET_DVR_CHECK_USER_STATUS           20005    //?足?????∫??﹞?????
#define NET_DVR_GET_TEST_COMMAND            20010    //?????????????邦??
#define NET_DVR_GET_DIAL_SWITCH_CFG         20200    //????????????????
#define NET_DVR_SET_AGING_TRICK_SCAN          20201  //?豕???????∼?車?∟??????
#define NET_DVR_GET_ECCENTRIC_CORRECT_STATE   20202  //????????????????℅???

#define	NET_DVR_GET_THERMOMETRYRULE_TEMPERATURE_INFO   23001	//???????????????辰????????

#define NET_DVR_T1_TEST_CMD                    131073 //?㊣?????邦?????????“?????????辰????㊣???????﹞?????℅?????.?????∟???????車??1024
//??????????????<T1TestCmd type="0"/>//?????豕㊣??????????????迆??

// ??﹞??“???????????????????邦??
#define NET_DVR_GET_MEMU_OUTPUT_MODE            155649            // ????????????????
#define NET_DVR_SET_MEMU_OUTPUT_MODE            155650            // ?豕??????????????

/***************************DS9000?????邦??(_V30) end *****************************/

#define NET_DVR_GET_DEV_LOGIN_RET_INFO      16777200  //?豕㊣?????﹞???????


#define NET_DVR_GET_TEST_VERSION_HEAD           268435441   //????????∼?㊣??﹞
#define NET_DVR_SET_TEST_VERSION_HEAD           268435442   //?豕??????∼?㊣??﹞
#define NET_DVR_GET_TEST_VERSION_HEAD_V1        268435443   //????????∼?㊣??﹞-????∼?
#define NET_DVR_SET_TEST_VERSION_HEAD_V1        268435444   //?豕??????∼?㊣??﹞-????∼?
#define NET_DVR_GET_TEST_VERSION_HEAD_V2        268435445   //????????∼?㊣??﹞-????∼?
#define NET_DVR_SET_TEST_VERSION_HEAD_V2        268435446   //?豕??????∼?㊣??﹞-????∼?

#define NET_DVR_GET_TEST_VERSION_HEAD_ONLY_0    268435447   //????????∼?㊣??﹞,?㊣?∼????????∼?㊣?
#define NET_DVR_SET_TEST_VERSION_HEAD_ONLY_0    268435448   //?豕??????∼?㊣??﹞,?㊣?∼????????∼?㊣?


#define MAX_LOCAL_ADDR_LEN             96        //SOCKS℅??車㊣???????????
#define    MAX_COUNTRY_NAME_LEN          4        //?迆???辰???????∟??

/************************DVR???? begin***************************/

/* ㊣“?? */
//?‾?角??
#define MAJOR_ALARM                        0x1
//???角??
#define MINOR_ALARM_IN                    0x1        /* ㊣“?????? */
#define MINOR_ALARM_OUT                    0x2        /* ㊣“?????? */
#define MINOR_MOTDET_START                0x3        /* ?????足??㊣“?????? */
#define MINOR_MOTDET_STOP                0x4        /* ?????足??㊣“???芍?? */
#define MINOR_HIDE_ALARM_START            0x5        /* ????㊣“?????? */
#define MINOR_HIDE_ALARM_STOP            0x6        /* ????㊣“???芍?? */
#define MINOR_VCA_ALARM_START            0x7        /*????㊣“??????*/
#define MINOR_VCA_ALARM_STOP            0x8        /*????㊣“??????*/
#define MINOR_ITS_ALARM_START           0x09    // ???“????㊣“??????
#define MINOR_ITS_ALARM_STOP            0x0A    // ???“????㊣“???芍??
//2010-11-10 ????㊣“??????
#define MINOR_NETALARM_START            0x0b    /*????㊣“??????*/
#define MINOR_NETALARM_STOP             0x0c    /*????㊣“???芍??*/
//2010-12-16 ㊣“??∼?????????"MINOR_ALARM_IN"????????
#define MINOR_NETALARM_RESUME            0x0d    /*????㊣“??????*/
//2012-4-5 IPC PIR????????????㊣“??
#define MINOR_WIRELESS_ALARM_START      0x0e  /* ????㊣“?????? */
#define MINOR_WIRELESS_ALARM_STOP          0x0f /* ????㊣“???芍?? */
#define MINOR_PIR_ALARM_START           0x10  /* ????????㊣“?????? */
#define MINOR_PIR_ALARM_STOP               0x11  /* ????????㊣“???芍?? */
#define MINOR_CALLHELP_ALARM_START      0x12  /* ????㊣“?????? */
#define MINOR_CALLHELP_ALARM_STOP          0x13  /* ????㊣“???芍?? */
#define MINOR_IPCHANNEL_ALARMIN_START   0x14  //??℅??“??㊣“????????????PCNVR??????????℅??“????MINOR_ALARM_IN?迆?迆?∼??℅??“??㊣“???????????㊣??10s??????????MINOR_ALARM_IN???迆?迆?∼??℅??“??㊣“???????芍???㊣
#define MINOR_IPCHANNEL_ALARMIN_STOP    0x15  //??℅??“??㊣“????????????????
#define MINOR_DETECTFACE_ALARM_START    0x16  /* ?????足??㊣“?????? */
#define MINOR_DETECTFACE_ALARM_STOP      0x17  /* ?????足??㊣“???芍?? */
#define MINOR_VQD_ALARM_START           0x18  //VQD㊣“??
#define MINOR_VQD_ALARM_STOP            0x19  //VQD㊣“???芍?? 
#define MINOR_VCA_SECNECHANGE_DETECTION 0x1a  //???∼?足??㊣“?? 2013-07-16

#define MINOR_SMART_REGION_EXITING_BEGIN            0x1b  //???????辰?足??????
#define MINOR_SMART_REGION_EXITING_END              0x1c  //???????辰?足???芍??
#define MINOR_SMART_LOITERING_BEGIN                 0x1d  //?????足??????
#define MINOR_SMART_LOITERING_END                   0x1e  //?????足???芍??

#define MINOR_VCA_ALARM_LINE_DETECTION_BEGIN        0x20  
#define MINOR_VCA_ALARM_LINE_DETECTION_END          0x21  
#define MINOR_VCA_ALARM_INTRUDE_BEGIN                0x22  //???辰?足??????    
#define MINOR_VCA_ALARM_INTRUDE_END                       0x23  //???辰?足???芍??    
#define MINOR_VCA_ALARM_AUDIOINPUT                    0x24   //?????足??????
#define MINOR_VCA_ALARM_AUDIOABNORMAL                 0x25   //?迄????㊣?
#define MINOR_VCA_DEFOCUS_DETECTION_BEGIN           0x26  //?谷???足??????
#define MINOR_VCA_DEFOCUS_DETECTION_END                0x27  //?谷???足???芍??

//????NVR
#define MINOR_EXT_ALARM                             0x28/*IPC????㊣“??*/
#define MINOR_VCA_FACE_ALARM_BEGIN                    0x29    /*?????足??????*/
#define MINOR_SMART_REGION_ENTRANCE_BEGIN           0x2a  //???????辰?足??????
#define MINOR_SMART_REGION_ENTRANCE_END             0x2b  //???????辰?足???芍??
#define MINOR_SMART_PEOPLE_GATHERING_BEGIN          0x2c  //???㊣?????足??????
#define MINOR_SMART_PEOPLE_GATHERING_END            0x2d  //???㊣?????足???芍??
#define MINOR_SMART_FAST_MOVING_BEGIN               0x2e  //?足???????足??????
#define MINOR_SMART_FAST_MOVING_END                 0x2f  //?足???????足???芍??

#define MINOR_VCA_FACE_ALARM_END                    0x30    /*?????足???芍??*/
#define MINOR_VCA_SCENE_CHANGE_ALARM_BEGIN            0x31   /*???∼㊣??邦?足??????*/
#define MINOR_VCA_SCENE_CHANGE_ALARM_END            0x32   /*???∼㊣??邦?足???芍??*/
#define MINOR_VCA_ALARM_AUDIOINPUT_BEGIN            0x33   /*?????足??????????*/
#define MINOR_VCA_ALARM_AUDIOINPUT_END                0x34   /*?????足???????芍??*/
#define MINOR_VCA_ALARM_AUDIOABNORMAL_BEGIN            0x35  /*?迄????㊣??足??????*/
#define MINOR_VCA_ALARM_AUDIOABNORMAL_END            0x36  /*?迄????㊣??足???芍??*/

#define MINOR_VCA_LECTURE_DETECTION_BEGIN           0x37  //?????足??????㊣“??
#define MINOR_VCA_LECTURE_DETECTION_END             0x38  //?????足???芍??㊣“??
#define MINOR_VCA_ALARM_AUDIOSTEEPDROP              0x39  //?迄?????? 2014-03-21
#define MINOR_VCA_ANSWER_DETECTION_BEGIN            0x3a  //?????????足??????㊣“??
#define MINOR_VCA_ANSWER_DETECTION_END              0x3b  //?????????足???芍??㊣“??

#define MINOR_SMART_PARKING_BEGIN                   0x3c   //?????足??????
#define MINOR_SMART_PARKING_END                     0x3d   //?????足???芍??
#define MINOR_SMART_UNATTENDED_BAGGAGE_BEGIN        0x3e   //???﹞?????足??????
#define MINOR_SMART_UNATTENDED_BAGGAGE_END          0x3f   //???﹞?????足???芍??
#define MINOR_SMART_OBJECT_REMOVAL_BEGIN            0x40   //???﹞?????足??????
#define MINOR_SMART_OBJECT_REMOVAL_END              0x41   //???﹞?????足???芍??
#define MINOR_SMART_VEHICLE_ALARM_START             0x46   //?????足??????
#define MINOR_SMART_VEHICLE_ALARM_STOP              0x47   //?????足???芍??
#define MINOR_THERMAL_FIREDETECTION                 0x48   //???????????足???足??????
#define MINOR_THERMAL_FIREDETECTION_END             0x49   //???????????足???足???芍??
#define MINOR_SMART_VANDALPROOF_BEGIN               0x50   //﹞??????足??????
#define MINOR_SMART_VANDALPROOF_END                 0x51   //﹞??????足???芍??

#define MINOR_FACESNAP_MATCH_ALARM_START            0x55  /*????㊣???㊣“??????*/
#define MINOR_FACESNAP_MATCH_ALARM_STOP             0x56  /*????㊣???㊣“???芍??*/
#define MINOR_WHITELIST_FACESNAP_MATCH_ALARM_START  0x57  /*∼℅????????㊣????“?∼?迆????㊣“??????*/
#define MINOR_WHITELIST_FACESNAP_MATCH_ALARM_STOP   0x58  /*∼℅????????㊣????“?∼?迆????㊣“???芍??*/

#define MINOR_THERMAL_SHIPSDETECTION                0x5a   //???????????足???足??
#define MINOR_THERMAL_THERMOMETRY_EARLYWARNING_BEGIN 0x5b  //???????????∟??????
#define MINOR_THERMAL_THERMOMETRY_EARLYWARNING_END  0x5c   //???????????∟???芍??
#define MINOR_THERMAL_THERMOMETRY_ALARM_BEGIN       0x5d   //??????????㊣“??????
#define MINOR_THERMAL_THERMOMETRY_ALARM_END         0x5e   //??????????㊣“???芍??
#define MINOR_THERMAL_THERMOMETRY_DIFF_ALARM_BEGIN  0x5f   //??????????㊣“??????
#define MINOR_THERMAL_THERMOMETRY_DIFF_ALARM_END    0x60   //??????????㊣“???芍??
#define MINOR_FACE_THERMOMETRY_ALARM                0x63   //????????㊣“??
#define MINOR_SMART_DENSEFOGDETECTION_BEGIN         0x6e   //?車?赤?足??????
#define MINOR_SMART_DENSEFOGDETECTION_END           0x6f   //?車?赤?足???芍??
#define MINOR_RUNNING_ALARM                         0x70   //㊣????足??
#define MINOR_RETENTION_ALARM                       0x71   //?????足??
#define MINOR_SAFETY_HELMET_ALARM_START             0x72  /*?????‾∼????㊣?足??㊣“??????*/
#define MINOR_SAFETY_HELMET_ALARM_STOP              0x73  /*?????‾∼????㊣?足??㊣“???芍??*/
#define MINOR_HFPD_ALARM_START                      0x74  /*???????㊣?足??㊣“??????*/
#define MINOR_HFPD_ALARM_STOP                       0x75  /*???????㊣?足??㊣“???芍??*/
#define MINOR_MIXED_TARGET_ALARM_START              0x76  /*?足????㊣那?足??㊣“??????*/
#define MINOR_MIXED_TARGET_ALARM_STOP               0x77  /*?足????㊣那?足??㊣“???芍??*/
#define MINOR_VCA_GET_UP_ALARM_BEGIN                0x80   //?????足??㊣“??????
#define MINOR_VCA_GET_UP_ALARM_END                  0x81   //?????足??㊣“???芍??
#define MINOR_VCA_ADV_REACH_HEIGHT_ALARM_BEGIN      0x82   //????????㊣“??????
#define MINOR_VCA_ADV_REACH_HEIGHT_ALARM_END        0x83   //????????㊣“???芍??
#define MINOR_VCA_TOILET_TARRY_ALARM_BEGIN          0x84   //???????㊣㊣“??????
#define MINOR_VCA_TOILET_TARRY_ALARM_END            0x85   //???????㊣㊣“???芍??
#define MINOR_HUMAN_RECOGNITION_ALARM_BEGIN         0x86   //??????㊣?㊣“??????
#define MINOR_HUMAN_RECOGNITION_ALARM_END           0x87   //??????㊣?㊣“???芍??
#define MINOR_STUDENTS_STOODUP_ALARM_BEGIN          0x88   //?∫?迆????㊣“??????
#define MINOR_STUDENTS_STOODUP_ALARM_END            0x89   //?∫?迆????㊣“???芍??
#define MINOR_FRAMES_PEOPLE_COUNTING_ALARM          0x8a   //???辰????????㊣“??
#define MINOR_FACE_SNAP_ALARM_BEGIN                 0x8b   //????℅???㊣“??????
#define MINOR_FACE_SNAP_ALARM_END                   0x8c   //????℅???㊣“???芍??
#define MINOR_TEACHER_BEHAVIOR_DETECT_ALARM_BEGIN   0x8d   //?????????足??㊣“??????
#define MINOR_TEACHER_BEHAVIOR_DETECT_ALARM_END     0x8e   //?????????足??㊣“???芍??
#define MINOR_PERIMETER_CAPTURE_ALARM_BEGIN         0x8f   //????℅???㊣“??????
#define MINOR_PERIMETER_CAPTURE_ALARM_END           0x90   //????℅???㊣“???芍??
#define MINOR_UNREGISTERED_STREET_VENDOR_ALARM      0x91  //﹞?﹞“∼???㊣“??

#define MINOR_PERSON_QUEUE_TIME_ALARM_BEGIN         0x92   //?????㊣?∟?足??㊣“??????
#define MINOR_PERSON_QUEUE_TIME_ALARM_END           0x93   //?????㊣?∟?足??㊣“???芍??
#define MINOR_PERSON_QUEUE_COUNTING_ALARM_BEGIN     0x94   //?????????足??㊣“??????
#define MINOR_PERSON_QUEUE_COUNTING_ALARM_END       0x95   //?????????足??㊣“???芍??
#define MINOR_FACE_SNAP_MATCH_FAILURE_ALARM_START   0x96   //????㊣????∫∼?㊣“??????
#define MINOR_FACE_SNAP_MATCH_FAILURE_ALARM_END     0x97   //????㊣????∫∼?㊣“???芍??


#define MINOR_ACCESS_CONTROLLER_EVENT               0x100  //?????‾?迆????
#define MINOR_VIDEO_INTERCOM_EVENT                  0x101  //?????????豕㊣?????
#define MINOR_GJD_EVENT                             0x102  //GJD㊣“???‾?迆????
#define MINOR_LUMINITE_EVENT                        0x103  // LUMINITE㊣“???‾?迆????
#define MINOR_OPTEX_EVENT                           0x104  // OPTEX㊣“???‾?迆????
#define MINOR_CAMERA_DETECTOR_EVENT                 0x105  // ?????‾????
#define MINOR_SECURITY_CONTROL_PANEL_EVENT          0x106  //????㊣“???‾?迆????

#define MINOR_VCA_SPACE_CHANGE_START                0x10c //???角?足???足??????
#define MINOR_VCA_SPACE_CHANGE_STOP                 0x10d //???角?足???足???芍??
#define MINOR_MANUAL_ALARM                          0x10e //????㊣“??
#define MINOR_DETECTOR_ALARM                        0x10f //?????‾㊣“??
#define MINOR_LINKAGE_ALARM                         0x110 //????㊣“??
#define MINOR_VCA_SITUATION_ANALYSIS_START          0x111 //????﹞????足??????
#define MINOR_VCA_SITUATION_ANALYSIS_STOP           0x112 //????﹞????足???芍??
#define MINOR_FIRE_ALARM                            0x113 //????㊣“??
#define MINOR_SUPERVISE_ALARM                       0x114 //?角??㊣“??
#define MINOR_SHIELD_ALARM                          0x115 //??㊣?㊣“??
#define MINOR_ABNORMAL_ALARM                        0x116 //????㊣“??
#define MINOR_RESIDUAL_CURRENT_ALARM                0x117 //???角???‾㊣“??
#define MINOR_TEMPERATURE_ALARM                     0x118 //????㊣“??
#define MINOR_ARC_ALARM                             0x119 //????㊣“??


//0x400-0x1000 ????㊣“??
#define MINOR_ALARMIN_SHORT_CIRCUIT                 0x400  //﹞??????﹞㊣“??
#define MINOR_ALARMIN_BROKEN_CIRCUIT                0x401  //﹞??????﹞㊣“??
#define MINOR_ALARMIN_EXCEPTION                     0x402  //﹞????足??㊣“??
#define MINOR_ALARMIN_RESUME                        0x403  //﹞???㊣“??????
#define MINOR_HOST_DESMANTLE_ALARM                  0x404  //?豕㊣?﹞???㊣“??
#define MINOR_HOST_DESMANTLE_RESUME                 0x405  //?豕㊣?﹞???????
#define MINOR_CARD_READER_DESMANTLE_ALARM           0x406  //???“?‾﹞???㊣“??
#define MINOR_CARD_READER_DESMANTLE_RESUME          0x407  //???“?‾﹞???????
#define MINOR_CASE_SENSOR_ALARM                     0x408  //????????㊣“??
#define MINOR_CASE_SENSOR_RESUME                    0x409  //????????????
#define MINOR_STRESS_ALARM                          0x40a  //????㊣“??
#define MINOR_OFFLINE_ECENT_NEARLY_FULL             0x40b  //?????????迆90%㊣“??
#define MINOR_CARD_MAX_AUTHENTICATE_FAIL            0x40c  //?“?????∟?∫∼?????㊣“??
#define MINOR_SD_CARD_FULL                          0x40d  //SD?“?????迆㊣“??
#define MINOR_LINKAGE_CAPTURE_PIC                   0x40e  //????℅???????㊣“??
#define MINOR_SECURITY_MODULE_DESMANTLE_ALARM        0x40f  //????∼??????谷﹞???㊣“??
#define MINOR_SECURITY_MODULE_DESMANTLE_RESUME        0x410  //????∼??????谷﹞???????

#define MINOR_POS_START_ALARM                       0x411  //POS????
#define MINOR_POS_END_ALARM                         0x412  //POS?芍??
#define MINOR_FACE_IMAGE_QUALITY_LOW                0x413  //??????????????
#define MINOR_FINGE_RPRINT_QUALITY_LOW              0x414  //??????????????
#define MINOR_FIRE_IMPORT_SHORT_CIRCUIT             0x415  //??﹞????????﹞㊣“??
#define MINOR_FIRE_IMPORT_BROKEN_CIRCUIT            0x416  //??﹞????????﹞㊣“??
#define MINOR_FIRE_IMPORT_RESUME                    0x417  //??﹞?????????
#define MINOR_FIRE_BUTTON_TRIGGER                   0x418  //??﹞?∼?????﹞?
#define MINOR_FIRE_BUTTON_RESUME                    0x419  //??﹞?∼???????
#define MINOR_MAINTENANCE_BUTTON_TRIGGER            0x41a  //???∟∼?????﹞?
#define MINOR_MAINTENANCE_BUTTON_RESUME             0x41b  //???∟∼???????
#define MINOR_EMERGENCY_BUTTON_TRIGGER              0x41c  //???㊣∼?????﹞?
#define MINOR_EMERGENCY_BUTTON_RESUME               0x41d  //???㊣∼???????
#define MINOR_DISTRACT_CONTROLLER_ALARM             0x41e  //﹞????‾﹞???㊣“??
#define MINOR_DISTRACT_CONTROLLER_RESUME            0x41f  //﹞????‾﹞???㊣“??????

#define MINOR_PERSON_DENSITY_DETECTION_START        0x420  //???㊣??????????㊣“??????
#define MINOR_PERSON_DENSITY_DETECTION_END          0x421  //???㊣??????????㊣“???芍??

#define MINOR_CHANNEL_CONTROLLER_DESMANTLE_ALARM    0x422  //?“???????‾﹞???㊣“??
#define MINOR_CHANNEL_CONTROLLER_DESMANTLE_RESUME   0x423  //?“???????‾﹞???㊣“??????
#define MINOR_CHANNEL_CONTROLLER_FIRE_IMPORT_ALARM  0x424  //?“???????‾??﹞?????㊣“??
#define MINOR_CHANNEL_CONTROLLER_FIRE_IMPORT_RESUME 0x425  //?“???????‾??﹞?????㊣“??????

#define MINOR_HEART_RATE_ABNORMAL_BEGIN             0x426    //?????足??㊣“??????
#define MINOR_HEART_RATE_ABNORMAL_END               0x427    //?????足??㊣“???芍??
#define MINOR_BLOOD_OXYGEN_ABNORMAL_BEGIN           0x428    //?????足??㊣“??????
#define MINOR_BLOOD_OXYGEN_ABNORMAL_END             0x429    //?????足??㊣“???芍??
#define MINOR_SYSTOLIC_BLOOD_PRESSURE_ABNORMAL_BEGIN   0x42a    //???????????足??㊣“??????
#define MINOR_SYSTOLIC_BLOOD_PRESSURE_ABNORMAL_END     0x42b    //???????????足??㊣“???芍??
#define MINOR_DIASTOLIC_BLOOD_PRESSURE_ABNORMAL_BEGIN  0x42c    //???????????足??㊣“??????
#define MINOR_DIASTOLIC_BLOOD_PRESSURE_ABNORMAL_END    0x42d    //???????????足??㊣“???芍??
#define MINOR_VCA_LEAVE_POSITION_START              0x42e//?????足??????
#define MINOR_VCA_LEAVE_POSITION_STOP               0x42f//?????足???芍??
#define MINOR_VCA_STOOODUP_START                    0x430//?????足??????
#define MINOR_VCA_STOOODUP_STOP                     0x431//?????足???芍??
#define MINOR_VCA_PEOPLENUM_CHANGE_START            0x434//????㊣???????
#define MINOR_VCA_PEOPLENUM_CHANGE_STOP             0x435//????㊣????芍??
#define MINOR_VCA_RUNNING_START                     0x438//???㊣㊣???????
#define MINOR_VCA_RUNNING_STOP                      0x439//???㊣㊣????芍??
#define MINOR_VCA_VIOLENT_MOTION_START              0x43a//????????????
#define MINOR_VCA_VIOLENT_MOTION_STOP               0x43b//?????????芍??
#define MINOR_VCA_FAIL_DOWN_START                   0x43c//???㊣????????
#define MINOR_VCA_FAIL_DOWN_STOP                    0x43d//???㊣?????芍??
#define MINOR_VCA_RETENTION_START                   0x43e//???㊣????????
#define MINOR_VCA_RETENTION_STOP                    0x43f//???㊣?????芍??

#define MINOR_PRINTER_OUT_OF_PAPER               0x440   //?辰???迆?㊣??㊣“??
#define MINOR_LEGAL_EVENT_NEARLY_FULL            0x442   //??????﹞“?????迆90%㊣“??

#define MINOR_ALARM_CUSTOM1                         0x900  //????℅??“??㊣“??1
#define MINOR_ALARM_CUSTOM2                         0x901  //????℅??“??㊣“??2
#define MINOR_ALARM_CUSTOM3                         0x902  //????℅??“??㊣“??3
#define MINOR_ALARM_CUSTOM4                         0x903  //????℅??“??㊣“??4
#define MINOR_ALARM_CUSTOM5                         0x904  //????℅??“??㊣“??5
#define MINOR_ALARM_CUSTOM6                         0x905  //????℅??“??㊣“??6
#define MINOR_ALARM_CUSTOM7                         0x906  //????℅??“??㊣“??7
#define MINOR_ALARM_CUSTOM8                         0x907  //????℅??“??㊣“??8
#define MINOR_ALARM_CUSTOM9                         0x908  //????℅??“??㊣“??9
#define MINOR_ALARM_CUSTOM10                        0x909  //????℅??“??㊣“??10
#define MINOR_ALARM_CUSTOM11                        0x90a  //????℅??“??㊣“??11
#define MINOR_ALARM_CUSTOM12                        0x90b  //????℅??“??㊣“??12
#define MINOR_ALARM_CUSTOM13                        0x90c  //????℅??“??㊣“??13
#define MINOR_ALARM_CUSTOM14                        0x90d  //????℅??“??㊣“??14
#define MINOR_ALARM_CUSTOM15                        0x90e  //????℅??“??㊣“??15
#define MINOR_ALARM_CUSTOM16                        0x90f  //????℅??“??㊣“??16
#define MINOR_ALARM_CUSTOM17                        0x910  //????℅??“??㊣“??17
#define MINOR_ALARM_CUSTOM18                        0x911  //????℅??“??㊣“??18
#define MINOR_ALARM_CUSTOM19                        0x912  //????℅??“??㊣“??19
#define MINOR_ALARM_CUSTOM20                        0x913  //????℅??“??㊣“??20
#define MINOR_ALARM_CUSTOM21                        0x914  //????℅??“??㊣“??21
#define MINOR_ALARM_CUSTOM22                        0x915  //????℅??“??㊣“??22
#define MINOR_ALARM_CUSTOM23                        0x916  //????℅??“??㊣“??23
#define MINOR_ALARM_CUSTOM24                        0x917  //????℅??“??㊣“??24
#define MINOR_ALARM_CUSTOM25                        0x918  //????℅??“??㊣“??25
#define MINOR_ALARM_CUSTOM26                        0x919  //????℅??“??㊣“??26
#define MINOR_ALARM_CUSTOM27                        0x91a  //????℅??“??㊣“??27
#define MINOR_ALARM_CUSTOM28                        0x91b  //????℅??“??㊣“??28
#define MINOR_ALARM_CUSTOM29                        0x91c  //????℅??“??㊣“??29
#define MINOR_ALARM_CUSTOM30                        0x91d  //????℅??“??㊣“??30
#define MINOR_ALARM_CUSTOM31                        0x91e  //????℅??“??㊣“??31
#define MINOR_ALARM_CUSTOM32                        0x91f  //????℅??“??㊣“??32
#define MINOR_ALARM_CUSTOM33                        0x920  //????℅??“??㊣“??33
#define MINOR_ALARM_CUSTOM34                        0x921  //????℅??“??㊣“??34
#define MINOR_ALARM_CUSTOM35                        0x922  //????℅??“??㊣“??35
#define MINOR_ALARM_CUSTOM36                        0x923  //????℅??“??㊣“??36
#define MINOR_ALARM_CUSTOM37                        0x924  //????℅??“??㊣“??37
#define MINOR_ALARM_CUSTOM38                        0x925  //????℅??“??㊣“??38
#define MINOR_ALARM_CUSTOM39                        0x926  //????℅??“??㊣“??39
#define MINOR_ALARM_CUSTOM40                        0x927  //????℅??“??㊣“??40
#define MINOR_ALARM_CUSTOM41                        0x928  //????℅??“??㊣“??41
#define MINOR_ALARM_CUSTOM42                        0x929  //????℅??“??㊣“??42
#define MINOR_ALARM_CUSTOM43                        0x92a  //????℅??“??㊣“??43
#define MINOR_ALARM_CUSTOM44                        0x92b  //????℅??“??㊣“??44
#define MINOR_ALARM_CUSTOM45                        0x92c  //????℅??“??㊣“??45
#define MINOR_ALARM_CUSTOM46                        0x92d  //????℅??“??㊣“??46
#define MINOR_ALARM_CUSTOM47                        0x92e  //????℅??“??㊣“??47
#define MINOR_ALARM_CUSTOM48                        0x92f  //????℅??“??㊣“??48
#define MINOR_ALARM_CUSTOM49                        0x930  //????℅??“??㊣“??49
#define MINOR_ALARM_CUSTOM50                        0x931  //????℅??“??㊣“??50
#define MINOR_ALARM_CUSTOM51                        0x932  //????℅??“??㊣“??51
#define MINOR_ALARM_CUSTOM52                        0x933  //????℅??“??㊣“??52
#define MINOR_ALARM_CUSTOM53                        0x934  //????℅??“??㊣“??53
#define MINOR_ALARM_CUSTOM54                        0x935  //????℅??“??㊣“??54
#define MINOR_ALARM_CUSTOM55                        0x936  //????℅??“??㊣“??55
#define MINOR_ALARM_CUSTOM56                        0x937  //????℅??“??㊣“??56
#define MINOR_ALARM_CUSTOM57                        0x938  //????℅??“??㊣“??57
#define MINOR_ALARM_CUSTOM58                        0x939  //????℅??“??㊣“??58
#define MINOR_ALARM_CUSTOM59                        0x93a  //????℅??“??㊣“??59
#define MINOR_ALARM_CUSTOM60                        0x93b  //????℅??“??㊣“??60
#define MINOR_ALARM_CUSTOM61                        0x93c  //????℅??“??㊣“??61
#define MINOR_ALARM_CUSTOM62                        0x93d  //????℅??“??㊣“??62
#define MINOR_ALARM_CUSTOM63                        0x93e  //????℅??“??㊣“??63
#define MINOR_ALARM_CUSTOM64                        0x93f  //????℅??“??㊣“??64
#define MINOR_LOCK_HIJIACK_FINGER_ALARM         0x950       //??????﹞?????????㊣“??
#define MINOR_LOCK_HIJIACK_PASSWORD_ALARM       0x951       //??????﹞?????????㊣“??
#define MINOR_LOCK_PRY_DOOR_ALARM               0x952       //??????????㊣“??
#define MINOR_LOCK_LOCKED_ALARM                 0x953       //?????????“㊣“??
#define MINOR_LOCK_BATTERLOW_ALARM              0x954       //????????????㊣“??
#define MINOR_LOCK_BLACKLIST_DOOR_ALARM         0x955       //????????????㊣“??
#define MINOR_LOCK_OFFLINE_ALARM                0x956       //??????????㊣“??
#define MINOR_LOCK_UNCLOSED_ALARM               0x957       //???????谷??㊣“??
#define MINOR_LOCK_NO_HOME_ALARM                0x958       //?????????∫??????㊣“??
#define MINOR_LOCK_MAGNETOMETER_ALARM           0x959       //?????????‾㊣“??
#define MINOR_LOCK_IR_DETECTOR_ALARM            0x95a       //?足???????‾㊣“??
#define MINOR_LOCK_FP_LOCKED_ALARM              0x95b       //???????“㊣“??
#define MINOR_LOCK_PASSWORD_LOCKED_ALARM        0x95c       //???????“㊣“??
#define MINOR_LOCK_HIJIACK_ALARM              0x95d  //??????﹞?????㊣“??

//2018-04-23 ?“??????????㊣“???????角??
#define MINOR_ALARMHOST_SHORT_CIRCUIT    	      0x1001      //???﹞㊣“??
#define MINOR_ALARMHOST_BROKEN_CIRCUIT   		  0x1002       //???﹞㊣“??
#define MINOR_ALARMHOST_ALARM_RESET      	      0x1003       //㊣“??????
#define MINOR_ALARMHOST_ALARM_NORMAL			  0x1004   	//㊣“??????????
#define MINOR_ALARMHOST_PASSWORD_ERROR 		  0x1005		//?????赤?車?“????3???????????赤?車??
#define MINOR_ALARMHOST_ID_CARD_ILLEGALLY 	  0x1006		//﹞?﹞“?????“ID
#define MINOR_ALARMHOST_KEYPAD_REMOVE 		  0x1007	//?邦??﹞???
#define MINOR_ALARMHOST_KEYPAD_REMOVE_RESTORE   0x1008	//?邦??﹞???????

#define MINOR_ALARMHOST_BELOW_ALARM_LIMIT1 	  0x1011	//??????????㊣“????1
#define MINOR_ALARMHOST_BELOW_ALARM_LIMIT2 	  0x1012    //??????????㊣“????2
#define MINOR_ALARMHOST_BELOW_ALARM_LIMIT3 	  0x1013    //??????????㊣“????3
#define MINOR_ALARMHOST_BELOW_ALARM_LIMIT4 	  0x1014    //??????????㊣“????4
#define MINOR_ALARMHOST_ABOVE_ALARM_LIMIT1 	  0x1015    //??????????㊣“????1
#define MINOR_ALARMHOST_ABOVE_ALARM_LIMIT2 	0x1016    //??????????㊣“????2
#define MINOR_ALARMHOST_ABOVE_ALARM_LIMIT3 	0x1017     //??????????㊣“????3
#define MINOR_ALARMHOST_ABOVE_ALARM_LIMIT4 	0x1018     //??????????㊣“????4

#define MINOR_ALARMHOST_VIRTUAL_DEFENCE_BANDIT 	0x1021      //?赤﹞???﹞???
#define MINOR_ALARMHOST_VIRTUAL_DEFENCE_FIRE 		0x1022       //?赤﹞???????
#define MINOR_ALARMHOST_VIRTUAL_DEFENCE_URGENT 		0x1023       //?赤﹞??????㊣

#define MINOR_UPS_ALARM			0x1028      //UPS㊣“??
#define MINOR_ELECTRICITY_METER_ALARM 0x1029     //??????㊣赤㊣“??
#define MINOR_SWITCH_POWER_ALARM	  0x1030     //????????㊣“??
#define MINOR_GAS_DETECT_SYS_ALARM	  0x1031    //?????足??????㊣“??
#define MINOR_TRANSFORMER_TEMPRATURE_ALARM 0x1032     //㊣????‾????㊣赤㊣“??
#define MINOR_TEMP_HUMI_ALARM		0x1033   //???????????‾㊣“??
#define MINOR_UPS_ALARM_RESTORE	0x1034    //UPS㊣“??????
#define MINOR_ELECTRICITY_METER_ALARM_RESTORE 0x1035   //??????㊣赤㊣“??????
#define MINOR_SWITCH_POWER_ALARM_RESTORE	0x1036   //????????㊣“??????
#define MINOR_GAS_DETECT_SYS_ALARM_RESTORE	  0x1037   //?????足??????㊣“??????
#define MINOR_TRANSFORMER_TEMPRATURE_ALARM_RESTORE 0x1038            //㊣????‾????㊣赤㊣“??????
#define MINOR_TEMP_HUMI_ALARM_RESTORE	0x1039     //???????????‾㊣“??????
#define MINOR_WATER_LEVEL_SENSOR_ALARM 		0x1040     //?????????‾㊣“??
#define MINOR_WATER_LEVEL_SENSOR_ALARM_RESTORE 	0x1041  //?????????‾㊣“??????
#define MINOR_DUST_NOISE_ALARM 	0x1042  //???????迄?????‾㊣“??
#define MINOR_DUST_NOISE_ALARM_RESTORE 	0x1043     //???????迄?????‾㊣“??????
#define MINOR_ENVIRONMENTAL_LOGGER_ALARM 	0x1044    //?﹞????????㊣“??
#define MINOR_ENVIRONMENTAL_LOGGER_ALARM_RESTORE 0x1045            //?﹞????????㊣“??????

#define MINOR_TRIGGER_TAMPER    0x1046     //?????‾﹞???
#define MINOR_TRIGGER_TAMPER_RESTORE     0x1047    //?????‾﹞???????
#define MINOR_EMERGENCY_CALL_HELP_ALARM    0x1048       //???㊣?????車?迆㊣“??
#define MINOR_EMERGENCY_CALL_HELP_ALARM_RESTORE 0x1049            //???㊣?????車?迆㊣“??????
#define MINOR_CONSULTING_ALARM     0x1050    //????℅???㊣“??
#define MINOR_CONSULTING_ALARM_RESTORE   0x1051     //????℅???㊣“??????
#define MINOR_ALARMHOST_ZONE_MODULE_REMOVE      0x1052    //﹞??????谷﹞???
#define MINOR_ALARMHOST_ZONE_MODULE_RESET     0x1053       //﹞??????谷﹞???????

#define MINOR_ALARMHOST_ALARM_WIND_SPEED_ALARM      0x1054      //﹞????????‾????
#define MINOR_ALARMHOST_ALARM_WIND_SPEED_ALARM_RESTORE   0x1055      //﹞????????‾????????
#define MINOR_ALARMHOST_ALARM_GENERATE_OUTPUT_ALARM   0x1056   //?“?????????????谷????
#define MINOR_ALARMHOST_ALARM_GENERATE_OUTPUT_RESTORE    0x1057     //?“?????????????谷????????
#define MINOR_ALARMHOST_ALARM_SOAK_ALARM      0x1058      //?????????‾????
#define MINOR_ALARMHOST_ALARM_SOAK_ALARM_RESTORE   0x1059  //?????????‾????????
#define MINOR_ALARMHOST_ALARM_SOLAR_POWER_ALARM    0x1060    //???????????‾????
#define MINOR_ALARMHOST_ALARM_SOLAR_POWER_ALARM_RESTORE 0x1061   //???????????‾????????
#define MINOR_ALARMHOST_ALARM_SF6_ALARM   0x1062      //SF6㊣“???‾?迆????
#define MINOR_ALARMHOST_ALARM_SF6_ALARM_RESTORE   0x1063    //SF6㊣“???‾?迆????????
#define MINOR_ALARMHOST_ALARM_WEIGHT_ALARM    0x1064      //??????????
#define MINOR_ALARMHOST_ALARM_WEIGHT_ALARM_RESTORE    0x1065   //??????????????
#define MINOR_ALARMHOST_ALARM_WEATHER_ALARM   0x1066   //???車????????????
#define MINOR_ALARMHOST_ALARM_WEATHER_ALARM_RESTORE    0x1067     //???車????????????????
#define MINOR_ALARMHOST_ALARM_FUEL_GAS_ALARM     0x1068  //?????角??????????
#define MINOR_ALARMHOST_ALARM_FUEL_GAS_ALARM_RESTORE  0x1069 //?????角????????????
#define MINOR_ALARMHOST_ALARM_FIRE_ALARM   0x1070  //????㊣“??????????
#define MINOR_ALARMHOST_ALARM_FIRE_ALARM_RESTORE    0x1071   //????㊣“??????????????
#define  MINOR_ALARMHOST_WIRELESS_OUTPUT_MODULE_REMOVE     0x1072   //???????????谷﹞???
#define  MINOR_ALARMHOST_WIRELESS_OUTPUT_MODULE_RESET    0x1073  //???????????谷﹞???????
#define  MINOR_ALARMHOST_WIRELESS_REPEATER_MODULE_REMOVE   0x1074  //?????????‾﹞???

#define  MINOR_ALARMHOST_WIRELESS_SIREN_MODULE_REMOVE     0x1075  //????????﹞???
#define  MINOR_ALARMHOST_WIRELESS_SIREN_MODULE_RESET     0x1076 //????????﹞???????

#define  MINOR_RS485_DEV_ALARM     0x1077      //RS485?????豕㊣?㊣“???“?????豕㊣??角?????????豕㊣???
#define  MINOR_RS485_DEV_RESTORE    0x1078     //RS485?????豕㊣?㊣“???????“?????豕㊣??角?????????豕㊣???
#define  MINOR_ALARMHOST_ALARM_HOST_ALARM     0x1079      //??﹞??‾?迆㊣“??
#define  MINOR_ALARMHOST_ALARM_HOST_RESTORE    0x107a     //??﹞??‾?迆㊣“??????

#define  MINOR_AIR_CONDITION_DEV_ALARM     0x107b      //???‾?????‾㊣“??
#define  MINOR_AIR_CONDITION_DEV_RESTORE    0x107c     //???‾?????‾㊣“??????

#define  MINOR_ALARMHOST_WIRELESS_REPEATER_MODULE_RESET  0x107d //?????????‾﹞???????

#define	 MINOR_ALARM_ELEVATOR_BREAKDOWN     0x107e//????????
#define  MINOR_WATER_PRESSURE_SENSOR_ALARM      0x107f    //?????????‾㊣“??
#define  MINOR_FLOW_SENSOR_ALARM                0x1080    //?‾???????‾㊣“??

/* ?足?? */
//?‾?角??
#define MAJOR_EXCEPTION                    0x2
//???角??
#define MINOR_SUBSYSTEM_ERROR           0x0a    /* ℅??????足?? */
#define MINOR_RAID_ERROR                0x20    /* ?車???足?? */
#define MINOR_VI_LOST                    0x21    /* ???????????∫ */
#define MINOR_ILLEGAL_ACCESS            0x22    /* ﹞?﹞“﹞??? */
#define MINOR_HD_FULL                    0x23    /* ?????迆 */
#define MINOR_HD_ERROR                    0x24    /* ?????赤?車 */
#define MINOR_DCD_LOST                    0x25    /* MODEM ????(㊣?????????) */
#define MINOR_IP_CONFLICT                0x26    /* IP???﹞???? */
#define MINOR_NET_BROKEN                0x27    /* ????????*/
#define MINOR_REC_ERROR                 0x28    /* ???????赤 */
#define MINOR_IPC_NO_LINK               0x29    /* IPC?????足?? */
#define MINOR_VI_EXCEPTION              0x2a    /* ?????????足??(???????????“??) */
#define MINOR_IPC_IP_CONFLICT           0x2b    /*ipc ip ???﹞ ????*/
#define MINOR_SENCE_EXCEPTION           0x2c    // ???∼?足??

#define MINOR_PIC_REC_ERROR              0x2d    /* ℅??????赤--?????????????∫∼?*/
#define MINOR_VI_MISMATCH                0x2e    /* ??????????????*/
#define MINOR_RESOLUTION_MISMATCH        0x2f    /*?∼??/????﹞?㊣?????????  */

//2009-12-16 ????????℅??????“?????角??
#define MINOR_FANABNORMAL                0x31    /* ????℅??????“??﹞???℅????足?? */
#define MINOR_FANRESUME                    0x32    /* ????℅??????“??﹞???℅??????????? */
#define MINOR_SUBSYSTEM_ABNORMALREBOOT    0x33    /* ????℅??????“??6467?足?????? */
#define MINOR_MATRIX_STARTBUZZER        0x34    /* ????℅??????“??dm6467?足????????﹞??迄?‾ */

//2010-01-22 ????????℅??????“?足?????????角??
#define MINOR_NET_ABNORMAL                0x35    /*????℅????足??*/
#define MINOR_MEM_ABNORMAL                0x36    /*????℅????足??*/
#define MINOR_FILE_ABNORMAL                0x37    /*????℅????足??*/
#define MINOR_PANEL_ABNORMAL            0x38 /*?∼??∼??????足??*/
#define MINOR_PANEL_RESUME                0x39 /*?∼??∼?????????*/    
#define MINOR_RS485_DEVICE_ABNORMAL        0x3a     /*RS485????℅????足??*/
#define MINOR_RS485_DEVICE_REVERT        0x3b    /*RS485????℅????足??????*/

//2012-2-18 ?????車???????‾?足?????????角??
#define MINOR_SCREEN_SUBSYSTEM_ABNORMALREBOOT   0x3c            //℅?∼??足??????
#define    MINOR_SCREEN_SUBSYSTEM_ABNORMALINSERT    0x3d            //℅?∼?????
#define    MINOR_SCREEN_SUBSYSTEM_ABNORMALPULLOUT    0x3e            //℅?∼?∼???
#define    MINOR_SCREEN_ABNARMALTEMPERATURE        0x3f            //?????足??
//2012-07-26 ????℅??????“v2.1
#define MINOR_HIGH_TEMPERATURE_PROTECT          0x40 //℅?∼?????㊣??∟

//Netra 2.2.2
#define MINOR_RECORD_OVERFLOW                   0x41              /*??????????*/  
#define MINOR_DSP_ABNORMAL                      0x42              //DSP?足?? 

//Netra 3.0.0
#define MINOR_ANR_RECORD_FAIED                 0x43         /*ANR?????∫∼?*/ 
#define MINOR_SPARE_WORK_DEVICE_EXCEPT         0x44            /*??㊣??豕㊣??∟℅‾?迆?足??*/
#define MINOR_START_IPC_MAS_FAILED             0x45            /*????IPC MAS?∫∼?*/ 
//?????? 256?﹞NVR
#define MINOR_IPCM_CRASH                       0x46         /*IPCM?足??????*/
#define MINOR_POE_POWER_EXCEPTION              0x47         /*POE ?????足??*/
#define MINOR_UPLOAD_DATA_CS_EXCEPTION         0x48          //???????????????∫∼?/
#define MINOR_DIAL_EXCEPTION                   0x49         /*?????足??*/
#define MINOR_DEV_EXCEPTION_OFFLINE            0x50  //?豕㊣??足??????
#define MINOR_UPGRADEFAIL                      0x51 //?????????豕㊣??∫∼?
#define MINOR_AI_LOST                           0x52    /* ???????????∫ */
#define MINOR_SYNC_IPC_PASSWD                   0x53    /* ????IPC?????足?? */
#define MINOR_EZVIZ_OFFLINE                        0x54    /* ?????????足??*/
#define MINOR_VQD_ABNORMAL                        0x55 //VQD?足??
#define MINOR_ACCESSORIES_PLATE                0x57 //????∼??足??
#define MINOR_KMS_EXPAMSION_DISK_LOST         0x58 // KMS?????????∫
#define MINOR_ABNORMAL_PORT                 0x59 // ?????足??
#define MINOR_CAMERA_ANGLE_ANOMALY          0x60//  ?角?迆?????足??
#define MINOR_DATA_DISK_ERROE               0x61//  ???????赤?車  
#define MINOR_INTELLIGENT_SYSTEM_RUNNING_ERROR     0x62//  ?????????????足??
#define MINOR_FACESNAP_RESOLUTION_OVERFLOW         0x63//  ????℅??????‾﹞?㊣???????
#define MINOR_SMD_RESOLUTION_OVERFLOW              0x64//  SMD???‾﹞?㊣???????
#define MINOR_AUDIO_LOSS_EXCEPTION                 0x65//  ???????∫?足??
#define MINOR_SAFETY_HELMET_EXCEPTION              0x66 //?????‾∼????㊣?足???足??
#define MINOR_VCA_PIC_LENGTH_OVERFLOW              0x67 // VCA?????∟?????∟?“????????2M?車??????????
#define MINOR_FACE_MODEL_EXCEPTION                 0x68//  ???????????????足??
#define MINOR_SSD_EXCEPTION                        0x69 // SSD?足??
//NVR????
#define MINOR_CLUSTER_DEVICE_OFFLINE                 0x70 // ???????豕㊣?????
#define MINOR_CLUSTER_CONFIG_FAILED                  0x71 // ???????豕㊣??????∫∼?
#define MINOR_CLUSTER_DISASTER_TOLERANCE_EXCEPT      0x72 // ?????????足??:????CM?????∫∼?,??????????????℅?,???????赤??℅?,?????“??℅?????℅?,?????豕㊣???℅???
#define MINOR_CLUSTER_STORFULL_EXCEPTION             0x73 //?????????迆
#define MINOR_CLUSTER_VERSION_EXCEPTION              0x74  //????∼?㊣??足??
#define MINOR_CLUSTER_OFFLINENODE_EXCEPTION          0x75   //??????????????
#define MINOR_CLUSTER_RECORDCYCLE_EXCEPTION          0x76   //??????????????℅?
#define MINOR_CLUSTER_IPCTRANSFER_EXCEPTION          0x77   //????IPC?“???∫∼?
#define MINOR_CLUSTER_IPCONFLICT_EXCEPTION           0x78   // ????IP??????????CM??IP???﹞

#define MINOR_GET_SUB_STREAM_FAILURE                 0x79//℅????‾???‾?∫∼?
#define MINOR_HDD_SHM_DETECT_EXCEPTION               0x7a//????SHM?足???足??
#define MINOR_DEVICE_FORTIFY_FAILURE                 0x7b//?∼???豕㊣?㊣“????﹞??∫∼?
#define MINOR_EVENT_UPLOAD_EXCEPTION                 0x7c //????﹞????足???“?豕㊣??????????∫∼??辰?????迆????

//0x400-0x1000 ?????足???角??
#define MINOR_DEV_POWER_ON                     0x400  //?豕㊣?????????
#define MINOR_DEV_POWER_OFF                    0x401  //?豕㊣???????㊣?
#define MINOR_WATCH_DOG_RESET                  0x402  //?????﹞????
#define MINOR_LOW_BATTERY                      0x403  //????????????
#define MINOR_BATTERY_RESUME                   0x404  //??????????????????
#define MINOR_AC_OFF                           0x405  //???‾??????
#define MINOR_AC_RESUME                        0x406  //???‾??????
#define MINOR_NET_RESUME                       0x407  //????????
#define MINOR_FLASH_ABNORMAL                   0x408  //FLASH?????足??
#define MINOR_CARD_READER_OFFLINE              0x409  //???“?‾????
#define MINOR_CARD_READER_RESUME               0x40a  //???“?‾????????                   
#define MINOR_INDICATOR_LIGHT_OFF              0x40b  //????????㊣?
#define MINOR_INDICATOR_LIGHT_RESUME           0x40c  //??????????
#define MINOR_CHANNEL_CONTROLLER_OFF           0x40d  //?“???????‾????
#define MINOR_CHANNEL_CONTROLLER_RESUME        0x40e  //?“???????‾????
#define MINOR_SECURITY_MODULE_OFF               0x40f  //????∼??????谷????
#define MINOR_SECURITY_MODULE_RESUME           0x410  //????∼??????谷????
#define MINOR_BATTERY_ELECTRIC_LOW             0x411  //??????????(???????豕㊣?????)
#define MINOR_BATTERY_ELECTRIC_RESUME          0x412  //????????????????(???????豕㊣?????)
#define MINOR_LOCAL_CONTROL_NET_BROKEN           0x413  //?????????‾????????
#define MINOR_LOCAL_CONTROL_NET_RSUME           0x414  //?????????‾????????
#define MINOR_MASTER_RS485_LOOPNODE_BROKEN     0x415  //?‾??RS485?﹞?﹞????????
#define MINOR_MASTER_RS485_LOOPNODE_RESUME     0x416  //?‾??RS485?﹞?﹞????????
#define MINOR_LOCAL_CONTROL_OFFLINE            0x417  //?????????‾????
#define MINOR_LOCAL_CONTROL_RESUME             0x418  //?????????‾????????
#define MINOR_LOCAL_DOWNSIDE_RS485_LOOPNODE_BROKEN  0x419  //????????RS485?﹞?﹞????
#define MINOR_LOCAL_DOWNSIDE_RS485_LOOPNODE_RESUME  0x41a  //????????RS485?﹞?﹞????
#define MINOR_DISTRACT_CONTROLLER_ONLINE       0x41b  //﹞????‾????
#define MINOR_DISTRACT_CONTROLLER_OFFLINE      0x41c  //﹞????‾????
#define MINOR_ID_CARD_READER_NOT_CONNECT       0x41d  //?赤﹞??∟?????‾???????“????℅“????
#define MINOR_ID_CARD_READER_RESUME            0x41e  //?赤﹞??∟?????‾?????????“????℅“????
#define MINOR_FINGER_PRINT_MODULE_NOT_CONNECT  0x41f  //??????℅谷???????“????℅“????
#define MINOR_FINGER_PRINT_MODULE_RESUME       0x420  //??????℅谷?????????“????℅“????
#define MINOR_CAMERA_NOT_CONNECT               0x421  //?????﹞??????
#define MINOR_CAMERA_RESUME                    0x422  //?????﹞????????
#define MINOR_COM_NOT_CONNECT                  0x423  //COM????????
#define MINOR_COM_RESUME                       0x424  //COM??????????
#define MINOR_DEVICE_NOT_AUTHORIZE             0x425  //?豕㊣??????“
#define MINOR_PEOPLE_AND_ID_CARD_DEVICE_ONLINE 0x426  //???∟?豕㊣?????
#define MINOR_PEOPLE_AND_ID_CARD_DEVICE_OFFLINE 0x427 //???∟?豕㊣?????
#define MINOR_LOCAL_LOGIN_LOCK                 0x428  //㊣??????????“
#define MINOR_LOCAL_LOGIN_UNLOCK               0x429  //㊣???????????
#define MINOR_SUBMARINEBACK_COMM_BREAK         0x42a  //??﹞??㊣??﹞????‾?“??????
#define MINOR_SUBMARINEBACK_COMM_RESUME        0x42b  //??﹞??㊣??﹞????‾?“??????
#define MINOR_MOTOR_SENSOR_EXCEPTION           0x42c  //???迆?辰?????‾?足??
#define MINOR_CAN_BUS_EXCEPTION                0x42d  //CAN℅????足??
#define MINOR_CAN_BUS_RESUME                   0x42e  //CAN℅???????
#define MINOR_GATE_TEMPERATURE_OVERRUN         0x42f  //???迆????????????
#define MINOR_IR_EMITTER_EXCEPTION             0x430  //?足???????足??
#define MINOR_IR_EMITTER_RESUME                0x431  //?足??????????
#define MINOR_LAMP_BOARD_COMM_EXCEPTION        0x432  //??∼??“???足??
#define MINOR_LAMP_BOARD_COMM_RESUME           0x433  //??∼??“??????
#define MINOR_IR_ADAPTOR_COMM_EXCEPTION        0x434  //?足??℅???∼??“???足??
#define MINOR_IR_ADAPTOR_COMM_RESUME           0x435  //?足??℅???∼??“??????
#define MINOR_PRINTER_ONLINE                    0x436  //?辰???迆????
#define MINOR_PRINTER_OFFLINE                    0x437  //?辰???迆????
#define MINOR_4G_MOUDLE_ONLINE       0x438  //4G???谷????
#define MINOR_4G_MOUDLE_OFFLINE         0x439  //4G???谷????
#define MINOR_DSP_START_FAILED         0x43a  //DSP?????∫∼?
#define MINOR_SMART_REGULATION_NOT_ALLOWED         0x43b  //???????辰???∫??


#define MINOR_EXCEPTION_CUSTOM1                 0x900  //????℅??“???足??1
#define MINOR_EXCEPTION_CUSTOM2                 0x901  //????℅??“???足??2
#define MINOR_EXCEPTION_CUSTOM3                 0x902  //????℅??“???足??3
#define MINOR_EXCEPTION_CUSTOM4                 0x903  //????℅??“???足??4
#define MINOR_EXCEPTION_CUSTOM5                 0x904  //????℅??“???足??5
#define MINOR_EXCEPTION_CUSTOM6                 0x905  //????℅??“???足??6
#define MINOR_EXCEPTION_CUSTOM7                 0x906  //????℅??“???足??7
#define MINOR_EXCEPTION_CUSTOM8                 0x907  //????℅??“???足??8
#define MINOR_EXCEPTION_CUSTOM9                 0x908  //????℅??“???足??9
#define MINOR_EXCEPTION_CUSTOM10                0x909  //????℅??“???足??10
#define MINOR_EXCEPTION_CUSTOM11                0x90a  //????℅??“???足??11
#define MINOR_EXCEPTION_CUSTOM12                0x90b  //????℅??“???足??12
#define MINOR_EXCEPTION_CUSTOM13                0x90c  //????℅??“???足??13
#define MINOR_EXCEPTION_CUSTOM14                0x90d  //????℅??“???足??14
#define MINOR_EXCEPTION_CUSTOM15                0x90e  //????℅??“???足??15
#define MINOR_EXCEPTION_CUSTOM16                0x90f  //????℅??“???足??16
#define MINOR_EXCEPTION_CUSTOM17                0x910  //????℅??“???足??17
#define MINOR_EXCEPTION_CUSTOM18                0x911  //????℅??“???足??18
#define MINOR_EXCEPTION_CUSTOM19                0x912  //????℅??“???足??19
#define MINOR_EXCEPTION_CUSTOM20                0x913  //????℅??“???足??20
#define MINOR_EXCEPTION_CUSTOM21                0x914  //????℅??“???足??21
#define MINOR_EXCEPTION_CUSTOM22                0x915  //????℅??“???足??22
#define MINOR_EXCEPTION_CUSTOM23                0x916  //????℅??“???足??23
#define MINOR_EXCEPTION_CUSTOM24                0x917  //????℅??“???足??24
#define MINOR_EXCEPTION_CUSTOM25                0x918  //????℅??“???足??25
#define MINOR_EXCEPTION_CUSTOM26                0x919  //????℅??“???足??26
#define MINOR_EXCEPTION_CUSTOM27                0x91a  //????℅??“???足??27
#define MINOR_EXCEPTION_CUSTOM28                0x91b  //????℅??“???足??28
#define MINOR_EXCEPTION_CUSTOM29                0x91c  //????℅??“???足??29
#define MINOR_EXCEPTION_CUSTOM30                0x91d  //????℅??“???足??30
#define MINOR_EXCEPTION_CUSTOM31                0x91e  //????℅??“???足??31
#define MINOR_EXCEPTION_CUSTOM32                0x91f  //????℅??“???足??32
#define MINOR_EXCEPTION_CUSTOM33                0x920  //????℅??“???足??33
#define MINOR_EXCEPTION_CUSTOM34                0x921  //????℅??“???足??34
#define MINOR_EXCEPTION_CUSTOM35                0x922  //????℅??“???足??35
#define MINOR_EXCEPTION_CUSTOM36                0x923  //????℅??“???足??36
#define MINOR_EXCEPTION_CUSTOM37                0x924  //????℅??“???足??37
#define MINOR_EXCEPTION_CUSTOM38                0x925  //????℅??“???足??38
#define MINOR_EXCEPTION_CUSTOM39                0x926  //????℅??“???足??39
#define MINOR_EXCEPTION_CUSTOM40                0x927  //????℅??“???足??40
#define MINOR_EXCEPTION_CUSTOM41                0x928  //????℅??“???足??41
#define MINOR_EXCEPTION_CUSTOM42                0x929  //????℅??“???足??42
#define MINOR_EXCEPTION_CUSTOM43                0x92a  //????℅??“???足??43
#define MINOR_EXCEPTION_CUSTOM44                0x92b  //????℅??“???足??44
#define MINOR_EXCEPTION_CUSTOM45                0x92c  //????℅??“???足??45
#define MINOR_EXCEPTION_CUSTOM46                0x92d  //????℅??“???足??46
#define MINOR_EXCEPTION_CUSTOM47                0x92e  //????℅??“???足??47
#define MINOR_EXCEPTION_CUSTOM48                0x92f  //????℅??“???足??48
#define MINOR_EXCEPTION_CUSTOM49                0x930  //????℅??“???足??49
#define MINOR_EXCEPTION_CUSTOM50                0x931  //????℅??“???足??50
#define MINOR_EXCEPTION_CUSTOM51                0x932  //????℅??“???足??51
#define MINOR_EXCEPTION_CUSTOM52                0x933  //????℅??“???足??52
#define MINOR_EXCEPTION_CUSTOM53                0x934  //????℅??“???足??53
#define MINOR_EXCEPTION_CUSTOM54                0x935  //????℅??“???足??54
#define MINOR_EXCEPTION_CUSTOM55                0x936  //????℅??“???足??55
#define MINOR_EXCEPTION_CUSTOM56                0x937  //????℅??“???足??56
#define MINOR_EXCEPTION_CUSTOM57                0x938  //????℅??“???足??57
#define MINOR_EXCEPTION_CUSTOM58                0x939  //????℅??“???足??58
#define MINOR_EXCEPTION_CUSTOM59                0x93a  //????℅??“???足??59
#define MINOR_EXCEPTION_CUSTOM60                0x93b  //????℅??“???足??60
#define MINOR_EXCEPTION_CUSTOM61                0x93c  //????℅??“???足??61
#define MINOR_EXCEPTION_CUSTOM62                0x93d  //????℅??“???足??62
#define MINOR_EXCEPTION_CUSTOM63                0x93e  //????℅??“???足??63
#define MINOR_EXCEPTION_CUSTOM64                0x93f  //????℅??“???足??64
#define MINOR_SWITCH_WIRED_NETWORK            0x950    //????????????
#define MINOR_SWITCH_WIRELESS_NETWORK         0x951    //????????????
#define MINOR_LOCK_ONLINE_RESUME              0x952    //??????????????

//[add]by silujie 2013-3-22 14:16
//0x2000~0x3fff ???豕㊣?㊣“??????
//0x4000~0x5000 ???豕㊣??足??????
#define MINOR_SUBSYSTEM_IP_CONFLICT        0x4000        //℅?∼?IP????
#define MINOR_SUBSYSTEM_NET_BROKEN        0x4001        //℅?∼?????
#define    MINOR_FAN_ABNORMAL                0x4002        //﹞????足??
#define    MINOR_BACKPANEL_TEMPERATURE_ABNORMAL        0x4003        //㊣?∼??????足??

#define    MINOR_SDCARD_ABNORMAL            0x4004        //SD?“??????
#define    MINOR_SDCARD_DAMAGE                0x4005        //SD?“????
#define    MINOR_POC_ABNORMAL				0x4006   //?豕㊣?POC???谷?足??
#define MINOR_MAIN_POWER_FAULT              0x4007 //?‾??????
#define MINOR_BACK_UP_POWER_FAULT           0x4008 //㊣???????
#define MINOR_TAMPER_FAULT                  0x4009 //﹞???????
#define MINOR_RS232_FAULT                   0x400a //232℅???????
#define MINOR_RS485_FAULT                   0x400b //485℅???????
#define MINOR_LAN_STATUS_FAULT              0x400c //LAN????????℅???????
#define MINOR_LAN_LINK1_FAULT               0x400d //LAN???﹞1????
#define MINOR_LAN_LINK2_FAULT               0x400e //LAN???﹞2????
#define MINOR_SIM_CARD_STATUS_FAULT         0x400f //4G-SIM?“℅???????
#define MINOR_4G_LINK1_FAULT                0x4010 //4G???﹞1????
#define MINOR_4G_LINK2_FAULT                0x4011 //4G???﹞2????
#define MINOR_OTHER_FAULT                   0x4012 //????????
#define MINOR_FIRE_CONTROL_CONNECT_FAULT    0x4013 //???????‾?迆????????
#define MINOR_SENSOR_SHORT_CIRCUIT          0x4014 //?????‾???﹞
#define MINOR_SENSOR_OPEN_CIRCUIT           0x4015 //?????‾???﹞
#define MINOR_SENSOR_MIS_CONNECT            0x4016 //?????‾?赤??
#define MINOR_SENSOR_FAULT_RESTORE          0x4017 //?????‾????????
#define MINOR_DEVICE_FAULT                  0x4018 //?豕㊣?????

//2018-04-23 ?“???????????足???????角??
#define MINOR_ALARMHOST_WDT_RESET 			    0x1003    //WDT ????
#define MINOR_ALARMHOST_RTC_EXCEPTION 			0x1007    //RTC???㊣?㊣???足??

#define MINOR_ALARMHOST_TEL_LINE_CONNECT_FAILURE 	0x100a    //???∼????????
#define MINOR_ALARMHOST_TEL_LINE_CONNECT_RESTORE 	0x100b    //???∼??????????
#define MINOR_ALARMHOST_EXPANDER_BUS_LOSS 		0x100c    //????℅??????谷????
#define MINOR_ALARMHOST_EXPANDER_BUS_RESTORE 	0x100d    //????℅??????谷????????
#define MINOR_ALARMHOST_KEYPAD_BUS_LOSS 			0x100e    //?邦??℅??????谷????
#define MINOR_ALARMHOST_KEYPAD_BUS_RESTORE 		0x100f    //?邦??℅??????谷????????
#define MINOR_ALARMHOST_SENSOR_FAILURE 			0x1010    //???????????‾????
#define MINOR_ALARMHOST_SENSOR_RESTORE 			0x1011    //???????????‾????
#define MINOR_ALARMHOST_RS485_CONNECT_FAILURE 	0x1012    //RS485?“????????
#define MINOR_ALARMHOST_RS485_CONNECT_RESTORE 	0x1013    //RS485?“????????????

//?∼?????????足???㊣???∼?????????足???????㊣???????????迆?∼???????????㊣?∼?????????????㊣???????????㊣???迄???????????豕㊣??∫???∼?????????足???㊣???∼?????????足???????㊣???????角????
#define	MINOR_ALARMHOST_WIRED_NETWORK_ABNORMAL 	0x1015    //?????????足??
#define	MINOR_ALARMHOST_WIRED_NETWORK_RESTORE 		0x1016    //????????????????
#define	MINOR_ALARMHOST_GPRS_ABNORMAL 				0x1017    //GPRS?“???足??
#define	MINOR_ALARMHOST_GPRS_RESTORE 					0x1018    //GPRS????????
#define	MINOR_ALARMHOST_3G_ABNORMAL 					0x1019    //3G?“???足??
#define	MINOR_ALARMHOST_3G_RESTORE 					0x101a    //3G????????
#define	MINOR_ALARMHOST_SIM_CARD_ABNORMAL 			0x101b    //SIM?“?足??
#define	MINOR_ALARMHOST_SIM_CARD_RESTORE 			0x101c    //SIM?“????????

#define	MINOR_FORMAT_HDD_ERROR  0x1026 //???????????????∫∼?
#define	MINOR_USB_ERROR		0x1027    //USB?“??????
#define	MINOR_USB_RESTORE		0x1028    //USB?“??????????
#define	MINOR_PRINT_ERROR	  0x1029    //?辰???迆????
#define	MINOR_PRINT_RESTORE   0x1030    //?辰???迆????????
#define  MINOR_ALARMHOST_SUBSYSTEM_COMMUNICATION_ERROR    0x1031  //℅?∼??“???赤?車

#define  MINOR_MCU_RESTART    0x1035    //MCU????
#define  MINOR_GPRS_MODULE_FAULT    0x1036  //GPRS???谷????
#define  MINOR_TELEPHONE_MODULE_FAULT    0x1037     //???∼???谷????
#define  MINOR_WIFI_ABNORMAL  0x1038    //WIFI?“???足??
#define  MINOR_WIFI_RESTORE    0x1039    //WIFI????????
#define  MINOR_RF_ABNORMAL   0x103a    //RF?????足??
#define  MINOR_RF_RESTORE     0x103b   //RF????????????
#define  MINOR_DETECTOR_ONLINE   0x103c    //?????‾????
#define  MINOR_DETECTOR_OFFLINE    0x103d    //?????‾????
#define  MINOR_DETECTOR_BATTERY_NORMAL    0x103e  //?????‾????????        
#define  MINOR_DETECTOR_BATTERY_LOW 0x103f  //?????‾?????﹞??
#define  MINOR_DATA_TRAFFIC_OVERFLOW    0x1040    //?‾??????
#define  MINOR_ALARMHOST_ZONE_MODULE_LOSS     0x1041    //﹞??????谷????
#define  MINOR_ALARMHOST_ZONE_MODULE_RESTORE     0x1042    //﹞??????谷????????
#define  MINOR_WIRELESS_OUTPUT_LOSS     0x1043    //???????????谷????
#define  MINOR_WIRELESS_OUTPUT_RESTORE    0x1044    //???????????谷????????
#define  MINOR_WIRELESS_REPEATER_LOSS    0x1045    //?????????‾????
#define  MINOR_WIRELESS_REPEATER_RESTORE    0x1046    //?????????‾????????
#define  MINOR_ALARMHOST_TRIGGER_MODULE_LOSS     0x1047    //??﹞??‾???谷????
#define  MINOR_ALARMHOST_TRIGGER_MODULE_RESTORE    0x1048    //??﹞??‾???谷????????
#define  MINOR_ALARMHOST_WIRELESS_SIREN_LOSS    0x1049    //????????????
#define  MINOR_ALARMHOST_WIRELESS_SIREN_RESTORE     0x104a    //????????????????
#define  MINOR_TX1_SUB_SYSTEM_EXCEPTION             0x1050   /*TX1℅??????足??*/
#define MINOR_TX1_REBOOT_EXCEPTION       0x1051   /*TX1?????足??????*/
#define MINOR_TX1_SUB_SYSTEM_LOSS      0x1052   /*????℅??????足??????*/
#define MINOR_TX1_SUB_SYSTEM_RESTORE     0x1053   /*????℅?????????????*/
#define MINOR_WIRELESS_SPEED_EXCEPTION   0x1054   //?????????????足??



/* ??℅‾ */
//?‾?角??
#define MAJOR_OPERATION                    0x3

//???角??
#define MINOR_VCA_MOTIONEXCEPTION        0x29  //?????足???足??
#define MINOR_START_DVR                    0x41    /* ???迆 */
#define MINOR_STOP_DVR                    0x42    /* ???迆 */
#define MINOR_STOP_ABNORMAL                0x43    /* ?足?????迆 */
#define MINOR_REBOOT_DVR                0x44    /*㊣????????豕㊣?*/

#define MINOR_LOCAL_LOGIN                0x50    /* ㊣??????? */
#define MINOR_LOCAL_LOGOUT                0x51    /* ㊣???℅??迆???? */
#define MINOR_LOCAL_CFG_PARM            0x52    /* ㊣??????????? */
#define MINOR_LOCAL_PLAYBYFILE          0x53    /* ㊣???∼???????﹞??辰???? */
#define MINOR_LOCAL_PLAYBYTIME          0x54    /* ㊣???∼??㊣????﹞??辰????*/
#define MINOR_LOCAL_START_REC            0x55    /* ㊣??????????? */
#define MINOR_LOCAL_STOP_REC            0x56    /* ㊣??????????? */
#define MINOR_LOCAL_PTZCTRL                0x57    /* ㊣??????“???? */
#define MINOR_LOCAL_PREVIEW                0x58    /* ㊣????∟?? (㊣?????????)*/
#define MINOR_LOCAL_MODIFY_TIME         0x59    /* ㊣????????㊣??(㊣?????????) */
#define MINOR_LOCAL_UPGRADE             0x5a    /* ㊣??????? */
#define MINOR_LOCAL_RECFILE_OUTPUT      0x5b    /* ㊣???㊣?﹞????車???? */
#define MINOR_LOCAL_FORMAT_HDD          0x5c    /* ㊣????????????? */
#define MINOR_LOCAL_CFGFILE_OUTPUT      0x5d    /* ????㊣??????????? */
#define MINOR_LOCAL_CFGFILE_INPUT       0x5e    /* ????㊣??????????? */
#define MINOR_LOCAL_COPYFILE            0x5f    /* ㊣???㊣?﹞????? */
#define MINOR_LOCAL_LOCKFILE            0x60    /* ㊣??????“???????? */
#define MINOR_LOCAL_UNLOCKFILE          0x61    /* ㊣??????????????? */
#define MINOR_LOCAL_DVR_ALARM           0x62    /* ㊣???????????????﹞?㊣“??*/
#define MINOR_IPC_ADD                   0x63    /* ㊣????赤??IPC */
#define MINOR_IPC_DEL                   0x64    /* ㊣???????IPC */
#define MINOR_IPC_SET                   0x65    /* ㊣????豕??IPC */
#define MINOR_LOCAL_START_BACKUP        0x66    /* ㊣???????㊣?﹞? */
#define MINOR_LOCAL_STOP_BACKUP            0x67    /* ㊣???????㊣?﹞?*/
#define MINOR_LOCAL_COPYFILE_START_TIME 0x68    /* ㊣???㊣?﹞??????㊣??*/
#define MINOR_LOCAL_COPYFILE_END_TIME    0x69    /* ㊣???㊣?﹞??芍???㊣??*/
#define MINOR_LOCAL_ADD_NAS             0x6a    /*㊣????赤?????????? ?“nfs??iscsi??*/
#define MINOR_LOCAL_DEL_NAS             0x6b    /* ㊣???????nas?? ?“nfs??iscsi??*/
#define MINOR_LOCAL_SET_NAS             0x6c    /* ㊣????豕??nas?? ?“nfs??iscsi??*/
#define MINOR_LOCAL_RESET_PASSWD        0x6d    /* ㊣??????????赤?㊣????????*/ 

#define MINOR_REMOTE_LOGIN                0x70    /* ???????? */
#define MINOR_REMOTE_LOGOUT                0x71    /* ????℅??迆???? */
#define MINOR_REMOTE_START_REC            0x72    /* ???????????? */
#define MINOR_REMOTE_STOP_REC            0x73    /* ???????????? */
#define MINOR_START_TRANS_CHAN            0x74    /* ???????‾???? */
#define MINOR_STOP_TRANS_CHAN            0x75    /* ???????‾???? */
#define MINOR_REMOTE_GET_PARM            0x76    /* ???????????? */
#define MINOR_REMOTE_CFG_PARM            0x77    /* ???????????? */
#define MINOR_REMOTE_GET_STATUS         0x78    /* ????????℅??? */
#define MINOR_REMOTE_ARM                0x79    /* ??????﹞? */
#define MINOR_REMOTE_DISARM                0x7a    /* ?????﹞﹞? */
#define MINOR_REMOTE_REBOOT                0x7b    /* ???????? */
#define MINOR_START_VT                    0x7c    /* ???????????? */
#define MINOR_STOP_VT                    0x7d    /* ???????????? */
#define MINOR_REMOTE_UPGRADE            0x7e    /* ???????? */
#define MINOR_REMOTE_PLAYBYFILE         0x7f    /* ????∼???????﹞? */
#define MINOR_REMOTE_PLAYBYTIME         0x80    /* ????∼??㊣????﹞? */
#define MINOR_REMOTE_PTZCTRL            0x81    /* ???????“???? */
#define MINOR_REMOTE_FORMAT_HDD         0x82    /* ?????????????? */
#define MINOR_REMOTE_STOP               0x83    /* ???????迆 */
#define MINOR_REMOTE_LOCKFILE            0x84    /* ???????“???? */
#define MINOR_REMOTE_UNLOCKFILE         0x85    /* ???????????? */
#define MINOR_REMOTE_CFGFILE_OUTPUT     0x86    /* ???????????????? */
#define MINOR_REMOTE_CFGFILE_INTPUT     0x87    /* ???????????????? */
#define MINOR_REMOTE_RECFILE_OUTPUT     0x88    /* ???????????車???? */
#define MINOR_REMOTE_DVR_ALARM          0x89    /* ????????????????﹞?㊣“??*/
#define MINOR_REMOTE_IPC_ADD            0x8a    /* ?????赤??IPC */
#define MINOR_REMOTE_IPC_DEL            0x8b    /* ????????IPC */
#define MINOR_REMOTE_IPC_SET            0x8c    /* ?????豕??IPC */
#define MINOR_REBOOT_VCA_LIB            0x8d    /*??????????*/
#define MINOR_REMOTE_ADD_NAS            0x8e   /* ?????赤??nas?? ?“nfs??iscsi??*/
#define MINOR_REMOTE_DEL_NAS            0x8f   /* ????????nas?? ?“nfs??iscsi??*/
#define MINOR_REMOTE_SET_NAS            0x90   /* ?????豕??nas?? ?“nfs??iscsi??*/
#define MINOR_LOCAL_OPERATE_LOCK        0x9d            /* ㊣?????℅‾???“             */
#define MINOR_LOCAL_OPERATE_UNLOCK      0x9e            /* ㊣?????℅‾???????“         */
#define MINOR_REMOTE_DELETE_HDISK       0x9a            /* ?????????足?????????????? */
#define MINOR_REMOTE_LOAD_HDISK         0x9b            /* ????????????             */
#define MINOR_REMOTE_UNLOAD_HDISK       0x9c            /* ????????????   */
#define MINOR_SCHEDULE_ANGLECALIBRATION 0X9d            /*?“????????℅?*/
#define MINOR_OTHER_OPERATE             0x200    /* ??????℅‾ */

//2010-05-26 ?????車??DVR?????角??
#define MINOR_LOCAL_START_REC_CDRW      0x91   /* ㊣??????????? */
#define MINOR_LOCAL_STOP_REC_CDRW       0x92   /* ㊣??????????? */
#define MINOR_REMOTE_START_REC_CDRW     0x93   /* ???????????? */
#define MINOR_REMOTE_STOP_REC_CDRW      0x94   /* ???????????? */

#define MINOR_LOCAL_PIC_OUTPUT            0x95   /* ㊣???㊣?﹞????????? */ 
#define MINOR_REMOTE_PIC_OUTPUT            0x96   /* ????㊣?﹞????????? */

//2011-07-26 ????81?車??DVR?????角??
#define MINOR_LOCAL_INQUEST_RESUME      0x97   /* ㊣????????車??????*/
#define MINOR_REMOTE_INQUEST_RESUME     0x98   /* ?????????車??????*/

//2013-01-23 ????86?????車??NVR??℅‾????
#define MINOR_LOCAL_ADD_FILE            0x99        /*㊣???????????*/
#define MINOR_LOCAL_DEL_FILE            0x9f        /*㊣????????車??*/
#define MINOR_REMOTE_INQUEST_ADD_FILE   0x100       /*????????????*/ 

//2009-12-16 ????????℅??????“?????角??
#define MINOR_SUBSYSTEMREBOOT           0xa0    /*????℅??????“??dm6467 ????????*/
#define MINOR_MATRIX_STARTTRANSFERVIDEO 0xa1    /*????℅??????“?????車????????????????*/
#define MINOR_MATRIX_STOPTRANSFERVIDEO    0xa2    /*????℅??????“?????車????????????????*/
#define MINOR_REMOTE_SET_ALLSUBSYSTEM   0xa3    /*????℅??????“???豕???迄??6467℅?????????*/
#define MINOR_REMOTE_GET_ALLSUBSYSTEM   0xa4    /*????℅??????“???????迄??6467℅?????????*/
#define MINOR_REMOTE_SET_PLANARRAY      0xa5    /*????℅??????“???豕??????????℅谷*/
#define MINOR_REMOTE_GET_PLANARRAY      0xa6    /*????℅??????“??????????????℅谷*/
#define MINOR_MATRIX_STARTTRANSFERAUDIO 0xa7    /*????℅??????“?????車????????????????*/
#define MINOR_MATRIX_STOPRANSFERAUDIO   0xa8    /*????℅??????“?????車????????????????*/
#define MINOR_LOGON_CODESPITTER         0xa9    /*????℅??????“????????﹞??‾*/
#define MINOR_LOGOFF_CODESPITTER        0xaa    /*????℅??????“????????﹞??‾*/

//2010-01-22 ????????℅??????“???????‾??℅‾????
#define MINOR_START_DYNAMIC_DECODE         0xb0    /*????????????*/
#define MINOR_STOP_DYNAMIC_DECODE        0xb1    /*????????????*/
#define MINOR_GET_CYC_CFG                0xb2    /*?????????‾?“??????????*/
#define MINOR_SET_CYC_CFG                0xb3    /*?豕???????“??????????*/
#define MINOR_START_CYC_DECODE            0xb4    /*????????????*/
#define MINOR_STOP_CYC_DECODE            0xb5    /*????????????*/
#define MINOR_GET_DECCHAN_STATUS        0xb6    /*?????????“??℅???*/
#define MINOR_GET_DECCHAN_INFO            0xb7    /*?????????“???㊣?∼????*/
#define MINOR_START_PASSIVE_DEC            0xb8    /*????㊣???????*/
#define MINOR_STOP_PASSIVE_DEC            0xb9    /*????㊣???????*/
#define MINOR_CTRL_PASSIVE_DEC            0xba    /*????㊣???????*/
#define MINOR_RECON_PASSIVE_DEC            0xbb    /*㊣???????????*/
#define MINOR_GET_DEC_CHAN_SW            0xbc    /*?????????“??℅?????*/
#define MINOR_SET_DEC_CHAN_SW            0xbd    /*?豕???????“??℅?????*/
#define MINOR_CTRL_DEC_CHAN_SCALE        0xbe    /*?????“????﹞?????*/
#define MINOR_SET_REMOTE_REPLAY            0xbf    /*?豕????????﹞?*/
#define MINOR_GET_REMOTE_REPLAY            0xc0    /*??????????﹞?℅???*/
#define MINOR_CTRL_REMOTE_REPLAY        0xc1    /*??????﹞?????*/
#define MINOR_SET_DISP_CFG                0xc2    /*?豕???????“??*/
#define MINOR_GET_DISP_CFG                0xc3    /*?????????“???豕??*/
#define MINOR_SET_PLANTABLE                0xc4    /*?豕??????????㊣赤*/
#define MINOR_GET_PLANTABLE                0xc5    /*????????????㊣赤*/
#define MINOR_START_PPPPOE                0xc6    /*????PPPoE????*/
#define MINOR_STOP_PPPPOE                0xc7    /*?芍??PPPoE????*/
#define MINOR_UPLOAD_LOGO                0xc8    /*????LOGO*/
//????????℅‾????
#define MINOR_LOCAL_PIN                    0xc9    /* ㊣???PIN??????℅‾ */
#define MINOR_LOCAL_DIAL                0xca    /* ㊣??????????????????? */    
#define MINOR_SMS_CONTROL                0xcb    /* ?????????????? */    
#define MINOR_CALL_ONLINE                0xcc    /* ???????????? */    
#define MINOR_REMOTE_PIN                0xcd    /* ????PIN??????℅‾ */

//2010-12-16 ㊣“??∼?????
#define MINOR_REMOTE_BYPASS             0xd0    /* ???????﹞*/
#define MINOR_REMOTE_UNBYPASS           0xd1    /* ???????﹞????*/
#define MINOR_REMOTE_SET_ALARMIN_CFG    0xd2    /* ?????豕??㊣“??????????*/
#define MINOR_REMOTE_GET_ALARMIN_CFG    0xd3    /* ????????㊣“??????????*/
#define MINOR_REMOTE_SET_ALARMOUT_CFG   0xd4    /* ?????豕??㊣“??????????*/
#define MINOR_REMOTE_GET_ALARMOUT_CFG   0xd5    /* ????????㊣“??????????*/
#define MINOR_REMOTE_ALARMOUT_OPEN_MAN  0xd6    /* ????????????㊣“??????*/
#define MINOR_REMOTE_ALARMOUT_CLOSE_MAN 0xd7    /* ??????????㊣?㊣“??????*/
#define MINOR_REMOTE_ALARM_ENABLE_CFG   0xd8    /* ?????豕??㊣“???‾?迆??RS485????????℅???*/
#define MINOR_DBDATA_OUTPUT                0xd9    /* ?????????????? */
#define MINOR_DBDATA_INPUT                0xda    /* ?????????????? */
#define MINOR_MU_SWITCH                    0xdb    /* ???????? */
#define MINOR_MU_PTZ                    0xdc    /* ????PTZ???? */
#define MINOR_DELETE_LOGO               0xdd    /* ????logo */
#define MINOR_REMOTE_INQUEST_DEL_FILE   0xde       /*????????????*/

#define MINOR_LOCAL_CONF_REB_RAID       0x101           /*㊣???????℅??????“*/
#define MINOR_LOCAL_CONF_SPARE          0x102           /*㊣?????????㊣?*/
#define MINOR_LOCAL_ADD_RAID            0x103           /*㊣??????“?車??*/
#define MINOR_LOCAL_DEL_RAID            0x104           /*㊣????????車??*/
#define MINOR_LOCAL_MIG_RAID            0x105           /*㊣????“???車??*/
#define MINOR_LOCAL_REB_RAID            0x106           /* ㊣??????????“?車??*/
#define MINOR_LOCAL_QUICK_CONF_RAID     0x107           /*㊣??????邦????*/
#define MINOR_LOCAL_ADD_VD              0x108           /*㊣??????“?谷??????*/
#define MINOR_LOCAL_DEL_VD              0x109           /*㊣????????谷??????*/
#define MINOR_LOCAL_RP_VD               0x10a           /*㊣????????谷??????*/
#define MINOR_LOCAL_FORMAT_EXPANDVD     0X10b           /*㊣????????谷??????????*/
#define MINOR_LOCAL_RAID_UPGRADE        0X10c           /*㊣???raid?“????*/  
#define MINOR_LOCAL_STOP_RAID           0x10d           /*㊣???????RAID??℅‾(??∼???∼???)*/  
#define MINOR_REMOTE_CONF_REB_RAID      0x111           /*????????℅??????“*/
#define MINOR_REMOTE_CONF_SPARE         0x112            /*??????????㊣?*/
#define MINOR_REMOTE_ADD_RAID           0x113           /*???????“?車??*/
#define MINOR_REMOTE_DEL_RAID           0x114           /*?????????車??*/
#define MINOR_REMOTE_MIG_RAID           0x115           /*?????“???車??*/
#define MINOR_REMOTE_REB_RAID           0x116           /* ???????????“?車??*/
#define MINOR_REMOTE_QUICK_CONF_RAID    0x117           /*???????邦????*/
#define MINOR_REMOTE_ADD_VD             0x118           /*???????“?谷??????*/
#define MINOR_REMOTE_DEL_VD             0x119           /*?????????谷??????*/
#define MINOR_REMOTE_RP_VD              0x11a           /*?????????谷??????*/
#define MINOR_REMOTE_FORMAT_EXPANDVD    0X11b           /*?????谷??????????*/
#define MINOR_REMOTE_RAID_UPGRADE       0X11c           /*????raid?“????*/  
#define MINOR_REMOTE_STOP_RAID          0x11d           /*????????RAID??℅‾(??∼???∼???)*/
#define MINOR_LOCAL_START_PIC_REC       0x121          /*㊣???????℅???*/ 
#define MINOR_LOCAL_STOP_PIC_REC        0x122          /*㊣???????℅???*/
#define MINOR_LOCAL_SET_SNMP            0x125           /*㊣???????SNMP*/
#define MINOR_LOCAL_TAG_OPT             0x126          /*㊣???㊣那????℅‾*/
#define MINOR_REMOTE_START_PIC_REC      0x131          /*????????℅???*/
#define MINOR_REMOTE_STOP_PIC_REC       0x132           /*????????℅???*/
#define MINOR_REMOTE_SET_SNMP           0x135            /*????????SNMP*/
#define MINOR_REMOTE_TAG_OPT            0x136             /*????㊣那????℅‾*/  
#define MINOR_REMOTE_LOGIN_LOCK         0x137           //???????????“
#define MINOR_REMOTE_LOGIN_UNLOCK       0x138          //????????????
// 9000 v2.2.0
#define MINOR_LOCAL_VOUT_SWITCH         0x140   /* ㊣???????????????℅‾*/
#define MINOR_STREAM_CABAC                 0x141   /* ???‾??????????????????℅‾*/

//Netra 3.0.0
#define MINOR_LOCAL_SPARE_OPT           0x142   /*㊣???N+1 ??㊣??角????℅‾*/
#define MINOR_REMOTE_SPARE_OPT            0x143   /*????N+1 ??㊣??角????℅‾*/
#define MINOR_LOCAL_IPCCFGFILE_OUTPUT    0x144      /* ㊣???????ipc????????*/
#define MINOR_LOCAL_IPCCFGFILE_INPUT      0x145   /* ㊣???????ipc???????? */
#define MINOR_LOCAL_IPC_UPGRADE         0x146   /* ㊣???????IPC */
#define MINOR_REMOTE_IPCCFGFILE_OUTPUT  0x147   /* ????????ipc????????*/
#define MINOR_REMOTE_IPCCFGFILE_INPUT   0x148   /* ????????ipc????????*/
#define MINOR_REMOTE_IPC_UPGRADE        0x149   /* ????????IPC */

#define MINOR_LOCAL_UNLOAD_HDISK        0x150     /*㊣???????????*/
#define MINOR_LOCAL_AUDIO_MIX           0x151     /*㊣????????????足??????*/
#define MINOR_REMOTE_AUDIO_MIX          0x152     /*?????????????足??????*/
#define MINOR_LOCAL_TRIAL_PAUSE         0x153     /*㊣???????????*/
#define MINOR_LOCAL_TRIAL_RESUME        0x154     /*㊣???????????*/
#define MINOR_REMOTE_TRIAL_PAUSE        0x155     /*????????????*/
#define MINOR_REMOTE_TRIAL_RESUME       0x156     /*????????????*/
#define MINOR_REMOTE_MODIFY_VERIFICATION_CODE   0x157 /*???????“???谷?∟??*/

#define MINOR_LOCAL_MAKECALL            0x180          /*㊣???????*/
#define MINOR_LOCAL_REJECTCALL          0x181          /*㊣???????*/
#define MINOR_LOCAL_ANSWERCALL          0x182          /*㊣???????*/
#define MINOR_LOCAL_HANGUPCALL          0x183          /*㊣???????*/

#define MINOR_REMOTE_MAKECALL           0x188          /*????????*/
#define MINOR_REMOTE_REJECTCALL         0x189          /*????????*/
#define MINOR_REMOTE_ANSWERCALL         0x18a          /*????????*/
#define MINOR_REMOTE_HANGUPCALL         0x18b          /*????????*/

#define MINOR_SET_MULTI_MASTER          0x201    /*?豕???車???‾??*/
#define MINOR_SET_MULTI_SLAVE           0x202    /*?豕???車??℅???*/
#define MINOR_CANCEL_MULTI_MASTER       0x203    /*?????車???‾??*/
#define MINOR_CANCEL_MULTI_SLAVE        0x204    /*?????車??℅???*/

#define MINOR_DISPLAY_LOGO                0x205    /*????LOGO*/
#define MINOR_HIDE_LOGO                 0x206    /*????LOGO*/
#define MINOR_SET_DEC_DELAY_LEVEL       0x207    /*?????“?????㊣??㊣??豕??*/
#define MINOR_SET_BIGSCREEN_DIPLAY_AREA 0x208    /*?豕???車?????????辰*/
#define MINOR_CUT_VIDEO_SOURCE          0x209    /*?車?????????????豕??*/
#define MINOR_SET_BASEMAP_AREA          0x210    /*?車???℅?????辰?豕??*/
#define MINOR_DOWNLOAD_BASEMAP          0x211    /*?????車???℅??*/
#define MINOR_CUT_BASEMAP               0x212    /*?℅??????????*/
#define MINOR_CONTROL_ELEC_ENLARGE      0x213    /*??℅?﹞??車??℅‾(﹞??車?辰????)*/
#define MINOR_SET_OUTPUT_RESOLUTION     0x214    /*????????﹞?㊣????豕??*/
#define MINOR_SET_TRANCSPARENCY         0X215    /*???????‾???豕??*/
#define MINOR_SET_OSD                   0x216    /*????OSD?豕??*/
#define MINOR_RESTORE_DEC_STATUS        0x217    /*????????℅???(???∼?????㊣??????????????℅???)*/

//2011-11-11 ?????車???????‾??℅‾???????角??
#define MINOR_SCREEN_OPEN_SCREEN        0x218   //?辰??????
#define MINOR_SCREEN_CLOSE_SCREEN       0x219   //??㊣?????
#define MINOR_SCREEN_SWITCH_SIGNAL      0x21a   //??????????
#define MINOR_SCREEN_MODIFY_NETWORK     0x21b   //????????????
#define MINOR_SCREEN_MODIFY_LEDRES      0x21c   //??????????LED﹞?㊣???
#define MINOR_SCREEN_SHOW_NORMAL        0x21d   //?????∼?????“????????
#define MINOR_SCREEN_SHOW_TILE          0x21e   //?????∼??????????????
#define MINOR_SCREEN_DEC_NORMAL         0x21f   //???????“????????
#define MINOR_SCREEN_DEC_LOWLATENCY     0x220   //?????????㊣????????
#define MINOR_SCREEN_MODIFY_SELFRES     0x221   //??????????℅??“??﹞?㊣???
#define MINOR_SCREEN_OUTPUT_POSITION    0x222   //??????????????
#define MINOR_SCREEN_IMAGE_ENHANCE      0x223   //????????
#define MINOR_SCREEN_JOIN_SIGNAL        0x224   //??????????
#define MINOR_SCREEN_SIGNAL_OSD         0x225   //??????℅?﹞?????
#define MINOR_SCREEN_ASSOCIATED_INTERACTION 0x226   //???????????角??????﹞????‾
#define MINOR_SCREEN_MODIFY_MATRIX      0x227   //???????車????
#define MINOR_SCREEN_WND_TOP_KEEP       0x228   //?∼??????㊣???
#define MINOR_SCREEN_WND_OPEN_KEEP      0x229   //?∼???辰??㊣???
#define MINOR_SCREEN_WALL_MIRROR        0x22a   //?????????辰????
#define MINOR_SCREEN_UPLOAD_BASEMAP     0x22b   //?????℅??
#define MINOR_SCREEN_SHOW_BASEMAP       0x22c   //?????℅??
#define MINOR_SCREEN_HIDE_BASEMAP       0x22d   //?????℅??
#define MINOR_SCREEN_MODIFY_SERIAL      0x22e   //????????????

#define MINOR_SCREEN_SET_INPUT          0x251    /*??????????*/
#define MINOR_SCREEN_SET_OUTPUT         0x252    /*?????????“??*/
#define MINOR_SCREEN_SET_OSD            0x253    /*?????谷??LED*/
#define MINOR_SCREEN_SET_LOGO           0x254    /*????LOGO*/
#define MINOR_SCREEN_SET_LAYOUT         0x255    /*?豕??????*/
#define MINOR_SCREEN_PICTUREPREVIEW     0x256    /*??????℅‾*/


//2012-06-14 CVCS2.0, ?∼???豕??????℅‾??V1.0?? V1.1?????????????㊣?㊣???豕㊣????????????“?? 
#define MINOR_SCREEN_GET_OSD            0x257   /*?????谷??LED*/
#define MINOR_SCREEN_GET_LAYOUT            0x258   /*????????*/
#define MINOR_SCREEN_LAYOUT_CTRL        0x259   /*????????*/
#define MINOR_GET_ALL_VALID_WND            0x260    /*?????迄?????∫?∼??*/
#define MINOR_GET_SIGNAL_WND            0x261    /*?????????∼??????*/
#define MINOR_WINDOW_CTRL                0x262    /*?∼??????*/
#define MINOR_GET_LAYOUT_LIST            0x263    /*??????????㊣赤*/
#define MINOR_LAYOUT_CTRL                0x264    /*????????*/
#define MINOR_SET_LAYOUT                0x265    /*?豕??????*/
#define MINOR_GET_SIGNAL_LIST            0x266    /*????????????????㊣赤*/
#define MINOR_GET_PLAN_LIST                0x267    /*?????∟∼???㊣赤*/
#define MINOR_SET_PLAN                    0x268    /*?????∟∼?*/
#define MINOR_CTRL_PLAN                    0x269    /*?????∟∼?*/
#define MINOR_CTRL_SCREEN                0x270    /*????????*/
#define MINOR_ADD_NETSIG                0x271    /*?赤????????*/
#define MINOR_SET_NETSIG                0x272    /*??????????*/
#define MINOR_SET_DECBDCFG                0x273    /*?豕??????∼?????*/
#define MINOR_GET_DECBDCFG                0x274    /*????????∼?????*/
#define MINOR_GET_DEVICE_STATUS            0x275    /*?????豕㊣?????*/
#define MINOR_UPLOAD_PICTURE            0x276    /*?℅??????*/
#define MINOR_SET_USERPWD                0x277    /*?豕?????∫????*/
#define MINOR_ADD_LAYOUT                0x278    /*?赤??????*/
#define MINOR_DEL_LAYOUT                0x279    /*????????*/
#define MINOR_DEL_NETSIG                0x280    /*??????????*/
#define MINOR_ADD_PLAN                    0x281    /*?赤???∟∼?*/
#define MINOR_DEL_PLAN                    0x282    /*?????∟∼?*/
#define MINOR_GET_EXTERNAL_MATRIX_CFG    0x283    //???????????車????
#define MINOR_SET_EXTERNAL_MATRIX_CFG    0x284    //?豕?????????車????
#define    MINOR_GET_USER_CFG                0x285    //???????∫????
#define    MINOR_SET_USER_CFG                0x286    //?豕?????∫????
#define    MINOR_GET_DISPLAY_PANEL_LINK_CFG 0x287    //??????????????????
#define    MINOR_SET_DISPLAY_PANEL_LINK_CFG 0x288    //?豕????????????????

#define    MINOR_GET_WALLSCENE_PARAM        0x289        //?????????????∼
#define    MINOR_SET_WALLSCENE_PARAM        0x28a        //?豕???????????∼
#define    MINOR_GET_CURRENT_WALLSCENE        0x28b        //?????㊣?∼???????∼
#define    MINOR_SWITCH_WALLSCENE            0x28c        //???∼????
#define    MINOR_SIP_LOGIN                    0x28d        //SIP℅??芍????
#define MINOR_VOIP_START                0x28e        //VOIP????????
#define MINOR_VOIP_STOP                    0x28f        //VOIP????????
#define MINOR_WIN_TOP                   0x290       //???????∼??????
#define MINOR_WIN_BOTTOM                0x291       //???????∼?????℅

// Netra 2.2.2
#define MINOR_LOCAL_LOAD_HDISK          0x300            //㊣???????????             
#define MINOR_LOCAL_DELETE_HDISK        0x301            //㊣????????足??????????????

//KY2013 3.0.0
#define MINOR_LOCAL_MAIN_AUXILIARY_PORT_SWITCH    0X302 //㊣????‾?“??????
#define MINOR_LOCAL_HARD_DISK_CHECK                0x303 //㊣??????赤????℅??足

//Netra3.1.0
#define MINOR_LOCAL_CFG_DEVICE_TYPE        0x310    //㊣????????豕㊣??角??
#define MINOR_REMOTE_CFG_DEVICE_TYPE    0x311    //?????????豕㊣??角??
#define MINOR_LOCAL_CFG_WORK_HOT_SERVER    0x312    //㊣????????∟℅‾?迆??㊣?﹞????‾
#define MINOR_REMOTE_CFG_WORK_HOT_SERVER 0x313    //?????????∟℅‾?迆??㊣?﹞????‾
#define MINOR_LOCAL_DELETE_WORK            0x314    //㊣????????∟℅‾?迆
#define MINOR_REMOTE_DELETE_WORK        0x315    //?????????∟℅‾?迆
#define    MINOR_LOCAL_ADD_WORK            0x316    //㊣????赤???∟℅‾?迆
#define MINOR_REMOTE_ADD_WORK            0x317    //?????赤???∟℅‾?迆
#define MINOR_LOCAL_IPCHEATMAP_OUTPUT   0x318            /* ㊣?????????????????      */
#define MINOR_LOCAL_IPCHEATFLOW_OUTPUT  0x319          /* ㊣????????????‾??????      */
#define MINOR_REMOTE_SMS_SEND           0x350    /*????﹞???????*/
#define MINOR_LOCAL_SMS_SEND            0x351   /*㊣???﹞???????*/
#define MINOR_ALARM_SMS_SEND            0x352    /*﹞???????㊣“??*/
#define MINOR_SMS_RECV                  0x353     /*????????*/
//?“㊣?℅???0x350??0x351???????∟??GUI?辰IE??????㊣角????﹞?????????
#define MINOR_LOCAL_SMS_SEARCH          0x354  /*㊣??????‾????*/
#define MINOR_REMOTE_SMS_SEARCH         0x355   /*???????‾????*/
#define MINOR_LOCAL_SMS_READ            0x356   /*㊣????谷??????*/
#define MINOR_REMOTE_SMS_READ           0x357   /*?????谷??????*/
#define MINOR_REMOTE_DIAL_CONNECT       0x358   /*????????????????*/
#define MINOR_REMOTE_DIAL_DISCONN       0x359   /*????????????????*/
#define MINOR_LOCAL_WHITELIST_SET       0x35A   /*㊣???????∼℅????*/
#define MINOR_REMOTE_WHITELIST_SET      0x35B   /*????????∼℅????*/
#define MINOR_LOCAL_DIAL_PARA_SET       0x35C   /*㊣???????????????*/
#define MINOR_REMOTE_DIAL_PARA_SET      0x35D   /*????????????????*/
#define MINOR_LOCAL_DIAL_SCHEDULE_SET   0x35E   /*㊣???????????????*/
#define MINOR_REMOTE_DIAL_SCHEDULE_SET  0x35F   /*????????????????*/
#define MINOR_PLAT_OPER                 0x360   /* ???“??℅‾*/
#define MINOR_REMOTE_CFG_POE_WORK_MODE  0x361//?????豕??POE?∟℅‾????
#define MINOR_LOCAL_CFG_POE_WORK_MODE   0x362//㊣????豕??POE?∟℅‾????
#define MINOR_REMOTE_CFG_FACE_CONTRAST  0x363//?????豕??????㊣???????
#define MINOR_LOCAL_CFG_FACE_CONTRAST   0x364//㊣????豕??????㊣???????
#define MINOR_REMOTE_CFG_WHITELIST_FACE_CONTRAST   0x365//?????豕??∼℅????????㊣???????
#define MINOR_LOCAL_CFG_WHITELIST_FACE_CONTRAST    0x366//㊣????豕??∼℅????????㊣???????
#define MINOR_LOCAL_CHECK_TIME          0x367   //㊣??????????㊣
#define MINOR_VCA_ONEKEY_EXPORT_PICTURE 0x368 //???邦????????
#define MINOR_VCA_ONEKEY_DELETE_PICTURE 0x369 //???邦????????
#define MINOR_VCA_ONEKEY_EXPORT_VIDEO   0x36a //???邦????????
#define MINOR_VCA_ONEKEY_DELETE_VIDEO   0x36b //???邦????????
#define MINOR_REMOTE_CFG_WIRELESS_DIALPARAM 0x36c /*????????????????????*/
#define MINOR_LOCAL_CFG_WIRELESS_DIALPARAM  0x36d /*㊣???????????????????*/
#define MINOR_REMOTE_CFG_WIRELESS_SMSPARAM  0x36e /*????????????????????????*/
#define MINOR_LOCAL_CFG_WIRELESS_SMSPARAM   0x36f /*㊣???????????????????????*/
#define MINOR_REMOTE_CFG_WIRELESS_SMSSElFHELP  0x370 /*????????????????℅??迆????????*/
#define MINOR_LOCAL_CFG_WIRELESS_SMSSElFHELP   0x371 /*㊣???????????????℅??迆????????*/
#define MINOR_REMOTE_CFG_WIRELESS_NETFLOWPARAM 0x372 /*?????????????‾??????????*/
#define MINOR_LOCAL_CFG_WIRELESS_NETFLOWPARAM  0x373 /*㊣????????????‾??????????*/

//0x400-0x1000 ??????℅‾?角??
#define MINOR_REMOTE_OPEN_DOOR          0x400   //????????
#define MINOR_REMOTE_CLOSE_DOOR         0x401   //????????(????)
#define MINOR_REMOTE_ALWAYS_OPEN        0x402   //????????(℅???)
#define MINOR_REMOTE_ALWAYS_CLOSE       0x403   //????????(????)
#define MINOR_REMOTE_CHECK_TIME         0x404   //???????????㊣
#define MINOR_NTP_CHECK_TIME            0x405   //NTP℅??????㊣
#define MINOR_REMOTE_CLEAR_CARD         0x406   //?????????“??
#define MINOR_REMOTE_RESTORE_CFG        0x407   //????????????????
#define MINOR_ALARMIN_ARM               0x408   //﹞?????﹞?
#define MINOR_ALARMIN_DISARM            0x409   //﹞????﹞﹞?
#define MINOR_LOCAL_RESTORE_CFG         0x40a   //㊣??????????????? 
#define MINOR_REMOTE_CAPTURE_PIC        0x40b  //????℅???
#define MINOR_MOD_NET_REPORT_CFG        0x40c   //????????????????????
#define MINOR_MOD_GPRS_REPORT_PARAM     0x40d   //????GPRS????????????
#define MINOR_MOD_REPORT_GROUP_PARAM    0x40e   //????????℅谷????????
#define    MINOR_UNLOCK_PASSWORD_OPEN_DOOR  0x40f  //??????????
#define MINOR_AUTO_RENUMBER              0x410  //℅???????㊣角??
#define MINOR_AUTO_COMPLEMENT_NUMBER     0x411  //℅???????㊣角??
#define MINOR_NORMAL_CFGFILE_INPUT          0x412   //???????“????????
#define MINOR_NORMAL_CFGFILE_OUTTPUT     0x413   //???????“????????
#define MINOR_CARD_RIGHT_INPUT              0x414   //?????“?“??????
#define MINOR_CARD_RIGHT_OUTTPUT          0x415   //?????“?“??????
#define MINOR_LOCAL_USB_UPGRADE             0x416   //㊣???U??????
#define MINOR_REMOTE_VISITOR_CALL_LADDER     0x417  //﹞???????
#define MINOR_REMOTE_HOUSEHOLD_CALL_LADDER   0x418  //℅??∫????
#define MINOR_REMOTE_ACTUAL_GUARD            0x419  //???????㊣??﹞?
#define MINOR_REMOTE_ACTUAL_UNGUARD          0x41a  //???????㊣?﹞﹞?
#define MINOR_REMOTE_CONTROL_NOT_CODE_OPER_FAILED     0x41b   //?????‾????????℅‾?∫∼?
#define MINOR_REMOTE_CONTROL_CLOSE_DOOR               0x41c   //?????‾????
#define MINOR_REMOTE_CONTROL_OPEN_DOOR                0x41d   //?????‾????
#define MINOR_REMOTE_CONTROL_ALWAYS_OPEN_DOOR         0x41e   //?????‾??????

#define MINOR_OPERATION_CUSTOM1        0x900  //????℅??“????℅‾1
#define MINOR_OPERATION_CUSTOM2        0x901  //????℅??“????℅‾2
#define MINOR_OPERATION_CUSTOM3        0x902  //????℅??“????℅‾3
#define MINOR_OPERATION_CUSTOM4        0x903  //????℅??“????℅‾4
#define MINOR_OPERATION_CUSTOM5        0x904  //????℅??“????℅‾5
#define MINOR_OPERATION_CUSTOM6        0x905  //????℅??“????℅‾6
#define MINOR_OPERATION_CUSTOM7        0x906  //????℅??“????℅‾7
#define MINOR_OPERATION_CUSTOM8        0x907  //????℅??“????℅‾8
#define MINOR_OPERATION_CUSTOM9        0x908  //????℅??“????℅‾9
#define MINOR_OPERATION_CUSTOM10       0x909  //????℅??“????℅‾10
#define MINOR_OPERATION_CUSTOM11       0x90a  //????℅??“????℅‾11
#define MINOR_OPERATION_CUSTOM12       0x90b  //????℅??“????℅‾12
#define MINOR_OPERATION_CUSTOM13       0x90c  //????℅??“????℅‾13
#define MINOR_OPERATION_CUSTOM14       0x90d  //????℅??“????℅‾14
#define MINOR_OPERATION_CUSTOM15       0x90e  //????℅??“????℅‾15
#define MINOR_OPERATION_CUSTOM16       0x90f  //????℅??“????℅‾16
#define MINOR_OPERATION_CUSTOM17       0x910  //????℅??“????℅‾17
#define MINOR_OPERATION_CUSTOM18       0x911  //????℅??“????℅‾18
#define MINOR_OPERATION_CUSTOM19       0x912  //????℅??“????℅‾19
#define MINOR_OPERATION_CUSTOM20       0x913  //????℅??“????℅‾20
#define MINOR_OPERATION_CUSTOM21       0x914  //????℅??“????℅‾21
#define MINOR_OPERATION_CUSTOM22       0x915  //????℅??“????℅‾22
#define MINOR_OPERATION_CUSTOM23       0x916  //????℅??“????℅‾23
#define MINOR_OPERATION_CUSTOM24       0x917  //????℅??“????℅‾24
#define MINOR_OPERATION_CUSTOM25       0x918  //????℅??“????℅‾25
#define MINOR_OPERATION_CUSTOM26       0x919  //????℅??“????℅‾26
#define MINOR_OPERATION_CUSTOM27       0x91a  //????℅??“????℅‾27
#define MINOR_OPERATION_CUSTOM28       0x91b  //????℅??“????℅‾28
#define MINOR_OPERATION_CUSTOM29       0x91c  //????℅??“????℅‾29
#define MINOR_OPERATION_CUSTOM30       0x91d  //????℅??“????℅‾30
#define MINOR_OPERATION_CUSTOM31       0x91e  //????℅??“????℅‾31
#define MINOR_OPERATION_CUSTOM32       0x91f  //????℅??“????℅‾32
#define MINOR_OPERATION_CUSTOM33       0x920  //????℅??“????℅‾33
#define MINOR_OPERATION_CUSTOM34       0x921  //????℅??“????℅‾34
#define MINOR_OPERATION_CUSTOM35       0x922  //????℅??“????℅‾35
#define MINOR_OPERATION_CUSTOM36       0x923  //????℅??“????℅‾36
#define MINOR_OPERATION_CUSTOM37       0x924  //????℅??“????℅‾37
#define MINOR_OPERATION_CUSTOM38       0x925  //????℅??“????℅‾38
#define MINOR_OPERATION_CUSTOM39       0x926  //????℅??“????℅‾39
#define MINOR_OPERATION_CUSTOM40       0x927  //????℅??“????℅‾40
#define MINOR_OPERATION_CUSTOM41       0x928  //????℅??“????℅‾41
#define MINOR_OPERATION_CUSTOM42       0x929  //????℅??“????℅‾42
#define MINOR_OPERATION_CUSTOM43       0x92a  //????℅??“????℅‾43
#define MINOR_OPERATION_CUSTOM44       0x92b  //????℅??“????℅‾44
#define MINOR_OPERATION_CUSTOM45       0x92c  //????℅??“????℅‾45
#define MINOR_OPERATION_CUSTOM46       0x92d  //????℅??“????℅‾46
#define MINOR_OPERATION_CUSTOM47       0x92e  //????℅??“????℅‾47
#define MINOR_OPERATION_CUSTOM48       0x92f  //????℅??“????℅‾48
#define MINOR_OPERATION_CUSTOM49       0x930  //????℅??“????℅‾49
#define MINOR_OPERATION_CUSTOM50       0x931  //????℅??“????℅‾50
#define MINOR_OPERATION_CUSTOM51       0x932  //????℅??“????℅‾51
#define MINOR_OPERATION_CUSTOM52       0x933  //????℅??“????℅‾52
#define MINOR_OPERATION_CUSTOM53       0x934  //????℅??“????℅‾53
#define MINOR_OPERATION_CUSTOM54       0x935  //????℅??“????℅‾54
#define MINOR_OPERATION_CUSTOM55       0x936  //????℅??“????℅‾55
#define MINOR_OPERATION_CUSTOM56       0x937  //????℅??“????℅‾56
#define MINOR_OPERATION_CUSTOM57       0x938  //????℅??“????℅‾57
#define MINOR_OPERATION_CUSTOM58       0x939  //????℅??“????℅‾58
#define MINOR_OPERATION_CUSTOM59       0x93a  //????℅??“????℅‾59
#define MINOR_OPERATION_CUSTOM60       0x93b  //????℅??“????℅‾60
#define MINOR_OPERATION_CUSTOM61       0x93c  //????℅??“????℅‾61
#define MINOR_OPERATION_CUSTOM62       0x93d  //????℅??“????℅‾62
#define MINOR_OPERATION_CUSTOM63       0x93e  //????℅??“????℅‾63
#define MINOR_OPERATION_CUSTOM64       0x93f  //????℅??“????℅‾64

#define MINOR_SET_WIFI_PARAMETER               0x950    //?豕??WIFI????????
#define MINOR_EZVIZ_LOGIN                      0x951    //??????????
#define MINOR_EZVIZ_LOGINOUT                   0x952    //??????????
#define MINOR_LOCK_ADD                         0x953    //???????赤??
#define MINOR_LOCK_DELETE                      0x954    //??????????
#define MINOR_LOCK_GET_STATUS                  0x955    //??????℅???????
#define MINOR_LOCK_SET_TMP_PASSWORD            0x956    //?????????㊣??????﹞?
#define MINOR_LOCK_SET_SILENT_MODE             0x957    //???????????豕??
#define MINOR_LOCK_SET_LATE_WARNING            0x958    //???????赤?谷?芍???豕??
#define MINOR_LOCK_IPC_ADD                     0x959    //??????IPC????
#define MINOR_LOCK_IPC_REMOVE                  0x95a    //??????IPC????????
#define MINOR_LOCK_DETECTOR_ADD                0x95b    //???????????‾????
#define MINOR_LOCK_DETECTOR_REMOVE             0x95c    //???????????‾????????
#define MINOR_LOCK_MESSAGE_REMINDING_OPEN      0x95d    //???????????芍???辰??
#define MINOR_LOCK_MESSAGE_REMINDING_CLOSE     0x95e    //???????????芍????㊣?
#define MINOR_LOCK_SET_HEART_BEAT              0x95f    //???????????豕??
#define MINOR_LOCK_REBOOT                      0x960        //??????????
#define MINOR_LOCK_CLEAR_USER                  0x961        //?????????????∫
#define MINOR_LOCK_FORMAT                      0x962        //????????????
#define MINOR_LOCK_FINGER_CHANGE               0x963        //??????????????
#define MINOR_LOCK_PASSWORD_CHANGE             0x964     //??????????????
#define MINOR_LOCK_CARD_CHANGE                 0x965     //???????“????????
#define MINOR_LOCK_USER_CHANGE                 0x966      //?????????∫????????
#define MINOR_LOCK_SYSTEM_CHANGE               0x967     //??????????????????
#define MINOR_LOCK_CHANGE_ADD_UESR             0x968      //?????????????∫
#define MINOR_LOCK_CHANGE_DEL_UESR             0x969     //?????????????∫
#define MINOR_LOCK_CHANGE_CUSTOM_USER_NAME     0x96a    //??????℅??“?????∫???∫??????
#define MINOR_LOCK_CHANGE_REMOTE_DEVICE        0x96b  //???????????‾????????
#define MINOR_LOCK_CHANGE_ADD_FP               0x96c  //??????????????
#define MINOR_LOCK_CHANGE_DEL_FP               0x96d  //??????????????
#define MINOR_LOCK_CHANGE_ADD_PASSWORD         0x96e  //??????????????
#define MINOR_LOCK_CHANGE_DEL_PASSWORD         0x96f  //??????????????
#define MINOR_LOCK_CHANGE_ADD_CARD             0x970  //???????????“??
#define MINOR_LOCK_CHANGE_DEL_CARD             0x971  //???????????“??
#define MINOR_LOCK_NETWORK_SWITCH              0x972  //??????????????????????
#define MINOR_LOCK_CLEAR_NETWORK_DATA          0x973  //??????????????????
#define MINOR_LOCK_CLEAR_HOST_USER             0x974  //???????????‾?????∫
#define MINOR_LOCK_CLEAR_GUEST_USER            0x975  //?????????????????∫
#define MINOR_LOCK_CLEAN_ALL_REMOTE_DEVICE     0x976   //?????‾???∫????????
#define MINOR_LOCK_CLEAN_NORMAL_USER_FINGRT    0x977    //?????????????“???∫????
#define MINOR_LOCK_CLEAN_ALL_CARD              0x978      //???????????迄???“??
#define MINOR_LOCK_CLEAN_ALL_PASSWORD          0x979    //???????????迄??????
#define MINOR_START_WIRELESSSERVER             0x97a    //?????豕㊣?????
#define MINOR_STOP_WIRELESSSERVER              0x97b    //??㊣??豕㊣?????
#define MINOR_EMERGENCY_CARD_AUTH_NORMAL_CARD  0x97c    //???㊣???赤?“???“???“?“
#define MINOR_CHANGE_ALWAYS_OPEN_RIGHT         0x97d    //?“??????????
#define MINOR_LOCK_DOOR_BELL_EVENT             0x97e    //?????????“??℅‾????﹞???

//2018-04-23 ?“????????????℅‾?????角??
#define    MINOR_ALARMHOST_GUARD     		0x1010    //???“??﹞?(??????﹞?)
#define    MINOR_ALARMHOST_UNGUARD 		0x1011    //???“?﹞﹞?
#define    MINOR_ALARMHOST_BYPASS 				0x1012    //???﹞
#define    MINOR_ALARMHOST_DURESS_ACCESS 			0x1013    //????

#define    MINOR_ALARMHOST_RS485_PARAM               0x1018   //????485????????
#define    MINOR_ALARMHOST_ALARM_OUTPUT 				0x1019    //??????﹞??‾
#define    MINOR_ALARMHOST_ACCESS_OPEN 				0x101a    //??????????
#define    MINOR_ALARMHOST_ACCESS_CLOSE 				0x101b    //??????????
#define    MINOR_ALARMHOST_SIREN_OPEN 				0x101c    //??????????
#define    MINOR_ALARMHOST_SIREN_CLOSE 				0x101d    //??????????
#define    MINOR_ALARMHOST_MOD_ZONE_CONFIG 			0x101e    //????﹞???????
#define    MINOR_ALARMHOST_MOD_ALARMOUT_CONIFG 	0x101f    //??????﹞??‾????
#define    MINOR_ALARMHOST_MOD_ANALOG_CONFIG 		0x1020    //??????????????
#define    MINOR_ALARMHOST_RS485_CONFIG 				0x1021    //????485?“??????
#define    MINOR_ALARMHOST_PHONE_CONFIG 				0x1022    //????????????
#define    MINOR_ALARMHOST_ADD_ADMIN 				0x1023    //???????赤?㊣
#define    MINOR_ALARMHOST_MOD_ADMIN_PARAM 		0x1024    //???????赤?㊣????
#define    MINOR_ALARMHOST_DEL_ADMIN 					0x1025    //???????赤?㊣
#define    MINOR_ALARMHOST_ADD_NETUSER 				0x1026    //?????車????℅‾?㊣
#define    MINOR_ALARMHOST_MOD_NETUSER_PARAM 		0x1027    //?????車????℅‾?㊣????
#define    MINOR_ALARMHOST_DEL_NETUSER 				0x1028    //?????車????℅‾?㊣
#define    MINOR_ALARMHOST_ADD_OPERATORUSER 		0x1029    //?????∼????℅‾?㊣
#define    MINOR_ALARMHOST_MOD_OPERATORUSER_PW 	0x102a    //?????∼????℅‾?㊣????
#define    MINOR_ALARMHOST_DEL_OPERATORUSER 		0x102b    //?????∼????℅‾?㊣
#define    MINOR_ALARMHOST_ADD_KEYPADUSER 		0x102c    //?????邦??/???“?‾???∫	
#define    MINOR_ALARMHOST_DEL_KEYPADUSER 		0x102d    //?????邦??/???“?‾???∫	


#define    MINOR_ALARMHOST_MOD_HOST_CONFIG          0x1032    //?????‾?迆????
#define    MINOR_ALARMHOST_RESTORE_BYPASS 			0x1033    //???﹞????

#define    MINOR_ALARMHOST_ALARMOUT_OPEN 			0x1034    //??﹞??‾????
#define    MINOR_ALARMHOST_ALARMOUT_CLOSE 			0x1035    //??﹞??‾??㊣?
#define    MINOR_ALARMHOST_MOD_SUBSYSTEM_PARAM 	0x1036    //????℅?????????????
#define    MINOR_ALARMHOST_GROUP_BYPASS 				0x1037    //℅谷???﹞
#define    MINOR_ALARMHOST_RESTORE_GROUP_BYPASS 	0x1038    //℅谷???﹞????
#define    MINOR_ALARMHOST_MOD_GRPS_PARAM 			0x1039    //????GPRS????

#define    MINOR_ALARMHOST_MOD_REPORT_MOD 			0x103b    //????????﹞???????
#define    MINOR_ALARMHOST_MOD_GATEWAY_PARAM 		0x103c    //????????????????

#define    MINOR_STAY_ARM 	0x104c    //??????﹞?
#define    MINOR_QUICK_ARM 			0x104d    //???㊣??﹞?
#define    MINOR_AUTOMATIC_ARM 		0x104e    //℅?????﹞?
#define    MINOR_AUTOMATIC_DISARM 		0x104f    //℅????﹞﹞?
#define    MINOR_KEYSWITCH_ARM 	0x1050  //???℅???﹞﹞?﹞?????﹞?
#define    MINOR_KEYSWITCH_DISARM	0x1051  //???℅???﹞﹞?﹞????﹞﹞?
#define    MINOR_CLEAR_ALARM	0x1052    //????
#define    MINOR_MOD_FAULT_CFG		0x1053  //????????????????
#define    MINOR_MOD_EVENT_TRIGGER_ALARMOUT_CFG	0x1054  //??????????﹞???﹞??‾????
#define    MINOR_SEARCH_EXTERNAL_MODULE  0x1055 //???‾???????谷
#define    MINOR_REGISTER_EXTERNAL_MODULE 0x1056  //????℅??芍???????谷
#define    MINOR_CLOSE_KEYBOARD_ALARM	0x1057 //??㊣??邦??㊣“???芍????
#define    MINOR_MOD_3G_PARAM		0x1058  //????3G????
#define    MINOR_MOD_PRINT_PARAM 0x1059  //?????辰???迆????
#define    MINOR_ALARMHOST_SD_CARD_FORMAT		0x1060    //SD?“??????
#define MINOR_ALARMHOST_SUBSYSTEM_UPGRADE  0x1061 //℅?∼?????????

#define MINOR_PLAN_ARM_CFG     0x1062 //???????﹞﹞?????????
#define MINOR_PHONE_ARM         0x1063 //???迆??﹞?
#define MINOR_PHONE_STAY_ARM     0x1064 //???迆??????﹞?
#define MINOR_PHONE_QUICK_ARM   0x1065 //???迆???㊣??﹞?
#define MINOR_PHONE_DISARM     0x1066 //???迆?﹞﹞?
#define MINOR_PHONE_CLEAR_ALARM     0x1067 //???迆????
#define MINOR_WHITELIST_CFG     0x1068 //∼℅????????
#define MINOR_TIME_TRIGGER_CFG    0x1069 //?“?㊣??????﹞??‾????
#define MINOR_CAPTRUE_CFG     0x106a //℅???????????
#define MINOR_TAMPER_CFG    0x106b //﹞???﹞???????????

#define MINOR_REMOTE_KEYPAD_UPGRADE    0x106c //?????????邦??
#define MINOR_ONETOUCH_AWAY_ARMING  0x106d //???邦??????﹞? 
#define MINOR_ONETOUCH_STAY_ARMING     0x106e //???邦??????﹞?
#define MINOR_SINGLE_PARTITION_ARMING_OR_DISARMING  0x106f //??﹞??????﹞﹞? 
#define MINOR_CARD_CONFIGURATION   0x1070 //?“????????
#define MINOR_CARD_ARMING_OR_DISARMING   0x1071 //???“???﹞﹞?
#define MINOR_EXPENDING_NETCENTER_CONFIGURATION    0x1072 //????????????????
#define MINOR_NETCARD_CONFIGURATION    0x1073 //???“????
#define MINOR_DDNS_CONFIGURATION      0x1074 //DDNS????
#define MINOR_RS485BUS_CONFIGURATION    0x1075 // 485℅???????????
#define MINOR_RS485BUS_RE_REGISTRATION     0x1076 //485℅???????℅??芍

#define MINOR_REMOTE_OPEN_ELECTRIC_LOCK 0x1077 //?????辰??????
#define MINOR_REMOTE_CLOSE_ELECTRIC_LOCK 0x1078 //??????㊣?????
#define MINOR_LOCAL_OPEN_ELECTRIC_LOCK 0x1079 //㊣????辰??????
#define MINOR_LOCAL_CLOSE_ELECTRIC_LOCK 0x107a //㊣?????㊣?????
#define MINOR_OPEN_ALARM_LAMP      0x107b //?辰??????(????)
#define MINOR_CLOSE_ALARM_LAMP      0x107c //??㊣?????(????)


#define MINOR_TEMPORARY_PASSWORD   0x107d //???㊣??????℅‾????

#define MINOR_HIDDNS_CONFIG     0x1082 // HIDDNS????
#define MINOR_REMOTE_KEYBOARD_UPDATA   0x1083 //?????邦??????????
#define MINOR_ZONE_ADD_DETECTOR      0x1084 //﹞????赤???????‾
#define MINOR_ZONE_DELETE_DETECTOR    0x1085 //﹞????????????‾
#define MINOR_QUERY_DETECTOR_SIGNAL   0x1086 //?‾?迆?谷???????‾????????
#define MINOR_QUERY_DETECTOR_BATTERY  0x1087 //?‾?迆?谷???????‾????
#define MINOR_SET_DETECTOR_GUARD    0x1088 //?????‾??﹞?
#define MINOR_SET_DETECTOR_UNGUARD   0x1089 //?????‾?﹞﹞?
#define MINOR_WIRELESS_CONFIGURATION     0x108a  //????????????
#define MINOR_OPEN_VOICE        0x108b //?辰??????
#define MINOR_CLOSE_VOICE       0x108c //??㊣?????
#define MINOR_ENABLE_FUNCTION_KEY     0x108d //?????????邦
#define MINOR_DISABLE_FUNCTION_KEY      0x108e //??㊣??????邦
#define MINOR_READ_CARD    0x108f //???邦???“
#define MINOR_START_BROADCAST     0x1090 //?辰??????????
#define MINOR_STOP_BROADCAST   0x1091 //??㊣?????????
#define MINOR_REMOTE_ZONE_MODULE_UPGRADE   0x1092 //????????﹞??????谷
#define MINOR_NETWORK_MODULE_EXTEND   0x1093 //???????谷????????
#define MINOR_ADD_CONTROLLER 	0x1094 //?赤???????‾???∫
#define MINOR_DELETE_CONTORLLER 	0x1095 //?????????‾???∫
#define MINOR_REMOTE_NETWORKMODULE_UPGRADE    0x1096 //???????????????谷
#define MINOR_WIRELESS_OUTPUT_ADD   0x1097 //℅??芍???????????谷
#define MINOR_WIRELESS_OUTPUT_DEL    0x1098 //???????????????谷
#define MINOR_WIRELESS_REPEATER_ADD   0x1099 //℅??芍?????????‾
#define MINOR_WIRELESS_REPEATER_DEL    0x109a //?????????????‾
#define MINOR_PHONELIST_CFG     0x109b //???∼????????????
#define MINOR_RF_SIGNAL_CHECK   0x109c // RF?????谷??
#define MINOR_USB_UPGRADE   0x109d // USB????
#define MINOR_DOOR_TIME_REMINDER_CFG 0x109f //?????“?㊣?芍??????????
#define MINOR_WIRELESS_SIREN_ADD    0x1100 //℅??芍????????
#define MINOR_WIRELESS_SIREN_DEL    0x1101 //????????????
#define MINOR_OUT_SCALE_OPEN    0x1102 //?“??????
#define MINOR_OUT_SCALE_CLOSE    0x1103 //?“????㊣?

#define  MINOR_ALARMHOST_4G_MODULS_START  0x1108  //4G???谷????
#define  MINOR_ALARMHOST_4G_MODULS_STOP  0x1109  //4G???谷????

#define  MINOR_EZVIZ_CLOUD_START   0x1110   //??????????
#define  MINOR_EZVIZ_CLOUD_STOP    0x1111   //??????????
#define  MINOR_SIPUA_GRID_START    0x1112   //?迆??B????
#define  MINOR_SIPUA_GRID_STOP    0x1113    //?迆??B????

#define MINOR_MODBUS_FILE_DOWNLOAD   0x1114  //????modbus???谷????????
#define MINOR_MODBUS_FILE_UPLOAD      0x1115  //????modbus???谷????????

#define MINOR_RS485_DLL_FILE_DOWNLOAD   0x1116  //????485???谷??????
#define MINOR_RS485_DLL_FLIE_UPLOAD   0x1117  //????485???谷??????
#define MINOR_TX1_REBOOT              0x1118   //TX1????????????



//2012-03-05 ITC??℅‾?????角??
#define MINOR_SET_TRIGGERMODE_CFG          0x1001    /*?豕????﹞?????????*/
#define MINOR_GET_TRIGGERMODE_CFG          0x1002    /*??????﹞?????????*/
#define MINOR_SET_IOOUT_CFG                0x1003    /*?豕??IO????????*/
#define MINOR_GET_IOOUT_CFG                0x1004    /*????IO????????*/
#define MINOR_GET_TRIGGERMODE_DEFAULT      0x1005    /*??????﹞?????????????*/
#define MINOR_GET_ITCSTATUS                0x1006    /*????℅????足??????*/
#define MINOR_SET_STATUS_DETECT_CFG        0x1007    /*?豕??℅????足??????*/
#define MINOR_GET_STATUS_DETECT_CFG        0x1008    /*????℅????足??????*/
#define MINOR_SET_VIDEO_TRIGGERMODE_CFG    0x1009  /*?豕????????﹞?????????*/
#define MINOR_GET_VIDEO_TRIGGERMODE_CFG    0x100a   /*??????????﹞?????????*/

//2013-04-19 ITS??℅‾?????角??
#define MINOR_LOCAL_ADD_CAR_INFO            0x2001  /*㊣????赤??????????*/
#define MINOR_LOCAL_MOD_CAR_INFO            0x2002  /*㊣???????????????*/
#define MINOR_LOCAL_DEL_CAR_INFO            0x2003  /*㊣???????????????*/
#define MINOR_LOCAL_FIND_CAR_INFO           0x2004  /*㊣????谷??????????*/
#define MINOR_LOCAL_ADD_MONITOR_INFO        0x2005  /*㊣????赤??????????*/
#define MINOR_LOCAL_MOD_MONITOR_INFO        0x2006  /*㊣???????????????*/
#define MINOR_LOCAL_DEL_MONITOR_INFO        0x2007  /*㊣???????????????*/
#define MINOR_LOCAL_FIND_MONITOR_INFO       0x2008  /*㊣????谷??????????*/
#define MINOR_LOCAL_FIND_NORMAL_PASS_INFO   0x2009  /*㊣????谷???????“??????*/
#define MINOR_LOCAL_FIND_ABNORMAL_PASS_INFO 0x200a  /*㊣????谷???足???“??????*/
#define MINOR_LOCAL_FIND_PEDESTRIAN_PASS_INFO   0x200b  /*㊣????谷???????“??????*/
#define MINOR_LOCAL_PIC_PREVIEW             0x200c  /*㊣????????∟??*/
#define MINOR_LOCAL_SET_GATE_PARM_CFG       0x200d  /*?豕??㊣?????????????????*/
#define MINOR_LOCAL_GET_GATE_PARM_CFG       0x200e  /*????㊣?????????????????*/
#define MINOR_LOCAL_SET_DATAUPLOAD_PARM_CFG 0x200f  /*?豕??㊣???????????????????*/
#define MINOR_LOCAL_GET_DATAUPLOAD_PARM_CFG 0x2010  /*????㊣???????????????????*/

//2013-11-19?????????角??
#define MINOR_LOCAL_DEVICE_CONTROL                         0x2011   /*㊣????豕㊣?????(㊣?????????)*/
#define MINOR_LOCAL_ADD_EXTERNAL_DEVICE_INFO               0x2012   /*㊣????赤???????豕㊣????? */
#define MINOR_LOCAL_MOD_EXTERNAL_DEVICE_INFO               0x2013   /*㊣????????????豕㊣????? */
#define MINOR_LOCAL_DEL_EXTERNAL_DEVICE_INFO               0x2014   /*㊣????????????豕㊣????? */
#define MINOR_LOCAL_FIND_EXTERNAL_DEVICE_INFO              0x2015   /*㊣????谷???????豕㊣????? */
#define MINOR_LOCAL_ADD_CHARGE_RULE                        0x2016   /*㊣????赤????﹞????辰 */
#define MINOR_LOCAL_MOD_CHARGE_RULE                        0x2017   /*㊣?????????﹞????辰 */
#define MINOR_LOCAL_DEL_CHARGE_RULE                        0x2018   /*㊣?????????﹞????辰 */
#define MINOR_LOCAL_FIND_CHARGE_RULE                       0x2019   /*㊣????谷????﹞????辰 */
#define MINOR_LOCAL_COUNT_NORMAL_CURRENTINFO               0x2020   /*㊣????????????“?????? */
#define MINOR_LOCAL_EXPORT_NORMAL_CURRENTINFO_REPORT       0x2021   /*㊣????????????“??????????㊣“㊣赤 */
#define MINOR_LOCAL_COUNT_ABNORMAL_CURRENTINFO             0x2022   /*㊣????????足???“?????? */
#define MINOR_LOCAL_EXPORT_ABNORMAL_CURRENTINFO_REPORT     0x2023   /*㊣????????足???“??????????㊣“㊣赤 */
#define MINOR_LOCAL_COUNT_PEDESTRIAN_CURRENTINFO           0x2024   /*㊣????????????“?????? */
#define MINOR_LOCAL_EXPORT_PEDESTRIAN_CURRENTINFO_REPORT   0x2025   /*㊣????????????“??????????㊣“㊣赤 */
#define MINOR_LOCAL_FIND_CAR_CHARGEINFO                    0x2026   /*㊣????谷????????﹞????? */
#define MINOR_LOCAL_COUNT_CAR_CHARGEINFO                   0x2027   /*㊣?????????????﹞????? */
#define MINOR_LOCAL_EXPORT_CAR_CHARGEINFO_REPORT           0x2028   /*㊣?????????????﹞?????????㊣“㊣赤 */
#define MINOR_LOCAL_FIND_SHIFTINFO                         0x2029   /*㊣????谷??????∼角???? */
#define MINOR_LOCAL_FIND_CARDINFO                          0x2030   /*㊣????谷???“?????? */
#define MINOR_LOCAL_ADD_RELIEF_RULE                        0x2031   /*㊣????赤?????????辰 */
#define MINOR_LOCAL_MOD_RELIEF_RULE                        0x2032   /*㊣??????????????辰 */
#define MINOR_LOCAL_DEL_RELIEF_RULE                        0x2033   /*㊣??????????????辰 */
#define MINOR_LOCAL_FIND_RELIEF_RULE                       0x2034   /*㊣????谷?????????辰 */
#define MINOR_LOCAL_GET_ENDETCFG                           0x2035   /*㊣??????????????????迆?????足?????? */ 
#define MINOR_LOCAL_SET_ENDETCFG                           0x2036   /*㊣????豕?????????????迆?????足??????*/
#define MINOR_LOCAL_SET_ENDEV_ISSUEDDATA                   0x2037   /*㊣????豕?????????????迆??﹞??“?????? */
#define MINOR_LOCAL_DEL_ENDEV_ISSUEDDATA                   0x2038   /*㊣??????????????????迆??﹞??“?????? */

#define MINOR_REMOTE_DEVICE_CONTROL                        0x2101   /*?????豕㊣?????*/
#define MINOR_REMOTE_SET_GATE_PARM_CFG                     0x2102   /*?豕????????????????????*/
#define MINOR_REMOTE_GET_GATE_PARM_CFG                     0x2103   /*??????????????????????*/
#define MINOR_REMOTE_SET_DATAUPLOAD_PARM_CFG               0x2104   /*?豕??????????????????????*/
#define MINOR_REMOTE_GET_DATAUPLOAD_PARM_CFG               0x2105   /*????????????????????????*/
#define MINOR_REMOTE_GET_BASE_INFO                         0x2106   /*?????????????迄㊣?????*/
#define MINOR_REMOTE_GET_OVERLAP_CFG                       0x2107   /*????????℅?﹞?????????????*/              
#define MINOR_REMOTE_SET_OVERLAP_CFG                       0x2108   /*?????豕??℅?﹞?????????????*/ 
#define MINOR_REMOTE_GET_ROAD_INFO                         0x2109   /*?????????﹞??????*/
#define MINOR_REMOTE_START_TRANSCHAN                       0x210a   /*?????“??????????﹞????‾*/
#define MINOR_REMOTE_GET_ECTWORKSTATE                      0x210b   /*???????????????????∟℅‾℅???*/
#define MINOR_REMOTE_GET_ECTCHANINFO                       0x210c   /*???????????????????“??℅???*/

//???????? 2013-11-19
#define MINOR_REMOTE_ADD_EXTERNAL_DEVICE_INFO              0x210d   /*?????赤???????豕㊣????? */
#define MINOR_REMOTE_MOD_EXTERNAL_DEVICE_INFO              0x210e   /*?????????????豕㊣????? */
#define MINOR_REMOTE_GET_ENDETCFG                          0x210f   /*???????????????????迆?????足?????? */ 
#define MINOR_REMOTE_SET_ENDETCFG                          0x2110   /*?????豕?????????????迆?????足??????*/
#define MINOR_REMOTE_ENDEV_ISSUEDDATA                      0x2111   /*?????豕?????????????迆??﹞??“?????? */
#define MINOR_REMOTE_DEL_ENDEV_ISSUEDDATA                  0x2112   /*???????????????????迆??﹞??“?????? */

//ITS 0x2115~0x2120 ??????????????
#define MINOR_REMOTE_ON_CTRL_LAMP           0x2115  /*??????????????????????*/       
#define MINOR_REMOTE_OFF_CTRL_LAMP          0x2116  /*??㊣???????????????????*/
//Netra3.1.0
#define MINOR_SET_VOICE_LEVEL_PARAM         0x2117  /*?豕???????車?? */
#define MINOR_SET_VOICE_INTERCOM_PARAM      0x2118  /*?豕?????????? */
#define MINOR_SET_INTELLIGENT_PARAM         0x2119  /*????????*/ 
#define MINOR_LOCAL_SET_RAID_SPEED          0x211a  /*㊣????豕??raid????*/
#define MINOR_REMOTE_SET_RAID_SPEED         0x211b /*?????豕??raid????*/
//Nerta3.1.2
#define MINOR_REMOTE_CREATE_STORAGE_POOL    0x211c   //?????赤????????
#define MINOR_REMOTE_DEL_STORAGE_POOL       0x211d    //??????????????

#define MINOR_REMOTE_DEL_PIC                0x2120   //????????????????
#define MINOR_REMOTE_DEL_RECORD             0x2121   //????????????????
#define MINOR_REMOTE_CLOUD_ENABLE           0x2123  //?????豕????????????
#define MINOR_REMOTE_CLOUD_DISABLE          0x2124  //?????豕????????????
#define MINOR_REMOTE_CLOUD_MODIFY_PARAM     0x2125  //??????????????????
#define MINOR_REMOTE_CLOUD_MODIFY_VOLUME    0x2126  //??????????????????
#define MINOR_REMOTE_GET_GB28181_SERVICE_PARAM    0x2127  //????????GB28181﹞???????
#define MINOR_REMOTE_SET_GB28181_SERVICE_PARAM    0x2128  //?????豕??GB28181﹞???????
#define MINOR_LOCAL_GET_GB28181_SERVICE_PARAM     0x2129  //㊣???????GB28181﹞???????
#define MINOR_LOCAL_SET_GB28181_SERVICE_PARAM     0x212a  //㊣???????B28181﹞???????
#define MINOR_REMOTE_SET_SIP_SERVER               0x212b  //????????SIP SERVER
#define MINOR_LOCAL_SET_SIP_SERVER                0x212c  //㊣???????SIP SERVER
#define MINOR_LOCAL_BLACKWHITEFILE_OUTPUT         0x212d  //㊣?????∼℅????????
#define MINOR_LOCAL_BLACKWHITEFILE_INPUT          0x212e  //㊣?????∼℅????????
#define MINOR_REMOTE_BALCKWHITECFGFILE_OUTPUT     0x212f  //??????∼℅????????
#define MINOR_REMOTE_BALCKWHITECFGFILE_INPUT      0x2130  //??????∼℅????????


#define MINOR_REMOTE_CREATE_MOD_VIEWLIB_SPACE        0x2200    /*???????“/??????????????*/
#define MINOR_REMOTE_DELETE_VIEWLIB_FILE            0x2201    /*??????????????????*/
#define MINOR_REMOTE_DOWNLOAD_VIEWLIB_FILE            0x2202    /*??????????????????*/
#define MINOR_REMOTE_UPLOAD_VIEWLIB_FILE            0x2203    /*??????????????????*/
#define MINOR_LOCAL_CREATE_MOD_VIEWLIB_SPACE        0x2204    /*㊣??????“/??????????????*/

#define MINOR_LOCAL_SET_DEVICE_ACTIVE   0x3000  //㊣????∟???豕㊣?
#define MINOR_REMOTE_SET_DEVICE_ACTIVE  0x3001  //?????∟???豕㊣?
#define MINOR_LOCAL_PARA_FACTORY_DEFAULT    0x3002  //㊣??????????∫?豕??
#define MINOR_REMOTE_PARA_FACTORY_DEFAULT   0x3003  //???????????∫?豕??

/*????﹞???﹞????‾??℅‾????*/
#define MINOR_UPLAOD_STATIC_MATERIAL                0x2401  //????????????
#define MINOR_UPLOAD_DYNAMIC_MATERIAL               0x2402  //????????????
#define MINOR_DELETE_MATERIAL                       0x2403  //????????
#define MINOR_DOWNLOAD_STATIC_MATERIAL              0x2404  //????????????
#define MINOR_COVER_STATIC_MATERIAL                 0x2405  //????????????
#define MINOR_APPROVE_MATERIAL                      0x2406  //?????車??
#define MINOR_UPLAOD_PROGRAM                        0x2407  //????????
#define MINOR_DOWNLOAD_PROGRAM                      0x2408  //????????
#define MINOR_DELETE_PROGRAM                        0x2409  //????????
#define MINOR_MODIFY_PROGRAM                        0x240a  //????????????
#define MINOR_APPROVE_PRAGRAM                       0x240b  //?????車??
#define MINOR_UPLAOD_SCHEDULE                       0x240c  //????????
#define MINOR_DOWNLOAD_SCHEDULE                     0x240d  //????????
#define MINOR_DELETE_SCHEDULE                       0x240e  //????????
#define MINOR_MODIFY_SCHEDULE                       0x240f  //????????????
#define MINOR_RELEASE_SCHEDULE                      0x2410  //﹞???????
#define MINOR_ADD_TERMINAL                          0x2411  //?赤??????
#define MINOR_DELETE_TERMINAL                       0x2412  //????????
#define MINOR_MODIFY_TERMIANL_PARAM                 0x2413  //????????????            
#define MINOR_MODIFY_TERMIANL_PLAY_PARAM            0x2414  //??????????﹞?????
#define MINOR_ADD_TERMIANL_GROUP                    0x2415  //?赤??????℅谷
#define MINOR_MODIFY_TERMINAL_GROUP_PARAM           0x2416  //????????℅谷????
#define MINOR_DELETE_TERMIANL_GROUP                 0x2417  //????????℅谷
#define MINOR_TERMINAL_PLAY_CONTROL                 0x2418  //??????﹞?????
#define MINOR_TERMINAL_ON_OFF_LINE                  0x2419  //??????????
#define MINOR_SET_SWITCH_PLAN                       0x241a  //?豕???????“?㊣?????迆????
#define MINOR_SET_VOLUME_PLAN                       0x241b  //?豕???????“?㊣????????
#define MINOR_TERMINAL_SCREENSHOT                   0x241c  //????????
#define MINOR_SYSTEM_TIME_CFG                       0x241d   //???????㊣
#define MINOR_ADD_USER_CFG                          0x241e    //?赤?????∫????
#define MINOR_DEL_USER_CFG                          0x241f    //???????∫????
#define MINOR_REMOTE_MANAGE_HDD                     0x2420   //????㊣角??????
#define MINOR_TERMINAL_UPDATE_START                 0x2421   //????????
#define MINOR_SVR_RESTORE_DEFAULT_PARAM             0x2422   //﹞????‾????????????
#define MINOR_SVR_REMOTE_RESTORE_FACTORY            0x2423   //﹞????‾???????????∫?豕??
#define MINOR_SVR_REMOTE_REBOOT                     0x2424   //﹞????‾????????
#define MINOR_SVR_MODIFY_NETWORK_PARAM              0x2425   //﹞????‾????????????
#define MINOR_SVR_SOFTWARE_UPGRADE                  0x2426     //﹞????‾?赤??????

#define MINOR_BACKUP_DATA                           0xc41  //????㊣?﹞?
#define MINOR_TRANSFER_DATA                         0xc42  //?????“??
#define MINOR_RESTORE_DATA                          0xc43  //????????
#define MINOR_SET_INPUT_PLAN                        0xc44 //?豕???????“?㊣????????????
#define MINOR_TERMINAL_ADB                          0xc45//????ADB????
#define MINOR_TERMINAL_VOLUME                       0xc46  //????????????
#define MINOR_TERMINAL_LOGO                         0xc47 //????LOGO????
#define MINOR_TERMINAL_DEFAULT_SCHEDULE             0xc48 //????????????
#define MINOR_TERMINAL_PASSWORD                     0xc49 //?豕??????????
#define MINOR_TERMINAL_IP                           0xc4a//????IP????
#define MINOR_TERMINAL_RELATE_IPC                   0xc4b//????????IPC
#define MINOR_TERMINAL_SERVER                       0xc4c//????????﹞????‾????
#define MINOR_TERMINAL_SADP                         0xc4d//????SADP????????
#define MINOR_TERMINAL_TIMEZONE                     0xc4e//?????㊣??????
#define MINOR_TERMINAL_TEMP_PROTECT                 0xc4f//????????㊣??∟????
#define MINOR_ADD_ORGANIZATION                      0xc50 //?赤??℅谷??
#define MINOR_DELETE_ORGANIZATION                   0xc51 //????℅谷??
#define MINOR_MODIFY_ORGANIZATION                   0xc52 //????℅谷?? 
#define MINOR_WEATHER_FACTORY                       0xc53 //?足???∫?????? 
#define MINOR_SADP_ENABLE                           0xc54 //sadp???????? 
#define MINOR_SSH_ENABLE                            0xc55 //SSH????????
#define MINOR_MODIFY_MATERIAL                       0xc56 //???????????? 
#define MINOR_INSERT_CHARACTER                      0xc57 //??????℅?????
#define MINOR_TERMINAL_BACKLIGHT                    0xc58 //????㊣???????



#define MINOR_REMOTE_CONFERENCE_CONFIG             0x2501  //MCU?芍?谷????
#define MINOR_REMOTE_TERMINAL_CONFIG               0x2502  //MCU????????
#define MINOR_REMOTE_GROUP_CONFIG                  0x2503  //MCU﹞?℅谷????
#define MINOR_REMOTE_CONFERENCE_CTRL               0x2504  //MCU?芍?谷????
#define MINOR_REMOTE_TERMINAL_CTRL                 0x2505  //MCU????????

//NVR?車??
#define MINOR_LOCAL_RESET_LOGIN_PASSWORD           0x2600    /* ㊣???????admin????????*/ 
#define MINOR_REMOTE_RESET_LOGIN_PASSWORD          0x2601    /* ????????admin???????? */
#define MINOR_LOCAL_FACE_BASE_CREATE        0x2602    /* ㊣?????????㊣??????“*/ 
#define MINOR_REMOTE_FACE_BASE_CREATE       0x2603    /* ??????????㊣??????“*/
#define MINOR_LOCAL_FACE_BASE_MODIFY        0x2604    /* ㊣?????????㊣???????*/ 
#define MINOR_REMOTE_FACE_BASE_MODIFY      0x2605    /* ??????????㊣???????*/
#define MINOR_LOCAL_FACE_BASE_DELETE        0x2606    /* ㊣?????????㊣???????*/ 
#define MINOR_REMOTE_FACE_BASE_DELETE       0x2607    /* ??????????㊣???????*/
#define MINOR_LOCAL_FACE_DATA_APPEND        0x2608    /* ㊣???????????????*/ 
#define MINOR_REMOTE_FACE_DATA_APPEND       0x2609    /* ????????????????*/
#define MINOR_LOCAL_FACE_DATA_SEARCH       0x2610    /* ㊣???????㊣????????谷??*/ 
#define MINOR_REMOTE_FACE_DATA_SEARCH       0x2611    /* ????????㊣????????谷??*/
#define MINOR_LOCAL_FACE_DATA_ANALYSIS        0x2612    /* ㊣???????﹞?????℅‾*/ 
#define MINOR_REMOTE_FACE_DATA_ANALYSIS       0x2613    /* ????????﹞?????℅‾*/
#define MINOR_LOCAL_FACE_DATA_EDIT            0x2614    /* ㊣???????????????*/ 
#define MINOR_REMOTE_FACE_DATA_EDIT           0x2615    /* ????????????????*/

#define MINOR_LOCAL_FACE_DATA_DELETE          0x2616    /* ㊣???????????????*/ 
#define MINOR_REMOTE_FACE_DATA_DELET          0x2617    /* ????????????????*/

#define MINOR_LOCAL_VCA_ANALYSIS_CFG          0x2618    /* ㊣???????﹞???????*/ 
#define MINOR_REMOTE_VCA_ANALYSIS_CFG         0x2619    /* ????????﹞???????*/

#define MINOR_LOCAL_FACE_BASE_IMPORT          0x261a    /* ㊣?????????????*/ 
#define MINOR_LOCAL_FACE_BASE_EXPORT          0x261b    /* ㊣?????????????*/
//NVR????
#define MINOR_REMOTE_CLUSTER_MODE_CONFIG      0x261c    /* ??????????????????℅‾*/
#define MINOR_LOCAL_CLUSTER_MODE_CONFIG       0x261d    /* ㊣?????????????????℅‾*/
#define MINOR_REMOTE_CLUSTER_NETWORK_CONFIG   0x261e    /* ????????℅谷????????℅‾*/
#define MINOR_LOCAL_CLUSTER_NETWORK_CONFIG    0x261f    /* ㊣???????℅谷????????℅‾*/
#define MINOR_REMOTE_CLUSTER_ADD_DEVICE       0x2620    /* ?????????赤???豕㊣???℅‾*/
#define MINOR_LOCAL_CLUSTER_ADD_DEVICE        0x2621    /* ㊣????????赤???豕㊣???℅‾*/
#define MINOR_REMOTE_CLUSTER_DEL_DEVICE       0x2622    /* ?????????????豕㊣???℅‾*/
#define MINOR_LOCAL_CLUSTER_DEL_DEVICE        0x2623    /* ㊣????????????豕㊣???℅‾*/
#define MINOR_REMOTE_HFPD_CFG                 0x2624  /* ???????????㊣?足??????*/
#define MINOR_REMOTE_FACE_CONTRAST_TASK       0x2625 /* ????????㊣??????????? */

#define MINOR_REMOTE_IOTCFGFILE_INPUT         0x2627//????????IOT????????
#define MINOR_REMOTE_IOTCFGFILE_OUTPUT        0x2628//????????IOT????????
#define MINOR_LOCAL_IOT_ADD                   0x2629//㊣????赤??IOT?“??
#define MINOR_REMOTE_IOT_ADD                  0x262a//?????赤??IOT?“??
#define MINOR_LOCAL_IOT_DEL                   0x262b//㊣???????IOT?“??
#define MINOR_REMOTE_IOT_DEL                  0x262c//????????IOT?“??
#define MINOR_LOCAL_IOT_SET                   0x262d//㊣???????IOT?“??
#define MINOR_REMOTE_IOT_SET                  0x262e//????????IOT?“??
#define MINOR_LOCAL_IOTCFGFILE_INPUT          0x262f //㊣???????IOT????????
#define MINOR_LOCAL_IOTCFGFILE_OUTPUT         0x2630//㊣???????IOT????????
#define MINOR_LOCAL_VAD_CFG                   0x2631  /* ㊣????????????足??????*/
#define MINOR_REMOTE_VAD_CFG                  0x2632  /* ?????????????足??????*/
#define MINOR_LOCAL_ADDRESS_FILTER_CONFIG     0x2633    /* ㊣??????﹞????????*/ 
#define MINOR_REMOTE_ADDRESS_FILTER_CONFIG    0x2634    /* ???????﹞????????*/
#define MINOR_LOCAL_POE_CFG                     0x2635    /* ㊣???POE????*/ 
#define MINOR_REMOTE_POE_CFG                    0x2636    /* ????POE????*/
#define MINOR_LOCAL_RESET_CHANNEL_PASSWORD        0x2637    /* ㊣????????“??????*/ 
#define MINOR_REMOTE_RESET_CHANNEL_PASSWORD       0x2638    /* ?????????“??????*/
#define MINOR_LOCAL_SSD_UPGRADE_START                   0x2639    /* ㊣???SSD????????????????*/ 
#define MINOR_LOCAL_SSD_UPGRADE_STOP                    0x2640    /* ㊣???SSD?????????????芍??*/
#define MINOR_REMOTE_SSD_UPGRADE_START                   0x2641    /* ????SSD????????????????*/ 
#define MINOR_REMOTE_SSD_UPGRADE_STOP                    0x2642    /* ????SSD?????????????芍??*/
#define MINOR_LOCAL_SSD_FORMAT_START                   0x2643    /*㊣???SSD??????????????????*/ 
#define MINOR_LOCAL_SSD_FORMAT_STOP                    0x2644    /*㊣???SSD???????????????芍??*/
#define MINOR_REMOTE_SSD_FORMAT_START                   0x2645    /*????SSD??????????????????*/ 
#define MINOR_REMOTE_SSD_FORMAT_STOP                    0x2646    /*????SSD???????????????芍??*/
#define MINOR_LOCAL_AUTO_SWITCH_CONFIG                  0x2647    /* ㊣???℅????????迆????*/ 
#define MINOR_REMOTE_AUTO_SWITCH_CONFIG                 0x2648    /* ????℅????????迆????*/

#define MINOR_LOCAL_SSD_INITIALIZATION_START            0x264a    /* ㊣???SSD??????????*/ 
#define MINOR_LOCAL_SSD_INITIALIZATION_END              0x264b    /* ㊣???SSD???????芍??*/
#define MINOR_REMOTE_SSD_INITIALIZATION_START           0x264c    /* ????SSD??????????*/
#define MINOR_REMOTE_SSD_INITIALIZATION_END             0x264d    /* ????SSD???????芍??*/


//?“??AI??﹞????“????℅‾????
#define MINOR_REMOTE_AI_MODEL_ADD    0x2650//????∼邦?赤??
#define MINOR_REMOTE_AI_MODEL_QUERY    0x2651//????∼邦?谷??
#define MINOR_REMOTE_AI_MODEL_DELETE    0x2652//????∼邦????
#define MINOR_REMOTE_AI_MODEL_UPDATE    0x2653//????∼邦?邦??
#define MINOR_REMOTE_AI_PICTURE_POLLING_TASK_ADD    0x2654//????????????????
#define MINOR_REMOTE_AI_PICTURE_POLLING_TASK_QUERY    0x2655//?????????????谷??
#define MINOR_REMOTE_AI_PICTURE_POLLING_TASK_DELETE    0x2656//????????????????
#define MINOR_REMOTE_AI_PICTURE_POLLING_TASK_MODIFY    0x2657//????????????????
#define MINOR_REMOTE_AI_VIDEO_POLLING_TASK_ADD    0x2658//????????????????
#define MINOR_REMOTE_AI_VIDEO_POLLING_TASK_QUERY    0x2659//?????????????谷??
#define MINOR_REMOTE_AI_VIDEO_POLLING_TASK_DELETE    0x265A//????????????????
#define MINOR_REMOTE_AI_VIDEO_POLLING_TASK_MODIFY    0x265B//????????????????
#define MINOR_REMOTE_AI_PICTURE_TASK_ADD    0x265C//????????????
#define MINOR_REMOTE_AI_PICTURE_TASK_QUERY    0x265D//?????????谷??
#define MINOR_REMOTE_AI_PICTURE_TASK_DELETE    0x265E//????????????
#define MINOR_REMOTE_AI_PICTURE_TASK_MODIFY    0x265F//????????????
#define MINOR_REMOTE_AI_VIDEO_TASK_ADD    0x2660//????????????
#define MINOR_REMOTE_AI_VIDEO_TASK_QUERY    0x2661//?????????谷??
#define MINOR_REMOTE_AI_VIDEO_TASK_DELETE    0x2662//????????????
#define MINOR_REMOTE_AI_VIDEO_TASK_MODIFY    0x2663//????????????

//??﹞???℅‾????
#define MINOR_STOP_SOUND                0x2700   /*????*/
#define MINOR_SELF_CHECK                0x2701   /*℅??足*/
#define MINOR_DUTY_CHECK                0x2702   /*?谷??*/
#define MINOR_SWITCH_SIMPLE_WORKMODE    0x2703   /*???????辰?℅????*/
#define MINOR_SWITCH_NORMAL_WORKMODE    0x2704   /*??????㊣那℅?????*/

/*????????????*/
//?‾?角??
#define MAJOR_INFORMATION               0x4     /*????????*/
//???角??
#define MINOR_HDD_INFO                  0xa1 /*????????*/
#define MINOR_SMART_INFO                0xa2 /*SMART????*/
#define MINOR_REC_START                 0xa3 /*????????*/
#define MINOR_REC_STOP                  0xa4 /*????????*/
#define MINOR_REC_OVERDUE                0xa5 /*????????????*/
#define MINOR_LINK_START                0xa6 //?????∼???豕㊣?
#define MINOR_LINK_STOP                    0xa7 //?????∼???豕㊣???
#define MINOR_NET_DISK_INFO                0xa8 //????????????
#define MINOR_RAID_INFO                 0xa9 //raid?角??????
#define MINOR_RUN_STATUS_INFO           0xaa /*????????℅???????*/

//Netra3.0.0
#define MINOR_SPARE_START_BACKUP        0xab   /*??㊣?????????㊣?﹞????“?∟℅‾?迆*/
#define MINOR_SPARE_STOP_BACKUP            0xac   /*??㊣?????????㊣?﹞????“?∟℅‾?迆*/
#define MINOR_SPARE_CLIENT_INFO         0xad   /*??㊣????∫?迆????*/
#define MINOR_ANR_RECORD_START            0xae   /*ANR????????*/
#define MINOR_ANR_RECORD_END            0xaf   /*ANR?????芍??*/
#define MINOR_ANR_ADD_TIME_QUANTUM        0xb0    /*ANR?赤???㊣????*/
#define MINOR_ANR_DEL_TIME_QUANTUM        0xb1    /*ANR?????㊣????*/

#define MINOR_PIC_REC_START             0xb3  /* ????℅???*/    
#define MINOR_PIC_REC_STOP              0xb4  /* ????℅???*/
#define MINOR_PIC_REC_OVERDUE           0xb5  /* ???????????????? */
//Netra3.1.0
#define  MINOR_CLIENT_LOGIN             0xb6   /*????﹞????‾????*/
#define  MINOR_CLIENT_RELOGIN            0xb7   /*????????﹞????‾*/
#define  MINOR_CLIENT_LOGOUT            0xb8   /*????﹞????‾????*/
#define  MINOR_CLIENT_SYNC_START        0xb9   /*????????????*/
#define  MINOR_CLIENT_SYNC_STOP            0xba   /*????????????*/
#define  MINOR_CLIENT_SYNC_SUCC            0xbb   /*????????????*/
#define  MINOR_CLIENT_SYNC_EXCP            0xbc   /*?????????足??*/
#define  MINOR_GLOBAL_RECORD_ERR_INFO   0xbd   /*?????赤?車????????*/
#define  MINOR_BUFFER_STATE             0xbe   /*??????℅???????????*/
#define  MINOR_DISK_ERRORINFO_V2        0xbf   /*?????赤?車?那??????V2*/
#define  MINOR_CS_DATA_EXPIRED          0xc0   //??????????????
#define  MINOR_PLAT_INFO                0xc1   //???“??℅‾????
#define  MINOR_DIAL_STAT                0xc2   /*????℅???*/

#define MINOR_UNLOCK_RECORD             0xc3   //????????
#define MINOR_VIS_ALARM                 0xc4   //﹞???㊣“??
#define MINOR_TALK_RECORD               0xc5   //?“?∼????
#define MINOR_ACCESSORIES_MESSAGE       0xc6 //????∼?????
#define MINOR_KMS_EXPAMSION_DISK_INSERT 0xc7// KMS??????????
#define MINOR_IPC_CONNECT               0xc8//  IPC????????
#define MINOR_INTELLIGENT_BOARD_STATUS  0xc9//  ????∼?℅???
#define MINOR_IPC_CONNECT_STATUS        0xca//  IPC????℅???
#define MINOR_AUTO_TIMING               0xcb  //℅??????㊣
#define MINOR_EZVIZ_OPERATION           0xcc   //????????℅???
//NVR????
#define MINOR_CLUSTER_DEVICE_ONLINE     0xcd   //?????豕㊣?????
#define MINOR_CLUSTER_MGR_SERVICE_STARTUP 0xce   //???????赤﹞???????
#define MINOR_CLUSTER_BUSINESS_TRANSFER 0xcf   //?????????“??
#define MINOR_CLUSTER_STATUS            0xd0   //????℅???????
#define MINOR_CLUSTER_CS_STATUS            0xd1   //????CS?辰CM﹞????豕㊣?℅????∫∼???????CS??CM??IP???﹞
#define MINOR_CLUSTER_CM_STATUS            0xd2   //CM℅?????????????CM℅?㊣???????????leader??follower??candidate
#define MINOR_VOICE_START_DETECTED         0xd3  /*?足????????????*/
#define MINOR_VOICE_END_DETECTED           0xd4  /*?足?????????芍??*/
#define MINOR_DOUBLE_VERIFICATION_PASS     0xd5  /*???????∟?“??*/
#define MINOR_WIRELESS_RUNNING_STATUS       0xd6  /*????????℅???*/
#define MINOR_SYSTEM_DATA_SYNCHRONIZATION       0xd7  /*????????????*/

/*????*/
//?‾?角??
#define MAJOR_EVENT                             0x5     /*????*/
//???角??
#define MINOR_LEGAL_CARD_PASS                   0x01    //??﹞“?“???∟?“??
#define MINOR_CARD_AND_PSW_PASS                 0x02    //???“?????????∟?“??
#define MINOR_CARD_AND_PSW_FAIL                 0x03    //???“?????????∟?∫∼?
#define MINOR_CARD_AND_PSW_TIMEOUT              0x04    //???“?????????∟???㊣
#define MINOR_CARD_AND_PSW_OVER_TIME            0x05    //???“??????????
#define MINOR_CARD_NO_RIGHT                     0x06    //??﹞????“??
#define MINOR_CARD_INVALID_PERIOD               0x07    //???∫?㊣??
#define MINOR_CARD_OUT_OF_DATE                  0x08    //?“??????
#define MINOR_INVALID_CARD                      0x09    //?????“??
#define MINOR_ANTI_SNEAK_FAIL                   0x0a    //﹞??㊣?????∟?∫∼?
#define MINOR_INTERLOCK_DOOR_NOT_CLOSE          0x0b    //??????????㊣?
#define MINOR_NOT_BELONG_MULTI_GROUP            0x0c    //?“???????角?????∟??℅谷
#define MINOR_INVALID_MULTI_VERIFY_PERIOD       0x0d    //?“?????角?????∟?㊣??????
#define MINOR_MULTI_VERIFY_SUPER_RIGHT_FAIL     0x0e    //?角?????∟?????????“?????∟?∫∼?
#define MINOR_MULTI_VERIFY_REMOTE_RIGHT_FAIL    0x0f    //?角?????∟???????????∟?∫∼?
#define MINOR_MULTI_VERIFY_SUCCESS              0x10    //?角?????∟????
#define MINOR_LEADER_CARD_OPEN_BEGIN            0x11    //?℅?“????????
#define MINOR_LEADER_CARD_OPEN_END              0x12    //?℅?“?????芍??
#define MINOR_ALWAYS_OPEN_BEGIN                 0x13    //????℅???????
#define MINOR_ALWAYS_OPEN_END                   0x14    //????℅????芍??
#define MINOR_LOCK_OPEN                         0x15    //?????辰??
#define MINOR_LOCK_CLOSE                        0x16    //??????㊣?
#define MINOR_DOOR_BUTTON_PRESS                 0x17    //????∼????辰??
#define MINOR_DOOR_BUTTON_RELEASE               0x18    //????∼???﹞???
#define MINOR_DOOR_OPEN_NORMAL                  0x19    //?????????“??????
#define MINOR_DOOR_CLOSE_NORMAL                 0x1a    //?????????“??????
#define MINOR_DOOR_OPEN_ABNORMAL                0x1b    //???足???辰???“??????
#define MINOR_DOOR_OPEN_TIMEOUT                 0x1c    //???辰?????㊣?“??????
#define MINOR_ALARMOUT_ON                       0x1d    //㊣“???????辰??
#define MINOR_ALARMOUT_OFF                      0x1e    //㊣“????????㊣?
#define MINOR_ALWAYS_CLOSE_BEGIN                0x1f    //????℅???????
#define MINOR_ALWAYS_CLOSE_END                  0x20    //????℅????芍??                          
#define MINOR_MULTI_VERIFY_NEED_REMOTE_OPEN     0x21    //?角???角?????∟?豕??????????
#define MINOR_MULTI_VERIFY_SUPERPASSWD_VERIFY_SUCCESS  0x22  //?角?????∟???????????∟????????
#define MINOR_MULTI_VERIFY_REPEAT_VERIFY        0x23    //?角?????∟???????∟????
#define MINOR_MULTI_VERIFY_TIMEOUT               0x24    //?角?????∟???????∟????
#define MINOR_DOORBELL_RINGING                  0x25    //?????足
#define MINOR_FINGERPRINT_COMPARE_PASS          0x26    //????㊣????“??
#define MINOR_FINGERPRINT_COMPARE_FAIL          0x27    //????㊣????∫∼?
#define MINOR_CARD_FINGERPRINT_VERIFY_PASS              0x28    //???“?????????∟?“??
#define MINOR_CARD_FINGERPRINT_VERIFY_FAIL              0x29    //???“?????????∟?∫∼?
#define MINOR_CARD_FINGERPRINT_VERIFY_TIMEOUT           0x2a    //???“?????????∟???㊣
#define MINOR_CARD_FINGERPRINT_PASSWD_VERIFY_PASS       0x2b    //???“???????????????∟?“??
#define MINOR_CARD_FINGERPRINT_PASSWD_VERIFY_FAIL       0x2c    //???“???????????????∟?∫∼?
#define MINOR_CARD_FINGERPRINT_PASSWD_VERIFY_TIMEOUT    0x2d    //???“???????????????∟???㊣
#define MINOR_FINGERPRINT_PASSWD_VERIFY_PASS            0x2e    //?????????????∟?“??
#define MINOR_FINGERPRINT_PASSWD_VERIFY_FAIL            0x2f    //?????????????∟?∫∼?
#define MINOR_FINGERPRINT_PASSWD_VERIFY_TIMEOUT         0x30    //?????????????∟???㊣
#define MINOR_FINGERPRINT_INEXISTENCE                   0x31    //??????????
#define MINOR_CARD_PLATFORM_VERIFY                      0x32    //???“???“???∟
#define MINOR_CALL_CENTER                               0x33    //????????????
#define MINOR_FIRE_RELAY_TURN_ON_DOOR_ALWAYS_OPEN       0x34    //??﹞??????‾???“??﹞???????
#define MINOR_FIRE_RELAY_RECOVER_DOOR_RECOVER_NORMAL    0x35   //??﹞??????‾??????????????
#define MINOR_FACE_AND_FP_VERIFY_PASS                   0x36    //?????????????∟?“??
#define MINOR_FACE_AND_FP_VERIFY_FAIL                   0x37    //?????????????∟?∫∼?
#define MINOR_FACE_AND_FP_VERIFY_TIMEOUT                0x38    //?????????????∟???㊣
#define MINOR_FACE_AND_PW_VERIFY_PASS                   0x39    //?????????????∟?“??
#define MINOR_FACE_AND_PW_VERIFY_FAIL                   0x3a    //?????????????∟?∫∼?
#define MINOR_FACE_AND_PW_VERIFY_TIMEOUT                0x3b    //?????????????∟???㊣
#define MINOR_FACE_AND_CARD_VERIFY_PASS                 0x3c    //?????????“???∟?“??
#define MINOR_FACE_AND_CARD_VERIFY_FAIL                 0x3d    //?????????“???∟?∫∼?
#define MINOR_FACE_AND_CARD_VERIFY_TIMEOUT              0x3e    //?????????“???∟???㊣
#define MINOR_FACE_AND_PW_AND_FP_VERIFY_PASS            0x3f    //???????????????????∟?“??
#define MINOR_FACE_AND_PW_AND_FP_VERIFY_FAIL            0x40    //???????????????????∟?∫∼?
#define MINOR_FACE_AND_PW_AND_FP_VERIFY_TIMEOUT         0x41    //???????????????????∟???㊣
#define MINOR_FACE_CARD_AND_FP_VERIFY_PASS              0x42    //?????????“?????????∟?“??
#define MINOR_FACE_CARD_AND_FP_VERIFY_FAIL              0x43    //?????????“?????????∟?∫∼?
#define MINOR_FACE_CARD_AND_FP_VERIFY_TIMEOUT           0x44    //?????????“?????????∟???㊣
#define MINOR_EMPLOYEENO_AND_FP_VERIFY_PASS             0x45    //?∟???????????∟?“??
#define MINOR_EMPLOYEENO_AND_FP_VERIFY_FAIL             0x46    //?∟???????????∟?∫∼?
#define MINOR_EMPLOYEENO_AND_FP_VERIFY_TIMEOUT          0x47    //?∟???????????∟???㊣
#define MINOR_EMPLOYEENO_AND_FP_AND_PW_VERIFY_PASS      0x48    //?∟?????????????????∟?“??
#define MINOR_EMPLOYEENO_AND_FP_AND_PW_VERIFY_FAIL      0x49    //?∟?????????????????∟?∫∼?
#define MINOR_EMPLOYEENO_AND_FP_AND_PW_VERIFY_TIMEOUT   0x4a    //?∟?????????????????∟???㊣
#define MINOR_FACE_VERIFY_PASS                          0x4b    //???????∟?“??
#define MINOR_FACE_VERIFY_FAIL                          0x4c    //???????∟?∫∼?
#define MINOR_EMPLOYEENO_AND_FACE_VERIFY_PASS           0x4d    //?∟???????????∟?“??
#define MINOR_EMPLOYEENO_AND_FACE_VERIFY_FAIL           0x4e    //?∟???????????∟?∫∼?
#define MINOR_EMPLOYEENO_AND_FACE_VERIFY_TIMEOUT        0x4f    //?∟???????????∟???㊣
#define MINOR_FACE_RECOGNIZE_FAIL                       0x50    //??????㊣??∫∼?
#define MINOR_FIRSTCARD_AUTHORIZE_BEGIN                    0x51    //?℅?“???“????
#define MINOR_FIRSTCARD_AUTHORIZE_END                    0x52    //?℅?“???“?芍??
#define MINOR_DOORLOCK_INPUT_SHORT_CIRCUIT                0x53    //???????????﹞㊣“??
#define MINOR_DOORLOCK_INPUT_BROKEN_CIRCUIT                0x54    //???????????﹞㊣“??
#define MINOR_DOORLOCK_INPUT_EXCEPTION                    0x55    //?????????足??㊣“??
#define MINOR_DOORCONTACT_INPUT_SHORT_CIRCUIT            0x56    //???????????﹞㊣“??
#define MINOR_DOORCONTACT_INPUT_BROKEN_CIRCUIT            0x57    //???????????﹞㊣“??
#define MINOR_DOORCONTACT_INPUT_EXCEPTION                0x58    //?????????足??㊣“??
#define MINOR_OPENBUTTON_INPUT_SHORT_CIRCUIT            0x59    //????∼??????????﹞㊣“??
#define MINOR_OPENBUTTON_INPUT_BROKEN_CIRCUIT            0x5a    //????∼??????????﹞㊣“??
#define MINOR_OPENBUTTON_INPUT_EXCEPTION                0x5b    //????∼????????足??㊣“??
#define MINOR_DOORLOCK_OPEN_EXCEPTION                    0x5c    //?????足???辰??
#define MINOR_DOORLOCK_OPEN_TIMEOUT                        0x5d    //?????辰?????㊣
#define MINOR_FIRSTCARD_OPEN_WITHOUT_AUTHORIZE            0x5e    //?℅?“?????“?????∫∼?
#define MINOR_CALL_LADDER_RELAY_BREAK                   0x5f    //?????????‾????
#define MINOR_CALL_LADDER_RELAY_CLOSE                   0x60    //?????????‾㊣???
#define MINOR_AUTO_KEY_RELAY_BREAK                      0x61    //℅???∼??邦?????‾????
#define MINOR_AUTO_KEY_RELAY_CLOSE                      0x62    //℅???∼??邦?????‾㊣???
#define MINOR_KEY_CONTROL_RELAY_BREAK                   0x63    //∼??邦?????????‾????
#define MINOR_KEY_CONTROL_RELAY_CLOSE                   0x64    //∼??邦?????????‾㊣???
#define MINOR_EMPLOYEENO_AND_PW_PASS                    0x65    //?∟???????????∟?“??
#define MINOR_EMPLOYEENO_AND_PW_FAIL                    0x66    //?∟???????????∟?∫∼?
#define MINOR_EMPLOYEENO_AND_PW_TIMEOUT                 0x67    //?∟???????????∟???㊣
#define MINOR_HUMAN_DETECT_FAIL                         0x68    //?????足???∫∼?
#define MINOR_PEOPLE_AND_ID_CARD_COMPARE_PASS           0x69    //???∟㊣????“??
#define MINOR_PEOPLE_AND_ID_CARD_COMPARE_FAIL           0x70    //???∟㊣????∫∼?
#define MINOR_CERTIFICATE_BLACK_LIST                    0x71    //??????????
#define MINOR_LEGAL_MESSAGE                             0x72    //??﹞“????
#define MINOR_ILLEGAL_MESSAGE                           0x73    //﹞?﹞“????
#define MINOR_MAC_DETECT                                0x74    //MAC?足??
#define MINOR_DOOR_OPEN_OR_DORMANT_FAIL                 0x75   //??℅?????㊣??辰????℅??????∟?∫∼?
#define MINOR_AUTH_PLAN_DORMANT_FAIL                    0x76   //???∟???????????????∟?∫∼?
#define MINOR_CARD_ENCRYPT_VERIFY_FAIL                  0x77   //?“???????谷?∫∼?
#define MINOR_SUBMARINEBACK_REPLY_FAIL                  0x78   //﹞??㊣??﹞????‾?????∫∼?
#define MINOR_DOOR_OPEN_OR_DORMANT_OPEN_FAIL            0x82   //????㊣??辰?????㊣????∼????????∫∼?
#define MINOR_HEART_BEAT                                0x83    //????????
#define MINOR_DOOR_OPEN_OR_DORMANT_LINKAGE_OPEN_FAIL    0x84   //????㊣??辰?????㊣?????????????∫∼?
#define MINOR_TRAILING                                  0x85   //?????“??
#define MINOR_REVERSE_ACCESS                            0x86   //﹞??辰????
#define MINOR_FORCE_ACCESS                              0x87   //??????℅?
#define MINOR_CLIMBING_OVER_GATE                        0x88   //﹞???
#define MINOR_PASSING_TIMEOUT                           0x89   //?“?????㊣
#define MINOR_INTRUSION_ALARM                           0x8a   //?車??㊣“??
#define MINOR_FREE_GATE_PASS_NOT_AUTH                   0x8b   //???迆℅????“???㊣?????∟?“??
#define MINOR_DROP_ARM_BLOCK                            0x8c   //∼?㊣?㊣?℅豕??
#define MINOR_DROP_ARM_BLOCK_RESUME                     0x8d   //∼?㊣?℅豕??????
#define MINOR_LOCAL_FACE_MODELING_FAIL                  0x8e   //?豕㊣?????㊣????????“???∫∼?
#define MINOR_STAY_EVENT                                0x8f   //????????
#define MINOR_PASSWORD_MISMATCH                         0x97   //??????????
#define MINOR_EMPLOYEE_NO_NOT_EXIST                     0x98   //?∟????????
#define MINOR_COMBINED_VERIFY_PASS                      0x99   //℅谷?????∟?“??
#define MINOR_COMBINED_VERIFY_TIMEOUT                   0x9a   //℅谷?????∟???㊣
#define MINOR_VERIFY_MODE_MISMATCH                      0x9b   //???∟﹞?????????

#define MINOR_PASSPORT_VERIFY_FAIL                       0xa1   //?∟?????????谷?∫∼?
#define MINOR_INFORMAL_MIFARE_CARD_VERIFY_FAIL           0xa2   //﹞?????Mifare?“???∟?∫∼?
#define MINOR_CPU_CARD_ENCRYPT_VERIFY_FAIL               0xa3   //CPU?“???????谷?∫∼?
#define MINOR_NFC_DISABLE_VERIFY_FAIL                    0xa4   //NFC??????㊣??谷?∟?∫∼?

#define MINOR_EVENT_CUSTOM1                         0x500  //????℅??“??????1
#define MINOR_EVENT_CUSTOM2                         0x501  //????℅??“??????2
#define MINOR_EVENT_CUSTOM3                         0x502  //????℅??“??????3
#define MINOR_EVENT_CUSTOM4                         0x503  //????℅??“??????4
#define MINOR_EVENT_CUSTOM5                         0x504  //????℅??“??????5
#define MINOR_EVENT_CUSTOM6                         0x505  //????℅??“??????6
#define MINOR_EVENT_CUSTOM7                         0x506  //????℅??“??????7
#define MINOR_EVENT_CUSTOM8                         0x507  //????℅??“??????8
#define MINOR_EVENT_CUSTOM9                         0x508  //????℅??“??????9
#define MINOR_EVENT_CUSTOM10                        0x509  //????℅??“??????10
#define MINOR_EVENT_CUSTOM11                        0x50a  //????℅??“??????11
#define MINOR_EVENT_CUSTOM12                        0x50b  //????℅??“??????12
#define MINOR_EVENT_CUSTOM13                        0x50c  //????℅??“??????13
#define MINOR_EVENT_CUSTOM14                        0x50d  //????℅??“??????14
#define MINOR_EVENT_CUSTOM15                        0x50e  //????℅??“??????15
#define MINOR_EVENT_CUSTOM16                        0x50f  //????℅??“??????16
#define MINOR_EVENT_CUSTOM17                        0x510  //????℅??“??????17
#define MINOR_EVENT_CUSTOM18                        0x511  //????℅??“??????18
#define MINOR_EVENT_CUSTOM19                        0x512  //????℅??“??????19
#define MINOR_EVENT_CUSTOM20                        0x513  //????℅??“??????20
#define MINOR_EVENT_CUSTOM21                        0x514  //????℅??“??????21
#define MINOR_EVENT_CUSTOM22                        0x515  //????℅??“??????22
#define MINOR_EVENT_CUSTOM23                        0x516  //????℅??“??????23
#define MINOR_EVENT_CUSTOM24                        0x517  //????℅??“??????24
#define MINOR_EVENT_CUSTOM25                        0x518  //????℅??“??????25
#define MINOR_EVENT_CUSTOM26                        0x519  //????℅??“??????26
#define MINOR_EVENT_CUSTOM27                        0x51a  //????℅??“??????27
#define MINOR_EVENT_CUSTOM28                        0x51b  //????℅??“??????28
#define MINOR_EVENT_CUSTOM29                        0x51c  //????℅??“??????29
#define MINOR_EVENT_CUSTOM30                        0x51d  //????℅??“??????30
#define MINOR_EVENT_CUSTOM31                        0x51e  //????℅??“??????31
#define MINOR_EVENT_CUSTOM32                        0x51f  //????℅??“??????32
#define MINOR_EVENT_CUSTOM33                        0x520  //????℅??“??????33
#define MINOR_EVENT_CUSTOM34                        0x521  //????℅??“??????34
#define MINOR_EVENT_CUSTOM35                        0x522  //????℅??“??????35
#define MINOR_EVENT_CUSTOM36                        0x523  //????℅??“??????36
#define MINOR_EVENT_CUSTOM37                        0x524  //????℅??“??????37
#define MINOR_EVENT_CUSTOM38                        0x525  //????℅??“??????38
#define MINOR_EVENT_CUSTOM39                        0x526  //????℅??“??????39
#define MINOR_EVENT_CUSTOM40                        0x527  //????℅??“??????40
#define MINOR_EVENT_CUSTOM41                        0x528  //????℅??“??????41
#define MINOR_EVENT_CUSTOM42                        0x529  //????℅??“??????42
#define MINOR_EVENT_CUSTOM43                        0x52a  //????℅??“??????43
#define MINOR_EVENT_CUSTOM44                        0x52b  //????℅??“??????44
#define MINOR_EVENT_CUSTOM45                        0x52c  //????℅??“??????45
#define MINOR_EVENT_CUSTOM46                        0x52d  //????℅??“??????46
#define MINOR_EVENT_CUSTOM47                        0x52e  //????℅??“??????47
#define MINOR_EVENT_CUSTOM48                        0x52f  //????℅??“??????48
#define MINOR_EVENT_CUSTOM49                        0x530  //????℅??“??????49
#define MINOR_EVENT_CUSTOM50                        0x531  //????℅??“??????50
#define MINOR_EVENT_CUSTOM51                        0x532  //????℅??“??????51
#define MINOR_EVENT_CUSTOM52                        0x533  //????℅??“??????52
#define MINOR_EVENT_CUSTOM53                        0x534  //????℅??“??????53
#define MINOR_EVENT_CUSTOM54                        0x535  //????℅??“??????54
#define MINOR_EVENT_CUSTOM55                        0x536  //????℅??“??????55
#define MINOR_EVENT_CUSTOM56                        0x537  //????℅??“??????56
#define MINOR_EVENT_CUSTOM57                        0x538  //????℅??“??????57
#define MINOR_EVENT_CUSTOM58                        0x539  //????℅??“??????58
#define MINOR_EVENT_CUSTOM59                        0x53a  //????℅??“??????59
#define MINOR_EVENT_CUSTOM60                        0x53b  //????℅??“??????60
#define MINOR_EVENT_CUSTOM61                        0x53c  //????℅??“??????61
#define MINOR_EVENT_CUSTOM62                        0x53d  //????℅??“??????62
#define MINOR_EVENT_CUSTOM63                        0x53e  //????℅??“??????63
#define MINOR_EVENT_CUSTOM64                        0x53f  //????℅??“??????64

#define MINOR_LOCK_FINGER_OPEN_DOOR          0x600    //??????????????
#define MINOR_LOCK_PASSWORD_OPEN_DOOR        0x601    //??????????????
#define MINOR_LOCK_CARD_OPEN_DOOR            0x602    //?????????“????
#define MINOR_LOCK_CENTER_OPEN_DOOR          0x603    //??????????????
#define MINOR_LOCK_APP_OPEN_DOOR             0x604    //??????APP????
#define MINOR_LOCK_KEY_OPEN_DOOR             0x605    //?????????℅????
#define MINOR_LOCK_REMOTE_DEVICE_OPEN_DOOR   0x606    //???????????‾????
#define MINOR_LOCK_TMP_PASSWORD_OPEN_DOOR    0x607    //?????????㊣????????
#define MINOR_LOCK_BLUETOOTH_OPEN_DOOR       0x608    //??????????????
#define MINOR_LOCK_MULTI_OPEN_DOOR           0x609 //???????角??????

//2018-04-23 ?“???????????????????角??
#define   MINOR_ALARMHOST_SCHOOLTIME_IRGI_B   0x1001     //B?????㊣
#define   MINOR_ALARMHOST_SCHOOLTIME_SDK     0x1002     //SDK???㊣
#define   MINOR_ALARMHOST_SCHOOLTIME_SELFTEST    0x1003   //?“??℅??足???㊣
#define  MINOR_ALARMHOST_SUBSYSTEM_ABNORMALINSERT   0x1004  //℅?∼????? 
#define  MINOR_ALARMHOST_SUBSYSTEM_ABNORMALPULLOUT   0x1005  //℅?∼?∼???

#define  MINOR_ALARMHOST_AUTO_ARM    0x1006  //℅?????﹞?
#define  MINOR_ALARMHOST_AUTO_DISARM    0x1007  //℅????﹞﹞?
#define  MINOR_ALARMHOST_TIME_TIGGER_ON    0x1008  //?“?㊣??????﹞??‾
#define  MINOR_ALARMHOST_TIME_TIGGER_OFF   0x1009  //?“?㊣??㊣???﹞??‾
#define  MINOR_ALARMHOST_AUTO_ARM_FAILD    0x100a  //℅?????﹞??∫∼?
#define  MINOR_ALARMHOST_AUTO_DISARM_FAILD    0x100b  //℅????﹞﹞??∫∼?
#define  MINOR_ALARMHOST_TIME_TIGGER_ON_FAILD   0x100c  //?“?㊣??????﹞??‾?∫∼?
#define  MINOR_ALARMHOST_TIME_TIGGER_OFF_FAILD    0x100d  //?“?㊣??㊣???﹞??‾?∫∼?
#define  MINOR_ALARMHOST_MANDATORY_ALARM    0x100e  //??????﹞?
#define  MINOR_ALARMHOST_KEYPAD_LOCKED  0x100f  //?邦?????“
#define  MINOR_ALARMHOST_USB_INSERT   0x1010  //USB???? 
#define  MINOR_ALARMHOST_USB_PULLOUT   0x1011 //USB∼???
#define  MINOR_ALARMHOST_4G_MODULS_ONLINE  0x1012  //4G???谷????
#define  MINOR_ALARMHOST_4G_MODULS_OFFLINE  0x1013  //4G???谷????

#define  MINOR_EZVIZ_CLOUD_ONLINE   0x1014   //??????????
#define  MINOR_EZVIZ_CLOUD_OFFLINE    0x1015   //??????????

#define  MINOR_SIPUA_GRID_ONLINE     0x1016   //?迆??B????
#define  MINOR_SIPUA_GRID_OFFLINE    0x1017   //?迆??B????

#define  MINOR_INTERNET_ACCESS_CONNECTED  0x1018   //????????
#define  MINOR_INTERNET_ACCESS_BREAK  0x1019  //????????

#define  MINOR_WIRELESS_CONNECTED   0x101a  //????????
#define  MINOR_WIRELESS_BREAK     0x101b   //????????
#define  MINOR_PORT_LINK_DOWN    0x101c  //????????down
#define  MINOR_PORT_LINK_UP    0x101d  //????????up
#define  MINOR_POE_PORT_POWER_ON    0x101e  //POE????power on
#define  MINOR_POE_PORT_POWER_OFF    0x101f  //POE????power off
#define  MINOR_POE_TOTAL_POWER_MAX    0x1020  //POE℅?????????poe-max
#define  MINNOR_POE_TOTAL_POWER_RESUME   0x1021  //POE℅?????????????


typedef enum tagALARMHOST_MAJOR_TYPE
{
	MAJOR_ALARMHOST_ALARM = 1,
	MAJOR_ALARMHOST_EXCEPTION,
	MAJOR_ALARMHOST_OPERATION,
	MAJ0R_ALARMHOST_EVENT
}ALARMHOST_MAJOR_TYPE;

typedef enum tagALARMHOST_MINOR_TYPE
{
	// ㊣“?? 
	MINOR_SHORT_CIRCUIT = 0x01,      // ???﹞㊣“??
	MINOR_BROKEN_CIRCUIT,           // ???﹞㊣“??
	MINOR_ALARM_RESET,              // ㊣“??????
	MINOR_ALARM_NORMAL,                // ㊣“??????????
	MINOR_PASSWORD_ERROR,            // ?????赤?車?“????3???????????赤?車??
	MINOR_ID_CARD_ILLEGALLY,        // ﹞?﹞“?????“ID
	MINOR_KEYPAD_REMOVE,            // ?邦??﹞???
	MINOR_KEYPAD_REMOVE_RESTORE,    // ?邦??﹞???????
	MINOR_DEV_REMOVE,                // ?豕㊣?﹞???
	MINOR_DEV_REMOVE_RESTORE,        // ?豕㊣?﹞???????
	MINOR_BELOW_ALARM_LIMIT1,        // ??????????㊣“????1
	MINOR_BELOW_ALARM_LIMIT2,        // ??????????㊣“????2
	MINOR_BELOW_ALARM_LIMIT3,        // ??????????㊣“????3
	MINOR_BELOW_ALARM_LIMIT4,        // ??????????㊣“????4
	MINOR_ABOVE_ALARM_LIMIT1,        // ??????????㊣“????1
	MINOR_ABOVE_ALARM_LIMIT2,        // ??????????㊣“????2
	MINOR_ABOVE_ALARM_LIMIT3,        // ??????????㊣“????3
	MINOR_ABOVE_ALARM_LIMIT4,        // ??????????㊣“????4
	MINOR_URGENCYBTN_ON,            // ???㊣∼???∼???
	MINOR_URGENCYBTN_OFF,            // ???㊣∼???????
	MINOR_VIRTUAL_DEFENCE_BANDIT,            //?赤﹞???﹞???
	MINOR_VIRTUAL_DEFENCE_FIRE,                //?赤﹞???????
	MINOR_VIRTUAL_DEFENCE_URGENT,            //?赤﹞??????㊣
	MINOR_ALARMHOST_MOTDET_START,            //?????足??㊣“??????
	MINOR_ALARMHOST_MOTDET_STOP,            //?????足??㊣“???芍??
	MINOR_ALARMHOST_HIDE_ALARM_START,        //????㊣“??????
	MINOR_ALARMHOST_HIDE_ALARM_STOP,        //????㊣“???芍??
	MINOR_ALARMHOST_UPS_ALARM,                //UPS㊣“??
	MINOR_ALARMHOST_ELECTRICITY_METER_ALARM, //????㊣赤㊣“??
	MINOR_ALARMHOST_SWITCH_POWER_ALARM,        //????????㊣“??
	MINOR_ALARMHOST_GAS_DETECT_SYS_ALARM,      //?????足??????㊣“??
	MINOR_ALARMHOST_TRANSFORMER_TEMPRATURE_ALARM, //㊣????‾????㊣赤㊣“??
	MINOR_ALARMHOST_TEMP_HUMI_ALARM,            //???????????‾㊣“??
	MINOR_ALARMHOST_UPS_ALARM_RESTORE,    //UPS㊣“??????
	MINOR_ALARMHOST_ELECTRICITY_METER_ALARM_RESTORE, //????㊣赤㊣“??????
	MINOR_ALARMHOST_SWITCH_POWER_ALARM_RESTORE,      //????????㊣“??????
	MINOR_ALARMHOST_GAS_DETECT_SYS_ALARM_RESTORE,      //?????足??????㊣“??????
	MINOR_ALARMHOST_TRANSFORMER_TEMPRATURE_ALARM_RESTORE, //㊣????‾????㊣赤㊣“??????
	MINOR_ALARMHOST_TEMP_HUMI_ALARM_RESTORE,          //???????????‾㊣“??????
	MINOR_ALARMHOST_WATER_LEVEL_SENSOR_ALARM,            //?????????‾㊣“??
	MINOR_ALARMHOST_WATER_LEVEL_SENSOR_ALARM_RESTORE,    //?????????‾㊣“??????
	MINOR_ALARMHOST_DUST_NOISE_ALARM,                    //???????迄?????‾㊣“??
	MINOR_ALARMHOST_DUST_NOISE_ALARM_RESTORE,            //???????迄?????‾㊣“??????
	MINOR_ALARMHOST_ENVIRONMENTAL_LOGGER_ALARM,            //?﹞????????㊣“??
	MINOR_ALARMHOST_ENVIRONMENTAL_LOGGER_ALARM_RESTORE,    //?﹞????????㊣“??????

	MINOR_ALARMHOST_TRIGGER_TAMPER,                //?????‾﹞???
	MINOR_ALARMHOST_TRIGGER_TAMPER_RESTORE,                //?????‾﹞???????
	MINOR_ALARMHOST_EMERGENCY_CALL_HELP_ALARM,            //???㊣?????車?迆㊣“??
	MINOR_ALARMHOST_EMERGENCY_CALL_HELP_ALARM_RESTORE,    //???㊣?????車?迆㊣“??????
	MINOR_ALARMHOST_CONSULTING_ALARM,                     //????℅???㊣“??
	MINOR_ALARMHOST_CONSULTING_ALARM_RESTORE,             //????℅???㊣“??????
	MINOR_ZONE_MODULE_REMOVE,            // ﹞??????谷﹞???
	MINOR_ZONE_MODULE_RESET,    // ﹞??????谷﹞???????

	MINOR_ALARM_WIND_SPEED_ALARM,               //﹞????????‾????
	MINOR_ALARM_WIND_SPEED_ALARM_RESTORE,       //﹞????????‾????????
	MINOR_ALARM_GENERATE_OUTPUT_ALARM,          //?“?????????谷????
	MINOR_ALARM_GENERATE_OUTPUT_RESTORE,        //?“?????????谷????????
	MINOR_ALARM_SOAK_ALARM,                     //?????????‾????
	MINOR_ALARM_SOAK_ALARM_RESTORE,             //?????????‾????????
	MINOR_ALARM_SOLAR_POWER_ALARM,              //???????????‾????
	MINOR_ALARM_SOLAR_POWER_ALARM_RESTORE,      //???????????‾????????
	MINOR_ALARM_SF6_ALARM,                      //SF6㊣“???‾?迆????
	MINOR_ALARM_SF6_ALARM_RESTORE,              //SF6㊣“???‾?迆????????
	MINOR_ALARM_WEIGHT_ALARM,                   //??????????
	MINOR_ALARM_WEIGHT_ALARM_RESTORE,           //??????????????
	MINOR_ALARM_WEATHER_ALARM,                  //???車????????????
	MINOR_ALARM_WEATHER_ALARM_RESTORE,          //???車????????????????
	MINOR_ALARM_FUEL_GAS_ALARM,                 //?????角??????????
	MINOR_ALARM_FUEL_GAS_ALARM_RESTORE,         //?????角??????????????
	MINOR_ALARM_FIRE_ALARM,                     //????㊣“??????????
	MINOR_ALARM_FIRE_ALARM_RESTORE,             //????㊣“??????????????

	MINOR_WIRELESS_OUTPUT_MODULE_REMOVE,            // ???????????谷﹞???
	MINOR_WIRELESS_OUTPUT_MODULE_RESET,    // ???????????谷﹞???????
	MINOR_WIRELESS_REPEATER_MODULE_REMOVE,            // ?????????‾﹞???
	MINOR_WIRELESS_REPEATER_MODULE_RESET,    // ?????????‾﹞???????
	MINOR_WIRELESS_SIREN_MODULE_REMOVE,            // ????????﹞???
	MINOR_WIRELESS_SIREN_MODULE_RESET,    // ????????﹞???????
	MINOR_SOUND_INTENSITY_RISE,         // ?迄??????㊣“??
	MINOR_SOUND_INTENSITY_RISE_RESET,   // ?迄??????㊣“??????
	MINOR_SOUND_INTENSITY_DROP,         // ?迄??????㊣“??
	MINOR_SOUND_INTENSITY_DROP_RESET,   // ?迄??????㊣“??????
	MINOR_AUDIO_INPUT_EXCEPTION,        // ?????????足??㊣“??
	MINOR_AUDIO_INPUT_EXCEPTION_RESET,  // ?????????足??㊣“??????

										// ?足??
										MINOR_POWER_ON = 0x01,    // ????
										MINOR_POWER_OFF,                // ????
										MINOR_WDT_RESET,                // WDT ????
										MINOR_LOW_BATTERY_VOLTAGE,        // ????????????
										MINOR_AC_LOSS,                    // ???‾??????
										MINOR_AC_RESTORE,                // ???‾??????
										MINOR_RTC_EXCEPTION,            // RTC???㊣?㊣???足??
										MINOR_NETWORK_CONNECT_FAILURE,    // ??????????
										MINOR_NETWORK_CONNECT_RESTORE,    // ????????????
										MINOR_TEL_LINE_CONNECT_FAILURE,    // ???∼????????
										MINOR_TEL_LINE_CONNECT_RESTORE,    // ???∼??????????
										MINOR_EXPANDER_BUS_LOSS,        // ????℅??????谷????
										MINOR_EXPANDER_BUS_RESTORE,        // ????℅??????谷????????
										MINOR_KEYPAD_BUS_LOSS,            // ?邦??℅??????谷????
										MINOR_KEYPAD_BUS_RESTORE,        // ?邦??℅??????谷????????
										MINOR_SENSOR_FAILURE,            // ???????????‾????
										MINOR_SENSOR_RESTORE,            // ???????????‾????
										MINOR_RS485_CONNECT_FAILURE,    // RS485?“????????
										MINOR_RS485_CONNECT_RESTORE,    // RS485?“????????????
										MINOR_BATTERT_VOLTAGE_RESTORE,  // ?????????????????? 
										MINOR_WIRED_NETWORK_ABNORMAL,    //?????????足??
										MINOR_WIRED_NETWORK_RESTORE,    //????????????????
										MINOR_GPRS_ABNORMAL,            //GPRS?“???足??
										MINOR_GPRS_RESTORE,                //GPRS????????
										MINOR_3G_ABNORMAL,                //3G?“???足??
										MINOR_3G_RESTORE,                //3G????????
										MINOR_SIM_CARD_ABNORMAL,        //SIM?“?足??
										MINOR_SIM_CARD_RESTORE,            //SIM?“????????
										MINOR_ALARMHOST_VI_LOST,        // ???????????∫
										MINOR_ALARMHOST_ILLEGAL_ACCESS,    // ﹞?﹞“﹞???
										MINOR_ALARMHOST_HD_FULL,        // ?????迆
										MINOR_ALARMHOST_HD_ERROR,        // ?????赤?車
										MINOR_ALARMHOST_DCD_LOST,        // MODEM ????(㊣?????????)
										MINOR_ALARMHOST_IP_CONFLICT,    // IP???﹞????
										MINOR_ALARMHOST_NET_BROKEN,        // ????????
										MINOR_ALARMHOST_REC_ERROR,      // ???????赤
										MINOR_ALARMHOST_VI_EXCEPTION,   // ?????????足??(???????????“??)
										MINOR_ALARMHOST_FORMAT_HDD_ERROR, //???????????????∫∼?
										MINOR_ALARMHOST_USB_ERROR,        //USB?“??????
										MINOR_ALARMHOST_USB_RESTORE,    //USB?“??????????
										MINOR_ALARMHOST_PRINT_ERROR,    //?辰???迆????
										MINOR_ALARMHOST_PRINT_RESTORE,    //?辰???迆????????
										MINOR_SUBSYSTEM_COMMUNICATION_ERROR, //℅?∼??“???赤?車
										MINOR_ALARMHOST_IPC_NO_LINK,                /* IPC????????  */
										MINOR_ALARMHOST_IPC_IP_CONFLICT,            /*ipc ip ???﹞ ????*/
										MINOR_ALARMHOST_VI_MISMATCH,                /*??????????????*/
										MINOR_ALARMHOST_MCU_RESTART,                //MCU????
										MINOR_ALARMHOST_GPRS_MODULE_FAULT,          //GPRS???谷????
										MINOR_ALARMHOST_TELEPHONE_MODULE_FAULT,     //???∼???谷????
										MINOR_ALARMHOST_WIFI_ABNORMAL,              //WIFI?“???足??
										MINOR_ALARMHOST_WIFI_RESTORE,               //WIFI????????
										MINOR_ALARMHOST_RF_ABNORMAL,                //RF?????足??
										MINOR_ALARMHOST_RF_RESTORE,                 //RF????????????
										MINOR_ALARMHOST_DETECTOR_ONLINE,            //?????‾????
										MINOR_ALARMHOST_DETECTOR_OFFLINE,           //?????‾????
										MINOR_ALARMHOST_DETECTOR_BATTERY_NORMAL,    //?????‾????????        
										MINOR_ALARMHOST_DETECTOR_BATTERY_LOW,       //?????‾?????﹞??
										MINOR_ALARMHOST_DATA_TRAFFIC_OVERFLOW,     //?‾??????
										MINOR_ZONE_MODULE_LOSS,            // ﹞??????谷????
										MINOR_ZONE_MODULE_RESTORE,        // ﹞??????谷????????
										MINOR_ALARMHOST_WIRELESS_OUTPUT_LOSS,   //???????????谷????
										MINOR_ALARMHOST_WIRELESS_OUTPUT_RESTORE,   //???????????谷????????
										MINOR_ALARMHOST_WIRELESS_REPEATER_LOSS,   //?????????‾????
										MINOR_ALARMHOST_WIRELESS_REPEATER_RESTORE,   //?????????‾????????
										MINOR_TRIGGER_MODULE_LOSS,            // ??﹞??‾???谷????
										MINOR_TRIGGER_MODULE_RESTORE,        // ??﹞??‾???谷????????
										MINOR_WIRELESS_SIREN_LOSS,            // ????????????
										MINOR_WIRELESS_SIREN_RESTORE,    // ????????????????
										MINOR_ALARMHOST_WIRELESS_RS485_LOSS, //????RS485?????‾???谷????
										MINOR_ALARMHOST_WIRELESS_RS485_RESTORE, //????RS485?????‾???谷????????

																				// ??℅‾ 
																				MINOR_GUARD = 0x01,        // ???“??﹞?
																				MINOR_UNGUARD,                    // ???“?﹞﹞?
																				MINOR_BYPASS,                    // ???﹞
																				MINOR_DURESS_ACCESS,            // ????
																				MINOR_ALARMHOST_LOCAL_REBOOT,    // ㊣???????
																				MINOR_ALARMHOST_REMOTE_REBOOT,    // ????????
																				MINOR_ALARMHOST_LOCAL_UPGRADE,    // ㊣???????
																				MINOR_ALARMHOST_REMOTE_UPGRADE,    // ????????
																				MINOR_RECOVERY_DEFAULT_PARAM,    // ????????????
																				MINOR_ALARM_OUTPUT,                // ????㊣“??????
																				MINOR_ACCESS_OPEN,                // ??????????
																				MINOR_ACCESS_CLOSE,                // ??????????
																				MINOR_SIREN_OPEN,                // ??????????
																				MINOR_SIREN_CLOSE,                // ??????????
																				MINOR_MOD_ZONE_CONFIG,            // ????﹞????豕??
																				MINOR_MOD_ALARMOUT_CONIFG,        // ????㊣“??????????
																				MINOR_MOD_ANALOG_CONFIG,        // ??????????????
																				MINOR_RS485_CONFIG,                // ????485?“??????
																				MINOR_PHONE_CONFIG,                // ????????????
																				MINOR_ADD_ADMIN,                // ???????赤?㊣
																				MINOR_MOD_ADMIN_PARAM,            // ???????赤?㊣????
																				MINOR_DEL_ADMIN,                // ???????赤?㊣
																				MINOR_ADD_NETUSER,                // ?????車????℅‾?㊣
																				MINOR_MOD_NETUSER_PARAM,        // ?????車????℅‾?㊣????
																				MINOR_DEL_NETUSER,                // ?????車????℅‾?㊣
																				MINOR_ADD_OPERATORUSER,            // ?????∼????℅‾?㊣
																				MINOR_MOD_OPERATORUSER_PW,        // ?????∼????℅‾?㊣????
																				MINOR_DEL_OPERATORUSER,            // ?????∼????℅‾?㊣
																				MINOR_ADD_KEYPADUSER,            // ?????邦??/???“?‾???∫    
																				MINOR_DEL_KEYPADUSER,            // ?????邦??/???“?‾???∫    
																				MINOR_REMOTEUSER_LOGIN,            // ???????∫????
																				MINOR_REMOTEUSER_LOGOUT,        // ???????∫℅??迆
																				MINOR_REMOTE_GUARD,                // ??????﹞?
																				MINOR_REMOTE_UNGUARD,            // ?????﹞﹞?
																				MINOR_MOD_HOST_CONFIG,          // ?????‾?迆????
																				MINOR_RESTORE_BYPASS,            // ???﹞????
																				MINOR_ALARMOUT_OPEN,            // ㊣“??????????
																				MINOR_ALARMOUT_CLOSE,            // ㊣“????????㊣?
																				MINOR_MOD_SUBSYSTEM_PARAM,        // ????℅?????????????
																				MINOR_GROUP_BYPASS,                // ℅谷???﹞
																				MINOR_RESTORE_GROUP_BYPASS,        // ℅谷???﹞????
																				MINOR_MOD_GRPS_PARAM,            // ????GPRS????
																				MINOR_MOD_NET_REPORT_PARAM,        // ??????????㊣“????????
																				MINOR_MOD_REPORT_MOD,            // ????????﹞???????
																				MINOR_MOD_GATEWAY_PARAM,        // ????????????????
																				MINOR_ALARMHOST_REMOTE_START_REC,        // ????????????
																				MINOR_ALARMHOST_REMOTE_STOP_REC,        // ????????????
																				MINOR_ALARMHOST_START_TRANS_CHAN,        // ???????‾????
																				MINOR_ALARMHOST_STOP_TRANS_CHAN,        // ???????‾????
																				MINOR_ALARMHOST_START_VT,                // ????????????
																				MINOR_ALARMHOST_STOP_VTM,                // ????????????
																				MINOR_ALARMHOST_REMOTE_PLAYBYFILE,        // ????∼???????﹞?
																				MINOR_ALARMHOST_REMOTE_PLAYBYTIME,      // ????∼??㊣????﹞?
																				MINOR_ALARMHOST_REMOTE_PTZCTRL,            // ???????“????
																				MINOR_ALARMHOST_REMOTE_FORMAT_HDD,      // ??????????????
																				MINOR_ALARMHOST_REMOTE_LOCKFILE,        // ???????“????
																				MINOR_ALARMHOST_REMOTE_UNLOCKFILE,      // ????????????
																				MINOR_ALARMHOST_REMOTE_CFGFILE_OUTPUT,  // ????????????????
																				MINOR_ALARMHOST_REMOTE_CFGFILE_INTPUT,  // ????????????????
																				MINOR_ALARMHOST_REMOTE_RECFILE_OUTPUT,  // ???????????車????

																				MINOR_ALARMHOST_STAY_ARM,                        //??????﹞?
																				MINOR_ALARMHOST_QUICK_ARM,                        //???㊣??﹞?
																				MINOR_ALARMHOST_AUTOMATIC_ARM,                    //℅?????﹞?
																				MINOR_ALARMHOST_AUTOMATIC_DISARM,                //℅????﹞﹞?
																				MINOR_ALARMHOST_KEYSWITCH_ARM,                    //???℅﹞?????﹞?
																				MINOR_ALARMHOST_KEYSWITCH_DISARM,                //???℅﹞????﹞﹞?
																				MINOR_ALARMHOST_CLEAR_ALARM,                    //????
																				MINOR_ALARMHOST_MOD_FAULT_CFG,                    //????????????????
																				MINOR_ALARMHOST_MOD_EVENT_TRIGGER_ALARMOUT_CFG,    //??????????﹞?㊣“??????????
																				MINOR_ALARMHOST_SEARCH_EXTERNAL_MODULE,            //???‾???????谷
																				MINOR_ALARMHOST_REGISTER_EXTERNAL_MODULE,        //????℅??芍???????谷
																				MINOR_ALARMHOST_CLOSE_KEYBOARD_ALARM,            //??㊣??邦??㊣“???芍????
																				MINOR_ALARMHOST_MOD_3G_PARAM,                    //????3G????
																				MINOR_ALARMHOST_MOD_PRINT_PARAM, //?????辰???迆????
																				MINOR_SD_CARD_FORMAT,        //SD?“??????
																				MINOR_SUBSYSTEM_UPGRADE,        //℅?∼?????????

																				MINOR_ALARMHOST_PLAN_ARM_CFG,    //???????﹞﹞?????????
																				MINOR_ALARMHOST_PHONE_ARM,        //???迆??﹞?
																				MINOR_ALARMHOST_PHONE_STAY_ARM,    //???迆??????﹞?
																				MINOR_ALARMHOST_PHONE_QUICK_ARM,//???迆???㊣??﹞?
																				MINOR_ALARMHOST_PHONE_DISARM,    //???迆?﹞﹞?
																				MINOR_ALARMHOST_PHONE_CLEAR_ALARM,    //???迆????
																				MINOR_ALARMHOST_WHITELIST_CFG,    //∼℅????????
																				MINOR_ALARMHOST_TIME_TRIGGER_CFG,            //?“?㊣??????﹞??‾????
																				MINOR_ALARMHOST_CAPTRUE_CFG,                //℅???????????
																				MINOR_ALARMHOST_TAMPER_CFG,                //﹞???﹞???????????

																				MINOR_ALARMHOST_REMOTE_KEYPAD_UPGRADE,               //?????????邦??
																				MINOR_ALARMHOST_ONETOUCH_AWAY_ARMING,                //???邦??????﹞? 
																				MINOR_ALARMHOST_ONETOUCH_STAY_ARMING,                //???邦??????﹞?
																				MINOR_ALARMHOST_SINGLE_PARTITION_ARMING_OR_DISARMING,    //??﹞??????﹞﹞? 
																				MINOR_ALARMHOST_CARD_CONFIGURATION,         //?“????????
																				MINOR_ALARMHOST_CARD_ARMING_OR_DISARMING,         //???“???﹞﹞?
																				MINOR_ALARMHOST_EXPENDING_NETCENTER_CONFIGURATION,         //????????????????
																				MINOR_ALARMHOST_NETCARD_CONFIGURATION,         //???“????
																				MINOR_ALARMHOST_DDNS_CONFIGURATION,         //DDNS????
																				MINOR_ALARMHOST_RS485BUS_CONFIGURATION,        // 485℅???????????
																				MINOR_ALARMHOST_RS485BUS_RE_REGISTRATION,            //485℅???????℅??芍

																				MINOR_ALARMHOST_REMOTE_OPEN_ELECTRIC_LOCK,    //?????辰??????
																				MINOR_ALARMHOST_REMOTE_CLOSE_ELECTRIC_LOCK,    //??????㊣?????
																				MINOR_ALARMHOST_LOCAL_OPEN_ELECTRIC_LOCK,    //㊣????辰??????
																				MINOR_ALARMHOST_LOCAL_CLOSE_ELECTRIC_LOCK,    //㊣?????㊣?????
																				MINOR_ALARMHOST_OPEN_ALARM_LAMP,            //?辰??????(????)
																				MINOR_ALARMHOST_CLOSE_ALARM_LAMP,            //??㊣?????(????)


																				MINOR_ALARMHOST_TEMPORARY_PASSWORD,         //???㊣??????℅‾????
																				MINOR_ALARMHOST_ONEKEY_AWAY_ARM,            //???邦??????﹞? 
																				MINOR_ALARMHOST_ONEKEY_STAY_ARM,            //???邦??????﹞?
																				MINOR_ALARMHOST_SINGLE_ZONE_ARM,            //??﹞?????﹞? 
																				MINOR_ALARMHOST_SINGLE_ZONE_DISARM,         //??﹞????﹞﹞?
																				MINOR_ALARMHOST_HIDDNS_CONFIG,                // HIDDNS????
																				MINOR_ALARMHOST_REMOTE_KEYBOARD_UPDATA,     //?????邦??????????
																				MINOR_ALARMHOST_ZONE_ADD_DETECTOR,          //﹞????赤???????‾
																				MINOR_ALARMHOST_ZONE_DELETE_DETECTOR,       //﹞????????????‾
																				MINOR_ALARMHOST_QUERY_DETECTOR_SIGNAL,      //?‾?迆?谷???????‾????????
																				MINOR_ALARMHOST_QUERY_DETECTOR_BATTERY,     //?‾?迆?谷???????‾????
																				MINOR_ALARMHOST_SET_DETECTOR_GUARD,         //?????‾??﹞?
																				MINOR_ALARMHOST_SET_DETECTOR_UNGUARD,       //?????‾?﹞﹞?
																				MINOR_ALARMHOST_SET_WIFI_PARAMETER,         //?豕??WIFI????????
																				MINOR_ALARMHOST_OPEN_VOICE,                 //?辰??????
																				MINOR_ALARMHOST_CLOSE_VOICE,                //??㊣?????
																				MINOR_ALARMHOST_ENABLE_FUNCTION_KEY,        //?????????邦
																				MINOR_ALARMHOST_DISABLE_FUNCTION_KEY,        //??㊣??????邦
																				MINOR_ALARMHOST_READ_CARD,                  //???邦???“
																				MINOR_ALARMHOST_START_BROADCAST,             //?辰??????????
																				MINOR_ALARMHOST_STOP_BROADCAST,               //??㊣?????????
																				MINOR_ALARMHOST_REMOTE_ZONE_MODULE_UPGRADE,            //????????﹞??????谷
																				MINOR_ALARMHOST_NETWORK_MODULE_EXTEND,    //???????谷????????
																				MINOR_ALARMHOST_ADD_CONTROLLER,		//?赤???????‾???∫
																				MINOR_ALARMHOST_DELETE_CONTORLLER,		//?????????‾???∫
																				MINOR_ALARMHOST_REMOTE_NETWORKMODULE_UPGRADE,            //???????????????谷
																				MINOR_ALARMHOST_WIRELESS_OUTPUT_ADD,   //℅??芍???????????谷
																				MINOR_ALARMHOST_WIRELESS_OUTPUT_DEL,   //???????????????谷
																				MINOR_ALARMHOST_WIRELESS_REPEATER_ADD,   //℅??芍?????????‾
																				MINOR_ALARMHOST_WIRELESS_REPEATER_DEL,   //?????????????‾
																				MINOR_ALARMHOST_PHONELIST_CFG,    //???∼????????????
																				MINOR_ALARMHOST_RF_SIGNAL_CHECK,  // RF?????谷??
																				MINOR_ALARMHOST_USB_UPGRADE,  // USB????
																				MINOR_ALARMHOST_DOOR_TIME_REMINDER_CFG,//?????“?㊣?芍??????????
																				MINOR_ALARMHOST_WIRELESS_SIREN_ADD,   //℅??芍????????
																				MINOR_ALARMHOST_WIRELESS_SIREN_DEL,   //????????????
																				MINOR_ALARMHOST_OUT_SCALE_OPEN,   //?“??????
																				MINOR_ALARMHOST_OUT_SCALE_CLOSE,   //?“????㊣?

																				MINOR_ALARMHOST_LOCAL_SET_DEVICE_ACTIVE = 0xf0,        //㊣????∟???豕㊣?
																				MINOR_ALARMHOST_REMOTE_SET_DEVICE_ACTIVE = 0xf1,        //?????∟???豕㊣?
																				MINOR_ALARMHOST_LOCAL_PARA_FACTORY_DEFAULT = 0xf2,    //㊣??????????∫?豕??
																				MINOR_ALARMHOST_REMOTE_PARA_FACTORY_DEFAULT = 0xf3,    //???????????∫?豕??


																																	   // ???? 
																																	   MINOR_SCHOOLTIME_IRGI_B = 0x01,        // B?????㊣
																																	   MINOR_SCHOOLTIME_SDK,                // SDK???㊣
																																	   MINOR_SCHOOLTIME_SELFTEST,            // ?“?㊣℅??足???㊣
																																	   MINOR_SUBSYSTEM_ABNORMALINSERT,        //℅?∼????? 
																																	   MINOR_SUBSYSTEM_ABNORMALPULLOUT,        //℅?∼?∼???

																																	   MINOR_AUTO_ARM,                    //℅?????﹞?
																																	   MINOR_AUTO_DISARM,                //℅????﹞﹞?
																																	   MINOR_TIME_TIGGER_ON,            //?“?㊣??????﹞??‾
																																	   MINOR_TIME_TIGGER_OFF,            //?“?㊣??㊣???﹞??‾
																																	   MINOR_AUTO_ARM_FAILD,            //℅?????﹞??∫∼?
																																	   MINOR_AUTO_DISARM_FAILD,        //℅????﹞﹞??∫∼?
																																	   MINOR_TIME_TIGGER_ON_FAILD,        //?“?㊣??????﹞??‾?∫∼?
																																	   MINOR_TIME_TIGGER_OFF_FAILD,    //?“?㊣??㊣???﹞??‾?∫∼?
																																	   MINOR_MANDATORY_ALARM,            //??????﹞?
																																	   MINOR_KEYPAD_LOCKED,            //?邦?????“
																																	   MINOR_USB_INSERT,               //USB???? 
																																	   MINOR_USB_PULLOUT,              //USB∼???
}ALARMHOST_MINOR_TYPE;


//?㊣???????‾?角????MAJOR_OPERATION=03?????角????MINOR_LOCAL_CFG_PARM=0x52?辰??MINOR_REMOTE_GET_PARM=0x76
//?辰??MINOR_REMOTE_CFG_PARM=0x77?㊣??dwParaType:?????角?????∫??????????????
#define PARA_VIDEOOUT    0x1
#define PARA_IMAGE        0x2
#define PARA_ENCODE        0x4
#define PARA_NETWORK    0x8
#define PARA_ALARM        0x10
#define PARA_EXCEPTION    0x20
#define PARA_DECODER    0x40    /*?????‾*/
#define PARA_RS232        0x80
#define PARA_PREVIEW    0x100
#define PARA_SECURITY    0x200
#define PARA_DATETIME    0x400
#define PARA_FRAMETYPE    0x800    /*??????*/
#define PARA_DETECTION  0x1000   //?足??????
#define PARA_VCA_RULE   0x1001  //???????辰 
#define PARA_VCA_CTRL   0x1002  //????????????????
#define PARA_VCA_PLATE  0x1003 // ??????㊣?

#define PARA_CODESPLITTER 0x2000 /*??﹞??‾????*/
//2010-01-22 ????????℅??????“???????????角??
#define PARA_RS485          0x2001            /* RS485????????*/
#define PARA_DEVICE          0x2002            /* ?豕㊣?????????*/
#define PARA_HARDDISK      0x2003            /* ???????????? */
#define PARA_AUTOBOOT      0x2004            /* ℅???????????????*/
#define PARA_HOLIDAY      0x2005            /* ??????????????*/            
#define PARA_IPC          0x2006            /* IP?“?????? */    
/*************************?????????邦?? end*******************************/


/*******************?谷????????????????﹞?????*************************/
#define NET_DVR_FILE_SUCCESS            1000    //????????????
#define NET_DVR_FILE_NOFIND                1001    //????????
#define NET_DVR_ISFINDING                1002    //?????谷??????
#define    NET_DVR_NOMOREFILE                1003    //?谷???????㊣?????邦?角??????
#define    NET_DVR_FILE_EXCEPTION            1004    //?谷???????㊣?足??

/*********************???‾?????角?? begin************************/

//㊣“?????‾?邦??
#define COMM_ALARM                           0x1100    //8000㊣“???????‾??????

//????NET_VCA_RULE_ALARM
#define COMM_ALARM_RULE                      0x1102     //????﹞???㊣“??????
#define COMM_ALARM_PDC                       0x1103  //????????㊣“??????
#define COMM_ALARM_VIDEOPLATFORM             0x1104  //????℅??????“㊣“??
#define COMM_ALARM_ALARMHOST                 0x1105  //????㊣“???‾?迆㊣“??
#define COMM_ALARM_FACE                      0x1106  //?????足????㊣?㊣“??????
#define COMM_RULE_INFO_UPLOAD                0x1107  // ????????????????
#define COMM_ALARM_AID                       0x1110  //???“????㊣“??????
#define COMM_ALARM_TPS                       0x1111  //???“????????㊣“??????
//????????℅????芍??????
#define COMM_UPLOAD_FACESNAP_RESULT          0x1112  //??????㊣??芍??????
#define COMM_ALARM_TFS                       0x1113  //???“???∟㊣“??????
#define COMM_ALARM_TPS_V41                   0x1114  //???“????????㊣“??????????
#define COMM_ALARM_AID_V41                   0x1115  //???“????㊣“??????????
#define COMM_ALARM_VQD_EX                    0x1116     //????????????㊣“??
#define COMM_ALARM_NOTIFICATION_REPORT       0x1117  //?“????????㊣“
#define COMM_SENSOR_VALUE_UPLOAD             0x1120  //?????????????㊣????
#define COMM_SENSOR_ALARM                    0x1121  //??????㊣“??????
#define COMM_SWITCH_ALARM                    0x1122     //??????㊣“??
#define COMM_ALARMHOST_EXCEPTION             0x1123  //㊣“???‾?迆????㊣“??
#define COMM_ALARMHOST_OPERATEEVENT_ALARM    0x1124  //??℅‾????㊣“??????
#define COMM_ALARMHOST_SAFETYCABINSTATE      0x1125     //﹞??∟??℅???
#define COMM_ALARMHOST_ALARMOUTSTATUS        0x1126     //㊣“????????/????℅???
#define COMM_ALARMHOST_CID_ALARM               0x1127     //㊣“??㊣“??????
#define    COMM_ALARMHOST_EXTERNAL_DEVICE_ALARM 0x1128     //㊣“???‾?迆?????豕㊣?㊣“??????
#define COMM_ALARMHOST_DATA_UPLOAD           0x1129     //㊣“??????????
#define COMM_FACECAPTURE_STATISTICS_RESULT   0x112a  //????℅???????????
#define COMM_ALARM_WIRELESS_INFO   0x122b  // ????????????????
#define COMM_SCENECHANGE_DETECTION_UPLOAD     0x1130     //???∼㊣??邦㊣“??????(??﹞?)2013-7-16
#define COMM_CROSSLINE_ALARM                 0x1131    //????㊣“??(?角??) 2013-09-27
#define COMM_UPLOAD_VIDEO_INTERCOM_EVENT     0x1132  //????????????????????
#define COMM_ALARM_VIDEO_INTERCOM               0x1133  //????????㊣“??????
#define COMM_UPLOAD_NOTICE_DATA              0x1134  //????????????????????
#define COMM_ALARM_AUDIOEXCEPTION             0x1150     //?迄??㊣“??????
#define COMM_ALARM_DEFOCUS                   0x1151     //?谷??㊣“??????
#define COMM_ALARM_BUTTON_DOWN_EXCEPTION     0x1152     //∼???∼???㊣“??????
#define COMM_ALARM_ALARMGPS                  0x1202  //GPS㊣“??????????
#define    COMM_TRADEINFO                       0x1500  //ATMDVR?‾?????????℅????
#define COMM_UPLOAD_PLATE_RESULT             0x2800     //????????????
#define COMM_ITC_STATUS_DETECT_RESULT        0x2810  //???㊣℅????足???芍??????(????????IPC)
#define COMM_IPC_AUXALARM_RESULT             0x2820  //PIR㊣“????????㊣“????????㊣“??????
#define COMM_UPLOAD_PICTUREINFO              0x2900     //????????????
#define COMM_SNAP_MATCH_ALARM                0x2902  //??????㊣????芍??????
#define COMM_ITS_PLATE_RESULT                0x3050  //????????????
#define    COMM_ITS_TRAFFIC_COLLECT             0x3051  //????????????????
#define COMM_ITS_GATE_VEHICLE                0x3052  //??????????℅???????????
#define COMM_ITS_GATE_FACE                   0x3053  //??????????℅???????????
#define COMM_ITS_GATE_COSTITEM                 0x3054  //????????????﹞??‾?? 2013-11-19
#define COMM_ITS_GATE_HANDOVER                 0x3055  //??????????∼角???? 2013-11-19
#define COMM_ITS_PARK_VEHICLE                0x3056  //??????????????
#define COMM_ITS_BLACKLIST_ALARM             0x3057  //??????㊣“??????

#define COMM_VEHICLE_CONTROL_LIST_DSALARM    0x3058  //??∼℅?????????豕??????㊣“??2013-11-04
#define COMM_VEHICLE_CONTROL_ALARM           0x3059  //????㊣“??2013-11-04
#define COMM_FIRE_ALARM                      0x3060  //??﹞?㊣“??2013-11-04

#define COMM_ITS_GATE_ALARMINFO              0x3061  //???????????迆????????

#define COMM_VEHICLE_RECOG_RESULT            0x3062  //??????????㊣??芍?????? 2014-11-12 
#define COMM_PLATE_RESULT_V50                0x3063  //???????? V50

#define COMM_GATE_CHARGEINFO_UPLOAD          0x3064  //????????﹞?????????
#define COMM_TME_VEHICLE_INDENTIFICATION     0x3065  //TME????℅???????
#define COMM_GATE_CARDINFO_UPLOAD            0x3066  //???????“??????????

#define COMM_ALARM_SENSORINFO_UPLOAD         0x3077     //?????‾????????
#define COMM_ALARM_CAPTURE_UPLOAD             0x3078     //℅???????????

#define COMM_ITS_RADARINFO                   0x3079  //?℅??㊣“??????

#define COMM_SIGNAL_LAMP_ABNORMAL            0x3080  //???????足???足??????

#define COMM_ALARM_TPS_REAL_TIME             0x3081  //TPS???㊣????????????
#define COMM_ALARM_TPS_STATISTICS            0x3082  //TPS????????????????

#define COMM_ALARM_V30                         0x4000     //9000㊣“???????‾??????
#define COMM_IPCCFG                             0x4001     //9000?豕㊣?IPC??????????㊣?㊣“???????‾??????
#define COMM_IPCCFG_V31                         0x4002     //9000?豕㊣?IPC??????????㊣?㊣“???????‾?????????? 9000_1.1
#define COMM_IPCCFG_V40                      0x4003  // IVMS 2000 ㊣角??﹞????‾ NVR IPC??????????㊣??㊣㊣“??????????
#define COMM_ALARM_DEVICE                    0x4004  //?豕㊣?㊣“?????????????“?????車??256??????
#define COMM_ALARM_CVR                         0x4005  //CVR 2.0.X????㊣“???角??
#define COMM_ALARM_HOT_SPARE                 0x4006  //??㊣??足??㊣“???“N+1?????足??㊣“????
#define COMM_ALARM_V40                         0x4007    //?????足???????????∫????????IO????????㊣“???????‾????????㊣“??????????㊣??∟

#define COMM_UPLOAD_HEATMAP_RESULT           0x4008 //??????㊣“?????? 2014-03-21
#define COMM_ALARM_DEVICE_V40                0x4009  //?豕㊣?㊣“??????????
#define COMM_ALARM_FACE_DETECTION            0x4010 //?????足??㊣“??
#define COMM_ALARM_TARGET_LEFT_REGION        0x4011 //?足????㊣那?????足?????辰㊣“??(????℅??辰?∫?迆㊣“??(?????????????????‾?迆?????足???∫?迆???辰?迆))
#define COMM_GISINFO_UPLOAD                  0x4012 //GIS????????
#define COMM_VANDALPROOF_ALARM               0x4013 //????﹞?????㊣“??????
#define COMM_PEOPLE_DETECTION_UPLOAD         0x4014 //???㊣?足??????????
#define COMM_ALARM_STORAGE_DETECTION         0x4015 //?????????足??㊣“??????
#define COMM_MVM_REGISTER                    0x4016 //???????赤?‾?“Magnetic Vehicle Manager??℅??芍
#define COMM_MVM_STATUS_INFO                 0x4017 //???????赤?‾?“Magnetic Vehicle Manager??℅?????㊣“
#define COMM_UPLOAD_HEATMAP_RESULT_PDC           0x4018 //??????∼?????????????????????
#define COMM_UPLOAD_HEATMAP_RESULT_DURATION      0x4019 //??????∼????㊣?????㊣??????????????????
#define COMM_UPLOAD_HEATMAP_RESULT_INTERSECTION  0x4020 //?﹞??﹞??????????芍??????
#define COMM_UPLOAD_AIOP_VIDEO               0x4021 //?豕㊣??∫??AI??﹞????“???????????????足??????
#define COMM_UPLOAD_AIOP_PICTURE             0x4022 //?豕㊣??∫??AI??﹞????“???????????????足??????
#define COMM_UPLOAD_AIOP_POLLING_SNAP        0x4023 //?豕㊣??∫??AI??﹞????“??????????????℅????????足?????? ???????芍????(NET_AIOP_POLLING_PICTURE_HEAD)
#define COMM_UPLOAD_AIOP_POLLING_VIDEO       0x4024 //?豕㊣??∫??AI??﹞????“???????????????????足?????? ???????芍????(NET_AIOP_POLLING_VIDEO_HEAD)


#define    COMM_ITS_ROAD_EXCEPTION                 0x4500     //?﹞???豕㊣??足??㊣“??
#define    COMM_ITS_EXTERNAL_CONTROL_ALARM         0x4520  //????㊣“??
#define COMM_ALARM_SHIPSDETECTION             0x4521    // ?????足??㊣“??????

#define COMM_VCA_DBD_ALARM 0x4550       //????????㊣“??????
#define COMM_VCA_ADAS_ALARM 0x4551      //?????“?迆????㊣“??????
#define COMM_VEH_REALTIME_INFO 0x4552   //???????㊣????????

#define COMM_FIREDETECTION_ALARM             0x4991 //?????足??㊣“??
#define COMM_ALARM_DENSEFOGDETECTION    0x4992     //?車?赤?足??㊣“??????
#define COMM_VCA_ALARM                     0x4993     //?????足??㊣“??
#define COMM_FACE_THERMOMETRY_ALARM        0x4994     //????????㊣“??

#define  COMM_TAPE_ARCHIVE_ALARM        0x4996 //???????谷??㊣“??

#define    COMM_SCREEN_ALARM                    0x5000  //?角???????‾㊣“???角??
#define COMM_DVCS_STATE_ALARM                 0x5001  //﹞??????車???????‾㊣“??????
#define COMM_ALARM_ACS                         0x5002  //?????‾?迆㊣“??
#define COMM_ALARM_FIBER_CONVERT             0x5003  //??????﹞??‾㊣“??
#define COMM_ALARM_SWITCH_CONVERT             0x5004  //?????迆㊣“??
#define COMM_ALARM_DEC_VCA                   0x5010  //????????㊣“??
#define COMM_ALARM_LCD                         0x5011     //????㊣“??
#define COMM_CONFERENCE_CALL_ALARM             0x5012     //?芍?谷????????

#define COMM_ALARM_WALL_CONFERNECE  0x5015  //MCU?????????芍???芍?谷????㊣“??

#define COMM_DIAGNOSIS_UPLOAD                0x5100  //????﹞????‾VQD㊣“??????
#define COMM_HIGH_DENSITY_UPLOAD             0x5101  //???㊣????????????㊣“??????

#define COMM_ID_INFO_ALARM                   0x5200  //?赤﹞??∟????????
#define COMM_PASSNUM_INFO_ALARM              0x5201  //?“????????㊣“
#define COMM_PASSPORT_ALARM                   0x5202  //?∟??????????

#define COMM_THERMOMETRY_DIFF_ALARM          0x5211  //????㊣“??????
#define COMM_THERMOMETRY_ALARM               0x5212  //????㊣“??????
#define COMM_PANORAMIC_LINKAGE_ALARM         0x5213  //???∼????????????
#define COMM_TAG_INFO_ALARM                  0x5215  // ㊣那??????????
#define COMM_ALARM_VQD                         0x6000  //VQD?‾??㊣“?????? 
#define COMM_PUSH_UPDATE_RECORD_INFO          0x6001  //??????????????????
#define COMM_SWITCH_LAMP_ALARM               0x6002  //???????足??
#define COMM_INQUEST_ALARM             0x6005  // ?車???‾?迆㊣“??????
#define COMM_VIDEO_PARKING_POLE_ALARM       0x6006  //????℅?㊣“??
#define COMM_GPS_STATUS_ALARM                0x6010  // GPS℅???????
#define  COMM_BASE_STATION_INFO_ALARM        0x6011  //?迄??????????
#define COMM_ALARM_SUBSCRIBE_EVENT           0x6012  //?????芍????㊣“

#define COMM_FACESNAP_RAWDATA_ALARM          0x6015  //????㊣???㊣“???“????????﹞?????
#define COMM_CLUSTER_ALARM       0x6020    //????㊣“??????

#define COMM_ISAPI_ALARM  0x6009

//PJ01C20170209084????????NVS?赤????????﹞??“??????℅“??
#define COMM_FRAMES_PEOPLE_COUNTING_ALARM	 0x6069	 //?????????????????芍??????

#define  COMM_SIGN_ABNORMAL_ALARM            0x6120 //???‾?足??㊣“??
#define  COMM_HFPD_ALARM                     0x6121 //???????㊣?足??㊣“??

#define   COMM_HCU_ALARM  0x6150  //??????????℅?㊣“???“㊣?㊣“??SDK????????????℅‾?豕㊣???DVR?“?????谷??????﹞?????????

#define  COMM_DEV_STATUS_CHANGED             0x7000  //?豕㊣?℅?????㊣?㊣“??????

/*************??℅‾?足???角??(????﹞???, ???‾﹞???(㊣???))****************/
#define EXCEPTION_EXCHANGE                0x8000    //???∫?????㊣?足??
#define EXCEPTION_AUDIOEXCHANGE            0x8001    //?????????足??
#define EXCEPTION_ALARM                    0x8002    //㊣“???足??
#define EXCEPTION_PREVIEW                0x8003    //?????∟???足??
#define EXCEPTION_SERIAL                0x8004    //???‾?“???足??
#define EXCEPTION_RECONNECT                0x8005    //?∟???㊣????
#define EXCEPTION_ALARMRECONNECT        0x8006    //㊣“???㊣????
#define EXCEPTION_SERIALRECONNECT        0x8007    //???‾?“??????
#define SERIAL_RECONNECTSUCCESS         0x8008    //???‾?“??????????
#define EXCEPTION_PLAYBACK                0x8010    //??﹞??足??
#define EXCEPTION_DISKFMT                0x8011    //??????????
#define EXCEPTION_PASSIVEDECODE         0x8012  //㊣????????足??
#define EXCEPTION_EMAILTEST             0x8013  //?????????足??    
#define EXCEPTION_BACKUP                0x8014  //㊣?﹞??足??
#define PREVIEW_RECONNECTSUCCESS        0x8015  //?∟???㊣????????
#define ALARM_RECONNECTSUCCESS          0x8016  //㊣“???㊣????????
#define RESUME_EXCHANGE                    0x8017    //???∫????????
#define NETWORK_FLOWTEST_EXCEPTION      0x8018  //?????‾???足???足??
#define EXCEPTION_PICPREVIEWRECONNECT    0x8019    //?????∟??????
#define PICPREVIEW_RECONNECTSUCCESS        0x8020    //?????∟??????????
#define EXCEPTION_PICPREVIEW            0x8021    //?????∟???足??
#define    EXCEPTION_MAX_ALARM_INFO        0x8022    //㊣“??????????????????
#define    EXCEPTION_LOST_ALARM            0x8023  //㊣“?????∫
#define EXCEPTION_PASSIVETRANSRECONNECT 0x8024  //㊣???℅???????
#define PASSIVETRANS_RECONNECTSUCCESS   0x8025  //㊣???℅???????????
#define EXCEPTION_PASSIVETRANS          0x8026  //㊣???℅????足??
#define SUCCESS_PUSHDEVLOGON            0x8030  //???????豕㊣?℅??芍????
#define EXCEPTION_RELOGIN                0x8040    //???∫??????
#define RELOGIN_SUCCESS                    0x8041    //???∫??????????
#define EXCEPTION_PASSIVEDECODE_RECONNNECT  0x8042  //㊣???????????
#define EXCEPTION_CLUSTER_CS_ARMFAILED      0x8043  //????㊣“???足??

#define EXCEPTION_RELOGIN_FAILED                0x8044   //???????∫∼?????????????
#define EXCEPTION_PREVIEW_RECONNECT_CLOSED      0x8045   //??㊣??∟??????????
#define EXCEPTION_ALARM_RECONNECT_CLOSED        0x8046   //??㊣?㊣“??????????
#define EXCEPTION_SERIAL_RECONNECT_CLOSED       0x8047   //??㊣????‾?“??????????
#define EXCEPTION_PIC_RECONNECT_CLOSED          0x8048   //??㊣?????????????
#define EXCEPTION_PASSIVE_DECODE_RECONNECT_CLOSED 0x8049 //??㊣?㊣???????????????
#define EXCEPTION_PASSIVE_TRANS_RECONNECT_CLOSED 0x804a  //??㊣?㊣???℅??????????? 

/********************?∟?????‾????*********************/
#define NET_DVR_SYSHEAD            1    //?????﹞????
#define NET_DVR_STREAMDATA        2    //?????‾?????“∼邦?“?????‾????????﹞??????????‾??????
#define NET_DVR_AUDIOSTREAMDATA    3    //?????‾????
#define NET_DVR_STD_VIDEODATA    4    //㊣那℅??????‾????
#define NET_DVR_STD_AUDIODATA    5    //㊣那℅??????‾????
#define NET_DVR_SDP             6   //SDP????(Rstp?????㊣???∫)
#define NET_DVR_CHANGE_FORWARD  10  //???‾??㊣?????﹞?  
#define NET_DVR_CHANGE_REVERSE  11  //???‾??㊣?????﹞?
#define NET_DVR_PLAYBACK_ALLFILEEND      12  //??﹞??????芍??㊣那??
#define NET_DVR_VOD_DRAW_FRAME      13  //??﹞??谷?????‾
#define NET_DVR_VOD_DRAW_DATA       14  //???????????‾
#define NET_DVR_PRIVATE_DATA    112 //????????,∼邦?“????????

//?豕㊣?????(DVR?角??)
/* ?豕㊣??角?? */
#define DVR                            1                /*???????“????dvr?角??﹞???DVR*/
#define ATMDVR                        2                /*atm dvr*/
#define DVS                            3                /*DVS*/
#define DEC                            4                /* 6001D */
#define ENC_DEC                        5                /* 6001F */
#define DVR_HC                        6                /*8000HC*/
#define DVR_HT                        7                /*8000HT*/
#define DVR_HF                        8                /*8000HF*/
#define DVR_HS                        9                /* 8000HS DVR(no audio) */
#define DVR_HTS                        10              /* 8016HTS DVR(no audio) */
#define DVR_HB                        11              /* HB DVR(SATA HD) */
#define DVR_HCS                        12              /* 8000HCS DVR */
#define DVS_A                        13              /* ??ATA??????DVS */
#define DVR_HC_S                    14              /* 8000HC-S */
#define DVR_HT_S                    15              /* 8000HT-S */
#define DVR_HF_S                    16              /* 8000HF-S */
#define DVR_HS_S                    17              /* 8000HS-S */
#define ATMDVR_S                    18              /* ATM-S */
#define DVR_7000H                    19                /*7000H????*/
#define DEC_MAT                        20              /*?角?﹞?????‾*/
#define DVR_MOBILE                    21                /* mobile DVR */                 
#define DVR_HD_S                    22              /* 8000HD-S */
#define DVR_HD_SL                    23                /* 8000HD-SL */
#define DVR_HC_SL                    24                /* 8000HC-SL */
#define DVR_HS_ST                    25                /* 8000HS_ST */
#define DVS_HW                        26              /* 6000HW */
#define DS630X_D                    27              /* ?角?﹞?????‾ */
#define DS640X_HD                    28                /*640X?????????‾*/
#define DS610X_D                    29              /*610X?????‾*/
#define IPCAM                        30                /*IP ?????迆*/
#define MEGA_IPCAM                    31                /*????IP?????迆*/
#define IPCAM_X62MF                    32                /*862MF????????9000?豕㊣?*/
#define ITCCAM                      35              /*?????????????????迆*/
#define IVS_IPCAM                   36              /*????﹞????????????????迆*/
#define ZOOMCAM                     38              /*?????迆*/
#define IPDOME                      40              /*IP ㊣那???辰?迆*/
#define IPDOME_MEGA200              41              /*IP 200?辰?????辰?迆*/
#define IPDOME_MEGA130              42              /*IP 130?辰?????辰?迆*/
#define IPDOME_AI                   43              /*IP ?????????足?辰*/
#define TII_IPCAM                   44              /*?足?????????????迆*/
#define IPTC_DOME                   45              /*?足?????????????辰?迆*/
#define DS_2DP_Z                    46              /*?辰???????“?車??*/
#define DS_2DP                       47              /*﹞??辰???????“????*/
#define ITS_WMS                      48              /*???????????赤﹞????‾*/
#define IPMOD                        50                /*IP ???谷*/
#define TRAFFIC_YTDOME              51              //???“???????“?“?????℅????????
#define TRAFFIC_RDDOME              52              //???“???????“?“???℅????????
#define IDS6501_HF_P                60              // 6501 ???? 
#define IDS6101_HF_A                61              //????ATM
#define IDS6002_HF_B                62          //???迆?迆℅???DS6002-HF/B
#define IDS6101_HF_B                63              //????﹞?????DS6101-HF/B DS6101-HF/B_SATA
#define IDS52XX                        64          //????﹞?????IVMS
#define IDS90XX                        65                // 9000????
#define IDS8104_AHL_S_HX            66          // ??????????㊣? ATM
#define IDS8104_AHL_S_H             67              // ??????????㊣? ATM
#define IDS91XX                        68                // 9100????
#define IIP_CAM_B                   69              // ????????IP?????迆
#define IIP_CAM_F                   70              //????????IP?????迆
#define DS71XX_H                    71                /* DS71XXH_S */
#define DS72XX_H_S                    72                /* DS72XXH_S */
#define DS73XX_H_S                    73                /* DS73XXH_S */
#define DS72XX_HF_S                 74              //DS72XX_HF_S
#define DS73XX_HFI_S                75              //DS73XX_HFI_S
#define DS76XX_H_S                    76                /* DVR,e.g. DS7604_HI_S */
#define DS76XX_N_S                    77                /* NVR,e.g. DS7604_NI_S */
#define DS_TP3200_EC                   78              /*?迆???????足????*/
#define DS81XX_HS_S                    81                /* DS81XX_HS_S */
#define DS81XX_HL_S                    82                /* DS81XX_HL_S */
#define DS81XX_HC_S                    83                /* DS81XX_HC_S */
#define DS81XX_HD_S                    84                /* DS81XX_HD_S */
#define DS81XX_HE_S                    85                /* DS81XX_HE_S */
#define DS81XX_HF_S                    86                /* DS81XX_HF_S */
#define DS81XX_AH_S                    87                /* DS81XX_AH_S */
#define DS81XX_AHF_S                88                /* DS81XX_AHF_S */
#define DS90XX_HF_S                    90              /*DS90XX_HF_S*/
#define DS91XX_HF_S                    91              /*DS91XX_HF_S*/
#define DS91XX_HD_S                    92              /*91XXHD-S(MD)*/
#define IDS90XX_A                    93                // 9000???? ATM
#define IDS91XX_A                    94                // 9100???? ATM
#define DS95XX_N_S                    95              /*DS95XX_N_S NVR ????????????*/
#define DS96XX_N_SH                    96              /*DS96XX_N_SH NVR*/
#define DS90XX_HF_SH                97              /*DS90XX_HF_SH */   
#define DS91XX_HF_SH                98              /*DS91XX_HF_SH */
#define DS_B10_XY                   100             /*????℅??????“?豕㊣?????(X:㊣角??∼???????Y:????∼?????)*/
#define DS_6504HF_B10               101             /*????℅??????“????㊣角???‾*/
#define DS_6504D_B10                102             /*????℅??????“?????????‾*/
#define DS_1832_B10                 103             /*????℅??????“??????﹞??‾*/
#define DS_6401HFH_B10              104             /*????℅??????“????????∼?*/
#define DS_65XXHC                    105                //65XXHC DVS
#define DS_65XXHC_S                    106                //65XXHC-SATA DVS
#define DS_65XXHF                    107                //65XXHF DVS
#define DS_65XXHF_S                    108                //65XXHF-SATA DVS
#define DS_6500HF_B                 109             //65 rack DVS
#define IVMS_6200_C                 110             // iVMS-6200(/C)  
#define IVMS_6200_B                 111             // iVMS-6200(/B)
#define DS_72XXHV_ST15                112                //72XXHV_ST  ????3515???“ DVR
#define DS_72XXHV_ST20                113                //72XXHV_ST  ????3520???“ DVR
#define IVMS_6200_T                    114             // IVMS-6200(/T)
#define IVMS_6200_BP                115             // IVMS-6200(/BP)
#define DS_81XXHC_ST                116                //DS_81XXHC_ST
#define DS_81XXHS_ST                117                //DS_81XXHS_ST
#define DS_81XXAH_ST                118                //DS_81XXAH_ST
#define DS_81XXAHF_ST                119                //DS_81XXAHF_ST
#define DS_66XXDVS                    120                //66XX DVS

#define DS_1964_B10                 121             /*????℅??????“????㊣“???‾*/
#define DS_B10N04_IN                122             /*????℅??????“????????????*/
#define DS_B10N04_OUT                123             /*????℅??????“????????????*/
#define DS_B10N04_INTEL             124             /*????℅??????“????????*/
#define DS_6408HFH_B10E_RM          125             //V6????
#define DS_B10N64F1_RTM             126             //V6????????DSP
#define DS_B10N64F1D_RTM            127             //V6??????DSP
#define DS_B10_SDS                  128             //????℅??????“℅??辰?????‾
#define DS_B10_DS                   129             //????℅??????“?辰?????‾
#define DS_6401HFH_B10V                130             //VGA????㊣角???‾
#define DS_6504D_B10B               131             /*????℅??????“????㊣那???????‾*/
#define DS_6504D_B10H               132             /*????℅??????“?????????????‾*/
#define DS_6504D_B10V               133             /*????℅??????“????VGA?????‾*/
#define DS_6408HFH_B10S                134             //????℅??????“SDI℅?∼? 
#define DS_18XX_N                      135             /* ???車????????*/ 
#define DS_6504HF_B10F_CLASS        136                //?????迆SD
#define DS_18XX_PTZ                    141                /*??????﹞??角?迆?﹞*/
#define DS_19AXX                    142                /*?“??㊣“???‾?迆?角?迆?﹞*/
#define DS_19BXX                    143                /*????㊣“???‾?迆*/
#define DS_19CXX                    144                /*℅??迆????㊣“???‾?迆*/
#define DS_19DXX                    145                /*???﹞?角??㊣“???‾?迆*/    
#define DS_19XX                     146             /*1900????㊣“???‾?迆*/ 
#define DS_19SXX                    147                /*????㊣“???‾?迆*/
#define DS_1HXX                        148                /*CS?角?迆?﹞*/ //﹞??∟??
#define DS_PEAXX                    149                /*???邦?????㊣㊣“???迆?﹞*/
#define DS_PWXX                     150                 /*????㊣“???‾?迆?迆?﹞*/
#define DS_PMXX                     151                 /*4G???????谷*/
#define DS_19DXX_S                  152                /*???????﹞?角???‾?迆*/
#define DS_PWAXX                    153                 /* Axiom Hub????㊣“???‾?迆 */
#define DS_PHAXX                    154                 /* Axiom Hybrid?足??㊣“???‾?迆 */


//2011-11-30
#define    DS_C10H                        161                /*?角???????‾*/
#define DS_C10N_BI                    162                //BNC???赤?‾
#define DS_C10N_DI                    163                //rbg???赤?‾
#define DS_C10N_SI                    164                //???‾???赤?‾
#define DS_C10N_DO                    165                //???????赤?‾
#define DS_C10N_SERVER                166                //﹞?????﹞????‾


#define IDS_8104_AHFL_S_H           171             // 8104ATM 
#define IDS_65XX_HF_A               172             // 65 ATM
#define IDS90XX_HF_RH               173             // 9000 ????RH
#define IDS91XX_HF_RH               174             // 9100 ????RH?豕㊣?
#define IDS_65XX_HF_B               175             // 65 ????﹞???
#define IDS_65XX_HF_P               176             // 65 ??????㊣?
#define IVMS_6200_F                 177             // IVMS-6200(/F)
#define IVMS_6200_A                 178             //iVMS-6200(/A)
#define IVMS_6200_F_S                 179             // IVMS-6200(/F_S)?????車?足?‾﹞?????

#define DS90XX_HF_RH                181             // 9000 RH    648
#define DS91XX_HF_RH                182             // 9100 RH?豕㊣? 648
#define DS78XX_S                    183             // 78?????豕㊣? 6446
#define DS81XXHW_S                    185                // 81 Resolution 960 KY2011
#define DS81XXHW_ST                    186             // DS81XXHW_ST  KY2011
#define DS91XXHW_ST                    187             // DS91XXHW_ST  KY2011
#define DS91XX_ST                    188             // DS91XX_ST netra
#define DS81XX_ST                    189             // DS81XX_ST netra
#define DS81XXHX_ST                    190             // DS81XXHDI_ST,DS81XXHE_ST ky2012
#define DS73XXHX_ST                    191             // DS73XXHI_ST ky2012
#define DS81XX_SH                   192             // ?車??81SH,81SHF
#define DS81XX_SN                   193             // ?車??81SNL

#define DS96XXN_ST                  194             //NVR:DS96xxN_ST
#define DS86XXN_ST                  195             //NVR:DS86xxN_ST
#define DS80XXHF_ST                 196             //DVR:DS80xxHF_ST
#define DS90XXHF_ST                 197             //DVR:DS90xxHF_ST
#define DS76XXN_ST                  198             //NVR:DS76xxN_ST

#define DS_9664N_RX                 199         //NVR:DS_9664N_RX
#define ENCODER_SERVER                200            // ㊣角???“﹞????‾
#define DECODER_SERVER              201         // ?????“﹞????‾
#define PCNVR_SERVER                202         // PCNVR????﹞????‾
#define CVR_SERVER                  203         // ∼???CVR??????℅????“???角????DVR_S-1
#define DS_91XXHFH_ST                204         // 91????HD-SDI????DVR
#define DS_66XXHFH                    205         // 66????㊣角???‾
#define    TRAFFIC_TS_SERVER            210           //????﹞????‾
#define    TRAFFIC_VAR                    211           //????﹞?????????
#define IPCALL                      212        //IP????????﹞??迆
#define SAN_SERVER                  213         //??CVR_SERVER?角???????辰??????????????

#define DS_B11_M_CLASS                 301             /*????℅??????“?豕㊣?????*/
#define DS_B12_M_CLASS                  302             /*????℅??????“?豕㊣?????*/
#define DS_6504HF_B11_CLASS         303             /*????℅??????“????㊣角???‾*/
#define DS_6504HF_B12_CLASS         304              /*????℅??????“????㊣角???‾*/
#define  DS_6401HFH_B11V_CLASS         305     //VGA????
#define  DS_6401HFH_B12V_CLASS         306     //VGA????
#define  DS_6408HFH_B11S_CLASS         307     //SDI
#define  DS_6408HFH_B12S_CLASS      308     //SDI
#define  DS_6504D_B11H_CLASS        309   /*????℅??????“?????????????‾*/
#define  DS_6504D_B11B_CLASS        310    /*????℅??????“????㊣那???????‾*/
#define  DS_6504D_B12B_CLASS        311       /*????℅??????“????㊣那???????‾*/
#define  DS_6504D_B11V_CLASS        312      /*????℅??????“????VGA?????‾*/
#define  DS_6504D_B12V_CLASS        313     /*????℅??????“????VGA?????‾*/
//B10????
#define  DS_6401HFH_B10R_CLASS         314     //B10 RGB????
#define  DS_6401HFH_B10D_CLASS         315     //B10 DVI????
#define  DS_6401HFH_B10H_CLASS         316     //B10 HDMI????
//B11????
#define  DS_6401HFH_B11R_CLASS         317     //B11 RGB????
#define  DS_6401HFH_B11D_CLASS         318     //B11 DVI????
#define  DS_6401HFH_B11H_CLASS         319     //B11 HDMI????
//B12????
#define  DS_6401HFH_B12R_CLASS         320     //B12 RGB????
#define  DS_6401HFH_B12D_CLASS         321     //B12 DVI????
#define  DS_6401HFH_B12H_CLASS         322     //B12 HDMI????
#define  DS_65XXD_B10Ex_CLASS        323     //netra???????? 

//B10 V2.1????
#define  DS_6516HW_B10_CLASS        324     //netra????㊣角??
#define  DS_6401HFH_B10F_RX_CLASS   326        //?????????迆?????“?∫??1/2?﹞?????迆??????
#define  DS_6502HW_B10F_RX_CLASS    327        //960H?????迆?????“?∫??1/4/8?﹞?????迆??????
//2012-5-16????
#define  DS_6504D_B11Ex_CLASS        328     //netra????????
#define  DS_6504D_B12Ex_CLASS        329     //netra????????
#define  DS_6512_B11_CLASS            330     //netra????㊣角??
#define  DS_6512_B12_CLASS            331     //netra????㊣角??
#define  DS_6504D_B10H_CLASS        332     //????℅??????“?????????????‾

#define  DS_65XXT_B10_CLASS         333     //????℅??????“℅???℅?????
#define  DS_65XXD_B10_CLASS         335     //????℅??????“?辰??????∼?
#define  DS_IVMSE_B10X_CLASS        336     //X86﹞????‾℅?????
#define  DS_6532D_B10ES_CLASS        337     //??????????∼?_SDI(B10)
#define  DS_6508HFH_B10ES_CLASS        338     //SDI????㊣角??℅?????
#define  DS_82NCG_CLASS                340     //????????????℅?????
#define  DS_82VAG_CLASS                341     //????????????℅????? 
#define  DS_1802XXF_B10_CLASS       342     //????????℅?????
#define  iDS_6504_B10EVAC_CLASS     343     //????℅?????
#define  iDS_6504_B10EDEC_CLASS     344     //????℅?????
#define  DS_6402HFH_B10EV_CLASS     345     //netra㊣角??(VGA)
#define  DS_6402HFH_B10ED_CLASS     346     //netra㊣角??(DVI)
#define  DS_6402HFH_B10EH_CLASS     347     //netra㊣角??(HDMI)
#define  DS_6404HFH_B10T_RX_CLASS   348     //????????㊣角??
#define  DS_6504D_AIO_CLASS         349        //netra????????
#define  DS_IVMST_B10_CLASS            350        //X86℅???℅?????
#define  DS_6402_AIO_CLASS          351     //netra㊣角??
#define  DS_iVMSE_AIO_CLASS         352     //x86﹞????‾℅?????
#define  DS_AIO_M_CLASS             353     //?????迆


#define  DS_6508HF_B10E_CLASS        355        //BNC????㊣角??℅?????
#define  DS_6404HFH_B10ES_CLASS        356        //SDI????㊣角??℅?????
#define  DS_6402HFH_B10ER_CLASS        358        //RGB????㊣角??℅?????
#define  DS_6404HFH_B10T_RM_CLASS    361        //????????㊣角??℅?????
#define  DS_6516D_B10EB_CLASS        362        //BNC????????℅?????
#define  DS_6516D_B10ES_CLASS        363        //SDI????????℅?????

//DVI/HDMI/VGA?????????????????角??
#define  DS_6508D_B10FH_CLASS        364
#define  DS_6508D_B10FD_CLASS        364
#define  DS_6508D_B10FV_CLASS        364

#define  DS_6508_B11E_CLASS            365        //BNC????㊣角??℅?????
#define  DS_6402_B11ES_CLASS        366        //SDI????㊣角??℅?????
#define  DS_6402_B11EV_CLASS        367        //VGA????㊣角??℅?????
#define  DS_6402_B11ER_CLASS        368        //RGB????㊣角??℅?????
#define  DS_6402_B11ED_CLASS        369        //DVI????㊣角??℅?????
#define  DS_6402_B11EH_CLASS        370        //HDMI????㊣角??℅?????
#define  DS_6516D_B11EB_CLASS        371        //BNC????????℅?????
#define  DS_6516D_B11ES_CLASS        372        //SDI????????℅?????

#define  DS_6508_B12E_CLASS         373     //BNC????㊣角??℅?????
#define     DS_6402_B12ES_CLASS        375        //SDI????㊣角??℅?????
#define  DS_6402_B12EV_CLASS        376        //VGA????㊣角??℅?????
#define  DS_6402_B12ER_CLASS        377        //RGB????㊣角??℅?????
#define  DS_6402_B12ED_CLASS        378        //DVI????㊣角??℅?????
#define  DS_6402_B12EH_CLASS        379        //HDMI????㊣角??℅?????
#define  DS_6516D_B12EB_CLASS        380        //BNC????????℅?????

#define  DS_iVMSE_AIO_8100x_CLASS   381     //?????????????迆X86℅?????
#define  DS_iVMSE_AIO_87x_CLASS     382     //?????????????迆X86℅?????
#define  DS_6532D_B11ES_CLASS        384        //??????????∼?_SDI(B11)
#define  DS_6532D_B12ES_CLASS        385        //??????????∼?_SDI(B12)
//B20????
#define  DS_B20_MSU_NP              400     //B20?‾??∼?
#define  DS_6416HFH_B20S            401     //SDI????㊣角??
#define  DS_6416HFH_B20_RM          402     //????????????㊣角??
#define  DS_6564D_B20D              403     //DVI????
#define  DS_6564D_B20H              404     //HDMI????
#define  DS_6564D_B20V              405     //VGA????
#define  DS_B20_6516D_DEV_CLASS     406     //B20????℅?????
#define  DS_6408HFH_B20V            407     //VGA㊣角??∼?
#define  DS_MMC_B20_CLASS           408     //B20?‾??
#define  DS_CARD_CHIP_B20_CLASS     409     //B20?‾??℅?∼?
#define  DS_6564D_B20B_DEV_CLASS    410     //BNC????℅?????
#define  DS_6564D_B20S_DEV_CLASS    411     //SDI????℅?????
#define  DS_6532HF_B20B_DEV_CLASS   412     //BNC㊣角??℅?????
#define  DS_6408HFH_B20D_DEV_CLASS  413     //DVI㊣角??℅?????
#define  DS_6408HFH_B20H_DEV_CLASS  414     //HDMI㊣角??℅?????
#define  DS_IVMSE_B20_CLASS            415     //X86﹞????‾℅?????
#define  DS_6402HFH_B20Y_DEV_CLASS  416     //YUV㊣角??℅?????
#define  DS_6508HW_B20_DEV_CLASS    417     //HW㊣角??℅?????
#define  DS_B20N128Fx_B20_DEV_CLASS 418     //DS_B20N128Fx_M????∼?
#define  DS_AIO_MCU_NP_DEV_CLASS    419     //IO?‾??∼?
#define  DS_6402_AIO_EV_DEV_CLASS   420     //VGA㊣角??
#define  DS_6508D_AIO_EV_DEV_CLASS  421     //VGA????
#define  DS_6508D_AIO_ED_DEV_CLASS  422     //DVI????
#define  DS_6508D_AIO_EH_DEV_CLASS  423     //HDMI????
#define  DS_6508HD_B20F_DEV_CLASS    424     //????????∼?
#define  DS_6402HFH_B20ES_DEV_CLASS 425     //3G SID㊣角??
#define  DS_6532D_B20_DEV_CLASS     426     //B20????℅?????            
#define  DS_IVMST_B20_DEV_CLASS     427     //X86﹞????‾℅?????
#define  DS_6416HFH_B20DD_DEV_CLASS 428     //DVI?????﹞
#define  DS_6441VS_B20_DEV_CLASS    429        //?角?迆?????角??
#define  DS_6404HFH_B20T_CLASS         431        //TVI
#define  DS_FS22_B20_DEV_CLASS         432        //?????迆℅?????
#define  DS_IVMSE_B20UH_DEV_CLASS   433     //??????X86????
#define  IDS_6524J_B20_DEV_CLASS    434
#define  IDS_6532B_B20_DEV_CLASS    435
#define DS_6404HFH_B20Fx_DEV_CLASS  436        //?????迆????℅?????
#define DS_N128x_B20Fy_CLASS        437     //????℅?????
#define DS_181600F_B20_CLASS        438     //????????℅?????
#define  DS_6904UD_B20H_CLASS       439     //??????????℅?????

#define DS_B21_MCU_NP_CLASS         440     //B21?‾??
#define DS_B21_S10_x_CLASS          441     //B21?迆?? x = A/S/D
#define DS_6402HFH_B21D_CLASS       442     //B21㊣角??℅?????
#define DS_6508HD_B21D_CLASS        443     //B21????℅?????
#define DS_iVMSE_B21HW_CLASS        444     //B21 X86℅?????

#define  DS_C10S                    501     //C10S ???????車???????‾

#define  DS_C10N_SDI                551        //SDI???赤?‾
#define  DS_C10N_BIW                552        //8?﹞BNC???赤?‾
#define  DS_C10N_DON                553        //???????赤?‾
#define  DS_C10N_TVI                554     //TVI????∼?
#define  DS_C10N_DI2                555     //DVI 2?﹞????∼?
#define  DS_C10N_AUDIO_OUT          556     //DVI??HDMI??VGA????∼???????
#define  DS_C10N_AUDIO_IN           557     //DVI??HDMI??VGA????∼???????

//?赤﹞????‾∼?㊣???﹞??????車???????‾
#define  DS_C20N                    570     //﹞??????車???????‾
#define  DS_C20N_BNC                571     //BNC?????豕㊣?
#define  DS_C20N_DVI                572     //DVI?????豕㊣?
#define  DS_C20N_DP                 573     //DP?????豕㊣?
#define  DS_C20N_OUT                574     //?????豕㊣?

//??﹞????‾∼?㊣???﹞??????車???????‾
#define DS_C20N_VWMS                5351    //C20N﹞????‾
#define DS_C20N_DI2                 5352    //???﹞DVI?????豕㊣?
#define DS_C20N_DO2                 5353    //???﹞DVI?????豕㊣?
#define DS_C20N_UHDI                5354    //DP/HDMI 1?﹞4K???????????豕㊣?
#define DS_C20N_YI2                 5355    //???﹞YPbPr????∼?

#define DS_C12N_VWMS                5356    //C12N﹞????‾
#define DS_C12N_DO                  5357    //1?﹞DVI????
#define DS_C12N_HOE                 5358    //1?﹞HDMI 4K????

#define DS_C20N_HI2             5359 // HDMI????????(2?﹞)
#define DS_C20N_VI2             5360 //VGA????????(2?﹞)
#define DS_C20N_SI2             5361 //SDI????????(2?﹞)
#define DS_C20N_HO2             5362 //HDMI????????(2?﹞)
#define DS_C20N_S24G            5363 //C20N℅“???∫?℅?????迆(24?﹞)
#define DS_C20N_S24X            5364 //C20N℅“???辰?℅?????迆(24?﹞)

//?????????豕㊣?
#define DS_D1HXX                    5591    //?????????豕㊣?

//?????????豕㊣?
#define ELEVATO_BRIDGE  5751  //????????????
#define DS_3WF01S_5NG_M  5752  //5.8G????1?????????∟????
#define DS_3WF0EC_2N_D  5753  //2.4G????500?℅????

//㊣“???豕㊣?
#define DS_19M00_MN                    601     //㊣“???‾?迆∼??℅???????谷 
#define DS_KH8302_A                 602  //?????迆
#define DS_KD8101_2                 603  //?????迆
#define DS_KM8301                   604  //???赤?迆
#define DS_KVXXXX_XX                605  //㊣????????迆
#define DS_LHPM1D_C                 606  //???那??
#define DS_KAM03                      607 //∼???℅?℅??????谷

#define DS64XXHD_T                    701        //64-T?????????‾
#define DS_65XXD                    703     //65?辰???????‾
#define DS63XXD_T                    704        //63-T㊣那???????‾
#define SCE_SERVER                  705     //℅???﹞????‾
#define DS_64XXHD_S                 706     //64XXHD-S?????????‾
#define DS_68XXT                    707     //?角??????????℅????‾
#define DS_65XXD_T                  708     //65D-T?辰???????‾
#define DS_65XXHD_T                 709     //65HD-T?辰???????‾
#define DS_69XXUD                   710     //69XXUD???????????‾
#define DS_65XXUD                   711     //65XXUD?????‾
#define DS_65XXUD_L                 712     //65XXUD_L?????‾
#define DS_65XXUD_T                 713     //65XXUD_T?????‾
#define DS_69XXHD                   5001    //69XXHD?????‾

#define DS_D20XX                    750     //LCD???? ?????“
//SDI???車
#define DS_C50S                     751     //SDI???車
#define DS_D50XX                    752     //LCD???? ?????“

#define DS_D40                      760     //LED??﹞????“

#define DS_65VMXX                   770     //?????芍?谷﹞????‾
#define DS_65VTXX                   771     //?????芍?谷????
#define DS_65VTA                    772     //?????芍?谷??????????
#define DS_65VT_RX                  773     //???????∫????
#define DS_65VM_MCU_NP              774     //?車????MCU
#define DS_65VT0010                 5571    //??????????
#define DS_65VM_MCU                 5572    //??????MCU?‾??∼?
#define DS_65VM_MPC                 5573    //??????MCU????℅???∼?
#define DS_65VT2XXYR_SF             5574    //??﹞“?芍??????
#define DS_65VT0XXY                 5575    //?????芍?谷?車????
#define DS_65VT0010Z                5576    //??????????????
#define DS_65VT0050Z                5577    //????﹞?????????
#define DS_65VS0XXXS                5878    //opensips﹞????‾?豕㊣?
#define DS_65VS0XXXM                5879    //?????芍?谷?芍?????“?豕㊣?


#define DS_CS_SERVER                800     //?谷????﹞????‾
#define DS_68GAP_MCU                831     //????????
#define DS_K260X                    850     //?????‾?迆
#define DS_K1TXXX                   851     //?????????迆
#define DS_K280X                    852     //???????????‾?迆
#define DS_K1T80X                   854     //???????????????迆
#define RAC_6X00                    856     //???邦?????????????迆
#define DS_K2602_AX                 857     //???㊣?“???‾?迆
#define DS_K1T803F                  858     //???????????????迆?﹞
#define DS_K2700                    859     //﹞??????????????????‾?迆
#define DS_K270X                    860     //﹞??????????????????????‾
#define DS_K1T500S                  861     //?????????????迆
#define DS_K1A801F                  862     //???????????????迆?﹞
#define DS_K1T600X                  863     //??????㊣??????????迆
#define DS_K22X                     864     //?????‾?????‾
#define DS_K2M0016AX                865     //????﹞??????‾
#define DS_K2602S_AX                867     //???㊣?“???迆?﹞
#define DS_K560XX                   870     //????/?“???????赤﹞???㊣?????
#define DS_K260X_E                  873     //?????????‾?迆
#define DS_K5603X                   874     //?“??/㊣??????????????∟?豕㊣?
#define DS_K3M200X                  875     //?“???????‾
#define DS_K3M100X                  879     //?“???????‾
#define DS_K1T8101XT                881     //???迆????????㊣??????????迆
#define DS_K1T8101XX                882     //???迆????????㊣??????????迆
#define DS_K5604                    883     //5604???∟?豕㊣?
#define DS_K1T607XXXX               884     //?????????????????迆DS_K1T607?“M/MF/E/EF/MG/MFG?MW/MFW/TM/TMF/TE/TEF/TMG/TMFG/TMW/TMFW??
#define DS_K1A850X                  885     //???????迆?????????迆
#define DS_K1T800X                  886     //???????迆?????????????迆
#define DS_K1T610XXXX               887     //?????????????????迆DS_K1T610?“M/MF/E/EF/MG/MFG?MW/MFW/TM/TMF/TE/TEF/TMG/TMFG/TMW/TMFW??
#define DS_K1T8115X                 888     //DS-K1T8115??DS-K1T8115M??DS-K1T8115M-Z ???迆????????㊣??????迆
#define DS_K1T815LC_M               889     //???迆????????㊣??????迆
#define DS_K1T606M_Z                890     //???迆????????㊣??????迆

#define DS_6800M                    900     //68M?????‾
#define DS_68NTH                    901     //????﹞????‾?迆
#define DS_D60S                     902     //????﹞???﹞????‾
#define DS_D10                      931     //㊣????????豕㊣?
#define DS_3K0X_NM                  951     //??????﹞??‾
#define DS_3E2328                   952     //∼??℅?????迆
#define DS_3E1528                   953     //?∫?℅?????迆
#define SCREEN_LINK_SERVER          971     //????﹞????‾
#define DS_D51OPSXX                 972     //OPS??????
//?????????“
#define IP_PTSYS_MEGA200            1001   //IP 200?辰?????????“
#define IPCAM_FISHEYE               1002   //?????????迆
#define IPCAM_FISHEYE_E             1003   //???????????????迆

//68xx????????3D?角?迆
#define IPCAM_BINOCULAR             1004   //?????????迆

#define IPCAM_365                    1010    //?∫??365?????“??IPC CAM
#define IPCAM_R0                    1011    //?∫??A5S?????“??IPC CAM
#define IPCAM_R1                    1012    //?∫??385?????“??IPC CAM
#define IPCAM_R2                    1013    //?∫??R2?????“??IPC CAM
#define IPCAM_R3                    1014    //?∫??8127?????“??IPC CAM
#define IPCAM_R4                    1015    //?∫??S2?????“??IPC CAM

#define IPDOME_365                    1110    //?∫??365?????“??IPD CAM
#define IPDOME_R0                    1111    //?∫??A5S?????“??IPD CAM
#define IPDOME_R1                    1112    //?∫??385?????“??IPD CAM
#define IPDOME_R2                    1113    //?∫??R2?????“??IPD CAM
#define IPDOME_R3                    1114    //?∫??8127?????“??IPD CAM
#define IPDOME_R4                    1115    //?∫??S2?????“??IPD CAM
#define ITCCAM_R3                    1211    //?∫??8127?????“??ITCCAM

//?????迆?????豕㊣??“1300~1350??
#define UAV_S                       1300    //?????迆?迄???豕㊣? ?“Ummanned Aerial Vehicle “C Station??

//?????豕㊣??角?? 2013-11-19
#define TRAFFIC_ECT                    1400  //ECT?豕㊣??角??
#define TRAFFIC_PARKING_SERVER        1401  //??????﹞????‾
#define TRAFFIC_TME                    1402  //???????????迆
// DVR
#define DS90XXHW_ST                    2001    // DS90XXHW_ST?足??DVR
#define DS72XXHX_SH                 2002    // DS-72xxHV_SH, DS-72xxHF-SH 
#define DS_92XX_HF_ST                2003    // DS-92XX-HF-ST 
#define DS_91XX_HF_XT                2004    // 9100DVR_HF_XT
#define DS_90XX_HF_XT               2005    // 9000DVR_HF_XT 
#define DS_73XXHX_SH                2006    // 7300DVR_HX_SH  
#define DS_72XXHFH_ST                2007    // 7200DVR_HFH_ST
//DS_67????

#define DS_67XXHF_SATA              2008 // DS-67XXHF-SATA
#define DS_67XXHW                   2009 // DS-67XXHW 
#define DS_67XXHW_SATA              2010 // DS-67XXHW-SATA
#define DS_67XXHF                   2011 // DS-67XXHF

//Netra2.3
#define DS_72XXHF_SV                2012  // DS-72xxHF-SV 
#define DS_72XXHW_SV                2013   // DS-72xxHW-SV

#define DS_81XXHX_SH                2014   // 8100DVR_HX_SH

#define DS_71XXHX_SL                2015    //????DVR

#define DS_76XXH_ST                    2016    //DS_76XXH_ST


#define DS_73XXHFH_ST               2017   //73HFH????
#define DS_81XXHFH_ST               2018   //81HFH???? ST

#define DS_72XXHFH_SL                2019    //hi3521 
#define DS_FDXXCGA_FLT                2020    //2????ATM

#define IDS_91XX_HF_ST_A            2100    //iDS-9100HF-ST/A
#define IDS_91XX_HF_ST_B            2101    //iDS-9100HF-ST/B
#define IDS_90XX_HF_ST_A            2102    //iDS-9000HF-ST/A
#define IDS_90XX_HF_ST_B            2103    //iDS-9000HF-ST/B
#define IDS_81XX_HF_ST_A            2104    //iDS-8100HF-ST/A
#define IDS_81XX_HF_ST_B            2105    //iDS-8100HF-ST/B
#define IDS_80XX_HF_ST_A            2106    //iDS-8000HF-ST/A
#define IDS_80XX_HF_ST_B            2107    //iDS-8000HF-ST/B
#define IDS_8104_AHFL_ST            2108    //?????足??ATM?迆
#define IDS_2CD6812F_C              2109    //???㊣?????角?迆


// NVR
#define DS_77XXN_ST                    2201    //  NVR DS-77XXHF-ST
#define DS_95XX_N_ST                2202    //  95XXN_ST NVR          
#define DS_85XX_N_ST                2203    //  85XXN_ST NVR
#define DS_96XX_N_XT                2204    // 9600NVR_N_XT
#define DS_76XX_N_SE                2205    // 7600NVR_N_SE

//?????車???迆
#define DS_86XXSN_SX                2206    // 8608NVR_SX??∼邦?“4???角??DS-8608SNL-SP??DS-8608SNL-ST??DS-8608SN-SP??DS-8608SN-ST??L㊣赤????LCD??P㊣赤POE

//#define DS_96XX_N_RX                2207  //DS-96XX-N-RX
#define DS_71XXN_SL                    2208  //DS-71XXN-SL ?????迆?﹞
#define CS_N1_1XX                    2209  //CS_N1_1XX?????????????迄??

#define DS_71XXN_SN                    2210    //71XX_N_SN  ???????????迆?﹞ 
#define CS_N1_2XX                    2211    //N1_2XX        ???????????迄??
#define DS_76XX_N_SHT                2212    //76XX_N_SHT  ?車???迄???迆?﹞
#define DS_96XXX_N_E                2213    //????????NVR(256) 

#define    DS_76XXN_EX                    2214 /* 76 78????NVR??℅???∼邦?“ 4 8 16?﹞??E1???????? 8 16 32?﹞ E2???????? /N /P?豕㊣?*/
#define DS_77XXN_E4                    2215/* 77????NVR??   ℅???∼邦?“8 16 32?﹞?? /N /P?豕㊣?*/
#define DS_86XXN_E8                    2216/* 86????NVR??   ℅???∼邦?“8 16 32?﹞?? /N /P?豕㊣?*/
#define DS_9616N_H8                 2217   //DS_9616N_H8
#define DS_72XXHX_EX_GXY            2218   //㊣赤??72????????DVR?迆?﹞??????72?車????xx㊣赤???“??????H?車??X???∼????HW,?????車??????㊣?????E?車????X㊣赤??????????????G XY㊣赤???????????角??
#define DS_76XXN_EX_GXY             2219   //㊣赤????76????????NVR?迆?﹞??????76?車????xx㊣赤???“??????E?車????X㊣赤??????????????G XY㊣赤???????????角??
#define DS_72XXHXH_SH_21            2220   //  72XXHXH_SH_21
#define DS_72XXHXH_SH_31            2221  //  72XXHXH_SH_31
#define DS_73XXHXH_SH_31            2222  // 73XXHXH_SH_31
#define DS_81XXHXH_SH_31            2223  //  81XXHXH_SH_31
#define DS_71XXHXH_SH_21            2224  // 71XXHXH_SH_21
#define DS_71XXHXH_SH_31            2225  // 71XXHXH_SH_31
#define DS_NBXX_N_E1_X              2226  //㊣??????‾?迆
#define DS_96XXN_FX                 2230
#define DS_86XXN_FX                 2231
#define DS_96XXXN_HX                2232  //96???????????豕㊣?


#define DS_86XXN_I                    2233    //DS_86XXN_I
#define DS_77XX_N_I                    2234    //DS_77XX_N_I
#define DS_76XX_N_I                    2235    //DS_76XX_N_I
#define DS_78XX_N_I                    2236    //DS_78XX_N_I
#define DS_96XXXN_IX                2237    //DS-96XXX_N_I?“DS-96128N-I16??DS-96128N-I24??DS-96256N-I16??DS-96256N-I24??

#define DS_90XXHXH_XT               2238    //DS_90XXHXH_XT?“DS-9016HQH-XT??

//PCNVR
#define PCNVR_IVMS_4200             2301    // PCNVR_IVMS_4200


//????﹞?????
#define IVMS_6200_TP                2401   //IVMS-6200 ???“????﹞?????
#define IVMS_6200_TF                2402   //IVMS-6200 ???“???∟﹞?????
#define IVMS_6200_D                 2403   //iVMS-6200(/D)
#define IDS_81XXAHW_ST              2405   //iDS-81xxAHW-ST
#define IDS_81XXAHW_SP              2406   //iDS-81xxAHW-SP
#define IDS_81XXAHWL_ST             2407   //iDS-81xxAHWL-ST 
#define IDS_81XXAHWL_SP             2408   //iDS-81xxAHWL-SP
#define IDS_9616N_H8                2409   //iDS_9616N_H8
#define IVMS_6200_SMD               2500   //IVMS_6200_SMD
//HISI3531???“?足??ATM DVR?? ????L㊣赤???????∫????P㊣赤????poe
#define DS_81XXAHW_ST                2501
#define DS_81XXAHW_SP                2502
#define DS_81XXAHWL_ST                2503
#define DS_81XXAHWL_SP                2504

//TVI ATM
#define DS_81XXAHGH_E4                2601    //DS_81XXAHGH_E4

/************************************************************************/
/* ???????????迆?﹞?豕㊣??角??start?“??∼邦???????豕㊣??角????                    */
/************************************************************************/

/** B20?????“4001-4900?? */

#define DS_6904UD_AIOE_H_CLASS      4002    //B20?????迆
#define DS_6402HFH_B21B_CLASS       4005    //B21 ㊣角??
#define DS_6902UD_B21H_CLASS        4006    //B21 HDMI????
#define DS_6902UD_B21D_CLASS        4007    //B21 DVI????
#define DS_6902UD_B21V_CLASS        4008    //B21 VGA????
#define DS_6904UD_B20D_CLASS        4010    //B20 DVI????
#define DS_6904UD_B20V_CLASS        4011    //B20 VGA????

//B21?????迆?豕㊣?????
#define DS_AIOH_MCU_NP              4042    //?‾??∼?
#define DS_6404HFH_AIOH_D           4043    //4?﹞DVI????∼?
#define DS_6908UD_AIOH_D            4044    //4?﹞DVI????∼?
#define DS_6908UD_AIOH_H            4045    //4?﹞HDMI????∼?

//?????????迆?豕㊣?????
#define DS_69XXUD_B                 4046    //?????????迆
#define DS_6404HFH_I                4047    //4?﹞DVI????∼?
#define DS_6904UD_O                 4048    //8?﹞HDMI????∼?

//????????﹞??“Y10??????
#define DS_Y10_MCU                  5771    //?‾??∼?
#define DS_Y10_SW1                  5772    //????∼?
#define DS_6516UD_Y10D              5773    //8?﹞DVI????????????∼?
#define DS_6532UD_Y10D              5774    //16?﹞DVI????????????∼?
#define DS_6E2724_Y10               5775    //24???辰?℅????㊣角??????∼?
#define DS_68SAA_AA_Y10             5776    //???﹞2620??????32G????∼?
#define DS_68SBA_AA_Y10             5777    //???﹞2630??????32G????∼?
#define DS_68SCA_AA_Y10             5778    //???﹞2650??????32G????∼?
#define DS_68GPU_A1_Y10             5779    //P4???“∼?
#define DS_CPU_SERVER               5780    //CPU﹞???∼?
#define DS_GPU_SERVER               5781    //GPU﹞???∼?
#define DS_BIGDATA_SERVER           5782    //?車????﹞???∼?


//∼??角?????迆????
#define DS_B80_MCU                 5821//?‾??∼?
#define DS_B80_SW                  5822//????∼?
#define DS_B80_SR_01               5823//﹞???∼?
#define DS_B80_AI04                5824//????﹞???∼????∫??4?﹞﹞???????
#define DS_B80_ST                  5825//????∼????∫??4??2.5??2T????

//?????角
#define DS_3LGCX                   5841//?“??????????
#define DS_3LGRX                   5842//LoRa????
#define DS_3LGT4                   5843    //?????????豕㊣?
#define DS_3LGT40_N 			   5844    //NB-IoT????????

//?????迆
#define DS_3E11XX     5681    //∼??℅?????迆
#define DS_3E13XX     5682    //?∫?℅?????????迆
#define DS_3E15XX     5683    //?∫?℅?????迆
#define DS_3E11XXP     5684    //∼??℅POE?????迆
#define DS_3E13XXP     5685    //?∫?℅????POE?????迆
#define DS_3E15XXP     5686    //?∫?℅POE?????迆


//??????﹞??‾
#define DS_3D01R_NM     5691    //??﹞??‾?????“
#define DS_3D01T_NM     5692    //??﹞??‾﹞????迆
#define DS_3K02_RNM     5693    //??﹞??‾?????“


/************************************************************************/
/* ???????????迆?﹞?豕㊣??角??end?“??∼邦???????豕㊣??角????                      */
/************************************************************************/

#define IDS_90XX_HXH_XX_S            6001    //????????DVR?迆?﹞
#define IDS_90XX_HXH_XX_FA           6002    //????????DVR?迆?﹞

#define DS_81XX_SHXL_K4               6101    //KY2017???“?車???迆DS-8104SHFH?“L??-K4/4P

#define DS_8116THFHL_F4               6201    //㊣那℅????車?‾?迆DS-8116THFHL-F4

#define DS_81XXAHQ_E4                 6301    //DS_81XXAHQ_E4(TVI ATM)
#define IDS_81XXAHQ_E4                6302    //IDS_81XXAHQ_E4(????TVI ATM)

#define IDS_86XX_NX_A               7501    //????????ATM NVR(iDS-8632NX-I8/A)
#define IDS_96XX_NX_S               7502    //????????????NVR
#define IDS_96XX_NX_V               7503    //??????????NVR
#define IDS_96XX_NX_FA              7504    //????????????NVR iDS-9632NX-I8/FA
#define IDS_86XX_NX_IX_B            7505    //86????∼????㊣?足??NVR?迆?﹞
#define IDS_67XX_NX_S_X             7506    //????????????∼??足?迆?﹞NVR(IDS_67XX_NX/S_X)

#define IDS_ECDXX_HE                8001//?∫?迆?????角?迆
#define IDS_ECDXX_HT                8002//?????????角?迆

#define IDS_ECDXX_E                 8101//4K∼??辰

#define IDS_EPTXX_HF                8201//???迆????℅????迆


#define DS_2CD69XXX_I               8351    //3200W???∼????IPC????
#define DS_TRIXX                    8471    //?????????“?????“?‾DS_TRI900

#define DS_IEXX_E_J                 11501    //?角?迄????﹞????‾

#define IDS_67XX_NX_A               12501    //67????NVS?迆?﹞(iDS-6704NX/A)
#define IDS_67XX_NX_L               12502    //67????????NVS?迆?﹞
#define IDS_ENIXX_XHE               12503    //????NVS????℅“???迆?﹞
#define IDS_67XX_NX_V               12504    //??????????NVS
#define IDS_67XX_NX_B               12505    //67????∼????㊣?足??NVS?迆?﹞

//?????????角?豕㊣?
#define DS_IE63XX_E_FA              13001 //???℅???迆
#define DS_DS_GPKIA                 13002 //????﹞????‾
#define DS_DS_PURE                  13003 //???℅??﹞???
#define DS_DS_FS                    13004 //????????????﹞????‾
#define DS_DS_FD                    13005 //℅????足??﹞????‾
#define DS_DS_BLADE                 13006 //??﹞?
#define DS_DS_HMCP                  13007 //??????㊣?﹞????‾

//???????豕㊣?
#define DS_LNX_RF                   13501 //????????℅?

//?℅???豕㊣?    13551-14000?“500??
#define DS_PA_RADAR                 13551 //PA?℅??
#define DS_PERIMETER_RADAR          13552 //?????℅??

//??﹞??豕㊣?    14001-14500?“500??
#define DS_N1104X                   14001 //??﹞?????
#define DS_N1103X                   14002 //???∫?????????豕㊣?
#define NP_FSC201                   14003 //?????豕㊣?
#define NP_FDC240                   14004 //℅谷?????????????????‾
#define DS_N1107                    14005 //??????????
/**********************?豕㊣??角?? end***********************/
/**********************?豕㊣??車?角 begin**********************/

/* dvr?角?? 1-50 */
#define DEV_CLASS_DVR      1          //???“dvr?角??
#define DEV_CLASS_INTERROGATION  2    //?車???迆
#define DEV_CLASS_SIMPLE_TRAIL  3    //?辰?℅???車?‾?迆
#define DEV_CLASS_TRAIL  4           //㊣那℅????車?‾?迆
#define DEV_CLASS_RECORD_PLAY  5     //?????‾?迆
#define DEV_CLASS_ATM 6           //ATM?迆

/* dvs?角?? 51-100 */
#define DEV_CLASS_DVS 51          //???“dvs

/* nvr?角?? 101-150 */
#define DEV_CLASS_NVR 101          //???“nvr

/* ipc?角?? 151-200 */
#define DEV_CLASS_GUN 151          //ipc???迆
#define DEV_CLASS_BALL 152          //ipc?辰?迆
#define DEV_CLASS_SNAP 153          //℅????迆
#define DEV_CLASS_INTELLI_TILT 154   //???????“
#define DEV_CLASS_FISH_EYE 155          //????
#define DEV_CLASS_2DP_Z 156         //?車????
#define DEV_CLASS_2DP 157   //??????
#define DEV_CLASS_PT 158   //???∼?????角?迆
#define DEV_CLASS_TRI 159   //?????????“?????“?‾

/* CVR?角?? 201 - 250*/
#define DEV_CLASS_CVR 201          //CVR

/* ?????角?? 251 - 300*/
#define DEV_CLASS_B20 251          //????B20????
#define DEV_CLASS_B10 252          //????B10????
#define DEV_CLASS_DECODER 253      //?????‾
#define DEV_CLASS_MATRIXMANAGEDEVICE 254      //???車????????
#define DEV_CLASS_OTICAL 255      //?????迆
#define DEV_CLASS_CODESPITTER 256      //??﹞??‾
#define DEV_CLASS_ALARMHOST 257      //????㊣“???‾?迆
#define DEV_CLASS_MOVING_RING 258      //???﹞?豕㊣?
#define DEV_CLASS_CVCS 259      //???????角???????‾
#define DEV_CLASS_DVCS 260      //﹞??????角???????‾
#define DEV_CLASS_TRANSCODER 261      //℅????‾
#define DEV_CLASS_LCD_SCREEN 262      //LCD????
#define DEV_CLASS_LED_SCREEN 263      //LED????
#define DEV_CLASS_MATRIX 264      //???車
#define DEV_CLASS_CONFERENCE_SYSTEM 265      //?????芍?谷?豕㊣?
#define DEV_CLASS_INFORMATION_RELEASE_EQUIPMENT  266      //????﹞????豕㊣?
#define DEV_CLASS_NET_GAP 267      //????
#define DEV_CLASS_MERGE 268      //?????‾
#define DEV_CLASS_REAR_PROJECTION 269      //㊣????????豕㊣?
#define DEV_CLASS_SWITCH 270      //?????迆
#define DEV_CLASS_FIBER_CONVERTER 271      //??????﹞??‾
#define DEV_CLASS_SCREEN_SERVER 272      //????﹞????‾
#define DEV_CLASS_SCE_SERVER 273      //℅???﹞????‾
#define DEV_CLASS_WIRELESS_TRANS  274    //?????????豕㊣?
#define DEV_CLASS_Y10_SERIES      275    //Y10????
#define DEV_CLASS_SAFETY_MAVHINE  276    //∼??角?????迆
#define DEV_CLASS_IOTGATEWAY 277    //?????????角
/* ㊣“???‾?迆?角?? 301 - 350*/
#define DEV_CLASS_VIDEO_ALARM_HOST 301          //????㊣“???‾?迆
#define DEV_CLASS_NET_ALARM_HOST 302          //????㊣“???‾?迆
#define DEV_CLASS_ONE_KEY_ALARM 303      //???邦??㊣“???迆?﹞
#define DEV_CLASS_WIRELESS_ALARM_HOST 304      //????㊣“???‾?迆
#define DEV_CLASS_ALARM_MODULE 305      //㊣“?????谷
#define DEV_CLASS_HOME_ALARM_HOST 306      //????㊣“???‾?迆
#define DEV_CLASS_HYBRID_ALARM_HOST 307      //?足??㊣“???‾?迆

/* ?????角?? 351 - 400*/
#define DEV_CLASS_ACCESS_CONTROL 351          //?????迆?﹞

/* ???????? 401 - 450*/
#define DEV_CLASS_VIDEO_INTERCOM 401          //????????

/* ?????迆 451 - 500*/
#define DEV_CLASS_UMMANNED_AERIAL_VEHICLE 451          //?????迆?迆?﹞

/* ?????迆?﹞: 501-550*/
#define DEV_CLASS_MOBILE 501          //?????迆?﹞

/* ?????????豕㊣?: 551-600*/
#define DEV_CLASS_MOBILE_VEHICLE 551          //?????????豕㊣?

//????﹞???????601-650
#define DEV_CLASS_INTELLIGENT_ANALYZER 601  //????﹞?????

//???????“﹞????‾??651-700
#define DEV_CLASS_INTELLIGENT_TRAFFIC_SERVER 651  //???????“﹞????‾
#define DS_TP2200_EC                         652  //???????迆???角????

/* nvs?角?? 701-750 */
#define DEV_CLASS_NVS 701          //???“nvs

/*????RFID???? 751-800*/
#define DS_TRI21A_1_P 751   //????RFID?????‾

/* ?????????豕㊣?801-850 */
#define DS_CLASS_FA              801 //???℅???迆
#define DS_CLASS_PURE            802 //???℅??﹞???
#define DS_CLASS_FS              803 //????????????﹞????‾
#define DS_CLASS_FD              804 //℅????足??﹞????‾
#define DS_CLASS_HAWK            805 //????﹞????‾
#define DS_CLASS_BLADE           806 //??﹞?
#define DS_CLASS_HMCP            807 //??????㊣?﹞????‾

/* ???????角?? 851 - 900*/
#define DEV_CLASS_SMART_LOCK     851  //????????℅?

/* ?℅???角?? 901 - 950*/
#define DEV_CLASS_RADAR          901  //?℅???迆?﹞

/*???∼?????角?迆?? 8451-8470*/
#define iDS_PT              8451  //???∼?????角?迆

/* ?????豕㊣??角?? 65534 */
#define DEV_CLASS_DEFAULT 65534   //?????豕㊣??角??
/**********************?豕㊣??車?角 end**********************/

/******************************??????????*********************************/
//?????????邦??
#define DEVICE_SOFTHARDWARE_ABILITY         0x001  //?豕㊣??赤????????
#define DEVICE_NETWORK_ABILITY              0x002  //?豕㊣?????????
#define DEVICE_ENCODE_ALL_ABILITY           0x003  //?豕㊣??迄??㊣角??????
#define    DEVICE_ENCODE_CURRENT               0x004  //?豕㊣??㊣?∼㊣角??????
#define IPC_FRONT_PARAMETER                    0x005     //ipc?∼??????1.0
#define IPC_UPGRADE_DESCRIPTION                0x006     //ipc????????
#define DEVICE_RAID_ABILITY                 0x007  //RAID????
#define DEVICE_ENCODE_ALL_ABILITY_V20       0x008     //?豕㊣??迄??㊣角??????2.0
#define IPC_FRONT_PARAMETER_V20                0x009     //ipc?∼??????2.0
#define DEVICE_ALARM_ABILITY                0x00a  //?“?迆㊣“??????
#define DEVICE_DYNCHAN_ABILITY                0x00b  //?豕㊣???℅??“??????
#define DEVICE_USER_ABILITY                 0x00c  //?豕㊣????∫???赤????????
#define DEVICE_NETAPP_ABILITY               0x00d  //?豕㊣?????????????????
#define DEVICE_VIDEOPIC_ABILITY             0x00e  //?豕㊣?????????????
#define DEVICE_JPEG_CAP_ABILITY             0x00f  //?豕㊣?JPEG℅???????
#define DEVICE_SERIAL_ABILITY               0x010  //RS232??RS485????????
#define DEVICE_ABILITY_INFO                    0x011     //?豕㊣??“???????角?????????????迄??﹞?????????????????﹞?
#define STREAM_ABILITY                      0x012  //?‾????
#define SYSTEM_MANAGEMENT_ABILITY           0x013  //?豕㊣????????赤????
#define IP_VIEW_DEV_ABILITY                    0x014  //IP????????﹞??迆????
#define VCA_DEV_ABILITY                     0x100  //?豕㊣?????﹞?????℅?????
#define VCA_CHAN_ABILITY                    0x110  //????﹞???????
#define TRANSFER_ABILITY                    0x120  
#define MATRIXDECODER_ABILITY               0x200  //?角?﹞?????‾??????????????
#define VIDEOPLATFORM_ABILITY               0x210 //????℅??????“??????
#define VIDEOPLATFORM_SBUCODESYSTEM_ABILITY 0x211 //????℅??????“㊣角??℅???????????
#define WALL_ABILITY                        0x212  //????????????
#define MATRIX_ABILITY                      0x213  //SDI???車???? 
#define DECODECARD_ABILITY                  0x220 //?????“﹞????‾??????
#define VIDEOPLATFORM_ABILITY_V40           0x230 //????℅??????“??????
#define MATRIXMANAGEDEVICE_ABILITY          0x240 //???車??????????????
#define MATRIXDECODER_ABILITY_V41           0x260 //?????‾??????
#define DECODER_ABILITY                     0x261 //?????‾xml??????
#define DECODECARD_ABILITY_V41              0x270 //?????“﹞????‾??????V41
#define CODECARD_ABILITY                    0x271  //㊣角???“??????
#define SNAPCAMERA_ABILITY                  0x300  //℅????迆??????
#define ITC_TRIGGER_MODE_ABILITY            0x301  //????IPC?豕㊣?????﹞?????????
#define COMPRESSIONCFG_ABILITY              0x400  //????????????????????
#define COMPRESSION_LIMIT                   0x401  //?????‾℅????‾????????????????
#define PIC_CAPTURE_ABILITY                    0x402  //??????﹞?㊣???????????
#define ALARMHOST_ABILITY                   0x500 //????㊣“???‾?迆?????? 
#define IT_DEVICE_ABILITY                   0x501  //???????“??????
#define    SCREENCONTROL_ABILITY                0x600     //?車???????‾??????
#define    SCREENSERVER_ABILITY                0x610     //?車??﹞????‾??????
#define FISHEYE_ABILITY                     0x700   //??????????
#define LCD_SCREEN_ABILITY                    0x800    //LCD???????? 2013-10-12
#define ACS_ABILITY                         0x801   //????????
#define MERGEDEV_ABILITY                    0x802   //?????‾??????
#define CAM_FUSION_ABILITY                  0x803   //?角?迆????????
#define OPTICAL_DEV_ACCESS_ABILITY          0x805   //?????迆????????
#define NET_RING_ABILITY                    0x806    //?﹞????????
#define LED_ABILITY                            0x807    //LED????????
#define PUBLISHDEV_ABILITY                    0x80a    //????﹞???????
#define SCREEN_EXCHANGE_ABILITY             0x80b   //????????????
#define REMOTE_NETMGR_FOT_ABILITY   0x80e   //??????????﹞??‾????
/*************************************************
?????????芍????????(????_V30??9000????)
**************************************************/

//℅?∼??足??????
//?‾?角??
#define EXCEPTION_MAJOR_MAINBOARD_BOOT                    0x1  //?‾∼??????角??
//???角??
#define EXCEPTION_MINOR_PCIE_SCAN                        0x1  // pcie???﹞?“?豕?足??  
#define EXCEPTION_MINOR_DOWNLOAD_SUBBOARD                 0xa  //????℅?∼??那???足??

//?‾?角??
#define EXCEPTION_MAJOR_SUBBOARD_BOOT                    0x2  //℅?∼??????角??
//???角??
#define EXCEPTION_MINOR_INEXISTENCE                       0x1  //PCI-E?“?????辰?㊣?∼℅?∼???????
#define EXCEPTION_MINOR_UBOOT_DOWNLOAD                  0xa  // uboot?????足??
#define EXCEPTION_MINOR_UBOOT_INIT                      0xe  //uboot???????足??
#define EXCEPTION_MINOR_ROOTFS_DOWNLOAD                 0x14  //rootfs.img?????足??
#define EXCEPTION_MINOR_UIMAGE_DOWNLOAD                 0x19  //uImage?????足??
#define EXCEPTION_MINOR_UBOOT_SETBOOTFLAG               0x1e  // uboot????㊣那?????????足??    
#define EXCEPTION_MINOR_ROOTFS_BOOT_SUBBOARD            0x23  // rootfs?????足??
#define EXCEPTION_MINOR_NEED_FILE_FINISH                0x28  //℅?∼??迄?豕?????????足??

//?‾?角??
#define EXCEPTION_MAJOR_SUBBOARD_HARDWARE                0x3  //℅?∼??????角??
//???角??
#define EXCEPTION_MINOR_AD                               0x1  //AD?足??  
#define EXCEPTION_MINOR_DA                                 0xa  // DA?足??
#define EXCEPTION_MINOR_TIMER                            0xb     //?㊣???足??

//?‾?角??
#define EXCEPTION_MAJOR_FPGA                            0x4  //FPGA?角??
//???角??
#define EXCEPTION_MINOR_IDLE                              0x1  //??﹞“IDLE  
#define EXCEPTION_MINOR_LANE                             0xa  // LANE OK?∫∼?
#define EXCEPTION_MINOR_REGISTER_ALL_F                     0xe  //FPGA?????‾??F
#define EXCEPTION_MINOR_MEMORY_INIT_FAIL                 0x14 //FPGA???????????∫∼?
//?‾?角??
#define EXCEPTION_MAJOR_DSP                                0x5  //DSP?角??

//?‾?角??
#define EXCEPTION_MAJOR_ARM                                0x6  //ARM?角??

//?‾?角??
#define EXCEPTION_MAJOR_BACKBOARD                        0x7  //㊣?∼??角??
//???角??
#define EXCEPTION_MINOR_BLACKBOARD_TYPE                   0x1  //????㊣?∼??角???足??
#define EXCEPTION_MINOR_SERDES                           0xa  //????????????  
#define EXCEPTION_MINOR_CLOCK                             0xe  //?㊣??????
#define EXCEPTION_MINOR_SYNCH                             0x14  //????????????

//?‾?角??
#define EXCEPTION_MAJOR_SUBBOARD_NET                    0x8  //℅?∼?????
//???角??
#define EXCEPTION_MINOR_IP_CONFLICT                       0x1  //IP???? 
#define EXCEPTION_MINOR_DISCONNECT                         0x14  // ????

//[add]by zengxiaole 2017-09-27 DS-19D2000-S v2.0
#define MAX_FIRE_ALARM_ZONE         12           //℅??車??﹞??‾?迆㊣“??﹞???????
#define MAX_FIRE_ALARM_POINT_ZONE   32           //℅??車??﹞??‾?迆㊣“??????????


typedef enum tagCharEncodeType
{
	ENUM_MEM_CHAR_ENCODE_ERR = -1,         //Error   
	ENUM_MEM_CHAR_ENCODE_NO = 0,          //Don't know.
	ENUM_MEM_CHAR_ENCODE_CN = 1,          //EUC-CN, GB2312
	ENUM_MEM_CHAR_ENCODE_GBK = 2,          //GBK
	ENUM_MEM_CHAR_ENCODE_BIG5 = 3,          //BIG5
	ENUM_MEM_CHAR_ENCODE_JP = 4,          //JISX0208-1, EUC-JP
	ENUM_MEM_CHAR_ENCODE_KR = 5,          //EUC-KR
	ENUM_MEM_CHAR_ENCODE_UTF8 = 6,          //UTF-8
	ENUM_MEM_CHAR_ENCODE_ISO8859_1 = 7,    //ISO-8859-n: ENUM_MEM_CHAR_ENCODE_ISO8859_1 + n -1
	ENUM_MEM_CHAR_ENCODE_UNICODE = 8,       //Unicode
}CHAR_ENCODE_TYPE;


/////////////////////////////////////////////////////////////////////////
//???㊣?芍??????
typedef struct
{
	DWORD dwYear;        //?那
	DWORD dwMonth;        //??
	DWORD dwDay;        //??
	DWORD dwHour;        //?㊣
	DWORD dwMinute;        //﹞?
	DWORD dwSecond;        //??
}NET_DVR_TIME, *LPNET_DVR_TIME;

typedef struct tagNET_DVR_TIME_V30
{
	WORD wYear;
	BYTE byMonth;
	BYTE byDay;
	BYTE byHour;
	BYTE byMinute;
	BYTE bySecond;
	BYTE    byISO8601;      /*??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ */
	WORD	wMilliSec;       //??????????????????????0
	char    cTimeDifferenceH;  		//??UTC???㊣???“???㊣????-12 ... +14??+㊣赤??????, byISO8601??1?㊣???∫
	char    cTimeDifferenceM;         	//??UTC???㊣???“﹞???????-30, 30, 45??+㊣赤????????byISO8601??1?㊣???∫
}NET_DVR_TIME_V30, *LPNET_DVR_TIME_V30;

typedef struct tagNET_DVR_TIME_SEARCH
{
	WORD     wYear;        //?那???豕㊣?OSD?㊣??
	BYTE    byMonth;        //?????豕㊣?OSD?㊣??
	BYTE     byDay;        //?????豕㊣?OSD?㊣??
	BYTE     byHour;        //?㊣???豕㊣?OSD?㊣??
	BYTE     byMinute;    //﹞????豕㊣?OSD?㊣??
	BYTE     bySecond;    //?????豕㊣?OSD?㊣??
	char cTimeDifferenceH;        //???迆??㊣那℅??㊣?????㊣???“???㊣????-12 ... +14
	char cTimeDifferenceM;        //???迆??㊣那℅??㊣?????㊣???“﹞???????-30, 0, 30, 45
	BYTE     byLocalOrUTC;      //0-?㊣?????∫???豕㊣?㊣????㊣???????豕㊣?OSD?㊣??  1-?㊣?????∫
	WORD     wMillisecond;      //??????????????????????0
}NET_DVR_TIME_SEARCH, *LPNET_DVR_TIME_SEARCH;

typedef struct tagNET_DVR_TIME_SEARCH_COND
{
	WORD wYear; //?那 
	BYTE byMonth; //??
	BYTE byDay; //??
	BYTE byHour; //?㊣
	BYTE byMinute; //﹞?
	BYTE bySecond; //??
	BYTE byLocalOrUTC; //0-?㊣?????∫???豕㊣?㊣????㊣???????豕㊣?OSD?㊣??  1-?㊣?????∫
	WORD wMillisecond;       //??????????????????????0
	char cTimeDifferenceH;   //??UTC???㊣???“???㊣????-12 ... +14??+㊣赤????????byLocalOrUTC??1?㊣???∫
	char cTimeDifferenceM;   //??UTC???㊣???“﹞???????-30, 0, 30, 45??+㊣赤????????byLocalOrUTC??1?㊣???∫
}NET_DVR_TIME_SEARCH_COND, *LPNET_DVR_TIME_SEARCH_COND;


typedef struct tagNET_DVR_TIME_V50
{
	WORD 		wYear;		//?那 
	BYTE		byMonth;    //??
	BYTE 		byDay;		//??
	BYTE 		byHour;		//?㊣
	BYTE 		byMinute;	//﹞?
	BYTE 		bySecond;	//??
	BYTE   	    byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	WORD  	    wMillisecond;       //??????????????????????0
	char cTimeDifferenceH;   //??UTC???㊣???“???㊣????-12 ... +14??+㊣赤????????byISO8601??1?㊣???∫
	char cTimeDifferenceM;   //??UTC???㊣???“﹞???????-30, 0, 30, 45??+㊣赤????????byISO8601??1?㊣???∫
}NET_DVR_TIME_V50, *LPNET_DVR_TIME_V50;



typedef struct  tagNET_DVR_CALIBRATE_TIME
{
	DWORD  dwSize;
	NET_DVR_TIME struTime;
	WORD wMilliSec;
	BYTE byRes[14];
}NET_DVR_CALIBRATE_TIME, *LPNET_DVR_CALIBRATE_TIME;

#define    MAX_TIMESIGN_LEN    32 //℅??“?????㊣㊣那???????∟??
typedef  struct tagNET_DVR_TIMESIGN_CFG
{
	DWORD  dwSize;
	BYTE  byCustomSetTimeSign[MAX_TIMESIGN_LEN/*32*/];//℅??“?????㊣㊣那??
	BYTE  byRes[96];
}NET_DVR_TIMESIGN_CFG, *LPNET_DVR_TIMESIGN_CFG;


typedef struct tagNET_DVR_TIME_EX
{
	WORD wYear;
	BYTE byMonth;
	BYTE byDay;
	BYTE byHour;
	BYTE byMinute;
	BYTE bySecond;
	BYTE byRes;
}NET_DVR_TIME_EX, *LPNET_DVR_TIME_EX;

//?㊣????(℅??芍??)
typedef struct
{
	//?????㊣??
	BYTE byStartHour;
	BYTE byStartMin;
	//?芍???㊣??
	BYTE byStopHour;
	BYTE byStopMin;
}NET_DVR_SCHEDTIME, *LPNET_DVR_SCHEDTIME;

/*?豕㊣?㊣“?????足?????赤﹞???*/
/*?豕㊣?㊣“?????足?????赤﹞???*/
#define NOACTION            0x0                /*???足??*/
#define WARNONMONITOR        0x1                /*?角???‾??????*/
#define WARNONAUDIOOUT        0x2                /*?迄??????*/
#define UPTOCENTER            0x4                /*????????*/
#define TRIGGERALARMOUT        0x8                /*??﹞?㊣“??????*/
#define TRIGGERCATPIC        0x10            /*??﹞?℅?????????E-mail*/
#define SEND_PIC_FTP        0x200           /*℅?????????ftp*/

typedef struct tagNET_DVR_STRUCTHEAD
{
	WORD    wLength;        //?芍???∟??
	BYTE    byVersion;    /*????4??﹞?㊣??迆㊣赤????∼?㊣????車???迄??∼?㊣????∟??????????????????∼?㊣????∟??????????*/
	BYTE    byRes;
}NET_DVR_STRUCTHEAD, *LPNET_DVR_STRUCTHEAD;

typedef struct tagNET_DVR_HANDLEEXCEPTION_V41
{
	DWORD   dwHandleType;        //?足?????赤,?足?????赤﹞?????"?辰"?芍??   
								 /*0x00: ???足??*/
								 /*0x01: ?角???‾??????*/
								 /*0x02: ?迄??????*/
								 /*0x04: ????????*/
								 /*0x08: ??﹞?㊣“??????*/
								 /*0x10: ??﹞?JPRG℅?????????Email*/
								 /*0x20: ?????迄??㊣“???‾????*/
								 /*0x40: ??????℅?????(???∼????PCNVR?∫??)*/
								 /*0x200: ℅?????????FTP*/
								 /*0x400: ?谷???足?? ???? ?????????“?芍?????????????????豕㊣?℅????那????IPC5.1.0*/
								 /*0x800: PTZ?????迆℅?(?辰?迆?迆℅???㊣那)*/
								 /*0x4000:∼℅????㊣“??*/
								 /*0x10000:????㊣“??*/
	DWORD   dwMaxRelAlarmOutChanNum; //??﹞???㊣“???????“?????“??????℅??車?∫????
	DWORD   dwRelAlarmOut[MAX_ALARMOUT_V40]; //??﹞?㊣“???“??  
	BYTE    byRes[64];           //㊣???
}NET_DVR_HANDLEEXCEPTION_V41, *LPNET_DVR_HANDLEEXCEPTION_V41;

typedef struct tagNET_DVR_HANDLEEXCEPTION_V40
{
	DWORD   dwHandleType;        //?足?????赤,?足?????赤﹞?????"?辰"?芍??   
								 /*0x00: ???足??*/
								 /*0x01: ?角???‾??????*/
								 /*0x02: ?迄??????*/
								 /*0x04: ????????*/
								 /*0x08: ??﹞?㊣“??????*/
								 /*0x10: ??﹞?JPRG℅?????????Email*/
								 /*0x20: ?????迄??㊣“???‾????*/
								 /*0x40: ??????℅?????(???∼????PCNVR?∫??)*/
								 /*0x80: ㊣“????﹞?????(???∼????PCNVR?∫??) */
								 /*0x100: ㊣“????﹞????“?∟???? (???∼????PCNVR?∫??)*/
								 /*0x200: ℅?????????FTP*/
								 /*0x400: ?谷???足?? ???? ?????????“?芍?????????????????豕㊣?℅????那????IPC5.1.0*/
								 /*0x800: PTZ?????迆℅?(?辰?迆?迆℅???㊣那)*/
								 /*0x1000:℅???????????*/
								 /*0x2000:????㊣“??*/
								 /*0x4000:∼℅????㊣“??*/
								 /*0x8000:????㊣“??*/
	DWORD   dwMaxRelAlarmOutChanNum; //??﹞???㊣“???????“?????“??????℅??車?∫??????
	DWORD   dwRelAlarmOutChanNum; //??﹞???㊣“???????“???? ?????∫????
	DWORD   dwRelAlarmOut[MAX_CHANNUM_V30]; //??﹞?㊣“???“??  
	BYTE    byWhiteLightDurationTime;//∼℅?????????????㊣?∟??1~60s(?㊣??????∼℅????㊣“???㊣?迆?∫)
	BYTE    byBrightness;//∼℅??????????﹞??∫0-100??????50
	BYTE    byAudioType;//?迄??㊣“???角??
	BYTE    byTimes;//?迄??㊣“????????﹞??∫??0-9??????2, 0xff-????
	BYTE    byRes[60];           //㊣???
}NET_DVR_HANDLEEXCEPTION_V40, *LPNET_DVR_HANDLEEXCEPTION_V40;

//㊣“?????足?????赤?芍??(℅??芍??)(?角??????)(9000????)
typedef struct
{
	DWORD    dwHandleType;    /*???赤﹞???,???赤﹞?????"?辰"?芍??*/
							  /*0x00: ???足??*/
							  /*0x01: ?角???‾??????*/
							  /*0x02: ?迄??????*/
							  /*0x04: ????????*/
							  /*0x08: ??﹞?㊣“??????*/
							  /*0x10: ??﹞?JPRG℅?????????Email*/
							  /*0x20: ?????迄??㊣“???‾????*/
							  /*0x40: ??????℅?????(???∼????PCNVR?∫??)*/
							  /*0x200: ℅?????????FTP*/
							  /*0x2000:????㊣“??*/
	BYTE byRelAlarmOut[MAX_ALARMOUT_V30];
	//㊣“????﹞????????“??,㊣“????﹞???????,??1㊣赤????﹞???????
}NET_DVR_HANDLEEXCEPTION_V30, *LPNET_DVR_HANDLEEXCEPTION_V30;

//㊣“?????足?????赤?芍??(℅??芍??)(?角??????)
typedef struct
{
	DWORD    dwHandleType;            /*???赤﹞???,???赤﹞?????"?辰"?芍??*/
									  /*0x00: ???足??*/
									  /*0x01: ?角???‾??????*/
									  /*0x02: ?迄??????*/
									  /*0x04: ????????*/
									  /*0x08: ??﹞?㊣“??????*/
									  /*0x10: Jpeg℅?????????EMail*/
	BYTE byRelAlarmOut[MAX_ALARMOUT];  //㊣“????﹞????????“??,㊣“????﹞???????,??1㊣赤????﹞???????
}NET_DVR_HANDLEEXCEPTION, *LPNET_DVR_HANDLEEXCEPTION;

//DVR?豕㊣?????
typedef struct
{
	DWORD dwSize;
	BYTE sDVRName[NAME_LEN];     //DVR????
	DWORD dwDVRID;                //DVR ID,?????????‾ //V1.4(0-99), V1.5(0-255)
	DWORD dwRecycleRecord;        //??﹞????﹞????,0:????; 1:??
								  //?????????邦??
	BYTE sSerialNumber[SERIALNO_LEN];  //?辰????
	DWORD dwSoftwareVersion;            //?赤??∼?㊣???,??16?????‾∼?㊣?,??16??????∼?㊣?
	DWORD dwSoftwareBuildDate;            //?赤???迆??????,0xYYYYMMDD
	DWORD dwDSPSoftwareVersion;            //DSP?赤??∼?㊣?,??16?????‾∼?㊣?,??16??????∼?㊣?
	DWORD dwDSPSoftwareBuildDate;        // DSP?赤???迆??????,0xYYYYMMDD
	DWORD dwPanelVersion;                // ?∼??∼?∼?㊣?,??16?????‾∼?㊣?,??16??????∼?㊣?
	DWORD dwHardwareVersion;    // ????∼?㊣?,??16?????‾∼?㊣?,??16??????∼?㊣?
	BYTE byAlarmInPortNum;        //DVR㊣“??????????
	BYTE byAlarmOutPortNum;        //DVR㊣“??????????
	BYTE byRS232Num;            //DVR 232????????
	BYTE byRS485Num;            //DVR 485????????
	BYTE byNetworkPortNum;        //??????????
	BYTE byDiskCtrlNum;            //DVR ?????????‾????
	BYTE byDiskNum;                //DVR ????????
	BYTE byDVRType;                //DVR?角??, 1:DVR 2:ATM DVR 3:DVS ......
	BYTE byChanNum;                //DVR ?“??????
	BYTE byStartChan;            //?????“????,????DVS-1,DVR - 1
	BYTE byDecordChans;            //DVR ?????﹞??
	BYTE byVGANum;                //VGA????????
	BYTE byUSBNum;                //USB????????
	BYTE byAuxoutNum;            //?“????????
	BYTE byAudioNum;            //????????????
	BYTE byIPChanNum;            //℅??車??℅??“????
}NET_DVR_DEVICECFG, *LPNET_DVR_DEVICECFG;

/*
IP???﹞
*/
typedef struct
{
	char    sIpV4[16];                        /* IPv4???﹞ */
	BYTE    byIPv6[128];                        /* ㊣??? */
}NET_DVR_IPADDR, *LPNET_DVR_IPADDR;

typedef struct tagNET_DVR_ADDRESS
{
	NET_DVR_IPADDR struIP; //IP???﹞
	WORD wPort;    //??????
	BYTE byRes[2];
}NET_DVR_ADDRESS, *LPNET_DVR_ADDRESS;

/*
?????????芍??(℅??芍??)(9000????)
*/
typedef struct
{
	NET_DVR_IPADDR    struDVRIP;                              //DVR IP???﹞
	NET_DVR_IPADDR    struDVRIPMask;  //DVR IP???﹞????
	DWORD    dwNetInterface;                                   //????????1-10MBase-T 2-10MBase-T?????∟ 3-100MBase-TX 4-100M?????∟ 5-10M/100M℅?????
	WORD    wDVRPort;                                        //??????
	WORD    wMTU;                                            //????MTU?豕????????1500??
	BYTE    byMACAddr[MACADDR_LEN];                            // ???赤???﹞
	BYTE    byEthernetPortNo;                                  //????????0-???∫??1-????0??2-????1?????角????????
	BYTE    byRes[1];              //㊣???
}NET_DVR_ETHERNET_V30, *LPNET_DVR_ETHERNET_V30;

/*
?????????芍??(℅??芍??)
*/
typedef struct
{
	char sDVRIP[16];          //DVR IP???﹞
	char sDVRIPMask[16];      //DVR IP???﹞????
	DWORD dwNetInterface;     //???????? 1-10MBase-T 2-10MBase-T?????∟ 3-100MBase-TX 4-100M?????∟ 5-10M/100M℅?????
	WORD wDVRPort;              //??????
	BYTE byMACAddr[MACADDR_LEN];        //﹞????‾?????赤???﹞
}NET_DVR_ETHERNET;

//pppoe?芍??
typedef struct
{
	DWORD    dwPPPOE;                                        //0-??????,1-????
	BYTE    sPPPoEUser[NAME_LEN];                            //PPPoE???∫??
	char    sPPPoEPassword[PASSWD_LEN];                        // PPPoE????
	NET_DVR_IPADDR    struPPPoEIP;                            //PPPoE IP???﹞
}NET_DVR_PPPOECFG, *LPNET_DVR_PPPOECFG;

//?????????芍??(9000????)
typedef struct
{
	DWORD dwSize;
	NET_DVR_ETHERNET_V30    struEtherNet[MAX_ETHERNET];        //????????
	NET_DVR_IPADDR    struRes1[2];                    /*㊣???*/
	NET_DVR_IPADDR    struAlarmHostIpAddr;                    /* ㊣“???‾?迆IP???﹞ */
	BYTE    byRes2[4];                                /* ㊣??? */
	WORD    wAlarmHostIpPort;                                /* ㊣“???‾?迆?????? */
	BYTE    byUseDhcp;                                      /* ??﹞?????DHCP 0xff-???∫ 0-?????? 1-????*/
	BYTE    byIPv6Mode;                                //IPv6﹞???﹞?????0-?﹞????????1-?????豕????2-????DHCP﹞???
	NET_DVR_IPADDR    struDnsServer1IpAddr;                    /* ?辰??﹞????‾1??IP???﹞ */
	NET_DVR_IPADDR    struDnsServer2IpAddr;                    /* ?辰??﹞????‾2??IP???﹞ */
	BYTE    byIpResolver[MAX_DOMAIN_NAME];                    /* IP????﹞????‾?辰???辰IP???﹞ */
	WORD    wIpResolverPort;                                /* IP????﹞????‾?????? */
	WORD    wHttpPortNo;                                    /* HTTP?????? */
	NET_DVR_IPADDR    struMulticastIpAddr;                    /* ?角??℅谷???﹞ */
	NET_DVR_IPADDR    struGatewayIpAddr;                        /* ???????﹞ */
	NET_DVR_PPPOECFG struPPPoE;
	BYTE    byEnablePrivateMulticastDiscovery;  //?????角?????‾??0~??????1~??????2-????
	BYTE    byEnableOnvifMulticastDiscovery;  //Onvif?角?????‾??0~??????1~??????2-????
	BYTE    byEnableDNS; //DNS℅???????, 0-㊣?????1-?辰????2-??㊣?
	BYTE    byRes[61];
} NET_DVR_NETCFG_V30, *LPNET_DVR_NETCFG_V30;

//?角???“???????“?芍??
typedef struct
{
	NET_DVR_IPADDR struDVRIP;           //DVR IP???﹞
	NET_DVR_IPADDR struDVRIPMask;           //DVR IP???﹞????
	DWORD dwNetInterface;    //????????1-10MBase-T 2-10MBase-T?????∟ 3-100MBase-TX 4-100M?????∟ 5-10M/100M/1000M℅?????
	BYTE byCardType;  //???“?角????0-???“???“??1-???????“??2-???????“
	BYTE    byEnableDNS; //DNS??﹞?℅?????????0-㊣?????1-?辰??, 0-??㊣?
	WORD wMTU;             //????MTU?豕????????1500??
	BYTE byMACAddr[MACADDR_LEN]; //???赤???﹞????????????
	BYTE byEthernetPortNo;        //????????0-???∫??1-????0??2-????1?????角????????
	BYTE byRes2[1];              //㊣???
	BYTE byUseDhcp;                          /* ??﹞?????DHCP */
	BYTE byRes3[3];
	NET_DVR_IPADDR struGatewayIpAddr;     /* ???????﹞ */
	NET_DVR_IPADDR struDnsServer1IpAddr; /* ?辰??﹞????‾1??IP???﹞ */
	NET_DVR_IPADDR struDnsServer2IpAddr; /* ?辰??﹞????‾2??IP???﹞ */
}NET_DVR_ETHERNET_MULTI, *LPNET_DVR_ETHERNET_MULTI;

//?角???“?????????芍??
typedef struct
{
	DWORD  dwSize;
	BYTE   byDefaultRoute;        //?????﹞????0㊣赤??struEtherNet[0]??1㊣赤??struEtherNet[1]
	BYTE   byNetworkCardNum;      //?豕㊣????????????????“????
	BYTE   byWorkMode;   //0-???“?角???“??????1-??????????????
	BYTE   byRes; //㊣???
	NET_DVR_ETHERNET_MULTI struEtherNet[MAX_NETWORK_CARD]; //????????
	NET_DVR_IPADDR         struManageHost1IpAddr;     /* ?‾???赤?‾?迆IP???﹞ */
	NET_DVR_IPADDR         struManageHost2IpAddr;     /* ?“???赤?‾?迆IP???﹞ */
	NET_DVR_IPADDR           struAlarmHostIpAddr; /* ㊣“???‾?迆IP???﹞ */
	WORD wManageHost1Port;     /* ?‾???赤?‾?迆?????? */
	WORD wManageHost2Port;     /* ?“???赤?‾?迆?????? */
	WORD wAlarmHostIpPort;     /* ㊣“???‾?迆?????? */
	BYTE  byIpResolver[MAX_DOMAIN_NAME];     /* IP????﹞????‾?辰???辰IP???﹞ */
	WORD wIpResolverPort; /* IP????﹞????‾?????? */
	WORD wDvrPort; //?“?????? ????8000 
	WORD wHttpPortNo; /* HTTP?????? */
	WORD wDvrPort2; //?“??????2
	BYTE byRes2[4];
	NET_DVR_IPADDR   struMulticastIpAddr; /* ?角??℅谷???﹞ */
	NET_DVR_PPPOECFG struPPPoE;
	BYTE byRes3[24];
}NET_DVR_NETCFG_MULTI, *LPNET_DVR_NETCFG_MULTI;

//?????????芍??
typedef struct
{
	DWORD dwSize;
	NET_DVR_ETHERNET struEtherNet[MAX_ETHERNET];        /* ???????? */
	char sManageHostIP[16];        //???????赤?‾?迆???﹞
	WORD wManageHostPort;        //???????赤?‾?迆??????
	char sIPServerIP[16];            //IPServer﹞????‾???﹞
	char sMultiCastIP[16];     //?角??℅谷???﹞
	char sGatewayIP[16];           //???????﹞
	char sNFSIP[16];            //NFS?‾?迆IP???﹞
	BYTE sNFSDirectory[PATHNAME_LEN];//NFS????
	DWORD dwPPPOE;                //0-??????,1-????
	BYTE sPPPoEUser[NAME_LEN];    //PPPoE???∫??
	char sPPPoEPassword[PASSWD_LEN];// PPPoE????
	char sPPPoEIP[16];            //PPPoE IP???﹞(????)
	WORD wHttpPort;                //HTTP??????
}NET_DVR_NETCFG, *LPNET_DVR_NETCFG;

//?????????芍??(V50)
typedef struct tagNET_DVR_NETCFG_V50
{
	DWORD dwSize;
	NET_DVR_ETHERNET_V30    struEtherNet[MAX_ETHERNET];        //????????
	NET_DVR_IPADDR    struRes1[2];                    /*㊣???*/
	NET_DVR_IPADDR    struAlarmHostIpAddr;                    /* ㊣“???‾?迆IP???﹞ */
	BYTE    byRes2[4];                                /* ㊣??? */
	WORD    wAlarmHostIpPort;                                /* ㊣“???‾?迆?????? */
	BYTE    byUseDhcp;                                      /* ??﹞?????DHCP 0xff-???∫ 0-?????? 1-????*/
	BYTE    byIPv6Mode;                                //IPv6﹞???﹞?????0-?﹞????????1-?????豕????2-????DHCP﹞???
	NET_DVR_IPADDR    struDnsServer1IpAddr;                    /* ?辰??﹞????‾1??IP???﹞ */
	NET_DVR_IPADDR    struDnsServer2IpAddr;                    /* ?辰??﹞????‾2??IP???﹞ */
	BYTE    byIpResolver[MAX_DOMAIN_NAME];                    /* IP????﹞????‾?辰???辰IP???﹞ */
	WORD    wIpResolverPort;                                /* IP????﹞????‾?????? */
	WORD    wHttpPortNo;                                    /* HTTP?????? */
	NET_DVR_IPADDR    struMulticastIpAddr;                    /* ?角??℅谷???﹞ */
	NET_DVR_IPADDR    struGatewayIpAddr;                        /* ???????﹞ */
	NET_DVR_PPPOECFG struPPPoE;
	BYTE    byEnablePrivateMulticastDiscovery;  //?????角?????‾??0~??????1~??????2-????
	BYTE    byEnableOnvifMulticastDiscovery;  //Onvif?角?????‾??0~??????1~??????2-????
	WORD    wAlarmHost2IpPort;                                /* ㊣“???‾?迆2?????? */
	NET_DVR_IPADDR    struAlarmHost2IpAddr;                    /* ㊣“???‾?迆2 IP???﹞ */
	BYTE    byEnableDNS; //DNS????, 0-??㊣???1-?辰??
	BYTE    byRes[599];
}NET_DVR_NETCFG_V50, *LPNET_DVR_NETCFG_V50;

//sip????
typedef struct tagNET_DVR_SIP_CFG
{
	DWORD dwSize;
	BYTE byEnableAutoLogin;    //????℅???℅??芍??0-????????1-????
	BYTE byLoginStatus;  //℅??芍℅?????0-??℅??芍??1-??℅??芍????????????????
	BYTE byRes1[2];
	NET_DVR_IPADDR stuServerIP;  //SIP﹞????‾IP
	WORD wServerPort;    //SIP﹞????‾????
	BYTE byRes2[2];
	BYTE byUserName[NAME_LEN];  //℅??芍???∫??
	BYTE byPassWord[PASSWD_LEN]; //℅??芍????
	BYTE byLocalNo[MAX_NUMBER_LEN];
	BYTE byDispalyName[MAX_NAME_LEN]; //?豕㊣?????????
	WORD wLocalPort;     //㊣???????
	BYTE byLoginCycle;   //℅??芍??????1-99﹞???
	BYTE byType;//0-IP/IPV6,1-?辰??
	BYTE byDomainName[MAX_DOMAIN_NAME]; //?辰??
	BYTE byRes[64];
}NET_DVR_SIP_CFG, *LPNET_DVR_SIP_CFG;

typedef struct tagNET_DVR_SIP_CFG_V50
{
	DWORD dwSize;
	BYTE byEnableAutoLogin;    //????℅???℅??芍??0-????????1-????
	BYTE byLoginStatus;  //℅??芍℅?????0-??℅??芍??1-??℅??芍????????????????
	BYTE byRes1[2];
	NET_DVR_IPADDR stuServerIP;  //SIP﹞????‾IP
	WORD wServerPort;    //SIP﹞????‾????
	BYTE byRes2[2];
	BYTE byUserName[NAME_LEN];  //℅??芍???∫??
	BYTE byPassWord[PASSWD_LEN]; //℅??芍????
	BYTE byLocalNo[MAX_NUMBER_LEN];
	BYTE byDispalyName[MAX_NAME_LEN]; //?豕㊣?????????
	WORD wLocalPort;     //㊣???????
	BYTE byLoginCycle;   //℅??芍??????1-99﹞???
	BYTE byRes3;
	BYTE bySIPServerDomain[MAX_DOMAIN_NAME];  //sip﹞????‾?辰???“IP???辰?????豕?????????????????㊣IP??????
	NET_DVR_IPADDR stuSTUNServerIP;  // STUN﹞????‾IP
	BYTE bySTUNServerDomain[MAX_DOMAIN_NAME];  //STUN﹞????‾?辰?? ?“IP???辰?????豕?????????????????㊣IP??????
	WORD wSTUNServerPort;    // STUN﹞????‾????
	BYTE byRes4[2];
	NET_DVR_IPADDR stuProxyServerIP;  //?迆?赤﹞????‾IP
	BYTE byProxyServerDomain[MAX_DOMAIN_NAME];  //?迆?赤﹞????‾?辰?? ?“IP???辰?????豕?????????????????㊣IP??????
	WORD wProxyServerPort;    // ?迆?赤﹞????‾????
	BYTE byRes[258];
}NET_DVR_SIP_CFG_V50, *LPNET_DVR_SIP_CFG_V50;

//IP????????﹞??迆????
typedef struct tagNET_DVR_IP_VIEW_DEVCFG
{
	DWORD dwSize;
	BYTE  byDefaultRing; //??????????﹞??∫1-6
	BYTE  byRingVolume;  //??????????﹞??∫0-9
	BYTE  byInputVolume; //????????????﹞??∫0-6
	BYTE  byOutputVolume; //????????????﹞??∫0-9    
	WORD  wRtpPort;  //Rtp????
	BYTE  byRes1[2];
	DWORD dwPreviewDelayTime; //?∟?????㊣??????0-30??
	BYTE  byRes2[64];
}NET_DVR_IP_VIEW_DEVCFG, *LPNET_DVR_IP_VIEW_DEVCFG;

//Ip?????????????角??????????
typedef struct tagNET_DVR_IP_VIEW_AUDIO_CFG
{
	DWORD dwSize;
	BYTE  byAudioEncPri1; //????㊣角????????1??0-G722??1-G711_U??2-G711_A?? 5-MPEG2,6-G726??7-AAC
	BYTE  byAudioEncPri2; //????㊣角????????2???㊣sip﹞????‾???∫??????㊣角??1?㊣?芍????????㊣角??2??0-G722??1-G711_U??2-G711_A?? 5-MPEG2,6-G726??7-AAC
	WORD  wAudioPacketLen1; //????㊣角??1????∼邦?∟??
	WORD  wAudioPacketLen2; //????㊣角??2????∼邦?∟??
	BYTE  byRes[30];
}NET_DVR_IP_VIEW_AUDIO_CFG, *LPNET_DVR_IP_VIEW_AUDIO_CFG;

//IP﹞??迆?????????????????芍????
typedef struct tagNET_DVR_IP_VIEW_CALL_CFG
{
	DWORD dwSize;
	BYTE  byEnableAutoResponse; //????℅???????,0-????????1-????
	BYTE  byAudoResponseTime; //℅????????㊣????0-30??
	BYTE  byRes1[2];
	BYTE  byEnableAlarmNumber1; //????㊣“??????1??0-????????1-????
	BYTE  byRes2[3];
	BYTE  byAlarmNumber1[MAX_NUMBER_LEN]; //????????1
	BYTE  byEnableAlarmNumber2; //????㊣“??????2??0-????????1-????
	BYTE  byRes3[3];
	BYTE  byAlarmNumber2[MAX_NUMBER_LEN]; //????????2??????????1?∫∼??芍????????????2
	BYTE  byRes4[72];
}NET_DVR_IP_VIEW_CALL_CFG, *LPNET_DVR_IP_VIEW_CALL_CFG;

//?“?????車?芍??
//?????足??(℅??芍??)(∼?℅谷﹞???????)
typedef struct
{
	DWORD     dwMaxRecordChanNum;   //?豕㊣??∫????℅??車?????????“????-????
	DWORD     dwCurRecordChanNum;    //?㊣?∼?????????????????????“????
	DWORD     dwRelRecordChan[MAX_CHANNUM_V30];     /* ??????﹞??????“????∼???㊣赤??,????????????????????㊣那0 - MAX_CHANNUM_V30-1???∫??????????????0xffffffff,?辰?車?????∫*/
	BYTE       byRes[64];          //㊣???
}NET_DVR_RECORDCHAN, *LPNET_DVR_RECORDCHAN;

//?????足??(℅??芍??)(9000????)
typedef struct
{
	BYTE byMotionScope[64][96];                                    /*?足?????辰,0-96??,㊣赤??64??,????96*64?????那?谷,??1㊣赤?????????足?????辰,0-㊣赤??????*/
	BYTE byMotionSensitive;                                        /*?????足???谷????, 0 - 5,???????谷??,oxff??㊣?*/
	BYTE byEnableHandleMotion;                                    /* ??﹞????赤?????足?? 0??﹞? 1????*/
	BYTE byEnableDisplay;    /*?????????足????????????0-﹞???1-??*/
	char reservedData;
	NET_DVR_HANDLEEXCEPTION_V30 struMotionHandleType;                /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30]; /*??﹞??㊣??*/
	BYTE byRelRecordChan[MAX_CHANNUM_V30];                                    /* ㊣“????﹞??????車?“??*/
}NET_DVR_MOTION_V30, *LPNET_DVR_MOTION_V30;

//?????足??(℅??芍??)
typedef struct
{
	BYTE byMotionScope[18][22];    /*?足?????辰,????22*18?????那?谷,??1㊣赤?????那?谷???????足?????辰,0-㊣赤??????*/
	BYTE byMotionSensitive;        /*?????足???谷????, 0 - 5,???????谷??,0xff??㊣?*/
	BYTE byEnableHandleMotion;    /* ??﹞????赤?????足?? */
	BYTE byEnableDisplay;    /*?????????足????????????0-﹞???1-??*/
	char reservedData;
	NET_DVR_HANDLEEXCEPTION strMotionHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT];//??﹞??㊣??
	BYTE byRelRecordChan[MAX_CHANNUM]; //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
}NET_DVR_MOTION, *LPNET_DVR_MOTION;

//????㊣“??(℅??芍??)(9000????)  ???辰?車??704*576
typedef struct
{
	DWORD dwEnableHideAlarm;                /* ??﹞?????????㊣“?? ,0-﹞?,1-???谷???? 2-???谷???? 3-???谷????*/
	WORD wHideAlarmAreaTopLeftX;            /* ???????辰??x℅?㊣那 */
	WORD wHideAlarmAreaTopLeftY;            /* ???????辰??y℅?㊣那 */
	WORD wHideAlarmAreaWidth;                /* ???????辰???赤 */
	WORD wHideAlarmAreaHeight;                /*???????辰????*/
	NET_DVR_HANDLEEXCEPTION_V30 strHideAlarmHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
}NET_DVR_HIDEALARM_V30, *LPNET_DVR_HIDEALARM_V30;
//????㊣“??(℅??芍??)  ???辰?車??704*576
typedef struct
{
	DWORD dwEnableHideAlarm;                /* ??﹞?????????㊣“?? ,0-﹞?,1-???谷???? 2-???谷???? 3-???谷????*/
	WORD wHideAlarmAreaTopLeftX;            /* ???????辰??x℅?㊣那 */
	WORD wHideAlarmAreaTopLeftY;            /* ???????辰??y℅?㊣那 */
	WORD wHideAlarmAreaWidth;                /* ???????辰???赤 */
	WORD wHideAlarmAreaHeight;                /*???????辰????*/
	NET_DVR_HANDLEEXCEPTION strHideAlarmHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT];//??﹞??㊣??
}NET_DVR_HIDEALARM, *LPNET_DVR_HIDEALARM;

//???????∫㊣“??(℅??芍??)(9000????)
typedef struct
{
	BYTE byEnableHandleVILost;    /* ??﹞????赤???????∫㊣“?? */
	NET_DVR_HANDLEEXCEPTION_V30 strVILostHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
}NET_DVR_VILOST_V30, *LPNET_DVR_VILOST_V30;

//???????∫㊣“??(℅??芍??)
typedef struct
{
	BYTE byEnableHandleVILost;    /* ??﹞????赤???????∫㊣“?? */
	NET_DVR_HANDLEEXCEPTION strVILostHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT];//??﹞??㊣??
}NET_DVR_VILOST, *LPNET_DVR_VILOST;

//???????辰(℅??芍??)
typedef struct
{
	WORD wHideAreaTopLeftX;                /* ???????辰??x℅?㊣那 */
	WORD wHideAreaTopLeftY;                /* ???????辰??y℅?㊣那 */
	WORD wHideAreaWidth;                /* ???????辰???赤 */
	WORD wHideAreaHeight;                /*???????辰????*/
}NET_DVR_SHELTER, *LPNET_DVR_SHELTER;

typedef struct
{
	BYTE byBrightness;      /*????,0-255*/
	BYTE byContrast;        /*??㊣???,0-255*/
	BYTE bySaturation;      /*㊣?????,0-255*/
	BYTE byHue;                /*???‾,0-255*/
}NET_DVR_COLOR, *LPNET_DVR_COLOR;

typedef struct
{
	BYTE byRed;        //RGB??????﹞????????足??
	BYTE byGreen;    //RGB??????﹞???????????
	BYTE byBlue;    //RGB??????﹞???????????
	BYTE byRes;        //㊣???
}NET_DVR_RGB_COLOR, *LPNET_DVR_RGB_COLOR;

//℅?㊣那???谷????,???????????㊣?∼??????∼?﹞?㊣??車??, ?????????????車????
//??℅?㊣那?芍??
typedef struct tagNET_VCA_POINT
{
	float fX;                                // X?芍℅?㊣那, 0.001~1
	float fY;                                //Y?芍℅?㊣那, 0.001~1
}NET_VCA_POINT, *LPNET_VCA_POINT;

//?“?????車?芍??(9000????)
typedef struct
{
	DWORD dwSize;
	BYTE  sChanName[NAME_LEN];
	DWORD dwVideoFormat;    /* ???? ???????? 1-NTSC 2-PAL*/
	BYTE  byReservedData[64];/*㊣???*/
	DWORD dwShowChanName; // ?∟???????車????﹞??????“??????,0-??????,1-???? ???辰?車??704*576
	WORD wShowNameTopLeftX;                /* ?“????????????????x℅?㊣那 */
	WORD wShowNameTopLeftY;                /* ?“????????????????y℅?㊣那 */
										   //???????????∫㊣“??
	NET_DVR_VILOST_V30 struVILost;
	NET_DVR_VILOST_V30 struRes;        /*㊣???*/
									   //    BYTE byRes1[328];
									   //?????足??
	NET_DVR_MOTION_V30 struMotion;
	//????㊣“??
	NET_DVR_HIDEALARM_V30 struHideAlarm;
	//????  ???辰?車??704*576
	DWORD dwEnableHide;        /* ??﹞????????? ,0-﹞?,1-??*/
	NET_DVR_SHELTER struShelter[MAX_SHELTERNUM];
	//OSD
	DWORD dwShowOsd;// ?∟???????車????﹞?????OSD,0-??????,1-???? ???辰?車??704*576
	WORD wOSDTopLeftX;                /* OSD??x℅?㊣那 */
	WORD wOSDTopLeftY;                /* OSD??y℅?㊣那 */
	BYTE byOSDType;                    /* OSD?角??(?‾?????那????????) */
									   /* 0: XXXX-XX-XX ?那???? */
									   /* 1: XX-XX-XXXX ?????那 */
									   /* 2: XXXX?那XX??XX?? */
									   /* 3: XX??XX??XXXX?那 */
									   /* 4: XX-XX-XXXX ?????那*/
									   /* 5: XX??XX??XXXX?那 */
									   /*6: xx/xx/xxxx(??/??/?那) */
									   /*7: xxxx/xx/xx(?那/??/??) */
									   /*8: xx/xx/xxxx(??/??/?那)*/
	BYTE byDispWeek;                /* ??﹞????????? */
	BYTE byOSDAttrib;                /* OSD????:???‾?????? */
									 /* 1: ???‾,???? */
									 /* 2: ???‾,?????? */
									 /* 3: ????,?????‾ */
									 /* 4: ?????‾,?????? */
	BYTE byHourOSDType;                /* OSD???㊣??:0-24???㊣??,1-12???㊣?? */
	BYTE byFontSize;//℅????車????16*16(??)/8*16(??)??1-32*32(??)/16*32(??)??2-64*64(??)/32*64(??)  3-48*48(??)/24*48(??) 4-24*24(??)/12*24(??) 5-96*96(??)/48*96(??) 6-128*128(??)/64*128(??) 7-80*80(??)/40*80(??) 8-112*112(??)/56*112(??) 0xff-℅?????(adaptive)
	BYTE byOSDColorType;    //0-?????“??∼℅????1-℅??“??
							/*?㊣????﹞????????迆㊣那?????㊣??????﹞?㊣???????????℅車???????????辰℅?℅?﹞???????
							?????????辰??
							???∫??6??℅?﹞????????????“??NET_DVR_SET_SHOWSTRING_V30℅?﹞???????????????NET_DVR_SHOWSTRINGINFO?芍??????℅谷??????0????5????㊣那??????????℅?﹞???﹞???????????????﹞?????
							℅車???????辰??
							???∫??2??℅?﹞????????????“??NET_DVR_SET_SHOWSTRING_V30℅?﹞???????????????NET_DVR_SHOWSTRINGINFO?芍??????℅谷??????6????7????㊣那??????????℅?﹞???﹞???????????????﹞?????
							*/
	BYTE byAlignment;//????﹞??? 0-℅???????1-??????, 2-℅車????,3-?迆㊣那????, 4-??????????(∼邦??????℅?﹞????㊣?????∼㊣那?????迄??OSD℅?﹞?)??5-????℅車????(∼邦??????℅?﹞????㊣?????∼㊣那?????迄??OSD℅?﹞?)
	BYTE byOSDMilliSecondEnable;//?????????㊣???∫????????0~??????, 1-????
	NET_DVR_RGB_COLOR struOsdColor;//OSD????
	DWORD dwBoundary; //㊣???????℅車???????????????∼?迆㊣那??????㊣???????0-㊣赤????????????????????
	NET_DVR_RGB_COLOR struOsdBkColor; //℅??“??OSD㊣??∼??
	BYTE byOSDBkColorMode; //OSD㊣??∼????????0-??????1-℅??“??OSD㊣??∼??
	BYTE    byUpDownBoundary; //????℅???㊣?????????????????℅?﹞??????“﹞??∫????0,1,2??, ?迆㊣那?????????∫??byAlignment=3??℅??????∫???“??dwBoundary????㊣?????????.byAlignment??????3???谷?????? byUpDownBoundary/byLeftRightBoundary?????????車??dwBoundary???????迆?∫
	BYTE    byLeftRightBoundary; //℅車??℅???㊣?????????????????℅?﹞??????“﹞??∫????0,1,2??, ?迆㊣那?????????∫??byAlignment=3??℅??????∫???“??dwBoundary????㊣?????????.byAlignment??????3???谷?????? byUpDownBoundary/byLeftRightBoundary?????????車??dwBoundary???????迆?∫
	BYTE byRes[45];
}NET_DVR_PICCFG_V30, *LPNET_DVR_PICCFG_V30;

//?“?????車?芍??SDK_V14????
typedef struct
{
	DWORD dwSize;
	BYTE sChanName[NAME_LEN];
	DWORD dwVideoFormat;    /* ???? ???????? 1-NTSC 2-PAL*/
	BYTE byBrightness;      /*????,0-255*/
	BYTE byContrast;        /*??㊣???,0-255*/
	BYTE bySaturation;      /*㊣?????,0-255 */
	BYTE byHue;                /*???‾,0-255*/
							   //?????“????
	DWORD dwShowChanName; // ?∟???????車????﹞??????“??????,0-??????,1-???? ???辰?車??704*576
	WORD wShowNameTopLeftX;                /* ?“????????????????x℅?㊣那 */
	WORD wShowNameTopLeftY;                /* ?“????????????????y℅?㊣那 */
										   //???????∫㊣“??
	NET_DVR_VILOST struVILost;
	//?????足??
	NET_DVR_MOTION struMotion;
	//????㊣“??
	NET_DVR_HIDEALARM struHideAlarm;
	//????  ???辰?車??704*576
	DWORD dwEnableHide;        /* ??﹞????????? ,0-﹞?,1-??*/
	NET_DVR_SHELTER struShelter[MAX_SHELTERNUM];
	//OSD
	DWORD dwShowOsd;// ?∟???????車????﹞?????OSD,0-??????,1-???? ???辰?車??704*576
	WORD wOSDTopLeftX;                /* OSD??x℅?㊣那 */
	WORD wOSDTopLeftY;                /* OSD??y℅?㊣那 */
	BYTE byOSDType;                    /* OSD?角??(?‾?????那????????) */
									   /* 0: XXXX-XX-XX ?那???? */
									   /* 1: XX-XX-XXXX ?????那 */
									   /* 2: XXXX?那XX??XX?? */
									   /* 3: XX??XX??XXXX?那 */
									   /* 4: XX-XX-XXXX ?????那*/
									   /* 5: XX??XX??XXXX?那 */
									   /*6: xx/xx/xxxx(??/??/?那) */
									   /*7: xxxx/xx/xx(?那/??/??) */
									   /*8: xx/xx/xxxx(??/??/?那)*/
	BYTE byDispWeek;                /* ??﹞????????? */
	BYTE byOSDAttrib;                /* OSD????:???‾?????? */
									 /* 1: ???‾,???? */
									 /* 2: ???‾,?????? */
									 /* 3: ????,?????‾ */
									 /* 4: ?????‾,?????? */
	BYTE byHourOsdType;        /* OSD???㊣??:0-24???㊣??,1-12???㊣?? */
}NET_DVR_PICCFG_EX, *LPNET_DVR_PICCFG_EX;

//?“?????車?芍??(SDK_V13?∼???∼∼?㊣?)
typedef struct
{
	DWORD dwSize;
	BYTE sChanName[NAME_LEN];
	DWORD dwVideoFormat;    /* ???? ???????? 1-NTSC 2-PAL*/
	BYTE byBrightness;      /*????,0-255*/
	BYTE byContrast;        /*??㊣???,0-255*/
	BYTE bySaturation;      /*㊣?????,0-255 */
	BYTE byHue;                /*???‾,0-255*/
							   //?????“????
	DWORD dwShowChanName; // ?∟???????車????﹞??????“??????,0-??????,1-???? ???辰?車??704*576
	WORD wShowNameTopLeftX;                /* ?“????????????????x℅?㊣那 */
	WORD wShowNameTopLeftY;                /* ?“????????????????y℅?㊣那 */
										   //???????∫㊣“??
	NET_DVR_VILOST struVILost;
	//?????足??
	NET_DVR_MOTION struMotion;
	//????㊣“??
	NET_DVR_HIDEALARM struHideAlarm;
	//????  ???辰?車??704*576
	DWORD dwEnableHide;        /* ??﹞????????? ,0-﹞?,1-??*/
	WORD wHideAreaTopLeftX;                /* ???????辰??x℅?㊣那 */
	WORD wHideAreaTopLeftY;                /* ???????辰??y℅?㊣那 */
	WORD wHideAreaWidth;                /* ???????辰???赤 */
	WORD wHideAreaHeight;                /*???????辰????*/
										 //OSD
	DWORD dwShowOsd;// ?∟???????車????﹞?????OSD,0-??????,1-???? ???辰?車??704*576
	WORD wOSDTopLeftX;                /* OSD??x℅?㊣那 */
	WORD wOSDTopLeftY;                /* OSD??y℅?㊣那 */
	BYTE byOSDType;                    /* OSD?角??(?‾?????那????????) */
									   /* 0: XXXX-XX-XX ?那???? */
									   /* 1: XX-XX-XXXX ?????那 */
									   /* 2: XXXX?那XX??XX?? */
									   /* 3: XX??XX??XXXX?那 */
									   /* 4: XX-XX-XXXX ?????那*/
									   /* 5: XX??XX??XXXX?那 */
									   /*6: xx/xx/xxxx(??/??/?那) */
									   /*7: xxxx/xx/xx(?那/??/??) */
									   /*8: xx/xx/xxxx(??/??/?那)*/
	BYTE byDispWeek;                /* ??﹞????????? */
	BYTE byOSDAttrib;                /* OSD????:???‾?????? */
									 /* 1: ???‾,???? */
									 /* 2: ???‾,?????? */
									 /* 3: ????,?????‾ */
									 /* 4: ?????‾,?????? */
	char reservedData2;
}NET_DVR_PICCFG, *LPNET_DVR_PICCFG;

typedef enum _BITRATE_ENCODE_INDEX_
{
	BITRATE_ENCODE_def = 0,
	BITRATE_ENCODE_8kps = 1,
	BITRATE_ENCODE_16kps = 2,
	BITRATE_ENCODE_32kps = 3,
	BITRATE_ENCODE_64kps = 4,
	BITRATE_ENCODE_128kps = 5,
	BITRATE_ENCODE_192kps = 6,
	BITRATE_ENCODE_40kps = 7,
	BITRATE_ENCODE_48kps = 8,
	BITRATE_ENCODE_56kps = 9,
	BITRATE_ENCODE_80kps = 10,
	BITRATE_ENCODE_96kps = 11,
	BITRATE_ENCODE_112kps = 12,
	BITRATE_ENCODE_144kps = 13,
	BITRATE_ENCODE_160kps = 14,
	BITRATE_ENCODE_224kps = 15,
	BITRATE_ENCODE_256kps = 16,
	BITRATE_ENCODE_320kps = 17
}BITRATE_ENCODE_INDEX;

//???‾????????(℅??芍??)(9000????)
typedef struct
{
	BYTE byStreamType;        //???‾?角?? 0-?????‾, 1-?????‾, ㊣赤???????????????㊣℅?????㊣赤????﹞?????????????
							  /*﹞?㊣???0-DCIF                      1-CIF,                     2-QCIF,                 3-4CIF,
							  4-2CIF                      5?“㊣?????,                 6-QVGA(320*240),        7-QQVGA(160*120),
							  12-384*288                  13-576*576,
							  16-VGA?“640*480??,          17-UXGA?“1600*1200??,      18-SVGA(800*600),       19-HD720p(1280*720??,
							  20-XVGA,                    21-HD900p,                 22-1360*1024,           23-1536*1536,
							  24-1920*1920,               27-HD1080i,
							  28-2560*1920,               29-1600*304,               30-2048*1536,           31-2448*2048,
							  32-2448*1200,               33-2448*800,               34-XGA?“1024*768????    35-SXGA?“1280*1024??,
							  36-WD1(960*576/960*480),    37-1080i,                  38-WSXGA(1440*900),     39-HD_F(1920*1080/1280*720),
							  40-HD_H(1920*540/1280*360), 41-HD_Q(960*540/630*360),  42-2336*1744,           43-1920*1456,
							  44-2592*2048,               45-3296*2472,              46-1376*768,            47-1366*768,
							  48-1360*768,                49-WSXGA+,                 50-720*720,             51-1280*1280,
							  52-2048*768,                53-2048*2048,              54-2560*2048,           55-3072*2048,
							  56-2304*1296                57-WXGA(1280*800),         58-1600*600,               59-1600*900,
							  60-2752*2208,                61-㊣???,                   62-4000*3000,           63-4096*2160,
							  64-3840*2160,                65-4000*2250,              66-3072*1728,           67-2592*1944,
							  68-2464*1520,               69-1280*1920,              70-2560*1440,           71-1024*1024,
							  72-160*128,                 73-324*240,                74-324*256,             75-336*256,
							  76-640*512,                 77-2720*2048,              78-384*256,             79-384*216,
							  80-320*256,                 81-320*180,                82-320*192,             83-512*384,
							  84-325*256,                 85-256*192,                86-640*360,               87-1776x1340,
							  88-1936x1092,                89-2080x784,               90-2144x604,            91-1920*1200,
							  92-4064*3040,               93-3040*3040,              94-3072*2304,           95-3072*1152,
							  96-2560*2560,               97-2688*1536,              98-2688*1520,           99-3072*3072,
							  100-3392*2008,              101-4000*3080,             102-960*720,            103-1024*1536,
							  104-704*1056,               105-352*528,               106-2048*1530,          107-2560*1600,
							  108-2800*2100,              109-4088*4088,             110-4000*3072,           111-960*1080(1080p Lite)
							  112-640*720(half 720p),     113-640*960,               114-320*480,             115-3840*2400,
							  116-3840*1680,              117-2560*1120,             118-704*320,             119-1200*1920,
							  120-480*768,                121-768*480,               122-320*512,             123-512*320,
							  124-4096*1800,              125-1280*560,              126-2400*3840,          127-480*272,
							  128-512*272,                129-2592*2592,             130-1792*2880,          131-1600*2560,
							  132-2720*1192,              133-3MP(1920*1536/2048*1536)??                     134-5MP(2560*1944)??
							  135-2560*960,               136-2064*1544              137-4096*1200,
							  138-3840*1080               139-2720*800               140-512*232             141-704*200,
							  142-512*152,                143-2048*896               144-2048*600            145-1280*376,
							  146-2592*1520,              147-2592*1536,             148-3072*8192,          149-768*2048,
							  150-8208*3072,              151-4096*1536,             152-6912*2800,          153-3456*1400
							  154-480*720,                155-800*450,               156-480*270,            157-2560*1536,
							  160-3264*2448,              161-288*320,               162-144*176,            163-480*640,
							  164-240*320,                165-120*160,               166-576*720,            167-720*1280,
							  168-576*960,                169-2944*1656,             170-432*240,            171-2160*3840,
							  172-1080*1920,              173-7008*1080,             174-3504*540,           175-1752*270,
							  176-876*135,                177-4096*1440,             178-4096*1080,          179-1536*864,
							  180-180*240,                181-360*480,               182-540*720,            183-720*960,
							  184-960*1280,               185-1080*1440,
							  186-3200*1800,              187-1752*272,              188-872*136,            189-1280*1440,
							  190-3520*544,               191-1728*256,              192-864*128,            193-5470*3684,
							  194-2560*750,               195-1600*480,              196-1024*300,           197-848*480,
							  198-8160*3616,				199-8160*2304,             200-4064*2560,          201-1400*1050,
							  202-2688*1512,              203-704*288,               204-1560*656,           205-3072*1280,
							  206-4320*1808,              207-6120*2560,              208-1280*960,          209-3000*3000,
							  210-2032*3616,              211-7680*4320,             212-5760*3240,          213-3264*1836,
							  214-2712*1536,              215-1080*720(????????????),  216-360x640(????????????),217-1440*812,
							  218-8160*2416,              219-5760*1712,               220-4080*1200,          221-6144*2560,
							  222-1568*656,               223-4096*1808,               224-2720*1200,          225-2896*848
							  226-2048*608                227-3840*1120                228-2720*784            229-1920*560,
							  230-1360*400                231-704*208                  232-496*144             233-352*128,
							  234-512*240                 235-512*160                  236-368*128            237-256*128
							  238-2048*592                239-1456*416                 240-1024*304            241-1280*368
							  242-912*256                 243-640*192                  244-252*112 ?“????????            245-(576*704[P??]/480*704[N??])
							  246-5760*1696               247-8160*2400                248-5520*2400           249-2784*800
							  250-1968*848                251-1392*608                 252-2736*1184           253-1920*848
							  254-5520*1600
							  0xff-Auto(?????㊣?∼???‾﹞?㊣???)
							  256-3888*1696                257-2784*1200               258-496*224              259-352*160
							  260-912*400                  261-640*288                 262-1456*640             263-1024*448
							  264-2896*1280                265-2544*1088               266-2736*768            267-1920*544
							  268-3840*1696                269-2880*848                270-5424*2400            271-5760*1696
							  272-848*384                  273-912*272                 274-1360*608             275-1456*432
							  276-2736*1200
							  */
	BYTE byResolution;
	BYTE byBitrateType;        //?????角?? 0:㊣?????, 1:?“????,0xfe:℅?????????????
	BYTE byPicQuality;        //???車???? 0-℅??? 1-???? 2-???? 3-??∼? 4-???? 5-??,℅?????????????
							  /*????????:0-㊣?????1-16K(㊣???)??2-32K??3-48k??4-64K??5-80K??6-96K??7-128K??8-160k??9-192K??10-224K??
							  11-256K??12-320K??13-384K??14-448K??15-512K??16-640K??17-768K??18-896K??19-1024K??20-1280K??21-1536K??22-1792K??23-2048K??
							  24-3072K??25-4096K??26-8192K??27-16384K??℅?????(31??)????1㊣赤????℅??“?????‾??0??30??㊣赤?????‾????℅?????16k,0xfffffffe??℅?????????????*/
	DWORD dwVideoBitrate;
	DWORD dwVideoFrameRate;    //???? 0-????; 1-1/16; 2-1/8; 3-1/4; 4-1/2; 5-1; 6-2; 7-4; 8-6; 9-8; 10-10; 11-12; 12-16; 13-20; V2.0∼?㊣???????14-15; 15-18; 16-22;
							   //17-25??18-30??19-35??20-40??21-45??22-50??23-55??24-60??25-3;26-5;27-7;28-9;29-100; 30-120;31-24;32-48,33-8.3,0xfffffffe-℅?????????????
	WORD  wIntervalFrameI;  //I??????,0xfffe ℅?????????????
	BYTE  byIntervalBPFrame;//0-BBP??; 1-BP??; 2-??P??(2006-08-11 ??????P?????????????????????????㊣?‾???㊣????)??0xfe-℅?????????????
	BYTE  byres1;        //㊣???
	BYTE  byVideoEncType;   //????㊣角???角?? 0-????264??1-㊣那℅?h264??2-㊣那℅?mpeg4??7-M-JPEG??8-MPEG2??9-SVAC, 10-㊣那℅?h265, 0xfe-℅????“????????????0xff-???∫ 
	BYTE  byAudioEncType;   //????㊣角???角?? 0-G722;1-G711_U;2-G711_A;5-MP2L2;6-G276;7-AAC;8-PCM;12-AAC_LC;13-AAC_LD;14-Opus;15-MP3;0xff-???∫
	BYTE  byVideoEncComplexity; //????㊣角??????????0-????1-????2??,0xfe:℅?????????????
	BYTE  byEnableSvc; //0 - ??????SVC??????1- ????SVC????; 2-℅???????SVC????
	BYTE  byFormatType; //﹞?℅∼?角????1-???‾??2-RTP﹞?℅∼??3-PS﹞?℅∼??4-TS﹞?℅∼??5-??????6-FLV??7-ASF??8-3GP,9-RTP+PS?“?迆㊣那??GB28181????0xff-???∫
	BYTE  byAudioBitRate; //???????? ???? BITRATE_ENCODE_INDEX
	BYTE  byStreamSmooth;//???‾???? 1??100?“1????㊣赤?????迆(Clear)??100㊣赤??????(Smooth)??
	BYTE  byAudioSamplingRate;//???????迄??0-????,1- 16kHZ, 2-32kHZ, 3-48kHZ, 4- 44.1kHZ,5-8kHZ
	BYTE  bySmartCodec;///*bit0-??????㊣角?? 0-??㊣???1-?辰????bit1 - ?????????? 0 - ??㊣???1 - ?辰??*/
	BYTE  byDepthMapEnable;// ????????????????0-??㊣???1-?辰?????????????車???????“????℅????‾?“???????????????????????????????????? 960*540 ??????????
						   //???迄?????“??SmartCodec???????????迆?∫??, 0-0K 1-16K 2-32K 3-48k 4-64K 5-80K 6-96K 7-128K 8-160k 9-192K 10-224K 11-256K 12-320K 13-384K 14-448K 15-512K 16-640K 17-768K 18-896K 19-1024K 20-1280K 21-1536K 22-1792K 23-2048K 24-2560K 25-3072K 26-4096K 27-5120K 28-6144K 29-7168K 30-8192K
						   //℅?????(15??)????1㊣赤????℅??“?????‾, 0-14??㊣赤?????‾??(MIN- 0 K)??
	WORD  wAverageVideoBitrate;
}NET_DVR_COMPRESSION_INFO_V30, *LPNET_DVR_COMPRESSION_INFO_V30;

//?“??????????(9000????)
typedef struct
{
	DWORD dwSize;
	NET_DVR_COMPRESSION_INFO_V30 struNormHighRecordPara;    //???? ????8000?????“
	NET_DVR_COMPRESSION_INFO_V30 struRes;//㊣??? char reserveData[28];
	NET_DVR_COMPRESSION_INFO_V30 struEventRecordPara;       //??????﹞?????????
	NET_DVR_COMPRESSION_INFO_V30 struNetPara;               //????(℅????‾)
}NET_DVR_COMPRESSIONCFG_V30, *LPNET_DVR_COMPRESSIONCFG_V30;

//???‾????????(℅??芍??)
typedef struct
{
	BYTE byStreamType;        //???‾?角??0-?????‾,1-?????‾,㊣赤???????????㊣℅?????㊣赤????﹞?????????????
	BYTE byResolution;      //﹞?㊣???0-DCIF 1-CIF, 2-QCIF, 3-4CIF, 4-2CIF, 5-2QCIF(352X144)(????℅“??)
	BYTE byBitrateType;        //?????角??0:㊣???????1:?“??????2????????
	BYTE  byPicQuality;        //???車???? 0-℅??? 1-???? 2-???? 3-??∼? 4-???? 5-??
	DWORD dwVideoBitrate;     //???????? 0-㊣??? 1-16K(㊣???) 2-32K 3-48k 4-64K 5-80K 6-96K 7-128K 8-160k 9-192K 10-224K 11-256K 12-320K
							  // 13-384K 14-448K 15-512K 16-640K 17-768K 18-896K 19-1024K 20-1280K 21-1536K 22-1792K 23-2048K
							  //℅?????(31??)????1㊣赤????℅??“?????‾, 0-30??㊣赤?????‾??(MIN-32K MAX-8192K)??
	DWORD dwVideoFrameRate;    //???? 0-????; 1-1/16; 2-1/8; 3-1/4; 4-1/2; 5-1; 6-2; 7-4; 8-6; 9-8; 10-10; 11-12; 12-16; 13-20;
}NET_DVR_COMPRESSION_INFO, *LPNET_DVR_COMPRESSION_INFO;

//?“??????????
typedef struct
{
	DWORD dwSize;
	NET_DVR_COMPRESSION_INFO struRecordPara; //????/??????﹞?????
	NET_DVR_COMPRESSION_INFO struNetPara;    //????/㊣???
}NET_DVR_COMPRESSIONCFG, *LPNET_DVR_COMPRESSIONCFG;

//???‾????????(℅??芍??)(????) ????I??????
typedef struct
{
	BYTE byStreamType;        //???‾?角??0-?????‾, 1-?????‾
	BYTE byResolution;      //﹞?㊣???0-DCIF 1-CIF, 2-QCIF, 3-4CIF, 4-2CIF, 5-2QCIF(352X144)(????℅“??)
	BYTE byBitrateType;        //?????角??0:㊣???????1:?“??????2????????
	BYTE  byPicQuality;        //???車???? 0-℅??? 1-???? 2-???? 3-??∼? 4-???? 5-??
	DWORD dwVideoBitrate;     //???????? 0-㊣??? 1-16K(㊣???) 2-32K 3-48k 4-64K 5-80K 6-96K 7-128K 8-160k 9-192K 10-224K 11-256K 12-320K
							  // 13-384K 14-448K 15-512K 16-640K 17-768K 18-896K 19-1024K 20-1280K 21-1536K 22-1792K 23-2048K
							  //℅?????(31??)????1㊣赤????℅??“?????‾, 0-30??㊣赤?????‾??(MIN-32K MAX-8192K)??
	DWORD dwVideoFrameRate;    //???? 0-????; 1-1/16; 2-1/8; 3-1/4; 4-1/2; 5-1; 6-2; 7-4; 8-6; 9-8; 10-10; 11-12; 12-16; 13-20, //V2.0????14-15, 15-18, 16-22;
	WORD  wIntervalFrameI;  //I??????
							//2006-08-11 ??????P?????????????????????????㊣?‾???㊣????
	BYTE  byIntervalBPFrame;//0-BBP??; 1-BP??; 2-??P??
	BYTE  byRes;
}NET_DVR_COMPRESSION_INFO_EX, *LPNET_DVR_COMPRESSION_INFO_EX;

//?“??????????(????)
typedef struct
{
	DWORD dwSize;
	NET_DVR_COMPRESSION_INFO_EX struRecordPara; //????
	NET_DVR_COMPRESSION_INFO_EX struNetPara;    //????
}NET_DVR_COMPRESSIONCFG_EX, *LPNET_DVR_COMPRESSIONCFG_EX;


//?㊣????????????????(℅??芍??)
typedef struct
{
	NET_DVR_SCHEDTIME struRecordTime;
	BYTE byRecordType;    //0:?“?㊣??????1:?????足????2:㊣“????????3:????|㊣“????4:????&㊣“??, 5:?邦????﹞?, 6: ????????,10-PIR㊣“????11-????㊣“????12-????㊣“????13-?迄??㊣“??,14-???????“??????15?????足????16???辰?????足????17?????足???足??
	char reservedData[3];
}NET_DVR_RECORDSCHED, *LPNET_DVR_RECORDSCHED;

//???足????????????(℅??芍??)
typedef struct
{
	WORD wAllDayRecord;                /* ??﹞????足???? 0-﹞? 1-??*/
	BYTE byRecordType;                /* ???車?角?? 0:?“?㊣??????1:?????足????2:㊣“????????3:????|㊣“????4:????&㊣“?? 5:?邦????﹞?, 6: ????????,
									  10-PIR㊣“????11-????㊣“????12-????㊣“????13-????|㊣“??????|PIR|????㊣“??|????㊣“??,14-???????“????,15-?????足??,16-???辰????,17-?迄???足??,
									  18-???∼㊣??邦?足??,19-?????足???“?????足??|???辰????|???????辰|???????辰|??????㊣???,20???????足??, 21-POS????*/
	char reservedData;
}NET_DVR_RECORDDAY, *LPNET_DVR_RECORDDAY;

//?“??????????????(9000????)
typedef struct
{
	DWORD    dwSize;
	DWORD    dwRecord;                          /*??﹞????? 0-﹞? 1-??*/
	NET_DVR_RECORDDAY    struRecAllDay[MAX_DAYS];
	NET_DVR_RECORDSCHED    struRecordSched[MAX_DAYS][MAX_TIMESEGMENT_V30];
	DWORD    dwRecordTime;                    /* ???車???㊣?∟?? 0-5???? 1-10???? 2-30???? 3-1﹞????? 4-2﹞????? 5-5﹞????? 6-10﹞???*/
	DWORD    dwPreRecordTime;                /* ?∟???㊣?? 0-???∟?? 1-5?? 2-10?? 3-15?? 4-20?? 5-25?? 6-30?? 7-0xffffffff(???????∟??) */
	DWORD    dwRecorderDuration;                /* ????㊣?????℅??∟?㊣?? */
	BYTE    byRedundancyRec;    /*??﹞????角????,??????????㊣?﹞???0/1*/
	BYTE    byAudioRec;        /*?????㊣?????‾㊣角???㊣??﹞????????????????迆??????﹞“??*/
	BYTE    byStreamType;  // 0-?‾???‾??1-℅????‾??2-?‾℅????‾???㊣ 3-?????‾
	BYTE    byPassbackRecord;  // 0:?????????? 1??????????
	WORD    wLockDuration;  // ???????“?㊣?∟?????????㊣ 0㊣赤???????“??0xffff㊣赤?????????“???????????㊣?∟?車?????“???????㊣?∟?????????????芍???“
	BYTE    byRecordBackup;  // 0:?????????? 1??????????
	BYTE     bySVCLevel;    //SVC?谷???角????0-???谷??1-?谷??﹞????? 2-?谷??﹞?????
	BYTE    byRecordManage;   //?????‾????0-?????? 1-??????; ?????㊣?????“?㊣?????????????㊣???????“?㊣????????????????????????????㊣????????足??????????????∼?????????????????
	BYTE    byExtraSaveAudio;        //?????????赤??0-﹞??????赤????1-?????赤??
									 /*?????????????????車????﹞“????℅?????????????????﹞“??????????????????????㊣那???????芍????????????????????㊣那?????㊣?????????????∼??????????????????℅?????????????*/
	BYTE   byIntelligentRecord;//??﹞????????????????? 0-﹞? 1-??
	BYTE    byReserve;
}NET_DVR_RECORD_V30, *LPNET_DVR_RECORD_V30;

//?㊣????????????????(℅??芍??)
typedef struct
{
	NET_DVR_SCHEDTIME  struRecordTime;
	/*?????角????0:?“?㊣??????1:?????足????2:㊣“????????3:????|㊣“????4:????&㊣“?? 5:?邦????﹞?,
	6-????㊣“????????10-PIR㊣“????11-????㊣“????12-????㊣“????13-????????,14-???????“????,
	15-?????足??,16-???辰????,17-?迄???足??,18-???∼㊣??邦?足??,
	19-?????足??(?????足??|???辰????|?????足??|?迄???足??|???∼㊣??邦?足??),20???????足??,21-POS????,
	22-???????辰?足??, 23-???????辰?足??,24-?????足??,25-???㊣?????足??,26-?足???????足??,27-?????足??,
	28-???﹞?????足??,29-???﹞?????足??,30-?????足????31-﹞??????足??,32-?辰???﹞??????(??﹞“),33-???赤????(??﹞“), 34-?∫??????(??﹞“)
	35-?????足??, 36-?????∟????37-????㊣“????38-????㊣“????39-????????㊣“??,40-﹞???㊣“????41-???㊣?車?迆,42-????℅???,43-???赤?足??,44-????????,45-???????㊣??46-????℅?????47-﹞?﹞“∼???,48-??㊣那℅???,
	49-??????????50?????足????51-??????52????㊣??? */
	BYTE byRecordType;
	BYTE byRes[31];
}NET_DVR_RECORDSCHED_V40, *LPNET_DVR_RECORDSCHED_V40;

//???足????????????(℅??芍??)
typedef struct
{
	BYTE byAllDayRecord; /* ??﹞????足???? 0-﹞? 1-??*/
						 /*?????角????0:?“?㊣??????1:?????足????2:㊣“????????3:????|㊣“????4:????&㊣“?? 5:?邦????﹞?,
						 6-????㊣“????????10-PIR㊣“????11-????㊣“????12-????㊣“????13-????????,14-???????“????,
						 15-?????足??,16-???辰????,17-?迄???足??,18-???∼㊣??邦?足??,
						 19-?????足??(?????足??|???辰????|?????足??|?迄???足??|???∼㊣??邦?足??),20???????足??,21-POS????,
						 22-???????辰?足??, 23-???????辰?足??,24-?????足??,25-???㊣?????足??,26-?足???????足??,27-?????足??,
						 28-???﹞?????足??,29-???﹞?????足??,30-?????足????31-﹞??????足??,32-?辰???﹞??????(??﹞“),33-???赤????(??﹞“), 34-?∫??????(??﹞“)
						 35-?????足??, 36-?????∟????37-????㊣“????38-????㊣“????39-????????㊣“??,40-﹞???㊣“????41-???㊣?車?迆,42-????℅???,43-???赤?足??,44-????????,45-???????㊣,46-????℅???,47-﹞?﹞“∼???,48-??㊣那℅???,
						 49-??????????50?????足????51-??????52????㊣???*/
	BYTE byRecordType;
	BYTE byRes[62];
}NET_DVR_RECORDDAY_V40, *LPNET_DVR_RECORDDAY_V40;

typedef struct
{
	DWORD    dwSize;
	DWORD    dwRecord;                          /*??﹞????? 0-﹞? 1-??*/
	NET_DVR_RECORDDAY_V40    struRecAllDay[MAX_DAYS];
	NET_DVR_RECORDSCHED_V40 struRecordSched[MAX_DAYS][MAX_TIMESEGMENT_V30];
	DWORD    dwRecordTime;                    /* ???車???㊣?∟?? 0-5???? 1-10???? 2-30???? 3-1﹞????? 4-2﹞????? 5-5﹞????? 6-10﹞???*/
	DWORD    dwPreRecordTime;                /* ?∟???㊣?? 0-???∟?? 1-5?? 2-10?? 3-15?? 4-20?? 5-25?? 6-30?? 7-0xffffffff(???????∟??) */
	DWORD    dwRecorderDuration;                /* ????㊣?????℅??∟?㊣?? */
	BYTE    byRedundancyRec;    /*??﹞????角????,??????????㊣?﹞???0/1*/
	BYTE    byAudioRec;        /*?????㊣?????‾㊣角???㊣??﹞????????????????迆??????﹞“??*/
	BYTE    byStreamType;  // 0-?‾???‾??1-℅????‾??2-?‾℅????‾???㊣ 3-?????‾
	BYTE    byPassbackRecord;  // 0:?????????? 1??????????
	WORD    wLockDuration;  // ???????“?㊣?∟?????????㊣ 0㊣赤???????“??0xffff㊣赤?????????“???????????㊣?∟?車?????“???????㊣?∟?????????????芍???“
	BYTE    byRecordBackup;  // 0:?????????? 1??????????
	BYTE     bySVCLevel;    //SVC?谷???角????0-???谷??1-?谷??﹞????? 2-?谷??﹞?????
	BYTE    byRecordManage;   //?????‾????0-?????? 1-??????; ?????㊣?????“?㊣?????????????㊣???????“?㊣????????????????????????????㊣????????足??????????????∼?????????????????
	BYTE    byExtraSaveAudio;//????????????
							 /*?????????????????車????﹞“????℅?????????????????﹞“??????????????????????㊣那???????芍????????????????????㊣那?????㊣?????????????∼??????????????????℅?????????????*/
	BYTE   byIntelligentRecord;//??﹞????????????????? 0-﹞? 1-??
	BYTE    byRes[125];
}NET_DVR_RECORD_V40, *LPNET_DVR_RECORD_V40;

//?“??????????????
typedef struct
{
	DWORD dwSize;
	DWORD dwRecord;  /*??﹞????? 0-﹞? 1-??*/
	NET_DVR_RECORDDAY struRecAllDay[MAX_DAYS];
	NET_DVR_RECORDSCHED struRecordSched[MAX_DAYS][MAX_TIMESEGMENT];
	DWORD dwRecordTime;    /* ???車?㊣???∟?? */
	DWORD dwPreRecordTime;    /* ?∟???㊣?? 0-???∟?? 1-5?? 2-10?? 3-15?? 4-20?? 5-25?? 6-30?? 7-0xffffffff(???????∟??) */
}NET_DVR_RECORD, *LPNET_DVR_RECORD;

//???“???谷㊣赤?芍??????
typedef struct
{
	DWORD dwType;               /*?????‾?角????*/
	BYTE  byDescribe[DESC_LEN]; /*?????‾???豕??﹞?????8000????????*/
}NET_DVR_PTZ_PROTOCOL;

typedef struct
{
	DWORD   dwSize;
	NET_DVR_PTZ_PROTOCOL struPtz[PTZ_PROTOCOL_NUM];/*℅??車200??PTZ???谷*/
	DWORD   dwPtzNum;           /*???∫??ptz???谷????????0????(???????㊣??1)*/
	BYTE    byRes[8];
}NET_DVR_PTZCFG, *LPNET_DVR_PTZCFG;

/***************************???“?角??(end)******************************/
typedef struct tagNET_DVR_SERIALSTART_V40   //???‾?“??
{
	DWORD  dwSize;         //?芍?????車??
	DWORD  dwSerialType;    //???????“1-232??????2-485??????
	BYTE   bySerialNum;   //????㊣角??
	BYTE   byRes[255];
}NET_DVR_SERIALSTART_V40, *LPNET_DVR_SERIALSTART_V40;

//?“???????‾(???“)???????? ????
typedef struct tagNET_DVR_DECODERCFG_V40
{
	DWORD    dwSize;       //?芍?????車??
	DWORD     dwBaudRate;       //?“???? 0??50??1??75??2??110??3??150??4??300??5??600??6??1200??7??2400??8??4800??9??9600??10??19200?? 11??38400??12??57600??13??76800??14??115.2k; 
	BYTE     byDataBit;       //?????????? 0??5????1??6????2??7????3??8??;
	BYTE     byStopBit;       //?????? 0??1????1??2??
	BYTE     byParity;       //???谷 0???????谷??1???????谷??2???????谷
	BYTE     byFlowcontrol;  //0??????1???赤?‾??,2-???‾??
	WORD     wDecoderType;    //?????‾?角??*/
	WORD     wDecoderAddress;    //?????‾???﹞??0-255
	BYTE     bySetPreset[MAX_PRESET_V30];  //?∟??????﹞??豕??,0-?????豕??,1-?豕??
	BYTE     bySetCruise[MAX_CRUISE_V30];  //??????﹞??豕??: 0-?????豕??,1-?豕??
	BYTE     bySetTrack[MAX_TRACK_V30];    //?足????﹞??豕??,0-?????豕??,1-?豕??
	BYTE     bySerialNO;          //????㊣角??
	BYTE     byWorkMode;          /*?∟℅‾?????? 1-???車??????????2-??????????3-???‾?“?????? 4-PPP???? 5-?????“???? 6-?????㊣?? 7-?邦?????? 8-?角??∼????赤 9-???????“ 12-LED??????13-??﹞?℅???????????*/
	BYTE     byRes[254];         //㊣???
}NET_DVR_DECODERCFG_V40, *LPNET_DVR_DECODERCFG_V40;

typedef	struct tagNET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO
{
	float fMaxTemperature;//℅??????????﹞?????????車????
	float fMinTemperature;//℅??????????﹞?????????車????
	float fAverageTemperature;//???迄???????﹞?????????車????
	NET_VCA_POINT struHighestPoint; //℅???????????℅?㊣那
	NET_VCA_POINT struLowestPoint; //℅???????????℅?㊣那
	BYTE       byIsFreezedata;//??﹞????????芍 0-﹞? 1-??
	BYTE  byRes[15];
}NET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO, *LPNET_DVR_THERMOMETRYRULE_TEMPERATURE_INFO;

//?“???????‾(???“)????????(9000????)
typedef struct
{
	DWORD dwSize;
	DWORD dwBaudRate;//?“????(bps)??0??50??1??75??2??110??3??150??4??300??5??600??6??1200??7??2400??8??4800??9??9600??10??19200?? 11??38400??12??57600??13??76800??14??115.2k;
	BYTE byDataBit;// ?????????? 0??5????1??6????2??7????3??8??;
	BYTE byStopBit;// ?????? 0??1????1??2??;
	BYTE byParity;// ???谷 0???????谷??1???????谷??2???????谷;
	BYTE byFlowcontrol;// 0??????1???赤?‾??,2-???‾??
	WORD wDecoderType;//?????‾?角??, ??0??????????ptz???谷??㊣赤??NET_DVR_IPC_PROTO_LIST????
	WORD wDecoderAddress;    /*?????‾???﹞:0 - 255*/
	BYTE bySetPreset[MAX_PRESET_V30];        /* ?∟??????﹞??豕??,0-?????豕??,1-?豕??*/
	BYTE bySetCruise[MAX_CRUISE_V30];        /* ??????﹞??豕??: 0-?????豕??,1-?豕?? */
	BYTE bySetTrack[MAX_TRACK_V30];            /* ?足????﹞??豕??,0-?????豕??,1-?豕??*/
}NET_DVR_DECODERCFG_V30, *LPNET_DVR_DECODERCFG_V30;

//?“???????‾(???“)????????
typedef struct
{
	DWORD dwSize;
	DWORD dwBaudRate;       //?“????(bps)??0??50??1??75??2??110??3??150??4??300??5??600??6??1200??7??2400??8??4800??9??9600??10??19200?? 11??38400??12??57600??13??76800??14??115.2k;
	BYTE byDataBit;         // ?????????? 0??5????1??6????2??7????3??8??;
	BYTE byStopBit;         // ?????? 0??1????1??2??;
	BYTE byParity;          // ???谷 0???????谷??1???????谷??2???????谷;
	BYTE byFlowcontrol;     // 0??????1???赤?‾??,2-???‾??
	WORD wDecoderType;      //?????‾?角??  NET_DVR_IPC_PROTO_LIST??????
	WORD wDecoderAddress;    /*?????‾???﹞:0 - 255*/
	BYTE bySetPreset[MAX_PRESET];        /* ?∟??????﹞??豕??,0-?????豕??,1-?豕??*/
	BYTE bySetCruise[MAX_CRUISE];        /* ??????﹞??豕??: 0-?????豕??,1-?豕?? */
	BYTE bySetTrack[MAX_TRACK];        /* ?足????﹞??豕??,0-?????豕??,1-?豕??*/
}NET_DVR_DECODERCFG, *LPNET_DVR_DECODERCFG;

//ppp????????(℅??芍??)
typedef struct
{
	NET_DVR_IPADDR struRemoteIP;    //????IP???﹞
	NET_DVR_IPADDR struLocalIP;        //㊣???IP???﹞
	char sLocalIPMask[16];            //㊣???IP???﹞????
	BYTE sUsername[NAME_LEN];        /* ???∫?? */
	BYTE sPassword[PASSWD_LEN];        /* ???? */
	BYTE byPPPMode;                    //PPP????, 0???‾????1??㊣???
	BYTE byRedial;                    //??﹞????? ??0-﹞?,1-??
	BYTE byRedialMode;                //????????,0-???????????“,1-?∟??????????
	BYTE byDataEncrypt;                //????????,0-﹞?,1-??
	DWORD dwMTU;                    //MTU
	char sTelephoneNumber[PHONENUMBER_LEN];   //???∼????
}NET_DVR_PPPCFG_V30, *LPNET_DVR_PPPCFG_V30;

//ppp????????(℅??芍??)
typedef struct
{
	char sRemoteIP[16];                //????IP???﹞
	char sLocalIP[16];                //㊣???IP???﹞
	char sLocalIPMask[16];            //㊣???IP???﹞????
	BYTE sUsername[NAME_LEN];        /* ???∫?? */
	BYTE sPassword[PASSWD_LEN];        /* ???? */
	BYTE byPPPMode;                    //PPP????, 0???‾????1??㊣???
	BYTE byRedial;                    //??﹞????? ??0-﹞?,1-??
	BYTE byRedialMode;                //????????,0-???????????“,1-?∟??????????
	BYTE byDataEncrypt;                //????????,0-﹞?,1-??
	DWORD dwMTU;                    //MTU
	char sTelephoneNumber[PHONENUMBER_LEN];   //???∼????
}NET_DVR_PPPCFG, *LPNET_DVR_PPPCFG;

//RS232????????????(9000????)
typedef struct
{
	DWORD dwBaudRate;   /*?“????(bps)??0??50??1??75??2??110??3??150??4??300??5??600??6??1200??7??2400??8??4800??9??9600??10??19200?? 11??38400??12??57600??13??76800??14??115.2k;*/
	BYTE byDataBit;     /* ?????????? 0??5????1??6????2??7????3??8?? */
	BYTE byStopBit;     /* ?????? 0??1????1??2?? */
	BYTE byParity;      /* ???谷 0???????谷??1???????谷??2???????谷 */
	BYTE byFlowcontrol; /* 0??????1???赤?‾??,2-???‾?? */
	DWORD dwWorkMode;   //?∟℅‾??????0??232????????PPP??????1??232??????????????????2?????‾?“?? 3- ptz????,?車?????????????‾, 4-㊣“????????  5-???車???????? 6-???????? 7-?????㊣?? 8-?邦?????? 9-?角??∼????赤 10-???????“
}NET_DVR_SINGLE_RS232;

typedef struct tagNET_DVR_USB_RS232
{
	DWORD dwBaudRate;   /*?“????(bps)??0??50??1??75??2??110??3??150??4??300??5??600??6??1200??7??2400??8??4800??9??9600??10??19200?? 11??38400??12??57600??13??76800??14??115.2k;*/
	BYTE byDataBit;     /* ?????????? 0??5????1??6????2??7????3??8?? */
	BYTE byStopBit;     /* ?????? 0??1????1??2?? */
	BYTE byParity;      /* ???谷 0???????谷??1???????谷??2???????谷 */
	BYTE byFlowcontrol; /* 0??????1???赤?‾??,2-???‾?? */
	BYTE byVirtualSerialPort;  //?谷??????㊣角??
	BYTE byRes[3];
}NET_DVR_USB_RS232, *LPNET_DVR_USB_RS232;

//RS232????????????(9000????)
typedef struct
{
	DWORD dwSize;
	NET_DVR_SINGLE_RS232 struRs232[MAX_SERIAL_PORT];/*℅????????芍?????????????????????芍??????????????????℅谷?芍??*/
	NET_DVR_PPPCFG_V30 struPPPConfig;
}NET_DVR_RS232CFG_V30, *LPNET_DVR_RS232CFG_V30;

//RS232????????????
typedef struct
{
	DWORD dwSize;
	DWORD dwBaudRate;//?“????(bps)??0??50??1??75??2??110??3??150??4??300??5??600??6??1200??7??2400??8??4800??9??9600??10??19200?? 11??38400??12??57600??13??76800??14??115.2k;
	BYTE byDataBit;// ?????????? 0??5????1??6????2??7????3??8??;
	BYTE byStopBit;// ?????? 0??1????1??2??;
	BYTE byParity;// ???谷 0???????谷??1???????谷??2???????谷;
	BYTE byFlowcontrol;// 0??????1???赤?‾??,2-???‾??
	DWORD dwWorkMode;// ?∟℅‾??????0??????????(232????????PPP????)??1???????“(232????????????????)??2?????‾?“??
	NET_DVR_PPPCFG struPPPConfig;
}NET_DVR_RS232CFG, *LPNET_DVR_RS232CFG;


typedef struct
{
	DWORD dwEnablePresetChan;    /*?????∟???????“??, 0xfffffff㊣赤?????‾???∟????*/
	DWORD dwPresetPointNo;        /*?‾???∟?????“?????????∟?????辰??, 0xfffffff㊣赤?????‾???∟??????*/
}NET_DVR_PRESETCHAN_INFO, LPNET_DVR_PRESETCHAN_INFO;

typedef struct
{
	DWORD dwEnableCruiseChan;    /*???????????“??*/
	DWORD dwCruiseNo;        /*?????“????????????㊣角??, 0xfffffff㊣赤?????∫*/
}NET_DVR_CRUISECHAN_INFO, LPNET_DVR_CRUISECHAN_INFO;

typedef struct
{
	DWORD dwEnablePtzTrackChan;    /*???????“?足?????“??*/
	DWORD dwPtzTrackNo;        /*???“?足???“????????㊣角??, 0xfffffff㊣赤?????∫*/
}NET_DVR_PTZTRACKCHAN_INFO, LPNET_DVR_PTZTRACKCHAN_INFO;

typedef struct tagNET_DVR_PTZ_NOTIFICATION_COND
{
	DWORD   dwSize;
	/*
	0-facedetection,
	1-vehicleDetection,
	2-scenechangedetection,
	3-LineDetection,
	4-regionEntrance,
	5-regionExiting,
	6-loitering,
	7-group,
	8-rapidMove,
	9-parking,
	10-unattendedBaggage,
	11-attendedBaggage,
	12-audioDetection,
	13-PIR,
	14-defocusDetection
	15-temperature,
	16-fireDetection,
	17-thermometry,
	18-shipsDetection
	19-fieldDetection
	20-blackListFaceContrast
	21-whiteListFaceContrast
	22- humanRecognition
	23- faceContrast
	*/
	WORD    byEventType;
	BYTE    byRes[2];
	DWORD   dwChannel;
	BYTE    byRes1[128];
}NET_DVR_PTZ_NOTIFICATION_COND, *LPNET_DVR_PTZ_NOTIFICATION_COND;

typedef struct tagNET_DVR_PTZ_NOTIFICATION_CFG
{
	DWORD   dwSize;
	DWORD   dwEnablePresetChanNum;  //?㊣?∼???????∟??????????
	NET_DVR_PRESETCHAN_INFO struPresetChanInfo[MAX_CHANNUM_V40]; //???????∟????????(?????????角?? ptz)
	DWORD   dwEnableCruiseChanNum;  //?㊣?∼?????????????“??????
	NET_DVR_CRUISECHAN_INFO struCruiseChanInfo[MAX_CHANNUM_V40]; //?????????????“????????(?????????角?? ptz)
	DWORD   dwEnablePtzTrackChanNum;  //?㊣?∼?????????“?足?????“??????
	NET_DVR_PTZTRACKCHAN_INFO struPtzTrackInfo[MAX_CHANNUM_V40]; //?‾?????“?足?????“??????(?????????角?? ptz)
	BYTE      byRes1[1024];
}NET_DVR_PTZ_NOTIFICATION_CFG, *LPNET_DVR_PTZ_NOTIFICATION_CFG;


typedef struct tagNET_DVR_PTZ_NOTIFICATION
{
	DWORD   dwSize;
	/*
	0-facedetection,
	1-vehicleDetection,
	2-scenechangedetection,
	3-LineDetection,
	4-regionEntrance,
	5-regionExiting,
	6-loitering,
	7-group,
	8-rapidMove,
	9-parking,
	10-unattendedBaggage,
	11-attendedBaggage,
	12-audioDetection,
	13-PIR,
	14-defocusDetection??
	15-temperature,
	16-fireDetection,
	17-thermometry,
	18-shipsDetection
	19-fieldDetection
	20-blackListFaceContrast
	21-whiteListFaceContrast
	22- humanRecognition
	*/
	WORD    byEventType;
	BYTE    byRes[62];
	DWORD   dwEnablePresetChanNum;  //?㊣?∼???????∟??????????
	NET_DVR_PRESETCHAN_INFO struPresetChanInfo[MAX_CHANNUM_V40]; //???????∟????????(?????????角?? ptz)
	DWORD   dwEnableCruiseChanNum;  //?㊣?∼?????????????“??????
	NET_DVR_CRUISECHAN_INFO struCruiseChanInfo[MAX_CHANNUM_V40]; //?????????????“????????(?????????角?? ptz)
	DWORD   dwEnablePtzTrackChanNum;  //?㊣?∼?????????“?足?????“??????
	NET_DVR_PTZTRACKCHAN_INFO struPtzTrackInfo[MAX_CHANNUM_V40]; //?‾?????“?足?????“??????(?????????角?? ptz)
	BYTE      byRes1[1024];
}NET_DVR_PTZ_NOTIFICATION, *LPNET_DVR_PTZ_NOTIFICATION;

#define NET_SDK_MAX_EVENT_NUM 64  //℅谷??????℅??車?∫??????

//㊣“??????????????(256?﹞NVR????)
typedef struct tagNET_DVR_ALARMINCFG_V40
{
	DWORD dwSize;
	BYTE sAlarmInName[NAME_LEN];    /* ???? */
	BYTE byAlarmType;                //㊣“???‾?角??,0??????,1????㊣?
	BYTE byAlarmInHandle;            /* ??﹞????赤 0-?????赤 1-???赤*/
	BYTE byChannel;                 // ㊣“????????﹞???????㊣??“??
	BYTE byInputType;                //?????角??  0-??????﹞???  1-??????﹞???
	DWORD   dwHandleType;        //?足?????赤,?足?????赤﹞?????"?辰"?芍??   
								 /*0x00: ???足??*/
								 /*0x01: ?角???‾??????*/
								 /*0x02: ?迄??????*/
								 /*0x04: ????????*/
								 /*0x08: ??﹞?㊣“??????*/
								 /*0x10: ??﹞?JPRG℅?????????Email*/
								 /*0x20: ?????迄??㊣“???‾????*/
								 /*0x40: ??????℅?????(???∼????PCNVR?∫??)*/
								 /*0x200: ℅?????????FTP*/
								 /*0x1000:℅???????????*/
								 /*0x2000:????㊣“??*/
	DWORD   dwMaxRelAlarmOutChanNum; //??﹞???㊣“???????“?????“??????℅??車?∫??????
	DWORD   dwRelAlarmOutChanNum; //??﹞???㊣“???????“???? ?????∫????
	DWORD   dwRelAlarmOut[MAX_ALARMOUT_V40]; //??﹞?㊣“???“??
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
																   /*??﹞????????“??*/
	DWORD   dwMaxRecordChanNum;   //?豕㊣??∫????℅??車?????????“????-????
	DWORD   dwCurRecordChanNum;    //?㊣?∼?????????????????????“????
	DWORD   dwRelRecordChan[MAX_CHANNUM_V40];     /* ??????﹞??????“????∼???㊣赤??,????????????????????㊣那0 - dwCurRecordChanNum -1???∫??????????????0xffffffff,?辰?車?????∫*/
	DWORD   dwMaxEnablePtzCtrlNun; //℅??車???????????“????℅???(????)
	DWORD   dwEnablePresetChanNum;  //?㊣?∼???????∟??????????
	NET_DVR_PRESETCHAN_INFO struPresetChanInfo[MAX_CHANNUM_V40]; //???????∟????????
	BYTE    byPresetDurationTime[MAX_CHANNUM_V40];//?∟?????????㊣?? ﹞??∫0-20s??????10s??
	BYTE    byRes2[4];                    /*㊣???*/
	DWORD   dwEnableCruiseChanNum;  //?㊣?∼?????????????“??????
	NET_DVR_CRUISECHAN_INFO struCruiseChanInfo[MAX_CHANNUM_V40]; //?????????????“????????
	DWORD   dwEnablePtzTrackChanNum;  //?㊣?∼?????????????“??????
	NET_DVR_PTZTRACKCHAN_INFO struPtzTrackInfo[MAX_CHANNUM_V40]; //?‾?????“?足?????“??????
	WORD   wEventType[NET_SDK_MAX_EVENT_NUM/*64*/]; /*℅谷???????角?????????????????????????角??*/
	BYTE    byRes[128];
}NET_DVR_ALARMINCFG_V40, *LPNET_DVR_ALARMINCFG_V40;

//㊣“??????????????(9000????)
typedef struct
{
	DWORD dwSize;
	BYTE sAlarmInName[NAME_LEN];    /* ???? */
	BYTE byAlarmType;                //㊣“???‾?角??,0??????,1????㊣?
	BYTE byAlarmInHandle;            /* ??﹞????赤 0-?????赤 1-???赤*/
	BYTE byChannel;                 // ㊣“????????﹞???????㊣??“??
	BYTE byInputType;                //?????角??  0-??????﹞???  1-??????﹞???    
	NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
	BYTE byRelRecordChan[MAX_CHANNUM_V30]; //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	BYTE byEnablePreset[MAX_CHANNUM_V30];        /* ??﹞??‾???∟???? 0-﹞?,1-??*/
	BYTE byPresetNo[MAX_CHANNUM_V30];            /* ?‾???????“?∟?????辰??,????㊣“???????????‾???角???“???????“?∟????, 0xff㊣赤?????‾???∟??????*/
	BYTE byRes2[192];                    /*㊣???*/
	BYTE byEnableCruise[MAX_CHANNUM_V30];        /* ??﹞??‾?????? 0-﹞?,1-??*/
	BYTE byCruiseNo[MAX_CHANNUM_V30];            /* ???? */
	BYTE byEnablePtzTrack[MAX_CHANNUM_V30];        /* ??﹞??‾???足?? 0-﹞?,1-??*/
	BYTE byPTZTrack[MAX_CHANNUM_V30];            /* ?‾???????“???足???辰?? */
	BYTE byRes3[16];
}NET_DVR_ALARMINCFG_V30, *LPNET_DVR_ALARMINCFG_V30;


typedef struct tagNET_DVR_ALARMINFO_FIXED_HEADER
{
	/*0-??????㊣“??,1-?????迆,2-???????∫??3???????足????4??????????????,5-?????????赤,6-????㊣“????
	7-??????????, 8-﹞?﹞“﹞?????9-?????????足????10-?????足????11-???????∼㊣?????12-?車???足????13-?∼??/????﹞?㊣?????????,
	14-?那??????℅????∫∼?,15-?????足??㊣“??, 16-??㊣??足????17-?????‾?迆㊣“????18-???????????車㊣“??,19-???????∫??20-??????????
	21-??㊣???????22-?????足????﹞“?足????23-????㊣“??,24-???????????足??,25-??????㊣??邦,26-??????????㊣??邦,27-POC?足??,28-?角?迆?????足????
	30-?㊣??SD?“*/
	DWORD dwAlarmType;//㊣“???角??
	NET_DVR_TIME_EX struAlarmTime;    //﹞??迆㊣“?????㊣??
	union
	{
		BYTE    byUnionLen[116];  //﹞?????8??℅????????????㊣??
		struct
		{
			DWORD    dwAlarmInputNo;        //﹞??迆㊣“????㊣“???????“??????????????????
			DWORD    dwTrigerAlarmOutNum;    /*??﹞???㊣“?????????????????車??????㊣??∟??????﹞????迄????﹞???㊣“???????“????????℅???㊣赤??????*/
			DWORD    dwTrigerRecordChanNum;    /*??﹞????????“?????????????車??????㊣??∟??????﹞????迄????﹞????????“????????℅???㊣赤??????*/
		}struIOAlarm;    // ㊣“???角??dwAlarmType??0?㊣???∫
		struct
		{
			DWORD    dwAlarmChanNum;    /*﹞??迆㊣“???“?????????????????車??????㊣??∟??????﹞????迄??﹞??迆??㊣“???“????????℅???㊣赤??????*/
		}struAlarmChannel;    // dwAlarmType??2??3??6??9??10??13?辰28?㊣???∫
		struct
		{
			DWORD    dwAlarmHardDiskNum;    /*﹞??迆㊣“?????????????∟?????????車??????㊣??∟??????﹞????迄??﹞??迆㊣“????????????????㊣赤??????*/
		}struAlarmHardDisk;    // dwAlarmType??1,4,5?㊣???∫
		struct
		{
			BYTE       bySubAlarmType;  //㊣“??℅??角????1-???邦?????????? 
			BYTE       byRes1[3]; //㊣???
			NET_DVR_TIME_EX  struRecordEndTime; //?????芍???㊣??
		}struRecordingHost;  //?????‾?迆℅“??㊣“??
	}uStruAlarm;
	DWORD*  pRes;    //????????64?????芍????℅?????????????
	BYTE    byTimeDiffFlag;      /*?㊣??℅?????﹞????∫  0-?㊣?????∫?? 1-?㊣?????∫ */
	char    cTimeDifferenceH;         /*??UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????,??byTimeDiffFlag??1?㊣???∫*/
	char    cTimeDifferenceM;      	/*??UTC???㊣???“﹞???????-30, 30, 45?? +㊣赤????????byTimeDiffFlag??1?㊣???∫*/
	BYTE    byRes2[5]; //㊣???
}NET_DVR_ALRAM_FIXED_HEADER, *LPNET_DVR_ALARM_FIXED_HEADER;

//????㊣“??????(256?﹞NVR????)
typedef struct NET_DVR_ALARMINFO_V40
{
	NET_DVR_ALRAM_FIXED_HEADER     struAlarmFixedHeader;    //㊣“?????“??﹞?
	DWORD*                        pAlarmData;    //㊣“????㊣???﹞?????
}NET_DVR_ALARMINFO_V40, *LPNET_DVR_ALARMINFO_V40;

//㊣“??????????????
typedef struct
{
	DWORD dwSize;
	BYTE sAlarmInName[NAME_LEN];    /* ???? */
	BYTE byAlarmType;    //㊣“???‾?角??,0??????,1????㊣?
	BYTE byAlarmInHandle;    /* ??﹞????赤 0-?????赤 1-???赤*/
	BYTE byChannel;                 // ㊣“????????﹞???????㊣??“??
	BYTE byRes;
	NET_DVR_HANDLEEXCEPTION struAlarmHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT];//??﹞??㊣??
	BYTE byRelRecordChan[MAX_CHANNUM]; //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	BYTE byEnablePreset[MAX_CHANNUM];        /* ??﹞??‾???∟???? 0-﹞?,1-??*/
	BYTE byPresetNo[MAX_CHANNUM];            /* ?‾???????“?∟?????辰??,????㊣“???????????‾???角???“???????“?∟????, 0xff㊣赤?????‾???∟??????*/
	BYTE byEnableCruise[MAX_CHANNUM];        /* ??﹞??‾?????? 0-﹞?,1-??*/
	BYTE byCruiseNo[MAX_CHANNUM];            /* ???? */
	BYTE byEnablePtzTrack[MAX_CHANNUM];        /* ??﹞??‾???足?? 0-﹞?,1-??*/
	BYTE byPTZTrack[MAX_CHANNUM];            /* ?‾???????“???足???辰?? */
}NET_DVR_ALARMINCFG, *LPNET_DVR_ALARMINCFG;

//????㊣“??????????????
typedef struct
{
	DWORD     dwSize;
	BYTE        byEnableAlarmHandle; //???赤㊣“??????
	BYTE        byRes1[3];
	BYTE        byAlarmInName[NAME_LEN]; //????㊣“??????????
	WORD        wAlarmInUpper; //??????????????????????????10??﹞??∫0~360
	WORD        wAlarmInLower; //??????????????????????????10??﹞??∫0~360 
	NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
	BYTE        byRelRecordChan[MAX_CHANNUM_V30]; //㊣???﹞????????“??
	BYTE        byRes2[100];
}NET_DVR_ANALOG_ALARMINCFG, *LPNET_DVR_ANALOG_ALARMINCFG;

//????㊣“??????(9000????)
typedef struct
{
	DWORD dwAlarmType;/*0-??????㊣“??,1-?????迆,2-???????∫,3???????足??,4??????????????,5-???????????赤,6-????㊣“??,7-??????????, 8-﹞?﹞“﹞???, 9-?????????足??,
					  10-?????足??,11- ???????∼㊣???,12-?車???足??,13-?∼??/????﹞?㊣?????????,14-?那??????℅????∫∼?,15-?????足??, 16-POE?????足??㊣“??,17-???????足??,
					  18-?????迆?????足??㊣“??,19-???????∫??20-??????????21-??㊣???????22-?????足????﹞“?足????23-????㊣“??,24-???????????足??,25-??????㊣??邦,26-??????????㊣??邦,27-POC?足??
					  28-?角?迆?????足??,29-????????30-?㊣??SD?“*/
	DWORD dwAlarmInputNumber;/*㊣“??????????*/
	BYTE byAlarmOutputNumber[MAX_ALARMOUT_V30];/*??﹞???????????????1㊣赤??????????*/
	BYTE byAlarmRelateChannel[MAX_CHANNUM_V30];/*??﹞????????“??????1㊣赤??????????, dwAlarmRelateChannel[0]??????1???“??*/
	BYTE byChannel[MAX_CHANNUM_V30];/*dwAlarmType??2?辰3,6,9,10,14,19,28?㊣??㊣赤???????“????dwChannel[0]??????1???“??*/
	BYTE byDiskNumber[MAX_DISKNUM_V30];/*dwAlarmType??1,4,5?㊣,㊣赤??????????, dwDiskNumber[0]??????1??????*/
#ifdef SDK_CHEZAI
	NET_DVR_ADDIT_POSITION GPS_pos;  /* GPS?“?????? */
#endif
}NET_DVR_ALARMINFO_V30, *LPNET_DVR_ALARMINFO_V30;

typedef struct tagNET_DVR_ALARM_HOT_SPARE
{
	DWORD  dwSize;   //?芍????
	DWORD  dwExceptionCase;   //㊣“?????辰   0-?????足??
	NET_DVR_IPADDR  struDeviceIP;    //?迆?迆?足?????豕㊣?IP???﹞
	BYTE    byRes[256];         //㊣???
}NET_DVR_ALARM_HOT_SPARE, *LPNET_DVR_ALARM_HOT_SPARE;

typedef struct
{
	DWORD dwAlarmType;/*0-??????㊣“??,1-?????迆,2-???????∫,3???????足??,4??????????????,5-???????????赤,6-????㊣“??,7-??????????, 8-﹞?﹞“﹞???, 9-?????????足????10-?????足?? 11- ???????∼㊣???*/
	DWORD dwAlarmInputNumber;/*㊣“??????????*/
	DWORD dwAlarmOutputNumber[MAX_ALARMOUT];/*??﹞?????????????????????1㊣赤????????????????*/
	DWORD dwAlarmRelateChannel[MAX_CHANNUM];/*??﹞????????“????????????1㊣赤???????????﹞????, dwAlarmRelateChannel[0]??????1???“??*/
	DWORD dwChannel[MAX_CHANNUM];/*dwAlarmType??2?辰3,6,9,10?㊣??㊣赤???????“????dwChannel[0]????????1???“??*/
	DWORD dwDiskNumber[MAX_DISKNUM];/*dwAlarmType??1,4,5?㊣,㊣赤??????????, dwDiskNumber[0]????????1??????*/
}NET_DVR_ALARMINFO, *LPNET_DVR_ALARMINFO;

//////////////////////////////////////////////////////////////////////////////////////
//IPC????????????
/* IP?豕㊣??芍?? */
typedef struct
{
	DWORD dwEnable;                    /* ??IP?豕㊣???﹞????? */
	BYTE sUserName[NAME_LEN];        /* ???∫?? */
	BYTE sPassword[PASSWD_LEN];        /* ???? */
	NET_DVR_IPADDR struIP;            /* IP???﹞ */
	WORD wDVRPort;                     /* ?????? */
	BYTE byRes[34];                /* ㊣??? */
}NET_DVR_IPDEVINFO, *LPNET_DVR_IPDEVINFO;

#define  DEV_ID_LEN           32    //?豕㊣?ID?∟??

//ipc?????豕㊣????????????∫??ip?豕㊣????辰???赤??
typedef struct tagNET_DVR_IPDEVINFO_V31
{
	BYTE byEnable;                    //??IP?豕㊣???﹞????∫
	BYTE byProType;                    //???谷?角????0-???????谷??1-???????谷??2-?‾?芍
	BYTE byEnableQuickAdd;        // 0 ???∫???足???赤??  1 ?????足???赤?? 
								  // ?足???赤???豕???豕㊣?IP?????谷?角???????????????豕㊣????????“
	BYTE byCameraType;    //?“?????????角?迆?角???????? 0-????????1-?????迆℅???2-?∫?迆?迆℅???3-???????∼??4-?∫?迆???∼??5-?角??????6“C?????“??,7-?∫?迆?“??,8-∼??谷?“??,9-∼??谷?角?迆
	BYTE sUserName[NAME_LEN];        //???∫??
	BYTE sPassword[PASSWD_LEN];        //????
	BYTE byDomain[MAX_DOMAIN_NAME];    //?豕㊣??辰??
	NET_DVR_IPADDR struIP;            //IP???﹞
	WORD wDVRPort;                     // ??????
	BYTE  szDeviceID[DEV_ID_LEN];  //?豕㊣?ID
	BYTE byEnableTiming;  //0-㊣?????1-??????NVR??IPC℅??????㊣??2-????NVR??IPC℅??????㊣
	BYTE byCertificateValidation;//?∟?谷?谷?∟
								 // byCertificateValidation:bit0: 0-???????∟?谷?谷?∟ 1-?????∟?谷?谷?∟
								 // byCertificateValidation:bit1: 0-???????????“?????? 1-?????????“??????
}NET_DVR_IPDEVINFO_V31, *LPNET_DVR_IPDEVINFO_V31;

/* IP?“?????????? */
typedef struct
{
	BYTE byEnable;                    /* ???“????﹞????? */
	BYTE byIPID;                    //IP?豕㊣?ID??8?????㊣?豕㊣?ID??0?㊣㊣赤???“????????
	BYTE byChannel;                    /* ?“???? */
	BYTE byIPIDHigh;                // IP?豕㊣?ID????8??
	BYTE byTransProtocol;            //???????谷?角??0-TCP/auto(???????豕㊣????“)??1-UDP 2-?角?? 3-??TCP 4-auto
	BYTE byGetStream;         /* ??﹞??????“?????‾??0-????1-﹞?*/
	BYTE byres[30];                    /* ㊣??? */
} NET_DVR_IPCHANINFO, *LPNET_DVR_IPCHANINFO;

/* IP?????????芍?? */
typedef struct
{
	DWORD dwSize;                                        /* ?芍???車?? */
	NET_DVR_IPDEVINFO  struIPDevInfo[MAX_IP_DEVICE];    /* IP?豕㊣? */
	BYTE byAnalogChanEnable[MAX_ANALOG_CHANNUM];        /* ?????“????﹞???????????????㊣赤??1-32?“????0㊣赤?????∫ 1???∫ */
	NET_DVR_IPCHANINFO struIPChanInfo[MAX_IP_CHANNEL];    /* IP?“?? */
}NET_DVR_IPPARACFG, *LPNET_DVR_IPPARACFG;
/* ????IP?????????芍?? */
typedef struct tagNET_DVR_IPPARACFG_V31
{
	DWORD dwSize;                                        /* ?芍???車?? */
	NET_DVR_IPDEVINFO_V31  struIPDevInfo[MAX_IP_DEVICE];    /* IP?豕㊣? */
	BYTE byAnalogChanEnable[MAX_ANALOG_CHANNUM];        /* ?????“????﹞???????????????㊣赤??1-32?“????0㊣赤?????∫ 1???∫ */
	NET_DVR_IPCHANINFO struIPChanInfo[MAX_IP_CHANNEL];    /* IP?“?? */
}NET_DVR_IPPARACFG_V31, *LPNET_DVR_IPPARACFG_V31;

typedef  struct tagNET_DVR_IPSERVER_STREAM
{
	BYTE    byEnable;   // ??﹞?????
	BYTE    byRes[3];               // ㊣???℅???
	NET_DVR_IPADDR struIPServer;    //IPServer ???﹞
	WORD    wPort;                  //IPServer ????
	WORD    wDvrNameLen;            // DVR ?????∟??
	BYTE    byDVRName[NAME_LEN];    // DVR????
	WORD    wDVRSerialLen;          // ?辰?????∟??
	WORD    byRes1[2];              // ㊣???℅???
	BYTE    byDVRSerialNumber[SERIALNO_LEN];    // DVR?辰?????∟??
	BYTE    byUserName[NAME_LEN];   // DVR ???????∫??
	BYTE    byPassWord[PASSWD_LEN]; // DVR????????
	BYTE    byChannel;              // DVR ?“??
	BYTE    byRes2[11];             //  ㊣???℅???
}NET_DVR_IPSERVER_STREAM, *LPNET_DVR_IPSERVER_STREAM;

//?‾????﹞????‾?迄㊣?????
typedef struct tagNET_DVR_STREAM_MEDIA_SERVER_CFG
{
	BYTE    byValid;            /*??﹞?????*/
	BYTE    byRes1[3];
	NET_DVR_IPADDR  struDevIP;
	WORD    wDevPort;            /*?‾????﹞????‾????*/
	BYTE    byTransmitType;        /*???????谷?角?? 0-TCP??1-UDP*/
	BYTE    byRes2[69];
}NET_DVR_STREAM_MEDIA_SERVER_CFG, *LPNET_DVR_STREAM_MEDIA_SERVER_CFG;

//?豕㊣??“??????
typedef struct tagNET_DVR_DEV_CHAN_INFO
{
	NET_DVR_IPADDR     struIP;            //DVR IP???﹞
	WORD     wDVRPort;                 //??????
	BYTE     byChannel;                //?“????
	BYTE    byTransProtocol;        //???????谷?角??0-TCP??1-UDP
	BYTE    byTransMode;            //???????‾???? 0???‾???‾ 1??℅????‾
	BYTE    byFactoryType;            /*?∼???豕㊣??∫???角??,?“??????????*/
	BYTE    byDeviceType; //?豕㊣??角??(????℅??????“????∼?????)??1-?????‾?“???㊣?迄??????℅??????“????????byVcaSupportChanMode℅????????“???????????“???????????“??????2-㊣角???‾
	BYTE    byDispChan;//?????“????,????????????
	BYTE    bySubDispChan;//?????“??℅??“???????????????㊣????
	BYTE    byResolution;    //; 1-CIF 2-4CIF 3-720P 4-1080P 5-500w?車???????‾???????車???????‾?芍?迄????????﹞???????℅???
	BYTE    byRes[2];
	BYTE    byDomain[MAX_DOMAIN_NAME];    //?豕㊣??辰??
	BYTE    sUserName[NAME_LEN];    //?角???‾?迆????????
	BYTE    sPassword[PASSWD_LEN];    //?角???‾?迆????
}NET_DVR_DEV_CHAN_INFO, *LPNET_DVR_DEV_CHAN_INFO;

//?㊣???“???‾???????‾
typedef struct tagNET_DVR_PU_STREAM_CFG
{
	DWORD                                dwSize;
	NET_DVR_STREAM_MEDIA_SERVER_CFG    struStreamMediaSvrCfg;
	NET_DVR_DEV_CHAN_INFO                struDevChanInfo;
}NET_DVR_PU_STREAM_CFG, *LPNET_DVR_PU_STREAM_CFG;

typedef struct tagNET_DVR_DDNS_STREAM_CFG
{
	BYTE   byEnable;   // ??﹞?????
	BYTE   byRes1[3];
	NET_DVR_IPADDR  struStreamServer;            //?‾????﹞????‾???﹞
	WORD   wStreamServerPort;           //?‾????﹞????‾????   
	BYTE   byStreamServerTransmitType;  //?‾???????????谷?角?? 0-TCP??1-UDP
	BYTE   byRes2;
	NET_DVR_IPADDR   struIPServer;          //IPSERVER???﹞
	WORD   wIPServerPort;        //IPserver??????
	BYTE   byRes3[2];
	BYTE   sDVRName[NAME_LEN];   //DVR????
	WORD   wDVRNameLen;            // DVR?????∟??
	WORD   wDVRSerialLen;          // ?辰?????∟??
	BYTE   sDVRSerialNumber[SERIALNO_LEN];    // DVR?辰????
	BYTE   sUserName[NAME_LEN];   // DVR ???????∫??
	BYTE   sPassWord[PASSWD_LEN]; // DVR????????
	WORD   wDVRPort;   //DVR??????
	BYTE   byRes4[2];
	BYTE   byChannel;              // DVR ?“??
	BYTE   byTransProtocol; //???????谷?角??0-TCP??1-UDP
	BYTE   byTransMode; //???????‾???? 0???‾???‾ 1??℅????‾
	BYTE   byFactoryType; //?∼???豕㊣??∫???角??,?“??????????
}NET_DVR_DDNS_STREAM_CFG, *LPNET_DVR_DDNS_STREAM_CFG;

#define URL_LEN     240   //URL?∟??
typedef struct tagNET_DVR_PU_STREAM_URL
{
	BYTE    byEnable;
	BYTE    strURL[URL_LEN];
	BYTE    byTransPortocol; // ???????谷?角?? 0-tcp  1-UDP
	WORD    wIPID;  //?豕㊣?ID????wIPID = iDevInfoIndex + iGroupNO*64 +1
	BYTE    byChannel;  //?“????
	BYTE    byRes[7];
}NET_DVR_PU_STREAM_URL, *LPNET_DVR_PU_STREAM_URL;

typedef struct tagNET_DVR_HKDDNS_STREAM
{
	BYTE    byEnable;                 // ??﹞?????
	BYTE    byRes[3];               // ㊣???℅???
	BYTE    byDDNSDomain[64];        // hiDDNS﹞????‾
	WORD    wPort;                  // hiDDNS ????
	WORD    wAliasLen;              // ㊣????∟??
	BYTE    byAlias[NAME_LEN];         // ㊣???
	WORD    wDVRSerialLen;          // ?辰?????∟??
	BYTE    byRes1[2];              // ㊣???℅???
	BYTE    byDVRSerialNumber[SERIALNO_LEN];    // DVR?辰????
	BYTE    byUserName[NAME_LEN];   // DVR ???????∫??
	BYTE    byPassWord[PASSWD_LEN]; // DVR????????
	BYTE    byChannel;              // DVR?“??
	BYTE    byRes2[11];             // ㊣???℅?    
}NET_DVR_HKDDNS_STREAM, *LPNET_DVR_HKDDNS_STREAM;

typedef struct tagNET_DVR_IPCHANINFO_V40
{
	BYTE    byEnable;                /* ???“????﹞????? */
	BYTE    byRes1;
	WORD    wIPID;                  //IP?豕㊣?ID
	DWORD     dwChannel;                //?“????
	BYTE    byTransProtocol;        //???????谷?角??0-TCP??1-UDP??2- ?角????3-RTSP??0xff- auto(℅???)
	BYTE    byTransMode;            //???????‾???? 0???‾???‾ 1??℅????‾
	BYTE    byFactoryType;            /*?∼???豕㊣??∫???角??,?“??????????*/
	BYTE    byRes;
	BYTE    strURL[URL_LEN/*240*/];   /*RTSP???谷???‾URL ?“??RTSP???谷?㊣???∫??*/
}NET_DVR_IPCHANINFO_V40, *LPNET_DVR_IPCHANINFO_V40;

// ∼???CVR
#define MAX_ID_COUNT    256
#define MAX_STREAM_ID_COUNT    1024
#define STREAM_ID_LEN   32
#define PLAN_ID_LEN  32
#define DEVICE_NO_LEN  24
#define MAX_VOLUMENAME_LEN 32  //?????赤????
#define MAX_VAG_CHANNO_LEN  32  //VAG???谷???‾?㊣?“????㊣角???∟??

#define MAX_STREAM_ID_NUM    30        //℅??車?‾ID????

// ?‾???? - 72℅????∟
typedef struct tagNET_DVR_STREAM_INFO
{
	DWORD dwSize;
	BYTE  byID[STREAM_ID_LEN];      //ID????
	DWORD dwChannel;                //?????豕㊣??“????????0xffffffff?㊣??㊣赤????????
	BYTE  byRes[32];                //㊣???
}NET_DVR_STREAM_INFO, *LPNET_DVR_STREAM_INFO;

typedef struct tagNET_DVR_RTSP_PROTOCAL_CFG
{
	BYTE    byEnable;
	BYTE    byLocalBackUp; //??﹞?㊣???㊣?﹞? 
	BYTE    byRes[2];
	BYTE    strURL[URL_LEN_V40];
	DWORD   dwProtocalType;   //???谷?角??
	BYTE    sUserName[NAME_LEN];   //?豕㊣????????∫??
	BYTE    sPassWord[PASSWD_LEN]; // ?豕㊣?????????
	BYTE    byAddress[MAX_DOMAIN_NAME];  //?∼??IP?辰???辰??,?豕???豕㊣?????
										 //????﹞???????℅???????????'.'?辰???????辰??,﹞??辰??IP???﹞
	WORD    wPort;
	BYTE    byRes1[122];             //㊣???
}NET_DVR_RTSP_PROTOCAL_CFG, *LPNET_DVR_RTSP_PROTOCAL_CFG;

typedef union tagNET_DVR_GET_STREAM_UNION
{
	NET_DVR_IPCHANINFO      struChanInfo;    /*IP?“??????*/
	NET_DVR_IPSERVER_STREAM struIPServerStream;  // IPServer???‾
	NET_DVR_PU_STREAM_CFG   struPUStream;     //  ?“???∼???豕㊣??????‾???????‾
	NET_DVR_DDNS_STREAM_CFG struDDNSStream;     //?“??IPServer???‾???????‾
	NET_DVR_PU_STREAM_URL   struStreamUrl;        //?“???‾??????url???‾
	NET_DVR_HKDDNS_STREAM    struHkDDNSStream;   //?“??hiDDNS?????‾
	NET_DVR_IPCHANINFO_V40 struIPChan; //?㊣?????豕㊣????‾?“??????
}NET_DVR_GET_STREAM_UNION, *LPNET_DVR_GET_STREAM_UNION;

typedef enum
{
	NET_SDK_IP_DEVICE = 0,
	NET_SDK_STREAM_MEDIA,
	NET_SDK_IPSERVER,
	NET_SDK_DDNS_STREAM_CFG,
	NET_SDK_STREAM_MEDIA_URL,
	NET_SDK_HKDDNS,
	NET_SDK_IP_DEVICE_ADV,
	NET_SDK_IP_DEVICE_V40,
	NET_SDK_RTSP
}GET_STREAM_TYPE;

typedef struct tagNET_DVR_STREAM_MODE
{
	BYTE    byGetStreamType; //???‾﹞???GET_STREAM_TYPE??0-?㊣?????豕㊣????‾??1-???‾???????‾??2-?“??IPServer????ip???﹞?車???‾,3.?“??IPServer?????豕㊣??????“???‾???????豕㊣????‾
							 //4-?“???‾??????URL?????‾,5-?“??hkDDNS???‾??6-?㊣?????豕㊣????‾(????)??????NET_DVR_IPCHANINFO_V40?芍??, 7-?“??RTSP???谷﹞??????????‾
	BYTE    byRes[3];        //㊣???℅???
	NET_DVR_GET_STREAM_UNION uGetStream;    // ???????‾﹞????芍????
}NET_DVR_STREAM_MODE, *LPNET_DVR_STREAM_MODE;

//????IP?????????豕㊣?
typedef struct tagNET_DVR_IPPARACFG_V40
{
	DWORD      dwSize;                            /* ?芍???車?? */
	DWORD       dwGroupNum;                    //     ?豕㊣??∫????℅?℅谷??    
	DWORD      dwAChanNum;                    //℅??車?????“??????
	DWORD      dwDChanNum;                  //??℅??“??????
	DWORD      dwStartDChan;                    //??????℅??“??
	BYTE       byAnalogChanEnable[MAX_CHANNUM_V30];    /* ?????“????﹞???????????????㊣赤??1-64?“????0㊣赤?????∫ 1???∫ */
	NET_DVR_IPDEVINFO_V31   struIPDevInfo[MAX_IP_DEVICE_V40];      /* IP?豕㊣? */
	NET_DVR_STREAM_MODE  struStreamMode[MAX_CHANNUM_V30];
	BYTE            byRes2[20];                 // ㊣???℅???
}NET_DVR_IPPARACFG_V40, *LPNET_DVR_IPPARACFG_V40;


//??CVR??????㊣“???角??
typedef struct tagNET_DVR_ALARMINFO_DEV
{
	DWORD     dwAlarmType;  //0-㊣角???‾(?“??)??????㊣“????1-?????赤????????2- NVR﹞?????????
							//3-㊣角???‾℅????足????4-?????㊣???足????5-?????赤???角??????????
							//6-㊣角???‾(?“??)?????足??㊣“????7-㊣角???‾(?“??)????㊣“??????8-???????∫㊣“??; 9-???????㊣?角??㊣“??; 10-℅?????????????; 11- CVR℅????????足???? 12-?????足??
	NET_DVR_TIME   struTime;     //㊣“???㊣??
	BYTE       byRes[32];    //㊣???
	DWORD      dwNumber;     //????
	WORD       *pNO;         //dwNumber??WORD; ????WORD㊣赤???????“???????辰????????, ???∫?㊣??0
}NET_DVR_ALARMINFO_DEV, *LPNET_DVR_ALARMINFO_DEV;

/* ㊣“?????????? */
typedef struct
{
	BYTE byIPID;                    /* IP?豕㊣?ID????1- MAX_IP_DEVICE */
	BYTE byAlarmOut;                /* ㊣“???????? */
	BYTE byRes[18];                    /* ㊣??? */
}NET_DVR_IPALARMOUTINFO, *LPNET_DVR_IPALARMOUTINFO;

/* IP㊣“???????????芍?? */
typedef struct
{
	DWORD dwSize;                                    /* ?芍???車?? */
	NET_DVR_IPALARMOUTINFO struIPAlarmOutInfo[MAX_IP_ALARMOUT];/* IP㊣“?????? */
}NET_DVR_IPALARMOUTCFG, *LPNET_DVR_IPALARMOUTCFG;

/* IP㊣“?????????? */
typedef struct tagNET_DVR_IPALARMOUTINFO_V40
{
	DWORD dwIPID;                    /* IP?豕㊣?ID */
	DWORD dwAlarmOut;                /* IP?豕㊣?ID??????㊣“???????? */
	BYTE  byRes[32];                /* ㊣??? */
}NET_DVR_IPALARMOUTINFO_V40, *LPNET_DVR_IPALARMOUTINFO_V40;/*㊣“??????????*/

typedef struct tagNET_DVR_IPALARMOUTCFG_V40
{
	DWORD   dwSize;  //?芍?????∟??
	DWORD   dwCurIPAlarmOutNum;
	NET_DVR_IPALARMOUTINFO_V40 struIPAlarmOutInfo[MAX_IP_ALARMOUT_V40];/*IP㊣“??????*/
	BYTE     byRes[256];
}NET_DVR_IPALARMOUTCFG_V40, *LPNET_DVR_IPALARMOUTCFG_V40; /*IP㊣“??????*/

														  /* ㊣“?????????? */
typedef struct
{
	BYTE byIPID;                    /* IP?豕㊣?ID????1- MAX_IP_DEVICE */
	BYTE byAlarmIn;                    /* ㊣“???????? */
	BYTE byRes[18];                    /* ㊣??? */
}NET_DVR_IPALARMININFO, *LPNET_DVR_IPALARMININFO;

/* IP㊣“???????????芍?? */
typedef struct
{
	DWORD dwSize;                                    /* ?芍???車?? */
	NET_DVR_IPALARMININFO struIPAlarmInInfo[MAX_IP_ALARMIN];/* IP㊣“?????? */
}NET_DVR_IPALARMINCFG, *LPNET_DVR_IPALARMINCFG;

/* IP㊣“?????????? */
typedef struct tagNET_DVR_IPALARMININFO_V40
{
	DWORD dwIPID;                    /* IP?豕㊣?ID */
	DWORD dwAlarmIn;                /* IP?豕㊣?ID??????㊣“???????? */
	BYTE  byRes[32];                /* ㊣??? */
}NET_DVR_IPALARMININFO_V40, *LPNET_DVR_IPALARMININFO_V40;   /* ㊣“?????????? */

typedef struct tagNET_DVR_IPALARMINCFG_V40
{
	DWORD   dwSize;  //?芍?????∟??
	DWORD   dwCurIPAlarmInNum;  //?㊣?∼㊣“??????????
	NET_DVR_IPALARMININFO_V40 struIPAlarmInInfo[MAX_IP_ALARMIN_V40];/* IP㊣“??????*/
	BYTE     byRes[256];
}NET_DVR_IPALARMINCFG_V40, *LPNET_DVR_IPALARMINCFG_V40; /*IP㊣“??????℅???*/

														//ipc alarm info
typedef struct tagNET_DVR_IPALARMINFO
{
	NET_DVR_IPDEVINFO  struIPDevInfo[MAX_IP_DEVICE];            /* IP?豕㊣? */
	BYTE byAnalogChanEnable[MAX_ANALOG_CHANNUM];                /* ?????“????﹞???????0-?????? 1-???? */
	NET_DVR_IPCHANINFO struIPChanInfo[MAX_IP_CHANNEL];            /* IP?“?? */
	NET_DVR_IPALARMININFO struIPAlarmInInfo[MAX_IP_ALARMIN];    /* IP㊣“?????? */
	NET_DVR_IPALARMOUTINFO struIPAlarmOutInfo[MAX_IP_ALARMOUT]; /* IP㊣“?????? */
}NET_DVR_IPALARMINFO, *LPNET_DVR_IPALARMINFO;

//ipc??????㊣?㊣“?????????? 9000_1.1
typedef struct tagNET_DVR_IPALARMINFO_V31
{
	NET_DVR_IPDEVINFO_V31  struIPDevInfo[MAX_IP_DEVICE];            /* IP?豕㊣? */
	BYTE byAnalogChanEnable[MAX_ANALOG_CHANNUM];                /* ?????“????﹞???????0-?????? 1-???? */
	NET_DVR_IPCHANINFO struIPChanInfo[MAX_IP_CHANNEL];            /* IP?“?? */
	NET_DVR_IPALARMININFO struIPAlarmInInfo[MAX_IP_ALARMIN];    /* IP㊣“?????? */
	NET_DVR_IPALARMOUTINFO struIPAlarmOutInfo[MAX_IP_ALARMOUT]; /* IP㊣“?????? */
}NET_DVR_IPALARMINFO_V31, *LPNET_DVR_IPALARMINFO_V31;

typedef struct tagNET_DVR_IPALARMINFO_V40
{
	NET_DVR_IPDEVINFO_V31 struIPDevInfo[MAX_IP_DEVICE_V40];           // IP?豕㊣?
	BYTE     byAnalogChanEnable[MAX_CHANNUM_V30];           /* ?????“????﹞???????0-?????? 1-???? */
	NET_DVR_IPCHANINFO struIPChanInfo[MAX_CHANNUM_V30];            /* IP?“?? */
	NET_DVR_IPALARMININFO struIPAlarmInInfo[MAX_IP_ALARMIN];    /* IP㊣“?????? */
	NET_DVR_IPALARMOUTINFO struIPAlarmOutInfo[MAX_IP_ALARMOUT]; /* IP㊣“?????? */
	BYTE                    byRes[20];                          // ㊣???℅???
}NET_DVR_IPALARMINFO_V40, *LPNET_DVR_IPALARMINFO_V40;

typedef enum _HD_STAT_
{
	HD_STAT_OK = 0,    /* ???? */
	HD_STAT_UNFORMATTED = 1,    /* ???????? */
	HD_STAT_ERROR = 2,    /* ?赤?車 */
	HD_STAT_SMART_FAILED = 3,    /* SMART℅??? */
	HD_STAT_MISMATCH = 4,    /* ?????? */
	HD_STAT_IDLE = 5,    /* ????*/
	NET_HD_STAT_OFFLINE = 6,    /* ????????????????℅??? */
	HD_RIADVD_EXPAND = 7,    /* ?谷???????????? */
	HD_STAT_REPARING = 10,   /* ????????????(9000 2.0) */
	HD_STAT_FORMATING = 11,   /* ??????????????(9000 2.0) */
}HD_STAT;


//㊣???????????????
typedef struct
{
	DWORD dwHDNo;         /*??????, ????0~MAX_DISKNUM_V30-1*/
	DWORD dwCapacity;     /*????????(?????豕??)*/
	DWORD dwFreeSpace;    /*???????角????(?????豕??)*/
	DWORD dwHdStatus;     //????℅???(?????豕??) HD_STAT 0-????, 1-????????, 2-?赤?車, 3-SMART℅???, 
						  //4-??????, 5-???? 6-?????????????? 7-?谷???????????? 10-????????????
						  //11-?????????????? 12-?????????????????? 13-?????????? 14-㊣?????????????
						  //15-????????(????????),16-?????“
	BYTE  byHDAttr;       /*0-???“, 1-???角; 2-???? 3-?????“CVR℅“??????4-????????*/
	BYTE  byHDType;          /*0-㊣???????,1-ESATA????,2-NAS????,3-iSCSI???? 4-Array?谷??????,5-SD?“,6-minSAS*/
	BYTE  byDiskDriver;   // ?? ?迆㊣赤??ASCII℅?﹞? 
	BYTE  byRes1;
	DWORD dwHdGroup;      /*??????????℅谷 1-MAX_HD_GROUP*/
	BYTE  byRecycling;   // ??﹞????﹞???? 0???????﹞??????1?????﹞????
	BYTE  bySupportFormatType;    /*?㊣?∼?????迄?∫???????????角??,???????㊣?∼?????????∫??byHDType=5(SD?“)?㊣;
								  ??bySupportFormatType=0,?辰?迆㊣赤?豕㊣?????℅??赤???????角??????????????;
								  bySupportFormatType:bit0: 0-?迆㊣赤???∫??FAT32???????角??,1-?迆㊣赤?∫??;
								  bySupportFormatType:bit1: 0-?迆㊣赤???∫??EXT4???????角??,1-?迆㊣赤?∫??;*/
	BYTE  byFormatType;         /*?㊣?∼???????????角??????: 0-?豕㊣????????????角??,1-???“FAT32??????(byHDType=5(SD?“)?㊣?迆?∫),
								2-???“EXT4??????(byHDType=5(SD?“)?㊣?迆?∫)*/
	BYTE  byRes2;
	DWORD  dwStorageType;    //∼???㊣赤?? 0-???∫?? ﹞?0-?∫??
							 // dwStorageType & 0x1 ㊣赤????﹞??????“????℅“????????     
							 // dwStorageType & 0x2  ㊣赤????﹞????谷??????℅“????????
							 // dwStorageType & 0x4 ㊣赤????﹞???????????℅“????????

	DWORD dwPictureCapacity; //????????????(?????豕??)??????:MB
	DWORD dwFreePictureSpace; //???角????????(?????豕??)??????:MB
	BYTE  byRes3[104];
}NET_DVR_SINGLE_HD, *LPNET_DVR_SINGLE_HD;

typedef struct
{
	DWORD dwSize;
	DWORD dwHDCount;          /*??????(?????豕??)*/
	NET_DVR_SINGLE_HD struHDInfo[MAX_DISKNUM_V30];//?????角????℅‾???豕???????????迆?∫??
}NET_DVR_HDCFG, *LPNET_DVR_HDCFG;

//㊣???????????????
typedef struct
{
	DWORD dwHDNo;         /*??????, ????0~MAX_DISKNUM_V30-1*/
	DWORD dwCapacity;     /*????????(?????豕??)*/
	DWORD dwFreeSpace;    /*???????角????(?????豕??)*/
	DWORD dwHdStatus;     //????℅???(?????豕??) HD_STAT 0-????, 1-????????, 2-?赤?車, 3-SMART℅???, 
						  //4-??????, 5-???? 6-?????????????? 7-?谷???????????? 10-????????????
						  //11-?????????????? 12-?????????????????? 13-?????????? 14-㊣?????????????
						  //15-????????(????????),16-?????“,17-?????“???㊣?芍㊣?????????,18-?????“????????????????,19-???????“?????足??㊣??????車????㊣???????????????,20-?????∟?“???足?????豕????CVR?????????????足????
						  //21-?????????‾?迆????????
	BYTE  byHDAttr;       /*0-???“, 1-???角; 2-??????3-??????4-????????*/
	BYTE  byHDType;          /*0-㊣???????,1-ESATA????,2-NAS????,3-iSCSI???? 4-Array?谷??????,5-SD?“,6-minSAS*/
	BYTE  byDiskDriver;   // ?? ?迆㊣赤??ASCII℅?﹞? 
	BYTE  byGenusGruop;  //??℅谷??0-㊣?????1-?車????2-????????3-?車????????4-??????????5-???∫????6-???辰??㊣???7-??????㊣???????
	DWORD dwHdGroup;      /*??????????℅谷 1-MAX_HD_GROUP*/
	BYTE  byRecycling;   // ??﹞????﹞???? 0???????﹞??????1?????﹞????
	BYTE  bySupportFormatType;    /*?㊣?∼?????迄?∫???????????角??,???????㊣?∼?????????∫??byHDType=5(SD?“)?㊣;
								  ??bySupportFormatType=0,?辰?迆㊣赤?豕㊣?????℅??赤???????角??????????????;
								  bySupportFormatType:bit0: 0-?迆㊣赤???∫??FAT32???????角??,1-?迆㊣赤?∫??;
								  bySupportFormatType:bit1: 0-?迆㊣赤???∫??EXT4???????角??,1-?迆㊣赤?∫??;*/
	BYTE  byFormatType;         /*?㊣?∼???????????角??????: 0-?豕㊣????????????角??,1-???“FAT32??????(byHDType=5(SD?“)?㊣?迆?∫),
								2-???“EXT4??????(byHDType=5(SD?“)?㊣?迆?∫)*/
	BYTE  byRes2;
	DWORD  dwStorageType;    //∼???㊣赤?? 0-???∫?? ﹞?0-?∫??
							 // dwStorageType & 0x1 ㊣赤????﹞??????“????℅“????????     
							 // dwStorageType & 0x2  ㊣赤????﹞????谷??????℅“????????
							 // dwStorageType & 0x4 ㊣赤????﹞???????????℅“????????

	DWORD dwPictureCapacity; //????????????(?????豕??)??????:MB
	DWORD dwFreePictureSpace; //???角????????(?????豕??)??????:MB
	BYTE  byDiskLocation[NET_SDK_DISK_LOCATION_LEN/*16*/];//????????????????????㊣?℅???????
	BYTE  bySupplierName[NET_SDK_SUPPLIER_NAME_LEN/*32*/];//????????????????
	BYTE  byDiskModel[NET_SDK_DISK_MODEL_LEN /*64*/];//??????????????
	char  szHDLocateIP[SDK_MAX_IP_LEN];//?????迄??IP????
	BYTE  byRes3[80];
}NET_DVR_SINGLE_HD_V50, *LPNET_DVR_SINGLE_HD_V50;

typedef struct
{
	DWORD dwSize;
	DWORD dwHDCount;          /*??????(?????豕??)*/
	NET_DVR_SINGLE_HD_V50 struHDInfoV50[MAX_DISKNUM_V30];//?????角????℅‾???豕???????????迆?∫??
	BYTE  byRes[128];
}NET_DVR_HDCFG_V50, *LPNET_DVR_HDCFG_V50;

typedef struct tagNET_DVR_HARD_DISK_SINGLE_VOLUME_INFO
{
	DWORD  dwSize;
	BYTE  byHDVolumeNo;      /*?????赤ID(?????豕??)*/
	BYTE  byType;       /*?????赤?角??:0-?????赤?“????㊣???????????1-?????赤?“????????????????﹞??????????㊣???????????????赤??,
						2-?????赤?“?????????????∫????????????????﹞??????????㊣???????????????赤???豕??????????3-?????赤?“?????????????∫??????????????*/
	BYTE  byRes1[2];
	DWORD  dwCapacity;     /*?????赤??????????MB(?????豕??)*/
	DWORD  dwFreeSpace;    /*?????赤???角??????????MB(?????豕??) */
	BYTE  byHDVolumeName[NET_SDK_DISK_VOLUME_LEN/*36*/];  /*?????赤????(?????豕??)*/
	BYTE  byLoopCover;    /*??﹞????﹞??????0-﹞????﹞??????1-???﹞?????“?????赤?迆?????車?????﹞????℅???????????*/
	BYTE  byRes[63];
}NET_DVR_HARD_DISK_SINGLE_VOLUME_INFO, *LPNET_DVR_HARD_DISK_SINGLE_VOLUME_INFO;

typedef struct tagNET_DVR_HARD_DISK_VOLUME_INFO
{
	DWORD  dwSize;
	DWORD  dwHDVolumeCount;      /*?㊣?∼?????赤℅???(?????豕??)*/
	NET_DVR_HARD_DISK_SINGLE_VOLUME_INFO struSingleVolumeInfo[NET_SDK_MAX_DISK_VOLUME/*33*/];    /*?????????赤????*/
	BYTE  byRes[128];
}NET_DVR_HARD_DISK_VOLUME_INFO, *LPNET_DVR_HARD_DISK_VOLUME_INFO;

//㊣?????℅谷????????????
typedef struct tagNET_DVR_SINGLE_HDGROUP_V40
{
	DWORD     dwHDGroupNo;       /*??℅谷??(?????豕??) 1-MAX_HD_GROUP*/
	DWORD      dwRelRecordChan[MAX_CHANNUM_V40];  //??﹞????????“????∼???㊣赤????????0xffffffff?㊣?車?????????∫     
	BYTE       byRes[64];                /* ㊣??? */
}NET_DVR_SINGLE_HDGROUP_V40, *LPNET_DVR_SINGLE_HDGROUP_V40;

typedef struct tagNET_DVR_HDGROUP_CFG_V40
{
	DWORD      dwSize;                //?芍?????車??
	DWORD     dwMaxHDGroupNum;           //?豕㊣??∫????℅??車??℅谷??-????
	DWORD     dwCurHDGroupNum;       /*?㊣?∼????????℅谷??*/
	NET_DVR_SINGLE_HDGROUP_V40 struHDGroupAttr[MAX_HD_GROUP]; //?????角????℅‾???豕???????????迆?∫??
	BYTE       byRes[128]; //㊣???
}NET_DVR_HDGROUP_CFG_V40, *LPNET_DVR_HDGROUP_CFG_V40;

//㊣?????℅谷????????
typedef struct
{
	DWORD dwHDGroupNo;       /*??℅谷??(?????豕??) 1-MAX_HD_GROUP*/
	BYTE byHDGroupChans[MAX_CHANNUM_V30]; /*??℅谷???????????“??, 0-㊣赤?????“???????車??????℅谷??1-㊣赤?????車??????℅谷*/
	BYTE byRes[8];
}NET_DVR_SINGLE_HDGROUP, *LPNET_DVR_SINGLE_HDGROUP;

typedef struct
{
	DWORD dwSize;
	DWORD dwHDGroupCount;        /*??℅谷℅???(?????豕??)*/
	NET_DVR_SINGLE_HDGROUP struHDGroupAttr[MAX_HD_GROUP];//?????角????℅‾???豕???????????迆?∫??
}NET_DVR_HDGROUP_CFG, *LPNET_DVR_HDGROUP_CFG;


//??????﹞????????芍??
typedef struct
{
	DWORD dwSize;
	DWORD dwMajorScale;    /* ?‾???? 0-????﹞???1-??﹞?*/
	DWORD dwMinorScale;    /* ?“???? 0-????﹞???1-??﹞?*/
	DWORD dwRes[2];
}NET_DVR_SCALECFG, *LPNET_DVR_SCALECFG;



//DVR㊣“??????(9000????)
typedef struct
{
	DWORD dwSize;
	BYTE sAlarmOutName[NAME_LEN];    /* ???? */
	DWORD dwAlarmOutDelay;    /* ????㊣????㊣??(-1??????????????㊣?) */
							  //0-5??,1-10??,2-30??,3-1﹞???,4-2﹞???,5-5﹞???,6-10﹞???,7-????,8-1??,9-2??,10-3??,11-4??
	NET_DVR_SCHEDTIME struAlarmOutTime[MAX_DAYS][MAX_TIMESEGMENT_V30];/* ㊣“???????∟???㊣???? */
	BYTE byAlarmOutHandle;            /* ??﹞????赤 0-???赤 1-?????赤*/
	BYTE byNormalSatus;            /* ???? 0-???? 1-??㊣?*/
	BYTE byRes[14];
}NET_DVR_ALARMOUTCFG_V30, *LPNET_DVR_ALARMOUTCFG_V30;

//DVR㊣“??????
typedef struct
{
	DWORD dwSize;
	BYTE sAlarmOutName[NAME_LEN];    /* ???? */
	DWORD dwAlarmOutDelay;    /* ????㊣????㊣??(-1??????????????㊣?) */
							  //0-5??,1-10??,2-30??,3-1﹞???,4-2﹞???,5-5﹞???,6-10﹞???,7-????, 8-1??, 9-3??
	NET_DVR_SCHEDTIME struAlarmOutTime[MAX_DAYS][MAX_TIMESEGMENT];/* ㊣“???????∟???㊣???? */
}NET_DVR_ALARMOUTCFG, *LPNET_DVR_ALARMOUTCFG;

//DVR㊣????∟??????(9000????)
/*???????????㊣?∼?∟?????????????????????????????????∟????????㊣???byPreviewNumber??0?“1????????bySwitchSeq[0][0] = 1,bySwitchSeq[0][1] = 2,bySwitchSeq[0][2] = 3
?辰㊣??????????㊣??1?????????車??????????∼?1,2,3?“?????辰????*/
typedef struct
{
	DWORD dwSize;
	BYTE byPreviewNumber;//?∟??????,0-1????,1-4????,2-9????,3-16????,0xff:℅??車????
	BYTE byEnableAudio;//??﹞??迄???∟??,0-???∟??,1-?∟??
	WORD wSwitchTime;//?????㊣??,0-??????,1-5s,2-10s,3-20s,4-30s,5-60s,6-120s,7-300s
	BYTE bySwitchSeq[MAX_PREVIEW_MODE][MAX_WINDOW_V30];//???????辰,????lSwitchSeq[i]?? 0xff㊣赤??????
	BYTE byRes[24];
}NET_DVR_PREVIEWCFG_V30, *LPNET_DVR_PREVIEWCFG_V30;

//DVR㊣????∟??????
typedef struct
{
	DWORD dwSize;
	BYTE byPreviewNumber;//?∟??????,0-1????,1-4????,2-9????,3-16????,0xff:℅??車????
	BYTE byEnableAudio;//??﹞??迄???∟??,0-???∟??,1-?∟??
	WORD wSwitchTime;//?????㊣??,0-??????,1-5s,2-10s,3-20s,4-30s,5-60s,6-120s,7-300s
	BYTE bySwitchSeq[MAX_WINDOW];//???????辰,????lSwitchSeq[i]?? 0xff㊣赤??????
}NET_DVR_PREVIEWCFG, *LPNET_DVR_PREVIEWCFG;

//DVR????????
typedef struct
{
	WORD wResolution;                            /* ﹞?㊣??? */
	WORD wFreq;                                    /* ???????? */
	DWORD dwBrightness;                            /* ???? */
}NET_DVR_VGAPARA;

/*
* MATRIX?????????芍??
*/
typedef struct
{
	WORD    wOrder[MAX_ANALOG_CHANNUM];        /* ?∟?????辰, 0xff㊣赤???角?????∼?????∟?? */
	WORD    wSwitchTime;                /* ?∟???????㊣?? */
	BYTE    res[14];
}NET_DVR_MATRIXPARA_V30, *LPNET_DVR_MATRIXPARA_V30;

typedef struct
{
	WORD wDisplayLogo;                        /* ?????????“???? */
	WORD wDisplayOsd;                        /* ?????㊣?? */
}NET_DVR_MATRIXPARA;

typedef struct
{
	BYTE byVideoFormat;                        /* ????????,0-PAL,1-NTSC */
	BYTE byMenuAlphaValue;                    /* ??????㊣??∼???車??㊣??? */
	WORD wScreenSaveTime;                    /* ????㊣??∟?㊣?? 0-????,1-1﹞???,2-2﹞???,3-5﹞???,4-10﹞???,5-20﹞???,6-30﹞??? */
	WORD wVOffset;                            /* ???????????? */
	WORD wBrightness;                        /* ???????????? */
	BYTE byStartMode;                        /* ?????車????????????(0:????,1:?∟??)*/
	BYTE byEnableScaler;                    /* ??﹞???????﹞? (0-??????, 1-????)*/
}NET_DVR_VOOUT;

//DVR????????(9000????)
typedef struct
{
	DWORD dwSize;
	NET_DVR_VOOUT struVOOut[MAX_VIDEOOUT_V30];
	NET_DVR_VGAPARA struVGAPara[MAX_VGA_V30];    /* VGA???? */
	NET_DVR_MATRIXPARA_V30 struMatrixPara[MAX_MATRIXOUT];        /* MATRIX???? */
	BYTE byRes[16];
}NET_DVR_VIDEOOUT_V30, *LPNET_DVR_VIDEOOUT_V30;

//DVR????????
typedef struct
{
	DWORD dwSize;
	NET_DVR_VOOUT struVOOut[MAX_VIDEOOUT];
	NET_DVR_VGAPARA struVGAPara[MAX_VGA];    /* VGA???? */
	NET_DVR_MATRIXPARA struMatrixPara;        /* MATRIX???? */
}NET_DVR_VIDEOOUT, *LPNET_DVR_VIDEOOUT;


//?????∫????(℅??芍??)(????)
typedef struct tagNET_DVR_USER_INFO_V40
{
	BYTE    sUserName[NAME_LEN];            /* ???∫????????16℅??? */
	BYTE    sPassword[PASSWD_LEN];            /* ???? */
	BYTE    byLocalRight[MAX_RIGHT];    /* ㊣????“?? */
										/*??℅谷0: ㊣??????????“*/
										/*??℅谷1: ㊣??????????車*/
										/*??℅谷2: ㊣?????﹞?*/
										/*??℅谷3: ㊣????豕??????*/
										/*??℅谷4: ㊣????谷??℅?????????*/
										/*??℅谷5: ㊣?????????℅‾(???????????????????????迆)*/
										/*??℅谷6: ㊣????谷?????? */
										/*??℅谷7: ㊣??????赤??????IP camera */
										/*??℅谷8: ㊣???㊣?﹞? */
										/*??℅谷9: ㊣??????迆/???? */
	BYTE    byRemoteRight[MAX_RIGHT];/* ?????“?? */
									 /*??℅谷0: ???????????“*/
									 /*??℅谷1: ???????????車*/
									 /*??℅谷2: ??????﹞? */
									 /*??℅谷3: ?????豕??????*/
									 /*??℅谷4: ?????谷??℅?????????*/
									 /*??℅谷5: ??????????℅‾(???????????????????????迆)*/
									 /*??℅谷6: ????﹞???????????*/
									 /*??℅谷7: ?????∟??*/
									 /*??℅谷8: ???????車㊣“????????㊣“??????*/
									 /*??℅谷9: ??????????㊣???????*/
									 /*??℅谷10: ????????????*/
									 /*??℅谷11: ?????谷?????? */
									 /*??℅谷12: ???????赤??????IP camera */
									 /*??℅谷13: ???????迆/???? */
	DWORD    dwNetPreviewRight[MAX_CHANNUM_V40];            /* ?????????∟?????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalRecordRight[MAX_CHANNUM_V40];            /* ㊣??????????????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetRecordRight[MAX_CHANNUM_V40];            /* ???????????????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalPlaybackRight[MAX_CHANNUM_V40];            /* ㊣?????????﹞????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetPlaybackRight[MAX_CHANNUM_V40];            /* ??????????﹞????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalPTZRight[MAX_CHANNUM_V40];                /* ㊣???????PTZ???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetPTZRight[MAX_CHANNUM_V40];                /* ????????PTZ???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalBackupRight[MAX_CHANNUM_V40];            /* ㊣???㊣?﹞??“???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	NET_DVR_IPADDR    struUserIP;                /* ???∫IP???﹞(??0?㊣㊣赤?????赤???????﹞) */
	BYTE     byMACAddr[MACADDR_LEN];    /* ???赤???﹞ */
	BYTE     byPriority;                /* ????????0xff-????0--????1--????2--?? */
										/* ??????㊣赤?????∫???????????豕??
										???????????“??:∼邦?“㊣???????????﹞?,㊣??????????谷????????
										℅???,㊣????????????迆/????
										??????∼邦?“㊣????????????????“,㊣?????????????????,㊣?????
										??????﹞?,???????????????∟????㊣???㊣?﹞?,㊣???/???????迆/????
										?????????赤?㊣ */
	BYTE    byAlarmOnRight;         // ㊣“??????????﹞??“?? 1-???“????0-???“??
	BYTE    byAlarmOffRight;         // ㊣“?????????﹞﹞??“?? 1-???“????0-???“??
	BYTE    byBypassRight;           // ㊣“???????????﹞?“?? 1-???“????0-???“?? 
	BYTE    byRes1[2];               //??℅???????
	BYTE    byPublishRight[MAX_RIGHT];  //????﹞???℅“???“??
										/*??℅谷0: ?????車???“??*/
										/*??℅谷1: ?????車???“??*/
										/*??℅谷2: ?????車???“??*/
										/*??℅谷3: ?????????“??*/
										/*??℅谷4: ???“?????“??*/
										/*??℅谷5: ???“?????“??*/
										/*??℅谷6: ??????﹞??“??*/
										/*??℅谷7: ???????赤?“??*/
										/*??℅谷8: ?????????“??*/
	BYTE    byRes[84];
}NET_DVR_USER_INFO_V40, *LPNET_DVR_USER_INFO_V40;

//?????∫????(℅??芍??)(????)
typedef struct tagNET_DVR_USER_INFO_V51
{
	BYTE    sUserName[NAME_LEN/*32*/];            /* ???∫????????16℅??? */
	BYTE    sPassword[PASSWD_LEN/*16*/];            /* ???? */
	BYTE    byLocalRight[MAX_RIGHT/*32*/];    /* ㊣????“?? */
											  /*??℅谷0: ㊣??????????“*/
											  /*??℅谷1: ㊣??????????車*/
											  /*??℅谷2: ㊣?????﹞?*/
											  /*??℅谷3: ㊣????豕??????*/
											  /*??℅谷4: ㊣????谷??℅?????????*/
											  /*??℅谷5: ㊣?????????℅‾(???????????????????????迆)*/
											  /*??℅谷6: ㊣????谷?????? */
											  /*??℅谷7: ㊣??????赤??????IP camera */
											  /*??℅谷8: ㊣???㊣?﹞? */
											  /*??℅谷9: ㊣??????迆/???? */
											  /*??℅谷10: ㊣????∟?? */
	BYTE    byRemoteRight[MAX_RIGHT/*32*/];/* ?????“?? */
										   /*??℅谷0: ???????????“*/
										   /*??℅谷1: ???????????車*/
										   /*??℅谷2: ??????﹞? */
										   /*??℅谷3: ?????豕??????*/
										   /*??℅谷4: ?????谷??℅?????????*/
										   /*??℅谷5: ??????????℅‾(???????????????????????迆)*/
										   /*??℅谷6: ????﹞???????????*/
										   /*??℅谷7: ?????∟??*/
										   /*??℅谷8: ???????車㊣“????????㊣“??????*/
										   /*??℅谷9: ??????????㊣???????*/
										   /*??℅谷10: ????????????*/
										   /*??℅谷11: ?????谷?????? */
										   /*??℅谷12: ???????赤??????IP camera */
										   /*??℅谷13: ???????迆/???? */
	DWORD    dwNetPreviewRight[MAX_CHANNUM_V40/*512*/];            /* ?????????∟?????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalRecordRight[MAX_CHANNUM_V40/*512*/];            /* ㊣??????????????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetRecordRight[MAX_CHANNUM_V40/*512*/];            /* ???????????????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalPlaybackRight[MAX_CHANNUM_V40/*512*/];            /* ㊣?????????﹞????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetPlaybackRight[MAX_CHANNUM_V40/*512*/];            /* ??????????﹞????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalPTZRight[MAX_CHANNUM_V40/*512*/];                /* ㊣???????PTZ???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetPTZRight[MAX_CHANNUM_V40/*512*/];                /* ????????PTZ???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalBackupRight[MAX_CHANNUM_V40/*512*/];            /* ㊣???㊣?﹞??“???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalPreviewRight[MAX_CHANNUM_V40/*512*/];		/* ㊣????∟???“???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	NET_DVR_IPADDR    struUserIP;                /* ???∫IP???﹞(??0?㊣㊣赤?????赤???????﹞) */
	BYTE     byMACAddr[MACADDR_LEN/*6*/];    /* ???赤???﹞ */
	BYTE     byPriority;                /* ????????0xff-????0--????1--????2--?? */
										/* ??????㊣赤?????∫???????????豕??
										???????????“??:∼邦?“㊣???????????﹞?,㊣??????????谷????????
										℅???,㊣????????????迆/????
										??????∼邦?“㊣????????????????“,㊣?????????????????,㊣?????
										??????﹞?,???????????????∟????㊣???㊣?﹞?,㊣???/???????迆/?????????????赤?㊣ */
	BYTE    byAlarmOnRight;         // ㊣“??????????﹞??“?? 1-???“????0-???“??
	BYTE    byAlarmOffRight;         // ㊣“?????????﹞﹞??“?? 1-???“????0-???“??
	BYTE    byBypassRight;           // ㊣“???????????﹞?“?? 1-???“????0-???“?? 
	BYTE    byRes1[2];               //??℅???????
	BYTE    byPublishRight[MAX_RIGHT/*32*/];  //????﹞???℅“???“??
											  /*??℅谷0: ?????車???“??*/
											  /*??℅谷1: ?????車???“??*/
											  /*??℅谷2: ?????車???“??*/
											  /*??℅谷3: ?????????“??*/
											  /*??℅谷4: ???“?????“??*/
											  /*??℅谷5: ???“?????“??*/
											  /*??℅谷6: ??????﹞??“??*/
											  /*??℅谷7: ???????赤?“??*/
											  /*??℅谷8: ?????????“??*/
	DWORD    dwPasswordValidity;   //???????∫??,?????赤?㊣???∫????????,???????足????0㊣赤???????迆?∫
	BYTE    byKeypadPassword[PASSWD_LEN/*16*/];    //?邦??????
	BYTE    byUserOperateType;    //???∫??℅‾?角????1-???????∫??2-?邦?????∫??3-???????∫+?邦?????∫
	BYTE    byRes[1007];
}NET_DVR_USER_INFO_V51, *LPNET_DVR_USER_INFO_V51;

typedef struct  tagNET_DVR_USER_V51
{
	DWORD dwSize;  //?芍?????車??
	DWORD dwMaxUserNum; //?豕㊣??∫????℅??車???∫??-????
	NET_DVR_USER_INFO_V51 struUser[MAX_USERNUM_V30/*32*/];  /* ???∫???? */
	char    sloginPassword[PASSWD_LEN/*16*/];          /* ?????????﹞?? */
	BYTE     byRes[240]; //㊣???
}NET_DVR_USER_V51, *LPNET_DVR_USER_V51;

//?????∫????(℅??芍??)(????)
typedef struct tagNET_DVR_USER_INFO_V52
{
	BYTE    sUserName[NAME_LEN/*32*/];            /* ???∫????????16℅??? */
	BYTE    sPassword[PASSWD_LEN/*16*/];            /* ???? */
	BYTE    byLocalRight[MAX_RIGHT/*32*/];    /* ㊣????“?? */
											  /*??℅谷0: ㊣??????????“*/
											  /*??℅谷1: ㊣??????????車*/
											  /*??℅谷2: ㊣?????﹞?*/
											  /*??℅谷3: ㊣????豕??????*/
											  /*??℅谷4: ㊣????谷??℅?????????*/
											  /*??℅谷5: ㊣?????????℅‾(???????????????????????迆)*/
											  /*??℅谷6: ㊣????谷?????? */
											  /*??℅谷7: ㊣??????赤??????IP camera */
											  /*??℅谷8: ㊣???㊣?﹞? */
											  /*??℅谷9: ㊣??????迆/???? */
											  /*??℅谷10: ㊣????∟?? */
	BYTE    byRemoteRight[MAX_RIGHT/*32*/];/* ?????“?? */
										   /*??℅谷0: ???????????“*/
										   /*??℅谷1: ???????????車*/
										   /*??℅谷2: ??????﹞? */
										   /*??℅谷3: ?????豕??????*/
										   /*??℅谷4: ?????谷??℅?????????*/
										   /*??℅谷5: ??????????℅‾(???????????????????????迆)*/
										   /*??℅谷6: ????﹞???????????*/
										   /*??℅谷7: ?????∟??*/
										   /*??℅谷8: ???????車㊣“????????㊣“??????*/
										   /*??℅谷9: ??????????㊣???????*/
										   /*??℅谷10: ????????????*/
										   /*??℅谷11: ?????谷?????? */
										   /*??℅谷12: ???????赤??????IP camera */
										   /*??℅谷13: ???????迆/???? */
	DWORD    dwNetPreviewRight[MAX_CHANNUM_V40/*512*/];            /* ?????????∟?????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalRecordRight[MAX_CHANNUM_V40/*512*/];            /* ㊣??????????????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetRecordRight[MAX_CHANNUM_V40/*512*/];            /* ???????????????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalPlaybackRight[MAX_CHANNUM_V40/*512*/];            /* ㊣?????????﹞????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetPlaybackRight[MAX_CHANNUM_V40/*512*/];            /* ??????????﹞????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalPTZRight[MAX_CHANNUM_V40/*512*/];                /* ㊣???????PTZ???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetPTZRight[MAX_CHANNUM_V40/*512*/];                /* ????????PTZ???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalBackupRight[MAX_CHANNUM_V40/*512*/];            /* ㊣???㊣?﹞??“???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalPreviewRight[MAX_CHANNUM_V40/*512*/];		/* ㊣????∟???“???“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalDoubleVerificationPlaybackRight[MAX_CHANNUM_V40/*512*/];            /* ㊣??????????????∟??﹞????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwLocalDoubleVerificationBackupRight[MAX_CHANNUM_V40/*512*/];            /* ㊣??????????????∟㊣?﹞????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	DWORD    dwNetDoubleVerificationPlaybackRight[MAX_CHANNUM_V40/*512*/];            /* ???????????????∟??﹞????“???????∼?迄?車???辰??????????0xffffffff?車???迄?????∫*/
	NET_DVR_IPADDR    struUserIP;                /* ???∫IP???﹞(??0?㊣㊣赤?????赤???????﹞) */
	BYTE     byMACAddr[MACADDR_LEN/*6*/];    /* ???赤???﹞ */
	BYTE     byPriority;                /* ????????0xff-????0--????1--????2--?? */
										/* ??????㊣赤?????∫???????????豕??
										???????????“??:∼邦?“㊣???????????﹞?,㊣??????????谷????????
										℅???,㊣????????????迆/????
										??????∼邦?“㊣????????????????“,㊣?????????????????,㊣?????
										??????﹞?,???????????????∟????㊣???㊣?﹞?,㊣???/???????迆/?????????????赤?㊣ */
	BYTE    byAlarmOnRight;         // ㊣“??????????﹞??“?? 1-???“????0-???“??
	BYTE    byAlarmOffRight;         // ㊣“?????????﹞﹞??“?? 1-???“????0-???“??
	BYTE    byBypassRight;           // ㊣“???????????﹞?“?? 1-???“????0-???“?? 
	BYTE    byRes1[2];               //??℅???????
	BYTE    byPublishRight[MAX_RIGHT/*32*/];  //????﹞???℅“???“??
											  /*??℅谷0: ?????車???“??*/
											  /*??℅谷1: ?????車???“??*/
											  /*??℅谷2: ?????車???“??*/
											  /*??℅谷3: ?????????“??*/
											  /*??℅谷4: ???“?????“??*/
											  /*??℅谷5: ???“?????“??*/
											  /*??℅谷6: ??????﹞??“??*/
											  /*??℅谷7: ???????赤?“??*/
											  /*??℅谷8: ?????????“??*/
	DWORD    dwPasswordValidity;   //???????∫??,?????赤?㊣???∫????????,???????足????0㊣赤???????迆?∫
	BYTE    byKeypadPassword[PASSWD_LEN/*16*/];    //?邦??????
	BYTE    byUserOperateType;    //???∫??℅‾?角????1-???????∫??2-?邦?????∫??3-???????∫+?邦?????∫
	BYTE    byRes[1007];
}NET_DVR_USER_INFO_V52, *LPNET_DVR_USER_INFO_V52;

typedef struct  tagNET_DVR_USER_V52
{
	DWORD dwSize;  //?芍?????車??
	DWORD dwMaxUserNum; //?豕㊣??∫????℅??車???∫??-????
	NET_DVR_USER_INFO_V52 struUser[MAX_USERNUM_V30/*32*/];  /* ???∫???? */
	char    sloginPassword[PASSWD_LEN/*16*/];          /* ?????????﹞?? */
	BYTE     byRes[240]; //㊣???
}NET_DVR_USER_V52, *LPNET_DVR_USER_V52;

//?????∫????(℅??芍??)(9000????)
typedef struct
{
	BYTE sUserName[NAME_LEN];        /* ???∫?? */
	BYTE sPassword[PASSWD_LEN];        /* ???? */
	BYTE byLocalRight[MAX_RIGHT];    /* ㊣????“?? */
									 /*??℅谷0: ㊣??????????“*/
									 /*??℅谷1: ㊣??????????車*/
									 /*??℅谷2: ㊣?????﹞?*/
									 /*??℅谷3: ㊣????豕??????*/
									 /*??℅谷4: ㊣????谷??℅?????????*/
									 /*??℅谷5: ㊣?????????℅‾(???????????????????????迆)*/
									 /*??℅谷6: ㊣????谷?????? */
									 /*??℅谷7: ㊣??????赤??????IP camera */
									 /*??℅谷8: ㊣???㊣?﹞? */
									 /*??℅谷9: ㊣??????迆/???? */
	BYTE byRemoteRight[MAX_RIGHT];/* ?????“?? */
								  /*??℅谷0: ???????????“*/
								  /*??℅谷1: ???????????車*/
								  /*??℅谷2: ??????﹞? */
								  /*??℅谷3: ?????豕??????*/
								  /*??℅谷4: ?????谷??℅?????????*/
								  /*??℅谷5: ??????????℅‾(???????????????????????迆)*/
								  /*??℅谷6: ????﹞???????????*/
								  /*??℅谷7: ?????∟??*/
								  /*??℅谷8: ???????車㊣“????????㊣“??????*/
								  /*??℅谷9: ??????????㊣???????*/
								  /*??℅谷10: ????????????*/
								  /*??℅谷11: ?????谷?????? */
								  /*??℅谷12: ???????赤??????IP camera */
								  /*??℅谷13: ???????迆/???? */
	BYTE byNetPreviewRight[MAX_CHANNUM_V30];        /* ?????????∟?????“?? 0-???“????1-???“??*/
	BYTE byLocalPlaybackRight[MAX_CHANNUM_V30];    /* ㊣?????????﹞????“?? 0-???“????1-???“??*/
	BYTE byNetPlaybackRight[MAX_CHANNUM_V30];    /* ??????????﹞????“?? 0-???“????1-???“??*/
	BYTE byLocalRecordRight[MAX_CHANNUM_V30];        /* ㊣??????????????“?? 0-???“????1-???“??*/
	BYTE byNetRecordRight[MAX_CHANNUM_V30];        /* ???????????????“?? 0-???“????1-???“??*/
	BYTE byLocalPTZRight[MAX_CHANNUM_V30];        /* ㊣???????PTZ???“?? 0-???“????1-???“??*/
	BYTE byNetPTZRight[MAX_CHANNUM_V30];            /* ????????PTZ???“?? 0-???“????1-???“??*/
	BYTE byLocalBackupRight[MAX_CHANNUM_V30];        /* ㊣???㊣?﹞??“???“?? 0-???“????1-???“??*/
	NET_DVR_IPADDR struUserIP;        /* ???∫IP???﹞(??0?㊣㊣赤?????赤???????﹞) */
	BYTE byMACAddr[MACADDR_LEN];    /* ???赤???﹞ */
	BYTE byPriority;                /* ????????0xff-????0--????1--????2--?? */
									/*
									??????㊣赤?????∫???????????豕??
									???????????“??:∼邦?“㊣???????????﹞?,㊣??????????谷????????℅???,㊣????????????迆/????
									??????∼邦?“㊣????????????????“,㊣?????????????????,㊣???????????﹞?,???????????????∟??
									㊣???㊣?﹞?,㊣???/???????迆/????
									?????????赤?㊣
									*/
	BYTE    byAlarmOnRight;         // ㊣“??????????﹞??“??
	BYTE    byAlarmOffRight;        // ㊣“?????????﹞﹞??“??
	BYTE    byBypassRight;          // ㊣“???????????﹞?“??
	BYTE    byRes[14];
}NET_DVR_USER_INFO_V30, *LPNET_DVR_USER_INFO_V30;

//?????∫????(SDK_V15????)(℅??芍??)
typedef struct
{
	BYTE sUserName[NAME_LEN];        /* ???∫?? */
	BYTE sPassword[PASSWD_LEN];        /* ???? */
	DWORD dwLocalRight[MAX_RIGHT];    /* ?“?? */
									  /*??℅谷0: ㊣??????????“*/
									  /*??℅谷1: ㊣??????????車*/
									  /*??℅谷2: ㊣?????﹞?*/
									  /*??℅谷3: ㊣????豕??????*/
									  /*??℅谷4: ㊣????谷??℅?????????*/
									  /*??℅谷5: ㊣?????????℅‾(???????????????????????迆)*/
	DWORD dwLocalPlaybackRight;        /* ㊣?????????﹞????“?? bit0 -- channel 1*/
	DWORD dwRemoteRight[MAX_RIGHT];    /* ?“?? */
									   /*??℅谷0: ???????????“*/
									   /*??℅谷1: ???????????車*/
									   /*??℅谷2: ??????﹞? */
									   /*??℅谷3: ?????豕??????*/
									   /*??℅谷4: ?????谷??℅?????????*/
									   /*??℅谷5: ??????????℅‾(???????????????????????迆)*/
									   /*??℅谷6: ????﹞???????????*/
									   /*??℅谷7: ?????∟??*/
									   /*??℅谷8: ???????車㊣“????????㊣“??????*/
									   /*??℅谷9: ??????????㊣???????*/
									   /*??℅谷10: ????????????*/
	DWORD dwNetPreviewRight;        /* ?????????∟?????“?? bit0 -- channel 1*/
	DWORD dwNetPlaybackRight;        /* ??????????﹞????“?? bit0 -- channel 1*/
	char sUserIP[16];                /* ???∫IP???﹞(??0?㊣㊣赤?????赤???????﹞) */
	BYTE byMACAddr[MACADDR_LEN];    /* ???赤???﹞ */
}NET_DVR_USER_INFO_EX, *LPNET_DVR_USER_INFO_EX;

//?????∫????(℅??芍??)
typedef struct
{
	BYTE sUserName[NAME_LEN];        /* ???∫?? */
	BYTE sPassword[PASSWD_LEN];        /* ???? */
	DWORD dwLocalRight[MAX_RIGHT];    /* ?“?? */
									  /*??℅谷0: ㊣??????????“*/
									  /*??℅谷1: ㊣??????????車*/
									  /*??℅谷2: ㊣?????﹞?*/
									  /*??℅谷3: ㊣????豕??????*/
									  /*??℅谷4: ㊣????谷??℅?????????*/
									  /*??℅谷5: ㊣?????????℅‾(???????????????????????迆)*/
	DWORD dwRemoteRight[MAX_RIGHT];    /* ?“?? */
									   /*??℅谷0: ???????????“*/
									   /*??℅谷1: ???????????車*/
									   /*??℅谷2: ??????﹞? */
									   /*??℅谷3: ?????豕??????*/
									   /*??℅谷4: ?????谷??℅?????????*/
									   /*??℅谷5: ??????????℅‾(???????????????????????迆)*/
									   /*??℅谷6: ????﹞???????????*/
									   /*??℅谷7: ?????∟??*/
									   /*??℅谷8: ???????車㊣“????????㊣“??????*/
									   /*??℅谷9: ??????????㊣???????*/
									   /*??℅谷10: ????????????*/
	char sUserIP[16];                /* ???∫IP???﹞(??0?㊣㊣赤?????赤???????﹞) */
	BYTE byMACAddr[MACADDR_LEN];    /* ???赤???﹞ */
}NET_DVR_USER_INFO, *LPNET_DVR_USER_INFO;

//DVR???∫????(????)
typedef struct  tagNET_DVR_USER_V40
{
	DWORD dwSize;  //?芍?????車??
	DWORD dwMaxUserNum; //?豕㊣??∫????℅??車???∫??-????
	NET_DVR_USER_INFO_V40 struUser[MAX_USERNUM_V30];  /* ???∫???? */
}NET_DVR_USER_V40, *LPNET_DVR_USER_V40;
typedef struct  tagNET_DVR_USER_V50
{
	DWORD dwSize;  //?芍?????車??
	DWORD dwMaxUserNum; //?豕㊣??∫????℅??車???∫??-????
	NET_DVR_USER_INFO_V40 struUser[MAX_USERNUM_V30];  /* ???∫???? */
	char    sloginPassword[PASSWD_LEN/*16*/];          /* ?????????﹞?? */
	BYTE     byRes[240]; //㊣???
}NET_DVR_USER_V50, *LPNET_DVR_USER_V50;
//DVR???∫????(9000????)
typedef struct
{
	DWORD dwSize;
	NET_DVR_USER_INFO_V30 struUser[MAX_USERNUM_V30];
}NET_DVR_USER_V30, *LPNET_DVR_USER_V30;

//DVR???∫????(SDK_V15????)
typedef struct
{
	DWORD dwSize;
	NET_DVR_USER_INFO_EX struUser[MAX_USERNUM];
}NET_DVR_USER_EX, *LPNET_DVR_USER_EX;

//DVR???∫????
typedef struct
{
	DWORD dwSize;
	NET_DVR_USER_INFO struUser[MAX_USERNUM];
}NET_DVR_USER, *LPNET_DVR_USER;

typedef struct tagNET_DVR_EXCEPTION_V40
{
	DWORD             dwSize;             //?芍?????車??
	DWORD             dwMaxGroupNum;    //?豕㊣??∫????℅??車℅谷??
	NET_DVR_HANDLEEXCEPTION_V41 struExceptionHandle[MAX_EXCEPTIONNUM_V30];
	BYTE                byRes[128];          //㊣???
}NET_DVR_EXCEPTION_V40, *LPNET_DVR_EXCEPTION_V40; /*?足???????????????芍????*/

												  //DVR?足??????(9000????)
typedef struct
{
	DWORD dwSize;
	NET_DVR_HANDLEEXCEPTION_V30 struExceptionHandleType[MAX_EXCEPTIONNUM_V30];
	/*??℅谷0-???迆,1- ???????赤,2-??????,3-???辰????IP ???﹞????, 4-﹞?﹞“﹞???, 5-????/??????????????????, 6-?????????足??, 7-?????足?? 8-?車???足????9-?∼??/????﹞?㊣??????????足????10-????????(????℅“??) 11-??㊣??足???“N+1??????12-??????13-℅??????足????14-﹞????足??, 15-POE?????足??, 16-POC?足??*/
}NET_DVR_EXCEPTION_V30, *LPNET_DVR_EXCEPTION_V30;



//DVR?足??????
typedef struct
{
	DWORD dwSize;
	NET_DVR_HANDLEEXCEPTION struExceptionHandleType[MAX_EXCEPTIONNUM];
	/*??℅谷0-???迆,1- ???????赤,2-??????,3-???辰????IP ???﹞????,4-﹞?﹞“﹞???, 5-????/??????????????????, 6-?????????足??*/
}NET_DVR_EXCEPTION, *LPNET_DVR_EXCEPTION;

//?“??℅???(9000????)
typedef struct
{
	BYTE byRecordStatic; //?“????﹞???????,0-??????,1-????
	BYTE bySignalStatic; //??????????℅???,0-????,1-???????∫
	BYTE byHardwareStatic;//?“??????℅???,0-????,1-?足??,????DSP????
	BYTE byRes1;        //㊣???
	DWORD dwBitRate;//????????
	DWORD dwLinkNum;//???∫????????????
	NET_DVR_IPADDR struClientIP[MAX_LINK];//???∫????IP???﹞
	DWORD dwIPLinkNum;//???????“????IP??????????㊣赤??IP?????㊣?∼????????
	BYTE byExceedMaxLink;        // ??﹞??????????﹞6?﹞?????? 0 - ??????, 1-????
	BYTE byRes[3];        // ㊣???℅???
	DWORD dwAllBitRate;      //?迄??????????????
	DWORD dwChannelNo;    //?㊣?∼???“??????0xffffffff㊣赤?????∫
}NET_DVR_CHANNELSTATE_V30, *LPNET_DVR_CHANNELSTATE_V30;

//?“??℅???
typedef struct
{
	BYTE byRecordStatic; //?“????﹞???????,0-??????,1-????
	BYTE bySignalStatic; //??????????℅???,0-????,1-???????∫
	BYTE byHardwareStatic;//?“??????℅???,0-????,1-?足??,????DSP????
	char reservedData;        //㊣???
	DWORD dwBitRate;//????????
	DWORD dwLinkNum;//???∫????????????
	DWORD dwClientIP[MAX_LINK];//???∫????IP???﹞
}NET_DVR_CHANNELSTATE, *LPNET_DVR_CHANNELSTATE;

//????℅???
typedef struct
{
	DWORD dwVolume;//??????????
	DWORD dwFreeSpace;//?????????角????
	DWORD dwHardDiskStatic; //??????℅???,∼???:1-????,2-??????,3-???????????赤,4-????????, 5-??????℅???(????????),6-??????????????
}NET_DVR_DISKSTATE, *LPNET_DVR_DISKSTATE;

typedef struct tagNET_DVR_WORKSTATE_V40
{
	DWORD   dwSize;            //?芍?????車??
	DWORD   dwDeviceStatic;      //?豕㊣???℅???,0-????,1-CPU??????????,????85%,2-?????赤?車,????????????
	NET_DVR_DISKSTATE  struHardDiskStatic[MAX_DISKNUM_V30];   //????℅???,????℅??角????????33??????????
	NET_DVR_CHANNELSTATE_V30 struChanStatic[MAX_CHANNUM_V40/*512*/];//?“????℅????????∼?迄?車???辰????
	DWORD   dwHasAlarmInStatic[MAX_ALARMIN_V40/*512*/]; //??㊣“????㊣“??????????∼???㊣赤????∼???㊣那?????辰??????????0xffffffff?㊣?㊣?∼?∼?車???????∫
	DWORD   dwHasAlarmOutStatic[MAX_ALARMOUT_V40/*512*/]; //??㊣“????????㊣“??????????∼???㊣赤????∼???㊣那?????辰??????????0xffffffff?㊣?㊣?∼?∼?車???????∫
	DWORD   dwLocalDisplay;            //㊣???????℅???,0-????,1-??????
	BYTE    byAudioInChanStatus[MAX_AUDIO_V30/*2*/];        //∼???㊣赤???????“????℅??? 0-????????1-??????????0??㊣赤????1???????“??
	BYTE    byRes1[2];
	float    fHumidity;    //?????‾??????????,﹞??∫:0.0 ~100.0
	float    fTemperature;    //?????‾????????????﹞??∫??-20.0 ~ 90.0
	BYTE    byRes[116];                 //㊣???
}NET_DVR_WORKSTATE_V40, *LPNET_DVR_WORKSTATE_V40; /*?豕㊣??∟℅‾℅????????芍????*/

typedef struct tagNET_DVR_GETWORKSTATE_COND
{
	DWORD   dwSize;  //?芍?????∟??
	BYTE    byFindHardByCond; /*0-?谷??????????(??????℅??角?????谷??33??)?????㊣dwFindHardStatusNum???∫*/
	BYTE    byFindChanByCond;  /*0-?谷???????“???????㊣dwFindChanNum???∫*/
	BYTE    byRes1[2];//㊣???    
	DWORD   dwFindHardStatus[MAX_DISKNUM_V30/*33*/]; /*???谷????????????∼???㊣赤???????????????辰?????? ????0xffffffff?辰?????車?????∫ */
	DWORD   dwFindChanNo[MAX_CHANNUM_V40/*512*/]; /*???谷?????“??????∼???㊣赤???????????????辰?????? ????0xffffffff?辰?????車?????∫ */
	BYTE     byRes[64]; //㊣???
}NET_DVR_GETWORKSTATE_COND, *LPNET_DVR_GETWORKSTATE_COND;

//DVR?∟℅‾℅???(9000????)
typedef struct
{
	DWORD dwDeviceStatic;     //?豕㊣???℅???,0-????,1-CPU??????????,????85%,2-?????赤?車,????????????
	NET_DVR_DISKSTATE  struHardDiskStatic[MAX_DISKNUM_V30];
	NET_DVR_CHANNELSTATE_V30 struChanStatic[MAX_CHANNUM_V30];//?“????℅???
	BYTE  byAlarmInStatic[MAX_ALARMIN_V30]; //㊣“????????℅???,0-????㊣“??,1-??㊣“??
	BYTE  byAlarmOutStatic[MAX_ALARMOUT_V30]; //㊣“????????????℅???,0-????????,1-??㊣“??????
	DWORD  dwLocalDisplay;//㊣???????℅???,0-????,1-??????
	BYTE  byAudioChanStatus[MAX_AUDIO_V30];//㊣赤???????“????℅??? 0-????????1-??????, 0xff???∫
	BYTE  byRes[10];
}NET_DVR_WORKSTATE_V30, *LPNET_DVR_WORKSTATE_V30;

//DVR?∟℅‾℅???
typedef struct
{
	DWORD dwDeviceStatic;     //?豕㊣???℅???,0-????,1-CPU??????????,????85%,2-?????赤?車,????????????
	NET_DVR_DISKSTATE  struHardDiskStatic[MAX_DISKNUM];
	NET_DVR_CHANNELSTATE struChanStatic[MAX_CHANNUM];//?“????℅???
	BYTE  byAlarmInStatic[MAX_ALARMIN]; //㊣“????????℅???,0-????㊣“??,1-??㊣“??
	BYTE  byAlarmOutStatic[MAX_ALARMOUT]; //㊣“????????????℅???,0-????????,1-??㊣“??????
	DWORD  dwLocalDisplay;//㊣???????℅???,0-????,1-??????
}NET_DVR_WORKSTATE, *LPNET_DVR_WORKSTATE;



//????????(9000????)
typedef struct
{
	NET_DVR_TIME strLogTime;
	DWORD    dwMajorType;    //?‾?角?? 1-㊣“??; 2-?足??; 3-??℅‾; 0xff-????
	DWORD    dwMinorType;//???角?? 0-????;
	BYTE    sPanelUser[MAX_NAMELEN]; //??℅‾??∼??????∫??
	BYTE    sNetUser[MAX_NAMELEN];//??????℅‾?????∫??
	NET_DVR_IPADDR    struRemoteHostAddr;//?????‾?迆???﹞
	DWORD    dwParaType;//?????角??,9000?豕㊣?MINOR_START_VT/MINOR_STOP_VT?㊣??㊣赤??????????????℅???
	DWORD    dwChannel;//?“????
	DWORD    dwDiskNumber;//??????
	DWORD    dwAlarmInPort;//㊣“??????????
	DWORD    dwAlarmOutPort;//㊣“??????????
	DWORD   dwInfoLen;
	char    sInfo[LOG_INFO_LEN];
}NET_DVR_LOG_V30, *LPNET_DVR_LOG_V30;

//????????
typedef struct
{
	NET_DVR_TIME strLogTime;
	DWORD    dwMajorType;    //?‾?角?? 1-㊣“??; 2-?足??; 3-??℅‾; 0xff-????
	DWORD    dwMinorType;//???角?? 0-????;
	BYTE    sPanelUser[MAX_NAMELEN]; //??℅‾??∼??????∫??
	BYTE    sNetUser[MAX_NAMELEN];//??????℅‾?????∫??
	char    sRemoteHostAddr[16];//?????‾?迆???﹞
	DWORD    dwParaType;//?????角??
	DWORD    dwChannel;//?“????
	DWORD    dwDiskNumber;//??????
	DWORD    dwAlarmInPort;//㊣“??????????
	DWORD    dwAlarmOutPort;//㊣“??????????
}NET_DVR_LOG, *LPNET_DVR_LOG;


typedef struct tagNET_DVR_FIND_LOG_COND
{
	DWORD            dwSelectMode;  // 0????????1??∼??角????2??∼??㊣????3??∼??㊣?????角??            
	DWORD            dwMainType;	//?????‾?角??
	DWORD            dwSubType;		//???????角??
	NET_DVR_TIME_V50 struStartTime; //?????㊣??
	NET_DVR_TIME_V50 struEndTime;   //?芍???㊣??
	BOOL 		     bOnlySmart;    //??﹞??????‾??S.M.A.R.T??????????
	BYTE             byRes[128];
}NET_DVR_FIND_LOG_COND, *LPNET_DVR_FIND_LOG_COND;


typedef struct
{
	NET_DVR_TIME_V50 	struLogTime;    //????﹞??迆???㊣??
	DWORD               dwMajorType;    //?‾?角?? 1-㊣“??; 2-?足??; 3-??℅‾; 0xff-????
	DWORD               dwMinorType;    //???角?? 0-????;
	BYTE                sPanelUser[MAX_NAMELEN];//??℅‾??∼??????∫??
	BYTE                sNetUser[MAX_NAMELEN];  //??????℅‾?????∫??
	NET_DVR_IPADDR      struRemoteHostAddr;     //?????‾?迆???﹞
	DWORD               dwParaType; //?????角??,9000?豕㊣?MINOR_START_VT/MINOR_STOP_VT?㊣??㊣赤??????????????℅???
	DWORD               dwChannel;  //?“????
	DWORD               dwDiskNumber;   //??????
	DWORD               dwAlarmInPort;  //㊣“??????????
	DWORD               dwAlarmOutPort; //㊣“??????????
	DWORD               dwInfoLen;
	char                sInfo[LOG_INFO_LEN];
	BYTE                byRes[128];
}NET_DVR_LOG_V50, *LPNET_DVR_LOG_V50;


/************************DVR???? end***************************/

/************************???﹞㊣“?????赤?‾?迆?????谷?? begin************************************************/
typedef struct tagNET_DVR_ALARMHOST_SEARCH_LOG_PARAM
{
	WORD            wMajorType;        // ?‾?角??
	WORD            wMinorType;        // ???角?? 
	NET_DVR_TIME    struStartTime;    // ?????㊣?? 
	NET_DVR_TIME    struEndTime;    // ?芍???㊣??
	BYTE            byRes[8];        // ㊣???℅???
}NET_DVR_ALARMHOST_SEARCH_LOG_PARAM, LPNET_DVR_ALARMHOST_SEARCH_LOG_PARAM;

typedef struct tagNET_DVR_ALARMHOST_LOG_RET
{
	NET_DVR_TIME    struLogTime;                //  ?????㊣??
	BYTE            sUserName[NAME_LEN];     // ??℅‾???∫
	NET_DVR_IPADDR    struIPAddr;                 // ??℅‾IP???﹞
	WORD            wMajorType;                 // ?‾?角?? 
	WORD            wMinorType;                 // ???角??
	WORD            wParam;                        // ??℅‾????
	BYTE            byRes[10];
	DWORD            dwInfoLen;                    // ?豕???????∟??
	char            sInfo[LOG_INFO_LEN];       // ?豕??????
}NET_DVR_ALARMHOST_LOG_RET, *LPNET_DVR_ALARMHOST_LOG_RET;

/*************************???﹞㊣“?????赤?‾?迆?????谷?? end***********************************************/

//㊣“??????℅???(9000????)
typedef struct
{
	BYTE Output[MAX_ALARMOUT_V30];
}NET_DVR_ALARMOUTSTATUS_V30, *LPNET_DVR_ALARMOUTSTATUS_V30;

//㊣“??????℅???
typedef struct
{
	BYTE Output[MAX_ALARMOUT];
}NET_DVR_ALARMOUTSTATUS, *LPNET_DVR_ALARMOUTSTATUS;

//???℅????
typedef struct
{
	USHORT m_Year;
	USHORT m_Month;
	USHORT m_Day;
	USHORT m_Hour;
	USHORT m_Minute;
	USHORT m_Second;
	BYTE DeviceName[24];    //?豕㊣?????
	DWORD dwChannelNumer;    //?“????
	BYTE CardNumber[32];    //?“??
	char cTradeType[12];    //???℅?角??
	DWORD dwCash;            //???℅????
}NET_DVR_TRADEINFO, *LPNET_DVR_TRADEINFO;


//ATM℅“??
/****************************ATM(begin)***************************/
#define NCR        0
#define DIEBOLD    1
#define WINCOR_NIXDORF    2
#define SIEMENS    3
#define OLIVETTI    4
#define FUJITSU    5
#define HITACHI    6
#define SMI        7
#define IBM        8
#define BULL    9
#define YiHua    10
#define LiDe    11
#define GDYT    12
#define Mini_Banl    13
#define GuangLi    14
#define DongXin    15
#define ChenTong    16
#define NanTian    17
#define XiaoXing    18
#define GZYY    19
#define QHTLT    20
#define DRS918    21
#define KALATEL    22
#define NCR_2    23    
#define NXS        24


/*??????*/
typedef struct
{
	BYTE code[12];        /* ?迆?? */
}NET_DVR_FRAMETYPECODE;


//ATM????
typedef struct
{
	DWORD dwSize;
	char sATMIP[16];                        /* ATM IP???﹞ */
	DWORD dwATMType;                        /* ATM?角?? */
	DWORD dwInputMode;                        /* ????﹞???    0-?????足?? 1-???????? 2-?????㊣?????? 3-????ATM?邦??????*/
	DWORD dwFrameSignBeginPos;              /* ㊣“??㊣那??????????????*/
	DWORD dwFrameSignLength;                /* ㊣“??㊣那???????∟?? */
	BYTE  byFrameSignContent[12];            /* ㊣“??㊣那?????????? */
	DWORD dwCardLengthInfoBeginPos;            /* ?“???∟???????????????? */
	DWORD dwCardLengthInfoLength;            /* ?“???∟?????????∟?? */
	DWORD dwCardNumberInfoBeginPos;            /* ?“???????????????? */
	DWORD dwCardNumberInfoLength;            /* ?“?????????∟?? */
	DWORD dwBusinessTypeBeginPos;           /* ???℅?角???????????? */
	DWORD dwBusinessTypeLength;                /* ???℅?角?????∟?? */
	NET_DVR_FRAMETYPECODE frameTypeCode[10];/* ?角?? */
}NET_DVR_FRAMEFORMAT, *LPNET_DVR_FRAMEFORMAT;
//SDK_V31 ATM

/*?????豕??*/
typedef struct    tagNET_DVR_FILTER
{
	BYTE                    byEnable;            //0,??????;1,????
	BYTE                    byMode;                //0,ASCII;1,HEX    
	BYTE                    byFrameBeginPos;    // ?豕????????㊣那℅?﹞???????????     
	BYTE                    byRes;           // ㊣???℅???
	BYTE                     byFilterText[16];    //????℅?﹞???
	BYTE                    byRes2[12];         // ㊣???℅???
}NET_DVR_FILTER, *LPNET_DVR_FILTER;

//????∼邦﹞??? ????∼邦㊣那??
typedef struct    tagNET_DVR_IDENTIFICAT
{
	BYTE                    byStartMode;        //????℅?﹞?????:0,ASCII;1,HEX
	BYTE                    byEndMode;            //?芍??℅?﹞???????0,ASCII;1,HEX
	BYTE                    byRes[2];           //㊣???℅???
	NET_DVR_FRAMETYPECODE    struStartCode;        //????∼邦????㊣那??℅?﹞?
	NET_DVR_FRAMETYPECODE    struEndCode;        //????∼邦?芍??㊣那??℅?﹞?
	BYTE                    byRes1[12];         //㊣???℅???
}NET_DVR_IDENTIFICAT, *LPNET_DVR_IDENTIFICAT;

typedef struct    tagNET_DVR_PACKAGE_LOCATION/*㊣“??????????*/
{
	BYTE                     byOffsetMode;            /*㊣“?????????????? 0,token(℅?﹞?㊣那??????);1,fix?“???“??????*/
	BYTE                    byRes1[3];                // ㊣???℅???
	DWORD                      dwOffsetPos;            /*mode??1???㊣?辰????,???“?????車??*/
	NET_DVR_FRAMETYPECODE    struTokenCode;            /*㊣那????*/
	BYTE                    byMultiplierValue;        /*㊣那?????角????????*/
	BYTE                    byEternOffset;            /*????℅?﹞???????*/
	BYTE                    byCodeMode;                /*0,ASCII;1,HEX*/
	BYTE                     byRes2[9];                //㊣???℅???
}NET_DVR_PACKAGE_LOCATION, *LPNET_DVR_PACKAGE_LOCATION;


typedef struct    tagNET_DVR_PACKAGE_LENGTH//㊣“???????∟??
{
	BYTE                    byLengthMode;            //?∟???角????0,??㊣??∟??;1,???“?∟??;2,℅??迆?∟??(???“????????)
	BYTE                    byRes1[3];              // ㊣???℅???
	DWORD                      dwFixLength;                //mode??1???㊣?辰????,???“?∟???車??
	DWORD                    dwMaxLength;            //㊣“??????℅??車?∟??  byLengthMode??0?㊣????
	DWORD                    dwMinLength;            //㊣“??????℅????∟??  byLengthMode??0?㊣????
	BYTE                    byEndMode;                //??㊣??∟?? ???芍﹞????? 0,ASCII;1,HEX    
	BYTE                    byRes2[3];              //㊣???℅???
	NET_DVR_FRAMETYPECODE    struEndCode;        //??㊣??∟?????芍﹞?
	DWORD                    dwLengthPos;            //lengthMode??2???㊣?辰???????“???∟????㊣“??????????
	DWORD                    dwLengthLen;            //lengthMode??2???㊣?辰???????“???∟?????∟??
	BYTE                    byRes3[8];              // ㊣???℅???
}NET_DVR_PACKAGE_LENGTH, *LPNET_DVR_PACKAGE_LENGTH;

typedef struct    tagNET_DVR_OSD_POSITION//OSD ??????????
{
	BYTE                    byPositionMode;        //????﹞???????2????0??????????1??℅??“??
	BYTE                    byRes1[3];          // ㊣???℅???
	DWORD                     dwPosX;                //x℅?㊣那??????﹞?????℅??“???㊣????
	DWORD                    dwPosY;                //y℅?㊣那??????﹞?????℅??“???㊣????
	BYTE                    byRes2[8];          //㊣???℅???
}NET_DVR_OSD_POSITION, *LPNET_DVR_OSD_POSITION;

typedef struct    tagNET_DVR_DATE_FORMAT//????????????
{
	BYTE                    byMonth;                //Month,0.mm;1.mmm;2.mmmm                            
	BYTE                     byDay;                    //Day,0.dd;                                    
	BYTE                     byYear;                    //Year,0.yy;1.yyyy    
	BYTE                    byDateForm;                //0~5???那??????????℅谷??
	BYTE                    byRes[20];              // ㊣???℅???
	char                    chSeprator[4];            //﹞???﹞?
	char                    chDisplaySeprator[4];    //????﹞???﹞?
	BYTE                    byDisplayForm;            //0~5??3??item??????℅谷??
	BYTE                    res[27];                // ㊣???℅???
}NET_DVR_DATE_FORMAT, *LPNET_DVR_DATE_FORMAT;
typedef struct    tagNET_DVRT_TIME_FORMAT//?㊣??????????
{
	BYTE                    byTimeForm;                //1. HH MM SS;0. HH MM
	BYTE                     byRes1[23];             // ㊣???℅???
	BYTE                    byHourMode;             //0,12;1,24 
	BYTE                    byRes2[3];              // ㊣???℅???
	char                    chSeprator[4];             //㊣“??﹞???﹞??????㊣????
	char                    chDisplaySeprator[4];    //????﹞???﹞?
	BYTE                    byDisplayForm;            //0~5??3??item??????℅谷??
	BYTE                    byRes3[3];              // ㊣???℅???
	BYTE                    byDisplayHourMode;        //0,12;1,24 
	BYTE                    byRes4[19];             // ㊣???℅???
}NET_DVR_TIME_FORMAT, *LPNET_DVR_TIME_FORMAT;

typedef struct tagNET_DVR_OVERLAY_CHANNEL
{
	BYTE                    byChannel[64];//???????“?? ????℅???㊣那???????“???? ????byChannel[0]????1?????????“??1??0㊣赤?????????“??1??
	DWORD                    dwDelayTime;            //???????㊣?㊣??
	BYTE                    byEnableDelayTime;        //??﹞????????????㊣
	BYTE                    byRes[11];          // ㊣???℅???
}NET_DVR_OVERLAY_CHANNEL, *LPNET_DVR_OVERLAY_CHANNEL;

// ATM ㊣“??????????
typedef struct tagNET_DVR_ATM_PACKAGE_ACTION
{
	NET_DVR_PACKAGE_LOCATION    struPackageLocation;// ㊣“??????????
	NET_DVR_OSD_POSITION        struOsdPosition;    // OSD ????????
	NET_DVR_FRAMETYPECODE        struActionCode;        //???℅?角????????
	NET_DVR_FRAMETYPECODE        struPreCode;        //????℅?﹞??∼??℅?﹞?
	BYTE                    byActionCodeMode;        //???℅?角????????????0,ASCII;1,HEX
	BYTE                    byRes[7];               // ㊣???℅???
}NET_DVR_ATM_PACKAGE_ACTION, *LPNET_DVR_ATM_PACKAGE_ACTION;

// ATM ㊣“??DATA????
typedef struct tagNET_DVR_ATM_PACKAGE_DATE
{
	NET_DVR_PACKAGE_LOCATION    struPackageLocation;// ??????㊣“??????????????
	NET_DVR_DATE_FORMAT            struDateForm;        //????????????
	NET_DVR_OSD_POSITION        struOsdPosition;    // OSD????????????
	BYTE                        res[8];             // ㊣???℅???
}NET_DVR_ATM_PACKAGE_DATE, *LPNET_DVR_ATM_PACKAGE_DATE;


//ATM㊣“???㊣??????
typedef struct tagNET_DVR_ATM_PACKAGE_TIME
{
	NET_DVR_PACKAGE_LOCATION    location;        // ?㊣????㊣“??????????????
	NET_DVR_TIME_FORMAT            struTimeForm;    // ?㊣??????????
	NET_DVR_OSD_POSITION        struOsdPosition;// OSD ????????????
	BYTE                        byRes[8];        // ㊣???℅???
}NET_DVR_ATM_PACKAGE_TIME, *LPNET_DVR_ATM_PACKAGE_TIME;


// ATM ????㊣“???????“?“???????℅?????????℅?辰????
typedef struct tagNET_DVR_ATM_PACKAGE_OTHERS
{
	NET_DVR_PACKAGE_LOCATION    struPackageLocation; //㊣“??????????
	NET_DVR_PACKAGE_LENGTH    struPackageLength;        //?∟??????
	NET_DVR_OSD_POSITION        struOsdPosition;    // OSD????????????
	NET_DVR_FRAMETYPECODE        struPreCode;        //????℅?﹞??∼??℅?﹞?
	BYTE                    res[8];                    //㊣???℅???
}NET_DVR_ATM_PACKAGE_OTHERS, *LPNET_DVR_ATM_PACKAGE_OTHERS;


//???∫℅??“?????谷
typedef struct tagNET_DVR_ATM_USER_DEFINE_PROTOCOL
{
	NET_DVR_IDENTIFICAT        struIdentification;  //㊣“??㊣那??
	NET_DVR_FILTER             struFilter; //????∼邦?????豕??
	NET_DVR_ATM_PACKAGE_OTHERS struCardNoPara; //?????“???豕??
	NET_DVR_ATM_PACKAGE_ACTION struTradeActionPara[MAX_ACTION_TYPE]; //???????℅?????豕?? 0-9 ????????InCard OutCard OverLay SetTime GetStatus Query WithDraw Deposit ChanPass Transfer
	NET_DVR_ATM_PACKAGE_OTHERS struAmountPara; //???????℅?????豕??
	NET_DVR_ATM_PACKAGE_OTHERS struSerialNoPara; //???????℅?辰???豕??
	NET_DVR_OVERLAY_CHANNEL    struOverlayChan; //?????“???豕??
	NET_DVR_ATM_PACKAGE_DATE   struRes1; //??????????㊣???
	NET_DVR_ATM_PACKAGE_TIME   struRes2; //?????㊣????㊣???
	BYTE                       byRes3[124];        //㊣???
}NET_DVR_ATM_USER_DEFINE_PROTOCOL, *LPNET_DVR_ATM_USER_DEFINE_PROTOCOL;

typedef struct tagNET_DVR_ATM_FRAMEFORMAT_V30
{
	DWORD                        dwSize;                 //?芍???車??
	BYTE                        byEnable;                /*??﹞?????0,??????;1,????*/
	BYTE                        byInputMode;            /**????﹞???:0-?????角????1???????谷??2-?????角????3-???????谷*/
	BYTE                        byRes1[34];              //㊣???℅??? 
	NET_DVR_IPADDR                struAtmIp;                /*ATM ?迆IP ?????角???㊣???? */
	WORD                        wAtmPort;                /* ???????谷﹞????㊣??????*/
	BYTE                        byRes2[2];              // ㊣???℅???
	DWORD                        dwAtmType;                /*ATM???谷?角??????NET_DVR_ATM_PROTOCOL?芍???????????????角????℅??“???㊣???????∫℅??“?????谷*/
	NET_DVR_ATM_USER_DEFINE_PROTOCOL   struAtmUserDefineProtocol; //???∫℅??“?????谷???㊣ATM?角????℅??“?㊣?豕?????????“??
	BYTE                        byRes3[8];
}NET_DVR_ATM_FRAMEFORMAT_V30, *LPNET_DVR_ATM_FRAMEFORMAT_V30;

//ATM???谷?角??
typedef enum _ATM_PROTO_TYPE_
{
	ATM_PROTO_NCR = 0,//NCR
	ATM_PROTO_DIEBOLD = 1,//DIEBOLD
	ATM_PROTO_WINCOR_NIXDORF = 2,//WINCOR-NIXDORF
	ATM_PROTO_SIEMENS = 4,//SIEMENS
	ATM_PROTO_OLIVETTI = 5,//OLIVETTI
	ATM_PROTO_FUJITSU = 6,//FUJITSU
	ATM_PROTO_HITACHI = 7,//HITACHI
	ATM_PROTO_SMI = 8,//SMI
	ATM_PROTO_BULL = 9,//BULL
	ATM_PROTO_YIHUA = 10,//?迄??
	ATM_PROTO_LIDE = 11,//????
	ATM_PROTO_GDYT = 12,//???????“
	ATM_PROTO_MINI_BANL = 13,//Mini-Banl
	ATM_PROTO_GUANGLI = 14,//????
	ATM_PROTO_DONGXIN = 15,//????
	ATM_PROTO_CHENTONG = 16,//???“
	ATM_PROTO_NANTIAN = 17,//???足
	ATM_PROTO_XIAOXING = 18,//????
	ATM_PROTO_GZYY = 19,//?????迄??
	ATM_PROTO_QHTLT = 20,//?角????????
	ATM_PROTO_DRS918 = 21,//DRS918 
	ATM_PROTO_KALATEL = 22,//KALATEL 
	ATM_PROTO_NCR_2 = 23,//NCR_2
	ATM_PROTO_NXS = 24,//NXS
	ATM_PROTO_ICBC = 25,//?∟??????
	ATM_PROTO_PSBC = 26,//???迆????????????
	ATM_PROTO_CUSTOM = 1025//℅??“??
}ATM_PROTO_TYPE;

typedef struct  tagNET_DVR_ATM_PROTO_TYPE
{
	DWORD dwAtmType; //ATM???谷?角???????㊣℅‾???‾???辰?? ATM ????????dwAtmType ℅??“???㊣??1025
	char chDesc[ATM_DESC_LEN]; //ATM???谷?辰???豕??
}NET_DVR_ATM_PROTO_TYPE, *LPNET_DVR_ATM_PROTO_TYPE; //???谷?????????芍??

typedef struct tagNET_DVR_ATM_PROTO_LIST    //ATM ???谷??㊣赤
{
	DWORD                  dwAtmProtoNum;           // ???谷??㊣赤??????
	NET_DVR_ATM_PROTO_TYPE struAtmProtoType[MAX_ATM_PROTOCOL_NUM]; //???谷??㊣赤????
}NET_DVR_ATM_PROTO_LIST, *LPNET_DVR_ATM_PROTO_LIST;

typedef struct tagNET_DVR_ATM_PROTOCOL
{
	DWORD dwSize;
	NET_DVR_ATM_PROTO_LIST struNetListenList; // ?????角?????谷?豕??
	NET_DVR_ATM_PROTO_LIST struSerialListenList; //?????角?????谷?豕??
	NET_DVR_ATM_PROTO_LIST struNetProtoList;     //???????谷?豕??
	NET_DVR_ATM_PROTO_LIST struSerialProtoList;   //???????谷?豕??
	NET_DVR_ATM_PROTO_TYPE struCustomProto;        //℅??“?????谷
}NET_DVR_ATM_PROTOCOL, *LPNET_DVR_ATM_PROTOCOL;
// SDK_V31

/*****************************DS-6001D/F(begin)***************************/
//DS-6001D Decoder
typedef struct
{
	BYTE byEncoderIP[16];        //?????豕㊣???????﹞????‾IP
	BYTE byEncoderUser[16];        //?????豕㊣???????﹞????‾?????∫??
	BYTE byEncoderPasswd[16];    //?????豕㊣???????﹞????‾??????
	BYTE bySendMode;            //?????豕㊣?????﹞????‾??????????
	BYTE byEncoderChannel;        //?????豕㊣???????﹞????‾???“????
	WORD wEncoderPort;            //?????豕㊣???????﹞????‾????????
	BYTE reservedData[4];        //㊣???
}NET_DVR_DECODERINFO, *LPNET_DVR_DECODERINFO;

typedef struct
{
	BYTE byEncoderIP[16];        //?????豕㊣???????﹞????‾IP
	BYTE byEncoderUser[16];        //?????豕㊣???????﹞????‾?????∫??
	BYTE byEncoderPasswd[16];    //?????豕㊣???????﹞????‾??????
	BYTE byEncoderChannel;        //?????豕㊣???????﹞????‾???“????
	BYTE bySendMode;            //?????豕㊣???????﹞????‾??????????
	WORD wEncoderPort;            //?????豕㊣???????﹞????‾????????
	DWORD dwConnectState;        //?????豕㊣?????﹞????‾??℅???
	BYTE reservedData[4];        //㊣???
}NET_DVR_DECODERSTATE, *LPNET_DVR_DECODERSTATE;

/*?????豕㊣????????“??*/
#define NET_DEC_STARTDEC        1
#define NET_DEC_STOPDEC            2
#define NET_DEC_STOPCYCLE        3
#define NET_DEC_CONTINUECYCLE    4
/*???????“??????*/
typedef struct
{
	char sDVRIP[16];                /* DVR IP???﹞ */
	WORD wDVRPort;                     /* ?????? */
	BYTE sUserName[NAME_LEN];        /* ???∫?? */
	BYTE sPassword[PASSWD_LEN];        /* ???? */
	BYTE byChannel;                    /* ?“???? */
	BYTE byLinkMode;                /* ???????? */
	BYTE byLinkType;                /* ?????角?? 0???‾???‾ 1??℅????‾ */
}NET_DVR_DECCHANINFO, *LPNET_DVR_DECCHANINFO;

/*?????????“????????*/
typedef struct
{
	BYTE    byPoolChans;            /*???﹞?????“?????????﹞?“??????, ℅??角4?“?? 0㊣赤??????????*/
	NET_DVR_DECCHANINFO struchanConInfo[MAX_DECPOOLNUM];
	BYTE    byEnablePoll;            /*??﹞????? 0-﹞? 1-??*/
	BYTE    byPoolTime;                /*?????㊣?? 0-㊣??? 1-10?? 2-15?? 3-20?? 4-30?? 5-45?? 6-1﹞??? 7-2﹞??? 8-5﹞??? */
}NET_DVR_DECINFO, *LPNET_DVR_DECINFO;

/*?????豕㊣?????????*/
typedef struct
{
	DWORD    dwSize;
	DWORD    dwDecChanNum;         /*?????“????????*/
	NET_DVR_DECINFO struDecInfo[MAX_DECNUM];
}NET_DVR_DECCFG, *LPNET_DVR_DECCFG;

//2005-08-01
/* ?????豕㊣????‾?“???豕?? */
typedef struct
{
	DWORD dwEnableTransPort;    /* ??﹞????????‾?“?? 0???????? 1??????*/
	char sDecoderIP[16];        /* DVR IP???﹞ */
	WORD wDecoderPort;            /* ?????? */
	WORD wDVRTransPort;            /* ?????∼??DVR????485/232??????1㊣赤??232????,2㊣赤??485???? */
	char cReserve[4];
}NET_DVR_PORTINFO, *LPNET_DVR_PORTINFO;

typedef struct
{
	DWORD dwSize;
	NET_DVR_PORTINFO struTransPortInfo[MAX_TRANSPARENTNUM]; /* ??℅谷0㊣赤??232 ??℅谷1㊣赤??485 */
}NET_DVR_PORTCFG, *LPNET_DVR_PORTCFG;

/* ??????????????﹞? */
typedef struct
{
	DWORD dwSize;
	char sDecoderIP[16];        /* DVR IP???﹞ */
	WORD wDecoderPort;            /* ?????? */
	WORD wLoadMode;                /* ??﹞????????? 1??∼???℅? 2??∼??㊣?? */
	union
	{
		BYTE byFile[100];        /* ??﹞????????? */
		struct
		{
			DWORD dwChannel;
			BYTE sUserName[NAME_LEN];    /*???車???????∫??*/
			BYTE sPassword[PASSWD_LEN];    /* ???? */
			NET_DVR_TIME struStartTime;    /* ∼??㊣????﹞????????㊣?? */
			NET_DVR_TIME struStopTime;    /* ∼??㊣????﹞????芍???㊣?? */
		}bytime;
	}mode_size;
}NET_DVR_PLAYREMOTEFILE, *LPNET_DVR_PLAYREMOTEFILE;

/*?㊣?∼?豕㊣?????????℅???*/
typedef struct
{
	DWORD dwWorkType;        /*?∟℅‾﹞?????1????????2????????????????3????????﹞????? 4??∼??㊣????﹞?????*/
	char sDVRIP[16];        /*???????豕㊣?ip*/
	WORD wDVRPort;            /*??????????*/
	BYTE byChannel;            /* ?“???? */
	BYTE byLinkMode;        /* ???????? */
	DWORD    dwLinkType;        /*?????角?? 0???‾???‾ 1??℅????‾*/
	union
	{
		struct
		{
			BYTE sUserName[NAME_LEN];    /*???車???????∫??*/
			BYTE sPassword[PASSWD_LEN];    /* ???? */
			char cReserve[52];
		}userInfo;
		struct
		{
			BYTE   fileName[100];
		}fileInfo;
		struct
		{
			DWORD    dwChannel;
			BYTE    sUserName[NAME_LEN];    /*???車???????∫??*/
			BYTE    sPassword[PASSWD_LEN];    /* ???? */
			NET_DVR_TIME struStartTime;        /* ∼??㊣????﹞????????㊣?? */
			NET_DVR_TIME struStopTime;        /* ∼??㊣????﹞????芍???㊣?? */
		}timeInfo;
	}objectInfo;
}NET_DVR_DECCHANSTATUS, *LPNET_DVR_DECCHANSTATUS;

typedef struct
{
	DWORD   dwSize;
	NET_DVR_DECCHANSTATUS struDecState[MAX_DECNUM];
}NET_DVR_DECSTATUS, *LPNET_DVR_DECSTATUS;
/*****************************DS-6001D/F(end)***************************/

//??℅?﹞?????(℅??芍??)
typedef struct
{
	WORD wShowString;                // ?∟???????車????﹞?????℅?﹞?,0-??????,1-???? ?????∟???????車??704*576,????℅?﹞????車????32*32
	WORD wStringSize;                /* ????℅?﹞????∟?????????車??44??℅?﹞? */
	WORD wShowStringTopLeftX;        /* ℅?﹞???????????x℅?㊣那 */
	WORD wShowStringTopLeftY;        /* ℅?﹞???????????????y℅?㊣那 */
	char sString[44];                /* ????????℅?﹞????? */
}NET_DVR_SHOWSTRINGINFO, *LPNET_DVR_SHOWSTRINGINFO;

//????℅?﹞?(9000????)
typedef struct
{
	DWORD dwSize;
	NET_DVR_SHOWSTRINGINFO struStringInfo[MAX_STRINGNUM_V30];                /* ????????℅?﹞????? */
}NET_DVR_SHOWSTRING_V30, *LPNET_DVR_SHOWSTRING_V30;

//????℅?﹞?????(8??℅?﹞?)
typedef struct
{
	DWORD dwSize;
	NET_DVR_SHOWSTRINGINFO struStringInfo[MAX_STRINGNUM_EX];                /* ????????℅?﹞????? */
}NET_DVR_SHOWSTRING_EX, *LPNET_DVR_SHOWSTRING_EX;

//????℅?﹞?
typedef struct
{
	DWORD dwSize;
	NET_DVR_SHOWSTRINGINFO struStringInfo[MAX_STRINGNUM];                /* ????????℅?﹞????? */
}NET_DVR_SHOWSTRING, *LPNET_DVR_SHOWSTRING;

/****************************DS9000?????芍??(begin)******************************/
/*
EMAIL?????芍??
*/
typedef struct
{
	DWORD        dwSize;
	BYTE        sAccount[NAME_LEN];                /* ????*/
	BYTE        sPassword[MAX_EMAIL_PWD_LEN];            /*???? */
	struct
	{
		BYTE    sName[NAME_LEN];                /* ﹞????????? */
		BYTE    sAddress[MAX_EMAIL_ADDR_LEN];        /* ﹞????????﹞ */
	}struSender;
	BYTE        sSmtpServer[MAX_EMAIL_ADDR_LEN];    /* smtp﹞????‾ */
	BYTE        sPop3Server[MAX_EMAIL_ADDR_LEN];    /* pop3﹞????‾ */
	struct
	{
		BYTE    sName[NAME_LEN];                /* ?????????? */
		BYTE    sAddress[MAX_EMAIL_ADDR_LEN];        /* ?????????﹞ */
	}struReceiver[3];                            /* ℅??角?????豕??3???????? */
	BYTE        byAttachment;                    /* ??﹞??????? */
	BYTE        bySmtpServerVerify;                /* ﹞???﹞????‾???車?赤﹞??谷?∟ */
	BYTE        byMailInterval;                 /* mail interval */
	BYTE        byEnableSSL;                    //ssl??﹞?????9000_1.1
	WORD        wSmtpPort;                        //gmail??465?????“????25 
	BYTE        byEnableTLS;                    /*TLS??﹞?????*/
	BYTE        byStartTLS;                     /*??﹞?????StartTLS*/
	BYTE        byRes[72];                        /*㊣???*/
} NET_DVR_EMAILCFG_V30, *LPNET_DVR_EMAILCFG_V30;

/*
DVR?????????????芍??
*/
typedef struct
{
	DWORD     dwSize;
	BYTE    byPresetNo[CRUISE_MAX_PRESET_NUMS];        /* ?∟?????? */
	BYTE     byCruiseSpeed[CRUISE_MAX_PRESET_NUMS];    /* ???????? */
	WORD    wDwellTime[CRUISE_MAX_PRESET_NUMS];        /* ?????㊣?? */
	BYTE    byEnableThisCruise;                        /* ??﹞????? */
	BYTE    res[15];
}NET_DVR_CRUISE_PARA, *LPNET_DVR_CRUISE_PARA;
/****************************DS9000?????芍??(end)******************************/

//?㊣????
typedef struct
{
	DWORD dwMonth;        //?? 0-11㊣赤??1-12????
	DWORD dwWeekNo;        //?????? 0????1?? 1????2?? 2????3?? 3????4?? 4??℅??車????
	DWORD dwWeekDate;    //?????? 0???????? 1???????? 2???????? 3???????? 4???????? 5???????? 6???????迄
	DWORD dwHour;        //???㊣    ?????㊣??0??23 ?芍???㊣??1??23
	DWORD dwMin;        //﹞?    0??59
}NET_DVR_TIMEPOINT;

//?????㊣????
typedef struct
{
	DWORD dwSize;
	DWORD dwZoneIndex; //???????赤??????NET_DVR_NTPPARA ????cTimeDifferenceH ?辰cTimeDifferenceM ???豕???㊣???????????????????????????????∫?芍??????㊣角???辰
	BYTE byRes1[12];            //㊣???
	DWORD dwEnableDST;        //??﹞????????㊣?? 0???????? 1??????
	BYTE byDSTBias;    //?????㊣????????30min, 60min, 90min, 120min, ??﹞???????????????????
	BYTE byRes2[3];
	NET_DVR_TIMEPOINT struBeginPoint;    //???㊣???????㊣??
	NET_DVR_TIMEPOINT struEndPoint;    //???㊣???????㊣??
}NET_DVR_ZONEANDDST, *LPNET_DVR_ZONEANDDST;

//????????
typedef struct
{
	/*℅??????㊣????????﹞?㊣?????VGA?㊣???∫??0=CIF, 1=QCIF, 2=D1℅?????
	?㊣﹞?㊣?????3=UXGA(1600x1200), 4=SVGA(800x600), 5=HD720p(1280x720),6=VGA,7=XVGA, 8=HD900p
	???∫???㊣?∼﹞?㊣?????℅???*/

	/* ?????“????????????
	0-CIF??           1-QCIF??           2-D1??         3-UXGA(1600x1200), 4-SVGA(800x600),5-HD720p(1280x720)??
	6-VGA??           7-XVGA??           8-HD900p??     9-HD1080??     10-2560*1920??
	11-1600*304??     12-2048*1536??     13-2448*2048,  14-2448*1200?? 15-2448*800??
	16-XGA(1024*768), 17-SXGA(1280*1024),18-WD1(960*576/960*480),      19-1080i,      20-576*576??
	21-1536*1536,     22-1920*1920,      23-320*240,    24-720*720,    25-1024*768,
	26-1280*1280,     27-1600*600,       28-2048*768,   29-160*120,    55-3072*2048,
	64-3840*2160,     70-2560*1440,      75-336*256,
	78-384*256,         79-384*216,        80-320*256,    82-320*192,    83-512*384,
	127-480*272,      128-512*272,       161-288*320,   162-144*176,   163-480*640,
	164-240*320,      165-120*160,       166-576*720,   167-720*1280,  168-576*960,
	180-180*240,      181-360*480,       182-540*720,    183-720*960,  184-960*1280,
	185-1080*1440,      215-1080*720(????????????),  216-360x640(????????????),245-576*704(????????????)
	500-384*288,
	0xff-Auto(?????㊣?∼???‾﹞?㊣???)
	*/
	WORD    wPicSize;
	WORD    wPicQuality;            /* ???????????? 0-℅??? 1-???? 2-??∼? */
}NET_DVR_JPEGPARA, *LPNET_DVR_JPEGPARA;

typedef struct tagNET_DVR_JPEGPICTURE_WITH_APPENDDATA
{
	DWORD   dwSize;
	DWORD   dwChannel;//?“????
	DWORD   dwJpegPicLen;//Jpeg?????∟??
	char    *pJpegPicBuff;//Jpeg????????
	DWORD   dwJpegPicWidth;  // ?????赤??
	DWORD   dwJpegPicHeight;  //????????
	DWORD   dwP2PDataLen;//?????????????∟??
	char    *pP2PDataBuff; //????????????????   
	BYTE    byIsFreezedata;//??﹞????????芍 0-﹞? 1-??
	BYTE    byRes[255];
}NET_DVR_JPEGPICTURE_WITH_APPENDDATA, *LPNET_DVR_JPEGPICTURE_WITH_APPENDDATA;

//℅???????
typedef  struct
{
	NET_DVR_JPEGPARA  struParam;
	BYTE   byPicFormat;            // ?豕㊣?℅??????????? 0-Jpeg
	BYTE   byCapturePicType;        // ?豕㊣?℅????角?? 0-?豕㊣??“??℅?????1-????㊣那?“?????“FPJA???????????????? ℅??∟???㊣3min??,2-??Flash????????????????㊣那?“????,3-?????????角?迆????????
	BYTE   bySceneID;               //0-???∫????1-???∼1??2-???∼2 ????
	BYTE   byRes[253];
}NET_DVR_PICPARAM_V50, *LPNET_DVR_PICPARAM_V50;
/* aux video out parameter */
//?“?迆????????????
typedef struct
{
	DWORD dwSize;
	DWORD dwAlarmOutChan;                       /* ????㊣“???????車㊣“???“???????㊣????1???????????“??: 0:?‾????/1:?“1/2:?“2/3:?“3/4:?“4 */
	DWORD dwAlarmChanSwitchTime;                /* :1?? - 10:10?? */
	DWORD dwAuxSwitchTime[MAX_AUXOUT];            /* ?“?迆?????????㊣??: 0-??????,1-5s,2-10s,3-20s,4-30s,5-60s,6-120s,7-300s */
	BYTE  byAuxOrder[MAX_AUXOUT][MAX_WINDOW];    /* ?“?迆?????∟?????辰, 0xff㊣赤???角?????∼?????∟?? */
}NET_DVR_AUXOUTCFG, *LPNET_DVR_AUXOUTCFG;


//ntp
typedef struct
{
	BYTE sNTPServer[64];   /* Domain Name or IP addr of NTP server */
	WORD wInterval;         /* adjust time interval(hours) */
	BYTE byEnableNTP;    /* enable NPT client 0-no??1-yes*/
	signed char cTimeDifferenceH; /* ???迆??㊣那℅??㊣???? ???㊣????-12 ... +13 */
	signed char cTimeDifferenceM;/* ???迆??㊣那℅??㊣???? ﹞???????0, 30, 45*/
	BYTE res1;
	WORD wNtpPort;         /* ntp server port 9000???? ?豕㊣???????123*/
	BYTE res2[8];
}NET_DVR_NTPPARA, *LPNET_DVR_NTPPARA;

//ddns
typedef struct
{
	BYTE sUsername[NAME_LEN];  /* DDNS???????∫??/???? */
	BYTE sPassword[PASSWD_LEN];
	BYTE sDomainName[64];       /* ?辰?? */
	BYTE byEnableDDNS;            /*??﹞????? 0-﹞???1-??*/
	BYTE res[15];
}NET_DVR_DDNSPARA, *LPNET_DVR_DDNSPARA;


typedef struct
{
	BYTE byHostIndex;                    /* 0-????DDNS 1??Dyndns 2??PeanutHull(?“?迆??)*/
	BYTE byEnableDDNS;                    /*??﹞?????DDNS 0-﹞???1-??*/
	WORD wDDNSPort;                        /* DDNS?????? */
	BYTE sUsername[NAME_LEN];            /* DDNS???∫??*/
	BYTE sPassword[PASSWD_LEN];            /* DDNS???? */
	BYTE sDomainName[MAX_DOMAIN_NAME];    /* ?豕㊣???㊣????辰?????﹞ */
	BYTE sServerName[MAX_DOMAIN_NAME];    /* DDNS ??????﹞????‾???﹞????????IP???﹞?辰?辰?? */
	BYTE byRes[16];
}NET_DVR_DDNSPARA_EX, *LPNET_DVR_DDNSPARA_EX;

//9000????
typedef struct
{
	BYTE byEnableDDNS;
	BYTE byHostIndex;/*0-IPServer 1??Dyndns 2??PeanutHull(?“?迆??)??3- NO-IP, 4- hiDDNS*/
	BYTE byRes1[2];
	struct
	{
		BYTE sUsername[NAME_LEN];            /* DDNS???????∫??*/
		BYTE sPassword[PASSWD_LEN];            /* ???? */
		BYTE sDomainName[MAX_DOMAIN_NAME];    /* ?豕㊣???㊣????辰?????﹞ */
		BYTE sServerName[MAX_DOMAIN_NAME];    /* DDNS???谷??????﹞????‾???﹞????????IP???﹞?辰?辰?? */
		WORD wDDNSPort;                        /* ?????? */
		WORD    wCountryID;        //?迆??㊣角????????byHostIndex = 4?㊣???∫??0㊣赤??????
		BYTE byStatus;                      /* DDNS????℅????“????????
											0-??????
											1-????﹞????‾?∫∼?(connServerfail)??
											2-????﹞????‾?????∫∼?(solveServerMesFail)??
											3-????????﹞????‾?∫∼?(connHeartSrvfail)??
											4-????????﹞????‾?????∫∼?(solveHeartSrvMesFail)??
											5-?????辰??﹞????‾?∫∼?(connHostSrvfail)??
											6-?????辰??﹞????‾?????∫∼?(solveHostSrvMesFail)??
											7-DDNS℅???????(updateSuccess)??
											8-??????(disable)??
											9-℅??芍?辰??????(registHostSuccess)??
											10-DNS﹞????‾?????赤?車(DNSSrvError)??
											11-?辰??㊣?????(DomainConflict)??
											12-㊣???(?辰??)????﹞“(invalidAlias)??
											13-???“?∫∼?(authenticationFail)
											14-℅??芍﹞????‾?赤?車(registServerError)
											15-℅??芍?∫∼?(registFail)
											*/
		BYTE byRes[7];
	} struDDNS[MAX_DDNS_NUMS];
	BYTE byRes2[16];
}NET_DVR_DDNSPARA_V30, *LPNET_DVR_DDNSPARA_V30;

//email
typedef struct
{
	BYTE sUsername[64];  /* ????????/???? */
	BYTE sPassword[64];
	BYTE sSmtpServer[64];
	BYTE sPop3Server[64];
	BYTE sMailAddr[64];   /* email */
	BYTE sEventMailAddr1[64];  /* ????㊣“??/?足??????email */
	BYTE sEventMailAddr2[64];
	BYTE res[16];
}NET_DVR_EMAILPARA, *LPNET_DVR_EMAILPARA;

//????????????
typedef struct
{
	DWORD  dwSize;
	char  sDNSIp[16];                /* DNS﹞????‾???﹞ */
	NET_DVR_NTPPARA  struNtpClientParam;      /* NTP???? */
	NET_DVR_DDNSPARA struDDNSClientParam;     /* DDNS???? */
	BYTE res[464];            /* ㊣??? */
}NET_DVR_NETAPPCFG, *LPNET_DVR_NETAPPCFG;

//nfs?芍??????
typedef struct
{
	char sNfsHostIPAddr[16];
	BYTE sNfsDirectory[PATHNAME_LEN];        // PATHNAME_LEN = 128
}NET_DVR_SINGLE_NFS, *LPNET_DVR_SINGLE_NFS;

typedef struct
{
	DWORD  dwSize;
	NET_DVR_SINGLE_NFS struNfsDiskParam[MAX_NFS_DISK];
}NET_DVR_NFSCFG, *LPNET_DVR_NFSCFG;

typedef struct tagNET_DVR_ISCSI_CFG
{
	DWORD dwSize;                   // ?芍???車??
	WORD wVrmPort;                  // VRM ?角??????
	BYTE byEnable;                  // ??﹞????? ISCSI????
	BYTE byRes[69];                 // ㊣???℅???
	NET_DVR_IPADDR struVrmAddr;          // VRM ip???﹞ 16??
	char chNvtIndexCode[64];        //nvt index Code 
}NET_DVR_ISCSI_CFG, *LPNET_DVR_ISCSI_CFG;

//??????????(????IP?足?辰℅“??)
typedef struct
{
	BYTE    PresetNum;    //?∟????
	BYTE    Dwell;        //?????㊣??
	BYTE    Speed;        //????
	BYTE    Reserve;    //㊣???
}NET_DVR_CRUISE_POINT, *LPNET_DVR_CRUISE_POINT;

typedef struct
{
	NET_DVR_CRUISE_POINT struCruisePoint[32];            //℅??車?∫??32????????
}NET_DVR_CRUISE_RET, *LPNET_DVR_CRUISE_RET;

/************************************?角?﹞?????‾(begin)***************************************/
typedef struct
{
	DWORD    dwSize;
	char    sFirstDNSIP[16];
	char    sSecondDNSIP[16];
	char    sRes[32];
}NET_DVR_NETCFG_OTHER, *LPNET_DVR_NETCFG_OTHER;

typedef struct
{
	char     sDVRIP[16];                /* DVR IP???﹞ */
	WORD     wDVRPort;                 /* ?????? */
	BYTE     byChannel;                /* ?“???? */
	BYTE    byTransProtocol;            /* ???????谷?角?? 0-TCP, 1-UDP */
	BYTE    byTransMode;                /* ???????‾???? 0???‾???‾ 1??℅????‾*/
	BYTE    byRes[3];
	BYTE    sUserName[NAME_LEN];            /* ?角???‾?迆???????? */
	BYTE    sPassword[PASSWD_LEN];            /* ?角???‾?迆???? */
}NET_DVR_MATRIX_DECINFO, *LPNET_DVR_MATRIX_DECINFO;

//????/????????????
typedef struct
{
	DWORD    dwSize;
	NET_DVR_MATRIX_DECINFO struDecChanInfo;        /* ?????????“?????? */
}NET_DVR_MATRIX_DYNAMIC_DEC, *LPNET_DVR_MATRIX_DYNAMIC_DEC;

typedef struct
{
	DWORD     dwSize;
	DWORD   dwIsLinked;         /* ?????“??℅??? 0?????? 1?????????? 2???????? 3-???????? */
	DWORD   dwStreamCpRate;     /* Stream copy rate, X kbits/second */
	char    cRes[64];        /* ㊣??? */
}NET_DVR_MATRIX_DEC_CHAN_STATUS, *LPNET_DVR_MATRIX_DEC_CHAN_STATUS;

typedef struct
{
	DWORD    dwSize;
	NET_DVR_MATRIX_DECINFO struDecChanInfo;        /* ?????“?????? */
	DWORD    dwDecState;    /* 0-???????? 1?????﹞???? 2??∼??㊣????﹞? 3??∼???????﹞? */
	NET_DVR_TIME StartTime;        /* ∼??㊣????﹞??????㊣?? */
	NET_DVR_TIME StopTime;        /* ∼??㊣????﹞??????㊣?? */
	char    sFileName[128];        /* ∼???????﹞??????? */
}NET_DVR_MATRIX_DEC_CHAN_INFO, *LPNET_DVR_MATRIX_DEC_CHAN_INFO;

//???????“?????? 2007-11-05
typedef struct
{
	DWORD dwEnable;                    /* ??﹞????? 0??﹞? 1??????*/
	NET_DVR_MATRIX_DECINFO struDecChanInfo;        /* ?????????“?????? */
}NET_DVR_MATRIX_DECCHANINFO, *LPNET_DVR_MATRIX_DECCHANINFO;

//2007-11-05 ?????????????“????????
typedef struct
{
	DWORD    dwSize;
	DWORD    dwPoolTime;            /*?????㊣?? */
	NET_DVR_MATRIX_DECCHANINFO struchanConInfo[MAX_CYCLE_CHAN];
}NET_DVR_MATRIX_LOOP_DECINFO, *LPNET_DVR_MATRIX_LOOP_DECINFO;

//2007-12-22
typedef struct
{
	BYTE    baudrate;     /* ?“???? */
	BYTE    databits;        /* ?????? */
	BYTE    stopbits;        /* ?????? */
	BYTE    parity;        /* ???????谷?? */
	BYTE    flowcontrol;    /* ?‾?? */
	BYTE    res[3];
}TTY_CONFIG, *LPTTY_CONFIG;

typedef struct
{
	BYTE byTranChanEnable;    /* ?㊣?∼???‾?“????﹞??辰?? 0????㊣? 1???辰?? */
							  /*
							  *    ?角?﹞?????‾㊣?????1??485??????1??232??????????℅‾?????‾?“??,?豕㊣???﹞?????????
							  *    0 RS485
							  *    1 RS232 Console
							  */
	BYTE    byLocalSerialDevice;            /* Local serial device */
											/*
											*    ????????????????????,????RS232??????RS485
											*    1㊣赤??232????
											*    2㊣赤??485????
											*/
	BYTE    byRemoteSerialDevice;            /* Remote output serial device */
	BYTE    res1;                            /* ㊣??? */
	char    sRemoteDevIP[16];                /* Remote Device IP */
	WORD    wRemoteDevPort;                /* Remote Net Communication Port */
	BYTE    res2[2];                        /* ㊣??? */
	TTY_CONFIG RemoteSerialDevCfg;
}NET_DVR_MATRIX_TRAN_CHAN_INFO, *LPNET_DVR_MATRIX_TRAN_CHAN_INFO;

typedef struct
{
	DWORD dwSize;
	BYTE     by232IsDualChan; /* ?豕?????﹞232???‾?“?????????∟?? ????1??MAX_SERIAL_NUM */
	BYTE    by485IsDualChan; /* ?豕?????﹞485???‾?“?????????∟?? ????1??MAX_SERIAL_NUM */
	BYTE    res[2];    /* ㊣??? */
	NET_DVR_MATRIX_TRAN_CHAN_INFO struTranInfo[MAX_SERIAL_NUM];/*???㊣?∫???“??MAX_SERIAL_NUM?????‾?“??*/
}NET_DVR_MATRIX_TRAN_CHAN_CONFIG, *LPNET_DVR_MATRIX_TRAN_CHAN_CONFIG;

//2007-12-24 Merry Christmas Eve...
typedef struct
{
	DWORD    dwSize;
	char    sDVRIP[16];        /* DVR IP???﹞ */
	WORD    wDVRPort;            /* ?????? */
	BYTE    byChannel;            /* ?“???? */
	BYTE     byReserve;
	BYTE    sUserName[NAME_LEN];        /* ???∫?? */
	BYTE    sPassword[PASSWD_LEN];        /* ???? */
	DWORD    dwPlayMode;       /* 0??∼????? 1??∼??㊣??*/
	NET_DVR_TIME StartTime;
	NET_DVR_TIME StopTime;
	char    sFileName[128];
}NET_DVR_MATRIX_DEC_REMOTE_PLAY, *LPNET_DVR_MATRIX_DEC_REMOTE_PLAY;

/* ??????﹞??邦?? */
#define NET_DVR_PLAYSTART        1//??????﹞?
#define NET_DVR_PLAYSTOP        2//??????﹞?
#define NET_DVR_PLAYPAUSE        3//??????﹞?
#define NET_DVR_PLAYRESTART        4//??????﹞?
#define NET_DVR_PLAYFAST        5//?足﹞?
#define NET_DVR_PLAYSLOW        6//??﹞?
#define NET_DVR_PLAYNORMAL        7//????????
#define NET_DVR_PLAYSTARTAUDIO    9//?辰???迄??
#define NET_DVR_PLAYSTOPAUDIO    10//??㊣??迄??
#define NET_DVR_PLAYSETPOS        12//??㊣???????﹞???????
#define NET_DVR_RESETBUFFER	    37  //???????車???????????“??????﹞???????

typedef struct
{
	DWORD    dwSize;
	DWORD    dwPlayCmd;        /* ??﹞??邦?? ????????﹞??邦??*/
	DWORD    dwCmdParam;        /* ??﹞??邦?????? */
}NET_DVR_MATRIX_DEC_REMOTE_PLAY_CONTROL, *LPNET_DVR_MATRIX_DEC_REMOTE_PLAY_CONTROL;

typedef struct
{
	DWORD dwSize;
	DWORD dwCurMediaFileLen;        /* ?㊣?∼??﹞????????????∟?? */
	DWORD dwCurMediaFilePosition;    /* ?㊣?∼??﹞?????????﹞????? */
	DWORD dwCurMediaFileDuration;    /* ?㊣?∼??﹞???????℅??㊣?? */
	DWORD dwCurPlayTime;            /* ?㊣?∼??????﹞????㊣?? */
	DWORD dwCurMediaFIleFrames;        /* ?㊣?∼??﹞???????℅????? */
	DWORD dwCurDataType;            /* ?㊣?∼???????????角????19-?????﹞??20-?‾?????? 21-??﹞??芍??㊣那?? */
	BYTE res[72];
}NET_DVR_MATRIX_DEC_REMOTE_PLAY_STATUS, *LPNET_DVR_MATRIX_DEC_REMOTE_PLAY_STATUS;

//2009-4-11 added by likui ?角?﹞?????‾new
typedef struct tagNET_MATRIX_PASSIVEMODE
{
	WORD    wTransProtol;        //???????谷??0-TCP, 1-UDP, 2-MCAST
	WORD    wPassivePort;        //UDP????, TCP?㊣????
	NET_DVR_IPADDR  struMcastIP;    //TCP,UDP?㊣???∫, MCAST?㊣???角?????﹞
	BYTE    byStreamType;/* ??????﹞?????:REAL_TIME_STREAM(1)???㊣?‾,RECORD_STREAM(2)?????‾ */
	BYTE    byRes[7];
}NET_DVR_MATRIX_PASSIVEMODE, *LPNET_DVR_MATRIX_PASSIVEMODE;

typedef struct tagNET_DVR_MATRIX_TRAN_CHAN_INFO_V30
{
	BYTE  byTranChanEnable;            /* ?㊣?∼???‾?“????﹞??辰?? 0????㊣? 1???辰?? */
	BYTE  byLocalSerialDevice;      /* Local serial device */
									/*
									*  ?角?﹞?????‾㊣?????1??485??????1??232??????????℅‾?????‾?“??,?豕㊣???﹞?????????
									*  0 RS485
									*  1 RS232 Console
									*  2 Dual Scom
									*/
	BYTE  byRemoteSerialDevice;        /* Remote output serial device */
									   /*
									   *  ????????????????????,????RS232??????RS485
									   *  1 ㊣赤??232????
									   *  2 ㊣赤??485????
									   */
	BYTE  byRes1;                    /* ㊣??? */
	NET_DVR_IPADDR struRemoteDevIP; /* Remote Device IP */
	WORD  wRemoteDevPort;            /* Remote Net Communication Port */
	BYTE  byIsEstablished;            /* ???‾?“???“??????㊣那????0-??????????1-?“?????? */
	BYTE  byRes2;                    /* ㊣??? */
	TTY_CONFIG RemoteSerialDevCfg;
	BYTE  byUsername[NAME_LEN];
	BYTE  byPassword[PASSWD_LEN];
	DWORD dwLocalSerialNo;          /* ㊣??????? */
	DWORD dwRemoteSerialNo;         /* ???????? */
	BYTE  byRes3[8];
} NET_DVR_MATRIX_TRAN_CHAN_INFO_V30, *LPNET_DVR_MATRIX_TRAN_CHAN_INFO_V30;

typedef struct tagMATRIX_TRAN_CHAN_CONFIG
{
	DWORD dwSize;
	BYTE  by232IsDualChan; /* ?豕?????﹞232???‾?“?????????∟?? ????1??MAX_SERIAL_NUM */
	BYTE  by485IsDualChan; /* ?豕?????﹞485???‾?“?????????∟?? ????1??MAX_SERIAL_NUM */
	BYTE  byRes[2];           /* ㊣??? */
	NET_DVR_MATRIX_TRAN_CHAN_INFO_V30 struTranInfo[MAX_SERIAL_NUM]; /*???㊣?∫???“??MAX_SERIAL_NUM?????‾?“??*/
}NET_DVR_MATRIX_TRAN_CHAN_CONFIG_V30, *LPNET_DVR_MATRIX_TRAN_CHAN_CONFIG_V30;

typedef struct
{
	DWORD                                dwEnable;    /* ??﹞????? 0??﹞? 1??????*/
	NET_DVR_STREAM_MEDIA_SERVER_CFG    streamMediaServerCfg;
	NET_DVR_DEV_CHAN_INFO         struDevChanInfo;        /* ?????????“?????? */
}NET_DVR_MATRIX_CHAN_INFO_V30, *LPNET_DVR_CYC_SUR_CHAN_ELE_V30;

typedef struct  tagMATRIX_LOOP_DECINFO_V30
{
	DWORD                            dwSize;
	DWORD                            dwPoolTime;        /*????????*/
	NET_DVR_MATRIX_CHAN_INFO_V30    struchanConInfo[MAX_CYCLE_CHAN_V30];
	BYTE                               byRes[16];
} NET_DVR_MATRIX_LOOP_DECINFO_V30, *LPNET_DVR_MATRIX_LOOP_DECINFO_V30;


typedef struct tagDEC_MATRIX_CHAN_INFO_V30
{
	DWORD    dwSize;
	NET_DVR_STREAM_MEDIA_SERVER_CFG streamMediaServerCfg;    /*?‾????﹞????‾????*/
	NET_DVR_DEV_CHAN_INFO               struDevChanInfo;        /* ?????“?????? */
	DWORD    dwDecState;        /* 0-???????? 1?????﹞???? 2??∼??㊣????﹞? 3??∼???????﹞? */
	NET_DVR_TIME StartTime;        /* ∼??㊣????﹞??????㊣?? */
	NET_DVR_TIME StopTime;        /* ∼??㊣????﹞??????㊣?? */
	char    sFileName[128];        /* ∼???????﹞??????? */
	DWORD   dwGetStreamMode;    /*???‾????:1-?‾????2-㊣???*/
	NET_DVR_MATRIX_PASSIVEMODE      struPassiveMode;
	BYTE    byRes[32];
}NET_DVR_MATRIX_DEC_CHAN_INFO_V30, *LPNET_DVR_MATRIX_DEC_CHAN_INFO_V30;

#define MAX_RESOLUTIONNUM    64 //?∫????℅??車﹞?㊣???????
typedef struct tagNET_DVR_MATRIX_ABILITY
{
	DWORD dwSize;
	BYTE  byDecNums;
	BYTE  byStartChan;
	BYTE  byVGANums;
	BYTE  byBNCNums;
	BYTE  byVGAWindowMode[8][12];     /*VGA?∫?????∼????????VGA1???????足??????*/
	BYTE  byBNCWindowMode[4];           /*BNC?∫?????∼??????*/
	BYTE  byDspNums;
	BYTE  byHDMINums;//HDMI?????“???????“??25??????
	BYTE  byDVINums;//DVI?????“???????“??29??????
	BYTE  byRes1[13];
	BYTE  bySupportResolution[MAX_RESOLUTIONNUM];//∼??????????????“??,????℅????迆㊣赤????﹞?㊣?????//﹞??∫????1???∫????0?????∫??
	BYTE  byHDMIWindowMode[4][8];//HDMI?∫?????∼??????
	BYTE  byDVIWindowMode[4][8];//DVI?∫?????∼??????
	BYTE  byRes2[24];
}NET_DVR_MATRIX_ABILITY, *LPNET_DVR_MATRIX_ABILITY;
//????logo?芍??
typedef struct tagNET_DVR_DISP_LOGOCFG
{
	DWORD        dwCorordinateX;    //???????????辰X℅?㊣那
	DWORD        dwCorordinateY;    //???????????辰Y℅?㊣那
	WORD        wPicWidth; //?????赤
	WORD        wPicHeight; //??????
	BYTE        byRes1[4];
	BYTE        byFlash;  //??﹞?????1-??????0-??????
	BYTE        byTranslucent; //??﹞?∼????‾1-∼????‾??0-??∼????‾
	BYTE        byRes2[6];                //㊣???
	DWORD        dwLogoSize;//LOGO?車????∼邦?“BMP???????﹞
}NET_DVR_DISP_LOGOCFG, *LPNET_DVR_DISP_LOGOCFG;

/*㊣角???角??*/
#define NET_DVR_ENCODER_UNKOWN 0 /*????㊣角??????*/
#define NET_DVR_ENCODER_H264   1 /*???? 264*/
#define NET_DVR_ENCODER_S264   2 /*Standard H264*/
#define NET_DVR_ENCODER_MPEG4  3 /*MPEG4*/
#define NET_DVR_ORIGINALSTREAM 4 /*Original Stream*/
#define NET_DVR_PICTURE           5/*Picture*/
#define NET_DVR_ENCODER_MJPEG  6
#define NET_DVR_ENCODER_MPEG2  7
#define NET_DVR_ENCODER_H265   8
#define NET_DVR_ENCODER_SVAC    9
#define NET_DVR_ENCODER_SMART264                   10/*Smart 264*/
#define NET_DVR_ENCODER_SMART265                   11/*Smart 265*/

/* ?辰∼邦???? */
#define NET_DVR_STREAM_TYPE_UNKOWN   0     /*?????辰∼邦????*/
#define NET_DVR_STREAM_TYPE_PRIVT    1     /*????????*/
#define NET_DVR_STREAM_TYPE_TS       7   /* TS?辰∼邦 */
#define NET_DVR_STREAM_TYPE_PS       8   /* PS?辰∼邦 */
#define NET_DVR_STREAM_TYPE_RTP      9    /* RTP?辰∼邦 */
#define NET_DVR_STREAM_TYPE_ORIGIN   10 //???辰∼邦(????℅??????“????℅???????)

/*?????“??℅???*/
typedef struct
{
	BYTE  byDecodeStatus; /*?㊣?∼℅???:0:????????1??????????*/
	BYTE  byStreamType;    /*???‾?角??*/
	BYTE  byPacketType;     /*?辰∼邦﹞???*/
	BYTE  byRecvBufUsage; /*??????????????*/
	BYTE  byDecBufUsage; /*??????????????*/
	BYTE  byFpsDecV; /*????????????*/
	BYTE  byFpsDecA; /*????????????*/
	BYTE  byCpuLoad;     /*DSP CPU??????*/
	BYTE  byRes1[4];
	DWORD dwDecodedV; /*????????????*/
	DWORD dwDecodedA; /*????????????*/
	WORD wImgW; /*?????‾?㊣?∼???????車??,?赤*/
	WORD wImgH; //??
	BYTE byVideoFormat; /*????????:0-NON,NTSC--1,PAL--2*/
	BYTE  byRes2[3];
	DWORD  dwDecChan;       /*?????????????“??℅????㊣???∫???豕???㊣????0*/
	BYTE  byRes3[20];
}NET_DVR_MATRIX_CHAN_STATUS, *LPNET_DVR_MATRIX_CHAN_STATUS;

/*?????“??℅???*/
#define NET_DVR_MAX_DISPREGION 16         /*?????????“??℅??角???????????∼??*/
//﹞?㊣???
//
typedef enum
{
	/*VGA*/
	VGA_NOT_AVALIABLE,
	VGA_THS8200_MODE_SVGA_60HZ,    //(800*600)
	VGA_THS8200_MODE_SVGA_75HZ,    //(800*600)
	VGA_THS8200_MODE_XGA_60HZ,     //(1024*768)
	VGA_THS8200_MODE_XGA_75HZ,     //(1024*768)
	VGA_THS8200_MODE_SXGA_60HZ,    //(1280*1024)
	VGA_THS8200_MODE_720P_60HZ,    //(1280*720)
	VGA_THS8200_MODE_1080I_60HZ,   //(1920*1080)
	VGA_THS8200_MODE_1080P_30HZ,   //(1920*1080)
	VGA_THS8200_MODE_UXGA_30HZ,    //(1600*1200)
								   /*HDMI*/
								   HDMI_SII9134_MODE_XGA_60HZ,       //(1024*768)
								   HDMI_SII9134_MODE_SXGA_60HZ,   //(1280*1024)
								   HDMI_SII9134_MODE_SXGA2_60HZ,  //(1280*960)
								   HDMI_SII9134_MODE_720P_60HZ,   //(1280*720)    
								   HDMI_SII9134_MODE_720P_50HZ,   //(1280*720)        
								   HDMI_SII9134_MODE_1080I_60HZ,  //(1920*1080)
								   HDMI_SII9134_MODE_1080I_50HZ,  //(1920*1080)    
								   HDMI_SII9134_MODE_1080P_25HZ,  //(1920*1080)
								   HDMI_SII9134_MODE_1080P_30HZ,  //(1920*1080)
								   HDMI_SII9134_MODE_1080P_50HZ,  //(1920*1080)
								   HDMI_SII9134_MODE_1080P_60HZ,  //(1920*1080)
								   HDMI_SII9134_MODE_UXGA_60HZ,   //(1600*1200)
																  /*DVI*/
																  DVI_SII9134_MODE_XGA_60HZ,       //(1024*768)
																  DVI_SII9134_MODE_SXGA_60HZ,       //(1280*1024)
																  DVI_SII9134_MODE_SXGA2_60HZ,   //(1280*960)
																  DVI_SII9134_MODE_720P_60HZ,       //(1280*720)    
																  DVI_SII9134_MODE_720P_50HZ,    //(1280*720)        
																  DVI_SII9134_MODE_1080I_60HZ,   //(1920*1080)
																  DVI_SII9134_MODE_1080I_50HZ,   //(1920*1080)
																  DVI_SII9134_MODE_1080P_25HZ,   //(1920*1080)
																  DVI_SII9134_MODE_1080P_30HZ,   //(1920*1080)
																  DVI_SII9134_MODE_1080P_50HZ,   //(1920*1080)
																  DVI_SII9134_MODE_1080P_60HZ,   //(1920*1080)
																  DVI_SII9134_MODE_UXGA_60HZ,     //(1600*1200)
																  VGA_DECSVR_MODE_SXGA2_60HZ,
																  HDMI_DECSVR_MODE_1080P_24HZ,
																  DVI_DECSVR_MODE_1080P_24HZ,
																  YPbPr_DECSVR_MODE_720P_60HZ,
																  YPbPr_DECSVR_MODE_1080I_60HZ
}VGA_MODE;

//???????“??
#define           LOW_DEC_FPS_1_2                51
#define           LOW_DEC_FPS_1_4                52
#define           LOW_DEC_FPS_1_8                53
#define           LOW_DEC_FPS_1_16               54

/*????????㊣那℅?*/
typedef enum
{
	VS_NON = 0,
	VS_NTSC = 1,
	VS_PAL = 2
}VIDEO_STANDARD;

typedef struct tagNET_DVR_VGA_DISP_CHAN_CFG
{
	DWORD    dwSize;
	BYTE    byAudio;            /*??????﹞?????,0-﹞???1-??*/
	BYTE    byAudioWindowIdx;      /*????????℅??∼??*/
	BYTE     byVgaResolution;      /*VGA??﹞?㊣???*/
	BYTE    byVedioFormat;         /*1:NTSC,2:PAL,0-NULL*/
	DWORD    dwWindowMode;        /*????????,????????????,???∼?∫??1,2,4,9,16*/
	BYTE    byJoinDecChan[MAX_WINDOWS];/*?‾??℅??∼?????????????“??*/
	BYTE    byEnlargeStatus;          /*??﹞?????﹞??車℅?????0????﹞??車??1??﹞??車*/
	BYTE    byEnlargeSubWindowIndex;//﹞??車??℅??∼????
	union
	{
		BYTE byRes[16];
		struct
		{
			/*?‾??℅??∼???????????“???迄??????????℅?????????????(????????℅??????“??????℅????????∫)*/
			BYTE     byJoinDecoderId[MAX_WINDOWS];
		}struVideoPlatform;
		struct
		{
			BYTE     byRes[16];
		}struNotVideoPlatform;
	}struDiff;
	/*??﹞?????????0-????℅??????“?????????‾?????“????????1-?????????‾?????“??????*/
	BYTE        byUnionType;
	BYTE        byScale; /*??????????0---??????????1---??﹞?????( ????BNC )*/
}NET_DVR_VGA_DISP_CHAN_CFG, *LPNET_DVR_VGA_DISP_CHAN_CFG;


/*?????“??℅???*/
#define NET_DVR_MAX_DISPREGION 16 /*?????????“??℅??角???????????∼??*/
typedef struct
{
	BYTE  byDispStatus;          /*????℅?????0??????????1??????????*/
	BYTE  byBVGA;                /*0-BNC??1-VGA?? 2-HDMI??3-DVI*/
	BYTE  byVideoFormat;        /*????????:1:NTSC,2:PAL,0-NON*/
	BYTE  byWindowMode;        /*?㊣?∼????????*/
	BYTE  byJoinDecChan[MAX_WINDOWS];        /*?‾??℅??∼?????????????“??*/
	BYTE  byFpsDisp[NET_DVR_MAX_DISPREGION]; /*????℅???????????????*/
	BYTE  byScreenMode;            //????????0-???“ 1-?車??
	BYTE  byRes2[31];
}NET_DVR_DISP_CHAN_STATUS, *LPNET_DVR_DISP_CHAN_STATUS;

#define MAX_DECODECHANNUM   32//?角?﹞?????‾℅??車?????“????
#define MAX_DISPCHANNUM   24//?角?﹞?????‾℅??車?????“????

/*?????‾?豕㊣?℅???*/
typedef struct tagNET_DVR_DECODER_WORK_STATUS
{
	DWORD dwSize;
	NET_DVR_MATRIX_CHAN_STATUS struDecChanStatus[MAX_DECODECHANNUM]; /*?????“??℅???*/
	NET_DVR_DISP_CHAN_STATUS   struDispChanStatus[MAX_DISPCHANNUM];  /*?????“??℅???*/
	BYTE byAlarmInStatus[MAX_ANALOG_ALARMIN];         /*㊣“??????℅???*/
	BYTE byAlarmOutStatus[MAX_ANALOG_ALARMOUT];       /*㊣“??????℅???*/
	BYTE byAudioInChanStatus;          /*????????℅???*/
	BYTE byRes[127];
}NET_DVR_DECODER_WORK_STATUS, *LPNET_DVR_DECODER_WORK_STATUS;

//2009-12-1 ????㊣?????????﹞?????
typedef struct tagNET_DVR_PASSIVEDECODE_CONTROL
{
	DWORD    dwSize;
	DWORD    dwPlayCmd;        /* ??﹞??邦?? ????????﹞??邦??*/
	DWORD    dwCmdParam;        /* ??﹞??邦?????? */
	BYTE    byRes[16];//Reverse
}NET_DVR_PASSIVEDECODE_CONTROL, *LPNET_DVR_PASSIVEDECODE_CONTROL;

#define        PASSIVE_DEC_PAUSE            1    /*㊣???????????(???????‾???∫)*/
#define        PASSIVE_DEC_RESUME            2    /*????㊣???????(???????‾???∫)*/
#define     PASSIVE_DEC_FAST              3   /*?足??㊣???????(???????‾???∫)*/
#define     PASSIVE_DEC_SLOW            4   /*????㊣???????(???????‾???∫)*/
#define     PASSIVE_DEC_NORMAL          5   /*????㊣???????(???????‾???∫)*/
#define     PASSIVE_DEC_ONEBYONE          6  /*㊣?????????????﹞?(㊣???)*/
#define     PASSIVE_DEC_AUDIO_ON         7   /*????????*/
#define     PASSIVE_DEC_AUDIO_OFF        8       /*??????㊣?*/
#define        PASSIVE_DEC_RESETBUFFER        9    /*??????????*/
//2009-12-16 ?????????????‾?????“????﹞?
typedef struct tagNET_DVR_MATRIX_DECCHAN_CONTROL
{
	DWORD    dwSize;
	BYTE    byDecChanScaleStatus;/*?????“????????﹞?????,1㊣赤????﹞???????0㊣赤??????????*/
	BYTE    byDecodeDelay;//???????㊣??0-??????1-???㊣??????2-???㊣????????3-???㊣???????‾????????4-?‾??????????5-?‾????????0xff-℅????‾??   
	BYTE    byEnableSpartan;//??????????0-????1-??
	BYTE    byLowLight;      //????????0-????1-8?迆㊣赤???????????????????????????車
	BYTE    byNoiseReduction; //3D??????0-????1-????2-℅???
	BYTE    byDefog;         //???赤??0-????1-7?迆㊣赤???赤?????????????????????車
	BYTE    byEnableVcaDec; //??﹞???????????????0-????????﹞?0-????
	BYTE    byEnableAudio; //??﹞???????????0-???∫??1-??????2-??㊣?
	DWORD   dwAllCtrlType;    //?迄??℅??∼????????℅‾???角?????豕???㊣???∫??∼???㊣赤??
							  //dwAllCtrlType & 0x01,??????㊣?????????
	BYTE    byVolume; //volume,[0-100]
	BYTE    byRes[55];
}NET_DVR_MATRIX_DECCHAN_CONTROL, *LPNET_DVR_MATRIX_DECCHAN_CONTROL;

/************************************?角?﹞?????‾(end)***************************************/
//2009-8-19 ????℅??????“????????
/************************************????℅??????“(begin)***************************************/
#define MAX_SUBSYSTEM_NUM    80   //???????車??????℅??角℅?????????
#define MAX_SERIALLEN        36  //℅??車?辰?????∟??
#define MAX_LOOPPLANNUM        16//℅??車????????℅谷
#define DECODE_TIMESEGMENT 4//???????????足?㊣??????
typedef struct tagNET_DVR_SUBSYSTEMINFO
{
	BYTE        bySubSystemType;//℅??????角????1-??????℅???????2-㊣角????℅???????3-????????℅???????4-????????℅???????5-??﹞??‾℅???????6-㊣“???‾?迆℅???????7-????℅???????0-NULL?“????????????????        
	BYTE        byChan;//℅??????“????????????﹞?℅????????迆㊣赤485?????????“????????????????                    
	BYTE        byLoginType;//℅??芍?角????1-?㊣????2-DNS??3-?“?迆??
	BYTE        byRes1[5];
	NET_DVR_IPADDR   struSubSystemIP;        /*IP???﹞?“????????*/
	WORD        wSubSystemPort;        //℅????????????“????????
	BYTE        byRes2[6];
	NET_DVR_IPADDR  struSubSystemIPMask;//℅???????
	NET_DVR_IPADDR    struGatewayIpAddr;    /* ???????﹞*/
	BYTE        sUserName[NAME_LEN];    /* ???∫?? ?“????????????????*/
	BYTE        sPassword[PASSWD_LEN];    /*?????“????????????????*/
	char        sDomainName[MAX_DOMAIN_NAME];//?辰??(??????)
	char         sDnsAddress[MAX_DOMAIN_NAME];/*DNS?辰???辰IP???﹞*/
	BYTE        sSerialNumber[SERIALNO_LEN];//?辰?????“????????????????
}NET_DVR_SUBSYSTEMINFO, *LPNET_DVR_SUBSYSTEMINFO;

typedef struct tagNET_DVR_ALLSUBSYSTEMINFO
{
	DWORD dwSize;
	NET_DVR_SUBSYSTEMINFO struSubSystemInfo[MAX_SUBSYSTEM_NUM];
	BYTE byRes[8];
}NET_DVR_ALLSUBSYSTEMINFO, *LPNET_DVR_ALLSUBSYSTEMINFO;

typedef struct  tagNET_DVR_LOOPPLAN_SUBCFG
{
	DWORD                             dwSize;
	DWORD                            dwPoolTime;        /*??????????????????*/
	NET_DVR_MATRIX_CHAN_INFO_V30 struChanConInfo[MAX_CYCLE_CHAN_V30];
	BYTE                               byRes[16];
}NET_DVR_LOOPPLAN_SUBCFG, *LPNET_DVR_LOOPPLAN_SUBCFG;

typedef struct tagNET_DVR_ALARMMODECFG
{
	DWORD     dwSize;
	BYTE    byAlarmMode;//㊣“????﹞??角????1-??????2-㊣???        
	WORD    wLoopTime;//?????㊣??, ????????            
	BYTE    byRes[9];
}NET_DVR_ALARMMODECFG, *LPNET_DVR_ALARMMODECFG;

typedef struct  tagNET_DVR_CODESPLITTERINFO
{
	DWORD            dwSize;
	NET_DVR_IPADDR   struIP;        /*??﹞??‾IP???﹞*/
	WORD        wPort;                    //??﹞??‾??????
	BYTE        byRes1[6];
	BYTE        sUserName[NAME_LEN];    /* ???∫?? */
	BYTE        sPassword[PASSWD_LEN];    /*???? */
	BYTE        byChan;//??﹞??‾485??
	BYTE        by485Port;//485?????﹞
	BYTE        byRes2[14];
} NET_DVR_CODESPLITTERINFO, *LPNET_DVR_CODESPLITTERINFO;

typedef struct tagNET_DVR_ASSOCIATECFG
{
	BYTE    byAssociateType;//?????角????1-㊣“??
	WORD    wAlarmDelay;//㊣“?????㊣??0??5????1??10????2??30????3??1﹞?????4??2﹞?????5??5﹞?????6??10﹞?????
	BYTE    byAlarmNum;//㊣“?????????????????????????角????㊣“?????角??????
	BYTE    byRes[8];
} NET_DVR_ASSOCIATECFG, *LPNET_DVR_ASSOCIATECFG;

typedef struct tagNET_DVR_DYNAMICDECODE
{
	DWORD                            dwSize;
	NET_DVR_ASSOCIATECFG           struAssociateCfg;//??﹞??????????????芍??
	NET_DVR_PU_STREAM_CFG        struPuStreamCfg;//?????????芍??
	BYTE                            byRes[8];
}NET_DVR_DYNAMICDECODE, *LPNET_DVR_DYNAMICDECODE;

typedef struct  tagNET_DVR_DECODESCHED
{
	NET_DVR_SCHEDTIME  struSchedTime;//
	BYTE  byDecodeType;/*0-????1-??????????2-????????*/
	BYTE  byLoopGroup;//????℅谷??
	BYTE  byRes[6];
	NET_DVR_PU_STREAM_CFG struDynamicDec;//????????
} NET_DVR_DECODESCHED, *LPNET_DVR_DECODESCHED;

typedef struct tagNET_DVR_PLANDECODE
{
	DWORD dwSize;
	NET_DVR_DECODESCHED struDecodeSched[MAX_DAYS][DECODE_TIMESEGMENT];//????℅‾??????????9000????
	BYTE byRes[8];
} NET_DVR_PLANDECODE, *LPNET_DVR_PLANDECODE;

//end
/************************************????℅??????“(end)***************************************/
typedef struct
{    /* 12 bytes */
	DWORD    dwSize;
	char    sUserName[32];
	char     sPassWord[32];
	char     sFromName[32];            /* Sender *///℅?﹞?????????????℅?﹞???℅??車????℅?﹞???????"@",????℅?﹞?????????"@"℅?﹞?
	char     sFromAddr[48];            /* Sender address */
	char     sToName1[32];            /* Receiver1 */
	char     sToName2[32];            /* Receiver2 */
	char     sToAddr1[48];            /* Receiver address1 */
	char     sToAddr2[48];            /* Receiver address2 */
	char    sEmailServer[32];        /* Email server address */
	BYTE    byServerType;            /* Email server type: 0-SMTP, 1-POP, 2-IMTP??*/
	BYTE    byUseAuthen;            /* Email server authentication method: 1-enable, 0-disable */
	BYTE    byAttachment;            /* enable attachment */
	BYTE    byMailinterval;            /* mail interval 0-2s, 1-3s, 2-4s. 3-5s*/
} NET_DVR_EMAILCFG, *LPNET_DVR_EMAILCFG;

typedef struct
{
	DWORD dwSize;
	NET_DVR_COMPRESSION_INFO_EX  struLowCompression;    //?“?㊣????
	NET_DVR_COMPRESSION_INFO_EX  struEventCompression;    //??????﹞?????
}NET_DVR_COMPRESSIONCFG_NEW, *LPNET_DVR_COMPRESSIONCFG_NEW;

//?辰?迆????????
typedef struct
{
	WORD wAction;//?????㊣??℅??????∫
	WORD wPanPos;//????????
	WORD wTiltPos;//???㊣????
	WORD wZoomPos;//㊣?㊣?????
}NET_DVR_PTZPOS, *LPNET_DVR_PTZPOS;

//?辰?迆﹞??∫????
typedef struct
{
	WORD wPanPosMin;//????????min
	WORD wPanPosMax;//????????max
	WORD wTiltPosMin;//???㊣????min
	WORD wTiltPosMax;//???㊣????max
	WORD wZoomPosMin;//㊣?㊣?????min
	WORD wZoomPosMax;//㊣?㊣?????max
}NET_DVR_PTZSCOPE, *LPNET_DVR_PTZSCOPE;

//rtsp???? ipcamera℅“??
typedef struct
{
	DWORD dwSize;         //?∟??
	WORD  wPort;          //rtsp﹞????‾?足??????
	BYTE  byReserve[54];  //?∟??
}NET_DVR_RTSPCFG, *LPNET_DVR_RTSPCFG;

/********************************?????????芍??(begin)*********************************/

//NET_DVR_Login()?????芍??
typedef struct
{
	BYTE sSerialNumber[SERIALNO_LEN];   //?辰????
	BYTE byAlarmInPortNum;                //DVR㊣“??????????
	BYTE byAlarmOutPortNum;                //DVR㊣“??????????
	BYTE byDiskNum;                        //DVR????????
	BYTE byDVRType;                        //DVR?角??, 1:DVR 2:ATM DVR 3:DVS ......
	BYTE byChanNum;                        //DVR ?“??????
	BYTE byStartChan;                    //?????“????,????DVS-1,DVR - 1
}NET_DVR_DEVICEINFO, *LPNET_DVR_DEVICEINFO;

//NET_DVR_Login_V30()?????芍??
typedef struct
{
	BYTE sSerialNumber[SERIALNO_LEN];  //?辰????
	BYTE byAlarmInPortNum;                //㊣“??????????
	BYTE byAlarmOutPortNum;                //㊣“??????????
	BYTE byDiskNum;                    //????????
	BYTE byDVRType;                    //?豕㊣??角??, 1:DVR 2:ATM DVR 3:DVS ......
	BYTE byChanNum;                    //?????“??????
	BYTE byStartChan;                    //?????“????,????DVS-1,DVR - 1
	BYTE byAudioChanNum;                //?????“????
	BYTE byIPChanNum;                    //℅??車??℅??“????????????  
	BYTE byZeroChanNum;            //???“??㊣角?????? //2010-01-16
	BYTE byMainProto;            //?‾???‾???????谷?角?? 0-private, 1-rtsp,2-???㊣?∫??private??rtsp
	BYTE bySubProto;                //℅????‾???????谷?角??0-private, 1-rtsp,2-???㊣?∫??private??rtsp
	BYTE bySupport;        //???????????芍????0㊣赤?????∫????1㊣赤???∫????
						   //bySupport & 0x1, ㊣赤????﹞??∫?????????‾
						   //bySupport & 0x2, ㊣赤????﹞??∫??㊣?﹞?
						   //bySupport & 0x4, ㊣赤????﹞??∫??????????????????
						   //bySupport & 0x8, ㊣赤????﹞??∫???角???“
						   //bySupport & 0x10, ㊣赤???∫??????SADP
						   //bySupport & 0x20, ㊣赤???∫??Raid?“????
						   //bySupport & 0x40, ㊣赤???∫??IPSAN ?????谷??
						   //bySupport & 0x80, ㊣赤???∫??rtp over rtsp
	BYTE bySupport1;        // ?????????????????芍????0㊣赤?????∫????1㊣赤???∫??
							//bySupport1 & 0x1, ㊣赤????﹞??∫??snmp v30
							//bySupport1 & 0x2, ?∫????﹞???﹞???????
							//bySupport1 & 0x4, ??﹞??∫????﹞???????    
							//bySupport1 & 0x8, ?????豕㊣???﹞??∫????﹞??㊣????????
							//bySupport1 & 0x10, ㊣赤????﹞??∫???角???????“????33????
							//bySupport1 & 0x20, ㊣赤????﹞??∫??rtsp over http    
							//bySupport1 & 0x80, ㊣赤????﹞??∫????????㊣“??????2012-9-28, ????㊣赤????﹞??∫??NET_DVR_IPPARACFG_V40?芍????
	BYTE bySupport2; /*???????????芍????0㊣赤?????∫????﹞?0㊣赤???∫??
					 bySupport2 & 0x1, ㊣赤???????‾??﹞??∫???“??URL???‾????
					 bySupport2 & 0x2,  ㊣赤???∫??FTPV40
					 bySupport2 & 0x4,  ㊣赤???∫??ANR
					 bySupport2 & 0x8,  ㊣赤???∫??CCD???“??????????
					 bySupport2 & 0x10,  ㊣赤???∫????﹞?㊣“???????????“???∫??℅????迆㊣“?? ????㊣“???芍????
					 bySupport2 & 0x20,  ㊣赤????﹞??∫???????????豕㊣?℅???℅???
					 bySupport2 & 0x40,  ㊣赤????﹞??????‾?????豕㊣?*/
	WORD wDevType;              //?豕㊣?????
	BYTE bySupport3; //?????????????????芍????0㊣赤?????∫????1㊣赤???∫??
					 //bySupport3 & 0x1, ㊣赤????﹞??∫???迆???????角???‾????
					 // bySupport3 & 0x4 ㊣赤???∫??∼?℅谷?????? ????∼邦?? ?“????????????㊣“????????????IP㊣“??????????????????????
					 // ???∫???????豕㊣??∟℅‾℅?????JPEG℅??????“?㊣???㊣??℅???????????℅谷???赤 
					 //bySupport3 & 0x8??1 ㊣赤???∫??????TCP?∟????UDP?∟?????角???∟??????"???㊣?∟??"℅????????車???㊣?∟???“?車??????????????﹞??????車???㊣?∟?????????㊣bySupport3 & 0x8??0?㊣???????? "???????㊣?∟??"???谷??
					 //bySupport3 & 0x10 ㊣赤???∫??"????㊣“???‾?迆?‾??℅????“V40??"??
					 //bySupport3 & 0x20 ㊣赤????﹞??∫???“??DDNS?辰?????????‾

	BYTE byMultiStreamProto;//??﹞??∫???角???‾,∼???㊣赤??,0-???∫??,1-?∫??,bit1-???‾3,bit2-???‾4,bit7-?‾???‾??bit-8℅????‾
	BYTE byStartDChan;        //??????℅??“????,0㊣赤?????∫
	BYTE byStartDTalkChan;    //??????℅??????“????????㊣????????????“??????0㊣赤?????∫
	BYTE byHighDChanNum;        //??℅??“????????????
	BYTE bySupport4;        //?????????????????芍????0㊣赤?????∫????1㊣赤???∫??
							//bySupport4 & 0x4㊣赤????﹞??∫??????????????
							// bySupport4 & 0x80 ?∫???豕㊣?????????㊣“????????㊣赤???????‾???????? NET_DVR_PDC_RULE_CFG_V42???? NET_DVR_PDC_RULE_CFG_V41
	BYTE byLanguageType;// ?∫??????????,∼???㊣赤??,??????0-???∫??,1-?∫??  
						//  byLanguageType ????0 ㊣赤?? ???豕㊣?
						//  byLanguageType & 0x1㊣赤???∫??????
						//  byLanguageType & 0x2㊣赤???∫??????
	BYTE byVoiceInChanNum;   //?????????“???? 
	BYTE byStartVoiceInChanNo; //?????????????“???? 0㊣赤?????∫
	BYTE  bySupport5;  //∼???㊣赤??,0-???∫??,1-?∫??,bit0-?∫???角???‾
					   //bySupport5 &0x01㊣赤???∫??wEventTypeEx ,????dwEventType ???????角???“?∫????????????????--????℅???﹞???????
					   //bySupport5 &0x04㊣赤????﹞??∫???????????????∼????????
					   /*
					   bySupport5 &0x08 ?豕㊣?﹞???????㊣赤????﹞??∫???????????角??V40???????谷(DVR_SET_RECORDCFG_V40/ DVR_GET_RECORDCFG_V40)(???????谷???豕㊣??∫???角???角??13??????)
					   ???∼????﹞?﹞??????豕㊣????∫???????角??13???辰?????????角??13?????????∫????????℅??????????角??3???????赤??SDK?“???邦?????????赤)
					   bySupport5 &0x10 ?豕㊣?﹞???????㊣赤???∫??????255???∟????
					   */
	BYTE  bySupport6;   //??????∼???㊣赤????0-???∫??,1-?∫??
						//bySupport6 0x1  ㊣赤???豕㊣???﹞??∫?????? 
						//bySupport6 0x2 ㊣赤????﹞??∫???‾ID﹞????????‾?????????邦????DVR_SET_STREAM_SRC_INFO_V40
						//bySupport6 0x4 ㊣赤????﹞??∫?????????‾V40????
						//bySupport6 0x8 ㊣赤????﹞??∫???????????足???????邦??
						//bySupport6 0x40㊣赤???????谷???芍??V40????
	BYTE  byMirrorChanNum;    //?????“????????<?????‾?迆??????㊣赤???????“??>
	WORD wStartMirrorChanNo;  //?????????“????
	BYTE bySupport7;   //????,∼???㊣赤??,0-???∫??,1-?∫??
					   // bySupport7 & 0x1  ㊣赤???豕㊣???﹞??∫?? INTER_VCA_RULECFG_V42 ????
					   // bySupport7 & 0x2  ㊣赤???豕㊣???﹞??∫?? IPC HVT ????????
					   // bySupport7 & 0x04  ㊣赤???豕㊣???﹞??∫?? ﹞??????“?㊣??
					   // bySupport7 & 0x08  ㊣赤???豕?????“PTZ?????㊣????﹞??∫?????“????
					   // bySupport7 & 0x10  ㊣赤???豕㊣???﹞??∫????????????㊣?﹞?
					   // bySupport7 & 0x20  ㊣赤???豕㊣???﹞??∫?? OSD℅?﹞????? V50
					   // bySupport7 & 0x40  ㊣赤???豕㊣???﹞??∫?? ?‾???迆℅??“???????迆??
					   // bySupport7 & 0x80  ㊣赤???豕㊣???﹞??∫?? ㊣“??????
	BYTE  byRes2;        //㊣???
}NET_DVR_DEVICEINFO_V30, *LPNET_DVR_DEVICEINFO_V30;

typedef struct tagNET_DVR_DEVICEINFO_V40
{
	NET_DVR_DEVICEINFO_V30 struDeviceV30;
	BYTE  bySupportLock;        //?豕㊣??∫?????“????????℅?????SDK?迄???豕㊣?﹞???????????????bySupportLock??1?㊣??dwSurplusLockTime??byRetryLoginTime???∫
	BYTE  byRetryLoginTime;        //???角?????????????????????∫?????????赤?車?㊣???????????∫
	BYTE  byPasswordLevel;      //admin????∼???????0-???∫??1-??????????2-???∫????,3-﹞????????????????㊣???∫???????????∫?????????“12345???辰??﹞??????????????㊣?????????∫???豕???芍?????∫?邦????????      
	BYTE  byProxyType;  //?迆?赤?角????0-???????迆?赤, 1-????socks5?迆?赤, 2-????EHome?迆?赤
	DWORD dwSurplusLockTime;    //???角?㊣???????????????∫???“?㊣???????????∫
	BYTE  byCharEncodeType;     //℅?﹞?㊣角???角??
	BYTE  bySupportDev5;//?∫??v50∼?㊣????豕㊣????????????豕㊣????????豕㊣??角???????∟????????64℅???
	BYTE  bySupport;  //?????????????????芍????0- ???∫????1- ?∫??
					  // bySupport & 0x1:  ㊣???
					  // bySupport & 0x2:  0-???∫??㊣?????㊣“ 1-?∫??㊣?????㊣“
	BYTE  byLoginMode; //???????? 0-Private???? 1-ISAPI????
	DWORD dwOEMCode;
	int iResidualValidity;   //?????∫???????角???∫?足???????????足??﹞?????????㊣赤?????????????????????????∼-3㊣赤??????????????????3?足?㊣
	BYTE  byResidualValidity; // iResidualValidity℅?????﹞????∫??0-???∫??1-???∫
	BYTE  byRes2[243];
}NET_DVR_DEVICEINFO_V40, *LPNET_DVR_DEVICEINFO_V40;

typedef void (CALLBACK *fLoginResultCallBack) (LONG lUserID, DWORD dwResult, LPNET_DVR_DEVICEINFO_V30 lpDeviceInfo, void* pUser);

#define NET_DVR_DEV_ADDRESS_MAX_LEN 129
#define NET_DVR_LOGIN_USERNAME_MAX_LEN 64
#define NET_DVR_LOGIN_PASSWD_MAX_LEN 64

typedef struct
{
	char sDeviceAddress[NET_DVR_DEV_ADDRESS_MAX_LEN];
	BYTE byUseTransport;    //??﹞?????????????????0--??????????????????1--????????
	WORD wPort;
	char sUserName[NET_DVR_LOGIN_USERNAME_MAX_LEN];
	char sPassword[NET_DVR_LOGIN_PASSWD_MAX_LEN];
	fLoginResultCallBack cbLoginResult;
	void *pUser;
	BOOL bUseAsynLogin;
	BYTE byProxyType; //0:???????迆?赤??1??????㊣那℅??迆?赤??2??????EHome?迆?赤
	BYTE byUseUTCTime;    //0-??????℅?????????,1-??????????????????????UTC?㊣??,SDK?那??UTC?㊣?????豕㊣??㊣????℅???,2-?????????????????????????“㊣????㊣????SDK?那?????“㊣????㊣?????豕㊣??㊣????℅???
	BYTE byLoginMode; //0-Private 1-ISAPI 2-℅?????
	BYTE byHttps;    //0-??????tls??1-????tls 2-℅?????
	LONG iProxyID;    //?迆?赤﹞????‾?辰?????赤???迆?赤﹞????‾?????㊣???角??????﹞????‾??℅谷??㊣赤??
	BYTE byVerifyMode;  //???∟﹞?????0-?????∟??1-???辰???∟??2-???辰???∟?????∟????????TLS???㊣?辰?迆?∫;
	BYTE byRes3[119];
}NET_DVR_USER_LOGIN_INFO, *LPNET_DVR_USER_LOGIN_INFO;

//sdk?????﹞??????㊣?????????????????
typedef enum _SDK_NET_ENV
{
	LOCAL_AREA_NETWORK = 0,
	WIDE_AREA_NETWORK
}SDK_NETWORK_ENVIRONMENT;

//????????
typedef enum
{
	NORMALMODE = 0,
	OVERLAYMODE
}DISPLAY_MODE;

//﹞???????
typedef enum
{
	PTOPTCPMODE = 0,
	PTOPUDPMODE,
	MULTIMODE,
	RTPMODE,
	RESERVEDMODE
}SEND_MODE;

//℅???????
typedef enum
{
	BMP_MODE = 0,        //BMP????
	JPEG_MODE = 1        //JPEG???? 
}CAPTURE_MODE;

//???㊣?迄??????
typedef enum
{
	MONOPOLIZE_MODE = 1,//????????
	SHARE_MODE = 2        //???赤????
}REALSOUND_MODE;

//?赤?????∟??????
typedef struct
{
	LONG lChannel;//?“????
	LONG lLinkMode;//℅?????(31)??0㊣赤???‾???‾????1㊣赤??℅???0??30??㊣赤?????‾????﹞???: 0??TCP﹞???,1??UDP﹞???,2???角??﹞???,3 - RTP﹞?????4-RTP/RTSP,5-RSTP/HTTP 
	HWND hPlayWnd;//??﹞??∼??????㊣迆,??NULL㊣赤??????﹞????車
	char* sMultiCastIP;//?角??℅谷???﹞
	BYTE byProtoType; //?????????‾???谷??0-???????谷??1-RTSP???谷
	BYTE byRes[3];
}NET_DVR_CLIENTINFO, *LPNET_DVR_CLIENTINFO;

//SDK℅???????(9000????)
typedef struct
{
	DWORD dwTotalLoginNum;        //?㊣?∼login???∫??
	DWORD dwTotalRealPlayNum;    //?㊣?∼realplay?﹞??
	DWORD dwTotalPlayBackNum;    //?㊣?∼??﹞??辰?????﹞??
	DWORD dwTotalAlarmChanNum;    //?㊣?∼?“??㊣“???“???﹞??
	DWORD dwTotalFormatNum;        //?㊣?∼???????????﹞??
	DWORD dwTotalFileSearchNum;    //?㊣?∼?????辰???????‾?﹞??
	DWORD dwTotalLogSearchNum;    //?㊣?∼?????辰???????‾?﹞??
	DWORD dwTotalSerialNum;        //?㊣?∼???‾?“???﹞??
	DWORD dwTotalUpgradeNum;    //?㊣?∼?????﹞??
	DWORD dwTotalVoiceComNum;    //?㊣?∼????℅?﹞??﹞??
	DWORD dwTotalBroadCastNum;    //?㊣?∼?????????﹞??
	DWORD dwTotalListenNum;        //?㊣?∼?????角???﹞??
	DWORD dwEmailTestNum;       //?㊣?∼?????????﹞??
	DWORD dwBackupNum;          // ?㊣?∼????㊣?﹞??﹞??
	DWORD dwTotalInquestUploadNum; //?㊣?∼?車???????﹞??
	DWORD dwRes[6];
}NET_DVR_SDKSTATE, *LPNET_DVR_SDKSTATE;

//SDK?????∫??????(9000????)
typedef struct
{
	DWORD dwMaxLoginNum;        //℅??車login???∫?? MAX_LOGIN_USERS
	DWORD dwMaxRealPlayNum;        //℅??車realplay?﹞?? WATCH_NUM
	DWORD dwMaxPlayBackNum;        //℅??車??﹞??辰?????﹞?? WATCH_NUM
	DWORD dwMaxAlarmChanNum;    //℅??車?“??㊣“???“???﹞?? ALARM_NUM
	DWORD dwMaxFormatNum;        //℅??車???????????﹞?? SERVER_NUM
	DWORD dwMaxFileSearchNum;    //℅??車???????‾?﹞?? SERVER_NUM
	DWORD dwMaxLogSearchNum;    //℅??車???????‾?﹞?? SERVER_NUM
	DWORD dwMaxSerialNum;        //℅??車???‾?“???﹞?? SERVER_NUM
	DWORD dwMaxUpgradeNum;        //℅??車?????﹞?? SERVER_NUM
	DWORD dwMaxVoiceComNum;        //℅??車????℅?﹞??﹞?? SERVER_NUM
	DWORD dwMaxBroadCastNum;    //℅??車?????????﹞?? MAX_CASTNUM
	DWORD dwRes[10];
}NET_DVR_SDKABL, *LPNET_DVR_SDKABL;

//㊣“???豕㊣?????
typedef struct
{
	BYTE byUserIDValid;                 /* userid??﹞????∫ 0-???∫??1-???∫ */
	BYTE bySerialValid;                 /* ?辰??????﹞????∫ 0-???∫??1-???∫ */
	BYTE byVersionValid;                /* ∼?㊣?????﹞????∫ 0-???∫??1-???∫ */
	BYTE byDeviceNameValid;             /* ?豕㊣???℅???﹞????∫ 0-???∫??1-???∫ */
	BYTE byMacAddrValid;                /* MAC???﹞??﹞????∫ 0-???∫??1-???∫ */
	BYTE byLinkPortValid;               /* login??????﹞????∫ 0-???∫??1-???∫ */
	BYTE byDeviceIPValid;               /* ?豕㊣?IP??﹞????∫ 0-???∫??1-???∫ */
	BYTE bySocketIPValid;               /* socket ip??﹞????∫ 0-???∫??1-???∫ */
	LONG lUserID;                       /* NET_DVR_Login()﹞?????, ??﹞??㊣???∫ */
	BYTE sSerialNumber[SERIALNO_LEN];    /* ?辰???? */
	DWORD dwDeviceVersion;                /* ∼?㊣????? ??16??㊣赤???‾∼?㊣?????16??㊣赤????∼?㊣?*/
	char sDeviceName[NAME_LEN];            /* ?豕㊣???℅? */
	BYTE byMacAddr[MACADDR_LEN];        /* MAC???﹞ */
	WORD wLinkPort;                     /* link port */
	char sDeviceIP[128];                /* IP???﹞ */
	char sSocketIP[128];                /* ㊣“???‾???????㊣??socket IP???﹞ */
	BYTE byIpProtocol;                  /* Ip???谷 0-IPV4, 1-IPV6 */
	BYTE byRes1[2];
	BYTE bJSONBroken;                   //JSON????????㊣那????0??????????1??????
	WORD wSocketPort;
	BYTE byRes2[6];
}NET_DVR_ALARMER, *LPNET_DVR_ALARMER;

//?????????????辰????(℅??芍??)
typedef struct
{
	long bToScreen;
	long bToVideoOut;
	long nLeft;
	long nTop;
	long nWidth;
	long nHeight;
	long nReserved;
}NET_DVR_DISPLAY_PARA, *LPNET_DVR_DISPLAY_PARA;

//???????∟??????
typedef struct
{
	LONG lChannel;//?“????
	LONG lLinkMode; //℅?????(31)??0㊣赤???‾???‾????1㊣赤??℅???0??30??㊣赤?????‾????﹞???:0??TCP﹞???,1??UDP﹞???,2???角??﹞???,3 - RTP﹞?????4-???∼????5??128k?赤????6??256k?赤????7??384k?赤????8??512k?赤????
	char* sMultiCastIP;
	NET_DVR_DISPLAY_PARA struDisplayPara;
}NET_DVR_CARDINFO, *LPNET_DVR_CARDINFO;

//???車????????
typedef struct
{
	char sFileName[100];//??????
	NET_DVR_TIME struStartTime;//???????????㊣??
	NET_DVR_TIME struStopTime;//???????芍???㊣??
	DWORD dwFileSize;//???????車??
}NET_DVR_FIND_DATA, *LPNET_DVR_FIND_DATA;

//???車????????(9000)
typedef struct
{
	char sFileName[100];//??????
	NET_DVR_TIME struStartTime;//???????????㊣??
	NET_DVR_TIME struStopTime;//???????芍???㊣??
	DWORD dwFileSize;//???????車??
	char sCardNum[32];
	BYTE byLocked;//9000?豕㊣??∫??,1㊣赤????????????㊣????“,0㊣赤????????????
	BYTE byFileType;  //?????角??:0???“?㊣????,1-?????足?? ??2??㊣“????﹞???
					  //3-㊣“??|?????足?? 4-㊣“??&?????足?? 5-?邦????﹞? 6-????????,7??????㊣“????8-?﹞??㊣“????9-????㊣“????10-PIR㊣“????11-????㊣“????12-????㊣“??,14-???????“????
	BYTE byRes[2];
}NET_DVR_FINDDATA_V30, *LPNET_DVR_FINDDATA_V30;

//???車????????(cvr)
typedef struct
{
	char sFileName[100];//??????
	NET_DVR_TIME struStartTime;//???????????㊣??
	NET_DVR_TIME struStopTime;//???????芍???㊣??
	DWORD dwFileSize;//???????車??
	char sCardNum[32];
	BYTE byLocked;//9000?豕㊣??∫??,1㊣赤????????????㊣????“,0㊣赤????????????
	BYTE byFileType;  //?????角??:0???“?㊣????,1-?????足?? ??2??㊣“????﹞???
					  //3-㊣“??|?????足?? 4-㊣“??&?????足?? 5-?邦????﹞? 6-????????,7??????㊣“????8-?﹞??㊣“????9-????㊣“????10-PIR㊣“????11-????㊣“????12-????㊣“??,14-???????“????
	BYTE byQuickSearch; //0:???“?谷???芍????1???足???“???迆???谷???芍??
	BYTE byRes;
	DWORD dwFileIndex; //?????‾????
	BYTE byStreamType;
	BYTE byRes1[127];
}NET_DVR_FINDDATA_V40, *LPNET_DVR_FINDDATA_V40;

typedef struct tagNET_DVR_FINDDATA_V50
{
	char sFileName[100];
	NET_DVR_TIME_SEARCH   struStartTime;
	NET_DVR_TIME_SEARCH   struStopTime;
	NET_DVR_ADDRESS struAddr; //?????迄???????﹞????????????﹞??㊣????
	DWORD   dwFileSize; //?????車??
	BYTE    byLocked; //??????﹞?㊣????“??1???????????“??0???????????“
	BYTE   byFileType; //?????角??????V40?角??
	BYTE   byQuickSearch; //0- ???“?谷???芍????1- ?足???“???迆???谷???芍??
	BYTE  byStreamType; //???‾?角????0- ?‾???‾??1- ℅????‾??2- ???‾??
	DWORD  dwFileIndex; //?????‾????
	char  sCardNum[32]; //?“??
	BYTE   byRes[256];
}NET_DVR_FINDDATA_V50, *LPNET_DVR_FINDDATA_V50;

//???車????????(???“??)
typedef struct
{
	char sFileName[100];//??????
	NET_DVR_TIME struStartTime;//???????????㊣??
	NET_DVR_TIME struStopTime;//???????芍???㊣??
	DWORD dwFileSize;//???????車??
	char sCardNum[32];
}NET_DVR_FINDDATA_CARD, *LPNET_DVR_FINDDATA_CARD;


//???車?????谷???????芍??
typedef struct
{
	LONG lChannel;//?“????
	DWORD dwFileType;//???車?????角??
					 //?????“????0xff????????0???“?㊣????,1-?????足?? ??2??㊣“????﹞???3-㊣“??|?????足?? 4-㊣“??&?????足?? 5-?邦????﹞? 6-????????,7-??????????10-PIR㊣“????11-????㊣“????12-????㊣“????13-??????????14-???????“????
					 //???“????0xff????????0???“?㊣??????1-?????足????2?????邦㊣“????3??????㊣“????4??????㊣“????5-?邦????﹞???6????????????7??????㊣“????8-?﹞??㊣“????9-????㊣“????10-PIR㊣“????11-????㊣“????12-????㊣“????13-??????????14-???????“????
	DWORD dwIsLocked;//??﹞????“ 0-????????,1-???“????, 0xff㊣赤???迄??????
	DWORD dwUseCardNo;//??﹞??????“??
	BYTE sCardNumber[32];//?“??
	NET_DVR_TIME struStartTime;//?????㊣??
	NET_DVR_TIME struStopTime;//?芍???㊣??
}NET_DVR_FILECOND, *LPNET_DVR_FILECOND;

//???“???辰????﹞??車????(???? ?足?辰℅“??)
typedef struct
{
	int xTop;     //﹞??辰????????x℅?㊣那
	int yTop;     //﹞??辰?芍??????y℅?㊣那
	int xBottom;  //﹞??辰?芍??????x℅?㊣那
	int yBottom;  //﹞??辰?芍??????y℅?㊣那
	int bCounter; //㊣???
}NET_DVR_POINT_FRAME, *LPNET_DVR_POINT_FRAME;

//????????????
typedef struct tagNET_DVR_COMPRESSION_AUDIO
{
	BYTE  byAudioEncType;   //????㊣角???角?? 0-OggVorbis(G722.1);1-G711_U;2-G711_A;5-MP2L2;6-G726;7-AAC,8-PCM;9-G722.1.C;12-AAC_LC;13-AAC_LD;14-Opus;
	BYTE  byAudioSamplingRate;//???????迄?? 0-??????1-16kHZ??2-32kHZ??3-48kHZ, 4- 44.1kHZ,5-8kHZ
	BYTE  byAudioBitRate;// ???????? ???? BITRATE_ENCODE_INDEX
	BYTE  byres[4];//????㊣?????????????????  
	BYTE  bySupport;//bySupport Bit0㊣赤?? Mp2l2?∼4??℅?????????㊣赤???車???????????????∟?? 
}NET_DVR_COMPRESSION_AUDIO, *LPNET_DVR_COMPRESSION_AUDIO;

//2009-7-22


#define IW_ESSID_MAX_SIZE                         32
#define WIFI_WEP_MAX_KEY_COUNT                     4
#define WIFI_WEP_MAX_KEY_LENGTH                     33
#define WIFI_WPA_PSK_MAX_KEY_LENGTH                 63
#define WIFI_WPA_PSK_MIN_KEY_LENGTH                 8
#define WIFI_MAX_AP_COUNT                         20
#define WIFI_WPA_PSK_MAX_HEXKEY_LENGTH           68   //WPA16????????℅??車?∟??

typedef struct tagNET_DVR_AP_INFO
{
	char  sSsid[IW_ESSID_MAX_SIZE];
	DWORD  dwMode;                        /* 0 mange ????;1 ad-hoc??????????NICMODE */
	DWORD  dwSecurity;           /*0 ????????1 wep??????2 wpa-psk;3 wpa-Enterprise;4-WPA2_PSK????WIFISECURITY*/
	DWORD  dwChannel;            /*1-11㊣赤??11???“??*/
	DWORD  dwSignalStrength;    /*0-100??????℅???㊣???℅???*/
	DWORD  dwSpeed;               /*????,??????0.01mbps*/
}NET_DVR_AP_INFO, *LPNET_DVR_AP_INFO;

typedef struct tagNET_DVR_AP_INFO_LIST
{
	DWORD dwSize;
	DWORD dwCount;        /*????AP????????????20*/
	NET_DVR_AP_INFO struApInfo[WIFI_MAX_AP_COUNT];
}NET_DVR_AP_INFO_LIST, *LPNET_DVR_AP_INFO_LIST;

typedef struct tagNET_DVR_WIFIETHERNET
{
	char sIpAddress[16];                /*IP???﹞*/
	char sIpMask[16];                    /*????*/
	BYTE    byMACAddr[MACADDR_LEN];        /*???赤???﹞????????????*/
	BYTE    byCloseWifi;        //??﹞???㊣?wifi??????0-????㊣???1-??㊣?
	BYTE    bRes;
	DWORD    dwEnableDhcp;                /*??﹞?????dhcp  0?????? 1????*/
	DWORD    dwAutoDns;                    /*????????dhcp??﹞?℅???????dns,0??℅??????? 1℅?????????????????????????dhcp???∼℅???????dns*/
	char sFirstDns[16];                         /*??????dns?辰??*/
	char sSecondDns[16];                     /*??????dns?辰??*/
	char sGatewayIpAddr[16];                 /* ???????﹞*/
	BYTE   bRes2[8];
}NET_DVR_WIFIETHERNET, *LPNET_DVR_WIFIETHERNET;

typedef struct tagNET_DVR_WIFI_CFG_EX
{
	NET_DVR_WIFIETHERNET struEtherNet;        /*wifi????*/
	char sEssid[IW_ESSID_MAX_SIZE];     /*SSID*/
	DWORD dwMode;      /* 0 mange ????;1 ad-hoc??????????*/
	DWORD dwSecurity; /*0-??????;1-WEP????;2-WPA-personal; 3-WPA-enterprise;4-WPA2-personal;5-WPA2-enterprise */
	union
	{
		struct
		{
			DWORD dwAuthentication;/*0 -??﹞??? 1-???赤??*/
			DWORD dwKeyLength;/* 0 -64????1- 128????2-152??*/
			DWORD dwKeyType;/*0 16????;1 ASCI */
			DWORD dwActive;/*0 ?‾????0---3㊣赤??????????????*/
			char sKeyInfo[WIFI_WEP_MAX_KEY_COUNT][WIFI_WEP_MAX_KEY_LENGTH];
		}wep;
		struct
		{
			DWORD dwKeyLength;/*8-63??ASCII℅?﹞?*/
			char sKeyInfo[WIFI_WPA_PSK_MAX_KEY_LENGTH];
			BYTE byEncryptType;  /*WPA/WPA2???????????角??,0-AES, 1-TKIP*/
			char sNewKeyInfo[WIFI_WPA_PSK_MAX_HEXKEY_LENGTH/*68*/];//???????“?∫??8-63??ASCII℅?﹞????∼64?????迄??℅?﹞???????
																   //?㊣byKeyType??0?㊣??????sKeyInfo???㊣byKeyType??1?㊣??????sNewKeyInfo
																   //?????角????0 ~ ???????角???“???∫??8-63??ASCII℅?﹞?????1 ~???????角???“?∫??8-63??ASCII℅?﹞????∼64?????迄??℅?﹞???????
			BYTE byKeyType;
			BYTE byRes[7];
		}wpa_psk;
		struct
		{
			BYTE byEncryptType;  /*?????角??,0-AES, 1-TKIP*/
			BYTE byAuthType; //???∟?角????0-EAP_TTLS,1-EAP_PEAP,2-EAP_TLS
			BYTE byRes[2];
			union
			{
				struct
				{
					BYTE byEapolVersion; //EAPOL∼?㊣???0-∼?㊣?1??1-∼?㊣?2
					BYTE byAuthType; //???????∟﹞?????0-PAP??1-MSCHAPV2
					BYTE byRes1[2];
					BYTE byAnonyIdentity[NAME_LEN]; //?????赤﹞?
					BYTE byUserName[NAME_LEN]; //???∫??
					BYTE byPassword[NAME_LEN]; //????
					BYTE byRes[44];
				}EAP_TTLS; //WPA-enterprise/WPA2-enterpris????????
				struct
				{
					BYTE byEapolVersion; //EAPOL∼?㊣???0-∼?㊣?1??1-∼?㊣?2
					BYTE byAuthType; //???????∟﹞?????0-GTC??1-MD5??2-MSCHAPV2
					BYTE byPeapVersion; //PEAP∼?㊣???0-∼?㊣?0??1-∼?㊣?1
					BYTE byPeapLabel; //PEAP㊣那????0-??㊣那????1-??㊣那??
					BYTE byAnonyIdentity[NAME_LEN]; //?????赤﹞?
					BYTE byUserName[NAME_LEN]; //???∫??
					BYTE byPassword[NAME_LEN]; //????
					BYTE byRes[44];
				}EAP_PEAP; //WPA-enterprise/WPA2-enterpris????????
				struct
				{
					BYTE byEapolVersion; //EAPOL∼?㊣???0-∼?㊣?1??1-∼?㊣?2
					BYTE byRes1[3];
					BYTE byIdentity[NAME_LEN]; //?赤﹞?
					BYTE byPrivateKeyPswd[NAME_LEN]; //????????
					BYTE byRes[76];
				}EAP_TLS;
			}auth_param;
		}wpa_wpa2; //WPA-enterprise/WPA2-enterpris????????
	}key;
}NET_DVR_WIFI_CFG_EX, *LPNET_DVR_WIFI_CFG_EX;

//wifi?????芍??
typedef struct tagNET_DVR_WIFI_CFG
{
	DWORD dwSize;
	NET_DVR_WIFI_CFG_EX struWifiCfg;
}NET_DVR_WIFI_CFG, *LPNET_DVR_WIFI_CFG;

//wifi????℅???
typedef     struct  tagNET_DVR_WIFI_CONNECT_STATUS
{
	DWORD        dwSize;
	BYTE        byCurStatus;    //1-????????2-????????3-????????
	BYTE        byRes1[3];        //㊣???
	DWORD        dwErrorCode;    // byCurStatus = 2?㊣???∫,1-???∫???辰?????赤?車,2-?????﹞???‾,3-?????赤?車
	BYTE        byRes[244];
}NET_DVR_WIFI_CONNECT_STATUS, *LPNET_DVR_WIFI_CONNECT_STATUS;

//wifi?∟℅‾????
typedef struct tagNET_DVR_WIFI_WORKMODE
{
	DWORD dwSize;
	DWORD dwNetworkInterfaceMode; /*0 ℅?????????????1 ????????*/
}NET_DVR_WIFI_WORKMODE, *LPNET_DVR_WIFI_WORKMODE;

//?芍???????那?“?? 
#define VCA_MAX_POLYGON_POINT_NUM        10        //?足?????辰℅??角?∫??10???????角㊣???
#define MAX_RULE_NUM                    8        //℅??角???辰????
#define MAX_RULE_NUM_V42                16      //℅??角???辰????????
#define MAX_TARGET_NUM                    30        //℅??角??㊣那????
#define MAX_CALIB_PT                     6        //℅??車㊣那?“??????
#define MIN_CALIB_PT                     4        //℅???㊣那?“??????
#define MAX_TIMESEGMENT_2                2        //℅??車?㊣??????
#define DATA_INDEX_LEN                  64      //?????‾????
#define MAX_DEV_DATAINDEX_LEN           64      //?豕㊣??????‾????
#define MAX_TRAFFIC_PICTURE_NUM         8      //???“????????
#define MAX_LICENSE_LEN                    16        //??????℅??車?∟??
#define MAX_LICENSE_LEN_EX                 32        //??????℅??車?∟??
#define MAX_CARDNO_LEN                  48      //?“??℅??車?∟?? 2013-11-04
#define MAX_OPERATE_INDEX_LEN           32      //??℅‾??℅??車?∟??2014-03-03
#define MAX_PLATE_NUM                    3        //????????
#define MAX_MASK_REGION_NUM                4       //℅??角??????㊣????辰
#define MAX_SEGMENT_NUM                    6       //?????迆㊣那?“℅??車?迄㊣???????
#define MIN_SEGMENT_NUM                    3       //?????迆㊣那?“℅????迄㊣???????
#define MAX_REL_SNAPCHAN_NUM            3       //℅??車????℅????“????
#define MAX_PIC_SWITCH_STORAGE_SERVER   64      //??????﹞????‾??????℅??車?????角????
#define MAX_INFO_SWITCH_STORAGE_SERVER  64      //??????﹞????‾??????℅??車?????????角????
#define RTMP_URL_LEN                    128     //RTMP URL ?∟??
#define MAX_ID_LEN_128                  128     //﹞???????ID?∟??
#define MAX_DEBUGCMD_LEN                1024    //?豕㊣??‾???邦??℅??車?∟??
#define MAX_DEBUGINFO_LEN               1400    //?豕㊣??‾??????℅??車?∟??
#define MAX_VEHICLE_ID_LEN              32      //℅??車????㊣那???∟??
#define LEN_PROPERTY                    128
typedef    struct
{
	DWORD    dwSize; //㊣???㊣“???∟??,
	NET_DVR_TIME_EX    strStartTime;  //?????㊣??
	NET_DVR_TIME_EX    strStopTime;  //?芍???㊣??
	char     sLicense[MAX_LICENSE_LEN_EX/*32*/];    //????????
	DWORD      dwChannel;
	BYTE      byRegion;
	BYTE      byRes[127]; // ???辰?‾???? 0-㊣?????1-?﹞??(Europe Region)??2-?赤?????辰(Russian Region)??3-?﹞??&?赤????(EU&CIS) , 4-?????“Middle East????0xff-?迄??
}NET_DVR_VEHICLE_INFO_COND, *LPNET_DVR_VEHICLE_INFO_COND;

typedef  struct
{
	DWORD     dwSize;
	DWORD     dwIndex;//?辰??    
	BYTE    byDeviceID[DEVICE_ID_LEN/*48*/];    //?豕㊣?㊣角??
	BYTE    byBelieve;//????????0-100    
	BYTE    byDir;//﹞??辰??0-????????1-﹞??辰??2-???辰??3-????
	BYTE    byLineID;//??????
	BYTE   byRes1;
	NET_DVR_TIME_EX  struSnapTime;//℅????㊣??
	char    sLicense[MAX_LICENSE_LEN_EX/*32*/];        //????????
	BYTE    byMonitoringSiteID[MONITORSITE_ID_LEN /*48*/];    //?角????㊣角??
	BYTE    byCountry; // ?迆???‾??????????????COUNTRY_INDEX?“???∫???㊣COUNTRY_ALL = 0xff, //ALL  ?????㊣??
	BYTE    byMatchingResult;//??∼℅?????????芍????0-㊣?????1-∼℅??????2-????????3-????
	BYTE    byArea;                         //???辰?“??﹞??????‾?迆?????????辰??????∼????????? EMI_AREA
	BYTE    byPlateType;                    //?????角?? ???? VCA_PLATE_TYPE
	char    sDeviceName[NAME_LEN/*32*/];    //?豕㊣?????
	BYTE  	byPlateColor;						//???????? ???? VCA_PLATE_COLOR
	BYTE  	byPlateSize;						//??????????0~??????1~long, 2~short(????????????)
	BYTE    byRes2[2];
	char    sPlateCategory[MAX_CATEGORY_LEN/*8*/];		//????????????, ????????℅???????(???∼?????????????∫??)
	char    sPlateImageURL[URL_LEN_V40/*256*/];         //????????URL
	char    sEffectiveTime[ISO_8601_LEN/*32*/];    //???????????∫?㊣????????ISO8601 time??????????2009-11-14T15:27Z
	BYTE    byRes[176];
}NET_DVR_VEHICLE_INFO_CFG, *LPNET_DVR_VEHICLE_INFO_CFG;

//????????????
#define MAX_VCA_CHAN  16//℅??車?????“????
typedef struct tagNET_VCA_CTRLINFO
{
	BYTE   byVCAEnable;        //??﹞?????????
	BYTE   byVCAType;        //?????????角????VCA_CHAN_ABILITY_TYPE 
	BYTE   byStreamWithVCA; //???‾????﹞???????????
	BYTE   byMode;            //??????ATM?????㊣????VCA_CHAN_MODE_TYPE ,TFS?????㊣????TFS_CHAN_MODE_TYPE
	BYTE   byControlType;   //?????角????∼???㊣赤????0-﹞???1-??
							// byControlType &1 ??﹞?????℅???????
	BYTE   byPicWithVCA;// ㊣“??℅?????????㊣那????(??㊣那?辰)??0-???????“????????1-??????
	BYTE   byRes[2];         //㊣??????豕????0 
}NET_VCA_CTRLINFO, *LPNET_VCA_CTRLINFO;

//?????????????芍??
typedef struct tagNET_VCA_CTRLCFG
{
	DWORD dwSize;
	NET_VCA_CTRLINFO  struCtrlInfo[MAX_VCA_CHAN];     //????????,??℅谷0?????豕㊣????????“??
	BYTE byRes[16];
}NET_VCA_CTRLCFG, *LPNET_VCA_CTRLCFG;

//?????豕㊣???????
typedef struct tagNET_VCA_DEV_ABILITY
{
	DWORD dwSize;              //?芍???∟??
	BYTE byVCAChanNum;         //?????“??????
	BYTE byPlateChanNum;       //?????“??????
	BYTE byBBaseChanNum;       //?????迄㊣?∼?????
	BYTE byBAdvanceChanNum;    //????????∼?????
	BYTE byBFullChanNum;       //?????那??∼?????
	BYTE byATMChanNum;           //????ATM????
	BYTE byPDCChanNum;         //?????????“??????
	BYTE byITSChanNum;         //???“?????“??????
	BYTE byBPrisonChanNum;     //?????角?邦∼?(?角?芍)?“??????
	BYTE byFSnapChanNum;       //????℅????“??????
	BYTE byFSnapRecogChanNum;  //????℅???????㊣??“??????
	BYTE byFRetrievalChanNum;  //?????車?足?‾????
	BYTE bySupport;            //???????????芍????0㊣赤?????∫????1㊣赤???∫??
							   //bySupport & 0x1??㊣赤????﹞??∫???????迆℅? 2012-3-22
							   //bySupport & 0x2??㊣赤????﹞??∫??128?﹞???‾????2012-12-27
	BYTE byFRecogChanNum;      //??????㊣??“??????
	BYTE byBPPerimeterChanNum; //?????角?邦∼?(????)?“??????
	BYTE byTPSChanNum;         //???“?????“??????
	BYTE byTFSChanNum;         //???﹞???????∟?“??????
	BYTE byFSnapBFullChanNum;  //????℅?????????﹞????“??????
	BYTE byHeatMapChanNum;     //???????“??????
	BYTE bySmartVehicleNum;    //SMART????+?????足???“??????
	BYTE bySmartHVTNum;       //SMART????+?足???足???“??????
	BYTE bySmartNum;          //SMART????????
	BYTE byVehicleNum;        //?????足???“??????
	BYTE bySmartRoadDetectionNum; // SMART????+???﹞?角???“??????
	BYTE bySmartFaceDetectionNum; // SMART????+?????足???“??????
	BYTE bySmartHeatMapNum; // SMART????+???????“??????
	BYTE byHumanRecognitionNum; //??????㊣??“??????
	BYTE byEdcationStudentNum; //?????????“?∫?迆?????足??&&?∫?迆???????????∫?????“????
	BYTE byRoadDetectionNum;//???﹞?角???“??????
	BYTE byPersonDensityDetection; //???㊣?????足???“??????
	BYTE bySafetyHelmetDetection; //∼????㊣?足???“??????
	BYTE byPerimeterCapture;//????℅????“??????
	BYTE byHeelPDC;//???㊣???‾?“??????
	BYTE by12MPLiveView;// ?‾???‾ 1200W@20fps?∟???“4000*3000??
	BYTE byTeacherBehaviorDetectNum; //?????????“?????????足?????∫?????“????
	BYTE byMixedTargetDetection;//?足????㊣那?足???“??????
	BYTE byFaceContrast;//????㊣????足???“??????
	BYTE byCityManagement;//?????????足???“??????
	BYTE byMixedTargetDetectionSmart;//?足????㊣那?足??+Smart????
	BYTE byRes;
}NET_VCA_DEV_ABILITY, *LPNET_VCA_DEV_ABILITY;


//????﹞????????角??
typedef enum _VCA_ABILITY_TYPE_
{
	TRAVERSE_PLANE_ABILITY = 0x01,       //??????????
	ENTER_AREA_ABILITY = 0x02,       //???????辰
	EXIT_AREA_ABILITY = 0x04,       //???????辰
	INTRUSION_ABILITY = 0x08,       //????
	LOITER_ABILITY = 0x10,       //????
	LEFT_TAKE_ABILITY = 0x20,       //???﹞????????
	PARKING_ABILITY = 0x40,       //????
	RUN_ABILITY = 0x80,       //?足??????
	HIGH_DENSITY_ABILITY = 0x100,      //???㊣????
	LF_TRACK_ABILITY = 0x200,      //?辰?迆?迆℅?
	VIOLENT_MOTION_ABILITY = 0x400,      //?????????足??
	REACH_HIGHT_ABILITY = 0x800,      //?????足??
	GET_UP_ABILITY = 0x1000,     //???赤?足??
	LEFT_ABILITY = 0x2000,     //???﹞????
	TAKE_ABILITY = 0x4000,     //???﹞????
	LEAVE_POSITION = 0x8000,     //????
	TRAIL_ABILITY = 0x10000,    //???? 
	KEY_PERSON_GET_UP_ABILITY = 0x20000,    //???????㊣???赤?足??
	STANDUP_ABILITY = 0x40000,   //????
	FALL_DOWN_ABILITY = 0x80000,    //????
	AUDIO_ABNORMAL_ABILITY = 0x100000,   //?迄????㊣?
	ADV_REACH_HEIGHT_ABILITY = 0x200000,   //????????
	TOILET_TARRY_ABILITY = 0x400000,   //???????㊣
	YARD_TARRY_ABILITY = 0x800000,   //﹞?﹞???????
	ADV_TRAVERSE_PLANE_ABILITY = 0x1000000,  //??????????
	LECTURE_ABILITY = 0x2000000,  //????
	ANSWER_ABILITY = 0x4000000,  //????????
	HUMAN_ENTER_ABILITY = 0x10000000, //?????邦ATM ,????ATM_PANEL???????∫??
	OVER_TIME_ABILITY = 0x20000000, //??℅‾???㊣,????ATM_PANEL???????∫??
	STICK_UP_ABILITY = 0x40000000, //?迄????
	INSTALL_SCANNER_ABILITY = 0x80000000  //∼?℅∼???“?‾
}VCA_ABILITY_TYPE;

typedef enum _VCA_ABILITY_TYPE_EX_
{
	PEOPLENUM_CHANGE_ABILITY = 0x00000002, //????㊣????足??
	SPACING_CHANGE_ABILITY = 0x00000004,    //???角㊣????足??
	EVENT_COMBINED_ABILITY = 0x00000008,    //℅谷?????????辰
	EVENT_SIT_QUIETLY = 0x00000010,    //??℅?
	EVENT_HIGH_DENSITY_STATUS_ABILITY = 0x00000020,    //???㊣????℅???
	EVENT_RUNNING = 0x00000040,        //㊣???
	EVENT_RETENTION = 0x00000080, //????
	EVENT_TEACHER_WRITING = 0x00000100 //∼??谷
}VCA_ABILITY_TYPE_EX;

//?????“???角??
typedef enum _VCA_CHAN_ABILITY_TYPE_
{
	VCA_BEHAVIOR_BASE = 1,          //????﹞????迄㊣?∼?
	VCA_BEHAVIOR_ADVANCE = 2,          //????﹞???????∼?
	VCA_BEHAVIOR_FULL = 3,          //????﹞????那??∼?
	VCA_PLATE = 4,          //????????
	VCA_ATM = 5,          //ATM????
	VCA_PDC = 6,          //???‾??????
	VCA_ITS = 7,          //???? ???“????
	VCA_BEHAVIOR_PRISON = 8,          //????﹞????角?邦∼?(?角?芍) 
	VCA_FACE_SNAP = 9,          //????℅???????
	VCA_FACE_SNAPRECOG = 10,          //????℅???????㊣?????
	VCA_FACE_RETRIEVAL = 11,          //?????車?足?‾????
	VCA_FACE_RECOG = 12,          //??????㊣?????
	VCA_BEHAVIOR_PRISON_PERIMETER = 13, // ????﹞????角?邦∼? (????)
	VCA_TPS = 14,          //???“????
	VCA_TFS = 15,          //???﹞???????∟
	VCA_BEHAVIOR_FACESNAP = 16,          //????℅?????????﹞???????
	VCA_HEATMAP = 17,         //??????
	VCA_SMART_VEHICLE_DETECTION = 18,  // SMART????+?????足??
	VCA_SMART_HVT_DETECTION = 19,  // SMART????+?足???足??
	VCA_SMART_EVENT = 20,      // SMART????
	VCA_VEHICLE_DETECTION = 21,      // ?????足??
	VCA_SMART_ROAD_DETECTION = 22,      // SMART????+???﹞?角??
	VCA_SMART_FACE_DETECTION = 23,      // SMART????+?????足??
	VCA_SMART_HEATMAP = 24,       // SMART????+??????
	VCA_HUMAN_RECOGNITION = 25,      // ??????㊣?
	VCA_EDUCATION_STUDENT_DETECTION = 26,  //?????????“?∫?迆?????足??&&?∫?迆??????????
	VCA_ROAD_DETECTION = 27,      //???﹞?角??
	VCA_PERSON_DENSITY_DETECTION = 28,     //???㊣?????足??
	VCA_PERIMETER_CAPTURE = 29,            //????℅???
	VCA_SAFETY_HELMET_DETECTION = 30,      //∼????㊣?足??
	VCA_HEEL_PDC = 31,                      //???㊣???‾
	VCA_12MPLIVE_VIEW = 32,                 //?‾???‾ 1200W@20fps?∟???“4000*3000??
	VCA_TEACHER_BEHAVIOR_DETECTION = 33,    //?????????足??
	VCA_MIXED_TARGET_DETECTION = 34,    //?足????㊣那?足??
	VCA_FACE_CONTRAST = 35,             //??????㊣??足??(???㊣?∫??????℅????∼??????㊣?????????????﹞“????????????﹞“????????㊣????????????﹞㊣?????㊣?????????????㊣那????????㊣??辰???芍?迆??????㊣那????℅?????)
	VCA_CITY_MANAGEMENT = 36,             //????????
	VCA_MIXED_TARGET_DETECTION_SMART = 37   //?足????㊣那?足????Smart
}VCA_CHAN_ABILITY_TYPE;

//????ATM?????角??(ATM????????)
typedef enum _VCA_CHAN_MODE_TYPE_
{
	VCA_ATM_PANEL = 0,  //ATM??∼?
	VCA_ATM_SURROUND = 1,  //ATM?﹞??
	VCA_ATM_FACE = 2,     //ATM????
	VCA_ATM_SAFETYCABIN = 3  //ATM﹞??∟??
}VCA_CHAN_MODE_TYPE;

//???“???∟TFS?“??????(TFS????????)
typedef enum _TFS_CHAN_MODE_TYPE_
{
	TFS_CITYROAD = 0,  //TFS ???????﹞
	TFS_FREEWAY = 1   //TFS ???????﹞
}TFS_CHAN_MODE_TYPE;

//????﹞??????∼????
typedef enum _BEHAVIOR_SCENE_MODE_TYPE_
{
	BEHAVIOR_SCENE_DEFAULT = 0, //????????
	BEHAVIOR_SCENE_WALL = 1,    //?∫??
	BEHAVIOR_SCENE_INDOOR = 2   //????
}BEHAVIOR_SCENE_MODE_TYPE;

//?角?芍????
typedef enum _BEHAVIOR_PRISON_MODE_TYPE_
{
	BEHAVIOR_PRISON = 0, //?角?迄
	BEHAVIOR_HEARING = 1, //?車????
	BEHAVIOR_RECFIELD = 2  //﹞?﹞???
}BEHAVIOR_PRISON_MODE_TYPE, LPBEHAVIOR_PRISON_MODE_TYPE;


//?“??????????????
typedef struct tagNET_VCA_CHAN_IN_PARAM
{
	BYTE byVCAType;        //VCA_CHAN_ABILITY_TYPE??????
	BYTE byMode;        //??????ATM ?????㊣????VCA_CHAN_MODE_TYPE,TFS?????㊣????TFS_CHAN_MODE_TYPE,?㊣VCA_TYPE ?????“?????㊣????TRAFFIC_SCENE_MODE
	BYTE byRes[2];         //㊣??????豕????0 
}NET_VCA_CHAN_IN_PARAM, *LPNET_VCA_CHAN_IN_PARAM;


//???????????芍??
typedef struct tagNET_VCA_BEHAVIOR_ABILITY
{
	DWORD dwSize;         //?芍???∟??
	DWORD dwAbilityType; //?∫?????????角????∼???㊣赤??????VCA_ABILITY_TYPE?“??
	BYTE  byMaxRuleNum;     //℅??車???辰??
	BYTE  byMaxTargetNum; //℅??車??㊣那??
	BYTE  bySupport;        // ?∫?????????角??   ∼???㊣赤??  
							// bySupport & 0x01 ?∫??㊣那?“????
	BYTE  byRes[5];         //㊣??????豕????0 
	DWORD dwAbilityTypeEx;  //?∫?????????角????∼???㊣赤??????VCA_ABILITY_TYPE_EX?“??
}NET_VCA_BEHAVIOR_ABILITY, *LPNET_VCA_BEHAVIOR_ABILITY;

//???∼㊣??邦?????邦??????
typedef struct tagNET_DVR_SCENE_CHANGE_UPDATE_PARAM
{
	DWORD    dwSize;
	BYTE    byIDCount;    //?????‾ID??
	BYTE    byRes1[3];
	BYTE    byStreamID[MAX_STREAM_ID_NUM][STREAM_ID_LEN];
	BYTE    byRes[256];
}NET_DVR_SCENE_CHANGE_UPDATE_PARAM, *LPNET_DVR_SCENE_CHANGE_UPDATE_PARAM;

// ???“???????芍??
typedef struct tagNET_DVR_ITS_ABILITY
{
	DWORD     dwSize;             // ?芍?????車??
	DWORD     dwAbilityType;      // ?∫??????????㊣赤  ????ITS_ABILITY_TYPE
	BYTE     byMaxRuleNum;         //℅??車???辰??
	BYTE     byMaxTargetNum;     //℅??車??㊣那??
	BYTE    byRes[10];            // ㊣???
}NET_DVR_ITS_ABILITY, *LPNET_DVR_ITS_ABILITY;

/***********************************end*******************************************/

/************************************?????????芍??*********************************/
//?????????芍??
//℅?㊣那???谷????,???????????㊣?∼??????∼?﹞?㊣??車??, ?????????????車????

//???辰?辰?芍??
typedef struct tagNET_VCA_RECT
{
	float fX;               //㊣????辰℅車????????X?芍℅?㊣那, 0.001~1
	float fY;               //㊣????辰℅車????????Y?芍℅?㊣那, 0.001~1
	float fWidth;           //㊣????辰???赤??, 0.001~1
	float fHeight;          //㊣????辰??????, 0.001~1
}NET_VCA_RECT, *LPNET_VCA_RECT;

//????﹞????????角??
typedef enum _VCA_EVENT_TYPE_
{
	VCA_TRAVERSE_PLANE = 0x1,        //??????????
	VCA_ENTER_AREA = 0x2,        //??㊣那???????辰,?∫?????辰???辰
	VCA_EXIT_AREA = 0x4,        //??㊣那???????辰,?∫?????辰???辰
	VCA_INTRUSION = 0x8,        //????????,?∫?????辰???辰
	VCA_LOITER = 0x10,       //????,?∫?????辰???辰
	VCA_LEFT_TAKE = 0x20,       //???﹞????????,?∫?????辰???辰
	VCA_PARKING = 0x40,       //????,?∫?????辰???辰
	VCA_RUN = 0x80,       //?足??????,?∫?????辰???辰
	VCA_HIGH_DENSITY = 0x100,      //???辰?????㊣????,?∫?????辰???辰
	VCA_VIOLENT_MOTION = 0x200,         //?????????足??
	VCA_REACH_HIGHT = 0x400,         //?????足??
	VCA_GET_UP = 0x800,         //???赤?足??
	VCA_LEFT = 0x1000,     //???﹞????
	VCA_TAKE = 0x2000,     //???﹞????
	VCA_LEAVE_POSITION = 0x4000,     //????
	VCA_TRAIL = 0x8000,     //????
	VCA_KEY_PERSON_GET_UP = 0x10000,    //???????㊣???赤?足??
	VCA_STANDUP = 0x20000,    //????
	VCA_FALL_DOWN = 0x80000,    //?????足??
	VCA_AUDIO_ABNORMAL = 0x100000,   //?迄????㊣??足??
	VCA_ADV_REACH_HEIGHT = 0x200000,   //????????
	VCA_TOILET_TARRY = 0x400000,   //???????㊣
	VCA_YARD_TARRY = 0x800000,   //﹞?﹞???????
	VCA_ADV_TRAVERSE_PLANE = 0x1000000,  //??????????
	VCA_LECTURE = 0x2000000,  //????
	VCA_ANSWER = 0x4000000,  //????????
	VCA_HUMAN_ENTER = 0x10000000, //?????邦ATM           ????ATM_PANEL???????∫??
	VCA_OVER_TIME = 0x20000000, //??℅‾???㊣            ????ATM_PANEL???????∫??
	VCA_STICK_UP = 0x40000000, //?迄????,?∫?????辰???辰
	VCA_INSTALL_SCANNER = 0x80000000  //∼?℅∼???“?‾,?∫?????辰???辰
}VCA_EVENT_TYPE;

//????﹞????????角??????
typedef enum _VCA_RULE_EVENT_TYPE_EX_
{
	ENUM_VCA_EVENT_TRAVERSE_PLANE = 1,   //??????????
	ENUM_VCA_EVENT_ENTER_AREA = 2,   //??㊣那???????辰,?∫?????辰???辰
	ENUM_VCA_EVENT_EXIT_AREA = 3,   //??㊣那???????辰,?∫?????辰???辰
	ENUM_VCA_EVENT_INTRUSION = 4,   //????????,?∫?????辰???辰
	ENUM_VCA_EVENT_LOITER = 5,   //????,?∫?????辰???辰
	ENUM_VCA_EVENT_LEFT_TAKE = 6,   //???﹞????????,?∫?????辰???辰
	ENUM_VCA_EVENT_PARKING = 7,   //????,?∫?????辰???辰
	ENUM_VCA_EVENT_RUN = 8,   //?足??????,?∫?????辰???辰
	ENUM_VCA_EVENT_HIGH_DENSITY = 9,   //???辰?????㊣????,?∫?????辰???辰
	ENUM_VCA_EVENT_VIOLENT_MOTION = 10,  //?????????足??
	ENUM_VCA_EVENT_REACH_HIGHT = 11,  //?????足??
	ENUM_VCA_EVENT_GET_UP = 12,  //???赤?足??
	ENUM_VCA_EVENT_LEFT = 13,  //???﹞????
	ENUM_VCA_EVENT_TAKE = 14,  //???﹞????
	ENUM_VCA_EVENT_LEAVE_POSITION = 15,  //????
	ENUM_VCA_EVENT_TRAIL = 16,  //????
	ENUM_VCA_EVENT_KEY_PERSON_GET_UP = 17,  //???????㊣???赤?足??
	ENUM_VCA_EVENT_STANDUP = 18,  //????
	ENUM_VCA_EVENT_FALL_DOWN = 20,  //?????足??
	ENUM_VCA_EVENT_AUDIO_ABNORMAL = 21,  //?迄????㊣??足??
	ENUM_VCA_EVENT_ADV_REACH_HEIGHT = 22,  //????????
	ENUM_VCA_EVENT_TOILET_TARRY = 23,  //???????㊣
	ENUM_VCA_EVENT_YARD_TARRY = 24,  //﹞?﹞???????
	ENUM_VCA_EVENT_ADV_TRAVERSE_PLANE = 25,  //??????????
	ENUM_VCA_EVENT_LECTURE = 26,  //?????“??????
	ENUM_VCA_EVENT_ANSWER = 27,  //?????????“??????
	ENUM_VCA_EVENT_HUMAN_ENTER = 29,  //?????邦ATM,????ATM_PANEL???????∫??   
	ENUM_VCA_EVENT_OVER_TIME = 30,  //??℅‾???㊣,????ATM_PANEL???????∫??
	ENUM_VCA_EVENT_STICK_UP = 31,  //?迄????,?∫?????辰???辰
	ENUM_VCA_EVENT_INSTALL_SCANNER = 32,  //∼?℅∼???“?‾,?∫?????辰???辰
	ENUM_VCA_EVENT_PEOPLENUM_CHANGE = 35,  //????㊣???????
	ENUM_VCA_EVENT_SPACING_CHANGE = 36,  //???角㊣???????
	ENUM_VCA_EVENT_COMBINED_RULE = 37,   //℅谷?????辰????
	ENUM_VCA_EVENT_SIT_QUIETLY = 38,   //?????????“??℅???    ?辰????
	ENUM_VCA_EVENT_HIGH_DENSITY_STATUS = 39,   //???辰?????㊣????℅???
	ENUM_VCA_EVENT_RUNNING = 40, //㊣????足??
	ENUM_VCA_EVENT_RETENTION = 41, //?????足??
	ENUM_VCA_EVENT_BLACKBOARD_WRITE = 42,   //∼??谷
	ENUM_VCA_EVENT_SITUATION_ANALYSIS = 43   //????﹞???
} VCA_RULE_EVENT_TYPE_EX;

//??????????﹞??辰?角??
typedef enum _VCA_CROSS_DIRECTION_
{
	VCA_BOTH_DIRECTION,  // ???辰 
	VCA_LEFT_GO_RIGHT,   // ??℅車???? 
	VCA_RIGHT_GO_LEFT    // ??????℅車 
}VCA_CROSS_DIRECTION;

//???芍??
typedef struct tagNET_VCA_LINE
{
	NET_VCA_POINT struStart;    //???? 
	NET_VCA_POINT struEnd;      //????
}NET_VCA_LINE, *LPNET_VCA_LINE;

//?角㊣????芍????
typedef struct tagNET_VCA_POLYGON
{
	DWORD dwPointNum;                                  //???∫?? ?車??????3??????3?????????????????????∫???辰?????????????????∫???辰 
	NET_VCA_POINT  struPos[VCA_MAX_POLYGON_POINT_NUM]; //?角㊣???㊣?????,℅??角???? 
}NET_VCA_POLYGON, *LPNET_VCA_POLYGON;

//??????????
typedef struct tagNET_VCA_TRAVERSE_PLANE
{
	NET_VCA_LINE struPlaneBottom;          //???????℅㊣?
	VCA_CROSS_DIRECTION dwCrossDirection;  //????﹞??辰: 0-???辰??1-??℅車??????2-??????℅車
	BYTE bySensitivity;                    //?谷??????????﹞??∫[1,5]
	BYTE byPlaneHeight;                    //??????????
										   /*
										   ?足????㊣那?????∫???角?????????“??????
										   0~?迄????㊣那?“㊣赤???????“?足????㊣那???迄????㊣那?????????足????
										   0x01 ~ ????
										   0x02 ~ ????
										   0x04 ~ ????
										   */
	BYTE byDetectionTarget;
	BYTE byPriority;//??????,0~??,1~??,2~??
	BYTE byRes2[36];                       //㊣?????
}NET_VCA_TRAVERSE_PLANE, *LPNET_VCA_TRAVERSE_PLANE;

typedef struct tagNET_VCA_SIT_QUIETLY
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
							   //???辰??﹞????辰??0-???辰?辰???辰??﹞???1-???辰??﹞?
	DWORD   dwDuration;         //?????㊣??  ????s ﹞??∫1-3600
	BYTE    byRes[4];
} NET_VCA_SIT_QUIETLY, *LPNET_VCA_SIT_QUIETLY;

//????/???????辰????
typedef struct tagNET_VCA_AREA
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;        //?谷??????????﹞??∫[1,5]
							   /*
							   ?足????㊣那?????∫???角?????????“??????
							   0~?迄????㊣那?“㊣赤???????“?足????㊣那???迄????㊣那?????????足????
							   0x01 ~ ????
							   0x02 ~ ????
							   0x04 ~ ????
							   */
	BYTE byDetectionTarget;
	BYTE byPriority;//??????,0~??,1~??,2~??
	BYTE byRes[5];
}NET_VCA_AREA, *LPNET_VCA_AREA;

//?迄??㊣“???????㊣????㊣那??㊣“????????????㊣“????????IO㊣“????????1??﹞?????????
//????????
typedef struct tagNET_VCA_INTRUSION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD wDuration;            //??????????﹞??㊣??????: 1-120?????“?谷5?????????????∫㊣“?????㊣??  ??ATM????????﹞??????????? 1-1000??
	BYTE bySensitivity;        //?谷??????????﹞??∫[1-100]
	BYTE byRate;               //??㊣??????辰???迄????㊣“????㊣那??????㊣那?????辰??????㊣??????谷??????????
							   /*
							   ?足????㊣那?????∫???角?????????“??????
							   0~?迄????㊣那?“㊣赤???????“?足????㊣那???迄????㊣那?????????足????
							   0x01 ~ ????
							   0x02 ~ ????
							   0x04 ~ ????
							   */
	BYTE byDetectionTarget;
	BYTE byPriority;//??????,0~??,1~??,2~??
	BYTE byRes[2];             //㊣???
}NET_VCA_INTRUSION, *LPNET_VCA_INTRUSION;

//????????
typedef struct tagNET_VCA_LOITER
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD wDuration; //??﹞??㊣????????1-120?????“?谷10??
	BYTE bySensitivity;            //?谷??????????﹞??∫[1,5]
	BYTE byRes[1];
	DWORD dwLoiterDistance; //????℅??角????????100-5000??????1000cm
}NET_VCA_LOITER, *LPNET_VCA_LOITER;

//???﹞????/???﹞????????
typedef struct tagNET_VCA_TAKE_LEFT
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD wDuration; //??﹞??㊣????????1-120?????“?谷10??
	BYTE bySensitivity;            //?谷??????????﹞??∫[1,5]
	BYTE byRes[5];
}NET_VCA_TAKE_LEFT, *LPNET_VCA_TAKE_LEFT;

//????????
typedef struct tagNET_VCA_PARKING
{
	NET_VCA_POLYGON struRegion;    //???辰﹞??∫
	WORD wDuration;                //??﹞??㊣????????1-100?????“?谷10??
	BYTE bySensitivity;            //?谷??????????﹞??∫[1,5]
	BYTE byRes[5];
}NET_VCA_PARKING, *LPNET_VCA_PARKING;

//?足??????????
typedef struct tagNET_VCA_RUN
{
	NET_VCA_POLYGON struRegion;    //???辰﹞??∫
	float  fRunDistance;        //???足??????℅??車?角??, ﹞??∫: [0.1, 1.00] ???????? ????????(1,20)m/s
	BYTE bySensitivity;            //?谷??????????﹞??∫[1,5]
	BYTE byMode;     // 0 ????????  1 ????????
					 /*
					 ?足????㊣那?????∫???角?????????“??????
					 0~?迄????㊣那?“㊣赤???????“?足????㊣那???迄????㊣那?????????足????
					 0x01 ~ ????
					 0x02 ~ ????
					 */
	BYTE byDetectionTarget;
	BYTE byRes;
}NET_VCA_RUN, *LPNET_VCA_RUN;

//???㊣????????
typedef struct tagNET_VCA_HIGH_DENSITY
{
	NET_VCA_POLYGON struRegion;        //???辰﹞??∫
	float           fDensity;       //????㊣???, ﹞??∫: [0.1, 1.0]
	BYTE            bySensitivity;    //?谷??????????﹞??∫[1,5]
	BYTE            byRes;          // ㊣???℅???
	WORD            wDuration;      // ??﹞????㊣????????㊣“?????? 20-360s
}NET_VCA_HIGH_DENSITY, *LPNET_VCA_HIGH_DENSITY;

//????????????
typedef struct tagNET_VCA_VIOLENT_MOTION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD  wDuration;           //??﹞?????????㊣“????????1-50??
	BYTE  bySensitivity;       //?谷??????????﹞??∫[1,5]
	BYTE  byMode;              //0-????????????1-????????????????2-??????????
	BYTE  byRes[4];            //㊣???
}NET_VCA_VIOLENT_MOTION, *LPNET_VCA_VIOLENT_MOTION;

// ????????
typedef struct tagNET_VCA_REACH_HIGHT
{
	NET_VCA_LINE struVcaLine;   //??????????
	WORD wDuration; //??﹞?????㊣“????????1-120??
	BYTE    byRes[6];           // ㊣???℅???
}NET_VCA_REACH_HIGHT, *LPNET_VCA_REACH_HIGHT;

// ????????
typedef struct tagNET_VCA_GET_UP
{
	NET_VCA_POLYGON struRegion; //???辰﹞??∫
	WORD    wDuration;            //??﹞?????㊣“??????1-100 ??
	BYTE    byMode;             //???赤?足??????,0-?車???“??????,1-??????????,2-?車???“??℅??????赤????
	BYTE    bySensitivity;      //?谷??????????﹞??∫[1,10]
	BYTE    byRes[4];            //㊣???℅???
}NET_VCA_GET_UP, *LPNET_VCA_GET_UP;

// ???﹞????
typedef struct tagNET_VCA_LEFT
{
	NET_VCA_POLYGON struRegion; // ???辰﹞??∫
	WORD       wDuration;       // ??﹞????﹞????㊣“?????? 10-100??
	BYTE       bySensitivity;   // ?谷??????????﹞??∫[1,5] 
	BYTE       byRes[5];        // ㊣???℅???
}NET_VCA_LEFT, *LPNET_VCA_LEFT;

// ???﹞????
typedef struct tagNET_VCA_TAKE
{
	NET_VCA_POLYGON struRegion;     // ???辰﹞??∫
	WORD            wDuration;      // ??﹞????﹞????㊣“??????10-100??
	BYTE            bySensitivity;  // ?谷??????????﹞??∫[1,5] 
	BYTE            byRes[5];       // ㊣???℅???
}NET_VCA_TAKE, *LPNET_VCA_TAKE;

typedef struct tagNET_VCA_OVER_TIME
{
	NET_VCA_POLYGON     struRegion;    // ???辰﹞??∫
	WORD               wDuration;  // ??℅‾㊣“???㊣?????? 4s-60000s
	BYTE   byRes[6];   // ㊣???℅???
}NET_VCA_OVER_TIME, *LPNET_VCA_OVER_TIME;

typedef struct tagNET_VCA_HUMAN_ENTER
{
	DWORD                dwRes[23];            //㊣???℅???
}NET_VCA_HUMAN_ENTER, *LPNET_VCA_HUMAN_ENTER;

//?迄????????
typedef struct tagNET_VCA_STICK_UP
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD wDuration; //??﹞??㊣????????4-60?????“?谷10??
	BYTE  bySensitivity;       //?谷??????????﹞??∫[1,5]
	BYTE byRes[5];
}NET_VCA_STICK_UP, *LPNET_VCA_STICK_UP;

//???“?‾????
typedef struct tagNET_VCA_SCANNER
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD wDuration; //???“?????㊣????4-60??
	BYTE bySensitivity;       //?谷??????????﹞??∫[1,5]
	BYTE byRes[5];
}NET_VCA_SCANNER, *LPNET_VCA_SCANNER;

//????????
typedef struct tagNET_VCA_LEAVE_POSITION
{
	NET_VCA_POLYGON   struRegion; //???辰﹞??∫
	WORD   wLeaveDelay;  //????㊣“???㊣??????????s
	WORD   wStaticDelay; //????㊣“???㊣??????????s
	BYTE   byMode;       //??????0-??????????1-??????????2-????????????
	BYTE   byPersonType; //?????????角????0-??????????1-????????
	BYTE   byOnPosition; //??????????1-10??????1
	BYTE   bySensitivity;     //?谷??????????﹞??∫[1,5]
}NET_VCA_LEAVE_POSITION, *LPNET_VCA_LEAVE_POSITION;

//????????
typedef struct tagNET_VCA_TRAIL
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD  wRes;      /* ㊣??? */
	BYTE  bySensitivity;       /* ?谷??????????﹞??∫[1,5] */
	BYTE  byRes[5];
}NET_VCA_TRAIL, *LPNET_VCA_TRAIL;

//????????
typedef struct tagNET_VCA_FALL_DOWN
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD  wDuration;      /* ??﹞????????? 1-60s*/
	BYTE  bySensitivity;       /* ?谷??????????﹞??∫[1,5] */
	BYTE  byHeightThreshold; //??????????﹞??∫[0,250]??????90???????????℅
	BYTE  byRes[4];
}NET_VCA_FALL_DOWN, *LPNET_VCA_FALL_DOWN;

//????
typedef struct tagNET_VCA_STANDUP
{
	NET_VCA_POLYGON  struRegion; //???辰﹞??∫
	BYTE  bySensitivity;     //?谷??????????﹞??∫[1,100]
	BYTE  byHeightThreshold; //??????????﹞??∫[0,250]??????130???????????℅
	WORD  wDuration;         //??﹞?????????[1,3600]??????2??????????
	BYTE  byRes[4];          //㊣???
}NET_VCA_STANDUP, *LPNET_VCA_STANDUP;


//????㊣???
typedef struct tagNET_VCA_PEOPLENUM_CHANGE
{
	NET_VCA_POLYGON  struRegion; //???辰﹞??∫
	BYTE  bySensitivity;  //?谷??????????﹞??∫[1,100]
	BYTE  byPeopleNumThreshold; //??????????﹞??∫[0,5]??????1 
	BYTE  byDetectMode; //?足??﹞????????????????角㊣?????1-?車????2-??????3-??????4-??????
	BYTE  byNoneStateEffective; //????℅?????﹞????∫??0-???∫??1-???∫
	WORD  wDuration;  //??﹞??㊣??????[1,3600]??????2??????????
	BYTE  byPeopleNum; //??﹞?㊣“????????????????㊣“????㊣“???豕㊣?﹞???0㊣赤?????∫??㊣???????㊣“??0xff㊣赤??㊣“????????0
	BYTE  byRes;   //㊣???
}NET_VCA_PEOPLENUM_CHANGE, *LPNET_VCA_PEOPLENUM_CHANGE;

//???角㊣???
typedef struct tagNET_VCA_SPACING_CHANGE
{
	NET_VCA_POLYGON  struRegion; //???辰﹞??∫
	float fSpacingThreshold; //???角??????﹞??∫[0,10.0]??????1.0?????????℅
	BYTE  bySensitivity;  //?谷??????????﹞??∫[1,100]
	BYTE  byDetectMode; //?足??﹞??????????角?????角㊣?????1-?車????2-????
	WORD  wDuration;  //??﹞??㊣??????[1,3600]??????2??????????
}NET_VCA_SPACING_CHANGE, *LPNET_VCA_SPACING_CHANGE;


//?迄????㊣?????
typedef struct tagNET_VCA_AUDIO_ABNORMAL
{
	WORD wDecibel;       //?迄??????
	BYTE bySensitivity;  //?谷??????????﹞??∫[1,100] 
	BYTE byAudioMode;    //?迄???足????????0-?谷?????足????1-﹞?㊣??????足????2-?谷??????﹞?㊣??????足?? 
	BYTE byEnable;       //????????﹞?????(?迄????㊣???????)
	BYTE byThreshold;    //?迄??????[1,100]
	BYTE byRes[54];      //㊣???   
}NET_VCA_AUDIO_ABNORMAL, *LPNET_VCA_AUDIO_ABNORMAL;

//?迄?????? 2014-03-21
typedef struct tagNET_DVR_AUDIO_STEEP_DROP
{
	BYTE  bySensitivity;   /* ?谷??????????﹞??∫[1,100] */
	BYTE  byEnable;        //????????﹞?????(?迄????㊣???????)
	BYTE  byRes[6];
}NET_DVR_AUDIO_STEEP_DROP, *LPNET_DVR_AUDIO_STEEP_DROP;


typedef struct tagNET_DVR_AUDIO_EXCEPTION
{
	DWORD                       dwSize;
	BYTE                        byEnableAudioInException;//????????﹞?????
	BYTE                        byRes1[3];
	NET_VCA_AUDIO_ABNORMAL      struAudioAbnormal;
	NET_DVR_SCHEDTIME            struAlarmSched[MAX_DAYS][MAX_TIMESEGMENT_V30]; //??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V40 struHandleException;     //?足?????赤﹞???
	DWORD                       dwMaxRelRecordChanNum;  //㊣“????﹞??????車?“?? ???“??????℅??車?∫??????
	DWORD                       dwRelRecordChanNum;     //㊣“????﹞??????車?“?? ?? ?????∫????????
	DWORD                       byRelRecordChan[MAX_CHANNUM_V30];
	NET_DVR_AUDIO_STEEP_DROP    struAudioSteepDrop;      //?迄??????
	BYTE                        byRes2[24];
}NET_DVR_AUDIO_EXCEPTION, *LPNET_DVR_AUDIO_EXCEPTION;

typedef struct tagNET_VCA_TOILET_TARRY
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD wDelay;        //???????㊣?㊣??[1,3600]??????????
	BYTE byRes[6];
}NET_VCA_TOILET_TARRY, *LPNET_VCA_TOILET_TARRY;

typedef struct tagNET_VCA_YARD_TARRY
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD wDelay;        //﹞?﹞????????㊣??[1,120]??????????
	BYTE byRes[6];
}NET_VCA_YARD_TARRY, *LPNET_VCA_YARD_TARRY;

typedef struct tagNET_VCA_ADV_REACH_HEIGHT
{
	NET_VCA_POLYGON struRegion; //????????
	DWORD   dwCrossDirection;   //????﹞??辰(?那??VCA_CROSS_DIRECTION): 0-???辰??1-??℅車????2-??????℅車
	BYTE    byRes[4];            // ㊣???℅???
}NET_VCA_ADV_REACH_HEIGHT, *LPNET_VCA_ADV_REACH_HEIGHT;

typedef struct tagNET_VCA_ADV_TRAVERSE_PLANE
{
	NET_VCA_POLYGON struRegion; //??????????
	DWORD   dwCrossDirection;   //????﹞??辰(?那??VCA_CROSS_DIRECTION): 0-???辰??1-??℅車????2-??????℅車
	BYTE    bySensitivity;      //?谷??????????﹞??∫[1,5] 
	BYTE    byRes[3];            //㊣???℅???
} NET_VCA_ADV_TRAVERSE_PLANE, *LPNET_VCA_ADV_TRAVERSE_PLANE;

typedef struct tagNET_VCA_LECTURE
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	WORD wDuration; //??????????﹞??㊣??????: 1-10?????“?谷1?????????????∫㊣“?????㊣??
	BYTE bySensitivity; //?谷??????????﹞??∫[1-100]
	BYTE byAlarmState;//????℅???????????????0-㊣???,1-㊣“??????,2-㊣“???芍?? 
	BYTE byTrackingMode;//?迆℅???????0-℅???(????) , 1-????, 2-???㊣
	BYTE byZoomMode;//㊣?㊣?????, 0-???“(????), 1-℅???
	BYTE byZoomOver;//0-㊣???,1-㊣?㊣?????(㊣“???????????‾?迆??℅‾??????????????????)
	BYTE byTrackStatus;//?迆℅?℅??? 0-㊣?????1-?????????“A?????∼?? 2-?????迆℅??“2,????????3 -?迆℅????∫?“2,???∼??
}NET_VCA_LECTURE, *LPNET_VCA_LECTURE;

typedef struct tagNET_VCA_ANSWER
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;//?谷??????????﹞??∫[1-100]
	BYTE byAlarmState;//????℅???????????????0-㊣???,1-㊣“??????,2-㊣“???芍??
	BYTE byZoomOver;//0-㊣???,1-㊣?㊣?????(㊣“???????????‾?迆??℅‾??????????????????)
	BYTE byAnswerStudent;//0-㊣?????1-???∫?迆??????2-?????∫?迆??????3-?角???∫?迆????,4-?????∫?迆℅???
	BYTE byRes[4];             //㊣???
}NET_VCA_ANSWER, *LPNET_VCA_ANSWER;

//???????辰?芍????
typedef struct tagNET_VCA_RELATE_RULE_PARAM
{
	BYTE  byRuleID;  //???辰?辰?? 0-㊣赤????
	BYTE  byRes;  //㊣???
	WORD  wEventType;        //?????????角????????VCA_RULE_EVENT_TYPE_EX??
}NET_VCA_RELATE_RULE_PARAM, *LPNET_VCA_RELATE_RULE_PARAM;

typedef struct tagNET_VCA_COMBINED_RULE_
{
	//???辰??﹞????辰??0-???辰?辰???辰??﹞???1-???辰??﹞?
	BYTE    byRuleSequence;
	BYTE    byRes[7];
	DWORD  dwMinInterval;    //℅????㊣????????????????
	DWORD  dwMaxInterval;  //℅??車?㊣????????????????
	NET_VCA_RELATE_RULE_PARAM  struRule1Raram;//???辰1
	NET_VCA_RELATE_RULE_PARAM  struRule2Raram;//???辰2
	BYTE    byRes1[36];
} NET_VCA_COMBINED_RULE, *LPNET_VCA_COMBINED_RULE;

//∼??谷????
typedef struct  tagNET_VCA_BLACKBOARD_WRITE
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫?“???????辰??㊣“???????????????辰??
	BYTE    byTeacherState;//????℅?????0~??????????1~???????∼??2~???“????℅???
	BYTE    byWritingState;//∼??谷℅?????0~∼??谷??????1~∼??谷?芍??
	BYTE    byWritingArea;//∼??谷???辰??0~????∼??谷??1~∼??谷℅車㊣???2~∼??谷??㊣?
	BYTE    byRes[5];
}NET_VCA_BLACKBOARD_WRITE, *LPNET_VCA_BLACKBOARD_WRITE;

//???㊣????℅???
typedef struct tagNET_VCA_HIGH_DENSITY_STATUS
{
	NET_VCA_POLYGON struRegion;        //???辰﹞??∫
	float           fDensity;       //????㊣???, ﹞??∫: [0.1, 1.0]
	BYTE            bySensitivity;    //?谷??????????﹞??∫[1,5]
	BYTE            byRes[3];          // ㊣???℅???
}NET_VCA_HIGH_DENSITY_STATUS, *LPNET_VCA_HIGH_DENSITY_STATUS;

//㊣????足??
typedef struct _NET_VCA_RUNNING_
{
	NET_VCA_POLYGON  struRegion;  //???辰﹞??∫
	DWORD  dwSpeed;      //㊣?????????﹞??∫[1,10]
	BYTE byRes[4];
}NET_VCA_RUNNING, *LPNET_VCA_RUNNING;

// ?????足??
typedef struct tagNET_VCA_RETENTION
{
	NET_VCA_POLYGON struRegion; // ???辰﹞??∫
	WORD       wDuration;       //??﹞?????㊣“???????㊣???“60-3600????????1800??
	BYTE       byRes[6];        // ㊣???℅???
}NET_VCA_RETENTION, *LPNET_VCA_RETENTION;

// ????﹞???????
typedef struct tagNET_VCA_SITUATION_ANALYSIS
{
	NET_VCA_POLYGON struRegion; // ???辰﹞??∫
	WORD       wPeopleNum;       //???辰????
	BYTE       byRes[6];        // ㊣???℅???
}NET_VCA_SITUATION_ANALYSIS, *LPNET_VCA_SITUATION_ANALYSIS;

//????????????
typedef union tagNET_VCA_EVENT_UNION
{
	DWORD                      uLen[23];            //????
	NET_VCA_TRAVERSE_PLANE     struTraversePlane;   //?????????????? 
	NET_VCA_AREA               struArea;            //????/???????辰????
	NET_VCA_INTRUSION          struIntrusion;       //????????
	NET_VCA_LOITER             struLoiter;          //????????
	NET_VCA_TAKE_LEFT          struTakeTeft;        //???﹞????/???﹞????????
	NET_VCA_PARKING            struParking;            //????????
	NET_VCA_RUN                struRun;                //?足??????????
	NET_VCA_HIGH_DENSITY       struHighDensity;        //???㊣????????  
	NET_VCA_VIOLENT_MOTION     struViolentMotion;    //????????
	NET_VCA_REACH_HIGHT           struReachHight;      //????
	NET_VCA_GET_UP               struGetUp;           //????
	NET_VCA_LEFT               struLeft;            //???﹞????
	NET_VCA_TAKE               struTake;            // ???﹞????
	NET_VCA_HUMAN_ENTER        struHumanEnter;      //???㊣????
	NET_VCA_OVER_TIME          struOvertime;        //??℅‾???㊣
	NET_VCA_STICK_UP            struStickUp;            //?迄????
	NET_VCA_SCANNER            struScanner;            //???“?‾????     
	NET_VCA_LEAVE_POSITION     struLeavePos;        //????????
	NET_VCA_TRAIL              struTrail;           //????????
	NET_VCA_FALL_DOWN          struFallDown;        //????????
	NET_VCA_AUDIO_ABNORMAL     struAudioAbnormal;   //?迄????㊣?
	NET_VCA_ADV_REACH_HEIGHT   struReachHeight;     //????????????
	NET_VCA_TOILET_TARRY       struToiletTarry;     //???????㊣????
	NET_VCA_YARD_TARRY         struYardTarry;       //﹞?﹞???????????
	NET_VCA_ADV_TRAVERSE_PLANE struAdvTraversePlane;//??????????????
	NET_VCA_LECTURE            struLecture;            //????????
	NET_VCA_ANSWER             struAnswer;            //????????????
	NET_VCA_STANDUP               struStandUp;         //????????
	NET_VCA_PEOPLENUM_CHANGE   struPeopleNumChange; //????㊣???????
	NET_VCA_SPACING_CHANGE     struSpacingChange;   //???角㊣???????
	NET_VCA_COMBINED_RULE      struCombinedRule;    //℅谷?????辰????
	NET_VCA_SIT_QUIETLY        struSitQuietly;      //??℅?????
	NET_VCA_HIGH_DENSITY_STATUS       struHighDensityStatus;        //???㊣????℅??? 
	NET_VCA_RUNNING     struRunning; //㊣???????
	NET_VCA_RETENTION   struRetention;//?????足??
	NET_VCA_BLACKBOARD_WRITE   struBlackboardWrite; //∼??谷????
	NET_VCA_SITUATION_ANALYSIS   struSituationAnalysis; //????﹞???????
}NET_VCA_EVENT_UNION, *LPNET_VCA_EVENT_UNION;

// ?????????‾?角??
typedef enum _VCA_SIZE_FILTER_MODE_
{
	IMAGE_PIX_MODE, //?迄???????車???豕??
	REAL_WORLD_MODE, //?迄???????車???豕??
	DEFAULT_MODE     // ????????
}SIZE_FILTER_MODE;
//?????????‾
typedef struct tagNET_VCA_SIZE_FILTER
{
	BYTE    byActive;            //??﹞??∟???????????‾ 0-﹞? ﹞?0-??
	BYTE    byMode;         //?????‾????SIZE_FILTER_MODE
	BYTE    byRes[2];        //㊣???????0
	NET_VCA_RECT struMiniRect;    //℅?????㊣那?辰,??0㊣赤?????豕??
	NET_VCA_RECT struMaxRect;      //℅??車??㊣那?辰,??0㊣赤?????豕??
}NET_VCA_SIZE_FILTER, *LPNET_VCA_SIZE_FILTER;

//???????辰?芍??
typedef struct tagNET_VCA_ONE_RULE
{
	BYTE   byActive;                    //??﹞??∟?????辰,0-﹞?,﹞?0-??
	BYTE   byRes[7];                     //㊣??????豕????0℅???
	BYTE   byRuleName[NAME_LEN];        //???辰????
	VCA_EVENT_TYPE dwEventType;            //????﹞????????角??
	NET_VCA_EVENT_UNION uEventParam;    //????﹞???????????
	NET_VCA_SIZE_FILTER  struSizeFilter;  //?????????‾
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_2];//??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;      //???赤﹞??? 
	BYTE byRelRecordChan[MAX_CHANNUM_V30];            //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
}NET_VCA_ONE_RULE, *LPNET_VCA_ONE_RULE;

//????﹞????????芍????
typedef struct tagNET_VCA_RULECFG
{
	DWORD  dwSize;            //?芍???∟??
	BYTE   byPicProType;    //㊣“???㊣???????赤﹞??? 0-?????赤 ﹞?0-????
	BYTE   byUpLastAlarm; //2011-04-06 ??﹞???????℅??邦??????㊣“??
	BYTE   byPicRecordEnable;  /*2012-3-1??﹞?????????????, 0-??????, 1-????*/
	BYTE   byRes;
	NET_DVR_JPEGPARA  struPictureParam;         //?????????芍??
	NET_VCA_ONE_RULE  struRule[MAX_RULE_NUM];  //???辰??℅谷
}NET_VCA_RULECFG, *LPNET_VCA_RULECFG;

//?∼???豕㊣????﹞??????????﹞?????㊣赤???????∼???豕㊣??????﹞???????????豕㊣?㊣赤??㊣??迆?????﹞
/*
?㊣?????豕㊣??????“??(IPC/DVR/DVS/IVMS)㊣“?????㊣?辰??????℅????????豕㊣???IP???﹞????????byChannel??byIvmsChannel ?迄???㊣?∼???????“????
eg:
struDevIP =  ?????“???????豕㊣???IP???﹞
wPort  =  ?????“???????豕㊣???????
byChannel =  ㊣“???????????“?????“????
byIvmsChannel = ㊣“???????????“?????“????

?㊣?????豕㊣???℅??“??(DVR/DVS/IVMS)㊣“?????㊣?辰??????℅?????????℅??“???????豕㊣???IP???﹞????????byChannel????℅??“???????豕㊣????“??????byIvmsChannel????℅??“????
eg:
struDevIP =  ??℅??“???????豕㊣???IP???﹞
wPort  =  ??℅??“???????豕㊣???????
byChannel =  ??℅??“???????豕㊣????“????
byIvmsChannel = ??℅??“????
*/
typedef struct tagNET_VCA_DEV_INFO
{
	NET_DVR_IPADDR  struDevIP; //?∼???豕㊣????﹞?? 
	WORD wPort;             //?∼???豕㊣????????? 
	BYTE byChannel;          //?∼???豕㊣??“???? 
	BYTE byIvmsChannel;        // Ivms ?“?? 
}NET_VCA_DEV_INFO, *LPNET_VCA_DEV_INFO;

typedef struct tagNET_DVR_TARGET_LEFT_REGION_ALARM
{
	DWORD     dwSize; //?芍???車??
	DWORD     dwRelativeTime; //?角???㊣㊣那
	DWORD        dwAbsTime; //?????㊣㊣那
	NET_VCA_DEV_INFO  struDevInfo;   //?∼???豕㊣?????
	BYTE     byTargetType;//?足????㊣那?角?? 0-???∫??㊣那??1-???? 2-?∫?迆   
	BYTE     byLeftDirection;//?足????㊣那????﹞??辰?角??0-㊣???,1-??,2-??,3-℅車,4-??
	BYTE     byTargetStatus;//0-㊣???(??℅????赤) 
	BYTE     byRes[125];
}NET_DVR_TARGET_LEFT_REGION_ALARM, *LPNET_DVR_TARGET_LEFT_REGION_ALARM;

/* ㊣“?????????????? */
typedef struct
{
	/*20-???迆?邦??   ???迆㊣“?????谷??????, 21-???迆?辰???∼, 22-???迆????????, 23-???迆?????????∼﹞??“??????,24-???迆?足???????﹞??, 25-???迆??∼?????,
	26-???迆???∼???﹞, 27-???迆?辰???﹞, 28-???迆?????‾?辰????, 29-???迆???足, 31-???迆?????∟℅‾﹞?*/
	DWORD dwPicType;                /* ㊣“???????角?? */
	char *pPicBuf;                  /*????????*/
	DWORD dwPicLen;                 /* ㊣“???????∟??????0?㊣㊣赤?????????? */
	DWORD dwTime;                   /* ℅????㊣?? */
	char *pVideoBuf;                /*????????, xxx.mp4*/
	DWORD dwVideoLen;               /* ℅??????????∟????0㊣赤??????㊣“?????? 20180518 */
	BYTE byRes[12];                /* ?∟?? */
}NET_DVR_DBD_PICTURE_INFO, *LPNET_DVR_DBD_PICTURE_INFO;

/* ㊣“?????????? */
typedef struct
{/* 24 bytes */
	DWORD bValid;                   /* ?“????????﹞????∫ */
	DWORD dwLongitude;              /* ???? = ??????*3600*100+????﹞?*60*100+??????*100 */
	DWORD dwLatitude;               /* ???? = ??????*3600*100+????﹞?*60*100+??????*100 */
	DWORD dwVehicleSpeed;           /* ???? = ????????*1000*100 */
	DWORD dwVehicleDirection;       /* ????﹞??辰?? = ????﹞??辰*100 */
	DWORD dwAltitude;                  /* ??∼?????(???℅) */
}NET_DVR_DBD_POSITION_INFO, *LPNET_DVR_DBD_POSITION_INFO;

/* ㊣“??℅??????? */
typedef struct
{/* 24 bytes */
	BYTE bySmoke;              /* ?邦?? */
	BYTE byPhone;              /* ?辰???∼ */
	BYTE byTiredDriving;       /* ???????? */
	BYTE byNoVisualFront;      /* ?????????∼﹞? */
	BYTE byNoHead;             /* ???? */
	BYTE byWithoutBelt;        /* ????∼????? */
	BYTE byPickingUpThing;     /* ???∼???﹞ */
	BYTE byYawn;               /* ?辰???﹞ */
	BYTE byEatOrDrink;         /* ???? */
	BYTE byChatting;           /* ???足 */
	BYTE byTampering;          /* ????IPC */
	BYTE byWithoutUniform;     /* ?????∟℅‾﹞? */
	BYTE byRes[12];
}NET_DVR_DBD_ALARM_STATE, *LPNET_DVR_DBD_ALARM_STATE;

/* ????????㊣“?????? */
typedef struct
{
	DWORD dwSize;               /* ㊣“???????芍?????車?? 4*/
	BYTE byChannel;            /* ?“???? 1*/
	BYTE byLevel;              /*㊣“??????,?㊣?∼????1*/
	BYTE byRes1[2];            /* ㊣???℅??? 3*/
	NET_VCA_DEV_INFO struIpcInfo;       		/* ㊣“??IP?“?????? 24*/
	NET_DVR_DBD_POSITION_INFO struPosInfo;  /* ㊣“?????????? 24*/
	NET_DVR_DBD_PICTURE_INFO struPicInfo;   /* ㊣“??????????*/
	NET_DVR_DBD_ALARM_STATE struAlarmState; /* ㊣“??℅??????? 24*/
	BYTE byRes2[20];           /* ㊣???   20*/
}NET_DVR_DBD_ALRAM_INFO, *LPNET_DVR_DBD_ALRAM_INFO;

/* ADAS㊣“?????????? */
typedef struct
{
	DWORD dwPicType;                /* ㊣“???????角?? */
	char *pPicBuf;                  /*????????*/
	DWORD dwPicLen;                 /* ㊣“???????∟??????0?㊣㊣赤?????????? */
	DWORD dwTime;                   /* ℅????㊣?? */
	char *pVideoBuf;                /*????????, xxx.mp4*/
	DWORD dwVideoLen;               /* ℅??????????∟????0㊣赤??????㊣“?????? 20180518 */
	BYTE byRes[12];                /* ?∟?? */
} NET_DVR_ADAS_PICTURE_INFO, *LPNET_DVR_ADAS_PICTURE_INFO;

/* ADAS㊣“?????????? */
typedef struct
{/* 24 bytes */
	DWORD dwValid;                   /* ?“????????﹞????∫ */
	DWORD dwLongitude;              /* ???? = ??????*3600*100+????﹞?*60*100+??????*100 */
	DWORD dwLatitude;               /* ???? = ??????*3600*100+????﹞?*60*100+??????*100 */
	DWORD dwVehicleSpeed;           /* ???? = ????????*1000*100 */
	DWORD dwVehicleDirection;       /* ????﹞??辰?? = ????﹞??辰*100 */
	DWORD dwAltitude;                  /* ??∼?????(???℅) */
}NET_DVR_ADAS_POSITION_INFO, *LPNET_DVR_ADAS_POSITION_INFO;

/* ADAS㊣“??℅??????? */
typedef struct
{/* 24 bytes */
	BYTE dwFcw;              /* ?∼????℅???0????1????﹞??迆 */
	BYTE dwLdw;              /* ??????????0????1℅車?角??????2???角???? */
	BYTE dwHmw;       		 /* ???角?角????0????1????﹞??迆 */
	BYTE dwPcw;      		 /* ??????℅???0????1????﹞??迆 */
	BYTE dwBsd;      		 /* ?∟???足????0????1????﹞??迆 */
	BYTE byRes[19];
}NET_DVR_ADAS_ALARM_STATE, *LPNET_DVR_ADAS_ALARM_STATE;

/* ADAS????????㊣“?????? */
typedef struct
{
	DWORD dwSize;               /* ㊣“???????芍?????車?? 4*/
	BYTE byChannel;            /* ?“???? 1*/
	BYTE byRes1[3];            /* ㊣???℅??? 3*/
	NET_VCA_DEV_INFO struIpcInfo;       		/* ㊣“??IP?“?????? 28*/
	NET_DVR_ADAS_POSITION_INFO struPosInfo;  /* ㊣“?????????? 24*/
	NET_DVR_ADAS_PICTURE_INFO struPicInfo;   /* ㊣“??????????*/
	NET_DVR_ADAS_ALARM_STATE struAlarmState; /* ㊣“??℅??????? 24*/
	BYTE byRes2[20];           /* ㊣???   20*/
}NET_DVR_ADAS_ALRAM_INFO, *LPNET_DVR_ADAS_ALRAM_INFO;

/* ???????㊣???? */
typedef struct
{
	DWORD dwSize;               /* ㊣“???????芍?????車?? */
	DWORD dwSpeedValue;         /* ?????? */
	DWORD dwSpeedPulse;         /* ???????? */
	BYTE byUpgPercent;         /* ??????????????0-100???????∫∼?﹞???255???????????????㊣???℅???豕????????0????㊣赤??℅?㊣??????? 20180508????*/
	BYTE byRes1[3];
	DWORD dwVideoLostChans;    /*∼???㊣赤????0㊣赤????????1-㊣赤?????????∫????????㊣赤???????“??*/
	BYTE byRes2[44];
}NET_DVR_VEH_REALTIME_DATA_INFO, *LPNET_DVR_VEH_REALTIME_DATA_INFO;

//????????????
typedef struct tagNET_VCA_FILTER_STRATEGY
{
	BYTE    byStrategy;      //???????????? 0 - ?????? 1-???????赤??????,2-????????
	BYTE    byRes[11];       //㊣???
}NET_VCA_FILTER_STRATEGY, *LPNET_VCA_FILTER_STRATEGY;

//???辰??﹞?????
typedef struct tagNET_VCA_RULE_TRIGGER_PARAM
{
	BYTE   byTriggerMode;   //???辰????﹞?﹞?????0- ????????1- ?足???? 2- ??㊣那???? 
	BYTE   byTriggerPoint;  //??﹞???????﹞?﹞??????足?????㊣???∫ 0- ??,1-??,2-??
	BYTE   byRes1[2];       //㊣???
	float  fTriggerArea;    //??﹞???㊣那????∼?﹞?㊣? [0,100]????﹞?﹞???????㊣那?????㊣???∫
	BYTE   byRes2[4];       //㊣???
}NET_VCA_RULE_TRIGGER_PARAM, *LPNET_VCA_RULE_TRIGGER_PARAM;

//???????辰?芍??
typedef struct tagNET_VCA_ONE_RULE_V41
{
	BYTE   byActive; //??﹞??∟?????辰,0-﹞?,﹞?0-??
	BYTE   byRes1[4];  //㊣??????豕????0℅???
	BYTE   byEventTypeFlag;  //㊣那???????????角??℅????????∫????0-dwEventType???∫??1-wEventTypeEx???∫
							 //℅?????℅???byEventTypeFlag?????豕???????㊣???∫?????豕㊣??????????㊣?????㊣????wEventTypeEx?????????角???????豕??????℅???????
	WORD   wEventTypeEx; //?????????角?????????????迆??℅???dwEventType??????VCA_RULE_EVENT_TYPE_EX
	BYTE   byRuleName[NAME_LEN]; //???辰????
	VCA_EVENT_TYPE dwEventType;    //?????????角????㊣????????????????車???“?谷????wEventTypeEx?????????角??
	NET_VCA_EVENT_UNION uEventParam; //????﹞???????????
	NET_VCA_SIZE_FILTER  struSizeFilter;  //?????????‾
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;    //???赤﹞??? 
	BYTE   byRelRecordChan[MAX_CHANNUM_V30]; //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	WORD   wAlarmDelay; //????㊣“?????㊣??0-5s,1-10,2-30s,3-60s,4-120s,5-300s,6-600s
	BYTE   byRes2[2]; //㊣???
	NET_VCA_FILTER_STRATEGY     struFilterStrategy; //????????????
	NET_VCA_RULE_TRIGGER_PARAM  struTriggerParam;   //???辰??﹞?????
	BYTE   byRes[32];
}NET_VCA_ONE_RULE_V41, *LPNET_VCA_ONE_RULE_V41;

//????﹞????????芍????
typedef struct tagNET_VCA_RULECFG_V41
{
	DWORD  dwSize;            //?芍???∟??
	BYTE    byPicProType;    //㊣“???㊣???????赤﹞??? 0-?????赤 ﹞?0-????
	BYTE    byUpLastAlarm; //2011-04-06 ??﹞???????℅??邦??????㊣“??
	BYTE    byPicRecordEnable;  /*2012-3-1??﹞?????????????, 0-??????, 1-????*/
	BYTE    byRes1;
	NET_DVR_JPEGPARA struPictureParam;         //?????????芍??
	NET_VCA_ONE_RULE_V41  struRule[MAX_RULE_NUM];  //???辰??℅谷
	WORD   wRelSnapChan[MAX_REL_SNAPCHAN_NUM]; //????℅????“?????㊣?‾?“??㊣“???㊣?????㊣?芍?????????“????℅?????????0㊣赤???????????????????????“????
	BYTE   byRes[26];
}NET_VCA_RULECFG_V41, *LPNET_VCA_RULECFG_V41;

//???????辰?芍??
typedef struct NET_VCA_ONE_RULE_V42_
{
	BYTE           byActive;       //??﹞??∟?????辰, 0-﹞???﹞?0-??
	BYTE        byEventPriority;//?????????? 0-????1-????2-??
	BYTE        byBackgroundSuppression;//㊣??∼???????? 0-??㊣? 1-???? 2-℅?????
	BYTE           byRes1[3];           //㊣??????豕????0℅???
	WORD          wEventType;        //?????????角????????VCA_RULE_EVENT_TYPE_EX
	BYTE        byRuleName[NAME_LEN/*32*/];        //???辰????
	NET_VCA_EVENT_UNION  uEventParam;            //????﹞???????????
	NET_VCA_SIZE_FILTER  struSizeFilter;          //?????????‾
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V40  struAlarmHandleType; /*???赤﹞???*/
													  //?足?????赤﹞?????㊣“??????????℅谷??∼車?“????℅谷????0?㊣??㊣赤????????㊣“????????﹞??∫??1-64???㊣℅谷????1?㊣??㊣赤????????㊣“????????﹞??∫??65-128?? ????℅谷????????????????????0xffffffff㊣赤??㊣?℅谷 ?㊣?∼???∼℅谷???車????㊣“?????????∫
	DWORD       dwRelRecordChan[MAX_CHANNUM_V30];    /* ㊣“????﹞??????車?“???“??℅??????“?????????????? 0xffffffff??*/
													 //???????????“??????℅谷??∼車?“????℅谷????0?㊣??㊣赤?????????“????﹞??∫??1-64???㊣℅谷????1?㊣??㊣赤?????????“????﹞??∫??65-128?? ????℅谷????????????????????0xffffffff㊣赤??㊣?℅谷 ?㊣?∼???∼℅谷???車?????????“???????∫
	WORD          wAlarmDelay; //????㊣“?????㊣??0-5s,1-10,2-30s,3-60s,4-120s,5-300s,6-600s
	BYTE           byRes2[2];           //㊣???
	NET_VCA_FILTER_STRATEGY     struFilterStrategy;  //????????????
	NET_VCA_RULE_TRIGGER_PARAM     struTriggerParam; //???辰??﹞?????
	BYTE byRes[32];
}NET_VCA_ONE_RULE_V42, *LPNET_VCA_ONE_RULE_V42;


typedef struct    tagNET_DVR_PTZ_POSITION
{
	// ??﹞????????∼?????豕?????∼???????辰???㊣?辰??℅??????∫?????豕???辰?迆㊣??????????∼?????????㊣℅‾????????
	BYTE byEnable;
	BYTE byRes1[3];  //㊣???
	BYTE byPtzPositionName[NAME_LEN]; //???∼????????
	NET_DVR_PTZPOS struPtzPos; //ptz ℅?㊣那
	BYTE byRes2[40];
}NET_DVR_PTZ_POSITION, *LPNET_DVR_PTZ_POSITION;

//????﹞????????芍????
typedef struct tagNET_VCA_RULECFG_V42
{
	DWORD            dwSize;             //?芍?????車??
	BYTE                byPicProType;            //㊣“???㊣???????赤﹞??? 0-?????赤 1-????
	BYTE            byUpLastAlarm;         //??﹞???????℅??邦??????㊣“????0-﹞???1-??
	BYTE             byPicRecordEnable;   //??﹞?????????????, 0-??????, 1-????
	BYTE            byRes1;
	NET_DVR_JPEGPARA     struPicParam;         //?????????芍??
	NET_VCA_ONE_RULE_V42  struRule[MAX_RULE_NUM_V42 /*16*/];       /* ???辰??℅谷*/
	WORD            wRelSnapChan[MAX_REL_SNAPCHAN_NUM]; //????℅????“?????㊣?‾?“??㊣“???㊣?????㊣?芍?????????“????℅?????????0㊣赤???????????????????????“????
	BYTE            byTrackEnable; //??﹞??????迆℅?
	BYTE            byRes2;
	NET_DVR_PTZ_POSITION  struPTZPosition;  //???∼????????
	WORD            wTrackDuration; //?迆℅??????㊣????????s
	WORD            wIntervalTime; //????㊣“???????㊣???“????[1-7200]?“??????600??
	WORD            wHeightLimit;//??㊣那?足???????????“???℅??[0-250]?“??????80cm??????????????????㊣那????℅‾????㊣那?????足??
	BYTE            byRes[58];//㊣???
}NET_VCA_RULECFG_V42, *LPNET_VCA_RULECFG_V42;


//?辰????㊣那?芍????
typedef struct tagNET_VCA_TARGET_INFO
{
	DWORD    dwID;                //??㊣那ID ,???㊣????????㊣“???㊣??0
	NET_VCA_RECT struRect;      //??㊣那㊣????辰 
	BYTE      byRes[4];            //㊣???
}NET_VCA_TARGET_INFO, *LPNET_VCA_TARGET_INFO;

//?辰???????辰????, ∼邦?????辰???迄㊣?????
typedef struct tagNET_VCA_RULE_INFO
{
	BYTE   byRuleID;                //???辰ID,0-7
	BYTE   bySceneID;                //???∼ID,﹞???0???∫
	WORD   wEventTypeEx;            //?????????角?????????????迆??℅???dwEventType??????VCA_RULE_EVENT_TYPE_EX
	BYTE   byRuleName[NAME_LEN];    //???辰????
	VCA_EVENT_TYPE  dwEventType;    //?????????角????㊣????????????????車???“?谷??wEventTypeEx?????????角??
	NET_VCA_EVENT_UNION uEventParam;//????????
}NET_VCA_RULE_INFO, *LPNET_VCA_RULE_INFO;

//????﹞????芍????㊣“?芍??
typedef struct  tagNET_VCA_RULE_ALARM
{
	DWORD    dwSize;                        //?芍???∟??
	DWORD    dwRelativeTime;                //?角???㊣㊣那,?迆?﹞???辰????????????㊣?∼?㊣????????㊣byRelativeTimeFlag??1?㊣??㊣赤????UTC???㊣??
	DWORD    dwAbsTime;                        //?????㊣㊣那,?迆?﹞???辰????????????OSD?㊣??
	NET_VCA_RULE_INFO     struRuleInfo;        //???????辰????
	NET_VCA_TARGET_INFO  struTargetInfo;    //㊣“????㊣那????
	NET_VCA_DEV_INFO       struDevInfo;        //?∼???豕㊣?????
	DWORD dwPicDataLen;                        //﹞??????????∟?? ??0㊣赤?????????????車??0㊣赤?????芍???車?????迆????????*/
	BYTE       byPicType;        //  0-??﹞?℅??????? 1-??㊣?????
	BYTE       byRelAlarmPicNum; //?????“??㊣“??????????
	BYTE       bySmart;//IDS?豕㊣?﹞???0(??????)??Smart Functiom Return 1
	BYTE       byPicTransType;        //????????????﹞???: 0-????????1-url
	DWORD      dwAlarmID;     //㊣“??ID??????㊣那???“?????????迆?迆??℅谷??㊣“????0㊣赤?????∫
	WORD       wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE       byRelativeTimeFlag;      //dwRelativeTime℅?????﹞????∫  0-???∫?? 1-???∫??dwRelativeTime㊣赤??UTC?㊣?? 
	BYTE       byAppendInfoUploadEnabled; //???????????????? 0-?????? 1-????
	BYTE       *pAppendInfo;     //???辰????????NET_VCA_APPEND_INFO????????byAppendInfoUploadEnabled??1?㊣?辰??byTimeDiffFlag??1?㊣???∫
	BYTE       *pImage;       //???辰??????????
}NET_VCA_RULE_ALARM, *LPNET_VCA_RULE_ALARM;

//????﹞???????????
typedef struct tagNET_VCA_APPEND_INFO
{
	DWORD   dwSize;  //?芍???∟??
	DWORD   dwAppendPicLen;//?????????∟??
	BYTE*   pAppendPicBuff;//????????????
	BYTE    byAppendPicType;//?????????角????0-㊣???;1-??????????;2-??????????;
	BYTE    byUID[64];//?豕㊣?㊣“??UID
	BYTE    byRes[63]; //㊣???
}NET_VCA_APPEND_INFO, *LPNET_VCA_APPEND_INFO;


//????﹞??????辰DSP?????????芍??
typedef struct tagNET_VCA_DRAW_MODE
{
	DWORD  dwSize;
	BYTE    byDspAddTarget;            //㊣角????﹞???????㊣那
	BYTE    byDspAddRule;            //㊣角????﹞????????辰
	BYTE    byDspPicAddTarget;        //℅?????﹞???????㊣那
	BYTE    byDspPicAddRule;        //℅?????﹞????????辰
	BYTE    byRes[4];
}NET_VCA_DRAW_MODE, *LPNET_VCA_DRAW_MODE;

//?????角??
typedef enum tagOBJECT_TYPE_ENUM
{
	ENUM_OBJECT_TYPE_COAT = 1  //????
}OBJECT_TYPE_ENUM;

//?????????????芍????
typedef struct tagNET_DVR_OBJECT_COLOR_COND
{
	DWORD  dwChannel;   //?“????
	DWORD  dwObjType;   //?????角????????OBJECT_TYPE_ENUM
	BYTE   byRes[64];   //㊣???
}NET_DVR_OBJECT_COLOR_COND, *LPNET_DVR_OBJECT_COLOR_COND;

//????????
typedef struct tagNET_DVR_PIC
{
	BYTE   byPicType;        //?????角????1-jpg
	BYTE   byRes1[3];        //㊣???
	DWORD  dwPicWidth;       //?????赤??
	DWORD  dwPicHeight;      //????????
	DWORD  dwPicDataLen;     //?????????????車??
	DWORD  dwPicDataBuffLen; //???????????????車??
	BYTE*  byPicDataBuff;    //??????????????
	BYTE   byRes2[40];       //㊣???
}NET_DVR_PIC, *LPNET_DVR_PIC;

//??????????
typedef union tagNET_DVR_OBJECT_COLOR_UNION
{
	NET_DVR_COLOR  struColor;   //??????
	NET_DVR_PIC    struPicture; //????
	BYTE           byRes[64];   //㊣???
}NET_DVR_OBJECT_COLOR_UNION, *LPNET_DVR_OBJECT_COLOR_UNION;

//?????????????芍????
typedef struct tagNET_DVR_OBJECT_COLOR
{
	DWORD  dwSize;       //?芍?????車??
	BYTE   byEnable;     //0-????????1-????
	BYTE   byColorMode;  //????﹞?????1-????????2-????
	BYTE   byRes1[2];    //㊣???
	NET_DVR_OBJECT_COLOR_UNION uObjColor; //??????????????????????????????﹞???
	BYTE   byRes2[64];   //㊣???
}NET_DVR_OBJECT_COLOR, *LPNET_DVR_OBJECT_COLOR;

//???辰?角??
typedef enum tagAREA_TYPE_ENUM
{
	ENUM_OVERLAP_REGION = 1,//???????辰
	ENUM_BED_LOCATION = 2   //????????
}AREA_TYPE_ENUM;

//?“?迆???辰
typedef struct tagNET_DVR_AUXAREA
{
	DWORD  dwAreaType;   //???辰?角????????AREA_TYPE_ENUM
	BYTE   byEnable;     //0-????????1-????
	BYTE   byRes1[3];     //㊣???
	NET_VCA_POLYGON struPolygon; //???辰
	BYTE   byRes2[16];   //㊣???
}NET_DVR_AUXAREA, *LPNET_DVR_AUXAREA;

//?“?迆???辰??㊣赤
typedef struct tagNET_DVR_AUXAREA_LIST
{
	DWORD     dwSize;    // ?芍?????車??
	NET_DVR_AUXAREA struArea[MAX_AUXAREA_NUM]; //?“?迆???辰
	BYTE    byRes2[64];    // ㊣???
}NET_DVR_AUXAREA_LIST, *LPNET_DVR_AUXAREA_LIST;

//?“???∟℅‾????
typedef enum tagCHAN_WORKMODE_ENUM
{
	ENUM_CHAN_WORKMODE_INDEPENDENT = 1,  //????????
	ENUM_CHAN_WORKMODE_MASTER = 2,      //?‾????
	ENUM_CHAN_WORKMODE_SLAVE = 3        //??????
}CHAN_WORKMODE_ENUM;

//?“???∟℅‾?????????芍????
typedef struct tagNET_DVR_CHANNEL_WORKMODE
{
	DWORD dwSize;        //?芍?????車??
	BYTE  byWorkMode;    //?∟℅‾??????????CHAN_WORKMODE_ENUM
	BYTE  byRes[63];     //㊣???
}NET_DVR_CHANNEL_WORKMODE, *LPNET_DVR_CHANNEL_WORKMODE;

//?豕㊣??“???????芍????
typedef struct tagNET_DVR_CHANNEL
{
	BYTE   byAddress[MAX_DOMAIN_NAME];    //?豕㊣?IP?辰?辰??
	WORD   wDVRPort;                     //??????
	BYTE   byRes1[2];                   //㊣???
	BYTE   sUserName[NAME_LEN];            //?‾?迆???∫??
	BYTE   sPassword[PASSWD_LEN];       //?‾?迆????
	DWORD  dwChannel;                   //?“????
	BYTE   byRes2[32];                  //㊣???
}NET_DVR_CHANNEL, *LPNET_DVR_CHANNEL;

//???“????????????
typedef union tagNET_DVR_SLAVE_CHANNEL_UNION
{
	BYTE            byRes[152];        //???????車??
	DWORD           dwLocalChannel;    //㊣??迆?“??
	NET_DVR_CHANNEL struRemoteChannel; //?????“??
}NET_DVR_SLAVE_CHANNEL_UNION, *LPNET_DVR_SLAVE_CHANNEL_UNION;

//???“???????芍????
typedef struct tagNET_DVR_SLAVE_CHANNEL_PARAM
{
	BYTE   byChanType;   //???“???角????1-㊣??迆?“????2-?????“?? 
	BYTE   byRes1[3];    //㊣???
	NET_DVR_SLAVE_CHANNEL_UNION uSlaveChannel; //???“????????????????????byChanType
	BYTE   byRes2[64];   //㊣???
}NET_DVR_SLAVE_CHANNEL_PARAM, *LPNET_DVR_SLAVE_CHANNEL_PARAM;


//???“???????????芍????
typedef struct tagNET_DVR_SLAVE_CHANNEL_CFG
{
	DWORD dwSize;   //?芍?????車??
	NET_DVR_SLAVE_CHANNEL_PARAM struChanParam[MAX_SLAVE_CHANNEL_NUM];//???“??????
	BYTE  byRes[64];  //㊣???
}NET_DVR_SLAVE_CHANNEL_CFG, *LPNET_DVR_SLAVE_CHANNEL_CFG;

//?????????????足??????
typedef enum tagVQD_EVENT_ENUM
{
	ENUM_VQD_EVENT_BLUR = 1,  //????????
	ENUM_VQD_EVENT_LUMA = 2,  //?????足??
	ENUM_VQD_EVENT_CHROMA = 3,  //????????
	ENUM_VQD_EVENT_SNOW = 4,  //???“????
	ENUM_VQD_EVENT_STREAK = 5,  //????????
	ENUM_VQD_EVENT_FREEZE = 6,  //???????芍
	ENUM_VQD_EVENT_SIGNAL_LOSS = 7,  //???????∫
	ENUM_VQD_EVENT_PTZ = 8,  //???“?∫??
	ENUM_VQD_EVENT_SCNENE_CHANGE = 9,  //???∼??㊣?
	ENUM_VQD_EVENT_VIDEO_ABNORMAL = 10, //?????足??
	ENUM_VQD_EVENT_VIDEO_BLOCK = 11, //????????
	ENUM_VQD_EVENT_CLARTY = 12, //???迆???足??
	ENUM_VQD_EVENT_JITTER = 13, //????????
	ENUM_VQD_EVENT_FLOWERS = 14, //????
	ENUM_VQD_EVENT_NOISE = 15, //????
	ENUM_VQD_EVENT_GHOST = 16, //?足????∼?
	ENUM_VQD_EVENT_PURPLE = 17, //℅?㊣?
	ENUM_VQD_EVENT_ICR = 18, // ICR?足???足??
	ENUM_VQD_EVENT_PROTECTFILM = 19 //㊣??∟?∟????
}VQD_EVENT_ENUM;

//?????????????????????芍????
typedef struct tagNET_DVR_VQD_EVENT_COND
{
	DWORD dwChannel;   //?“????
	DWORD dwEventType; //?足???????角????????VQD_EVENT_ENUM
	BYTE  byRes[64];   //㊣???
}NET_DVR_VQD_EVENT_COND, *LPNET_DVR_VQD_EVENT_COND;

//????????????????????
typedef struct tagNET_DVR_VQD_EVENT_PARAM
{
	BYTE   byThreshold;    //㊣“????????﹞??∫[0,100]
	BYTE   byTriggerMode;  //1-??????﹞???2-??????﹞?
	BYTE   byUploadPic;    //0-????????????1-????????????????﹞??????????????車?????????豕㊣????????????迄????℅?????????㊣“????????????????NET_DVR_StartDownload
	BYTE   byRes1;         //㊣???
	DWORD  dwTimeInterval; //??????﹞?㊣“???㊣????????﹞??∫[0,3600] ????????
	BYTE   byRes2[64];     //㊣???
}NET_DVR_VQD_EVENT_PARAM, *LPNET_DVR_VQD_EVENT_PARAM;

//???????????????????辰
typedef struct tagNET_DVR_VQD_EVENT_RULE
{
	DWORD  dwSize;       //?芍?????車?? 
	BYTE   byEnable;     //0-????????1-????
	BYTE   byRes1[3];    //㊣???
	NET_DVR_VQD_EVENT_PARAM struEventParam; //????????????????????
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//?足???㊣??
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;  //???赤﹞???
	BYTE   byRelRecordChan[MAX_IVMS_IP_CHANNEL]; //㊣“????﹞??????車?“????1㊣赤????﹞????“????0㊣赤??????﹞? 
	BYTE   byRes2[128];    //㊣???
}NET_DVR_VQD_EVENT_RULE, *LPNET_DVR_VQD_EVENT_RULE;

//?迄℅????∼????
typedef struct tagNET_DVR_BASELINE_SCENE
{
	DWORD dwSize;     //?芍?????車??
	BYTE  byEnable;   //0-????????1-????
	BYTE  byRes[63];  //㊣???
}NET_DVR_BASELINE_SCENE, *LPNET_DVR_BASELINE_SCENE;

//?迄℅????∼??℅‾?????芍????
typedef struct tagNET_DVR_CONTROL_BASELINE_SCENE_PARAM
{
	DWORD dwSize;     //?芍?????車??
	DWORD dwChannel;  //?“????
	BYTE  byCommand;  //??℅‾?角????1-??℅???㊣???????????????2-?邦???迄℅????∼
	BYTE  byRes[127];  //㊣???
}NET_DVR_CONTROL_BASELINE_SCENE_PARAM, *LPNET_DVR_CONTROL_BASELINE_SCENE_PARAM;

//????????????㊣“???芍????
typedef struct tagNET_DVR_VQD_ALARM
{
	DWORD  dwSize;                //?芍?????車??
	DWORD  dwRelativeTime;        //?角???㊣㊣那
	DWORD  dwAbsTime;              //?????㊣㊣那
	NET_VCA_DEV_INFO struDevInfo; //?∼???豕㊣????? 
	DWORD  dwEventType;           //?????角????????VQD_EVENT_ENUM
	float  fThreshold;            //㊣“??????[0.000,1.000]
	DWORD  dwPicDataLen;          //?????∟??????0㊣赤??????????
	BYTE   *pImage;               //???辰??????????           
	BYTE   byRes[128];            //㊣???
}NET_DVR_VQD_ALARM, *LPNET_DVR_VQD_ALARM;

//㊣那?“??℅??芍??
typedef struct tagNET_DVR_CB_POINT
{
	NET_VCA_POINT struPoint;     //㊣那?“?????‾?????迆?“???迆??
	NET_DVR_PTZPOS struPtzPos;  //?辰?迆??????PTZ℅?㊣那
	BYTE    byRes[8];
}NET_DVR_CB_POINT, LPNET_DVR_CB_POINT;

//㊣那?“?????????芍??
typedef struct tagNET_DVR_TRACK_CALIBRATION_PARAM
{
	BYTE byPointNum;            //???∫㊣那?“??????
	BYTE byRes[3];
	NET_DVR_CB_POINT  struCBPoint[MAX_CALIB_PT]; //㊣那?“??℅谷
}NET_DVR_TRACK_CALIBRATION_PARAM, *LPNET_DVR_TRACK_CALIBRATION_PARAM;

//?辰?迆?????芍??
typedef struct tagNET_DVR_TRACK_CFG
{
	DWORD dwSize;                //?芍???∟??    
	BYTE byEnable;                //㊣那?“????
	BYTE byFollowChan;          // ㊣??????????“??
	BYTE byDomeCalibrate;            //?豕???????迆℅??辰?迆㊣那?“??1?豕?? 0???豕?? 
	BYTE byRes;                    // ㊣???℅???
	NET_DVR_TRACK_CALIBRATION_PARAM  struCalParam; //㊣那?“??℅谷
}NET_DVR_TRACK_CFG, *LPNET_DVR_TRACK_CFG;

//?迆℅?????
typedef enum _TRACK_MODE_
{
	MANUAL_CTRL = 0,  //?????迆℅?
	ALARM_TRACK    //㊣“????﹞??迆℅?
}TRACK_MODE;

//?????????芍??
typedef struct tagNET_DVR_MANUAL_CTRL_INFO
{
	NET_VCA_POINT struCtrlPoint;
	BYTE  byRes[8];
}NET_DVR_MANUAL_CTRL_INFO, *LPNET_DVR_MANUAL_CTRL_INFO;

//?迆℅??????芍??
typedef struct tagNET_DVR_TRACK_MODE
{
	DWORD dwSize;        //?芍???∟??
	BYTE byTrackMode;   //?迆℅?????
	BYTE byRuleConfMode;   //???辰?????迆℅?????0-㊣????????迆℅???1-?????????迆℅?
	BYTE byRes[2];   //㊣???????0
	union
	{
		DWORD dwULen[4];
		NET_DVR_MANUAL_CTRL_INFO  struManualCtrl;//?????迆℅??芍??
	}uModeParam;
}NET_DVR_TRACK_MODE, *LPNET_DVR_TRACK_MODE;

typedef struct tagNET_DVR_ALARM_JPEG
{
	BYTE    byPicProType;        /*㊣“???㊣???????赤﹞??? 0-?????赤 1-????*/
	BYTE    byRes[3];           //㊣???℅???
	NET_DVR_JPEGPARA struPicParam;                 /*?????????芍??*/
}NET_DVR_ALARM_JPEG, *LPNET_DVR_ALARM_JPEG;

/**********************ipc/d5.3.0********************************/
typedef struct tagNET_DVR_PHY_RATIO
{
	DWORD  dwSize;
	DWORD  dwPhysicsRatio;//???赤㊣???℅?㊣那
	BYTE   byRes[60];
}NET_DVR_PHY_RATIO, *LPNET_DVR_PHY_RATIO;

typedef struct tagNET_DVR_SLAVECAMERA_COND
{
	DWORD            dwSize;
	DWORD            dwChannel;
	BYTE             byID;//?‾???迆℅? ???????迆ID㊣角??[1,4]
	BYTE             byRes1[3];
	DWORD           dwSceneID;// scene Id 
	BYTE             byRes[56];
}NET_DVR_SLAVECAMERA_COND, *LPNET_DVR_SLAVECAMERA_COND;

typedef struct tagNET_DVR_SLAVECAMERA_CFG
{
	DWORD            dwSize;
	BYTE                 byAddressType;   //0-????ipv4 ipv6???﹞ 1-?辰??
										  // ????unionServer?????????????﹞?????辰??
	WORD                wPort;            /*????*/
	BYTE               byLoginStatus; /*???豕㊣???????℅??? 0-logout,1-login*/
	union
	{
		struct
		{
			BYTE            szDomain[MAX_DOMAIN_NAME/*64*/];//﹞????‾???﹞???辰?? 
			BYTE            byRes1[80];
		}struDomain;
		struct
		{
			NET_DVR_IPADDR     struIp;/*IP???﹞*/        //IPv4 IPv6???﹞, 144℅???
		} struAddrIP;
	}unionServer;  //???????????芍?????“??byAddressType℅???㊣赤????IP???﹞?????辰?? 64    
	BYTE                szUserName[NAME_LEN/*32*/];        /*???∫??*/
	BYTE                szPassWord[PASSWD_LEN/*16*/];        /*????*/
	BYTE        byRes1[128];
}NET_DVR_SLAVECAMERA_CFG, *LPNET_DVR_SLAVECAMERA_CFG;

typedef struct tagNET_DVR_SLAVECAMERA_PARAM
{
	BYTE             byLinkStatus;//????℅??? 0- ????????1-????
	BYTE             byRes[15];
}NET_DVR_SLAVECAMERA_PARAM, *LPNET_DVR_SLAVECAMERA_PARAM;

typedef struct tagNET_DVR_SLAVECAMERA_STATUS
{
	DWORD            dwSize;
	NET_DVR_SLAVECAMERA_PARAM  struSlaveCamera[MAX_SLAVECAMERA_NUM/*8*/];//??℅谷??㊣那0㊣赤?????????迆ID 1,?????角??
	BYTE             byRes[64];
}NET_DVR_SLAVECAMERA_STATUS, *LPNET_DVR_SLAVECAMERA_STATUS;

typedef struct tagNET_PTZ_INFO
{
	float fPan;
	float fTilt;
	float fZoom;
	DWORD dwFocus;// ??????????????﹞??∫???谷????0-100000
	BYTE  byRes[4];
}NET_PTZ_INFO, *LPNET_PTZ_INFO;

typedef struct tagNET_DVR_BV_CALIB_POSITION
{
	DWORD  dwSize;  //?芍???∟??
	NET_PTZ_INFO struInitialPos;  //????℅?㊣那
	NET_PTZ_INFO struAdjustPos;  //?‾??℅?㊣那
	BYTE  byRes[300]; //㊣???
}NET_DVR_BV_CALIB_POSITION, *LPNET_DVR_BV_CALIB_POSITION;

typedef struct tagNET_DVR_HUMAN_CALIB_CFG
{
	DWORD  dwSize;  //?芍???∟??
	NET_VCA_POINT struLeftPos;   //????℅車℅?㊣那??
	NET_VCA_POINT struRightPos;  //??????℅?㊣那??
	BYTE  byRes[300]; //㊣???
}NET_DVR_HUMAN_CALIB_CFG, *LPNET_DVR_HUMAN_CALIB_CFG;

typedef struct tagNET_DVR_CALIB_PARAM
{
	NET_PTZ_INFO   struPtzInfo;
	NET_VCA_POINT  struCalibCoordinates;//㊣那?“℅?㊣那
	int                iHorValue;//????㊣那?“ ?????? cm?“???????????迆?∫ ?????角?迆??????
	int                iVerValue;//????㊣那?“ ???㊣?? cm?“???????????迆?∫ ?????角?迆??????
	BYTE      byRes[8];
}NET_DVR_CALIB_PARAM, *LPNET_DVR_CALIB_PARAM;

typedef struct tagNET_DVR_SLAVECAMERA_CALIB_CFG
{
	DWORD            dwSize;
	BYTE              byCalibMode;//㊣那?“????: 0-㊣???,1-℅???㊣那?“, 2-????㊣那?“
	BYTE             byRes[3];
	//??℅谷??㊣那0㊣赤?????????迆ID 1???????角??
	//????㊣那?“???????∫???????“?豕??&&????????℅??????????∫????????℅‾
	NET_DVR_CALIB_PARAM  struCalibParam[MAX_CALIB_NUM/*6*/];//????????㊣那?“???????迆?∫
	BYTE             byRes1[64];
}NET_DVR_SLAVECAMERA_CALIB_CFG, *LPNET_DVR_SLAVECAMERA_CALIB_CFG;

typedef struct tagNET_DVR_TRACKING
{
	DWORD dwSize;        //?芍???∟??
	BYTE byEnable;      //???? 0-false,1-true
	BYTE byMode;        //???? 0-??㊣???1-??????2-℅???
	WORD  wTrackingTime;//?迆℅??㊣????[0,60]s
	NET_VCA_POLYGON struRegion;//?????迆℅???㊣那???辰﹞??∫
	BYTE byRes[64];
}NET_DVR_TRACKING, *LPNET_DVR_TRACKING;

typedef struct tagNET_DVR_SLAVECAMERA_CALIB_V50
{
	DWORD            dwSize;
	BYTE               byCalibMode;//㊣那?“????: 0-㊣???,1-℅???㊣那?“, 2-????㊣那?“
	BYTE             byRes[3];
	//??℅谷??㊣那0㊣赤?????????迆ID 1???????角??
	//????㊣那?“???????∫???????“?豕??&&????????℅??????????∫????????℅‾
	NET_DVR_CALIB_PARAM  struCalibParam[MAX_CALIB_NUM_EX/*20*/];
	BYTE             byRes1[64];
}NET_DVR_SLAVECAMERA_CALIB_V50, *LPNET_DVR_SLAVECAMERA_CALIB_V50;

typedef struct tagNET_DVR_SLAVECAMERA_CALIB_V51
{
	DWORD            dwSize;
	BYTE               byCalibMode;//㊣那?“????: 0-㊣???,1-℅???㊣那?“, 2-????㊣那?“
	BYTE             byRes[3];
	//??℅谷??㊣那0㊣赤?????????迆ID 1???????角??
	//????㊣那?“???????∫???????“?豕??&&????????℅??????????∫????????℅‾
	NET_DVR_CALIB_PARAM  struCalibParam[MAX_CALIB_NUM_EX/*20*/];
	BYTE            byRes1[512];
}NET_DVR_SLAVECAMERA_CALIB_V51, *LPNET_DVR_SLAVECAMERA_CALIB_V51;

//????????℅????芍???芍???“??????????
typedef    struct tagNET_DVR_CAPTURE_PICTURE_RESULT
{
	DWORD        dwSize;//?芍?????車??
	DWORD    dwReturnPicSize;//﹞??????????車??
	BYTE        byRes[256];
}NET_DVR_CAPTURE_PICTURE_RESULT, *LPNET_DVR_CAPTURE_PICTURE_RESULT;

typedef struct tagNET_DVR_GOTOSCENE_COND
{
	DWORD            dwSize;
	DWORD            dwChannel;
	DWORD            dwSceneID;//???∼ID??
	BYTE              byRes[512];
}NET_DVR_GOTOSCENE_COND, *LPNET_DVR_GOTOSCENE_COND;

typedef struct tagNET_DVR_TRACK_INITPOSTION
{
	DWORD            dwSize;
	DWORD            dwChannel;
	BYTE             byID;//?‾???迆℅? ???????迆ID㊣角??[1,4]
	BYTE             byRes[127];
}NET_DVR_TRACK_INITPOSTION, *LPNET_DVR_TRACK_INITPOSTION;

typedef struct tagNET_DVR_MANUAL_TRACKRATIO
{
	DWORD            dwSize;
	BYTE             byCoefficient;//㊣???????[1,60]
	BYTE             byRes[127];
}NET_DVR_MANUAL_TRACKRATIO, *LPNET_DVR_MANUAL_TRACKRATIO;

/**********************ipc/d5.3.0********************************/

//﹞?????????﹞??????辰?芍??
//???????辰?芍??
typedef struct tagNET_IVMS_ONE_RULE_
{
	BYTE    byActive;           /* ??﹞??∟?????辰,0-﹞?, ﹞?0-?? */
	BYTE    byRes1[7];    //㊣??????豕????0℅???
	BYTE   byRuleName[NAME_LEN]; //???辰????
	VCA_EVENT_TYPE dwEventType;   //????﹞????????角??
	NET_VCA_EVENT_UNION uEventParam;//????﹞???????????
	NET_VCA_SIZE_FILTER  struSizeFilter;  //?????????‾
	BYTE byRes2[68]; /*㊣??????豕????0*/
}NET_IVMS_ONE_RULE, *LPNET_IVMS_ONE_RULE;

// ﹞????????辰?芍??
typedef struct tagNET_IVMS_RULECFG
{
	NET_IVMS_ONE_RULE  struRule[MAX_RULE_NUM];   //???辰??℅谷
}NET_IVMS_RULECFG, *LPNET_IVMS_RULECFG;

// IVMS????﹞????????芍??
typedef struct tagNET_IVMS_BEHAVIORCFG
{
	DWORD dwSize;
	BYTE    byPicProType;        //㊣“???㊣???????赤﹞??? 0-?????赤 ﹞?0-????
	BYTE    byRes[3];
	NET_DVR_JPEGPARA struPicParam;                 //?????????芍??
	NET_IVMS_RULECFG struRuleCfg[MAX_DAYS][MAX_TIMESEGMENT];//?????㊣???????????辰
} NET_IVMS_BEHAVIORCFG, *LPNET_IVMS_BEHAVIORCFG;

//????﹞????????‾????℅??芍??
typedef struct tagNET_IVMS_DEVSCHED
{
	NET_DVR_SCHEDTIME     struTime;       //?㊣??????
	NET_DVR_PU_STREAM_CFG struPUStream; //?∼?????‾????
}NET_IVMS_DEVSCHED, *LPNET_IVMS_DEVSCHED;

//????﹞??????????????芍??
typedef struct tagNET_IVMS_STREAMCFG
{
	DWORD dwSize;
	NET_IVMS_DEVSCHED    struDevSched[MAX_DAYS][MAX_TIMESEGMENT];//∼??㊣?????????∼?????‾???∼???辰????
} NET_IVMS_STREAMCFG, *LPNET_IVMS_STREAMCFG;

//??㊣????辰
typedef struct tagNET_VCA_MASK_REGION
{
	BYTE byEnable;            //??﹞??∟??, 0-﹞???﹞?0-??
	BYTE byRes[3];         //㊣???????0
	NET_VCA_POLYGON  struPolygon; //??㊣??角㊣???
}NET_VCA_MASK_REGION, *LPNET_VCA_MASK_REGION;

//??㊣????辰??㊣赤?芍??
typedef struct tagNET_VCA_MASK_REGION_LIST
{
	DWORD dwSize;     //?芍???∟??
	BYTE byRes[4];     //㊣???????0
	NET_VCA_MASK_REGION  struMask[MAX_MASK_REGION_NUM]; //??㊣????辰??℅谷
}NET_VCA_MASK_REGION_LIST, *LPNET_VCA_MASK_REGION_LIST;


//ATM???????辰????
typedef struct tagNET_VCA_ENTER_REGION//﹞???????ATM?足??
{
	DWORD dwSize;
	BYTE byEnable;            //??﹞??∟????0-﹞???﹞?0-??
	BYTE byRes1[3];
	NET_VCA_POLYGON  struPolygon; //???????辰
	BYTE byRes2[16];
}NET_VCA_ENTER_REGION, *LPNET_VCA_ENTER_REGION;

//IVMS??㊣????辰??㊣赤
typedef struct tagNET_IVMS_MASK_REGION_LIST
{
	DWORD dwSize;    //?芍???∟??
	NET_VCA_MASK_REGION_LIST struList[MAX_DAYS][MAX_TIMESEGMENT];
}NET_IVMS_MASK_REGION_LIST, *LPNET_IVMS_MASK_REGION_LIST;

//IVMS??ATM???????辰????
typedef struct tagNET_IVMS_ENTER_REGION
{
	DWORD dwSize;
	NET_VCA_ENTER_REGION  struEnter[MAX_DAYS][MAX_TIMESEGMENT]; //???????辰
}NET_IVMS_ENTER_REGION, *LPNET_IVMS_ENTER_REGION;

// ivms ㊣“???????????芍??
typedef struct tagNET_IVMS_ALARM_JPEG
{
	BYTE                byPicProType;
	BYTE                byRes[3];
	NET_DVR_JPEGPARA      struPicParam;
}NET_IVMS_ALARM_JPEG, *LPNET_IVMS_ALARM_JPEG;

// IVMS ?車?足?‾????
typedef struct tagNET_IVMS_SEARCHCFG
{
	DWORD                        dwSize;
	NET_DVR_MATRIX_DEC_REMOTE_PLAY struRemotePlay;// ??????﹞?
	NET_IVMS_ALARM_JPEG         struAlarmJpeg; // ㊣“??????????????
	NET_IVMS_RULECFG           struRuleCfg;   //IVMS ???????辰????
}NET_IVMS_SEARCHCFG, *LPNET_IVMS_SEARCHCFG;

//㊣那?“?????芍????
typedef struct tagNET_DVR_TRACK_CALIBRATION_PARAM_V41
{
	BYTE byPointNum;    //???∫㊣那?“??????
	BYTE byRes[3];        //㊣???
	NET_DVR_CB_POINT  struCBPoint[MAX_CALIB_PT]; //㊣那?“??℅谷
	NET_DVR_PTZPOS struHorizonPtzPos;  //?辰?迆??????PTZ℅?㊣那
	BYTE byRes2[256];    //㊣???
}NET_DVR_TRACK_CALIBRATION_PARAM_V41, *LPNET_DVR_TRACK_CALIBRATION_PARAM_V41;

//?迆℅??豕㊣?????????
typedef struct tagNET_DVR_TRACK_DEV_PARAM_
{
	DWORD  dwSize;         //?芍?????車??
	BYTE   byEnable;       //???????迆℅??豕㊣?, 0-??????, 1 -????
	BYTE   byTransMode;    //?“??﹞?????0-????SDK??1-485????
	BYTE   byRes1[2];       //㊣???    
	NET_DVR_CHANNEL  struTrackDevChan; //?????迆℅??豕㊣?????    
	NET_DVR_TRACK_CALIBRATION_PARAM_V41 struCalParam; //?迆℅??豕㊣?㊣那?“????    
	BYTE    byRes2[256];    //㊣???    
}NET_DVR_TRACK_DEV_PARAM, *LPNET_DVR_TRACK_DEV_PARAM;
/************************************end******************************************/
//NAS???∟????
typedef struct tagNET_DVR_IDENTIFICATION_PARAM
{
	BYTE    sUserName[NAME_LEN];        /* ???∫?? 32*/
	BYTE    sPassword[PASSWD_LEN];        /* ???? 16*/
	BYTE    byRes1[4];    //㊣???
}NET_DVR_IDENTIFICATION_PARAM, *LPNET_DVR_IDENTIFICATION_PARAM;

typedef union tagNET_DVR_MOUNT_PARAM_UNION
{
	BYTE  uLen[52];                    //???????芍???車??
	NET_DVR_IDENTIFICATION_PARAM struIdentificationParam;//(SMB/CIFS?㊣?迆?∫)
} NET_DVR_MOUNT_PARAM_UNION, *LPNET_DVR_MOUNT_PARAM_UNION;

typedef struct tagNET_DVR_NAS_MOUNT_PARAM
{
	BYTE  byMountType; //0??㊣???,1~NFS, 2~ SMB/CIFS
	BYTE  byRes[3];
	NET_DVR_MOUNT_PARAM_UNION uMountParam;
}NET_DVR_NAS_MOUNT_PARAM, *LPNET_DVR_NAS_MOUNT_PARAM;

typedef union tagNET_DVR_MOUNTMETHOD_PARAM_UNION
{
	BYTE  uLen[56]; //???????芍???車??                    
	NET_DVR_NAS_MOUNT_PARAM struNasMountParam;//NAS????﹞??? (byNetDiskType??NFS(NAS)?㊣?迆?∫) 
}NET_DVR_MOUNTMETHOD_PARAM_UNION, *LPNET_DVR_MOUNTMETHOD_PARAM_UNION;

//?????????芍??????
typedef struct tagNET_DVR_SINGLE_NET_DISK_INFO
{
	BYTE byNetDiskType;                        //?????????角??, 0-NFS(NAS),1-iSCSI
	BYTE byRes1[3];                            //㊣???
	NET_DVR_IPADDR struNetDiskAddr;            //???????????﹞
	BYTE sDirectory[PATHNAME_LEN];            // PATHNAME_LEN = 128
	WORD wPort;                                //iscsi??????????????????
	BYTE  byRes2[2];
	NET_DVR_MOUNTMETHOD_PARAM_UNION  uMountMethodParam;
	BYTE  byRes3[8];                //㊣???
}NET_DVR_SINGLE_NET_DISK_INFO, *LPNET_DVR_SINGLE_NET_DISK_INFO;

#define MAX_NET_DISK    16//℅??車????????????

typedef struct tagNET_DVR_NET_DISKCFG
{
	DWORD  dwSize;
	NET_DVR_SINGLE_NET_DISK_INFO struNetDiskParam[MAX_NET_DISK];
}NET_DVR_NET_DISKCFG, *LPNET_DVR_NET_DISKCFG;

typedef struct tagNET_DVR_SINGLE_NET_DISK_INFO_V40
{
	BYTE byNetDiskType;                        //?????????角??, 0-NFS(NAS),1-iSCSI
	BYTE byRes1[3];                            //㊣???
	BYTE sDirectory[PATHNAME_LEN];            // PATHNAME_LEN = 128
	BYTE byDevAddr[MAX_DOMAIN_NAME];    /*?辰?? 64*/
	WORD wPort;                                //iscsi??????????????????
	BYTE  byRes2[2];
	NET_DVR_MOUNTMETHOD_PARAM_UNION  uMountMethodParam;
	BYTE    byRes4[80];
}NET_DVR_SINGLE_NET_DISK_INFO_V40, *LPNET_DVR_SINGLE_NET_DISK_INFO_V40;

typedef struct tagNET_DVR_NET_DISKCFG_V40
{
	DWORD  dwSize;
	NET_DVR_SINGLE_NET_DISK_INFO_V40 struNetDiskParam[MAX_NET_DISK];
}NET_DVR_NET_DISKCFG_V40, *LPNET_DVR_NET_DISKCFG_V40;
//?????角??
//?‾?角??
typedef enum _MAIN_EVENT_TYPE_
{
	EVENT_MOT_DET = 0,        //?????足??
	EVENT_ALARM_IN = 1,        //㊣“??????
	EVENT_VCA_BEHAVIOR = 2,    // ????﹞???
	EVENT_INQUEST = 3,       //?車??????
	EVENT_VCA_DETECTION = 4, //?????足??
	EVENT_POS = 5,
	EVENT_TRIAL_CASE = 6,//???車∼???????
	EVENT_ACS_CASE = 7,  //????????
	EVENT_IOT_CASE = 8,  //﹞???????????????㊣??角?????迄??﹞??????豕㊣??????????豕㊣??迆?迆??????????∼邦??﹞??????豕㊣?㊣??赤??????
	EVENT_STREAM_INFO = 100  //?‾ID????
}MAIN_EVENT_TYPE;

#define INQUEST_START_INFO        0x1001       /*????????????*/
#define INQUEST_STOP_INFO         0x1002       /*????????????*/
#define INQUEST_TAG_INFO          0x1003       /*????㊣那??????*/
#define INQUEST_SEGMENT_INFO      0x1004       /*?車??????℅???????*/
#define INQUEST_CASE_INFO          0x1005        // ∼????????角??

typedef enum _VCA_DETECTION_MINOR_TYPE_
{
	EVENT_VCA_TRAVERSE_PLANE = 1,           //?????足??
	EVENT_FIELD_DETECTION,                        //???辰?????足??
	EVENT_AUDIO_INPUT_ALARM,                    //?????????足??
	EVENT_SOUND_INTENSITY_ALARM,                //?迄????㊣??足??
	EVENT_FACE_DETECTION,                       //?????足??
	EVENT_VIRTUAL_FOCUS_ALARM,                  //?谷???足??
	EVENT_SCENE_CHANGE_ALARM,                   //???∼㊣??邦?足??
	EVENT_PIR_ALARM,                            //PIR㊣“??
	EVENT_ENTER_REGION,                           //???????辰
	EVENT_EXIT_REGION,                            //??㊣那???????辰
	EVENT_LOITERING,                               //????
	EVENT_GROUPDETECTION,                       //???辰?????㊣????,?∫?????辰???辰
	EVENT_RAPIDMOVE,                            //?足??????
	EVENT_PARK,                              //????
	EVENT_UNATTENDED_BAGGAGE,                   //???﹞????
	EVENT_ATTENDEDBAGGAGE,                      //???﹞????
	EVENT_VEHICLE_DETECTION,                     //?????足??
	EVENT_ALL = 0xffffffff                        //㊣赤??????
}VCA_DETECTION_MINOR_TYPE;



//????﹞????‾?角???????????角???? 0xffff㊣赤??????
typedef enum _BEHAVIOR_MINOR_TYPE_
{
	EVENT_TRAVERSE_PLANE = 0,    // ??????????
	EVENT_ENTER_AREA,                //??㊣那???????辰,?∫?????辰???辰
	EVENT_EXIT_AREA,                //??㊣那???????辰,?∫?????辰???辰
	EVENT_INTRUSION,                 // ????????,?∫?????辰???辰
	EVENT_LOITER,                 //????,?∫?????辰???辰
	EVENT_LEFT_TAKE,                //???﹞????????,?∫?????辰???辰
	EVENT_PARKING,                    //????,?∫?????辰???辰
	EVENT_RUN,                    //?足??????,?∫?????辰???辰
	EVENT_HIGH_DENSITY,                 //???辰?????㊣????,?∫?????辰???辰
	EVENT_STICK_UP,                //?迄????,?∫?????辰???辰
	EVENT_INSTALL_SCANNER,                //∼?℅∼???“?‾,?∫?????辰???辰
	EVENT_OPERATE_OVER_TIME,        // ??℅‾???㊣
	EVENT_FACE_DETECT,              // ?足??????
	EVENT_LEFT,                     // ???﹞????
	EVENT_TAKE,                      // ???﹞????
	EVENT_LEAVE_POSITION,         //????????
	EVENT_TRAIL_INFO = 16,            //????
	EVENT_HUMAN_ENTER = 18,                 //???㊣????
	EVENT_FALL_DOWN_INFO = 19,                 //????
	EVENT_OBJECT_PASTE = 20,        // ?足?????迄???辰
	EVENT_FACE_CAPTURE_INFO = 21,                //????????
	EVENT_MULTI_FACES_INFO = 22,                  //?角??????
	EVENT_AUDIO_ABNORMAL_INFO = 23,             //?迄????㊣?
	EVENT_SUNGLASSES_FACE_INFO = 25,             //?‾????????
	EVENT_CALLING_FACE_INFO = 26,                   //?辰???∼????
	EVENT_VIOLENT_MOTION = 27,                   //????????
	EVENT_SAFETY_HELMET = 28,                     //∼????㊣?足??
	EVENT_PEOPLE_NUM_CHANGE = 29,                 //????㊣???
	EVENT_GET_UP = 30,                            //???赤
	EVENT_ADV_REACH_HEIGHT = 31,                  //????????
	EVENT_STOOD_UP = 32,                           //????
	EVENT_PERSON_DENSITY = 33                     //???㊣?????“?????∟????
}BEHAVIOR_MINOR_TYPE;

//?‾?角??6?????????角??
typedef enum _TRIAL_CASE_MINOR_TYPE_
{
	TRIAL_START_INFO = 0x1001,    // ???車????????
	TRIAL_STOP_INFO = 0x1002,        //???車?芍??????
	TRIAL_TAG_INFO = 0x1003,        //???車????㊣那℅?????
	TRIAL_SEGMENT_INFO = 0x1004,    // ???車????℅???????
	TRIAL_JUDGE_CASE_INFO = 0x1005 //???車∼???????
}TRIAL_CASE_MINOR_TYPE;

// ?‾?角??100???????????角??
typedef enum _STREAM_INFO_MINOR_TYPE_
{
	EVENT_STREAM_ID = 0,                    // ?‾ID
	EVENT_TIMING = 1,                    // ?“?㊣????
	EVENT_MOTION_DETECT = 2,            // ?????足??
	EVENT_ALARM = 3,                    // ㊣“??????
	EVENT_ALARM_OR_MOTION_DETECT = 4,    // ㊣“???辰?????足??
	EVENT_ALARM_AND_MOTION_DETECT = 5,    // ㊣“?????????足??
	EVENT_COMMAND_TRIGGER = 6,            // ?邦????﹞?
	EVENT_MANNUAL = 7,                    // ????????
	EVENT_BACKUP_VOLUME = 8,            // ?????赤????
	STREAM_EVENT_SEMAPHORE,                //??????
	STREAM_EVENT_HIDE,                    //????
	STREAM_EVENT_INVERSE,                //????
	STREAM_EVENT_VIDEO_LOST,            //???????∫
	STREAM_EVENT_WIRELESS_ALARM,        //????㊣“??
	STREAM_EVENT_PIR_ALARM,                //PIR㊣“??
	STREAM_EVENT_CALLHELP_ALARM,        //????㊣“??

	STREAM_EVENT_FACESNAP,                //????℅???
	STREAM_EVENT_FACE_DETECTION,        //?????足??
	STREAM_EVENT_ITS_PLATE,                //?????足??
	STREAM_EVENT_PDC,                    //???‾??????
	STREAM_EVENT_SCENECHANGE_DETECTION,    //???∼㊣??邦
	STREAM_EVENT_DEFOCUS_DETECTION,        //?谷???足??
	STREAM_EVENT_AUDIOEXCEPTION,        //?????足??

										//??????????﹞????“COMM_ALARM_RULE????℅??角??????????VCA_EVENT_TYPE
										VCA_EVENT_TRAVERSE_PLANE,            //??????????
										VCA_EVENT_INTRUSION,                //????????
										VCA_EVENT_ENTER_AREA,                //???????辰
										VCA_EVENT_EXIT_AREA,                //???????辰
										VCA_EVENT_LOITER,                    //?????足??
										VCA_EVENT_HIGH_DENSITY,                //???㊣????
										VCA_EVENT_RUN,                        //?足??????
										VCA_EVENT_PARKING,                    //﹞?﹞“????
										VCA_EVENT_LEFT,                        //???﹞????
										VCA_EVENT_TAKE                            //???﹞????
}STREAM_INFO_MINOR_TYPE;

// typedef enum tagITS_MINOR_TYPE
// {
//     ITS_EVENT_CONGESTION    = 0,    // ????
//     ITS_EVENT_PARKING,              // ????
//     ITS_EVENT_INVERSE,              // ????
//     ITS_EVENT_PEDESTRIAN,           // ????
//     ITS_EVENT_DEBRIS                // ?????????℅?‾???谷??
// }ITS_MINOR_TYPE;


#define SEARCH_EVENT_INFO_LEN   300    //?????????∟??
#define CASE_NO_LEN                64
#define CASE_NAME_LEN            128
#define LITIGANT_LEN            32
#define CHIEF_JUDGE_LEN         32
#define     SEARCH_CASE_NO_LEN        56
#define  SEARCH_CASE_NAME_LEN    100
#define  SEARCH_LITIGANT_LEN    32
#define  SEARCH_CHIEF_JUDGE_LEN 32
#define     CASE_NO_RET_LEN        52
#define  CASE_NAME_RET_LEN        64
#define     LITIGANT_RET_LEN        24
#define     CHIEF_JUDGE_RET_LEN    24
#define  NET_SDK_CASETYPE_LEN      32
//???????‾????
typedef struct tagNET_DVR_SEARCH_EVENT_PARAM
{
	WORD wMajorType;            //0-?????足????1-㊣“??????, 2-????????
	WORD wMinorType;            //???‾???角??- ?迄???‾?角??㊣?????0xffff㊣赤??????
	NET_DVR_TIME struStartTime;    //???‾???????㊣?????????㊣??: ???㊣??(0, 0) ㊣赤????℅??????㊣??????????℅??車??℅??∼????4000??????
	NET_DVR_TIME struEndTime;    //
	BYTE            byLockType;        // 0xff-??????0-??????1-???“
	BYTE             byValue;            //0-∼???㊣赤????1-∼???㊣赤??
	BYTE             byRes[130];        // ㊣???
	union
	{
		BYTE byLen[SEARCH_EVENT_INFO_LEN];
		struct//㊣“??????
		{
			BYTE byAlarmInNo[MAX_ALARMIN_V30];    //㊣“??????????byAlarmInNo[0]????1?辰㊣赤???谷????㊣“??????1??﹞???????
			BYTE byRes[SEARCH_EVENT_INFO_LEN - MAX_ALARMIN_V30];
		}struAlarmParam;

		struct//㊣“??????--∼???
		{
			WORD wAlarmInNo[128];     /*㊣“??????????∼???㊣赤??,??????????????*/
			BYTE byRes[44]; //㊣???
		}struAlarmParamByValue;

		struct//?????足??
		{
			BYTE byMotDetChanNo[MAX_CHANNUM_V30];//?????足???“????byMotDetChanNo[0]????1?辰㊣赤???谷?????“??1﹞??迆?????足????﹞???????
			BYTE byRes[SEARCH_EVENT_INFO_LEN - MAX_CHANNUM_V30];
		}struMotionParam;

		struct//?????足??--∼???
		{
			WORD wMotDetChanNo[64];        /* ?????足???“????∼???㊣赤?? ,??????????????*/
			BYTE byRes[172];                /*㊣???*/
		}struMotionParamByValue;

		struct//????﹞???
		{
			BYTE byChanNo[MAX_CHANNUM_V30];    //??﹞????????“??
			BYTE byRuleID;                    //???辰ID??0xff㊣赤??????
			BYTE byRes1[43];                //㊣???
		}struVcaParam;

		struct //????﹞???--∼???﹞????谷?? 
		{
			WORD wChanNo[64];     //????﹞??????????“????∼???㊣赤??,??????????????
			BYTE byRuleID;      //????﹞????角???????辰0xff㊣赤??????????0????
			BYTE byRes[171];     /*㊣???*/
		}struVcaParamByValue;

		struct//?車?????????‾????
		{
			BYTE byRoomIndex;    //?車????㊣角??,∼???㊣赤??????1????
			BYTE byRes1[3];
			BYTE sInquestInfo[INQUEST_CASE_LEN];
			BYTE byRes2[232];     //㊣???
		} struInquestParam;
		struct  //?????足???谷??????
		{
			BYTE byChan[256];//??﹞??????足?????“??????∼???℅谷??㊣那㊣赤????byChan[0]????1?辰㊣赤???谷?????“??1﹞??迆?????足????﹞??????? 
		}struVCADetectByBit;

		struct//?????足???谷?????? ???“????∼???㊣赤??
		{
			DWORD dwChanNo[MAX_CHANNUM_V30 - 1];// ??﹞??“????,∼???㊣赤????0xffffffff???∫?????車????????㊣赤?????∫??
			BYTE byAll;//0-㊣赤????????????1-㊣赤????????
			BYTE byres[3];
		}struVCADetectByValue;
		struct
		{
			NET_DVR_STREAM_INFO struIDInfo; // ?‾id??????72℅????∟
			DWORD                dwCmdType;  // ??????﹞??角????NVR??????????????
			BYTE                byBackupVolumeNum; //?????赤????CVR????
			BYTE                byRes[223];
		}struStreamIDParam;
		struct
		{
			BYTE    byCaseNo[SEARCH_CASE_NO_LEN];  //∼???㊣角??
			BYTE    byCaseName[SEARCH_CASE_NAME_LEN]; //∼?????????
			BYTE    byLitigant1[SEARCH_LITIGANT_LEN]; //?㊣????1??
			BYTE    byLitigant2[SEARCH_LITIGANT_LEN]; //?㊣????2??
			BYTE    byChiefJudge[SEARCH_CHIEF_JUDGE_LEN];//?車???∟
			BYTE    byCaseType; //∼????角????0-??????1-????∼?????2-????∼???
			BYTE    byRes[47];
		}struTrialParam;
	}uSeniorParam;
}NET_DVR_SEARCH_EVENT_PARAM, *LPNET_DVR_SEARCH_EVENT_PARAM;

#define  MAX_POS_KEYWORDS_NUM               3          //?∫?????邦℅??谷??????
#define  MAX_POS_KEYWORD_LEN                128         //???????邦℅??∟??
#define  SEARCH_EVENT_INFO_LEN_V40             800

//???????‾????
typedef struct tagNET_DVR_SEARCH_EVENT_PARAM_V40
{
	WORD wMajorType;            //0-?????足????1-㊣“??????, 2-???????? 5-pos???? 7-????????
	WORD wMinorType;            //???‾???角??- ?迄???‾?角??㊣?????0xffff㊣赤??????
	NET_DVR_TIME struStartTime;    //???‾???????㊣?????????㊣??: ???㊣??(0, 0) ㊣赤????℅??????㊣??????????℅??車??℅??∼????4000??????
	NET_DVR_TIME struEndTime;    //
	BYTE            byLockType;        // 0xff-??????0-??????1-???“
	BYTE            byQuickSearch;        // ??﹞??????足???谷????0-????????1-?????“?足???谷?????芍﹞????????車?????????豕㊣????????????谷????㊣?????﹞㊣??????????
	BYTE             byRes[130];        // ㊣???
	union
	{
		BYTE byLen[SEARCH_EVENT_INFO_LEN_V40/*800*/];
		struct//㊣“??????
		{
			/*㊣“??????????∼???㊣赤??,????????????????0xffff㊣赤???車?????∫*/
			WORD wAlarmInNo[128];
			BYTE byRes[544]; //㊣???
		}struAlarmParam;

		struct//?????足??
		{
			/* ?????足???“????∼???㊣赤?? ,????????????????0xffff㊣赤???車?????∫*/
			WORD wMotDetChanNo[MAX_CHANNUM_V30];
			BYTE byRes[672];                /*㊣???*/
		}struMotionParam;

		struct //????﹞??? 
		{
			//????﹞??????????“????∼???㊣赤??,????????????????0xffff㊣赤???車?????∫
			WORD wChanNo[MAX_CHANNUM_V30];
			BYTE byRuleID;      //????﹞????角???????辰0xff㊣赤??????????0????
			BYTE byRes[671];     /*㊣???*/
		}struVcaParam;

		struct//?車?????????‾????
		{
			BYTE byRoomIndex;    //?車????㊣角??,??1????
			BYTE byRes[799];     //㊣???
		} struInquestParam;

		struct//?????足???谷?????? ???“????∼???㊣赤??
		{
			BYTE byAll;                //?谷???????“????0-﹞??????㊣dwChanNo???????∫??
									   //1-?谷???????“???????㊣dwChanNo???????∫??
			BYTE byRes1[3];
			WORD wChanNo[MAX_CHANNUM_V30];// ??﹞??“????,∼???㊣赤????0xffff???∫?????車????????㊣赤?????∫??
			BYTE byRes[668];
		}struVCADetect;

		struct
		{
			NET_DVR_STREAM_INFO struIDInfo; // ?‾id??????72℅????∟
			DWORD                dwCmdType;  // ??????﹞??角????NVR??????????????
			BYTE                byBackupVolumeNum; //?????赤????CVR????
			BYTE                byRes1[3];
			BYTE                byArchiveLabel[64]; //????㊣那????CVR????
			BYTE                byRes[656];
		}struStreamIDParam;

		struct //pos????
		{
			WORD   wChannel[MAX_CHANNUM_V30];        //?“????∼???㊣赤??,????????????????0xffff?㊣㊣赤????℅谷?車???????∫
			BYTE     byAllChan;        //??﹞??谷???????“????0-﹞??????㊣wChannel???∫??1-?????“???????㊣wChannel???∫
			BYTE      byCaseSensitive;      //0-????﹞??車?????? 1-??﹞??車????
			BYTE      byCombinateMode;  //???邦℅?℅谷??﹞?????0-?辰??1-??
			BYTE      byRes1;              //㊣???
			char     sKeyWord[MAX_POS_KEYWORDS_NUM][MAX_POS_KEYWORD_LEN];
			//???邦℅??谷???㊣??????
			BYTE    byRes[284];          //㊣???
		}struPosAlarm;

		struct
		{
			BYTE    byCaseNo[SEARCH_CASE_NO_LEN];       //∼???㊣角??
			BYTE    byCaseName[SEARCH_CASE_NAME_LEN];   //∼???????
			BYTE    byLitigant1[SEARCH_LITIGANT_LEN];   //?㊣????1
			BYTE    byLitigant2[SEARCH_LITIGANT_LEN];   //?㊣????2
			BYTE    byChiefJudge[SEARCH_CHIEF_JUDGE_LEN];   //?車???∟
			BYTE    byCaseType;
			BYTE    byRes[47];
		}struTrialParam;

		struct //???????????‾????
		{
			DWORD dwMajor; //㊣“???‾?角???“???????????‾?角????????0?迆㊣赤??????
			DWORD dwMinor; //㊣“?????角???“???????????‾?角????????0?迆㊣赤??????
			BYTE byCardNo[ACS_CARD_NO_LEN]; //?“??
			BYTE byName[NAME_LEN/*32*/]; //????
			BYTE byMACAddr[MACADDR_LEN]; //???赤MAC???﹞
			BYTE byRes[722];
		}struACSAlarm;
	}uSeniorParam;
}NET_DVR_SEARCH_EVENT_PARAM_V40, *LPNET_DVR_SEARCH_EVENT_PARAM_V40;

//???????‾????
typedef struct tagNET_DVR_SEARCH_EVENT_PARAM_V50
{
	WORD wMajorType;            //0-?????足????1-㊣“??????, 2-???????? 5-pos???? 7-????????, 8-﹞?????????????
	WORD wMinorType;            //???‾???角??- ?迄???‾?角??㊣?????0xffff㊣赤??????
	NET_DVR_TIME_SEARCH_COND struStartTime;    //???‾???????㊣?????????㊣??: ???㊣??(0, 0) ㊣赤????℅??????㊣??????????℅??車??℅??∼????4000??????
	NET_DVR_TIME_SEARCH_COND struEndTime;    //???‾???芍???㊣??
	BYTE            byLockType;        // 0xff-??????0-??????1-???“
	BYTE            byQuickSearch;        // ??﹞??????足???谷????0-????????1-?????“?足???谷?????芍﹞????????車?????????豕㊣????????????谷????㊣?????﹞㊣??????????
	BYTE             byRes[254];        // ㊣???
	union
	{
		BYTE byLen[SEARCH_EVENT_INFO_LEN_V40/*800*/];
		struct//㊣“??????
		{
			/*㊣“??????????∼???㊣赤??,????????????????0xffff㊣赤???車?????∫*/
			WORD wAlarmInNo[128];
			BYTE byRes[544]; //㊣???
		}struAlarmParam;

		struct//?????足??
		{
			/* ?????足???“????∼???㊣赤?? ,????????????????0xffff㊣赤???車?????∫*/
			WORD wMotDetChanNo[MAX_CHANNUM_V30];
			BYTE byRes[672];                /*㊣???*/
		}struMotionParam;

		struct //????﹞??? 
		{
			//????﹞??????????“????∼???㊣赤??,????????????????0xffff㊣赤???車?????∫
			WORD wChanNo[MAX_CHANNUM_V30];
			BYTE byRuleID;      //????﹞????角???????辰0xff㊣赤??????????0????
			BYTE byRes[671];     /*㊣???*/
		}struVcaParam;

		struct//?車?????????‾????
		{
			BYTE byRoomIndex;    //?車????㊣角??,??1????
			BYTE byRes[799];     //㊣???
		} struInquestParam;

		struct//?????足???谷?????? ???“????∼???㊣赤??
		{
			BYTE byAll;                //?谷???????“????0-﹞??????㊣dwChanNo???????∫??
									   //1-?谷???????“???????㊣dwChanNo???????∫??
			BYTE byRes1[3];
			WORD wChanNo[MAX_CHANNUM_V30];// ??﹞??“????,∼???㊣赤????0xffff???∫?????車????????㊣赤?????∫??
			BYTE byRes[668];
		}struVCADetect;

		struct
		{
			NET_DVR_STREAM_INFO struIDInfo; // ?‾id??????72℅????∟
			DWORD                dwCmdType;  // ??????﹞??角????NVR??????????????
			BYTE                byBackupVolumeNum; //?????赤????CVR????
			BYTE                byRes1[3];
			BYTE                byArchiveLabel[64]; //????㊣那????CVR????
			BYTE                byRes[656];
		}struStreamIDParam;

		struct //pos????
		{
			WORD   wChannel[MAX_CHANNUM_V30];        //?“????∼???㊣赤??,????????????????0xffff?㊣㊣赤????℅谷?車???????∫
			BYTE     byAllChan;        //??﹞??谷???????“????0-﹞??????㊣wChannel???∫??1-?????“???????㊣wChannel???∫
			BYTE      byCaseSensitive;      //0-????﹞??車?????? 1-??﹞??車????
			BYTE      byCombinateMode;  //???邦℅?℅谷??﹞?????0-?辰??1-??
			BYTE      byRes1;              //㊣???
			char     sKeyWord[MAX_POS_KEYWORDS_NUM][MAX_POS_KEYWORD_LEN];
			//???邦℅??谷???㊣??????
			BYTE    byRes[284];          //㊣???
		}struPosAlarm;

		struct
		{
			BYTE    byCaseNo[SEARCH_CASE_NO_LEN];
			BYTE    byCaseName[SEARCH_CASE_NAME_LEN];
			BYTE    byLitigant1[SEARCH_LITIGANT_LEN];
			BYTE    byLitigant2[SEARCH_LITIGANT_LEN];
			BYTE    byChiefJudge[SEARCH_CHIEF_JUDGE_LEN];
			BYTE    byCaseType;
			BYTE    byRes[547];
		}struTrialParam;

		struct //???????????‾????
		{
			DWORD dwMajor; //㊣“???‾?角???“???????????‾?角????????0?迆㊣赤??????
			DWORD dwMinor; //㊣“?????角???“???????????‾?角????????0?迆㊣赤??????
			BYTE byCardNo[ACS_CARD_NO_LEN]; //?“??
			BYTE byName[NAME_LEN/*32*/]; //????
			BYTE byMACAddr[MACADDR_LEN]; //???赤MAC???﹞
			BYTE byRes[722];
		}struACSAlarm;
		struct //﹞????????????????‾????
		{
			WORD      wDeviceType;            //?豕㊣??角??,0-?????????‾?迆??1-?????????????豕㊣?, 2-????㊣“???‾?迆?“?∟???? 3-GJD㊣“???‾?迆 4-Luminite㊣“???‾?迆, 5-OPTEX㊣“???‾?迆,6-cameraDetector?????角?迆?????‾?豕㊣?
			WORD      wEventType;            //???‾???角??- ?迄???‾?角??㊣?????0xffff㊣赤??????
			WORD      wChannel[MAX_CHANNUM_V30/*64*/];        //?“??????∼???㊣赤??,????????????????0xffff?㊣㊣赤????℅谷?車???????∫
			BYTE      byAllChan;        //??﹞??谷???????“????0-﹞??????㊣wChannel???∫??1-?????“???????㊣wChannel???∫
			BYTE      byCaseSensitive;      //0-????﹞??車?????? 1-??﹞??車????
			BYTE      byCombinateMode;  //???邦℅?℅谷??﹞?????0-?辰??1-??
			BYTE      bySearchType;      //???‾﹞?????0-∼??????????‾?“???㊣?“???????????“??????
			char      sKeyWord[MAX_POS_KEYWORDS_NUM/*3*/][MAX_POS_KEYWORD_LEN/*128*/];//???邦℅??谷???㊣??????
			WORD      wZoneNo;      //﹞??????????㊣?豕㊣??角????????㊣“???‾?迆?????角????﹞????“wEventType??1???㊣???∫
			BYTE      byRes[278];   //㊣???
		}struIOTAlarm;
	}uSeniorParam;
}NET_DVR_SEARCH_EVENT_PARAM_V50, *LPNET_DVR_SEARCH_EVENT_PARAM_V50;


//?谷??﹞????芍??
typedef struct tagNET_DVR_SEARCH_EVENT_RET
{
	WORD wMajorType;            //?‾?角??
	WORD wMinorType;            //???角??
	NET_DVR_TIME struStartTime;    //???????????㊣??
	NET_DVR_TIME struEndTime;   //???????????㊣?????????????㊣???????㊣?????迄
	BYTE byChan[MAX_CHANNUM_V30];
	BYTE byChanEx[32];   //?????“????∼???㊣赤??????????℅????車byChan??????????
	BYTE byRes[4];
	union
	{
		struct//㊣“???????芍??
		{
			DWORD dwAlarmInNo;     //㊣“????????
			BYTE byRes[SEARCH_EVENT_INFO_LEN];
		}struAlarmRet;
		struct//?????足???芍??
		{
			DWORD dwMotDetNo;    //?????足???“??
			BYTE byRes[SEARCH_EVENT_INFO_LEN];
		}struMotionRet;
		struct//????﹞????芍??  
		{
			DWORD dwChanNo;                    //??﹞????????“????
			BYTE byRuleID;                    //???辰ID
			BYTE byRes1[3];                    //㊣???
			BYTE byRuleName[NAME_LEN];        //???辰????
			NET_VCA_EVENT_UNION uEvent;     //????????????
		}struVcaRet;
		struct//?車??????
		{
			BYTE  byRoomIndex;     //?車????㊣角??,??1????
			BYTE  byDriveIndex;    //?????迆㊣角??,??1????
			BYTE  byRes1[6];       //㊣???
			DWORD dwSegmentNo;     //㊣???????㊣????車???????辰??,??1???? 
			WORD  wSegmetSize;     //㊣????????車??, ????M 
			WORD  wSegmentState;   //㊣?????℅??? 0 ??????????1 ?????足????2 ???????車??
			BYTE  byRes2[288];     //㊣???
		}struInquestRet;
		struct //?‾id?????谷???芍??
		{
			DWORD dwRecordType;    /*?????角?? 0-?“?㊣????,1-?????足??,2-㊣“????﹞?,3-㊣“??|?????足??, 4-㊣“??&?????足??,5-?邦????﹞?,6-????????,7-????㊣“??,8-?﹞????﹞?㊣“??,
								   9-????㊣“??,10-PIR㊣“??,11-????㊣“??,12-????㊣“??,13- PIR|????㊣“??|????㊣“, 14-???????“????,15-?????足??,16-???辰????,17-?迄???足??,
								   18-???∼㊣??邦?足??, 19-?????辰???????“?????足??|???辰????|???????辰|???????辰|??????㊣???, 20-??????,21-??????22-???“????,23-???? 24-????????????*/
			DWORD dwRecordLength;    //?????車??
			BYTE  byLockFlag;    // ???“㊣那?? 0???????“ 1?????“
			BYTE  byDrawFrameType;    // 0??﹞??谷?????? 1???谷??????
			BYTE  byRes1[2];
			BYTE  byFileName[NAME_LEN];     //??????
			DWORD dwFileIndex;            // ?????赤?????????‾??
			BYTE  byRes[256];
		}struStreamIDRet;
		struct
		{
			BYTE    byRoomIndex;     //?車????㊣角??,??1????
			BYTE    byDriveIndex;    //?????迆㊣角??,??1????
			WORD    wSegmetSize;     //㊣????????車??, ????M
			DWORD    dwSegmentNo;    //㊣???????㊣????車???????辰??,??1????
			BYTE    bySegmentState;   //㊣?????℅?????0-??????????1-?????足????2-???????車??
			BYTE    byCaseType; //∼????角????0-??????1-????∼?????2-????∼???
			BYTE    byRes[2];
			BYTE    byCaseNo[CASE_NO_RET_LEN];  //∼???㊣角??
			BYTE    byCaseName[CASE_NAME_RET_LEN]; //∼?????????
			BYTE    byLitigant1[LITIGANT_RET_LEN]; //?㊣????1??
			BYTE    byLitigant2[LITIGANT_RET_LEN]; //?㊣????2??
			BYTE    byChiefJudge[CHIEF_JUDGE_RET_LEN];//?車???∟
			BYTE    byRes1[104];
		}struTrialRet;
	}uSeniorRet;
}NET_DVR_SEARCH_EVENT_RET, *LPNET_DVR_SEARCH_EVENT_RET;

#define NET_SDK_MAX_TAPE_INDEX_LEN  32  //????㊣角??℅??車?∟??
#define NET_SDK_MAX_FILE_LEN        256  //??????℅??車?∟??

//?谷??﹞????芍??
typedef struct tagNET_DVR_SEARCH_EVENT_RET_V40
{
	WORD wMajorType;            //?‾?角??
	WORD wMinorType;            //???角??
	NET_DVR_TIME struStartTime;    //???????????㊣??
	NET_DVR_TIME struEndTime;   //???????????㊣?????????????㊣???????㊣?????迄
	WORD  wChan[MAX_CHANNUM_V40/*512*/];    //??﹞????“??????0xffff㊣赤???車?????∫
	BYTE byRes[36];
	union
	{
		BYTE  byLen[800];               //???????∟??
		struct//㊣“???????芍??
		{
			DWORD dwAlarmInNo;     //㊣“????????
			BYTE byRes[796];
		}struAlarmRet;
		struct//?????足???芍??
		{
			DWORD dwMotDetNo;    //?????足???“??
			BYTE byRes[796];
		}struMotionRet;
		struct//????﹞????芍??  
		{
			DWORD dwChanNo;                    //??﹞????????“????
			BYTE byRuleID;                    //???辰ID
			BYTE byRes1[3];                    //㊣???
			BYTE byRuleName[NAME_LEN];        //???辰????
			NET_VCA_EVENT_UNION uEvent;     //????????????
			BYTE byRes[668];                    //㊣???
		}struVcaRet;

		struct//?車??????
		{
			BYTE  byRoomIndex;     //?車????㊣角??,??1????
			BYTE  byDriveIndex;    //?????迆㊣角??,??1????
			BYTE  byRes1[6];       //㊣???
			DWORD dwSegmentNo;     //㊣???????㊣????車???????辰??,??1???? 
			WORD  wSegmetSize;     //㊣????????車??, ????M 
			WORD  wSegmentState;   //㊣?????℅??? 0 ??????????1 ?????足????2 ???????車??
			BYTE  byRes2[784];     //㊣???
		}struInquestRet;

		struct //?‾id?????谷???芍??
		{
			DWORD dwRecordType;    //?????角?? 0-?“?㊣???? 1-?????足?? 2-㊣“?????? 3-㊣“??|?????足?? 4-㊣“??&?????足?? 5-?邦????﹞? 6-???????? 7-????㊣“?? 8-?﹞????﹞? 9-????㊣“?? 10-????????
			DWORD dwRecordLength;    //?????車??
			BYTE  byLockFlag;    // ???“㊣那?? 0???????“ 1?????“
			BYTE  byDrawFrameType;    // 0??﹞??谷?????? 1???谷??????
			BYTE  byPosition;// ?????迄????????????0-?車??????1-?????迆???????????㊣????????2-???????????豕??∼????????????迆??????3-???????????????豕??∼?????????????????
			BYTE  byRes1;
			BYTE  byFileName[NAME_LEN];     //??????
			DWORD dwFileIndex;            // ?????赤?????????‾??
			BYTE  byTapeIndex[NET_SDK_MAX_TAPE_INDEX_LEN];  //?????迄??????㊣角??
			BYTE  byFileNameEx[NET_SDK_MAX_FILE_LEN/*256*/]; //??????????
			BYTE  byRes[464];
		}struStreamIDRet;

		struct//POS?????谷???芍??
		{
			DWORD dwChanNo;        //??﹞??迆?迆pos???????“??
			BYTE  byRes[796];
		}struPosRet;

		struct
		{
			BYTE    byRoomIndex;     //?車????㊣角??,??1????
			BYTE    byDriveIndex;    //?????迆㊣角??,??1????
			WORD    wSegmetSize;     //㊣????????車??, ????M
			DWORD    dwSegmentNo;    //㊣???????㊣????車???????辰??,??1????
			BYTE    bySegmentState;   //㊣?????℅?????0-??????????1-?????足????2-???????車??
			BYTE    byCaseType; //∼????角????0-??????1-????∼?????2-????∼???
			BYTE    byRes[2];
			BYTE    byCaseNo[CASE_NO_RET_LEN];  //∼???㊣角??
			BYTE    byCaseName[CASE_NAME_RET_LEN]; //∼?????????
			BYTE    byLitigant1[LITIGANT_RET_LEN]; //?㊣????1??
			BYTE    byLitigant2[LITIGANT_RET_LEN]; //?㊣????2??
			BYTE    byChiefJudge[CHIEF_JUDGE_RET_LEN];//?車???∟
			BYTE    byRes1[600];
		}struTrialRet;
	}uSeniorRet;
}NET_DVR_SEARCH_EVENT_RET_V40, *LPNET_DVR_SEARCH_EVENT_RET_V40;

//?谷??﹞????芍??
typedef struct tagNET_DVR_SEARCH_EVENT_RET_V50
{
	WORD wMajorType;            //?‾?角??
	WORD wMinorType;            //???角??
	NET_DVR_TIME_SEARCH struStartTime;    //???????????㊣??
	NET_DVR_TIME_SEARCH struEndTime;   //???????????㊣?????????????㊣???????㊣?????迄
	NET_DVR_ADDRESS struAddr;  //?????迄???????﹞????????????﹞??㊣????
	WORD  wChan[MAX_CHANNUM_V40/*512*/];    //??﹞????“??????0xffff㊣赤???車?????∫
	BYTE byRes[256];
	union
	{
		BYTE  byLen[800];               //???????∟??
		struct//㊣“???????芍??
		{
			DWORD dwAlarmInNo;     //㊣“????????
			BYTE byRes[796];
		}struAlarmRet;
		struct//?????足???芍??
		{
			DWORD dwMotDetNo;    //?????足???“??
			BYTE byRes[796];
		}struMotionRet;
		struct//????﹞????芍??  
		{
			DWORD dwChanNo;                    //??﹞????????“????
			BYTE byRuleID;                    //???辰ID
			BYTE byRes1[3];                    //㊣???
			BYTE byRuleName[NAME_LEN];        //???辰????
			NET_VCA_EVENT_UNION uEvent;     //????????????
			BYTE byRes[668];                    //㊣???
		}struVcaRet;

		struct//?車??????
		{
			BYTE  byRoomIndex;     //?車????㊣角??,??1????
			BYTE  byDriveIndex;    //?????迆㊣角??,??1????
			BYTE  byRes1[6];       //㊣???
			DWORD dwSegmentNo;     //㊣???????㊣????車???????辰??,??1???? 
			WORD  wSegmetSize;     //㊣????????車??, ????M 
			WORD  wSegmentState;   //㊣?????℅??? 0 ??????????1 ?????足????2 ???????車??
			BYTE  byRes2[784];     //㊣???
		}struInquestRet;

		struct //?‾id?????谷???芍??
		{
			DWORD dwRecordType;    //?????角?? 0-?“?㊣???? 1-?????足?? 2-㊣“?????? 3-㊣“??|?????足?? 4-㊣“??&?????足?? 5-?邦????﹞? 6-???????? 7-????㊣“?? 8-?﹞????﹞? 9-????㊣“?? 10-????????
			DWORD dwRecordLength;    //?????車??
			BYTE  byLockFlag;    // ???“㊣那?? 0???????“ 1?????“
			BYTE  byDrawFrameType;    // 0??﹞??谷?????? 1???谷??????
			BYTE  byPosition;// ?????迄????????????0-?車??????1-?????迆???????????㊣????????2-???????????豕??∼????????????迆??????3-???????????????豕??∼?????????????????
			BYTE  byRes1;
			BYTE  byFileName[NAME_LEN];     //??????
			DWORD dwFileIndex;            // ?????赤?????????‾??
			BYTE  byTapeIndex[NET_SDK_MAX_TAPE_INDEX_LEN];  //?????迄??????㊣角??
			BYTE  byFileNameEx[NET_SDK_MAX_FILE_LEN/*256*/]; //??????????
			BYTE  byRes[464];
		}struStreamIDRet;

		struct//POS?????谷???芍??
		{
			DWORD dwChanNo;        //??﹞??迆?迆pos???????“??
			BYTE byRes[796];
		}struPosRet;

		struct
		{
			BYTE    byRoomIndex;     //?車????㊣角??,??1????
			BYTE    byDriveIndex;    //?????迆㊣角??,??1????
			WORD    wSegmetSize;     //㊣????????車??, ????M
			DWORD    dwSegmentNo;    //㊣???????㊣????車???????辰??,??1????
			BYTE    bySegmentState;   //㊣?????℅?????0-??????????1-?????足????2-???????車??
			BYTE    byCaseType; //∼????角????0-??????1-????∼?????2-????∼???
			BYTE    byRes[2];
			BYTE    byCaseNo[CASE_NO_RET_LEN];  //∼???㊣角??
			BYTE    byCaseName[CASE_NAME_RET_LEN]; //∼?????????
			BYTE    byLitigant1[LITIGANT_RET_LEN]; //?㊣????1??
			BYTE    byLitigant2[LITIGANT_RET_LEN]; //?㊣????2??
			BYTE    byChiefJudge[CHIEF_JUDGE_RET_LEN];//?車???∟
			BYTE    byRes1[600];
		}struTrialRet;
		struct//﹞??????“???谷???芍??
		{
			DWORD dwChanNo;        //??﹞??迆?迆???????“?????“???????“????
			BYTE byRes[796];
		}struIOTRet;
	}uSeniorRet;
}NET_DVR_SEARCH_EVENT_RET_V50, *LPNET_DVR_SEARCH_EVENT_RET_V50;

//SDK_V35  2009-10-26

// ㊣那?“?????角??
typedef enum tagCALIBRATE_TYPE
{
	PDC_CALIBRATE = 0x01,  // PDC ㊣那?“
	BEHAVIOR_OUT_CALIBRATE = 0x02, //???????????∼㊣那?“  
	BEHAVIOR_IN_CALIBRATE = 0x03,    // ???????????∼㊣那?“ 
	ITS_CALBIRETE = 0x04,      //  ???“????㊣那?“
	BV_DIRECT_CALIBRATE = 0x05,   //?????㊣??㊣那?“
	PDC_LINE_CALIBRATE = 0x06  //PDC ?? ㊣那?“
}CALIBRATE_TYPE;

#define MAX_RECT_NUM  6
typedef struct tagNET_DVR_RECT_LIST
{
	BYTE    byRectNum;    // ?????辰??????
	BYTE    byRes1[11];  //㊣???℅??? 
	NET_VCA_RECT struVcaRect[MAX_RECT_NUM]; // ℅??車??6??Rect 
}NET_DVR_RECT_LIST, *LPNET_DVR_RECT_LIST;

// PDC ㊣那?“????
typedef struct tagNET_DVR_PDC_CALIBRATION
{
	NET_DVR_RECT_LIST struRectList;       // ㊣那?“?????辰??㊣赤
	BYTE           byRes[120];       // ㊣???℅??? 
}NET_DVR_PDC_CALIBRATION, *LPNET_DVR_PDC_CALIBRATION;


// ㊣那?“?????????角㊣???????㊣赤???㊣?∼㊣那?“????????㊣赤?????????????????∟??????
typedef enum tagLINE_MODE
{
	HEIGHT_LINE,        //?????迄㊣???
	LENGTH_LINE        //?∟???迄㊣???
}LINE_MODE;
/*
???豕??㊣那?“???????㊣?辰???????角?????豕?????????????豕???角????????
???????豕?????????辰㊣那?“?車?????????角?????????迆????
*/
typedef struct tagNET_DVR_CAMERA_PARAM
{
	BYTE    byEnableHeight;     // ??﹞??????豕???????迆??????
	BYTE    byEnableAngle;      // ??﹞??????豕???????迆????????
	BYTE    byEnableHorizon;    // ??﹞??????豕???????迆??????
	BYTE    byRes[5];   // ㊣???℅??? 
	float   fCameraHeight;    // ?????迆????
	float   fCameraAngle;     // ?????迆????????
	float   fHorizon;         // ???∼??????????
}NET_DVR_CAMERA_PARAM, *LPNET_DVR_CAMERA_PARAM;
/*
?㊣fValue㊣赤????㊣那???????㊣?辰??struStartPoint??struEndPoint﹞?㊣?㊣赤????㊣那?﹞??????????????
?㊣fValue㊣赤???????∟?????㊣?辰??struStartPoint??struEndPoint﹞?㊣?㊣赤????????????????????
mode㊣赤???㊣?∼?迄㊣???㊣赤?????????????∟??????
*/
typedef struct tagNET_DVR_LINE_SEGMENT
{
	BYTE            byLineMode;     // ???? LINE_MODE
	BYTE            byRes[3];       // ㊣???℅??? 
	NET_VCA_POINT   struStartPoint;
	NET_VCA_POINT   struEndPoint;
	float           fValue;
}NET_DVR_LINE_SEGMENT, *LPNET_DVR_LINE_SEGMENT;

#define  MAX_LINE_SEG_NUM 8

/*
㊣那?“?迄㊣??????∼?豕??4-8?‾?迄㊣????????????????迆?角??????
*/
typedef struct tagNET_DVR_BEHAVIOR_OUT_CALIBRATION
{
	DWORD                   dwLineSegNum;          // ?迄㊣???????
	NET_DVR_LINE_SEGMENT    struLineSegment[MAX_LINE_SEG_NUM];    // ?迄㊣???℅??車????
	NET_DVR_CAMERA_PARAM    struCameraParam;    // ?????迆????
	BYTE byRes[20];
}NET_DVR_BEHAVIOR_OUT_CALIBRATION, *LPNET_DVR_BEHAVIOR_OUT_CALIBRATION;

/*
???芍????㊣赤??IAS??????㊣那?“?迄㊣???
????∼邦?“??????㊣那?辰????????????????㊣那?“????
??㊣那?辰?????????????????????辰?????????迄㊣?㊣那???????﹞????????????㊣那?“????
???谷????℅?㊣那㊣赤????
*/
typedef struct tagNET_DVR_IN_CAL_SAMPLE
{
	NET_VCA_RECT struVcaRect;   // ??㊣那?辰
	NET_DVR_LINE_SEGMENT struLineSegment;    // ????㊣那?“??
}NET_DVR_IN_CAL_SAMPLE, *LPNET_DVR_IN_CAL_SAMPLE;

#define  MAX_SAMPLE_NUM 5  //?㊣??㊣那?“??℅??車????
#define  MAX_SAMPLE_NUM_EX 7 //?迄㊣?㊣那?“??????????

typedef struct tagNET_DVR_BEHAVIOR_IN_CALIBRATION
{
	DWORD    dwCalSampleNum;      //  ㊣那?“?迄㊣?????
	NET_DVR_IN_CAL_SAMPLE  struCalSample[MAX_SAMPLE_NUM]; // ㊣那?“?迄㊣?℅??車????
	NET_DVR_CAMERA_PARAM    struCameraParam;    // ?????迆????
	BYTE byRes[16];
}NET_DVR_BEHAVIOR_IN_CALIBRATION, *LPNET_DVR_BEHAVIOR_IN_CALIBRATION;

#define  CALIB_PT_NUM 4
typedef struct tagNET_DVR_ITS_CALIBRATION
{
	DWORD dwPointNum; //㊣那?“????
	NET_VCA_POINT struPoint[CALIB_PT_NUM]; //????℅?㊣那
	float       fWidth;
	float       fHeight;
	BYTE        byRes1[100];        // ㊣???℅???
}NET_DVR_ITS_CALIBRATION, *LPNET_DVR_ITS_CALIBRATION;

typedef struct tagNET_DVR_BV_DIRECT_CALIBRATION
{
	DWORD  dwCameraHeight;  //?????迆??????????cm
	float  fPitchAngle;     //?????迆????????[0??, 60??],
	float  fInclineAngle;   //?????迆???㊣????[-20??,20??]
	BYTE   byRes1[228];     //㊣???
}NET_DVR_BV_DIRECT_CALIBRATION, *LPNET_DVR_BV_DIRECT_CALIBRATION;

// PDC ㊣那?“????
typedef struct  tagNET_DVR_PDC_LINE_CALIBRATION
{
	NET_VCA_LINE  struCalibrationLine;
	BYTE       byRes[224];// ㊣???℅??? 
} NET_DVR_PDC_LINE_CALIBRATION, *LPNET_DVR_PDC_LINE_CALIBRATION;

// ㊣那?“??????????
// ?車?????角??㊣那?“????????﹞??????芍??????
typedef union tagNET_DVR_CALIBRATION_PRARM_UNION
{
	BYTE byRes[240];                    //???????芍???車??
	NET_DVR_PDC_CALIBRATION struPDCCalibration;  //PDC ㊣那?“????
	NET_DVR_BEHAVIOR_OUT_CALIBRATION  struBehaviorOutCalibration;  //  ???????????∼㊣那?“  ?‾????????IVS??
	NET_DVR_BEHAVIOR_IN_CALIBRATION  struBehaviorInCalibration;     // ???????????∼㊣那?“???‾??????IAS?? 
	NET_DVR_ITS_CALIBRATION struITSCalibration;
	NET_DVR_BV_DIRECT_CALIBRATION struBvDirectCalibration; //?????㊣??㊣那?“
	NET_DVR_PDC_LINE_CALIBRATION struPDCLineCalibration; //PDC ??㊣那?“????
}NET_DVR_CALIBRATION_PRARM_UNION, *LPNET_DVR_CALIBRATION_PRARM_UNION;


// ㊣那?“?????芍??
typedef struct tagNET_DVR_CALIBRATION_CFG
{
	DWORD   dwSize;               //㊣那?“?芍???車??
	BYTE    byEnable;           // ??﹞?????㊣那?“
	BYTE    byCalibrationType;    // ㊣那?“?角?? ?迄???????角???????????角??????????㊣那?“ ????CALIBRATE_TYPE
	BYTE    byRes1[2];
	NET_DVR_CALIBRATION_PRARM_UNION uCalibrateParam;  // ㊣那?“??????????
	BYTE    byRes2[12];
}NET_DVR_CALIBRATION_CFG, *LPNET_DVR_CALIBRATION_CFG;

//?‾??????﹞??辰?芍????
typedef struct  tagNET_DVR_PDC_ENTER_DIRECTION
{
	NET_VCA_POINT struStartPoint; //?‾??????﹞??辰??????
	NET_VCA_POINT struEndPoint;    // ?‾??????﹞??辰?芍???? 
}NET_DVR_PDC_ENTER_DIRECTION, *LPNET_DVR_PDC_ENTER_DIRECTION;

typedef struct tagNET_DVR_PDC_RULE_CFG
{
	DWORD           dwSize;              //?芍???車??
	BYTE            byEnable;             // ??﹞??∟?????辰;
	BYTE            byRes1[23];       // ㊣???℅??? 
	NET_VCA_POLYGON          struPolygon;            // ?角㊣???
	NET_DVR_PDC_ENTER_DIRECTION  struEnterDirection;    // ?‾??????﹞??辰
} NET_DVR_PDC_RULE_CFG, *LPNET_DVR_PDC_RULE_CFG;

typedef struct tagNET_DVR_PDC_RULE_CFG_V41
{
	DWORD           dwSize;              //?芍???車??
	BYTE            byEnable;             // ??﹞??∟?????辰;
	BYTE            byRes1[23];       // ㊣???℅??? 
	NET_VCA_POLYGON struPolygon;            // ?角㊣???
	NET_DVR_PDC_ENTER_DIRECTION  struEnterDirection;    // ?‾??????﹞??辰
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
	NET_DVR_TIME_EX struDayStartTime; //∼℅?足?????㊣?????㊣﹞??????∫
	NET_DVR_TIME_EX struNightStartTime; //???赤?????㊣?????㊣﹞??????∫
	BYTE            byRes[100];       // ㊣???℅???
}NET_DVR_PDC_RULE_CFG_V41, *LPNET_DVR_PDC_RULE_CFG_V41;

/********* IPC5.1.7 ???‾?????????辰 Begin 2014-03-21***********/
//?????芍??
typedef struct tagNET_DVR_PDC_RULE_COND
{
	DWORD  dwSize; //?芍???車??
	DWORD  dwChannel; //?“????
	DWORD dwID; //???∼ID???????辰?迆?角???∼????????????∼?㊣?SDK???????豕㊣??㊣??㊣???℅?????0???谷?????迄??????℅?????0?㊣?????????????∼1 
	BYTE  byRes[60];
}NET_DVR_PDC_RULE_COND, *LPNET_DVR_PDC_RULE_COND;

//?????芍????
typedef struct tagNET_VCA_POLYLINE
{
	NET_VCA_POINT struPoint[4];    //?????? 
}NET_VCA_POLYLINE, *LPNET_VCA_POLYLINE;

//?????芍??
typedef struct tagNET_DVR_PDC_RULE_CFG_V42
{
	DWORD  dwSize; //?芍???車??
	BYTE   byEnable; //??﹞??∟?????辰;
	BYTE   byOSDEnable;//???‾????OSD??????﹞?????,  0-﹞??“0-??????1-???“0-?????????????? 2-?????? 3-????   ???????豕㊣?????????OSD?????????“???????????????“????/????????4-??????????5-????????????
	BYTE   byCurDetectType;//?㊣?∼?足?????辰?角????0-?角㊣?????1-?足????, 2-?????足??
	BYTE   byInterferenceSuppression; //??????????∼???㊣赤??,0-??????,1-??????bit0-???∼??bit1-??????bit2-????
	NET_VCA_POINT   struOSDPoint;//???‾????????OSD????℅車????℅?㊣那
								 //???‾???足???????????????“0-15??1-1??2-5??3-10??4-20??5-30??6-60????????﹞???
	BYTE   byDataUploadCycle;
	//?????????迆???????“0-??㊣???1-??????
	BYTE   bySECUploadEnable;
	BYTE   byEmailDayReport;//???‾??㊣“㊣赤???? 0-??㊣???1-????
	BYTE   byEmailWeekReport;//???‾??㊣“㊣赤???? 0-??㊣???1-????
	BYTE   byEmailMonthReport;//???‾??㊣“㊣赤????0-??㊣???1-????
	BYTE   byEmailYearReport;//???‾?那㊣“㊣赤????0-??㊣???1-????
	BYTE   byRes2[6];// ㊣???℅???  
	NET_VCA_POLYGON          struPolygon; // ?角㊣???
	NET_DVR_PDC_ENTER_DIRECTION  struEnterDirection; // ?‾??????﹞??辰
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
	NET_DVR_TIME_EX struDayStartTime; //∼℅?足?????㊣?????㊣﹞??????∫
	NET_DVR_TIME_EX struNightStartTime; //???赤?????㊣?????㊣﹞??????∫
	NET_DVR_HANDLEEXCEPTION_V40 struAlarmHandleType; /*???赤﹞??? ???∫??????????*/
	BYTE   byDetecteSensitivity;//??㊣那?足???谷??????﹞??∫1-100??????50
	BYTE   byGenerateSpeedSpace;//??㊣那?迆???????“???辰????﹞??∫1-100??????50
	BYTE   byGenerateSpeedTime;// ??㊣那?迆???????“?㊣?辰????﹞??∫1-100??????50
	BYTE   byCountSpeed;// ??????????﹞??∫1-100??????50
	BYTE   byDetecteType;// ??㊣那?足???角????0-℅?????1-???﹞??2-?﹞????????0-℅?????℅?????????DSP?‾????﹞“??????????????﹞“??
	BYTE   byTargetSizeCorrect;//??㊣那??????????﹞??∫1-100??????50
	BYTE   byStreamOverlayRuleInfos;//???‾???????????? 0-﹞???1-??
	BYTE   byRes3;// ㊣???℅???
	NET_VCA_LINE  struLine;//?足????
	BYTE byHeightFilterEnable;//??????????﹞???????0-㊣?????1-??㊣???2-????
	BYTE  byDetectThreshold;//?足??????,﹞??∫[0,100],???? 90(????????????????﹞?)?????豕?“??﹞“????㊣??足????㊣那??????????????????????????????????㊣那?????????迆℅???????
	BYTE  byAidedTrackEnabled;//?“?迆?迆℅???????0~??????1~??㊣???????????(????????) ????????????㊣???﹞“?迆℅????谷???????‾?“?迆?迆℅????迆℅????‾???㊣????????℅?????
	BYTE byRes4;
	float fHeightFilter;//???????????????????℅??????????120???℅??﹞??∫??40-200???℅??byHeightFilterEnable??2???????∫
	BYTE byCalibrateType;//㊣那?“?角????0-??????㊣那?“??1-℅???㊣那?“??2-????㊣那?“
	BYTE byCountingType;//??????﹞?﹞??? 0-??,1-㊣“????????﹞?,2-????﹞?????﹞?
	BYTE bySignalType;//?????角?? 0-??????1-????
	BYTE byRS485TransmissionEnabled;//????485???? 0-??㊣???1-????
	float fTiltAngle;//??????,????????????????????????0????????﹞??∫??0-180??,????
	float fHeelAngle;//???㊣??,?????????????㊣??????????0?????㊣??﹞??∫??-90-90??,????
	float fHeight;//???????????????????℅????????????300???℅??????﹞??∫??200-500???℅,?㊣byCalibrateType??2?㊣?豕?????∫?????角?㊣????
	NET_VCA_POLYGON struCountPolygon;//???????辰???????????????????????????????“??﹞?????????﹞?????<CountingPolygon>???????????辰?迆㊣赤???????∫????????
	NET_VCA_POLYGON struAutoCalibPolygon;//㊣那?“???辰???㊣byCalibrateType??1?㊣???∫
	NET_DVR_TIME_EX struDailyResetTime; //?“?㊣????
	NET_VCA_POLYLINE struPolyLine;//?????足?????辰?“?????????車??struLine??℅???????
	BYTE   byRes[4]; //㊣???℅???
}NET_DVR_PDC_RULE_CFG_V42, *LPNET_DVR_PDC_RULE_CFG_V42;
/********* IPC5.1.7 ???‾?????????辰 End 2014-03-21***********/

//????∼??????芍????
typedef struct tagNET_DVR_TRIAL_VERSION_CFG
{
	DWORD dwSize;
	WORD wReserveTime; //?????????角?㊣????0xffff㊣赤?????∫?????????足
	BYTE byRes[62];
}NET_DVR_TRIAL_VERSION_CFG, *LPNET_DVR_TRIAL_VERSION_CFG;

typedef struct tagNET_DVR_SYN_CHANNEL_NAME_PARAM
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	BYTE  byRes[64];
}NET_DVR_SYN_CHANNEL_NAME_PARAM, *LPNET_DVR_SYN_CHANNEL_NAME_PARAM;

typedef struct tagNET_DVR_RESET_COUNTER_CFG
{
	DWORD dwSize;
	BYTE  byEnable; //??﹞???????0-????????1-????
	BYTE  byMode; //?迆?∫??????0-?“?㊣??1-????
	BYTE  byRes1[2];
	NET_DVR_TIME_EX struTime[MAX_DAYS];//?????????㊣?????㊣﹞??????∫
	BYTE  byRes[64];
}NET_DVR_RESET_COUNTER_CFG, *LPNET_DVR_RESET_COUNTER_CFG;

typedef struct tagNET_DVR_VCA_CTRLINFO_COND
{
	DWORD dwSize;
	NET_DVR_STREAM_INFO  struStreamInfo;
	BYTE byRes[64];
}NET_DVR_VCA_CTRLINFO_COND, *LPNET_DVR_VCA_CTRLINFO_COND;

#define NET_SDK_MAX_RELATED_CHAN_NUM  4 //℅??車?????“????

typedef struct tagNET_DVR_VCA_CTRLINFO_CFG
{
	DWORD  dwSize;
	BYTE   byVCAEnable;     //??﹞?????????
	BYTE   byVCAType;       //?????????角????VCA_CHAN_ABILITY_TYPE 
	BYTE   byStreamWithVCA; //???‾????﹞???????????
	BYTE   byMode;            //??????ATM ?????㊣????VCA_CHAN_MODE_TYPE ,TFS ?????㊣???? TFS_CHAN_MODE_TYPE??????﹞????那??∼??㊣????BEHAVIOR_SCENE_MODE_TYPE
	BYTE   byControlType;   //?????角????∼???㊣赤????0-﹞???1-??
							//byControlType &1 ??﹞?????℅???????
							//byControlType &2 ??﹞??????????∼???豕㊣?
	BYTE   byRes1[3];
	WORD   wRelatedChannel[NET_SDK_MAX_RELATED_CHAN_NUM/*4*/];/*?????“??????0-???????“?㊣?∼??ATM?豕㊣????????㊣?豕???“????????ATM??∼??㊣?????????????﹞ATM?????“????*/
	BYTE   byRes[72];       //㊣??????豕????0
}NET_DVR_VCA_CTRLINFO_CFG, *LPNET_DVR_VCA_CTRLINFO_CFG;

//?豕?????‾??????????  ???????????????邦℅????? 
// HUMAN_GENERATE_RATE
// ??㊣那?迆????????????????PDC???迆????㊣那???????????????足????㊣那?????℅?迆?????㊣????????????????????????㊣????????㊣???辰???豕???????辰???辰?????㊣???????足??㊣那?迆???????? ㊣?????㊣那?????足???㊣????????????㊣????????㊣???辰?????辰???辰???車?㊣????????????㊣那?迆???????????????車?足????㊣那?迆??????????????5????1??????℅?????5??℅??足????????????3??
// 
// DETECT_SENSITIVE
// ??㊣那?足???谷??????????????????PDC???????????????辰㊣??足??????㊣那???谷???????谷?????????????????辰?????℅㊣??足??????㊣那???谷?????????辰?????足??????㊣那???㊣????????????????????????㊣????????㊣?????芍???足???谷?????? ㊣?????㊣那?????足???㊣????????????㊣????????㊣???????????足???谷?????????????車?足??????????????5??????㊣?1?谷????℅?????5??℅???????????㊣???3??
// TRAJECTORY_LEN
// ?足???迆???∟????????????㊣赤???迆???足???㊣???車??㊣那??℅??車??????????????????????5??????㊣?1???迆???∟??℅??∟???足???迆??℅?????5???迆???∟??℅??????足???迆??℅??足????????㊣???3??
// TRAJECT_CNT_LEN
// ?足???????∟????????????㊣赤???足???????㊣???車??㊣那??℅??車??????????????????????5??????㊣?1?????????車?∟??℅??∟???足??????℅?????5?????????車?∟??℅??????足??????℅??足????????㊣???3??
// PREPROCESS
// ?????∟???赤??????????0 - ?????赤??1 - ???赤????????0??
// CAMERA_ANGLE
// ?????迆?????????????? 0 - ???㊣?? 1 - ???㊣????????0??
typedef enum tagPDC_PARAM_KEY
{
	HUMAN_GENERATE_RATE = 50,              // ??㊣那?迆?????? ??50????
	DETECT_SENSITIVE = 51,               // ?足???谷????
}PDC_PARAM_KEY;

typedef struct tagNET_DVR_PDC_TARGET_INFO
{
	DWORD       dwTargetID;                 // ??㊣那id 
	NET_VCA_RECT struTargetRect;               // ??㊣那?辰
	BYTE      byRes1[8];        // ㊣???℅???
}NET_DVR_PDC_TARGET_INFO, *LPNET_DVR_PDC_TARGET_INFO;

typedef struct tagNET_DVR_PDC_TARGET_IN_FRAME
{
	BYTE           byTargetNum;                   //??㊣那????
	BYTE            byRes1[3];
	NET_DVR_PDC_TARGET_INFO  struTargetInfo[MAX_TARGET_NUM];   //??㊣那??????℅谷
	BYTE    byRes2[8];                  // ㊣???℅???
}NET_DVR_PDC_TARGET_IN_FRAME, *LPNET_DVR_PDC_TARGET_IN_FRAME;

typedef struct tagNET_DVR_PDC_ALRAM_INFO
{
	DWORD                       dwSize;          // PDC???‾??㊣“???????芍?????車??
	BYTE                        byMode;          // 0 ?????????芍?? 1℅????㊣?????????芍?? 2 ????????﹞??“?芍???????∼?????????㊣???㊣&&?∼?????芍???㊣???㊣?? 
	BYTE                        byChannel;       // ㊣“???????“????
												 /********* IPC5.1.7 ???????? Begin 2014-03-21***********/
	BYTE                        bySmart;         //℅“??????﹞???0??Smart ﹞??? 1
	BYTE                        byRes1;          // ㊣???℅???    
												 /********* IPC5.1.7 ???????? End 2014-03-21***********/
	NET_VCA_DEV_INFO       struDevInfo;             //?∼???豕㊣?????
	union
	{
		struct   // ?????????芍???㊣????
		{
			DWORD   dwRelativeTime;     // ?角???㊣㊣那
			DWORD   dwAbsTime;          // ?????㊣㊣那
			BYTE    byTimeDiffFlag;      /*?㊣??℅?????﹞????∫  0-?㊣?????∫?? 1-?㊣?????∫ */
			char    cTimeDifferenceH;         /*??UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????,??byTimeDiffFlag??1?㊣???∫*/
			char    cTimeDifferenceM;      	/*??UTC???㊣???“﹞???????-30, 30, 45?? +㊣赤????????byTimeDiffFlag??1?㊣???∫*/
			BYTE    byRes[89];
		}struStatFrame;
		struct
		{
			NET_DVR_TIME                      tmStart; // ?????????㊣?? 
			NET_DVR_TIME                      tmEnd;  //  ?????芍???㊣?? 
			BYTE	        byTimeDifferenceFlag;   /*0-??????????cStartTimeDifferenceH,???㊣?????????∫??1-?㊣?????????∫*/
			char            cStartTimeDifferenceH;      /*?????㊣????UTC???㊣???“???㊣????-12 ... +14??+㊣赤??????*/
			char            cStartTimeDifferenceM;      /*?????㊣????UTC???㊣???“﹞???????-30, 30, 45??+㊣赤??????*/
			char            cStopTimeDifferenceH;        /*?芍???㊣????UTC???㊣???“???㊣????-12 ... +14??+㊣赤??????*/
			char            cStopTimeDifferenceM;       /*?芍???㊣????UTC???㊣???“﹞???????-30, 30, 45??+㊣赤??????*/
			BYTE            byRes[87];
		}struStatTime;
	}uStatModeParam;  // ℅‾???????????? ???????㊣?辰??????????㊣那???? ℅????㊣?????????芍???豕???????㊣?? ????
	DWORD                       dwLeaveNum;        // ????????
	DWORD                       dwEnterNum;        // ????????
	BYTE                        byBrokenNetHttp;     //????????㊣那??????0-??????????????1-????????
	BYTE                        byRes3;
	WORD                        wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx
	DWORD                       dwPassingNum;        // ?????????“???????辰?車??????????﹞???????????????????
	BYTE                        byRes2[32];           // ㊣???℅???
}NET_DVR_PDC_ALRAM_INFO, *LPNET_DVR_PDC_ALRAM_INFO;


//  ???‾???????谷?? 
typedef struct tagNET_DVR_PDC_QUERY
{
	NET_DVR_TIME tmStart;
	NET_DVR_TIME tmEnd;
	DWORD       dwLeaveNum;
	DWORD       dwEnterNum;
	BYTE        byRes1[256];
}NET_DVR_PDC_QUERY, *LPNET_DVR_PDC_QUERY;

typedef struct tagNET_DVR_POSITION_RULE_CFG
{
	DWORD                   dwSize;             // ?芍???車?? 
	NET_DVR_PTZ_POSITION    struPtzPosition;    // ???∼????????
	NET_VCA_RULECFG         struVcaRuleCfg;     //???????辰????
	BYTE                    byRes2[80];         // ㊣???℅???
}NET_DVR_POSITION_RULE_CFG, *LPNET_DVR_POSITION_RULE_CFG;

typedef struct tagNET_DVR_POSITION_RULE_CFG_V41
{
	DWORD                   dwSize;             // ?芍???車?? 
	NET_DVR_PTZ_POSITION    struPtzPosition;    // ???∼????????
	NET_VCA_RULECFG_V41         struVcaRuleCfg;     //???????辰????
	BYTE  byTrackEnable; //??﹞??????迆℅?
	BYTE  byRes1;
	WORD wTrackDuration; //?迆℅??????㊣????????s
	BYTE                    byRes2[76];         // ㊣???℅???
}NET_DVR_POSITION_RULE_CFG_V41, *LPNET_DVR_POSITION_RULE_CFG_V41;


typedef struct tagNET_DVR_LIMIT_ANGLE
{
	BYTE                byEnable;    // ??﹞????????∼????????
	BYTE                byRes1[3];
	NET_DVR_PTZPOS      struUp;     // ??????
	NET_DVR_PTZPOS      struDown;   // ??????
	NET_DVR_PTZPOS      struLeft;   // ℅車????
	NET_DVR_PTZPOS      struRight;  // ??????
	BYTE                byRes2[20];
}NET_DVR_LIMIT_ANGLE, *LPNET_DVR_LIMIT_ANGLE;

typedef struct tagNET_DVR_POSITION_INDEX
{
	BYTE    byIndex;    // ???∼?‾??
	BYTE    byRes1;
	WORD    wDwell;    // ?????㊣?? 
	BYTE    byRes2[4];   // ㊣???℅???
}NET_DVR_POSITION_INDEX, *LPNET_DVR_POSITION_INDEX;

#define  MAX_POSITION_NUM 10
typedef struct tagNET_DVR_POSITION_TRACK_CFG
{
	DWORD dwSize;
	BYTE    byNum; // ???∼????
	BYTE    byRes1[3];
	NET_DVR_POSITION_INDEX   struPositionIndex[MAX_POSITION_NUM];
	BYTE    byRes2[8];
}NET_DVR_POSITION_TRACK_CFG, *LPNET_DVR_POSITION_TRACK_CFG;

//?????﹞?????∼????
typedef struct tagNET_DVR_PATROL_SCENE_INFO
{
	WORD   wDwell;         // ?????㊣?? 30-300
	BYTE   byPositionID;   // ???∼??1-10??????0㊣赤?????????????赤?????∼
	BYTE   byRes[5];
}NET_DVR_PATROL_SCENE_INFO, *LPNET_DVR_PATROL_SCENE_INFO;

// ???∼?????迆℅?????????
typedef struct tagNET_DVR_PATROL_TRACKCFG
{
	DWORD  dwSize;                                 // ?芍???車??
	NET_DVR_PATROL_SCENE_INFO struPatrolSceneInfo[10];    // ?????﹞??
	BYTE   byRes[16];                              // ㊣???℅???
}NET_DVR_PATROL_TRACKCFG, *LPNET_DVR_PATROL_TRACKCFG;

//?辰?迆㊣??????辰?????????芍????
typedef struct tagNET_DVR_TRACK_PARAMCFG
{
	DWORD   dwSize;             // ?芍???車??
	WORD    wAlarmDelayTime;    // ㊣“?????㊣?㊣???????∼?辰?迆???∫?????????? ﹞??∫1-120??
	WORD    wTrackHoldTime;     // ㊣“???迆℅??????㊣??  ﹞??∫0-300??
	BYTE    byTrackMode;        //  ???? IPDOME_TRACK_MODE
	BYTE     byPreDirection;    // ?迆℅?﹞??辰?∟?? 0-?????? 1-????
	BYTE      byTrackSmooth;        // ?迆℅?????  0-?????? 1-????
	BYTE     byZoomAdjust;    // ㊣????????‾?? ??????㊣赤
	BYTE    byMaxTrackZoom;    //℅??車?迆℅?㊣???????,0-㊣赤??????㊣???????,????6-㊣那?“??*1.0(????),1-5??????㊣那?“??????????????????㊣??????車,7-15??﹞??車???????車??﹞??車??㊣??????車
	BYTE   byStopTrackWhenFindFace;  //?????足?????車??﹞??????迆℅? 0-﹞? 1-??
	BYTE   byStopTrackThreshold;   //?迆℅???????﹞?????
	BYTE   byRes[9];          //  ㊣???℅???                
}NET_DVR_TRACK_PARAMCFG, *LPNET_DVR_TRACK_PARAMCFG;

// ?辰?迆?迆??????
typedef struct tagNET_DVR_DOME_MOVEMENT_PARAM
{
	WORD wMaxZoom;   // ?辰?迆℅??車㊣???????
	BYTE    byRes[42];  // ㊣???℅???
}NET_DVR_DOME_MOVEMENT_PARAM, *LPNET_DVR_DOME_MOVEMENT_PARAM;

/********************************???????“???? begin****************************************/
#define  MAX_REGION_NUM            8       // ???辰??㊣赤℅??車????
#define  MAX_TPS_RULE            8       // ℅??車???????辰????
#define  MAX_AID_RULE            8      // ℅??車???????辰????
#define  MAX_LANE_NUM            8        // ℅??車????????

//???“?????角????
typedef enum tagTRAFFIC_AID_TYPE
{
	CONGESTION = 0x01,    //????
	PARKING = 0x02,    //????  
	INVERSE = 0x04,    //????
	PEDESTRIAN = 0x08,    //????                      
	DEBRIS = 0x10,    //?????? ?℅?‾???谷?? 
	SMOKE = 0x20,    //???赤  
	OVERLINE = 0x40,     //????
	VEHICLE_CONTROL_LIST = 0x80,  //??????????
	SPEED = 0x100,  //????
	LANECHANGE = 0x200,      //㊣???
	TURNAROUND = 0x400,     //???﹞
	VEHICLE_OCCUPANCY_NONVEHICLE = 0x800, //?迆????????﹞??迆??????
	GASSER = 0x1000,   //????
	ROADBLOCK = 0x2000,   //?﹞??
	CONSTRUCTION = 0x4000,    //???∟
	TRAFFIC_ACCIDENT = 0x8000,    //???“?????足???“???“???????∼??℅???????????℅﹞????????????﹞“???????????????足???????????????????????辰㊣“????
	PARALLEL_PARKING = 0x10000,   //?角﹞????????足??
	FOG_DETECTION = 0x20000,       //?“?赤?足??
	OCCUPY_EMERGENCY_LANE = 0x40000, //???????㊣????
	CONFLAGRATION = 0X80000,     //????
}TRAFFIC_AID_TYPE;

typedef enum tagTRAFFIC_SCENE_MODE
{
	FREEWAY = 0,    //  ?????∫?????∼
	TUNNEL,         //  ?????赤?????∼
	BRIDGE          //  ???????????∼
}TRAFFIC_SCENE_MODE;

typedef enum tagITS_ABILITY_TYPE
{
	ITS_CONGESTION_ABILITY = 0x01,      //????
	ITS_PARKING_ABILITY = 0x02,      //????  
	ITS_INVERSE_ABILITY = 0x04,      //????
	ITS_PEDESTRIAN_ABILITY = 0x08,      //????                      
	ITS_DEBRIS_ABILITY = 0x10,      //?????? ?℅?‾???谷??
	ITS_SMOKE_ABILITY = 0x20,      //???赤-?赤??
	ITS_OVERLINE_ABILITY = 0x40,      //????
	ITS_VEHICLE_CONTROL_LIST_ABILITY = 0x80,        //??????????
	ITS_SPEED_ABILITY = 0x100,        //????        
	ITS_LANECHANGE_ABILITY = 0x200,     //㊣???
	ITS_TURNAROUND_ABILITY = 0x400,      //???﹞
	ITS_LANE_VOLUME_ABILITY = 0x010000,  //?????‾??
	ITS_LANE_VELOCITY_ABILITY = 0x020000,  //???????迄????
	ITS_TIME_HEADWAY_ABILITY = 0x040000,  //???﹞?㊣?角
	ITS_SPACE_HEADWAY_ABILITY = 0x080000,  //???﹞???角
	ITS_TIME_OCCUPANCY_RATIO_ABILITY = 0x100000,  //?????????????“?㊣????)
	ITS_SPACE_OCCUPANCY_RATIO_ABILITY = 0x200000,  //????????????∼?﹞?㊣??????“??????)
	ITS_LANE_QUEUE_ABILITY = 0x400000,  //?????∟??
	ITS_VEHICLE_TYPE_ABILITY = 0x800000,  //?????角??
	ITS_TRAFFIC_STATE_ABILITY = 0x1000000  //???“℅???
}ITS_ABILITY_TYPE;

// ???“????????
typedef enum tagITS_TPS_TYPE
{
	LANE_VOLUME = 0x01,    //?????‾??
	LANE_VELOCITY = 0x02,    //????????
	TIME_HEADWAY = 0x04,    //???﹞?㊣?角
	SPACE_HEADWAY = 0x08,    //???﹞???角
	TIME_OCCUPANCY_RATIO = 0x10,    //?????????? (?㊣????)
	SPACE_OCCUPANCY_RATIO = 0x20,    //????????????∼?﹞?㊣?????(??????)
	QUEUE = 0x40,    //?????∟??
	VEHICLE_TYPE = 0x80,    //?????角??
	TRAFFIC_STATE = 0x100    //???“℅???
}ITS_TPS_TYPE;

typedef struct tagNET_DVR_REGION_LIST
{
	DWORD    dwSize;    // ?芍?????車??
	BYTE    byNum;      // ???辰????
	BYTE    byRes1[3];    // ㊣???℅???
	NET_VCA_POLYGON struPolygon[MAX_REGION_NUM]; // ???辰
	BYTE    byRes2[20];    // ㊣???℅???
}NET_DVR_REGION_LIST, *LPNET_DVR_REGION_LIST;


// ﹞??辰?芍????
typedef struct tagNET_DVR_DIRECTION
{
	NET_VCA_POINT struStartPoint;   // ﹞??辰??????
	NET_VCA_POINT struEndPoint;     // ﹞??辰?芍???? 
}NET_DVR_DIRECTION, *LPNET_DVR_DIRECTION;

// ????????
typedef struct tagNET_DVR_ONE_LANE
{
	BYTE    byEnable;                   // ??????﹞?????
	BYTE    byRes1[11];                    // ㊣???℅???
	BYTE    byLaneName[NAME_LEN];       // ???????辰????
	NET_DVR_DIRECTION struFlowDirection;// ?????????‾﹞??辰
	NET_VCA_POLYGON struPolygon;        // ???????辰
}NET_DVR_ONE_LANE, *LPNET_DVR_ONE_LANE;

// ????????
typedef struct tagNET_DVR_LANE_CFG
{
	DWORD    dwSize;    // ?芍?????車??
	NET_DVR_ONE_LANE struLane[MAX_LANE_NUM];    // ???????? ??℅谷??㊣那℅‾??????ID??
	BYTE    byRes1[40];     // ㊣???℅???
}NET_DVR_LANE_CFG, *LPNET_DVR_LANE_CFG;

// ???“????????
typedef struct tagNET_DVR_AID_PARAM
{
	WORD    wParkingDuration;       // ?????足???谷????  10-120s
	WORD    wPedestrianDuration;    // ?????????㊣??    1-120s
	WORD    wDebrisDuration;        // ?℅?‾???????㊣??  10-120s
	WORD    wCongestionLength;      // ?????∟??????    5-200?“?℅??
	WORD    wCongestionDuration;    // ????????????    10-120s
	WORD    wInverseDuration;       // ?????????㊣??    1-10s
	WORD    wInverseDistance;       // ?????角?????? ????m ﹞??∫[2-100] ???? 10?℅
	WORD    wInverseAngleTolerance; // ???赤???????? 90-180??,???‾?????????赤??????
	WORD    wIllegalParkingTime;    // ?????㊣??[4,60]????????﹞??? ,TFS(???“???????∟) ??????????
	WORD    wIllegalParkingPicNum;  // ????????????[1,6], TFS(???“???????∟) ??????????
	BYTE    byMergePic;             // ????????,TFS ?????????? 0- ?????? 1- ????
	BYTE    byRes1[23];             // ㊣???℅???
}NET_DVR_AID_PARAM, *LPNET_DVR_AID_PARAM;

// ???????“???????辰?芍????
typedef struct tagNET_DVR_ONE_AID_RULE
{
	BYTE    byEnable;                   // ??﹞????????????辰
	BYTE    byRes1[3];                  // ㊣???℅???
	BYTE    byRuleName[NAME_LEN];       // ???辰???? 
	DWORD   dwEventType;                // ???“?????足???角?? TRAFFIC_AID_TYPE
	NET_VCA_SIZE_FILTER struSizeFilter; // ?????????‾
	NET_VCA_POLYGON     struPolygon;    // ???辰???辰
	NET_DVR_AID_PARAM   struAIDParam;   //  ????????
	NET_DVR_SCHEDTIME   struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_2];//??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;      //???赤﹞??? 
	BYTE byRelRecordChan[MAX_CHANNUM_V30];        //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	BYTE byRes2[20];
}NET_DVR_ONE_AID_RULE, *LPNET_DVR_ONE_AID_RULE;

// ???“???????辰
typedef struct tagNET_DVR_AID_RULECFG
{
	DWORD   dwSize;                    // ?芍?????車?? 
	BYTE    byPicProType;              //㊣“???㊣???????赤﹞??? 0-?????赤 ﹞?0-????
	BYTE    byRes1[3];                 // ㊣???℅???
	NET_DVR_JPEGPARA struPictureParam; //?????????芍??
	NET_DVR_ONE_AID_RULE  struOneAIDRule[MAX_AID_RULE];
	BYTE    byRes2[32];
}NET_DVR_AID_RULECFG, *LPNET_DVR_AID_RULECFG;

// ???????“???????辰?芍????(????)
typedef struct tagNET_DVR_ONE_AID_RULE_V41
{
	BYTE                        byEnable;                 // ??﹞????????????辰
	BYTE                        byLaneNo;                 // ??????????
	BYTE                        byRes1[2];                // ㊣???℅???
	BYTE                        byRuleName[NAME_LEN];     // ???辰???? 
	DWORD                       dwEventType;              // ???“?????足???角?? TRAFFIC_AID_TYPE
	NET_VCA_SIZE_FILTER         struSizeFilter;           // ?????????‾
	NET_VCA_POLYGON             struPolygon;              // ???辰???辰
	NET_DVR_AID_PARAM           struAIDParam;             // ????????
	NET_DVR_SCHEDTIME           struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];// ??﹞??㊣????
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;              //???赤﹞??? 
	BYTE                        byRelRecordChan[MAX_IVMS_IP_CHANNEL]; //㊣“????﹞??????車?“????1㊣赤????﹞????“????0㊣赤??????﹞? 
	BYTE                        byRes2[60];               //㊣???
}NET_DVR_ONE_AID_RULE_V41, *LPNET_DVR_ONE_AID_RULE_V41;

// ???“???????辰(????)
typedef struct tagNET_DVR_AID_RULECFG_V41
{
	DWORD   dwSize;                     // ?芍?????車?? 
	BYTE    byPicProType;               // ㊣“???㊣???????赤﹞??? 0-?????赤 ﹞?0-????
	BYTE    byRes1[3];                  // ㊣???℅???
	NET_DVR_JPEGPARA struPictureParam;     // ?????????芍??
	NET_DVR_ONE_AID_RULE_V41  struAIDRule[MAX_AID_RULE];  //???辰??℅谷
	BYTE    byRes2[128];                //㊣???
} NET_DVR_AID_RULECFG_V41, *LPNET_DVR_AID_RULECFG_V41;

// ???“?????????芍????
typedef struct tagNET_DVR_ONE_TPS_RULE
{
	BYTE    byEnable;                   //??﹞????????????“???辰????
	BYTE    byLaneID;                    //????ID
	BYTE    byRes1[2];
	DWORD   dwCalcType;                 //?????????角??ITS_TPS_TYPE
	NET_VCA_SIZE_FILTER struSizeFilter; //?????????‾ 
	NET_VCA_POLYGON struVitrualLoop;    //?谷??????
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_2];//??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;    //???赤﹞???,??∼??????赤??﹞??????????????????????豕??
	BYTE    byRes2[20];                         //㊣???℅???
}NET_DVR_ONE_TPS_RULE, *LPNET_DVR_ONE_TPS_RULE;

// ???“???????????辰?????芍????
typedef struct tagNET_DVR_TPS_RULECFG
{
	DWORD   dwSize;              // ?芍???車??
	NET_DVR_ONE_TPS_RULE struOneTpsRule[MAX_TPS_RULE]; // ??㊣那???????“????ID
	BYTE    byRes2[40];         // ㊣???℅???
}NET_DVR_TPS_RULECFG, *LPNET_DVR_TPS_RULECFG;

// ???“?????????芍????(????)
typedef struct tagNET_DVR_ONE_TPS_RULE_V41
{
	BYTE    byEnable;                     //??﹞????????????“???辰????
	BYTE    byLaneID;                      //????ID
	BYTE    byRes1[2];                    //㊣???
	DWORD   dwCalcType;                   // ?????????角??ITS_TPS_TYPE
	NET_VCA_SIZE_FILTER  struSizeFilter;  //?????????‾ 
	NET_VCA_POLYGON      struVitrualLoop; //?谷??????
	NET_DVR_SCHEDTIME    struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;       //???赤﹞??? 
	BYTE    byRes2[60];                   // ㊣???℅???
}NET_DVR_ONE_TPS_RULE_V41, *LPNET_DVR_ONE_TPS_RULE_V41;


// ???“???????????辰?????芍????(????)
typedef struct tagNET_DVR_TPS_RULECFG_V41
{
	DWORD   dwSize;         // ?芍???車??
	NET_DVR_ONE_TPS_RULE_V41 struOneTpsRule[MAX_TPS_RULE]; // ??㊣那???????“????ID
	BYTE    byRes[128];     // ㊣???
}NET_DVR_TPS_RULECFG_V41, *LPNET_DVR_TPS_RULECFG_V41;

// ???“????????
typedef struct tagNET_DVR_AID_INFO
{
	BYTE            byRuleID;   // ???辰?辰?????????辰?????芍????㊣那??0-16
	BYTE            byRes1[3];
	BYTE            byRuleName[NAME_LEN]; //  ???辰????
	DWORD           dwAIDType;  // ㊣“???????角??
	NET_DVR_DIRECTION   struDirect; // ㊣“?????辰???辰  
	BYTE    bySpeedLimit; //????????????km/h[0,255]
	BYTE    byCurrentSpeed; //?㊣?∼????????????km/h[0,255]
	BYTE    byVehicleEnterState;//????????℅??? 0-???∫ 1-???? 2-????
	BYTE            byState; //0-㊣?????????1-????????
	BYTE            byParkingID[16]; //??????㊣角??
	BYTE            byRes2[20];  // ㊣???℅??? 
}NET_DVR_AID_INFO, *LPNET_DVR_AID_INFO;

// ???“????㊣“?? 
typedef struct tagNET_DVR_AID_ALARM
{
	DWORD               dwSize;         // ?芍???∟??
	DWORD               dwRelativeTime;    // ?角???㊣㊣那
	DWORD               dwAbsTime;        // ?????㊣㊣那
	NET_VCA_DEV_INFO      struDevInfo;    // ?∼???豕㊣?????
	NET_DVR_AID_INFO    struAIDInfo;    // ???“????????
	DWORD               dwPicDataLen;   // ﹞??????????∟?? ??0㊣赤?????????????車??0㊣赤?????芍???車?????迆????????
	BYTE                *pImage;        // ???辰?????????? 
	BYTE                byRes[40];      // ㊣???℅???  
}NET_DVR_AID_ALARM, *LPNET_DVR_AID_ALARM;

// ?????????芍???? 
typedef struct tagNET_DVR_LANE_QUEUE
{
	NET_VCA_POINT   struHead;       //?????﹞
	NET_VCA_POINT   struTail;       //??????
	DWORD           dwLength;      //?????????∟?? ???????℅ [0-500]
}NET_DVR_LANE_QUEUE, *LPNET_DVR_LANE_QUEUE;

typedef enum tagTRAFFIC_DATA_VARY_TYPE
{
	NO_VARY,         //??㊣??? 
	VEHICLE_ENTER,   //?????????谷??????
	VEHICLE_LEAVE,   //?????????谷?????? 
	UEUE_VARY        //????㊣???             
}TRAFFIC_DATA_VARY_TYPE;

typedef struct tagNET_DVR_LANE_PARAM
{
	BYTE    byRuleName[NAME_LEN];  //???????辰???? 
	BYTE    byRuleID;              //???辰?辰?????????辰?????芍????㊣那??0-7 
	BYTE    byVaryType;            //???????“????㊣????角?? ???? TRAFFIC_DATA_VARY_TYPE
	BYTE    byLaneType;               //?????????辰????
	BYTE    byRes1;
	DWORD    dwLaneVolume;         //?????‾?? ?????????角????℅??“??
	DWORD   dwLaneVelocity;        //??????????????????
	DWORD   dwTimeHeadway;         //???﹞?㊣?角??????????
	DWORD   dwSpaceHeadway;        //???﹞???角?????℅??????
	float   fSpaceOccupyRation;    //????????????∼?﹞?㊣??????“??????)
	NET_DVR_LANE_QUEUE  struLaneQueue;    //?????????∟??
	NET_VCA_POINT       struRuleLocation; //???????辰????????????
	BYTE    byRes2[32];
}NET_DVR_LANE_PARAM, *LPNET_DVR_LANE_PARAM;


typedef struct tagNET_DVR_TPS_INFO
{
	DWORD   dwLanNum;   // ???“??????????????
	NET_DVR_LANE_PARAM  struLaneParam[MAX_TPS_RULE];
}NET_DVR_TPS_INFO, *LPNET_DVR_TPS_INFO;

typedef struct tagNET_DVR_TPS_ALARM
{
	DWORD             dwSize;          //?芍?????車??
	DWORD             dwRelativeTime;  //?角???㊣㊣那
	DWORD             dwAbsTime;       //?????㊣㊣那
	NET_VCA_DEV_INFO  struDevInfo;     //?∼???豕㊣?????
	NET_DVR_TPS_INFO  struTPSInfo;     //???“????????
	BYTE              byRes1[32];      //㊣???℅???
}NET_DVR_TPS_ALARM, *LPNET_DVR_TPS_ALARM;

typedef enum tagTRAFFIC_DATA_VARY_TYPE_EX_ENUM
{
	ENUM_TRAFFIC_VARY_NO = 0x00,   //??㊣???
	ENUM_TRAFFIC_VARY_VEHICLE_ENTER = 0x01,   //?????????谷??????
	ENUM_TRAFFIC_VARY_VEHICLE_LEAVE = 0x02,   //?????????谷??????
	ENUM_TRAFFIC_VARY_QUEUE = 0x04,   //????㊣???
	ENUM_TRAFFIC_VARY_STATISTIC = 0x08,   //????????㊣????“??﹞???㊣???????∼邦?“???迄??????????????/?㊣?????????????“℅?????        
}TRAFFIC_DATA_VARY_TYPE_EX_ENUM;

typedef struct tagNET_DVR_LANE_PARAM_V41
{
	BYTE               byRuleName[NAME_LEN]; // ???????辰????
	BYTE               byRuleID;             // ???辰?辰?????????辰?????芍????㊣那??0-7 
	BYTE               byLaneType;             // ?????????辰????
	BYTE               byTrafficState;       // ?????????“℅?????0-???∫??1-???“??2-???﹞??3-????
	BYTE               byLaneNo;            //??????
	DWORD              dwVaryType;           // ???????“????㊣????角??????  TRAFFIC_DATA_VARY_TYPE_EX_ENUM??∼?????﹞?
	DWORD              dwTpsType;            // ????㊣????角??㊣那????㊣赤???㊣?∼?????????????????????????????∫??????ITS_TPS_TYPE,∼?????﹞?
	DWORD              dwLaneVolume;         // ?????‾???????????角????℅??“??
	DWORD              dwLaneVelocity;       // ??????????????????
	DWORD              dwTimeHeadway;       // ???﹞?㊣?角??????????
	DWORD              dwSpaceHeadway;       // ???﹞???角?????℅??????
	float              fSpaceOccupyRation;   // ????????????∼?﹞?㊣??????“??????)
	float              fTimeOccupyRation;    // ?㊣??????????∼?﹞?㊣?????
	DWORD              dwLightVehicle;       // ??????????
	DWORD              dwMidVehicle;         // ??????????
	DWORD              dwHeavyVehicle;       // ??????????
	NET_DVR_LANE_QUEUE struLaneQueue;        // ?????????∟??
	NET_VCA_POINT      struRuleLocation;     // ???辰?????谷????????????
	DWORD               dwOversizeVehicle;    // ?車????????
	BYTE               byRes2[60];           // ㊣???
}NET_DVR_LANE_PARAM_V41, *LPNET_DVR_LANE_PARAM_V41;


typedef struct tagNET_DVR_TPS_INFO_V41
{
	DWORD                   dwLanNum;          // ???“??????????????
	NET_DVR_LANE_PARAM_V41  struLaneParam[MAX_TPS_RULE];
	DWORD                   dwSceneID;//???∼ID
	BYTE                    byRes[28];         //㊣???
}NET_DVR_TPS_INFO_V41, *LPNET_DVR_TPS_INFO_V41;

// ???????辰???? 
typedef struct tagNET_DVR_FACEDETECT_RULECFG
{
	DWORD          dwSize;              // ?芍?????車??
	BYTE           byEnable;            // ??﹞?????
	BYTE           byEventType;            //?????????角???? 0-?足??????; 1-????????;2-?足??????&????????;4-?角??????&?足??????;5-?角??????&????????; 6-?角??????&?足??????&????????; 7-?角?????? 
	BYTE           byUpLastAlarm;       //2011-04-06 ??﹞???????℅??邦??????㊣“??
	BYTE           byUpFacePic; //??﹞?????????℅?????0-﹞???1-??    
	BYTE           byRuleName[NAME_LEN];
	NET_VCA_POLYGON     struVcaPolygon;    // ?????足?????辰???辰
	BYTE           byPicProType;    //㊣“???㊣???????赤﹞??? 0-?????赤 ﹞?0-????
	BYTE           bySensitivity;   // ???辰?谷????
	WORD            wDuration;      // ??﹞?????㊣“???㊣??????
	NET_DVR_JPEGPARA    struPictureParam;         //?????????芍??
	NET_VCA_SIZE_FILTER struSizeFilter;         //?????????‾
	NET_DVR_SCHEDTIME   struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_2];//??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;      //???赤﹞??? 
	BYTE           byRelRecordChan[MAX_CHANNUM_V30];            //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	BYTE           byPicRecordEnable;  /*2012-3-1??﹞?????????????, 0-??????, 1-????*/
	BYTE           byRes1[3];         //㊣???℅???
									  /*
									  ?????????角?????“???∼?????角??∼???㊣赤??????????????????1???辰??????????℅谷????
									  0x00: ???∫
									  0x01: ?足??????
									  0x02: ????????
									  0x04: ?角??????
									  0x08: ?‾????????
									  0x10: ?辰???∼????
									  */
	DWORD          dwEventTypeEx; //dwEventTypeEx℅???????0?㊣??byEventType℅????迆?∫????dwEventTypeEx??byEventType℅??????????㊣????dwEventTypeEx℅?????℅???????????dwEventTypeEx℅????車???芍??????????byEventType????
	BYTE            byRes2[32];         //㊣???℅???
}NET_DVR_FACEDETECT_RULECFG, *LPNET_DVR_FACEDETECT_RULECFG;

typedef struct tagNET_DVR_FACE_PIPCFG
{
	BYTE byEnable; //??﹞???????????
	BYTE byBackChannel; //㊣??∼?“?????“??∼??“????
	BYTE byPosition; //??????????0-℅車??,1-℅車??,2-????,3-????
	BYTE byPIPDiv; //﹞???????(????????:??∼?????)??0-1:4,1-1:9,2-1:16
	BYTE byRes[4];
}NET_DVR_FACE_PIPCFG, *LPNET_DVR_FACE_PIPCFG;

typedef struct tagNET_DVR_FACEDETECT_RULECFG_V41
{
	DWORD dwSize;              // ?芍?????車??
	BYTE  byEnable;            // ??﹞?????
	BYTE  byEventType;            //?????????角???? 0-?足??????; 1-????????;2-?足??????&????????;4-?角??????&?足??????;5-?角??????&????????; 6-?角??????&?足??????&????????; 7-?角?????? 
	BYTE  byUpLastAlarm;       //2011-04-06 ??﹞???????℅??邦??????㊣“??
	BYTE  byUpFacePic; //??﹞?????????℅?????0-﹞???1-??    
	BYTE  byRuleName[NAME_LEN];
	NET_VCA_POLYGON struVcaPolygon;    // ?????足?????辰???辰
	BYTE  byPicProType;    //㊣“???㊣???????赤﹞??? 0-?????赤 ﹞?0-????
	BYTE  bySensitivity;   // ???辰?谷????
	WORD  wDuration;      // ??﹞?????㊣“???㊣??????
	NET_DVR_JPEGPARA    struPictureParam;         //?????????芍??
	NET_VCA_SIZE_FILTER struSizeFilter;         //?????????‾
	NET_DVR_SCHEDTIME   struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;      //???赤﹞??? 
	BYTE  byRelRecordChan[MAX_CHANNUM_V30];            //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	BYTE  byPicRecordEnable;  /*2012-10-22??﹞?????????????, 0-??????, 1-????*/
	BYTE  byRes1;
	WORD  wAlarmDelay; //2012-10-22????㊣“?????㊣??0-5s,1-10,2-30s,3-60s,4-120s,5-300s,6-600s
	NET_DVR_FACE_PIPCFG struFacePIP; //2012-11-7??????????
	WORD  wRelSnapChan[MAX_REL_SNAPCHAN_NUM]; //????℅????“?????㊣?‾?“??㊣“???㊣?????㊣?芍?????????“????℅?????????0㊣赤???????????????????????“????
	BYTE  byRes2[2];         //㊣???℅???
							 /*
							 ?????????角?????“???∼?????角??∼???㊣赤??????????????????1???辰??????????℅谷????
							 0x00: ???∫
							 0x01: ?足??????
							 0x02: ????????
							 0x04: ?角??????
							 0x08: ?‾????????
							 0x10: ?辰???∼????
							 */
	DWORD dwEventTypeEx; //dwEventTypeEx℅???????0?㊣??byEventType℅????迆?∫????dwEventTypeEx??byEventType℅??????????㊣????dwEventTypeEx℅?????℅???????????dwEventTypeEx℅????車???芍??????????byEventType????
	BYTE  byRes[16];         //㊣???℅???
}NET_DVR_FACEDETECT_RULECFG_V41, *LPNET_DVR_FACEDETECT_RULECFG_V41;

typedef struct tagNET_DVR_FACEDETECT_ALARM
{
	DWORD   dwSize;         //?芍???車??
	DWORD     dwRelativeTime; //?角???㊣㊣那
	DWORD    dwAbsTime;        //?????㊣㊣那
	BYTE    byRuleName[NAME_LEN];   //???辰????
	NET_VCA_TARGET_INFO  struTargetInfo;//㊣“????㊣那????
	NET_VCA_DEV_INFO       struDevInfo;//?∼???豕㊣?????
	DWORD   dwPicDataLen;    //﹞??????????∟?? ??0㊣赤?????????????車??0㊣赤?????芍???車?????迆????????*/
	BYTE    byAlarmPicType;    // 0-?足??????㊣“?????? 1- ????????,2-?角??????, 3-?‾????????, 4-?辰???∼???? 
	BYTE    byPanelChan;    /*2012-3-1?????“??????????∼??“??*/
	BYTE    byRelAlarmPicNum; //?????“??㊣“??????????
	BYTE    byRes1;
	DWORD   dwFacePicDataLen;//???????????∟?? ??0㊣赤?????????????車??0㊣赤?????芍???車?????迆????????*/
	DWORD   dwAlarmID;    //㊣“??ID??????㊣那???“?????????迆?迆??℅谷??㊣“????0㊣赤?????∫
	WORD    wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE    byRes2[42];   // ㊣???℅???
	BYTE    *pFaceImage; //???辰??????????
	BYTE    *pImage;                           //???辰??????????
}NET_DVR_FACEDETECT_ALARM, *LPNET_DVR_FACEDETECT_ALARM;

typedef struct tagNET_DVR_EVENT_PARAM_UNION
{
	DWORD   uLen[3];            // ???????車????12℅???
	DWORD  dwHumanIn;      //?????????邦 0 - ???? 1- ????  
	float       fCrowdDensity;  // ???㊣??????
}NET_DVR_EVENT_PARAM_UNION, *LPNET_DVR_EVENT_PARAM_UNION;

// ???∼?????????????????????㊣???????????㊣㊣“??????
typedef struct tagNET_DVR_EVENT_INFO
{
	BYTE   byRuleID;                // Rule ID
	BYTE   byRes[3];                // ㊣???℅???
	BYTE   byRuleName[NAME_LEN];    // ???辰????
	DWORD       dwEventType;            // ????VCA_EVENT_TYPE
	NET_DVR_EVENT_PARAM_UNION uEventParam;  // 
}NET_DVR_EVENT_INFO, *LPNET_DVR_EVENT_INFO;

typedef struct tagNET_DVR_EVENT_INFO_LIST
{
	BYTE            byNum;        // ???????㊣????????
	BYTE            byRes1[3];            // ㊣???℅???
	NET_DVR_EVENT_INFO struEventInfo[MAX_RULE_NUM];    // ???????㊣????
}NET_DVR_EVENT_INFO_LIST, *LPNET_DVR_EVENT_INFO_LIST;

typedef struct tagNET_DVR_RULE_INFO_ALARM
{
	DWORD             dwSize;                // ?芍?????車??
	DWORD         dwRelativeTime;     // ?角???㊣㊣那
	DWORD        dwAbsTime;            // ?????㊣㊣那
	NET_VCA_DEV_INFO      struDevInfo;        // ?∼???豕㊣?????
	NET_DVR_EVENT_INFO_LIST struEventInfoList;    //??????????㊣赤
	BYTE            byRes2[40];            // ㊣???℅???
}NET_DVR_RULE_INFO_ALARM, *LPNET_DVR_RULE_INFO_ALARM;

//???????∼?㊣????
typedef struct tagNET_DVR_ONE_SCENE_TIME
{
	BYTE     byActive;                     //0 -???∫,1“C???∫
	BYTE     byRes1[3];                    //㊣???
	DWORD    dwSceneID;                    //???∼ID
	NET_DVR_SCHEDTIME struEffectiveTime;   //???∼???∫?㊣??
	BYTE     byRes2[16];                   //㊣???
}NET_DVR_ONE_SCENE_TIME, *LPNET_DVR_ONE_SCENE_TIME;

//???∼???∫?㊣????????
typedef struct tagNET_DVR_SCENE_TIME_CFG
{
	DWORD  dwSize;                                               //?芍???車??
	NET_DVR_ONE_SCENE_TIME struSceneTime[MAX_SCENE_TIMESEG_NUM]; //???∼?㊣??????℅谷
	BYTE   byRes[64];                                            //㊣???
}NET_DVR_SCENE_TIME_CFG, *LPNET_DVR_SCENE_TIME_CFG;


//???????∼????????
typedef struct  tagNET_DVR_ONE_SCENE_CFG_
{
	BYTE   byEnable;                 //??﹞??????????∼,0-?????? 1- ????
	BYTE   byDirection;              //?角??﹞??辰 1-??????2-??????3-???辰??4-?????辰?‾??5-?????辰㊣㊣??6-???‾?辰????7-??㊣㊣?辰????8-???邦
	BYTE   byRes1[2];                //㊣???
	DWORD  dwSceneID;                //???∼ID(????), 0 - ㊣赤???????∼???∫
	BYTE   bySceneName[NAME_LEN];    //???∼????
	NET_DVR_PTZPOS struPtzPos;       //ptz ℅?㊣那
	DWORD  dwTrackTime;              //?辰?迆?迆℅??㊣??[5,300] ????TFS(???“???∟)?????????∫
	BYTE   byRes2[24];               //㊣???
}NET_DVR_ONE_SCENE_CFG, *LPNET_DVR_ONE_SCENE_CFG;

//???∼?????芍????
typedef struct tagNET_DVR_SCENE_CFG
{
	DWORD dwSize;                                          //?芍???車??
	NET_DVR_ONE_SCENE_CFG struSceneCfg[MAX_ITS_SCENE_NUM]; //???∼????????
	BYTE   byRes[40];                                      //㊣???
}NET_DVR_SCENE_CFG, *LPNET_DVR_SCENE_CFG;

//?角???∼??℅‾????
typedef struct tagNET_DVR_SCENE_COND
{
	DWORD   dwSize;       //?芍???車??
	LONG    lChannel;     //?“????
	DWORD   dwSceneID;    //???∼ID, 0-㊣赤???????∼???∫
	BYTE    byRes[48];    //㊣???
}NET_DVR_SCENE_COND, *LPNET_DVR_SCENE_COND;

//???∟﹞???
typedef struct tagNET_DVR_FORENSICS_MODE
{
	DWORD  dwSize;      //?芍???車??
	BYTE   byMode;      // 0-???????∟ ,1-℅??????∟??2-∼?℅????迆℅??????????∟
	BYTE   byRes[23];   //㊣???
}NET_DVR_FORENSICS_MODE, *LPNET_DVR_FORENSICS_MODE;

//㊣“?????∼????
typedef struct tagNET_DVR_SCENE_INFO_
{
	DWORD           dwSceneID;              //???∼ID, 0 - ㊣赤???????∼???∫
	BYTE            bySceneName[NAME_LEN];  //???∼????
	BYTE            byDirection;            //?角??﹞??辰 1-??????2-??????3-???辰??4-?????辰?‾??5-?????辰㊣㊣??6-???‾?辰????7-??㊣㊣?辰????8-???邦
	BYTE            byRes1[3];              //㊣???
	NET_DVR_PTZPOS  struPtzPos;             //Ptz ℅?㊣那
	BYTE            byRes2[64];            //㊣???
}NET_DVR_SCENE_INFO, *LPNET_DVR_SCENE_INFO;

//???“????㊣“??(????)
typedef struct tagNET_DVR_AID_ALARM_V41
{
	DWORD              dwSize;              //?芍???∟??
	DWORD              dwRelativeTime;        //?角???㊣㊣那
	DWORD              dwAbsTime;            //?????㊣㊣那
	NET_VCA_DEV_INFO   struDevInfo;            //?∼???豕㊣?????
	NET_DVR_AID_INFO   struAIDInfo;         //???“????????
	NET_DVR_SCENE_INFO struSceneInfo;       //???∼????
	DWORD              dwPicDataLen;        //?????∟??
	BYTE               *pImage;             //???辰??????????
											// 0-?????㊣??????; 1-??????﹞????‾URL(3.7Ver)??????????????㊣???URL???????????∟??㊣???URL?∟??
	BYTE               byDataType;
	BYTE               byLaneNo;  //?????????? 
	WORD               wMilliSecond;        //?㊣㊣那????
											//?角????㊣角???“?﹞??㊣角????????㊣角????
	BYTE               byMonitoringSiteID[MONITORSITE_ID_LEN/*48*/];
	BYTE               byDeviceID[DEVICE_ID_LEN/*48*/];//?豕㊣?㊣角??
	DWORD              dwXmlLen;//XML㊣“???????∟??
	char*              pXmlBuf;// XML㊣“??????????,??XML??????EventNotificationAlert XML Block
	BYTE               byTargetType;// ?足??????㊣那?角????0~??????1~??????2~????????3~??????(?????足????﹞???)
	BYTE               byRes[19]; // ㊣???℅???   
}NET_DVR_AID_ALARM_V41, *LPNET_DVR_AID_ALARM_V41;

//???“????????㊣“??(????)
typedef struct tagNET_DVR_TPS_ALARM_V41
{
	DWORD                 dwSize;          // ?芍?????車??
	DWORD                 dwRelativeTime;  // ?角???㊣㊣那
	DWORD                 dwAbsTime;       // ?????㊣㊣那
	NET_VCA_DEV_INFO      struDevInfo;     // ?∼???豕㊣?????
	NET_DVR_TPS_INFO_V41  struTPSInfo;     // ???“???????????? 
										   //?角????㊣角???“?﹞??㊣角????????㊣角????
	BYTE           byMonitoringSiteID[MONITORSITE_ID_LEN/*48*/];
	BYTE           byDeviceID[DEVICE_ID_LEN/*48*/];//?豕㊣?㊣角?? 
	DWORD                dwStartTime;  // ?????????㊣??
	DWORD                dwStopTime;    // ?芍???????㊣??
	BYTE                   byRes[24];      // ㊣???
} NET_DVR_TPS_ALARM_V41, *LPNET_DVR_TPS_ALARM_V41;

/*******************************???????“???? end*****************************************/

#define XXX_MAJOR_VERSION      2

/* ℅?∼?㊣????????????????????芍???‾???????谷???????????????‾∼?㊣??芍???㊣??????℅??車31 */

#define XXX_SUB_VERSION        3

/* ????∼?㊣?????????bug?車??????℅??車31 */

#define XXX_REVISION_VERSION   4

typedef struct tagNET_DVR_VCA_VERSION
{
	WORD    wMajorVersion;        // ?‾∼?㊣???
	WORD    wMinorVersion;        // ??∼?㊣???
	WORD    wRevisionNumber;    // ??????
	WORD    wBuildNumber;        // ㊣角????
	WORD    wVersionYear;        //    ∼?㊣?????-?那
	BYTE    byVersionMonth;        //    ∼?㊣?????-??
	BYTE    byVersionDay;        //    ∼?㊣?????-??
	BYTE    byType;/*??﹞“???角????????0-㊣?????1-????????,2-????﹞???,3-????????,4-????℅???,5??????㊣? 6-??????㊣?,7-?∫?迆?????足??,
				   8-???辰????????,9-??????﹞???,10-∼????㊣?足??,11-?????足????﹞“??,12-???‾??????,13-(??????㊣那?芍??????﹞“)HMS,
				   14-?????????足??, 15-???㊣??????16-?????足????17-?????足????18-???㊣??????19-?????“??℅?????20-HMS?“??,21-????﹞???,
				   22-??????﹞“,23-?????足??*/
	BYTE    byRes[7];            // ㊣???℅???
}NET_DVR_VCA_VERSION, *LPNET_DVR_VCA_VERSION;


/******************************???? end***********************************/

/******************************??????㊣? begin******************************************/
typedef struct tagNET_DVR_PLATE_PARAM
{
	BYTE    byPlateRecoMode;    //??????㊣???????,??????1(??????﹞?????)
	BYTE    byBelive;            //??????????????, ????????????㊣?﹞???, ?迄??㊣??∼?????????豕??, ?車??﹞????????豕??, ???????????豕??, ?“?谷??80-90﹞??∫??
	BYTE    byRes[22];          //㊣???℅???
}NET_DVR_PALTE_PARAM, *LPNET_DVR_PALTE_PARAM;

typedef struct tagNET_DVR_PLATECFG
{
	DWORD        dwSize;
	DWORD    dwEnable;                           /* ??﹞???????????????㊣? 0??﹞? 1???? */
	BYTE    byPicProType;    //㊣“???㊣???????赤﹞??? 0-?????赤 ﹞?0-????
	BYTE    byRes1[3];  // ㊣???℅???
	NET_DVR_JPEGPARA struPictureParam;         //?????????芍??
	NET_DVR_PALTE_PARAM struPlateParam;   // ??????㊣?????????
	NET_DVR_HANDLEEXCEPTION struHandleType;       /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT];//??﹞??㊣??
	BYTE    byRelRecordChan[MAX_CHANNUM];        //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	BYTE   byRes[20];   // ㊣???℅???
}NET_DVR_PLATECFG, *LPNET_DVR_PLATECFG;

// ??????㊣??芍??℅??芍??
typedef struct tagNET_DVR_PLATE_INFO
{
	BYTE  byPlateType;                    //?????角??
	BYTE  byColor;                        //????????
	BYTE  byBright;                        //????????
	BYTE  byLicenseLen;                    //????℅?﹞?????
	BYTE  byEntireBelieve;                //??????????????????-100
	BYTE  byRegion;                       // ???辰?‾???? 0-㊣?????1-?﹞??(EU)??2-?赤?????辰(ER)??3-?﹞??&?赤????(EU&CIS) ,4-????(ME),0xff-?迄??
	BYTE  byCountry;                      // ?迆???‾??????????????COUNTRY_INDEX?“???∫??"COUNTRY_ALL = 0xff, //ALL  ????"??
	BYTE  byArea;                         //???辰?“??﹞??????‾?迆?????????辰??????∼????????? EMI_AREA
	BYTE  byPlateSize;                    //??????????0~??????1~long, 2~short(????????????)
										  /*????????㊣那???“????﹞???NET_DVR_VEHICLE_ADDINFO?芍??????,0-??????????, 1-????????????*/
	BYTE  byAddInfoFlag;
	BYTE  byRes[6];					//㊣???
#if (defined(OS_WINDOWS64) || defined(OS_POSIX64))//win64?∼linux64????????8℅???
	BYTE*  pAddInfoBuffer;
#else
									/*????????????,???辰NET_DVR_VEHICLE_ADDINFO?芍????*/
	BYTE*   pAddInfoBuffer;
	BYTE  byRes2[4];
#endif 
	char  sPlateCategory[MAX_CATEGORY_LEN/*8*/];//????????????, ??????????????????????㊣?????℅???????(???∼?????????????∫??)
	DWORD dwXmlLen;                        //XML㊣“???????∟??
	char* pXmlBuf;                      // XML㊣“??????????,㊣“???角???? COMM_ITS_PLATE_RESUL?㊣???∫????XML??????EventNotificationAlert XML Block
	NET_VCA_RECT    struPlateRect;        //????????
	char sLicense[MAX_LICENSE_LEN];        //????????,℅????????????豕?車∼???℅???????????????????℅???????????????????﹞???
	BYTE byBelieve[MAX_LICENSE_LEN];    //?‾????㊣?℅?﹞??????????????足????????"??A12345", ????????,20,30,40,50,60,70???辰㊣赤??"??"℅????﹞????????????%??"A"℅??????﹞??????????%
}NET_DVR_PLATE_INFO, *LPNET_DVR_PLATE_INFO;

typedef struct tagNET_DVR_PLATERECO_RESULE
{
	DWORD dwSize;
	DWORD    dwRelativeTime;                //?角???㊣㊣那
	DWORD    dwAbsTime;                        //?????㊣㊣那
	NET_VCA_DEV_INFO struDevInfo;           // ?∼???豕㊣?????
	NET_DVR_PLATE_INFO struPlateInfo;
	DWORD dwPicDataLen;                        //﹞??????????∟?? ??0㊣赤?????????????車??0㊣赤?????芍???車?????迆????????*/
	DWORD dwRes[4];                            //㊣??????豕????0
	BYTE  *pImage;                           //???辰??????????
}NET_DVR_PLATERECO_RESULE, *LPNET_DVR_PLATERECO_RESULE;

/******************************??????㊣? end******************************************/

/*******************************????℅??????“***********************************/
typedef struct
{
	NET_DVR_TIME strLogTime;
	DWORD    dwMajorType;    //Main type 1-alarm; 2-abnormal; 3-operation; 0xff-all 
	DWORD    dwMinorType;    //Hypo-Type 0-all;
	BYTE    sPanelUser[MAX_NAMELEN]; //user ID for local panel operation
	BYTE    sNetUser[MAX_NAMELEN];//user ID for network operation
	NET_DVR_IPADDR    struRemoteHostAddr;//remote host IP
	DWORD    dwParaType;//parameter type
	DWORD    dwChannel;//channel number
	DWORD    dwDiskNumber;//HD number
	DWORD    dwAlarmInPort;//alarm input port
	DWORD    dwAlarmOutPort;//alarm output port
	DWORD   dwInfoLen;
	BYTE    byDevSequence;//??????
	BYTE    byMacAddr[MACADDR_LEN];//MAC???﹞,6
	BYTE    sSerialNumber[SERIALNO_LEN];//?辰??????48
	char    sInfo[LOG_INFO_LEN - SERIALNO_LEN - MACADDR_LEN - 1];
}NET_DVR_LOG_MATRIX, *LPNET_DVR_LOG_MATRIX;

//2009-11-21 ????℅??????“
typedef struct tagVEDIOPLATLOG
{
	BYTE bySearchCondition;//???‾??????0-∼??????????‾??1-∼??辰???????‾??2-∼?MAC???﹞???????‾
						   //????????0-79??????℅???????????????
						   //0xff??㊣赤?????‾?迄??????????∼邦?“78K???迄??6467??
						   //0xfe??㊣赤?????‾78K??????????0xfd??℅??辰??????0xfc???辰????????
	BYTE byDevSequence;
	BYTE  sSerialNumber[SERIALNO_LEN];//?辰??????48
	BYTE  byMacAddr[MACADDR_LEN];//MAC???﹞,6
} NET_DVR_VEDIOPLATLOG, *LPNET_DVR_VEDIOPLATLOG;

typedef struct tagNET_DVR_CODESYSTEMABILITY
{
	DWORD dwSize;
	DWORD dwAbilityVersion;//??????∼?㊣???????16??㊣赤???‾∼?㊣?????16??㊣赤????∼?㊣? 
	DWORD dwSupportMaxVideoFrameRate;//????(K)
									 /*∼???:
									 0:?“?㊣??????
									 1:?“?㊣|??????﹞?????
									 2:?????足????????
									 3:??????????㊣“????????
									 4:?????足??|??????????㊣“????????
									 5:?????足??&??????????㊣“????????
									 6:????﹞?﹞???﹞???????
									 7:?????足????﹞???????
									 8:??????㊣???﹞???????
									 9:????????*/
	DWORD dwSupportRecordType;
	BYTE  bySupportLinkMode;//∼???:??0??:㊣赤???‾???‾????1??:㊣赤??℅????‾
	BYTE  bySupportStringRow;//?∫??℅?﹞?????????
	BYTE  bySupportHideNum;//?∫??????????????
	BYTE  byRes1;
	/*0-DCIF??1-CIF??2-QCIF??3-4CIF??4-2CIF??6-QVGA(320*240), 16-VGA??17-UXGA??18-SVGA??19-HD720p??20-XVGA??21-HD900p??22-SXGAp??27-HD1080i??28-2560*1920??29-1600*304??30-2048*1536??31-2448*2048??32-2448*1200??33-2448*800 ??34-XGA?“1024x768????35-SXGA?“1280x1024??*/
	BYTE  byMainStreamSupportResolution[8];//?‾???‾?∫????﹞?㊣?????∼???
	BYTE  bySubStreamSupportResolution[8];//℅????‾?∫????﹞?㊣?????∼???
	BYTE  byEventStreamSupportResolution[8];//??????﹞????‾?∫????﹞?㊣?????∼???
	BYTE  byNotSupportPreview;//??﹞??∫???∟??,1-???∫????0-?∫??
	BYTE  byNotSupportStorage;//??﹞??∫??????,1-???∫????0-?∫??
	BYTE  byRes2[98];//㊣???        
}NET_DVR_CODESYSTEMABILITY, *LPNET_DVR_CODESYSTEMABILITY;

/********************************end*******************************************/

/******************************℅????迆*******************************************/
//IO????????
typedef struct tagNET_DVR_IO_INCFG
{
	DWORD   dwSize;
	BYTE    byIoInStatus;//??????IO??℅?????0-????????1-????????2-????????????????3-????????4-??????
	BYTE    byRes[3];//㊣???℅???
}NET_DVR_IO_INCFG, *LPNET_DVR_IO_INCFG;

//IO????????
typedef struct tagNET_DVR_IO_OUTCFG
{
	DWORD   dwSize;
	BYTE    byDefaultStatus;//IO????℅?????0-????????1-?????? 
	BYTE    byIoOutStatus;//IO???∫?㊣℅?????0-????????1-????????2-????
	WORD    wAheadTime;//????IO?芍?∼?㊣????????us
	DWORD   dwTimePluse;//?????????㊣????????us
	DWORD   dwTimeDelay;//IO???∫?????㊣????????us
	BYTE    byFreqMulti;        //㊣?????????﹞??∫[1,15]
	BYTE    byDutyRate;        //????㊣???[0,40%]
	BYTE    byRes[2];
}NET_DVR_IO_OUTCFG, *LPNET_DVR_IO_OUTCFG;

//??????????
typedef struct tagNET_DVR_FLASH_OUTCFG
{
	DWORD  dwSize;
	BYTE   byMode;//????????????????0-??????1-????2-????????3-????
	BYTE   byRelatedIoIn;//????????????????IO???“???????㊣?????????∫??
	BYTE   byRecognizedLane;  /*??????IO????∼???㊣赤????bit0㊣赤??IO1??﹞???????0-????????1-????*/
	BYTE   byDetectBrightness;/*℅????足????????????????0-???足????1-?足??*/
	BYTE   byBrightnessThreld;/*????????????????????﹞??∫[0,100],??????????*/
	BYTE   byStartHour;        //?????㊣??-???㊣,????﹞??∫0-23
	BYTE   byStartMinute;        //?????㊣??-﹞?,????﹞??∫0-59
	BYTE   byEndHour;             //?芍???㊣??-???㊣,????﹞??∫0-23
	BYTE   byEndMinute;        //?芍???㊣??-﹞?,????﹞??∫0-59
	BYTE   byFlashLightEnable;    //?豕?????????㊣??????:0-??;1-??
	BYTE   byRes[2];
}NET_DVR_FLASH_OUTCFG, *LPNET_DVR_FLASH_OUTCFG;

//?足?????????“2??IO??????℅谷??
typedef struct tagNET_DVR_LIGHTSNAPCFG
{
	DWORD   dwSize;
	BYTE    byLightIoIn;//?足??????IO ??
	BYTE    byTrigIoIn;//??﹞???IO??
	BYTE    byRelatedDriveWay;//??﹞?IO????????????
	BYTE    byTrafficLight; //0-???????足????????????????1-???????????????????足??
	BYTE     bySnapTimes1; //?足??℅???????1??0-??℅?????﹞?0-??????????℅??車5?? 
	BYTE     bySnapTimes2; //????℅???????2??0-??℅?????﹞?0-??????????℅??車5?? 
	BYTE    byRes1[2];
	WORD    wIntervalTime1[MAX_INTERVAL_NUM];//?足???????????㊣????ms
	WORD    wIntervalTime2[MAX_INTERVAL_NUM];//?????????????㊣????ms
	BYTE    byRecord;//???足??????????㊣那????0-????????1-????
	BYTE    bySessionTimeout;//???足?????????????㊣?㊣???“????
	BYTE    byPreRecordTime;//???足???????????∟???㊣??(??)
	BYTE    byVideoDelay;//???足?????????????㊣?㊣???“????
	BYTE    byRes2[32];//㊣???℅???
}NET_DVR_LIGHTSNAPCFG, *LPNET_DVR_LIGHTSNAPCFG;

//????????(2??IO??????℅谷??
typedef struct tagNET_DVR_MEASURESPEEDCFG
{
	DWORD   dwSize;
	BYTE    byTrigIo1;   //??????1????
	BYTE    byTrigIo2;   //??????2????
	BYTE    byRelatedDriveWay;//??﹞?IO????????????
	BYTE    byTestSpeedTimeOut;//???????????㊣?㊣????????s
	DWORD   dwDistance;//?????角??,cm
	BYTE    byCapSpeed;//??????????????????????km/h
	BYTE    bySpeedLimit;//????????????km/h
	BYTE     bySnapTimes1; //????1℅?????????0-??℅?????﹞?0-??????????℅??車5?? 
	BYTE     bySnapTimes2; //????2℅?????????0-??℅?????﹞?0-??????????℅??車5?? 
	WORD    wIntervalTime1[MAX_INTERVAL_NUM];//????1?????????㊣????ms
	WORD    wIntervalTime2[MAX_INTERVAL_NUM];//????2?????????㊣????ms
	BYTE    byRes[32];//㊣???℅???
}NET_DVR_MEASURESPEEDCFG, *LPNET_DVR_MEASURESPEEDCFG;


//????????
typedef struct tagNET_DVR_CLOUDSTORAGE_COND
{
	DWORD  dwSize;
	DWORD  dwChannel;
	BYTE    byRes1[64];
}NET_DVR_CLOUDSTORAGE_COND, *LPNET_DVR_CLOUDSTORAGE_COND;

//?????芍??
typedef struct tagNET_DVR_POOLPARAM
{
	DWORD  dwPoolID;// ??????﹞?????????
	BYTE    byRes[4];
}NET_DVR_POOLPARAM, *LPNET_DVR_POOLPARAM;

typedef struct tagNET_DVR_CLOUDSTORAGE_CFG
{
	DWORD   dwSize;
	BYTE    byEnable;//0-????????1-????
	BYTE    byRes[3];
	NET_DVR_IPADDR  struIP;
	WORD    wPort;//????????
	BYTE    byRes1[2];
	char    szUser[CLOUD_NAME_LEN/*48*/]; //???∫??
	char    szPassword[CLOUD_PASSWD_LEN/*48*/];     // ????
	NET_DVR_POOLPARAM  struPoolInfo[16];//??℅谷0㊣赤???“????????????℅谷1㊣赤????????????????℅谷2㊣赤???????足?????????“IPC/D??
	BYTE    byRes2[128];
}NET_DVR_CLOUDSTORAGE_CFG, *LPNET_DVR_CLOUDSTORAGE_CFG;

typedef  struct  tagNET_DVR_PARKLAMP_COND
{
	DWORD  dwSize;
	DWORD  dwChannel;   //?“????
	BYTE   byParkingIndex;   //?角?????????“1??4??
	BYTE   byRes[15];     //㊣???
}NET_DVR_PARKLAMP_COND, *LPNET_DVR_PARKLAMP_COND;

typedef  struct  tagNET_DVR_PARKLAMP_INFOCFG
{
	DWORD dwSize;
	char  sLicense[MAX_LICENSE_LEN/*16*/];//????????
	char  sParkingNo[MAX_LICENSE_LEN/*16*/];//????㊣角??(??????????㊣角??)
	BYTE   byLampFlicker;//0~?????? 1 ?????? (??????????????)
	BYTE   byLampColor;//0- ?? 1-?足 2-??  3-??  4-?? 5-?﹞?足 6-?角 7-∼℅??  (??????????????)
	BYTE   byStatus; //????℅??? 0-??????1-????
	BYTE   byColorDepth; //???赤??????????0-??????1-????
	BYTE   byColor;//???赤??????0-????????1-∼℅????2-??????3-??????4-??????5-?足????6-??????7-??????8-??????9-??????10-℅?????11-﹞?????12-℅?????0xff-?????????赤??????㊣? 
				   //?????﹞???角????㊣??? ?????????角?? VLR_VEHICLE_CLASS
	BYTE   byVehicleLogoRecog;
	BYTE   byRes[250];//㊣???
}NET_DVR_PARKLAMP_INFOCFG, *LPNET_DVR_PARKLAMP_INFOCFG;

//????????????
typedef struct tagNET_DVR_VIDEOEFFECT
{
	BYTE byBrightnessLevel; /*0-100*/
	BYTE byContrastLevel; /*0-100*/
	BYTE bySharpnessLevel; /*0-100*/
	BYTE bySaturationLevel; /*0-100*/
	BYTE byHueLevel; /*0-100,?“㊣?????*/
	BYTE byEnableFunc; //??????∼???㊣赤????bit0-SMART IR(﹞?????)??bit1-??????,bit2-??????????????0-﹞???1-??
	BYTE byLightInhibitLevel; //??????????????[1-3]㊣赤??????
	BYTE byGrayLevel; //???????辰??0-[0-255]??1-[16-235]
}NET_DVR_VIDEOEFFECT, *LPNET_DVR_VIDEOEFFECT;

//????????
typedef struct tagNET_DVR_GAIN
{
	BYTE byGainLevel; /*??????0-100*/
	BYTE byGainUserSet; /*???∫℅??“????????0-100??????℅????迆????CCD????????℅???????*/
	BYTE byRes[2];
	DWORD dwMaxGainValue;/*℅??車????????????dB*/
}NET_DVR_GAIN, *LPNET_DVR_GAIN;

//∼℅????????
typedef struct tagNET_DVR_WHITEBALANCE
{
	BYTE byWhiteBalanceMode; /*0-????∼℅?????“MWB??,1-℅???∼℅????1?“AWB1??,2-℅???∼℅????2 (AWB2),3-℅????????????????“∼℅????(Locked WB)??
							 4-????(Indoor)??5-????(Outdoor)6-??????(Fluorescent Lamp)??7-????(Sodium Lamp)??
							 8-℅????迆℅?(Auto-Track)9-????∼℅????(One Push)??10-????℅???(Auto-Outdoor)??
							 11-????℅??? (Auto-Sodiumlight)??12-??????(Mercury Lamp)??13-℅???∼℅????(Auto)??
							 14-∼℅???? (IncandescentLamp)??15-??????(Warm Light Lamp)??16-℅?????(Natural Light) */
	BYTE byWhiteBalanceModeRGain; /*????∼℅?????㊣???∫??????∼℅???? R????*/
	BYTE byWhiteBalanceModeBGain; /*????∼℅?????㊣???∫??????∼℅???? B????*/
	BYTE byRes[5];
}NET_DVR_WHITEBALANCE, *LPNET_DVR_WHITEBALANCE;

//????????
typedef struct tagNET_DVR_EXPOSURE
{
	BYTE  byExposureMode; /*0 ???????? 1℅???????*/
	BYTE  byAutoApertureLevel; /* ℅????????谷????, 0-10 */
	BYTE  byRes[2];
	DWORD dwVideoExposureSet; /* ℅??“???????????㊣???“????us??*//*℅?:℅????????㊣??????????℅????? ????20-1s(1000000us)*/
	DWORD dwExposureUserSet; /* ℅??“???????㊣??,??℅????迆???????㊣??CCD?????㊣??℅????足??????*/
	DWORD dwRes;
} NET_DVR_EXPOSURE, *LPNET_DVR_EXPOSURE;

//?赤????????
typedef struct tagNET_DVR_WDR
{
	BYTE byWDREnabled; /*?赤??????0 dsibale  1 enable 2 auto*/
	BYTE byWDRLevel1; /*0-F*/
	BYTE byWDRLevel2; /*0-F*/
	BYTE byWDRContrastLevel; /*0-100*/
	BYTE byRes[16];
} NET_DVR_WDR, *LPNET_DVR_WDR;

typedef struct tagNET_DVR_WDR_CFG
{
	DWORD  dwSize;   //?芍?????車??
	NET_DVR_WDR  struWDR; //????????
}NET_DVR_WDR_CFG, *LPNET_DVR_WDR_CFG;


//????℅???????????
typedef struct tagNET_DVR_DAYNIGHT
{
	BYTE byDayNightFilterType; /*??????????0-∼℅?足??1-???赤??2-℅?????3-?“?㊣??4-㊣“????????﹞?, 5-℅???????2?“????????,6-??????7-????℅?????8-?????“?㊣*/
	BYTE bySwitchScheduleEnabled; /*0 dsibale  1 enable,(㊣???)*/
								  //?“?㊣????????
	BYTE byBeginTime; /*?????㊣???“???㊣????0-23*/
	BYTE byEndTime; /*?芍???㊣???“???㊣????0-23*/
					//????2
	BYTE byDayToNightFilterLevel; //0-7
	BYTE byNightToDayFilterLevel; //0-7
	BYTE byDayNightFilterTime;//(60??)
							  //?“?㊣????????
	BYTE byBeginTimeMin; //?????㊣???“﹞?????0-59
	BYTE byBeginTimeSec; //?????㊣???“??????0-59
	BYTE byEndTimeMin; //?芍???㊣???“﹞?????0-59
	BYTE byEndTimeSec; //?芍???㊣???“??????0-59
					   //㊣“????????﹞?????????
	BYTE byAlarmTrigState; //㊣“????????﹞?℅?????0-∼℅?足??1-???赤
} NET_DVR_DAYNIGHT, *LPNET_DVR_DAYNIGHT;

//Gamma????
typedef struct tagNET_DVR_GAMMACORRECT
{
	BYTE byGammaCorrectionEnabled; /*0 dsibale  1 enable*/
	BYTE byGammaCorrectionLevel; /*0-100*/
	BYTE byRes[6];
} NET_DVR_GAMMACORRECT, *LPNET_DVR_GAMMACORRECT;

//㊣???????????
typedef struct tagNET_DVR_BACKLIGHT
{
	BYTE byBacklightMode; /*㊣???????:0 off 1 UP??2 DOWN??3 LEFT??4 RIGHT??5MIDDLE??6℅??“????10-????11-℅?????12-?角???辰㊣???????*/
	BYTE byBacklightLevel; /*0x0-0xF*/
	BYTE byRes1[2];
	DWORD dwPositionX1; //?“X℅?㊣那1??
	DWORD dwPositionY1; //?“Y℅?㊣那1??
	DWORD dwPositionX2; //?“X℅?㊣那2??
	DWORD dwPositionY2; //?“Y℅?㊣那2??
	BYTE byRes2[4];
} NET_DVR_BACKLIGHT, *LPNET_DVR_BACKLIGHT;

//??℅?????????
typedef struct tagNET_DVR_NOISEREMOVE
{
	BYTE byDigitalNoiseRemoveEnable; /*0-????????1-???“??????℅???????2-℅“????????℅?????*/
	BYTE byDigitalNoiseRemoveLevel; /*???“??????℅???????㊣???0x0-0xF*/
	BYTE bySpectralLevel;       /*℅“???????????辰??????0-100*/
	BYTE byTemporalLevel;   /*℅“?????????㊣?辰??????0-100*/
	BYTE byDigitalNoiseRemove2DEnable;         /* ℅?????2D??????0-????????1-???? */
	BYTE byDigitalNoiseRemove2DLevel;            /* ℅?????2D??????㊣???0-100 */
	BYTE byRes[2];
} NET_DVR_NOISEREMOVE, *LPNET_DVR_NOISEREMOVE;

//CMOS???????∼?????﹞????
typedef struct tagNET_DVR_CMOSMODCFG
{
	BYTE byCaptureMod;   //℅?????????0-℅???????1??1-℅???????2
	BYTE byBrightnessGate;//????????
	BYTE byCaptureGain1;   //℅???????1,0-100
	BYTE byCaptureGain2;   //℅???????2,0-100
	DWORD dwCaptureShutterSpeed1;//℅????足??????1
	DWORD dwCaptureShutterSpeed2;//℅????足??????2
	BYTE  byRes[4];
}NET_DVR_CMOSMODECFG, *LPNET_DVR_CMOSMODECFG;

//?∼??????????
typedef struct tagNET_DVR_CAMERAPARAMCFG
{
	DWORD dwSize;
	NET_DVR_VIDEOEFFECT struVideoEffect;/*????????㊣?????㊣????????????????‾????*/
	NET_DVR_GAIN struGain;/*℅???????*/
	NET_DVR_WHITEBALANCE struWhiteBalance;/*∼℅????*/
	NET_DVR_EXPOSURE struExposure; /*????????*/
	NET_DVR_GAMMACORRECT struGammaCorrect;/*Gamma????*/
	NET_DVR_WDR struWdr;/*?赤????*/
	NET_DVR_DAYNIGHT struDayNight;/*????℅???*/
	NET_DVR_BACKLIGHT struBackLight;/*㊣???????*/
	NET_DVR_NOISEREMOVE struNoiseRemove;/*??℅?????*/
	BYTE byPowerLineFrequencyMode; /*0-50HZ; 1-60HZ*/
								   /*
								   0-℅???????,
								   1-????????,
								   2-P-Iris1,
								   3-Union 3-9mm F1.6-2.7 (T5280-PQ1) [IPC5.1.7]
								   4-Union 2.8-12mm F1.6-2.7 (T5289-PQ1) [IPC5.1.7]
								   5-HIK 3.8-16mm F1.5?“HV3816P-8MPIR)
								   6-HIK 11-40mm F1.7 (HV1140P-8MPIR)
								   7-HIK 2.7-12mm F1.2?“TV2712P-MPIR??
								   8- MZ5721D-12MPIR
								   9- MZ1555D-12MPIR
								   10- MZ5721D-12MPIR(RS485)
								   11- MZ1555D-12MPIR(RS485)
								   */
	BYTE byIrisMode;
	BYTE byMirror;  /* ??????0 off??1- leftright??2- updown??3-center */
	BYTE byDigitalZoom;  /*??℅???﹞?:0 dsibale  1 enable*/
	BYTE byDeadPixelDetect;   /*?????足??,0 dsibale  1 enable*/
	BYTE byBlackPwl;/*?????????? ,  0-255*/
	BYTE byEptzGate;// EPTZ????㊣???:0-????????℅????“??1-??????℅????“
	BYTE byLocalOutputGate;//㊣???????????㊣???0-㊣?????????㊣?1-㊣???BNC?????辰?? 2-HDMI??????㊣?  11-??﹞???????12-??????????13-??????﹞?????
						   //20-HDMI_720P50??????
						   //21-HDMI_720P60??????
						   //22-HDMI_1080I60??????
						   //23-HDMI_1080I50??????
						   //24-HDMI_1080P24??????
						   //25-HDMI_1080P25??????
						   //26-HDMI_1080P30??????
						   //27-HDMI_1080P50??????
						   //28-HDMI_1080P60??????
						   //40-SDI_720P50,
						   //41-SDI_720P60,
						   //42-SDI_1080I50,
						   //43-SDI_1080I60,
						   //44-SDI_1080P24,
						   //45-SDI_1080P25,
						   //46-SDI_1080P30,
						   //47-SDI_1080P50,
						   //48-SDI_1080P60,
						   //49-SDI_720P25
						   //50-SDI_720P30 
						   //51-SDI_1080I25
						   //52-SDI_1080I30
						   //60- YPBPR_720P50
						   //61-YPBPR_720P60
						   //62-YPBPR_1080I50
						   //63-YPBPR_1080I60
						   //64-YPBPR_1080P24
						   //65-YPBPR_1080P25
						   //66-YPBPR_1080P30
						   //67-YPBPR_1080P50
						   //68-YPBPR_1080P60
						   //69-YPBPR_720P25 
						   //70-YPBPR_720P30
						   //71- HDMI_1080P???????“?????????????????????豕㊣???????captureMode㊣?????????
						   //72- HDMI_720P???????“?????????????????????豕㊣???????captureMode㊣?????????
						   //73- HDMI_2160P???????“?????????????????????豕㊣???????captureMode㊣?????????
	BYTE byCoderOutputMode;//㊣角???‾fpga????????0?㊣?“3????∼芍??
	BYTE byLineCoding; //??﹞???????㊣角????0-﹞???1-??
	BYTE byDimmerMode; //?‾????????0-∼?℅?????1-℅???
	BYTE byPaletteMode; //?‾??∼???0-∼℅????1-??????2-?‾??∼?2??????8-?‾??∼?8
	BYTE byEnhancedMode; //????﹞????“??????????㊣?????0-????????1-1??2-2??3-3??4-4
	BYTE byDynamicContrastEN;    //??????㊣??????? 0-1
	BYTE byDynamicContrast;    //??????㊣??? 0-100
	BYTE byJPEGQuality;    //JPEG???????? 0-100
	NET_DVR_CMOSMODECFG struCmosModeCfg;//CMOS???????∼???????????????﹞????????????????
	BYTE byFilterSwitch; //???“??????0-????????1-????
	BYTE byFocusSpeed; //???﹞?‾????????0-10
	BYTE byAutoCompensationInterval; //?“?㊣℅????足????????1-120????????﹞???
	BYTE bySceneMode;  //???∼??????0-??????1-??????2-??????3-????
}NET_DVR_CAMERAPARAMCFG, *LPNET_DVR_CAMERAPARAMCFG;

//???赤
typedef struct tagNET_DVR_DEFOGCFG
{
	BYTE byMode; //??????0-????????1-℅?????????2-????????
	BYTE byLevel; //??????0-100
	BYTE byRes[6];
}NET_DVR_DEFOGCFG, *LPNET_DVR_DEFOGCFG;

//??℅?﹞???
typedef struct tagNET_DVR_ELECTRONICSTABILIZATION
{
	BYTE byEnable;//???? 0- ????????1- ????
	BYTE byLevel; //??????0-100
	BYTE byRes[6];
}NET_DVR_ELECTRONICSTABILIZATION, *LPNET_DVR_ELECTRONICSTABILIZATION;

//℅???????
typedef struct tagNET_DVR_CORRIDOR_MODE_CCD
{
	BYTE       byEnableCorridorMode; //??﹞?????℅??????? 0?????????? 1??????
	BYTE       byRes[11];
}NET_DVR_CORRIDOR_MODE_CCD, *LPNET_DVR_CORRIDOR_MODE_CCD;

// SMART IR(﹞?????)????????
typedef struct tagNET_DVR_SMARTIR_PARAM
{
	BYTE  byMode;//0????????1??℅???
	BYTE  byIRDistance;//?足???角??????(???????角????㊣???)level:1~100 ????:50?“????????????????
	BYTE  byShortIRDistance;// ?邦?????角??????(1~100)
	BYTE  byLongIRDistance;// ???????角??????(1~100)
}NET_DVR_SMARTIR_PARAM, *LPNET_DVR_SMARTIR_PARAM;

//??byIrisMode ??P-Iris1?㊣?迆?∫???????足???????車????????????????
typedef struct tagNET_DVR_PIRIS_PARAM
{
	BYTE  byMode;//0-℅?????1-????
	BYTE  byPIrisAperture;//?足???????車??????(????,?????車????㊣???)level:1~100 ????:50?“????????????????
	BYTE  byRes[6];
}NET_DVR_PIRIS_PARAM, *LPNET_DVR_PIRIS_PARAM;


//?∟?????????? 2014-02-25
typedef struct tagNET_DVR_LASER_PARAM_CFG
{
	//Length = 16
	BYTE    byControlMode;        //????????            0-???∫??1-℅?????2-???? ????℅???
	BYTE    bySensitivity;        //?∟?????谷????        0-100 ????50
	BYTE    byTriggerMode;        //?∟??????﹞?????    0-???∫??1-?迆????﹞???2-??????﹞? ?????迆????﹞?
	BYTE    byBrightness;        //???????????????????????∫???∟????????        0-255 ????100
	BYTE    byAngle;            //?∟????????        0-???∫??﹞??∫1-36  ????12???∟????????﹞??∫?????????????‾???∟?????????‾??????????∼??????車??
	BYTE    byLimitBrightness;  //??????????℅????????????∫???∟???????????? 0~100 ?“??????2014-01-26
	BYTE    byEnabled;         //?????????∟???????? 0-??㊣???1-????
	BYTE    byIllumination;     //?∟????????????0~100
	BYTE    byLightAngle;       //???????? 0~100
	BYTE    byRes[7];           //㊣???
} NET_DVR_LASER_PARAM_CFG, *LPNET_DVR_LASER_PARAM_CFG;

typedef struct tagNET_DVR_FFC_PARAM
{
	//1-Schedule Mode,2-Temperature Mode, 3-Off 
	BYTE   byMode;
	//?“?㊣??:∼???????????????﹞???????????10,20,30,40,50,60,120,180,240??
	BYTE   byRes1;
	WORD   wCompensateTime; //?“?㊣???????迆?∫
	BYTE   byRes2[4];
}NET_DVR_FFC_PARAM, *LPNET_DVR_FFC_PARAM;

typedef struct tagNET_DVR_DDE_PARAM   //??sensor???那??
{
	BYTE  byMode;//1-Off,2-Normal Mode,3-Expert Mode
	BYTE  byNormalLevel;//???“????????﹞??∫[1,100]?????“???????迆?∫
	BYTE  byExpertLevel;//℅“??????????﹞??∫[1,100]??℅“?????????迆?∫
	BYTE  byRes[5];
}NET_DVR_DDE_PARAM, *LPNET_DVR_DDE_PARAM;

typedef struct tagNET_DVR_AGC_PARAM
{
	BYTE  bySceneType;//1-Normal Sence,2-Highlight Sence,3-Manual Sence
	BYTE  byLightLevel;//????????[1,100]?????????????迆?∫
	BYTE  byGainLevel; //????????[1,100]?????????????迆?∫
	BYTE  byRes[5];
}NET_DVR_AGC_PARAM, *LPNET_DVR_AGC_PARAM;

//℅????迆CCD???? ??64℅???
typedef struct tagNET_DVR_SNAP_CAMERAPARAMCFG
{
	BYTE byWDRMode;   // ?赤????????;0~??㊣???1~??℅??赤???? 2~?赤????
	BYTE byWDRType;    // ?赤????????????; 0~??????????1~∼??㊣????????2~∼?????????
	BYTE byWDRLevel;   // ?赤??????????0~6?‾??????1-7???????‾??2?“??3??????
	BYTE byRes1;
	NET_DVR_TIME_EX struStartTime; //?????赤?????㊣??
	NET_DVR_TIME_EX struEndTime; //?芍???赤?????㊣??
	BYTE byDayNightBrightness; //????℅?????????????0-100??????50??
							   //??????????
	BYTE byMCEEnabled;//????????????????true????????false????㊣?
	BYTE byMCELevel;//????????????????0~100????????50
					//℅?????㊣???
	BYTE byAutoContrastEnabled;//℅?????㊣?????????true????????false????㊣?
	BYTE byAutoContrastLevel;//℅?????㊣??????“0-100??,????50
							 //????????
	BYTE byLSEDetailEnabled;//??????????????true????????false????㊣?
	BYTE byLSEDetailLevel;//?????????????“0-100??,????50
						  // License Plate Definition Enhancement????????
	BYTE byLPDEEnabled;//??????????????true????????false????㊣?
	BYTE byLPDELevel;//?????????????“0-100??,????50
					 //??㊣???????
	BYTE byLseEnabled; //??㊣?????????????true????????false????㊣?
	BYTE byLseLevel; //??㊣????????????“0-100??,????0
	BYTE byLSEHaloLevel;//??????????????﹞??∫ 0-100,????0
	BYTE byLseType; //??㊣???????????????; 0~??????????1~∼??㊣????????2~∼??????????“??℅????????㊣????byLseLevel??byLSEHaloLevel??????????
	BYTE byRes2[3];
	NET_DVR_TIME_EX struLSEStartTime; //??????㊣????????㊣???“?㊣byLseType??1?㊣?迆?∫??
	NET_DVR_TIME_EX struLSEEndTime; //?芍????㊣????????㊣???“?㊣byLseType??1?㊣?迆?∫??
	BYTE byLightLevel;//???????????????“0-100??,????0???“?㊣byLseType??2?㊣?迆?∫??
					  //??????㊣???
	BYTE byPlateContrastLevel;//??????㊣?????????0~100??????0
							  //????㊣?????
	BYTE byPlateSaturationLevel;//????㊣???????????0~100??????0
	BYTE byRes[9];
} NET_DVR_SNAP_CAMERAPARAMCFG, *LPNET_DVR_SNAP_CAMERAPARAMCFG;

//???∫???赤????
typedef struct tagNET_DVR_OPTICAL_DEHAZE
{
	BYTE byEnable; //0~?????????∫???赤??1~???????∫???赤
	BYTE byRes[7];
} NET_DVR_OPTICAL_DEHAZE, *LPNET_DVR_OPTICAL_DEHAZE;

//????AGC?豕?????㊣????AGC?????????∫?㊣????NET_DVR_AGC_PARAM??????????℅????㊣????AGC??????℅????辰???????㊣??NET_DVR_AGC_PARAM???????????∫
typedef struct tagNET_DVR_THERMOMETRY_AGC
{
	BYTE  byMode;//AGC??????0~???∫??1~℅?????2~????
	BYTE  byRes1[3];
	int     iHighTemperature;//℅?????????﹞??∫????-273~9999???????“1~???????????迆?∫??
	int     iLowTemperature;//℅?????????﹞??∫????-273~9999???????“1~???????????迆?∫??
	BYTE  byRes[8];
}NET_DVR_THERMOMETRY_AGC, *LPNET_DVR_THERMOMETRY_AGC;

//?∼??????????
typedef struct tagNET_DVR_CAMERAPARAMCFG_EX
{
	DWORD dwSize;
	NET_DVR_VIDEOEFFECT struVideoEffect;/*????????㊣?????㊣????????????????‾????*/
	NET_DVR_GAIN struGain;/*℅???????*/
	NET_DVR_WHITEBALANCE struWhiteBalance;/*∼℅????*/
	NET_DVR_EXPOSURE struExposure; /*????????*/
	NET_DVR_GAMMACORRECT struGammaCorrect;/*Gamma????*/
	NET_DVR_WDR struWdr;/*?赤????*/
	NET_DVR_DAYNIGHT struDayNight;/*????℅???*/
	NET_DVR_BACKLIGHT struBackLight;/*㊣???????*/
	NET_DVR_NOISEREMOVE struNoiseRemove;/*??℅?????*/
	BYTE byPowerLineFrequencyMode; /*0-50HZ; 1-60HZ*/
								   /*
								   0-℅???????,
								   1-????????,
								   2-P-Iris1,
								   3-Union 3-9mm F1.6-2.7 (T5280-PQ1) [IPC5.1.7]
								   4-Union 2.8-12mm F1.6-2.7 (T5289-PQ1) [IPC5.1.7]
								   5-HIK 3.8-16mm F1.5?“HV3816P-8MPIR)
								   6-HIK 11-40mm F1.7 (HV1140P-8MPIR)
								   7-HIK 2.7-12mm F1.2?“TV2712P-MPIR??
								   8- MZ5721D-12MPIR
								   9- MZ1555D-12MPIR
								   10- MZ5721D-12MPIR(RS485)
								   11- MZ1555D-12MPIR(RS485)
								   */
	BYTE byIrisMode;
	BYTE byMirror;  /* ??????0 off??1- leftright??2- updown??3-center 4-Auto*/
	BYTE byDigitalZoom;  /*??℅???﹞?:0 dsibale  1 enable*/
	BYTE byDeadPixelDetect;   /*?????足??,0 dsibale  1 enable*/
	BYTE byBlackPwl;/*?????????? ,  0-255*/
	BYTE byEptzGate;// EPTZ????㊣???:0-????????℅????“??1-??????℅????“
	BYTE byLocalOutputGate;//㊣???????????㊣???0-㊣?????????㊣?1-㊣???BNC?????辰?? 2-HDMI??????㊣?  
						   //20-HDMI_720P50??????
						   //21-HDMI_720P60??????
						   //22-HDMI_1080I60??????
						   //23-HDMI_1080I50??????
						   //24-HDMI_1080P24??????
						   //25-HDMI_1080P25??????
						   //26-HDMI_1080P30??????
						   //27-HDMI_1080P50??????
						   //28-HDMI_1080P60??????
	BYTE byCoderOutputMode;//㊣角???‾fpga????????0?㊣?“3????∼芍??
	BYTE byLineCoding; //??﹞???????㊣角????0-﹞???1-??
	BYTE byDimmerMode; //?‾????????0-∼?℅?????1-℅???
	BYTE byPaletteMode; //?‾??∼???0-∼℅????1-??????2-?‾??∼?2??????8-?‾??∼?8, 9-????1,10-????,11-????2,12-?迆?足1,13-?迆?足2,14-??????,15-????1,16-????2,17-㊣迄??,18-?那,19-?足??,20-????,21-????
	BYTE byEnhancedMode; //????﹞????“??????????㊣?????0-????????1-1??2-2??3-3??4-4
	BYTE byDynamicContrastEN;    //??????㊣??????? 0-1
	BYTE byDynamicContrast;    //??????㊣??? 0-100
	BYTE byJPEGQuality;    //JPEG???????? 0-100
	NET_DVR_CMOSMODECFG struCmosModeCfg;//CMOS???????∼???????????????﹞????????????????
	BYTE byFilterSwitch; //???“??????0-????????1-????
	BYTE byFocusSpeed; //???﹞?‾????????0-10
	BYTE byAutoCompensationInterval; //?“?㊣℅????足????????1-120????????﹞???
	BYTE bySceneMode;  //???∼??????0-??????1-??????2-??????3-????
	NET_DVR_DEFOGCFG struDefogCfg;//???赤????
	NET_DVR_ELECTRONICSTABILIZATION struElectronicStabilization;//??℅?﹞???
	NET_DVR_CORRIDOR_MODE_CCD struCorridorMode;//℅???????
	BYTE   byExposureSegmentEnable; //0~??????,1~????  ?????㊣???????????℅??℅??‾????㊣????????迄???‾???㊣?????芍???????㊣???????????????車?芍???????????????????芍????????℅??車????℅??車?芍????????℅??車??
	BYTE   byBrightCompensate;//???????? [0~100]
							  /*
							  0-??㊣???1-640*480@25fps??2-640*480@30ps??3-704*576@25fps??4-704*480@30fps??5-1280*720@25fps??6-1280*720@30fps??
							  7-1280*720@50fps??8-1280*720@60fps??9-1280*960@15fps??10-1280*960@25fps??11-1280*960@30fps??
							  12-1280*1024@25fps??13--1280*1024@30fps??14-1600*900@15fps??15-1600*1200@15fps??16-1920*1080@15fps??
							  17-1920*1080@25fps??18-1920*1080@30fps??19-1920*1080@50fps??20-1920*1080@60fps??21-2048*1536@15fps??22-2048*1536@20fps??
							  23-2048*1536@24fps??24-2048*1536@25fps??25-2048*1536@30fps??26-2560*2048@25fps??27-2560*2048@30fps??
							  28-2560*1920@7.5fps??29-3072*2048@25fps??30-3072*2048@30fps??31-2048*1536@12.5??32-2560*1920@6.25??
							  33-1600*1200@25??34-1600*1200@30??35-1600*1200@12.5??36-1600*900@12.5??37-1280*960@12.5fps??38-800*600@25fps??39-800*600@30fps40??
							  4000*3000@12.5fps??41-4000*3000@15fps??42-4096*2160@20fps??43-3840*2160@20fps ??44-960*576@25fps??45-960*480@30fps??46-752*582@25fps??
							  47-768*494@30fps??48-2560*1440@25fps??49-2560*1440@30fps ??50-720P@100fps??51-720P@120fps??52-2048*1536@50fps??53-2048*1536@60fps??
							  54-3840*2160@25fps??55-3840*2160@30fps??56-4096*2160@25fps??57-4096*2160@30fps ??58-1280*1024@50fps??59-1280*1024@60fps??
							  60-3072*2048@50fps??61-3072*2048@60fps??62-3072*1728@25fps??63-3072*1728@30fps??64-3072*1728@50fps??65-3072*1728@60fps??66-336*256@50fps??67-336*256@60fps??
							  68-384*288@50fps??69-384*288@60fps ??70- 640 * 512@50fps ??71- 640 * 512@60fps??72-2592*1944@25fps??73-2592*1944@30fps??74-2688*1536@25fps??75-2688*1536@30fps
							  76-2592*1944@20fps??77-2592*1944@15fps??78-2688*1520@20fps??79-2688*1520@15fps??80-2688*1520@25fps??81-2688*1520@30fps??82- 2720*2048@25fps?? 83- 2720*2048@30fps??
							  84-336*256@25fps??85- 384*288@25fps??86-640*512@25fps??87-1280*960@50fps??88-1280*960@60fps??89-1280*960@100fps??90-1280*960@120fps??91-4000*3000@20fps??
							  92-1920*1200@25fps??93-1920*1200@30fps??94-2560*1920@25fps??95-2560*1920@20fps??96-2560*1920@30fps??97-1280*1920@25fps??98-1280*1920@30fps
							  99-4000*3000@24fps??100-4000*3000@25fps??101-4000*3000@10fps??102- 384*288@30fps??103-2560*1920@15fps??104-2400*3840@25fps??105-1200*1920@25fps
							  106-4096*1800@30fps??107-3840*1680@30fps??108-2560*1120@30fps??109-704*320@30fps??110-1280*560@30fps??111-4096*1800@25fps??112-3840*1680@25fps
							  113-2560*1120@25fps??114-704*320@25fps??115-1280*560@25fps??116-2400*3840@24fps??117-3840*2400@24fps??118-3840*2400@25fps??119-2560*1920@12.5fps
							  120-2560*2048@12fps??121-2560*2048@15fps??122-2560*1536@25fps??123-2560*1536@30fps??124-2256*2048@25fps??125-2256*2048@30fps??126-2592*2592@12.5fps??127-2592*2592@15fps??
							  128 - 640*512@30fps??129-2048*1520@30fps??130-2048*1520@25fps??131-3840*2160@24fps??132-2592*1520@25fps??133-2592*1520@30fps??134-2592*1536@25fps??135-2592*1536@30fps
							  136-640*960@25fps??137-640*960@24fps??142-2992*2192@25fps??143-2992*2192@30fps??144-3008*2160@25fps??145-3008*2160@30fps??146-3072*1728@20fps??147-2560*1440@20fps??
							  148-2160*3840@25fps??149-2160*3840@30fps??150-7008*1080@25fps??151-7008*1080@30fps??152-3072*2048@20fps??153-1536*864@25fps??154-2560*1920@24fps??155-2400*3840@30fps??
							  156-3840*2400@30fps??157-3840*2160@15fps
							  158-384*288@8.3fps??159-640*512@8.3fps??160-160*120@8.3fps??161-1024*768@8.3fps??162-640*480@8.3fps??163-3840*2160@12.5fps??164-2304*1296@30fps??165-2304*1296@25fps??
							  166-2560*1440@24fps??167-2688*1512@25fps??168-2688*1512@30fps??169-2688*1512@50fps??170-2688*1512@60fps??171-1536*864@30fps??172-2560*1440@50fps??173-2560*1440@60fps??
							  174-2048*2048@25fps??175-2048*2048@30fps??176-4000*3060@20fps??177-3060*3060@25fps??178-3060*3060@30fps??179-3000*3000@25fps??180-3000*3000@30fps??181-8160*3616@30fps??
							  182-8160*3616@25fps??183-3000*3000@20fps??184-3000*3000@15fps??185-3000*3000@12.5fps??186-5472*3648@25fps??187-5472*3648@30fps??188-7680*4320@25fps??189-7680*4320@30fps??
							  190-8160*2400@25fps??191-8160*2400@30fps??192-5520*2400@25fps??193-5520*2400@30fps??194-7680*4320@25fps??195-7680*4320@30fps*/
	BYTE   byCaptureModeN; //?????????????“N????
	BYTE   byCaptureModeP; //?????????????“P????
	NET_DVR_SMARTIR_PARAM struSmartIRParam; //?足??﹞???㊣?????????
	NET_DVR_PIRIS_PARAM struPIrisParam;//PIris????????????byIrisMode℅?????2-PIris1?????迆?∫
									   //2014-02-25 ????????
	NET_DVR_LASER_PARAM_CFG struLaserParam;    //?∟??????
	NET_DVR_FFC_PARAM  struFFCParam;
	NET_DVR_DDE_PARAM  struDDEParam;
	NET_DVR_AGC_PARAM  struAGCParam;
	BYTE   byLensDistortionCorrection;//???﹞??㊣????? 0-??㊣?,1-????
	BYTE byDistortionCorrectionLevel;//??㊣???????????0-㊣?????1-????????2-????????3-??????;255-℅??“??
	BYTE byCalibrationAccurateLevel;// ??㊣?????????[0-100]
	BYTE byZoomedInDistantViewLevel;//????﹞??車????[0-100]
	NET_DVR_SNAP_CAMERAPARAMCFG struSnapCCD; //℅????迆CCD????????????℅????迆
	NET_DVR_OPTICAL_DEHAZE struOpticalDehaze;//???∫???赤????
	NET_DVR_THERMOMETRY_AGC struThermAGC;//????AGC????
	BYTE   byFusionMode;//?????℅??????????????0~????????????1~??????????2~??????????
	BYTE   byHorizontalFOV;//??????????[0-100]
	BYTE   byVerticalFOV;//???㊣??????[0-100]
	BYTE   byBrightnessSuddenChangeSuppression;//??????㊣?????0-??㊣?,1-????
	BYTE   byRes2[156];
}NET_DVR_CAMERAPARAMCFG_EX, *LPNET_DVR_CAMERAPARAMCFG_EX;

typedef struct tagNET_DVR_FOCUSING_POSITION_STATE
{
	DWORD   dwSize;
	BYTE    byState;//????????℅??????? 0-????????1-????
	BYTE    byRes[31];
}NET_DVR_FOCUSING_POSITION_STATE, *LPNET_DVR_FOCUSING_POSITION_STATE;

typedef enum _VCA_PLATE_COLOR_
{
	VCA_BLUE_PLATE = 0,   //????????
	VCA_YELLOW_PLATE,      //????????
	VCA_WHITE_PLATE,       //∼℅??????
	VCA_BLACK_PLATE,       //????????
	VCA_GREEN_PLATE,       //????????
	VCA_BKAIR_PLATE,       //????????????
	VCA_RED_PLATE,         //?足??????
	VCA_ORANGE_PLATE,      //????????
	VCA_OTHER = 0xff       //????
}VCA_PLATE_COLOR;

//?????角??
typedef enum _VCA_PLATE_TYPE_
{
	VCA_STANDARD92_PLATE = 0,    //㊣那℅??????????邦??
	VCA_STANDARD02_PLATE,        //02?????????? 
	VCA_WJPOLICE_PLATE,            //?????? 
	VCA_JINGCHE_PLATE,            //????
	STANDARD92_BACK_PLATE,         //??????????????
	VCA_SHIGUAN_PLATE,          //????????
	VCA_NONGYONG_PLATE,         //??????
	VCA_MOTO_PLATE,              //??????
	NEW_ENERGY_PLATE,             //??????????
								  //2017-05-18 ???? ?????????????角??
								  TRANSPORT_PLATE = 0x20,     //??????
								  COMMERCIAL_PLATE,           //??????
								  PRIVATE_PLATE,              //??????
								  LEARNING_PLATE,             //???﹞??
								  CD_PLATE,                   //??????
								  CC_PLATE,                   //??????
								  ARMY_PLATE,                 //?邦??
								  PROTOCOL_PLATE,             //PROTOCOL
								  GOVERNMENT_PLATE,           //??????
								  EXPORT_PLATE,               //EXPORT
								  TAXI_PLATE,                 //??℅???
								  TESTING_PLATE,              //TESTING
								  TRANSFER_PLATE,             //TRANSFER
								  TRUCK_PLATE,                //????
								  BUS_PLATE,                  //??????
								  PUBLIC_PLATE,               //PUBLIC
								  PUB_TRANS_PLATE,            //PUBLIC TRANSFER
								  PRI_TRANS_PLATE,            //PRIVATE TRANSPORT
								  UNKNOWN_PLATE = 0xff,       //?????“????㊣???
}VCA_PLATE_TYPE;

//??????㊣??芍??
typedef enum _VTR_RESULT
{
	VTR_RESULT_OTHER = 0,  //????
	VTR_RESULT_BUS = 1,  //????
	VTR_RESULT_TRUCK = 2,  //????
	VTR_RESULT_CAR = 3,  //????
	VTR_RESULT_MINIBUS = 4,  //??∼邦??
	VTR_RESULT_SMALLTRUCK = 5,  //??????
	VTR_RESULT_HUMAN = 6,  //????
	VTR_RESULT_TUMBREL = 7,  //??????
	VTR_RESULT_TRIKE = 8,  //??????
	VTR_RESULT_SUV_MPV = 9,  //SUV/MPV
	VTR_RESULT_MEDIUM_BUS = 10,  //????????
	VTR_RESULT_MOTOR_VEHICLE = 11, //?迆????
	VTR_RESULT_NON_MOTOR_VEHICLE = 12,  //﹞??迆????
	VTR_RESULT_SMALLCAR = 13,   //????????
	VTR_RESULT_MICROCAR = 14,   //????????
	VTR_RESULT_PICKUP = 15,    //?∟?“??
	VTR_RESULT_CONTAINER_TRUCK = 16, // ??℅∼???“??
	VTR_RESULT_MINI_TRUCK = 17, // ???“????∼??“
	VTR_RESULT_SLAG_CAR = 18, // ?邦????
	VTR_RESULT_CRANE = 19, // ???????∟????
	VTR_RESULT_OIL_TANK_TRUCK = 20, // ??????
	VTR_RESULT_CONCRETE_MIXER = 21, // ?足??????∼豕??
	VTR_RESULT_PLATFORM_TRAILER = 22, // ??∼?????
	VTR_RESULT_HATCHBACK = 23, // ???芍????
	VTR_RESULT_SALOON = 24, // ???芍????
	VTR_RESULT_SPORT_SEDAN = 25,  // ????
	VTR_RESULT_SMALL_BUS = 26  //????????
}VTR_RESULT;


//???赤????
typedef enum _VCR_CLR_CLASS
{
	VCR_CLR_UNSUPPORT = 0,      //???∫??
	VCR_CLR_WHITE = 1,   //∼℅
	VCR_CLR_SILVER = 2,   //??
	VCR_CLR_GRAY = 3,      //??
	VCR_CLR_BLACK = 4,      //??
	VCR_CLR_RED = 5,      //?足
	VCR_CLR_DARKBLUE = 6,      //????
	VCR_CLR_BLUE = 7,      //??
	VCR_CLR_YELLOW = 8,      //??
	VCR_CLR_GREEN = 9,      //??
	VCR_CLR_BROWN = 10,  //℅?
	VCR_CLR_PINK = 11,  //﹞?
	VCR_CLR_PURPLE = 12,  //℅?
	VCR_CLR_DARKGRAY = 13,  //????
	VCR_CLR_CYAN = 14  //?角??
}VCR_CLR_CLASS;

//??????℅‾?角?? 2013-11-04
typedef enum _VCA_OPERATE_TYPE_
{
	VCA_LICENSE_TYPE = 0x1,  //????????
	VCA_PLATECOLOR_TYPE = 0x2,  //????????
	VCA_CARDNO_TYPE = 0x4,  //?“??
	VCA_PLATETYPE_TYPE = 0x8,  //?????角??
	VCA_LISTTYPE_TYPE = 0x10, //?????????角??
	VCA_INDEX_TYPE = 0x20, //?????‾???? 2014-02-25
	VCA_OPERATE_INDEX_TYPE = 0x40  //??℅‾?? 2014-03-03
}VCA_OPERATE_TYPE;

typedef enum _VCA_ILLEGAL_TYPE_
{
	VCA_POSTPIC_TYPE = 0x1, //?“??????
	VCA_LOWSPEED_TYPE = 0x2,  //????
	VCA_HIGHSPEED_TYPE = 0x4,  //????
	VCA_RETROGRADE_TYPE = 0x8,  //????
	VCA_RUSH_REDLIGHT_TYPE = 0x10,   //???足??
	VCA_PRESS_LANE_TYPE = 0x20, //????????
	VCA_VIOLATE_GUIDE_TYPE = 0x40,//??∼????辰
	VCA_ROAD_STRAND_TYPE = 0x80,//?﹞??????(?豕㊣????∫??)
	VCA_VEHICLE_ILLEGAL_LANE_TYPE = 0x100,//?迆??﹞?
	VCA_ILLEGAL_LANE_CHANGE_TYPE = 0x200,//??﹞“㊣???
	VCA_ILLEGAL_LANE_DRIVE_TYPE = 0x400,//??∼?????
	VCA_VIOLATE_BAN_TYPE = 0x800,//??﹞“????
	VCA_CROSS_PARKING_TYPE = 0x1000,//?﹞??????
	VCA_GREEN_PARKING_TYPE = 0x2000//????????
}VCA_ILLEGAL_TYPE;

typedef enum _VCA_VEHICLE_TYPE_
{
	VCA_OTHER_TYPE = 0x1,  //???邦????
	VCA_SMALLCAR_TYPE = 0x2,  //??????
	VCA_BIGCAR_TYPE = 0x4,  //?車????
	VCA_BUS_TYPE = 0x8,  //????
	VCA_TRUCK_TYPE = 0x10,  //????
	VCA_CAR_TYPE = 0x20,   //????
	VCA_MINIBUS_TYPE = 0x40,   //??∼邦??
	VCA_SMALL_TRUCK_TYPE = 0x80  //??????
}VCA_VEHICLE_TYPE;

//?????﹞???‾?角??
typedef enum _VLR_VEHICLE_CLASS
{
	VLR_OTHER = 0,    //???邦
	VLR_VOLKSWAGEN = 1,    //?車??
	VLR_BUICK = 2,    //㊣???
	VLR_BMW = 3,    //㊣??赤
	VLR_HONDA = 4,    //㊣???
	VLR_PEUGEOT = 5,    //㊣那??
	VLR_TOYOTA = 6,    //﹞芍??
	VLR_FORD = 7,    //????
	VLR_NISSAN = 8,    //???迆
	VLR_AUDI = 9,    //∼???
	VLR_MAZDA = 10,   //?赤℅???
	VLR_CHEVROLET = 11,   //??﹞???
	VLR_CITROEN = 12,   //???迆?迆
	VLR_HYUNDAI = 13,   //???迆
	VLR_CHERY = 14,   //????
	VLR_KIA = 15,   //????
	VLR_ROEWE = 16,   //????
	VLR_MITSUBISHI = 17,   //????
	VLR_SKODA = 18,   //??????
	VLR_GEELY = 19,   //????
	VLR_ZHONGHUA = 20,   //????
	VLR_VOLVO = 21,   //??????
	VLR_LEXUS = 22,   //?℅??????
	VLR_FIAT = 23,   //﹞?????
	VLR_EMGRAND = 24,   //????(????)
	VLR_DONGFENG = 25,   //??﹞?
	VLR_BYD = 26,   //㊣?????
	VLR_SUZUKI = 27,   //????
	VLR_JINBEI = 28,   //??㊣?
	VLR_HAIMA = 29,   //???赤
	VLR_SGMW = 30,   //????
	VLR_JAC = 31,   //????
	VLR_SUBARU = 32,   //??∼???
	VLR_ENGLON = 33,   //???℅(????)
	VLR_GREATWALL = 34,   //?∟??
	VLR_HAFEI = 35,   //??﹞?
	VLR_ISUZU = 36,   //??????(?足??)
	VLR_SOUEAST = 37,   //????
	VLR_CHANA = 38,   //?∟∼?
	VLR_FOTON = 39,   //????
	VLR_XIALI = 40,   //????(????)
	VLR_BENZ = 41,   //㊣???
	VLR_FAW = 42,   //????
	VLR_NAVECO = 43,   //??????
	VLR_LIFAN = 44,   //??﹞?
	VLR_BESTURN = 45,   //????㊣???(????)
	VLR_CROWN = 46,   //????(﹞芍??)
	VLR_RENAULT = 47,   //?℅??
	VLR_JMC = 48,   //JMC(????)
	VLR_MG = 49,   //MG????
	VLR_KAMA = 50,   //???赤
	VLR_ZOTYE = 51,   //????
	VLR_CHANGHE = 52,   //????
	VLR_XMKINGLONG = 53,   //???????迆(????)
	VLR_HUIZHONG = 54,   //????????(????????)
	VLR_SZKINGLONG = 55,   //???????迆
	VLR_HIGER = 56,   //????
	VLR_YUTONG = 57,   //???“
	VLR_CNHTC = 58,   //???迆????
	VLR_BEIBEN = 59,   //㊣㊣㊣????“
	VLR_XINGMA = 60,   //???????赤
	VLR_YUEJIN = 61,   //????
	VLR_HUANGHAI = 62,   //????
	VLR_OLDWALL = 63,   //?????∟??
	VLR_CHANACOMMERCIAL = 64,   //?∟∼?????
	VLR_PORSCHE = 65,               // ㊣??㊣??
	VLR_CADILLAC = 66,               // ????????
	VLR_INFINITI = 67,               // ??﹞??芍??
	VLR_GLEAGLE = 68,               // ???????辰??(????)
	VLR_JEEP = 69,               // JEEP(????)
	VLR_LANDROVER = 70,               // ?﹞??
	VLR_CHANGFENG = 71,               // ?∟﹞芍
	VLR_BENNI = 72,               // ?∟∼?㊣?㊣?(?∟∼?)
	VLR_ERA = 73,               // ?????㊣?迆(?㊣?迆)
	VLR_TAURUS = 74,               // ?∟∼???????(?∟∼?????)
	VLR_EADO = 75,               // ?∟∼?????
	VLR_SHANQI = 76,               // ????
	VLR_HONGYAN = 77,               // ?足??????(???????????足??)
	VLR_DRAGON = 78,               // ∼??迆????(??﹞?????)
	VLR_JACTEXT = 79,               // ????JAC (????)
	VLR_JACBUS = 80,               // ???????迆???? (????)
	VLR_ANKAI = 81,               // ∼???????
	VLR_SHENLONG = 82,               // ?那?迆????
	VLR_DAEWOO = 83,               // ?車??????
	VLR_WUZHENG = 84,               // ???‾????
	VLR_MAN = 85,               // MAN????
	VLR_ZHONGTONG = 86,               // ???“????
	VLR_BAOJUN = 87,               // ㊣???
	VLR_BQWEIWANG = 88,               // ㊣㊣?????迆
	VLR_TRUMPCHE = 89,               // ??足‾
	VLR_LUFENG = 90,               // ??﹞?
	VLR_HMZHENGZHOU = 91,               // ???赤????
	VLR_BEIJING = 92,               // ㊣㊣??????
	VLR_ZHONGSHUN = 93,               // ????
	VLR_WEILIN = 94,               // ??‾?????
	VLR_OPEL = 95,               // ?﹞㊣?
	VLR_KARRY = 96,               // ????
	VLR_SMA = 97,               // ????????
	VLR_SMATEXT = 98,               // ??????????℅?SMA
	VLR_YUWIN = 99,               // ???????∟
	VLR_MINI = 100,               // ㊣??赤MINI
	VLR_MARK = 101,               // ﹞芍??MARKX 
	VLR_HAVAL = 102,               // ????HAVAL
	VLR_OGA = 103,               // ???豕
	VLR_VENUCIA = 104,               // ????
	VLR_BYD2 = 105,               // ㊣??????迄??2 (㊣?????)
	VLR_SMART = 106,               // ㊣???SMART
	VLR_BAW = 107,               // ㊣㊣?????????足?∫BAW
	VLR_LUXGEN = 108,               // ??????
	VLR_YEMA = 109,               // ?∼?赤
	VLR_ZTE = 110,               // ????
	VLR_EVERUS = 111,               // ?赤??
	VLR_CHRYSLER = 112,               // ????????
	VLR_GONOW = 113,               // ??∼?????
	VLR_SHJIANG = 114,               // ???“??
	VLR_RUILIN = 115,               // ??‾?
	VLR_FORTA = 116,               // ????
	VLR_GAGUAR = 117,               // ??㊣?
	VLR_HEIBAO = 118,               // ??㊣?
	VLR_TKING = 119,               // ????
	VLR_TKINGTEXT = 120,               // ??????℅?
	VLR_FODAY = 121,               // ????
	VLR_LOTUS = 122,               // ???“????
	VLR_NANJUN = 123,               // ????
	VLR_SHUANGHUAN = 124,               // ???﹞????
	VLR_SAIBAO = 125,               // ??﹞??邦㊣?
	VLR_HAWTAI = 126,               // ????
	VLR_LIFO = 127,               // ????﹞??迆
	VLR_JONWAY = 128,               // ????????
	VLR_FULONGMA = 129,               // ???迆?赤
	VLR_WEILI = 130,               // ????
	VLR_ANCHI = 131,               // ????∼???
	VLR_PAIXI = 132,               // ????
	VLR_HIGERTEXT = 133,               // ????HIGER??℅?
	VLR_RIYECAR = 134,               // ???????∼?芍?“
	VLR_RIYETRUCK = 135,               // ???????∼???“
	VLR_JIANGNAN = 136,               // ????
	VLR_OLDZOTYE = 137,               // ????????
	VLR_OLDXIALI = 138,               // ????????
	VLR_NEWAOCHI = 139,               // ??∼???
	VLR_CDW = 140,               // ????????
	VLR_CDWTEXT = 141,               // ??????????℅?
	VLR_CIIMO = 142,               // ㊣??????迆
	VLR_CHANADS = 143,               // ?∟∼???∼???
	VLR_DS = 144,               // ????
	VLR_ROHENS = 145,               // ???迆???‾???芍??
	VLR_YANTAI = 146,               // ?角?“
	VLR_SHUANGLONG = 147,               // ???迆
	VLR_FENGLING = 148,               // ?㊣?迆﹞???
	VLR_XINKAI = 149,               // ????
	VLR_GMC = 150,               // GMC
	VLR_DATONG = 151,               // ?????車?“
	VLR_BQYINXIANG = 152,               // ㊣㊣?????豕
	VLR_NEWCHERY = 153,               // ??????
	VLR_MUDAN = 154,               // ???∟
	VLR_DAYUN = 155,               // ?車??????
	VLR_DONGWO = 156,               // ????????
	VLR_UNION = 157,               // ????????
	VLR_CHUNZHOU = 158,               // ????????
	VLR_SANY = 159,               // ???????∟
	VLR_YAXING = 160,               // ????????
	VLR_HENGTONG = 161,               // ???“????
	VLR_SHAOLIN = 162,               // ????????
	VLR_YOUNG = 163,               // ?角?那????
	VLR_STOM = 164,               // ???“
	VLR_SANHUAN = 165,               // ???﹞
	VLR_XUGONG = 166,               // ?足?∟
	VLR_BEIFANG = 167,               // ㊣㊣﹞?????
	VLR_JIANGHUAN = 168,               // ???﹞????
	VLR_BJFARM = 169,               // ㊣㊣??????
	VLR_NEWDADI = 170,               // ???車??????
	VLR_SUNWIN = 171,               // ?那??????
	VLR_YINGTIAN = 172,               // ????
	VLR_QINGQI = 173,               // ?芍??
	VLR_CHUFENG = 174,               // ??﹞?????
	VLR_SCANIA = 175,               // ???∼?芍??
	VLR_JIULONG = 176,               // ???迆????
	VLR_YOUYI = 177,               // ???那????
	VLR_SHANGRAO = 178,               // ????????
	VLR_JIJIANG = 179,               // ????
	VLR_YANGZI = 180,               // ??℅?????
	VLR_XIWO = 181,               // ?‾??????
	VLR_CHANGJIANG = 182,               // ?∟??????
	VLR_WUYI = 183,               // ????
	VLR_CHENGDU = 184,               // ????????
	VLR_TIANMA = 185,               // ?足?赤
	VLR_BAOLONG = 186,               // ㊣??迆
	VLR_NEWYATU = 187,               // ??????
	VLR_BARUI = 188,               // ????∼???
	VLR_GUANZHI = 189,               // ????
	VLR_XIYATE = 190,               // ?‾????
	VLR_BINLI = 191,               // ㊣???
	VLR_DADI = 192,               // ?車??
	VLR_FUQI = 193,               // ????
	VLR_HANGTIAN = 194,               // ???足????
	VLR_HENGTIAN = 195,               // ???足????
	VLR_JMCCAR = 196,               // ?????芍??
	VLR_KAERSEN = 197,               // ?“????????
	VLR_KAWEI = 198,               // ?“??????
	VLR_LANBOJINI = 199,               // ?????迄?芍
	VLR_MASHALADI = 200,               // ?那??????
	VLR_SHUCHI = 201,               // ????????
	VLR_SHILI = 202,               // ????????
	VLR_HUABEI = 203,               // ??????㊣㊣
	VLR_YIZHENG = 204,               // ???????‾
	VLR_CHUNLAN = 205,               // ????????
	VLR_DAFA = 206,               // ?車﹞?????
	VLR_SHENYE = 207,               // ???∼????
	VLR_FALALI = 208,               // ﹞“????????
	VLR_FUXING = 209,               // ????????
	VLR_ANYUAN = 210,               // ∼???????
	VLR_JINGHUA = 211,               // ????????
	VLR_TAIHU = 212,               // ????????
	VLR_WUZHOULONG = 213,               // ?????迆
	VLR_CHANGLONG = 214,               // ????????
	VLR_YUEXI = 215,               // ???‾????
	VLR_SHENMA = 216,               // ???赤????
	VLR_LUSHAN = 217,               // ??????
	VLR_WANFENG = 218,               // ?辰﹞芍??
	VLR_GZYUNBAO = 219,               // ??????㊣?
	VLR_ZHONGDA = 220,               // ???車????
	VLR_THREEWHEEL = 221,               // ??????
	VLR_TWOWHEEL = 222,               // ??????
	VLR_JBC = 223,              // ??㊣?JBC
	VLR_YZJIANG = 224,               // ??℅???????
	VLR_CNJ = 225,               // ????CNJ
	VLR_FORLAND = 226,               // ?????㊣?迆??℅?
	VLR_FARMCAR = 227,               // ??????
	VLR_DONGFANGHONG = 228,               // ??﹞??足
	VLR_STEYR = 229,               // ??????????
	VLR_HONGQI = 230,               // ?足?足
	VLR_USER1 = 231,   //???∫1
	VLR_USER2 = 232,   //???∫2
	VLR_USER3 = 233,   //???∫3
	VLR_USER4 = 234,   //???∫4
	VLR_USER5 = 235,   //???∫5
	VLR_USER6 = 236,   //???∫6
	VLR_USER7 = 237,   //???∫7
	VLR_USER8 = 238    //???∫8
}VLR_VEHICLE_CLASS;

/********************?????﹞??℅??角??Begin*************************/
//?車??℅??﹞???角??
typedef enum _VSB_VOLKSWAGEN_CLASS
{
	VSB_VOLKSWAGEN_OTHER = 0,   // ?????“㊣?????
	VSB_VOLKSWAGEN_LAVIDA = 1,   // ????
	VSB_VOLKSWAGEN_CROSSLAVIDA = 2,   // ????
	VSB_VOLKSWAGEN_TIGUAN = 3,   // ????
	VSB_VOLKSWAGEN_TOURAN = 4,   // ??∼?
	VSB_VOLKSWAGEN_SANTANA = 5,   // ??????
	VSB_VOLKSWAGEN_SANTANA2000 = 6,   // ??????2000
	VSB_VOLKSWAGEN_SANTANA3000 = 7,   // ??????3000
	VSB_VOLKSWAGEN_VISTA = 8,   // ??????-????
	VSB_VOLKSWAGEN_PASSAT = 9,   // ??????
	VSB_VOLKSWAGEN_PASSATLINGYU = 10,  // ??????-?足??
	VSB_VOLKSWAGEN_POLO = 11,  // ?“??
	VSB_VOLKSWAGEN_POLOCROSS = 12,  // ?“??-????∼?
	VSB_VOLKSWAGEN_POLOGTI = 13,  // ?“??-GTI
	VSB_VOLKSWAGEN_SAGITAR = 14,  // ????
	VSB_VOLKSWAGEN_MAGOTAN = 15,  // ????
	VSB_VOLKSWAGEN_JETTA = 16,  // ????
	VSB_VOLKSWAGEN_BORA = 17,  // ㊣???
	VSB_VOLKSWAGEN_NEWGOLF = 18,  // ??????﹞辰
	VSB_VOLKSWAGEN_GOLFGTI = 19,  // ????﹞辰-GTI
	VSB_VOLKSWAGEN_GOL = 20,  // ????
	VSB_VOLKSWAGEN_CADDY = 21,  // ????
	VSB_VOLKSWAGEN_PHAETON = 22,  // ????
	VSB_VOLKSWAGEN_TOUREG = 23,  // ????
	VSB_VOLKSWAGEN_SCIROCCO = 24,  // ???芍
	VSB_VOLKSWAGEN_BEETLE = 25,  // ?℅????
	VSB_VOLKSWAGEN_SHARAN = 26,  // ????
	VSB_VOLKSWAGEN_MULTIVAN = 27,  // ??????
	VSB_VOLKSWAGEN_CARBONCOPY = 28,  // ?????車??-CC
	VSB_VOLKSWAGEN_VISTACHANGDA = 29,  // ??????????-????
	VSB_VOLKSWAGEN_BORASPORTLINE = 30,   // ㊣???-SPORTLINE
	VSR_VOLKSWAGEN_CC_1 = 31,   //?車??-CC-2012,2011,2010
	VSR_VOLKSWAGEN_Cross_POLO_1 = 32,   //?車??-Cross-POLO-2010,2007
	VSR_VOLKSWAGEN_Cross_POLO_2 = 33,   //?車??-Cross-POLO-2014,2012
	VSR_VOLKSWAGEN_MULTIVAN_1 = 34,   //?車??-Multivan-2014,2012,2011
	VSR_VOLKSWAGEN_POLO_1 = 35,   //?車??-POLO-2006,2005,2004,2003,2002
	VSR_VOLKSWAGEN_POLO_2 = 36,   //?車??-POLO-2013,2012,2011
	VSR_VOLKSWAGEN_POLO_JINQU_1 = 37,   //?車??-POLO????-2009,2008,2007,2006
	VSR_VOLKSWAGEN_POLO_JINQU_2 = 38,   //?車??-POLO????-2011
	VSR_VOLKSWAGEN_Tiguan_1 = 39,   //?車??-Tiguan-2011,2009
	VSR_VOLKSWAGEN_Tiguan_2 = 40,   //?車??-Tiguan-2014,2013,2012
	VSR_VOLKSWAGEN_XIALANG_1 = 41,   //?車??-????-2013,2012
	VSR_VOLKSWAGEN_BAOLAI_1 = 42,   //?車??-㊣???-2005,2004
	VSR_VOLKSWAGEN_BAOLAI_2 = 43,   //?車??-㊣???-2006
	VSR_VOLKSWAGEN_BAOLAI_3 = 44,   //?車??-㊣???-2012,2011,2010,2009,2008
	VSR_VOLKSWAGEN_BAOLAI_4 = 45,   //?車??-㊣???-2014,2013
	VSR_VOLKSWAGEN_SHANGKU_1 = 46,   //?車??-???芍-2014,2013
	VSR_VOLKSWAGEN_PASATE_1 = 47,   //?車??-??????-2003????,2001?足??
	VSR_VOLKSWAGEN_PASATE_2 = 48,   //?車??-??????-2007,2006,2005?足??
	VSR_VOLKSWAGEN_PASATE_3 = 49,   //?車??-??????-2009,2008,2007,2005,2004,2003,2001,2000
	VSR_VOLKSWAGEN_PASATE_4 = 50,   //?車??-??????-2011,2009?足??
	VSR_VOLKSWAGEN_PASATE_5 = 51,   //?車??-??????-2014,2013,2012,2011
	VSR_VOLKSWAGEN_JIEDA_1 = 52,   //?車??-????-2005CIF??∼谷,2002
	VSR_VOLKSWAGEN_JIEDA_2 = 53,   //?車??-????-2009,2008,2006,2005,2004
	VSR_VOLKSWAGEN_JIEDA_3 = 54,   //?車??-????-2012,2010
	VSR_VOLKSWAGEN_JIEDA_4 = 55,   //?車??-????-2013
	VSR_VOLKSWAGEN_LANGYI_1 = 56,   //?車??-????-2012,2011,2010,2009,2008
	VSR_VOLKSWAGEN_LANGYI_2 = 57,   //?車??-????-2013
	VSR_VOLKSWAGEN_SANGTANA_1 = 58,   //?車??-??????-2007,2002,2000,1999,1995
	VSR_VOLKSWAGEN_SANGTANA_2 = 59,   //?車??-??????-2014,2013
	VSR_VOLKSWAGEN_SANGTANA_3 = 60,   //?車??-??????2000-2003,2001,2000,1999,1998,1996
	VSR_VOLKSWAGEN_SANGTANA_4 = 61,   //?車??-??????3000-2007,2006,2005,2004,2003
	VSR_VOLKSWAGEN_SANGTANAZHIJUN_1 = 62,   //?車??-??????????(vista)-2011,2010,2009,2008
	VSR_VOLKSWAGEN_SANGTANAZHIJUN_2 = 63,   //?車??-??????????(vista)-2006
	VSR_VOLKSWAGEN_JIAKECHONG_1 = 64,   //?車??-?℅????-2010,2009,2008,2007,2006,2005
	VSR_VOLKSWAGEN_JIAKECHONG_2 = 65,   //?車??-?℅????-2014,2013
	VSR_VOLKSWAGEN_HUITENG_2 = 66,   //?車??-????-2010,2009,2007,2006
	VSR_VOLKSWAGEN_MAITENG_1 = 67,   //?車??-????-2011,2010,2009,2008,2007
	VSR_VOLKSWAGEN_MAITENG_2 = 68,   //?車??-????-2013,2012
	VSR_VOLKSWAGEN_TUAN_3 = 69,   //?車??-??∼?-2006,2005,2004
	VSR_VOLKSWAGEN_TUAN_1 = 70,   //?車??-??∼?-2010,2009,2008
	VSR_VOLKSWAGEN_TUAN_2 = 71,   //?車??-??∼?-2013,2012,2011
	VSR_VOLKSWAGEN_TUGUAN_1 = 72,   //?車??-????-2012,2011,2010
	VSR_VOLKSWAGEN_TURUI_1 = 73,   //?車??-????-2006,2005,2003
	VSR_VOLKSWAGEN_TURUI_2 = 74,   //?車??-????-2014,2013,2012,2011
	VSR_VOLKSWAGEN_SUTENG_1 = 75,   //?車??-????-2010,2009,2007,2006
	VSR_VOLKSWAGEN_SUTENG_2 = 76,   //?車??-????-2011
	VSR_VOLKSWAGEN_SUTENG_3 = 77,   //?車??-????-2014,2013,2012
	VSR_VOLKSWAGEN_GAOERFU_1 = 78,   //?車??-????﹞辰-2008,2007,2006,2005,2004,2003
	VSR_VOLKSWAGEN_GAOERFU_2 = 79,   //?車??-????﹞辰-2012,2011????,2012,2011,2010
	VSR_VOLKSWAGEN_GAOERFU_3 = 80,   //?車??-????﹞辰GTI-2013,2012,2011,2010
	VSR_VOLKSWAGEN_LANGYI_3 = 81,   //?車??-????-2014
	VSR_VOLKSWAGEN_HUITENG_1 = 82   //?車??-????-2004
} VSB_VOLKSWAGEN_CLASS;

//㊣???℅??﹞???角??
typedef enum _VBR_BUICK_CLASS
{
	VBR_BUICK_OTHER = 0,   // ?????“㊣?????
	VBR_BUICK_ENCORE = 1,   // ∼?????
	VBR_BUICK_GL8 = 2,   // GL8
	VBR_BUICK_LEGAL = 3,   // ????
	VBR_BUICK_LACROSS = 4,   // ????
	VBR_BUICK_EXCELLE = 5,   // ????
	VBR_BUICK_EXCELLEGT = 6,   // ????GT
	VBR_BUICK_WXCELLEXT = 7,   // ????XT
	VBR_BUICK_ENCLAVE = 8,   // ∼????℅
	VBR_BUICK_ROYAUM = 9,   // ???迄
	VBR_BUICK_SAIL = 10,  // ㊣????邦?﹞
	VBR_BUICK_EXCELLEHRV = 11,  // ????HRV
	VBR_BUICK_PARKAVENUE = 12,  // ?????車??
	VBR_BUICK_CENTURY = 13,   // ??????
	VBR_BUICK_GL8_1 = 14,   // ㊣???-GL8-2004,2003
	VBR_BUICK_GL8_2 = 15,   // ㊣???-GL8-2007,2006,2005
	VBR_BUICK_GL8_3 = 16,   // ㊣???-GL8-2010_2008_2006_2005??℅?
	VBR_BUICK_GL8_4 = 17,   // ㊣???-GL8-2014,2013,2012,2011
	VBR_BUICK_GL8_5 = 18,   // ㊣???-GL8-2014_2013_2011????∼?
	VBR_BUICK_ENCORE_1 = 19,   // ㊣???-∼?????-2014,2013
	VBR_BUICK_ENCLAVE_1 = 20,   // ㊣???-∼????℅-2013,2010,2009
	VBR_BUICK_LEGAL_1 = 21,   // ㊣???-????-2001,2000,1999
	VBR_BUICK_LEGAL_2 = 22,   // ㊣???-????-2008,2006,2005,2004,2002
	VBR_BUICK_LEGAL_3 = 23,   // ㊣???-????-2013,2012,2011,2010,2009
	VBR_BUICK_LEGAL_4 = 24,   // ㊣???-????-2013_2012_2011????∼?
	VBR_BUICK_LEGAL_5 = 25,   // ㊣???-????-2014
	VBR_BUICK_LEGAL_6 = 26,   // ㊣???-????-2014????∼?
	VBR_BUICK_LACROSS_1 = 27,   // ㊣???-????-2008,2007,2006
	VBR_BUICK_LACROSS_2 = 28,   // ㊣???-????-2012,2011,2010,2009
	VBR_BUICK_LACROSS_3 = 29,   // ㊣???-????-2013
	VBR_BUICK_EXCELLE_1 = 30,   // ㊣???-????-2006,2005,2004
	VBR_BUICK_EXCELLE_2 = 31,   // ㊣???-????-2008_2006_2005_2004HRV
	VBR_BUICK_EXCELLE_3 = 32,   // ㊣???-????-2011,2009,2008
	VBR_BUICK_EXCELLE_4 = 33,   // ㊣???-????-2013
	VBR_BUICK_PARKAVENUE_1 = 34,   // ㊣???-?????車??-2011,2010,2009,2008,2007
	VBR_BUICK_SAIL_1 = 35,   // ㊣???-?邦?﹞-2004,2003
	VBR_BUICK_EXCELLEGT_1 = 36,   // ㊣???-????GT-2013,2012,2011,2010
	VBR_BUICK_WXCELLEXT_1 = 37,   // ㊣???-????XT-2014,2013,2012,2010
	VBR_BUICK_CENTURY_1 = 38,   // ㊣???-??????-2000
	VBR_BUICK_RONGYU_1 = 39   // ㊣???-???迄-2005,2004
}VBR_BUICK_CLASS;

//㊣??赤℅??﹞???角??
typedef enum _VSB_BMW_CLASS
{
	VSB_BMW_OTHER = 0,   // ?????“㊣?????
	VSB_BMW_3SERIES = 1,   // ㊣??赤3??
	VSB_BMW_5SERIES = 2,   // ㊣??赤5??
	VSB_BMW_X1 = 3,   // ㊣??赤X1
	VSB_BMW_1SERIES = 4,   // ㊣??赤1??
	VSB_BMW_7SERIES = 5,   // ㊣??赤7??
	VSB_BMW_X3 = 6,   // ㊣??赤X3
	VSB_BMW_X5 = 7,   // ㊣??赤X5
	VSB_BMW_X6 = 8,   // ㊣??赤X6
	VSB_BMW_Z4 = 9,   // ㊣??赤Z4
	VSB_BMW_MINI = 10,  // ????
	VSB_BMW_6SERIES = 11,   //㊣??赤6??
	VSB_BMW_YIXI_1 = 12,     // ㊣??赤-1??-2011,2010,2008,2007
	VSB_BMW_YIXI_2 = 13,     // ㊣??赤-1??-2013,2012
	VSB_BMW_SANXI_1 = 14,     // ㊣??赤-3??-2004
	VSB_BMW_SANXI_2 = 15,     // ㊣??赤-3??-2007,2005
	VSB_BMW_SANXI_3 = 16,     // ㊣??赤-3??-2012,2011,2010,2009
	VSB_BMW_SANXI_4 = 17,     // ㊣??赤-3??-2014,2013
	VSB_BMW_WUXI_1 = 18,     // ㊣??赤-5??-2010,2009,2008
	VSB_BMW_WUXI_2 = 19,     // ㊣??赤-5??-2013,2012,2011
	VSB_BMW_LIUXI_1 = 20,     // ㊣??赤-6??-????
	VSB_BMW_QIXI_1 = 21,     // ㊣??赤-7??-2011,2010,2009
	VSB_BMW_QIXI_2 = 22,     // ㊣??赤-7??-2013
	VSB_BMW_X1_1 = 23,     // ㊣??赤-X1-2012,2010
	VSB_BMW_X1_2 = 24,     // ㊣??赤-X1-2014,2013
	VSB_BMW_X3_1 = 25,     // ㊣??赤-X3-2009,2008,2006
	VSB_BMW_X3_2 = 26,     // ㊣??赤-X3-2013,2012,2011
	VSB_BMW_X5_1 = 27,     // ㊣??赤-X5-2010,2009,2008
	VSB_BMW_X5_2 = 28,     // ㊣??赤-X5-2013,2012,2011
	VSB_BMW_X5_3 = 29,     // ㊣??赤-X5-2013??????
	VSB_BMW_X6_1 = 30,     // ㊣??赤-X6-2013,2012,2011,2009,2008
	VSB_BMW_Z4_1 = 31     // ㊣??赤-Z4-2004
}VSB_BMW_CLASS;

//㊣???℅??﹞???角??
typedef enum _VSB_HONDA_CLASS
{
	VSB_HONDA_OTHER = 0,   // ?????“㊣?????
	VSB_HONDA_CRV = 1,   // ㊣???CR-V(????)
	VSB_HONDA_JADE = 2,   // ????
	VSB_HONDA_CIVIC = 3,   // ???辰
	VSB_HONDA_SPIRIOR = 4,   // ??????
	VSB_HONDA_CIIMO = 5,   // ???迆
	VSB_HONDA_ELYSION = 6,   // ∼?????
	VSB_HONDA_OBYSSEY = 7,   // ∼??邦??
	VSB_HONDA_FIT = 8,   // ﹞???
	VSB_HONDA_NEWCITY = 9,   // ﹞?﹞?
	VSB_HONDA_CROSSTOUR = 10,  // ?豕????
	VSB_HONDA_CRIDER = 11,  // ?豕??
	VSB_HONDA_ACCORD = 12,  // ???車
	VSB_HONDA_CITY = 13,  // ????
	VSB_HONDA_ANTILOCK = 14,  // ∼?????
	VSB_HONDA_CRZ = 15,   // ㊣???CR-Z
	VSB_HONDA_CRV_1 = 16,   // ㊣???-CR-V-2004
	VSB_HONDA_CRV_2 = 17,   // ㊣???-CR-V-2005
	VSB_HONDA_CRV_3 = 18,   // ㊣???-CR-V-2008,2007
	VSB_HONDA_CRV_4 = 19,   // ㊣???-CR-V-2010
	VSB_HONDA_CRV_5 = 20,   // ㊣???-CR-V-2013,2012
	VSB_HONDA_CRIDER_1 = 21,   // ㊣???-?豕??-2014,2013
	VSB_HONDA_OBYSSEY_1 = 22,   // ㊣???-∼????邦-2002
	VSB_HONDA_OBYSSEY_2 = 23,   // ㊣???-∼????邦-2006,2005,2004
	VSB_HONDA_OBYSSEY_3 = 24,   // ㊣???-∼????邦-2008,2007
	VSB_HONDA_OBYSSEY_4 = 25,   // ㊣???-∼????邦-2011????∼?
	VSB_HONDA_CIVIC_1 = 26,   // ㊣???-???辰-2007
	VSB_HONDA_CIVIC_5 = 27,   // ㊣???-???辰-1996
	VSB_HONDA_CIVIC_2 = 28,   // ㊣???-???辰-2008,2006
	VSB_HONDA_CIVIC_3 = 29,   // ㊣???-???辰-2009
	VSB_HONDA_CIVIC_4 = 30,   // ㊣???-???辰-2013,2012,2011
	VSB_HONDA_CITY_1 = 31,   // ㊣???-????-2008,2007,2006
	VSB_HONDA_SPIRIOR_1 = 32,   // ㊣???-??????-2009
	VSB_HONDA_SIMING_1 = 33,   // ㊣???-???迆-2012
	VSB_HONDA_JIEDE_1 = 34,   // ㊣???-????-2013
	VSB_HONDA_CROSSTOUR_1 = 35,   // ㊣???-?豕????-2013,2012,2010
	VSB_HONDA_AILISHEN_1 = 36,   // ㊣???-∼?????-2012
	VSB_HONDA_NEWCITY_1 = 37,   // ㊣???-﹞?﹞?-2009
	VSB_HONDA_NEWCITY_2 = 38,   // ㊣???-﹞?﹞?-2011
	VSB_HONDA_NEWCITY_3 = 39,   // ㊣???-﹞?﹞?-2014,2012
	VSB_HONDA_ACCORD_1 = 40,   // ㊣???-???車-1996
	VSB_HONDA_ACCORD_2 = 41,   // ㊣???-???車-1999
	VSB_HONDA_ACCORD_3 = 42,   // ㊣???-???車-2001
	VSB_HONDA_ACCORD_4 = 43,   // ㊣???-???車-2003
	VSB_HONDA_ACCORD_5 = 44,   // ㊣???-???車-2008
	VSB_HONDA_ACCORD_6 = 45,   // ㊣???-???車-2010
	VSB_HONDA_ACCORD_7 = 46,   // ㊣???-???車-2011
	VSB_HONDA_ACCORD_8 = 47,   // ㊣???-???車-2012
	VSB_HONDA_ACCORD_9 = 48,   // ㊣???-???車-2013
	VSB_HONDA_ACCORD_10 = 49,   // ㊣???-???車-2014
	VSB_HONDA_FIT_1 = 50,   // ㊣???-﹞???-2004
	VSB_HONDA_FIT_2 = 51,   // ㊣???-﹞???-2004???芍
	VSB_HONDA_FIT_3 = 52,   // ㊣???-﹞???-2005
	VSB_HONDA_FIT_4 = 53,   // ㊣???-﹞???-2007
	VSB_HONDA_FIT_5 = 54,   // ㊣???-﹞???-2008
	VSB_HONDA_FIT_6 = 55   // ㊣???-﹞???-2013,2011
}VSB_HONDA_CLASS;

//㊣那??℅??﹞???角??
typedef enum _VSB_PEUGEOT_CLASS
{
	VSB_PEUGEOT_OTHER = 0,   // ?????“㊣?????
	VSB_PEUGEOT_2008 = 1,   // ㊣那??2008
	VSB_PEUGEOT_207 = 2,   // ㊣那??207
	VSB_PEUGEOT_SENNA = 3,   // ?邦??
	VSB_PEUGEOT_3008 = 4,   // ㊣那??3008
	VSB_PEUGEOT_301 = 5,   // ㊣那??301
	VSB_PEUGEOT_307 = 6,   // ㊣那??307
	VSB_PEUGEOT_308 = 7,   // ㊣那??308
	VSB_PEUGEOT_408 = 8,   // ㊣那??408
	VSB_PEUGEOT_508 = 9,   // ㊣那??508
	VSB_PEUGEOT_206 = 10,  // ㊣那??206
	VSB_PEUGEOT_407 = 11,   // ㊣那??407
	VSB_PEUGEOT_206_1 = 12, // ㊣那??-206-????
	VSB_PEUGEOT_207_1 = 13, // ㊣那??-207???芍-2011,2010,2009
	VSB_PEUGEOT_207_2 = 14, // ㊣那??-207???芍-2013
	VSB_PEUGEOT_3008_1 = 15, // ㊣那??-3008-2014,2013
	VSB_PEUGEOT_301_1 = 16, // ㊣那??-301-????
	VSB_PEUGEOT_307_1 = 17, // ㊣那??-307???芍-2007,2006,2005,2004
	VSB_PEUGEOT_307_2 = 18, // ㊣那??-307???芍-2010,2009,2008
	VSB_PEUGEOT_307_3 = 19, // ㊣那??-307???芍-2013_2012_2011CROSS
	VSB_PEUGEOT_308_1 = 20, // ㊣那??-308-2014,2013,2012
	VSB_PEUGEOT_407_1 = 21, // ㊣那??-407-????
	VSB_PEUGEOT_408_1 = 22, // ㊣那??-408-2012,2011,2010
	VSB_PEUGEOT_408_2 = 23, // ㊣那??-408-2013
	VSB_PEUGEOT_508_1 = 24, // ㊣那??-508-2014,2013,2012,2011
	VSB_PEUGEOT_207_3 = 25, // ㊣那??-207???芍-2011,2010,2009
	VSB_PEUGEOT_307_4 = 26 // ㊣那??-307???芍-2013,2012,2010,2009,2008

}VSB_PEUGEOT_CLASS;

//﹞芍??℅??﹞???角??
typedef enum _VSB_TOYOTA_CLASS
{
	VSB_TOYOTA_OTHER = 0,   // ?????“㊣?????
	VSB_TOYOTA_HIGHLANDER = 1,   // ??????
	VSB_TOYOTA_CAMRY = 2,   // ??????
	VSB_TOYOTA_YARIS = 3,   // ??????
	VSB_TOYOTA_YARISL = 4,   // YARIS L??足?
	VSB_TOYOTA_VERSO = 5,   // ????
	VSB_TOYOTA_HUAGUAN = 6,   // ?“??
	VSB_TOYOTA_CROWN = 7,   // ????
	VSB_TOYOTA_COROLLA = 8,   // ?“????
	VSB_TOYOTA_COSTER = 9,   // ??????
	VSB_TOYOTA_PRADO = 10,  // ?????角
	VSB_TOYOTA_PRIUS = 11,  // ??????
	VSB_TOYOTA_RAV4 = 12,  // ﹞芍??RAV4
	VSB_TOYOTA_REZI = 13,  // ????
	VSB_TOYOTA_VIOS = 14,  // ????
	VSB_TOYOTA_PREVIA = 15,  // ????????
	VSB_TOYOTA_HIACE = 16,  // ???“
	VSB_TOYOTA_86 = 17,  // ﹞芍??86
	VSB_TOYOTA_SPEQUOIA = 18,  // ?足??
	VSB_TOYOTA_LANDCRUISER = 19,  // ???????車??(?????芍?﹞?車)
	VSB_TOYOTA_SIENNA = 20,  // ?邦??
	VSB_TOYOTA_CAMRYHYBRID = 21,  // ??????-HYBRID
	VSB_TOYOTA_GRACE = 22,  // ?車????
	VSB_TOYOTA_ALPHARD = 23,   // ∼???﹞“
	VSB_TOYOTA_RAV4_1 = 24,   // ﹞芍??-RAV4-2012????????∼?,2011,2010,2009
	VSB_TOYOTA_RAV4_2 = 25,   // ﹞芍??-RAV4-2013
	VSB_TOYOTA_86_1 = 26,   // ﹞芍??-﹞芍??86-????
	VSB_TOYOTA_JIAMEI_2 = 27,   // ﹞芍??-????-2001,2000,1999,1998
	VSB_TOYOTA_JIAMEI_3 = 28,   // ﹞芍??-????-2004,2003,2002
	VSB_TOYOTA_LANDEKLZ_1 = 29,   // ﹞芍??-?????芍?﹞?車-2011????∼?,2010,2007
	VSB_TOYOTA_KAIMEIRUI_1 = 30,   // ﹞芍??-??????-2008,2007,2006
	VSB_TOYOTA_KAIMEIRUI_2 = 31,   // ﹞芍??-??????-2012℅???
	VSB_TOYOTA_KAIMEIRUI_3 = 32,   // ﹞芍??-??????-2012????∼?,2011,2010,2009
	VSB_TOYOTA_KAIMEIRUI_4 = 33,   // ﹞芍??-??????-2013,2012
	VSB_TOYOTA_KAIMEIRUI_5 = 34,   // ﹞芍??-??????-2013????∼?
	VSB_TOYOTA_KAIMEIRUI_6 = 35,   // ﹞芍??-??????-2014,2012????
	VSB_TOYOTA_KALUOLA_1 = 36,   // ﹞芍??-?“????-2010,2009,2008,2007,2006
	VSB_TOYOTA_KALUOLA_2 = 37,   // ﹞芍??-?“????-2013,2012,2011
	VSB_TOYOTA_AIERFA_1 = 38,   // ﹞芍??-∼???﹞“-2011,2010
	VSB_TOYOTA_AIERFA_2 = 39,   // ﹞芍??-∼???﹞“-2013,2012
	VSB_TOYOTA_WEICHI_1 = 40,   // ﹞芍??-????-2004,2003
	VSB_TOYOTA_WEICHI_2 = 41,   // ﹞芍??-????-2007,2006,2005
	VSB_TOYOTA_WEICHI_3 = 42,   // ﹞芍??-????-2009,2008
	VSB_TOYOTA_WEICHI_4 = 43,   // ﹞芍??-????-2013,2012,2011,2010
	VSB_TOYOTA_WEICHI_5 = 44,   // ﹞芍??-????-2014
	VSB_TOYOTA_PULADUO_1 = 45,   // ﹞芍??-?????角-2007,2006,2005,2004
	VSB_TOYOTA_PULADUO_2 = 46,   // ﹞芍??-?????角-2010
	VSB_TOYOTA_PULADUO_3 = 47,   // ﹞芍??-?????角-2014
	VSB_TOYOTA_PURUIWEIYA_1 = 48,   // ﹞芍??-????????-2004
	VSB_TOYOTA_PURUIWEIYA_4 = 49,   // ﹞芍??-????????-2005
	VSB_TOYOTA_PURUIWEIYA_2 = 50,   // ﹞芍??-????????-2006
	VSB_TOYOTA_PURUIWEIYA_3 = 51,   // ﹞芍??-????????-2012,2010,2008,2007
	VSB_TOYOTA_KESIDA_1 = 52,   // ﹞芍??-??????-2007
	VSB_TOYOTA_KESIDA_2 = 53,   // ﹞芍??-??????-2011
	VSB_TOYOTA_HANLANDA_1 = 54,   // ﹞芍??-??????-2011,2009
	VSB_TOYOTA_HANLANDA_2 = 55,   // ﹞芍??-??????-2012
	VSB_TOYOTA_HANLANDA_3 = 56,   // ﹞芍??-??????-2013
	VSB_TOYOTA_HAISHI_1 = 57,   // ﹞芍??-???“-2001
	VSB_TOYOTA_HUANGGUAN_1 = 58,   // ﹞芍??-????-1999
	VSB_TOYOTA_HUANGGUAN_2 = 59,   // ﹞芍??-????-2009,2008,2007,2006,2005
	VSB_TOYOTA_HUANGGUAN_3 = 60,   // ﹞芍??-????-2010
	VSB_TOYOTA_HUANGGUAN_4 = 61,   // ﹞芍??-????-2012,2011
	VSB_TOYOTA_HONGSHAN_1 = 62,   // ﹞芍??-?足??-????
	VSB_TOYOTA_HUAGUAN_1 = 63,   // ﹞芍??-?“??-2006,2005,2004
	VSB_TOYOTA_HUAGUAN_2 = 64,   // ﹞芍??-?“??-2009,2008,2007
	VSB_TOYOTA_HUAGUAN_3 = 65,   // ﹞芍??-?“??-2011,2010
	VSB_TOYOTA_YIZHI_1 = 66,   // ﹞芍??-????-2014,2012,2011
	VSB_TOYOTA_RUIZHI_1 = 67,   // ﹞芍??-????-2006,2005
	VSB_TOYOTA_RUIZHI_2 = 68,   // ﹞芍??-????-2009,2008,2007
	VSB_TOYOTA_RUIZHI_3 = 69,   // ﹞芍??-????-2010﹞???∼?
	VSB_TOYOTA_RUIZHI_4 = 70,   // ﹞芍??-????-2012,2010
	VSB_TOYOTA_LUDIXUNYANG_1 = 71,   // ﹞芍??-???????車??-????
	VSB_TOYOTA_YALISHI_1 = 72,   // ﹞芍??-??????-2009,2008,2007
	VSB_TOYOTA_YALISHI_2 = 73,   // ﹞芍??-??????-2012,2011,2010
	VSB_TOYOTA_RAV4_3 = 74,   // ﹞芍??-RAV4-2013????,????,℅???,2012
	VSB_TOYOTA_YARiSL_1 = 75,   // ﹞芍??-YARiS-L
	VSB_TOYOTA_JIAMEI_1 = 76,   // ﹞芍??-????-1996
	VSB_TOYOTA_PLATZ_1 = 77,   // ﹞芍??-PLATZ-1999
	VSB_TOYOTA_LANDEKLZ_2 = 78   // ﹞芍??-?????芍?﹞?車-2014,2012????∼?,2012
}VSB_TOYOTA_CLASS;

//????℅??﹞???角??
typedef enum _VSB_FORD_CLASS
{
	VSB_FORD_OTHER = 0,   // ?????“㊣?????
	VSB_FORD_FOCUS = 1,   // ??????
	VSB_FORD_FIESTA = 2,   // ???那??
	VSB_FORD_SMAX = 3,   // ?車????
	VSB_FORD_MONDEO = 4,   // ?????﹞
	VSB_FORD_ECOSPORT = 5,   // ?赤??
	VSB_FORD_ESCAPE = 6,   // ?赤??
	VSB_FORD_ZHISHENG = 7,   // ???∟
	VSB_FORD_ESCORT = 8,   // ??????
	VSB_FORD_EXPLORER = 9,   // ??????????
	VSB_FORD_EDGE = 10,  // ????
	VSB_FORD_TRANSIT = 11,   // ????
	VSB_FORD_QUANSHUN_1 = 12,    // ????-????-????
	VSB_FORD_JIANIANHUA_1 = 13,    // ????-???那?????芍-2006,2005,2004
	VSB_FORD_JIANIANHUA_2 = 14,    // ????-???那?????芍-2011,2010,2009
	VSB_FORD_JIANIANHUA_3 = 15,    // ????-???那?????芍-2013
	VSB_FORD_JIANIANHUA_4 = 16,    // ????-???那?????芍-2012
	VSB_FORD_TANXIANZHE_1 = 17,    // ????-??????-2013,2011
	VSB_FORD_FOCUS_1 = 18,    // ????-?????????芍-2005
	VSB_FORD_FOCUS_2 = 19,    // ????-?????????芍-2005??????
	VSB_FORD_FOCUS_3 = 20,    // ????-?????????芍-2008,2007,2006
	VSB_FORD_FOCUS_4 = 21,    // ????-?????????芍-2013,2012????,2011,2009
	VSB_FORD_FOCUS_5 = 22,    // ????-?????????芍-2012
	VSB_FORD_FOCUS_6 = 23,    // ????-?????????芍-2012?迄㊣?,?㊣??,2011,2010,2009,2008
	VSB_FORD_YIBO_1 = 24,    // ????-?赤??-2013
	VSB_FORD_YIHU_1 = 25,    // ????-?赤??-2013
	VSB_FORD_MENGDIOU_1 = 26,    // ????-?????﹞-2003
	VSB_FORD_MENGDIOU_2 = 27,    // ????-?????﹞-2005,2004
	VSB_FORD_MENGDIOU_3 = 28,    // ????-?????﹞-2006
	VSB_FORD_MENGDIOU_4 = 29,    // ????-?????﹞-2013
	VSB_FORD_MENGDIOU_5 = 30,    // ????-?????﹞-???∟-2010,2008,2007
	VSB_FORD_MENGDIOU_6 = 31,    // ????-?????﹞-???∟-2011
	VSB_FORD_RUIJIE_1 = 32,    // ????-????-2012,2011
	VSB_FORD_MAIKESI_1 = 33    // ????-?車????-2008,2007
}VSB_FORD_CLASS;

//???迆℅??﹞???角??
typedef enum _VSB_NISSAN_CLASS
{
	VSB_NISSAN_OTHER = 0,   // ?????“㊣?????
	VSB_NISSAN_XTRAIL = 1,   // ????
	VSB_NISSAN_MURANO = 2,   // ????
	VSB_NISSAN_LIVINA = 3,   // ?那??
	VSB_NISSAN_MARCH = 4,   // ?那??
	VSB_NISSAN_TIIDA = 5,   // ????
	VSB_NISSAN_TEANA = 6,   // ?足??
	VSB_NISSAN_QASHQAI = 7,   // ????
	VSB_NISSAN_SYLPHY = 8,   // ?迄??
	VSB_NISSAN_SUNNY = 9,   // ????
	VSB_NISSAN_D22PICKUP = 10,  // D22?∟?“
	VSB_NISSAN_D22VAN = 11,  // D22?芍????
	VSB_NISSAN_CABSTAR = 12,  // ????????
	VSB_NISSAN_HV200 = 13,  // NV200
	VSB_NISSAN_PALADIN = 14,  // ??????
	VSB_NISSAN_YIDA = 15,  // ????
	VSB_NISSAN_DUCK = 16,  // ????
	VSB_NISSAN_CEFIRO = 17,  // ﹞???
	VSB_NISSAN_FENGSHENBLUEBIRD = 18,  // ﹞???????
	VSB_NISSAN_FENGSHENSUNNY = 19,  // ﹞???????
	VSB_NISSAN_SUCCE = 20,  // ?∫??
	VSB_NISSAN_FUGA = 21,  // ﹞???
	VSB_NISSAN_BLUEBIRD4 = 22,  // ????4?迆
	VSB_NISSAN_VENUCIA = 23,  // ????
	VSB_NISSAN_QUEST = 24,  // ?車??
	VSB_NISSAN_GENISS = 25,   // ????
	VSB_NISSAN_NV200_1 = 26,  // ???迆-NV200-2013,2012,2011,2010
	VSB_NISSAN_TIANLAI_1 = 27,  // ???迆-?足??-2005,2004
	VSB_NISSAN_TIANLAI_2 = 28,  // ???迆-?足??-2007,2006
	VSB_NISSAN_TIANLAI_3 = 29,  // ???迆-?足??-2010,2008
	VSB_NISSAN_TIANLAI_4 = 30,  // ???迆-?足??-2012,2011
	VSB_NISSAN_TIANLAI_5 = 31,  // ???迆-?足??-2012??∼???∼?,2011????
	VSB_NISSAN_TIANLAI_6 = 32,  // ???迆-?足??-2014,2013
	VSB_NISSAN_QIJUN_1 = 33,  // ???迆-????-2010,2008
	VSB_NISSAN_QIJUN_2 = 34,  // ???迆-????-2012,2011????
	VSB_NISSAN_PALADING_1 = 35,  // ???迆-??????-2013,2011,2006,2004
	VSB_NISSAN_LOULAN_1 = 36,  // ???迆-????-2013,2011
	VSB_NISSAN_LOULAN_2 = 37,  // ???迆-?那??-2010
	VSB_NISSAN_LANNIAO_1 = 38,  // ???迆-????-2002
	VSB_NISSAN_LANNIAO_2 = 39,  // ???迆-????-2003
	VSB_NISSAN_LANNIAO_3 = 40,  // ???迆-????-2004
	VSB_NISSAN_GUISHI_1 = 41,  // ???迆-?車??-2005
	VSB_NISSAN_XUANYI_1 = 42,  // ???迆-?迄??-2006
	VSB_NISSAN_XUANYI_2 = 43,  // ???迆-?迄??-2012????,2009,2007
	VSB_NISSAN_XUANYI_3 = 44,  // ???迆-?迄??-2014,2012
	VSB_NISSAN_XIAOKE_1 = 45,  // ???迆-????-2009,2008
	VSB_NISSAN_XIAOKE_2 = 46,  // ???迆-????-2013,2012,2011
	VSB_NISSAN_SUNNY_3 = 47,  // ???迆-????-2004
	VSB_NISSAN_SUNNY_1 = 48,  // ???迆-????-2006,2005
	VSB_NISSAN_SUNNY_2 = 49,  // ???迆-????-2012,2011
	VSB_NISSAN_YIDA_1 = 50,  // ???迆-????-2008,2006,2005
	VSB_NISSAN_YIDA_2 = 51,  // ???迆-????-????
	VSB_NISSAN_FENGDU_1 = 52,  // ???迆-﹞???-????
	VSB_NISSAN_FENGYA_1 = 53,  // ???迆-﹞???-????
	VSB_NISSAN_LIWEI_1 = 54,  // ???迆-?那??-2008,2007
	VSB_NISSAN_LIWEI_2 = 55,  // ???迆-?那??-2009
	VSB_NISSAN_LIWEI_3 = 56,  // ???迆-?那??-2010
	VSB_NISSAN_LIWEI_4 = 57,  // ???迆-?那??-2011,2010????,2008足?????
	VSB_NISSAN_JUNYI_1 = 58,  // ???迆-????-2006
	VSB_NISSAN_QIDA_1 = 59,  // ???迆-????-2006,2005
	VSB_NISSAN_QIDA_2 = 60,  // ???迆-????-2009,2008
	VSB_NISSAN_QIDA_3 = 61,  // ???迆-????-2013,2012,2011
	VSB_NISSAN_RUIQI_1 = 62   // ???迆-?????∟?“-2009??????
}VSB_NISSAN_CLASS;

//∼???℅??﹞???角??
typedef enum _VSB_AUDI_CLASS
{
	VSB_AUDI_OTHER = 0,   // ?????“㊣?????
	VSB_AUDI_A3 = 1,   // ∼???A3
	VSB_AUDI_A4L = 2,   // ∼???A4L
	VSB_AUDI_A6L = 3,   // ∼???A6L
	VSB_AUDI_Q3 = 4,   // ∼???Q3
	VSB_AUDI_Q5 = 5,   // ∼???Q5
	VSB_AUDI_A1 = 6,   // ∼???A1
	VSB_AUDI_A4 = 7,   // ∼???A4
	VSB_AUDI_A5 = 8,   // ∼???A5
	VSB_AUDI_A6 = 9,   // ∼???A6
	VSB_AUDI_A7 = 10,  // ∼???A7
	VSB_AUDI_A8L = 11,  // ∼???A8L
	VSB_AUDI_Q7 = 12,  // ∼???Q7
	VSB_AUDI_S5 = 13,  // ∼???S5
	VSB_AUDI_TT = 14,  // ∼???TT
	VSB_AUDI_100 = 15,  // ∼???100
	VSB_AUDI_200 = 16,  // ∼???200
	VSB_AUDI_S7 = 17,  // ∼???S7
	VSB_AUDI_S8 = 18,  // ∼???S8
	VSB_AUDI_100_1 = 19,   // ∼???-100-????
	VSB_AUDI_200_1 = 20,   // ∼???-200-????
	VSB_AUDI_A1_1 = 21,   // ∼???-A1-2014,2013,2012
	VSB_AUDI_A3_1 = 22,   // ∼???-A3-2013,2010????∼?
	VSB_AUDI_A3_2 = 23,   // ∼???-A3-2013??????,2011,2010
	VSB_AUDI_A4_1 = 24,   // ∼???-A4-2005?迆?迆,2000????∼?
	VSB_AUDI_A4_2 = 25,   // ∼???-A4-2007,2006?迆?迆,2004????
	VSB_AUDI_A4L_1 = 26,   // ∼???-A4L-2013
	VSB_AUDI_A5_1 = 27,   // ∼???-A5-2011,2010
	VSB_AUDI_A6_1 = 28,   // ∼???-A6-1996,1995,1991
	VSB_AUDI_A6L_1 = 29,   // ∼???-A6L-2008,2007,2006,2005
	VSB_AUDI_A6L_2 = 30,   // ∼???-A6L-2011,2010,2009
	VSB_AUDI_A6L_3 = 31,   // ∼???-A6L-2014,2013,2012
	VSB_AUDI_A7_1 = 32,   // ∼???-A7-2014,2013??????,2012,2011
	VSB_AUDI_A8L_1 = 33,   // ∼???-A8L-2006
	VSB_AUDI_A8L_2 = 34,   // ∼???-A8L-2009,2008
	VSB_AUDI_A8L_3 = 35,   // ∼???-A8L-2011
	VSB_AUDI_A8L_4 = 36,   // ∼???-A8L-2013,2012
	VSB_AUDI_Q3_1 = 37,   // ∼???-Q3-2014,2013,2012
	VSB_AUDI_Q5_1 = 38,   // ∼???-Q5-2012,2010???? 
	VSB_AUDI_Q5_2 = 39,   // ∼???-Q5-2012??????,2010???∼∼?
	VSB_AUDI_Q5_3 = 40,   // ∼???-Q5-2012??????,2011,2010,2009
	VSB_AUDI_Q5_4 = 41,   // ∼???-Q5-2013
	VSB_AUDI_Q7_1 = 42,   // ∼???-Q7-2007
	VSB_AUDI_Q7_2 = 43,   // ∼???-Q7-2014,2013
	VSB_AUDI_S7_1 = 44,   // ∼???-S7-2013
	VSB_AUDI_S8_1 = 45,   // ∼???-S8-2013
	VSB_AUDI_TT_2 = 46,   // ∼???-TT-2010,2008,2007
	VSB_AUDI_TT_3 = 47,   // ∼???-TT-2012,2011
	VSB_AUDI_TT_4 = 48,   // ∼???-TT-2013,2013,2011TTS
	VSB_AUDI_TT_1 = 49   // ∼???-TT-2008TTS
}VSB_AUDI_CLASS;

//?赤℅???℅??﹞???角??
typedef enum _VSB_MAZDA_CLASS
{
	VSB_MAZDA_OTHER = 0,   // ?????“㊣?????
	VSB_MAZDA_CX5 = 1,   // ?赤℅???CX5
	VSB_MAZDA_2 = 2,   // ?赤℅???2
	VSB_MAZDA_3 = 3,   // ?赤℅???3
	VSB_MAZDA_6 = 4,   // ?赤℅???6
	VSB_MAZDA_8 = 5,   // ?赤℅???8
	VSB_MAZDA_COREWING = 6,   // ???赤
	VSB_MAZDA_CX7 = 7,   // ?赤℅???CX7
	VSB_MAZDA_X5 = 8,   // ?赤℅???X5
	VSB_MAZDA_5 = 9,   // ?赤℅???5
	VSB_MAZDA_PREMACY = 10,  // ?????????赤
	VSB_MAZDA_MPV = 11,   // ?赤℅???MPV
	VSB_MAZDA_CX5_1 = 12,   // ?赤℅???-CX-5-2014,2013,2012????
	VSB_MAZDA_CX7_1 = 13,   // ?赤℅???-CX-7-2014,2013,2011,2010
	VSB_MAZDA_2_1 = 14,   // ?赤℅???-Mazda2???芍-2011,2009,2008,2007A
	VSB_MAZDA_3_1 = 15,   // ?赤℅???-Mazda3???芍-2004,2002
	VSB_MAZDA_3_2 = 16,   // ?赤℅???-Mazda3???芍-2009,2007
	VSB_MAZDA_3_3 = 17,   // ?赤℅???-Mazda3???芍-2012,2010
	VSB_MAZDA_3_4 = 18,   // ?赤℅???-Mazda3???????芍-2013,2012
	VSB_MAZDA_5_1 = 19,   // ?赤℅???-Mazda5-2010,2008,2007
	VSB_MAZDA_5_2 = 20,   // ?赤℅???-Mazda5-2013,2012,2011
	VSB_MAZDA_6_2 = 21,   // ?赤℅???-Mazda6-2006
	VSB_MAZDA_6_3 = 22,   // ?赤℅???-Mazda6-2007
	VSB_MAZDA_8_1 = 23,   // ?赤℅???-Mazda8-2013,2011,2010
	VSB_MAZDA_PREMACY_1 = 24,   // ?赤℅???-?????赤-2003
	VSB_MAZDA_PREMACY_2 = 25,   // ?赤℅???-?????赤-2006,2005,2004
	VSB_MAZDA_COREWING_1 = 26,   // ?赤℅???-???赤-2012,2011,2010,2009
	VSB_MAZDA_COREWING_2 = 27,   // ?赤℅???-???赤????-2011,2010
	VSB_MAZDA_COREWING_3 = 28,   // ?赤℅???-???赤????-2012
	VSB_MAZDA_2_2 = 29,   // ?赤℅???-Mazda2???豕(???芍)-2011,2010,2008
	VSB_MAZDA_6_1 = 30,   // ?赤℅???-Mazda6-2004
	VSB_MAZDA_6_4 = 31   // ?赤℅???-Mazda6-2014,2013,2012,2011,2010
}VSB_MAZDA_CLASS;

//??﹞???℅??﹞???角??
typedef enum _VSB_CHEVROLET_CLASS
{
	VSB_CHEVROLET_OTHER = 0,   // ?????“㊣?????
	VSB_CHEVROLET_NEWAVEO = 1,   // ∼??“?﹞
	VSB_CHEVROLET_EPICA = 2,   // ?∼??
	VSB_CHEVROLET_CRUZE = 3,   // ????℅?
	VSB_CHEVROLET_CAPTIVA = 4,   // ??????
	VSB_CHEVROLET_MALIBU = 5,   // ????㊣?
	VSB_CHEVROLET_SAIL = 6,   // ?邦?﹞
	VSB_CHEVROLET_CAMARO = 7,   // ??????
	VSB_CHEVROLET_LECHENG = 8,   // ????
	VSB_CHEVROLET_LOVA = 9,   // ??﹞?
	VSB_CHEVROLET_OLDAVEO = 10,  // ????-????∼??“?﹞
	VSB_CHEVROLET_SPARK = 11,  // ????
	VSB_CHEVROLET_SAILSRV = 12,   // ?邦?﹞SRV
	VSB_CHEVROLET_LOVA_1 = 13,   // ??﹞???-??﹞?-2009,2008,2007,2006
	VSB_CHEVROLET_LOVA_2 = 14,   // ??﹞???-??﹞?-2010
	VSB_CHEVROLET_SPARK_1 = 15,   // ??﹞???-????-2010,2009,2006,2005,2004
	VSB_CHEVROLET_SPARK_2 = 16,   // ??﹞???-????-2010??????
	VSB_CHEVROLET_OLDAVEO_1 = 17,   // ??﹞???-????-2005
	VSB_CHEVROLET_OLDAVEO_2 = 18,   // ??﹞???-????-2010,2009,2008
	VSB_CHEVROLET_EPICA_1 = 19,   // ??﹞???-?∼??-2005
	VSB_CHEVROLET_EPICA_3 = 20,   // ??﹞???-?∼??-2012,2011,2010
	VSB_CHEVROLET_EPICA_4 = 21,   // ??﹞???-?∼??-2012,2011,2010????∼?
	VSB_CHEVROLET_EPICA_5 = 22,   // ??﹞???-?∼??-2013
	VSB_CHEVROLET_NEWAVEO_1 = 23,   // ??﹞???-∼??“?﹞???芍-2013,2012,2011
	VSB_CHEVROLET_CAPTIVA_1 = 24,   // ??﹞???-??????-2010,2008
	VSB_CHEVROLET_CAPTIVA_2 = 25,   // ??﹞???-??????-2014,2013,2012,2011
	VSB_CHEVROLET_KEMAILUO_1 = 26,   // ??﹞???-??????-2012,2011
	VSB_CHEVROLET_CRUZE_1 = 27,   // ??﹞???-????℅?-2014,2013,2012,2011,2010,2009
	VSB_CHEVROLET_SAIL_1 = 28,   // ??﹞???-?邦?﹞???芍-2005
	VSB_CHEVROLET_SAIL_2 = 29,   // ??﹞???-?邦?﹞???芍-2013,2011,2010
	VSB_CHEVROLET_MALIBU_1 = 30,   // ??﹞???-????㊣?-2014,2013,2012
	VSB_CHEVROLET_EPICA_2 = 31   // ??﹞???-?∼??-2009,2008,2007
}VSB_CHEVROLET_CLASS;

//???迆?迆℅??﹞???角??
typedef enum _VSB_CITROEN_CLASS
{
	VSB_CITROEN_OTHER = 0,   // ?????“㊣?????
	VSB_CITROEN_C2 = 1,   // ???迆?迆C2
	VSB_CITROEN_C4L = 2,   // ???迆?迆C4L
	VSB_CITROEN_C5 = 3,   // ???迆?迆C5
	VSB_CITROEN_ELYSEE = 4,   // ∼????芍???芍
	VSB_CITROEN_CQUATRELIANGXIANG = 5,   // ???????芍
	VSB_CITROEN_CQUATRESANXIANG = 6,   // ???????芍
	VSB_CITROEN_SAEAPICASSO = 7,   // ????-㊣????‾
	VSB_CITROEN_PICASSO = 8,   // ㊣????‾
	VSB_CITROEN_CTRIOMPHE = 9,   // ????
	VSB_CITROEN_XSARA = 10,  // ????  
	VSB_CITROEN_SHENLONGFUKANG = 11,  // ???迆????
	VSB_CITROEN_CHANGANDS = 12,   // ?∟∼?DS
	VSB_CITROEN_C2_1 = 13,   // ???迆?迆-C2-2012,2010,2008,2007,2006
	VSB_CITROEN_C4L_1 = 14,   // ???迆?迆-C4L-2014,2013
	VSB_CITROEN_C4PICASSO_1 = 15,   // ???迆?迆-C4㊣????‾-2009????∼?
	VSB_CITROEN_C5_1 = 16,   // ???迆?迆-C5-2012,2011,2010
	VSB_CITROEN_CQUATRESANXIANG_1 = 17,   // ???迆?迆-???????芍-2013,2012
	VSB_CITROEN_CQUATRELIANGXIANG_1 = 18,   // ???迆?迆-???????芍-2011,2010,2009,2008
	VSB_CITROEN_CTRIOMPHE_1 = 19,   // ???迆?迆-????-2010,2009,2008,2006
	VSB_CITROEN_FUKANG_1 = 20,   // ???迆?迆-????-2006,2005,2004,2003,2002
	VSB_CITROEN_ELYSEE_1 = 21,   // ???迆?迆-∼????芍???芍-2006,2005,2004,2003,2002
	VSB_CITROEN_ELYSEE_2 = 22,   // ???迆?迆-∼????芍???芍-2013,2012,2011,2010,2009,2008,2007
	VSB_CITROEN_SAEAPICASSO_1 = 23    // ???迆?迆-????-㊣????‾-2014 
}VSB_CITROEN_CLASS;

//???迆℅??﹞???角??
typedef enum _VSB_HYUNDAI_CLASS
{
	VSB_HYUNDAI_OTHER = 0,   // ?????“㊣?????
	VSB_HYUNDAI_IX35 = 1,   // ???迆IX35
	VSB_HYUNDAI_LANGDONG = 2,   // ????
	VSB_HYUNDAI_MOINCA = 3,   // ????
	VSB_HYUNDAI_SHENGDA = 4,   // ?∟??
	VSB_HYUNDAI_VERNA = 5,   // ????
	VSB_HYUNDAI_RUIYI = 6,   // ????
	VSB_HYUNDAI_SONATAEIGHT = 7,   // ?‾????∼?
	VSB_HYUNDAI_TUCSON = 8,   // ???∟
	VSB_HYUNDAI_YUEDONG = 9,   // ????
	VSB_HYUNDAI_ELANTRA = 10,  // ??????
	VSB_HYUNDAI_GRANDSANTAFE = 11,  // ????
	VSB_HYUNDAI_COUPE = 12,  // ?芍??
	VSB_HYUNDAI_MATRIX = 13,  // ????
	VSB_HYUNDAI_ACCENT = 14,  // ??????
	VSB_HYUNDAI_IX30 = 15,  // ???迆IX30
	VSB_HYUNDAI_SONATA = 16,  // ?‾????
	VSB_HYUNDAI_REFINE = 17,  // ???迆??﹞???????
	VSB_HYUNDAI_MISTRA = 18,  // ????
	VSB_HYUNDAI_SONATAYUFENG = 19,  // ?‾????-?迄?豕
	VSB_HYUNDAI_SANTAFE = 20,  // ???迆????﹞?
	VSB_HYUNDAI_HUIYI = 21,   // ???????赤
	VSB_HYUNDAI_I30_1 = 22,   // ???迆-i30-2010,2009
	VSB_HYUNDAI_IX35_1 = 23,   // ???迆-ix35-2012,2011,2010
	VSB_HYUNDAI_YILANTE_1 = 24,   // ???迆-??????-2006,2005,2004
	VSB_HYUNDAI_YILANTE_2 = 25,   // ???迆-??????-2007???芍
	VSB_HYUNDAI_YILANTE_3 = 26,   // ???迆-??????-2011
	VSB_HYUNDAI_SHENGDA_1 = 27,   // ???迆-?????∟??-2013,2012
	VSB_HYUNDAI_MINGTU_1 = 28,   // ???迆-????-2014,2013
	VSB_HYUNDAI_MINGYU_1 = 29,   // ???迆-????-2013,2011,2009
	VSB_HYUNDAI_SHENGDAFEI_1 = 30,   // ???迆-????﹞?-????
	VSB_HYUNDAI_YUXIANG_1 = 31,   // ???迆-?迄?豕-2005????∼?
	VSB_HYUNDAI_YUXIANG_2 = 32,   // ???迆-?迄?豕-2006,2005
	VSB_HYUNDAI_YUEDONG_1 = 33,   // ???迆-????-2010,2009,2008
	VSB_HYUNDAI_YUEDONG_2 = 34,   // ???迆-????-2012,2011
	VSB_HYUNDAI_SHENGDA_2 = 35,   // ???迆-???∟??-2009,2006
	VSB_HYUNDAI_SHENGDA_3 = 36,   // ???迆-???∟??-2012,2011,2010
	VSB_HYUNDAI_LANGDONG_1 = 37,   // ???迆-????-2013,2012
	VSB_HYUNDAI_GERUI_1 = 38,   // ???迆-????-????
	VSB_HYUNDAI_RUIYI_1 = 39,   // ???迆-????-2014
	VSB_HYUNDAI_RUINA_1 = 40,   // ???迆-???????芍-2013,2010
	VSB_HYUNDAI_RUINA_2 = 41,   // ???迆-???????芍-2014,2013,2011
	VSB_HYUNDAI_RUIFENG_1 = 42,   // ???迆-??﹞?-????
	VSB_HYUNDAI_SUONATA_1 = 43,   // ???迆-?‾????-2008,2007,2006,2004,2003㊣那℅???
	VSB_HYUNDAI_SUONATA_2 = 44,   // ???迆-?‾????-2010,2009,2008,2006,2004
	VSB_HYUNDAI_SOUNATA_3 = 45,   // ???迆-?‾????∼?-2011,2010
	VSB_HYUNDAI_WEILAKESI_1 = 46,   // ???迆-????????-2012,2010,2008,2007
	VSB_HYUNDAI_MEIJIA_1 = 47,   // ???迆-????-????
	VSB_HYUNDAI_JINKOUHUIYI_1 = 48,   // ???迆-???????赤-????
	VSB_HYUNDAI_TUSHENG_1 = 49,   // ???迆-???∟-2005
	VSB_HYUNDAI_TUSHENG_2 = 50,   // ???迆-???∟-2011,2009,2008,2006
	VSB_HYUNDAI_TUSHENG_3 = 51,   // ???迆-???∟-2013
	VSB_HYUNDAI_KUPAI_1 = 52,   // ???迆-?芍??-????
	VSB_HYUNDAI_YASHENTE_1 = 53,   // ???迆-??????-2008,2006
	VSB_HYUNDAI_YASHENTE_2 = 54,   // ???迆-??????-2011
	VSB_HYUNDAI_LINGXIANG_1 = 55,   // ???迆-?足?豕-2009,2008
	VSB_HYUNDAI_FEISI_1 = 56    // ???迆-﹞???-2011
}VSB_HYUNDAI_CLASS;

//????℅??﹞???角??
typedef enum _VSB_CHERY_CLASS
{
	VSB_CHERY_OTHER = 0,   // ?????“㊣?????
	VSB_CHERY_A1 = 1,   // ????A1
	VSB_CHERY_A3 = 2,   // ????A3
	VSB_CHERY_EASTAR = 3,   // ??﹞???℅?
	VSB_CHERY_FULWIN = 4,   // ﹞???
	VSB_CHERY_QQ = 5,   // ????QQ
	VSB_CHERY_E5 = 6,   // ????E5
	VSB_CHERY_COWIN = 7,   // ?足??
	VSB_CHERY_TIGGO = 8,   // ????
	VSB_CHERY_A5 = 9,   // ????A5
	VSB_CHERY_S16 = 10,  // ????S16
	VSB_CHERY_YOUYA = 11,  // ????
	VSB_CHERY_V5 = 12,  // ????V5
	VSB_CHERY_E3 = 13,   // ????E3
	VSB_CHERY_A1_1 = 14,     // ????-A1-2011,2008,2007
	VSB_CHERY_A3LIANGXIANG_1 = 15,     // ????-A3???芍-2012,2010,2009
	VSB_CHERY_A5_1 = 16,     // ????-A5-2009,2007,2006
	VSB_CHERY_QQ_1 = 17,     // ????-QQ-2006,2005,2004
	VSB_CHERY_QQ_2 = 18,     // ????-QQ-2010,2007,2006
	VSB_CHERY_QQ_3 = 19,     // ????-QQ-2012,2011,2010,2009,2007
	VSB_CHERY_QQ_4 = 20,     // ????-QQ-2012????∼?
	VSB_CHERY_QQ_5 = 21,     // ????-QQ-2013
	VSB_CHERY_DONGFANGZHIZI_1 = 22,     // ????-??﹞???℅?-2005,2004,2003
	VSB_CHERY_DONGFANGZHIZI_2 = 23,     // ????-??﹞???℅?-2007,2006
	VSB_CHERY_DONGFANGZHIZI_3 = 24,     // ????-??﹞???℅?CROSS-2009,2008,2007
	VSB_CHERY_YOUYA_1 = 25,     // ????-????-????
	VSB_CHERY_E3_1 = 26,     // ????-????E3-2013
	VSB_CHERY_E5_1 = 27,     // ????-????E5-2014,2012,2011
	VSB_CHERY_QIYUN1_1 = 28,     // ????-?足??1-2010
	VSB_CHERY_QIYUN1_2 = 29,     // ????-?足??1-2012
	VSB_CHERY_QIYUN_1 = 30,     // ????-?足??-2004
	VSB_CHERY_QIYUN_2 = 31,     // ????-?足??-2009,2008,2007,2006
	VSB_CHERY_QIYUN2_1 = 32,     // ????-?足??2-2012
	VSB_CHERY_QIYUN2_2 = 33,     // ????-?足??2-2012??????,2010
	VSB_CHERY_QIYUN3_1 = 34,     // ????-?足??3-2010
	VSB_CHERY_RUIHU_1 = 35,     // ????-????-2007,2006,2005
	VSB_CHERY_RUIHU_2 = 36,     // ????-????-2009,2007
	VSB_CHERY_RUIHU_3 = 37,     // ????-????-2012,2011
	VSB_CHERY_RUIHU_4 = 38,     // ????-????-2013,2012℅???DVVT??????
	VSB_CHERY_RUIHU_5 = 39,     // ????-????-2013????∼???????,2012????∼???????
	VSB_CHERY_FENGYUN2SANXIANG_1 = 40,     // ????-﹞???2???芍-2010
	VSB_CHERY_AIRUIZE7_1 = 41     // ????-∼????車7-2014,2013
}VSB_CHERY_CLASS;

//????℅??﹞???角??
typedef enum _VSB_KIA_CLASS
{
	VSB_KIA_OTHER = 0,   // ?????“㊣?????
	VSB_KIA_K2 = 1,   // ????K2
	VSB_KIA_K3 = 2,   // ????K3
	VSB_KIA_K5 = 3,   // ????K5
	VSB_KIA_RIO = 4,   // ???﹞
	VSB_KIA_CERATO = 5,   // ?邦????
	VSB_KIA_SPORTAGER = 6,   // ?“??
	VSB_KIA_SOUL = 7,   // ????
	VSB_KIA_ZHIPAO = 8,   // ????
	VSB_KIA_CARENS = 9,   // ????
	VSB_KIA_CARNIVAL = 10,  // ????
	VSB_KIA_OPTIMA = 11,  // ????
	VSB_KIA_OPIRUS = 12,  // ?﹞﹞?????
	VSB_KIA_MAXIMA = 13,  // ?∫???赤
	VSB_KIA_FORTE = 14,  // ??????
	VSB_KIA_SORENTO = 15,  // ?‾????
	VSB_KIA_K2_1 = 16,   // ????-K2-2013,2012,2011
	VSB_KIA_K3_1 = 17,   // ????-K3-2012
	VSB_KIA_K5_1 = 18,   // ????-K5-2012,2011
	VSB_KIA_RUIOU_1 = 19,   // ????-RIO???﹞-2009,2007
	VSB_KIA_QIANLIMA_1 = 20,   // ????-?∫???赤-2004
	VSB_KIA_QIANLIMA_2 = 21,   // ????-?∫???赤-2006,2005
	VSB_KIA_JIAHUA_1 = 22,   // ????-????-????
	VSB_KIA_XINJIALE_1 = 23,   // ????-??????-2011
	VSB_KIA_ZHIPAO_1 = 24,   // ????-????-2014,2012,2011,2010
	VSB_KIA_SHIPAO_1 = 25,  // ????-?“??-2008,2007,2005
	VSB_KIA_SHIPAO_2 = 26,  // ????-?“??-2011,2009
	VSB_KIA_SHIPAO_3 = 27,  // ????-?“??-2012
	VSB_KIA_SHIPAO_4 = 28,  // ????-?“??-2013
	VSB_KIA_FURUIDI_1 = 29,  // ????-??????-2012,2011,2009
	VSB_KIA_FURUIDI_2 = 30,  // ????-??????-2014
	VSB_KIA_XIUER_1 = 31,  // ????-????-2012,2010
	VSB_KIA_SUOLANTUO_1 = 32,  // ????-?‾????-2006
	VSB_KIA_SUOLANTUO_2 = 33,  // ????-?‾????-2012,2010,2009
	VSB_KIA_SAILATU_1 = 34,  // ????-?邦????-2006,2005
	VSB_KIA_SAILATU_2 = 35,  // ????-?邦????-2007
	VSB_KIA_SAILATU_3 = 36,  // ????-?邦????-2012,2010GLS
	VSB_KIA_YUANJIAN_1 = 37   // ????-????-????
}VSB_KIA_CLASS;

//㊣???℅??﹞???角??
typedef enum _VSB_BENZ_CLASS
{
	VSB_BENZ_OTHER = 0,   // ?????“㊣?????
	VSB_BENZ_C = 1,   // ㊣???C??
	VSB_BENZ_E = 2,   // ㊣???E??
	VSB_BENZ_GLK = 3,   // ㊣???GLK??
	VSB_BENZ_WEITING = 4,   // ????-PINYIN
	VSB_BENZ_SPRINTER = 5,   // ?豕??
	VSB_BENZ_VIANO = 6,   // ?“????
	VSB_BENZ_M = 7,   // ㊣???M??
	VSB_BENZ_CLK = 8,   // ㊣???CLK??
	VSB_BENZ_G = 9,   // ㊣???G??
	VSB_BENZ_GL = 10,  // ㊣???GL??
	VSB_BENZ_R = 11,  // ㊣???R??
	VSB_BENZ_S = 12,  // ㊣???S??
	VSB_BENZ_A = 13,  // ㊣???A??
	VSB_BENZ_SMART = 14,  // ???那??(???谷)
	VSB_BENZ_B = 15,  // ㊣???B??
	VSB_BENZ_SLK = 16,  // ㊣???SLK??
	VSB_BENZ_MB100 = 17,  // ㊣???MB100
	VSB_BENZ_VITO = 18,  // ????
	VSB_BENZ_CLS = 19,  // ㊣???CLS??
	VSB_BENZ_SL = 20,   // ㊣???SL??
	VSB_BENZ_AJI_1 = 21,   // ㊣???-A??-2011,2009
	VSB_BENZ_AJI_2 = 22,   // ㊣???-A??-2013
	VSB_BENZ_BJI_1 = 23,   // ㊣???-B??-2010,2009
	VSB_BENZ_CJI_1 = 24,   // ㊣???-C??-2010,2008,2007?㊣????
	VSB_BENZ_CJI_2 = 25,   // ㊣???-C??-2013,2011,CGI
	VSB_BENZ_CJI_3 = 26,   // ㊣???-C??-2013,2011?㊣????
	VSB_BENZ_EJI_1 = 27,   // ㊣???-E??-2002
	VSB_BENZ_EJI_2 = 28,   // ㊣???-E??-2007,2006
	VSB_BENZ_EJI_3 = 29,   // ㊣???-E??-2013,2012,2011,2010,2009
	VSB_BENZ_EJI_4 = 30,   // ㊣???-E??-2013,2012,2011,2010,2009?㊣????
	VSB_BENZ_GLKJI_1 = 31,   // ㊣???-GLK??-2012,2011
	VSB_BENZ_GLKJI_2 = 32,   // ㊣???-GLK??-2012,2011??????,2008
	VSB_BENZ_GLKJI_3 = 33,   // ㊣???-GLK??-2014,2013
	VSB_BENZ_GLJI_1 = 34,   // ㊣???-GL??-2011
	VSB_BENZ_GLJI_2 = 35,   // ㊣???-GL??-2011℅??車??,2010
	VSB_BENZ_GLJI_3 = 36,   // ㊣???-GL??-2012,2010㊣㊣??∼?
	VSB_BENZ_GJI_1 = 37,   // ㊣???-G??-2013,2010,2009
	VSB_BENZ_MB100_1 = 38,   // ㊣???-MB100-2000
	VSB_BENZ_MLJI_1 = 39,   // ㊣???-ML??-2006,2005
	VSB_BENZ_MLJI_2 = 40,   // ㊣???-ML??-2010,2008
	VSB_BENZ_MLJI_3 = 41,   // ㊣???-ML??-2014,2012
	VSB_BENZ_RJI_1 = 42,   // ㊣???-R??-2006
	VSB_BENZ_RJI_2 = 43,   // ㊣???-R??-2007
	VSB_BENZ_RJI_3 = 44,   // ㊣???-R??-2014,2011,2010,2009
	VSB_BENZ_SLKJI_2 = 45,   // ㊣???-SLK??-2006,2004
	VSB_BENZ_SLKJI_3 = 46,   // ㊣???-SLK??-2010,2009
	VSB_BENZ_SLKJI_1 = 47,   // ㊣???-SLK??-2011
	VSB_BENZ_SJI_1 = 48,   // ㊣???-S??-2004
	VSB_BENZ_SJI_2 = 49,   // ㊣???-S??-2009_Hybrid,2008,2006
	VSB_BENZ_SJI_3 = 50,   // ㊣???-S??-2009,2008??????
	VSB_BENZ_SJI_4 = 51,   // ㊣???-S??-2012,2011,2010
	VSB_BENZ_LINGTE_1 = 52,   // ㊣???-?豕??-2013,2012,2011
	VSB_BENZ_WEIYANUO_1 = 53,   // ㊣???-?“????-2010,2006,2004
	VSB_BENZ_WEIYANUO_2 = 54,   // ㊣???-?“????-2014,2013,2012,2011
	VSB_BENZ_WEITING_1 = 55,   // ㊣???-????-2013,2011,2010
	VSB_BENZ_KECHE_1 = 56    // ㊣???-????????1-A??
}VSB_BENZ_CLASS;

//??????℅??﹞???角??
typedef enum _VSB_SKODA_CLASS
{
	VSB_SKODA_OTHER = 0,   // ?????“㊣?????
	VSB_SKODA_HAORUI = 1,   // 那???
	VSB_SKODA_FABIA = 2,   // ?∫??
	VSB_SKODA_OCTAVIA = 3,   // ?‾??
	VSB_SKODA_SUPERB = 4,   // ????
	VSB_SKODA_SPACEBACK = 5,   // 那???
	VSB_SKODA_RAPID = 6,   // 那???
	VSB_SKODA_YETI = 7,    // ?∼??
	VSB_SKODA_HAORUI_1 = 8,      // ??????-那???-2013,2012,2010,2009
	VSB_SKODA_MINGRUI_1 = 9,      // ??????-?‾??-2009,2008,2007
	VSB_SKODA_MINGRUI_2 = 10,      // ??????-?‾??-2014,2013,2012,2011,2010
	VSB_SKODA_MINGRUI_3 = 11,      // ??????-?‾??RS-2010
	VSB_SKODA_XINRUI_1 = 12,      // ??????-那???-2013??????
	VSB_SKODA_JINGRUI_1 = 13,      // ??????-?∫??-2011,2009,2008
	VSB_SKODA_JINGRUI_2 = 14,      // ??????-?∫??-2014,2013,2012
	VSB_SKODA_JINGRUI_3 = 15,      // ??????-?∫??-2014,2013,2012Sport∼?
	VSB_SKODA_SUPAI_1 = 16,      // ??????-????-2013
	VSB_SKODA_YEDI_1 = 17      // ??????-?∼??-2014,2013
}VSB_SKODA_CLASS;

//??﹞?℅??﹞???角??
typedef enum _VSB_DONGFENG_CLASS
{
	VSB_DONGFENG_OTHER = 0,   // ?????“㊣?????
	VSB_DONGFENG_JOYEARX5 = 1,   // ?∼??X5
	VSB_DONGFENG_LINGZHI = 2,   // ????
	VSB_DONGFENG_JOYEARX3 = 3,   // ?∼??X3
	VSB_DONGFENG_JOYEAR = 4,   // ?∼??
	VSB_DONGFENG_FENGXINGCM7 = 5,   // ﹞???CM7
	VSB_DONGFENG_YUFENG = 6,   // ?迄﹞?
	VSB_DONGFENG_FENGSHENA60 = 7,   // ﹞???A60
	VSB_DONGFENG_FENGSHENS30 = 8,   // ﹞???S30
	VSB_DONGFENG_FENGSHENH30CROSS = 9,   // ﹞???H30-CROSS
	VSB_DONGFENG_PICKUP = 10,  // ??﹞??∟?“
	VSB_DONGFENG_ZHONGXINGMIANBAOCHE = 11,  // ??﹞???????∼邦??
	VSB_DONGFENG_XIAOXINGMIANBAOCHE = 12,  // ??﹞???????∼邦??
	VSB_DONGFENG_ZHONGXINGVAN = 13,  // ??﹞?????????
	VSB_DONGFENG_QINGXINGXIANGSHIVAN = 14,  // ??﹞??芍???芍??????
	VSB_DONGFENG_QINGZHONGXINGVAN = 15,  // ??﹞??芍???????“????
	VSB_DONGFENG_FENGSHENMERCURY = 16,  // ﹞???????
	VSB_DONGFENG_SUCCE = 17,  // ?∫??
	VSB_DONGFENG_ODIN = 18,  // ∼???
	VSB_DONGFENG_YUMSUN = 19,  // ?迄?迄
	VSB_DONGFENG_RUIQI = 20,  // ????
	VSB_DONGFENG_FENGGUANG = 21,  // ﹞???
	VBR_DONGFENG_C35_1 = 22,   // ??﹞?-C35-2013
	VBR_DONGFENG_K07_1 = 23,   // ??﹞?-K07-2008
	VBR_DONGFENG_K07_2 = 24,   // ??﹞?-K07-2010,2006
	VBR_DONGFENG_V21_1 = 25,   // ??﹞?-V21-2011
	VBR_DONGFENG_JIALONG_1 = 26,   // ??﹞?-??﹞????迆-??????
	VBR_DONGFENG_XKFG_1 = 27,   // ??﹞?-??﹞?????﹞???-2013
	VBR_DONGFENG_CV03_1 = 28,   // ??﹞?-??﹞?CV03-2012
	VBR_DONGFENG_KAIPUTE_1 = 29,   // ??﹞?-??????-C390
	VBR_DONGFENG_DUOLIKA_1 = 30,   // ??﹞?-?角???“-S2800
	VBR_DONGFENG_DUOLIKA_2 = 31,   // ??﹞?-?角???“-XL???“
	VBR_DONGFENG_DUOLIKA_3 = 32,   // ??﹞?-?角???“-???“
	VBR_DONGFENG_TIANJIN_1 = 33,   // ??﹞?-?足??-4X2??????
	VBR_DONGFENG_TIANJIN_2 = 34,   // ??﹞?-?足??-A??
	VBR_DONGFENG_XBW_1 = 35,   // ??﹞?-??∼???-?芍?“1
	VBR_DONGFENG_XBW_2 = 36,   // ??﹞?-??∼???-?芍?“2
	VBR_DONGFENG_MENGKA_1 = 37,   // ??﹞?-???“-?芍?“
	VBR_DONGFENG_FURUIKA_1 = 38,   // ??﹞?-?????“-?芍?“1
	VBR_DONGFENG_RUIQI_1 = 39,   // ??﹞?-?????∟?“-2013,2010,2009
	VBR_DONGFENG_A60_1 = 40,   // ??﹞?﹞???-A60-2014,2012
	VBR_DONGFENG_H30_1 = 41,   // ??﹞?﹞???-H30-Cross-2012,2011
	VBR_DONGFENG_H30_2 = 42,   // ??﹞?﹞???-H30-Cross-2014,2013
	VBR_DONGFENG_H30_3 = 43,   // ??﹞?﹞???-H30-2012
	VBR_DONGFENG_JINGYI_1 = 44,   // ??﹞?﹞???-?∼??-2014_2012LV,2011??????
	VBR_DONGFENG_JINGYI_2 = 45,   // ??﹞?﹞???-?∼??-2014_2012XL,2011,2010,2009,2008,2007
	VBR_DONGFENG_JINGYI_3 = 46,   // ??﹞?﹞???-?∼??X5-2014,2013
	VBR_DONGFENG_LINGZHI_1 = 47,   // ??﹞?﹞???-????-2004
	VBR_DONGFENG_LINGZHI_2 = 48,   // ??﹞?﹞???-????-2011,2008,2007
	VBR_DONGFENG_LINGZHI_3 = 49,   // ??﹞?﹞???-????-2011Q3㊣那℅???,2010Q7
	VBR_DONGFENG_LINGZHI_4 = 50,   // ??﹞?﹞???-????-2014_2013M3
	VBR_DONGFENG_LINGZHI_5 = 51   // ??﹞?﹞???-????-2014_2013V3,2011M3_????∼?_??????
}VSB_DONGFENG_CLASS;

//㊣?????℅??﹞???角??
typedef enum _VSB_BYD_CLASS
{
	VSB_BYD_OTHER = 0,   // ?????“㊣?????
	VSB_BYD_F0 = 1,   // ㊣?????F0
	VSB_BYD_F3 = 2,   // ㊣?????F3
	VSB_BYD_F3R = 3,   // ㊣?????F3R
	VSB_BYD_F6 = 4,   // ㊣?????F6
	VSB_BYD_G3 = 5,   // ㊣?????G3
	VSB_BYD_G3R = 6,   // ㊣?????G3R
	VSB_BYD_G6 = 7,   // ㊣?????G6
	VSB_BYD_L3 = 8,   // ㊣?????L3
	VSB_BYD_M6 = 9,   // ㊣?????M6
	VSB_BYD_S6 = 10,  // ㊣?????S6
	VSB_BYD_SURUI = 11,  // ????
	VSB_BYD_FOLEL = 12,  // ???“??????
	VSB_BYD_SIRUI = 13,  // ????
	VSB_BYD_MT5 = 14,  // ㊣?????MT5(???谷)
	VSB_BYD_F0_1 = 15,        // ㊣?????-F0-2013,2012,2011,2010,2009,2008
	VSB_BYD_F3R_1 = 16,        // ㊣?????-F3R-2011,2009,2008,2007
	VSB_BYD_F6_1 = 17,        // ㊣?????-F6-2011,2009,2008
	VSB_BYD_G3R_1 = 18,        // ㊣?????-G3R-2011
	VSB_BYD_G6_1 = 19,        // ㊣?????-G6-2013,2012,2011
	VSB_BYD_L3_1 = 20,        // ㊣?????-L3-2013,2012,2011,2010
	VSB_BYD_M6_1 = 21,        // ㊣?????-M6-2013,2011,2010
	VSB_BYD_S6_1 = 22,        // ㊣?????-S6-2014,2013,2012,2011
	VSB_BYD_FULAIER_1 = 23,        // ㊣?????-??????-2005??????
	VSB_BYD_SURUI_1 = 24        // ㊣?????-????-2014,2013,2012
}VSB_BYD_CLASS;

//????℅??﹞???角??
typedef enum _VSB_SUZUKI_CLASS
{
	VSB_SUZUKI_OTHER = 0,   // ?????“㊣?????
	VSB_SUZUKI_ALTO = 1,   // ?∟∼?∼???
	VSB_SUZUKI_SCROSS = 2,   // ﹞???
	VSB_SUZUKI_SWIFT = 3,   // ?那?角
	VSB_SUZUKI_SX4 = 4,   // ?足??
	VSB_SUZUKI_LINGYANG = 5,   // ???辰
	VSB_SUZUKI_BEIDOUXING = 6,   // ㊣㊣?﹞??
	VSB_SUZUKI_LIANAA6 = 7,   // ??????-A6
	VSB_SUZUKI_LANDY = 8,   // ????
	VSB_SUZUKI_SPLASH = 9,   // ????
	VSB_SUZUKI_GRANDVITARA = 10,  // ??????????
	VSB_SUZUKI_JIMNY = 11,  // ???﹞?芍
	VSB_SUZUKI_KAZASHI = 12,  // ???車?‾
	VSB_SUZUKI_LIANA = 13,   // ??????
	VSB_SUZUKI_LIANA_1 = 14,     // ????-?????????芍-2012,2011,2010,2008,2007,2005
	VSB_SUZUKI_LIANA_2 = 15,     // ????-?????????芍-2013,2012,2011
	VSB_SUZUKI_BEIDOUXING_1 = 16,     // ????-㊣㊣?﹞??-2012,2011,2010,2009,2008,2007,2005,2004㊣那℅???
	VSB_SUZUKI_BEIDOUXING_2 = 17,     // ????-㊣㊣?﹞??-2013,2012,2011,2010,2009,2008,2007,2005,2004,2003
	VSB_SUZUKI_BEIDOUXING_3 = 18,     // ????-㊣㊣?﹞??-2013,2012,2011,2010,2009,2008,2007,2005,2004,2003??????
	VSB_SUZUKI_BEIDOUXING_4 = 19,     // ????-㊣㊣?﹞??-2013X5
	VSB_SUZUKI_JIMUNI_1 = 20,     // ????-???﹞?芍-2011,2010,2009,2007
	VSB_SUZUKI_JIMUNI_2 = 21,     // ????-???﹞?芍-2012
	VSB_SUZUKI_SX4_1 = 22,     // ????-?足??SX4???芍-2008,2006
	VSB_SUZUKI_SX4_2 = 23,     // ????-?足??SX4???芍-2010,2009
	VSB_SUZUKI_SX4_3 = 24,     // ????-?足??SX4???芍-2011A,2009,2008,2007
	VSB_SUZUKI_SX4_4 = 25,     // ????-?足??SX4???芍-2011B
	VSB_SUZUKI_SX4_5 = 26,     // ????-?足??SX4????-2013,2012,2011
	VSB_SUZUKI_ALTO_1 = 27,     // ????-∼???-2006,2001,2000,1999,1993㊣那℅???
	VSB_SUZUKI_ALTO_2 = 28,     // ????-∼???-2006,2004,2001,2000,1999,1993
	VSB_SUZUKI_ALTO_3 = 29,     // ????-∼???-2013
	VSB_SUZUKI_ALTO_4 = 30,     // ????-∼???-2014,2012,2011,2010,2009
	VSB_SUZUKI_SPLASH_1 = 31,     // ????-????-2013,2012,2011
	VSB_SUZUKI_LANDY_1 = 32,     // ????-????-2011,2010,2007
	VSB_SUZUKI_LINGYANG_2 = 33,     // ????-???辰-2006,2004,2003
	VSB_SUZUKI_LINGYANG_3 = 34,     // ????-???辰-2009,2008,2007
	VSB_SUZUKI_LINGYANG_4 = 35,     // ????-???辰-2011
	VSB_SUZUKI_LINGYANG_5 = 36,     // ????-???辰-2012
	VSB_SUZUKI_GRANDVITARA_1 = 37,     // ????-??????????-2011,2008,2007,2006
	VSB_SUZUKI_FENGYU_1 = 38,     // ????-﹞???-2014
	VSB_SUZUKI_SWIFT_1 = 39,     // ????-?那?角-2011_1.3L,2009,2008,2007,2005
	VSB_SUZUKI_SWIFT_2 = 40,     // ????-?那?角-2012,2011
	VSB_SUZUKI_KINGCHANG_1 = 41,     // ????-??????-2004
	VSB_SUZUKI_LINGYANG_1 = 42     // ????-???辰-2002
}VSB_SUZUKI_CLASS;

//????℅??﹞???角??
typedef enum _VSB_SGMW_CLASS
{
	VSB_SGMW_OTHER = 0,   // ?????“㊣?????
	VSB_SGMW_HONGGUANG = 1,   // ?????那??
	VSB_SGMW_HONGGUANGS = 2,   // ?????那??S
	VSB_SGMW_ZHIGUANG = 3,   // ????????
	VSB_SGMW_RONGGUANGS = 4,   // ????????S
	VSB_SGMW_RONGGUANG = 5,   // ????????
	VSB_SGMW_HONGTU = 6,   // ?????豕??
	VSB_SGMW_XINGWANG = 7,   // ???????迆
	VSB_SGMW_YANGGUANG = 8,   // ????????
	VSB_SGMW_XIAOXUANFENG = 9,   // ????????﹞?
	VSB_SGMW_WULINGZHIGUANG_1 = 10,       // ????-????????-2010,2009????
	VSB_SGMW_WULINGZHIGUANG_2 = 11,       // ????-????????-2010?????赤,?迄㊣???
	VSB_SGMW_WULINGZHIGUANG_3 = 12,       // ????-????????-2010?∟???赤,2008?芍??,2007
	VSB_SGMW_XINGWANG_1 = 13,       // ????-???迆??∼邦??-2003
	VSB_SGMW_XINGWANG_2 = 14,       // ????-???迆??∼邦??-2009㊣那℅?
	VSB_SGMW_XINGWANG_3 = 15,       // ????-???迆??∼邦??-2010,2009,2007,2006,2005,2004
	VSB_SGMW_HONNGUANG_1 = 16,       // ????-?那??-2013,2010
	VSB_SGMW_HONNGUANG_2 = 17,       // ????-?那??-2014,2013S
	VSB_SGMW_XIAOXUANFENG_1 = 18,       // ????-????﹞?-2006
	VSB_SGMW_YANGGUANG_1 = 19,       // ????-????-2006,2005,2004
	VSB_SGMW_YANGGUANG_2 = 20,       // ????-????-2008,2007
	VSB_SGMW_YANGGUANG_3 = 21,       // ????-????-2009,2006,2005????㊣那℅???
	VSB_SGMW_RONGGUANG_1 = 22,       // ????-??????∼邦??-2012,2011,2008?迄㊣?
	VSB_SGMW_RONGGUANG_2 = 23,       // ????-??????∼邦??-2012,2011,2008㊣那℅?
	VSB_SGMW_HONGTU_1 = 24        // ????-?豕??-2010,2009,2008,2007
}VSB_SGMW_CLASS;

//?∟∼?℅??﹞???角??
typedef enum _VSB_CHANA_CLASS
{
	VSB_CHANA_OTHER = 0,   // ?????“㊣?????
	VSB_CHANA_HONOR = 1,   // ?﹞??
	VSB_CHANA_XINGKA = 2,   // ?∟∼????“
	VSB_CHANA_ZHIXING = 3,   // ?∟∼?????
	VSB_CHANA_PICKUP = 4,   // ?∟∼????????“(?∟∼??∟?“)
	VSB_CHANA_ZHIXING2 = 5,   // ?∟∼?????2?迆
	VSB_CHANA_TAURUS = 6,   // ??????
	VSB_CHANA_XINGGUANG = 7,   // ?∟∼?????
	VSB_CHANA_BENNI = 8,   // ㊣?㊣?
	VSB_CHANA_ALSVIN = 9,   // ???豕
	VSB_CHANA_CX20 = 10,  // ?∟∼?CX20
	VSB_CHANA_CX30 = 11,  // ?∟∼?CX30
	VSB_CHANA_EADO = 12,  // ????
	VSB_CHANA_ZHIXINGS460 = 13,  // ?∟∼?????S460
	VSB_CHANA_CM8 = 14,  // ?∟∼?CM8
	VSB_CHANA_XINBAO = 15,  // ??㊣?
	VSB_CHANA_XUNLONG = 16,  // ???迆
	VSB_CHANA_YUNTONG = 17,  // ???“
	VSB_CHANA_LEIMENG = 18,  // ????
	VSB_CHANA_XINGYUN = 19,  // ?∟∼?????
	VSB_CHANA_OULIWEI = 20,  // ?﹞????
	VSB_CHANA_EADOXT = 21,   // ????XT
	VSB_CHANA_XINGYUN_1 = 22,      // ?∟∼?????-????-2004,2003,2000
	VSB_CHANA_OULIWEI_1 = 23,      // ?∟∼?????-?﹞????-2013
	VSB_CHANA_YUNTONG_1 = 24,      // ?∟∼?????-???“-2004
	VSB_CHANA_TAURUS_1 = 25,      // ?∟∼?????-??????-2013,2012,2011,2010
	VSB_CHANA_LEIMENG_1 = 26,      // ?∟∼?????-????-2005,2003
	VSB_CHANA_ZHIXING_1 = 27,      // ?∟∼?????-?∟∼?????-2010,2009
	VSB_CHANA_ZHIXING_2 = 28,      // ?∟∼?????-?∟∼?????-2013
	VSB_CHANA_ZHIXING_3 = 29,      // ?∟∼?????-?∟∼?????2-2009,2008
	VSB_CHANA_ZHIXING_4 = 30,      // ?∟∼?????-?∟∼?????2-2012
	VSB_CHANA_ZHIXING_5 = 31,      // ?∟∼?????-?∟∼?????S460-2010,2009
	VSB_CHANA_ZHIXING_6 = 32,      // ?∟∼?????-?∟∼?????SC6350-2003
	VSB_CHANA_PICKUP_1 = 33,      // ?∟∼?????-?∟∼?????????-2013,2012
	VSB_CHANA_XINGGUANG_1 = 34,      // ?∟∼?????-?∟∼?????4500-2009,2007
	VSB_CHANA_XINGGUANG_2 = 35,      // ?∟∼?????-?∟∼?????4500-2012
	VSB_CHANA_HONOR_1 = 36      // ?∟∼?????-?∟∼??﹞??-2014,2012
}VSB_CHANA_CLASS;

//?∟∼?????℅??﹞???角??
typedef enum _VSB_EADO_CLASS
{
	VSB_EADO_OTHER = 0,       // ?????“㊣?????
	VSB_EADO_CS_1 = 1,       // ?∟∼?????-CS35-2014,2013,2012
	VSB_EADO_CX_1 = 2,       // ?∟∼?????-CX20-2011
	VSB_EADO_CX_2 = 3,       // ?∟∼?????-CX30???芍-2010
	VSB_EADO_BENBEN_1 = 4,       // ?∟∼?????-㊣?㊣?-2008,2007,2006
	VSB_EADO_BENBEN_2 = 5,       // ?∟∼?????-㊣?㊣?-2008??????,2007??????
	VSB_EADO_BENBEN_3 = 6,       // ?∟∼?????-㊣?㊣?-2010
	VSB_EADO_BENBEN_4 = 7,       // ?∟∼?????-㊣?㊣?MINI-2011,2010
	VSB_EADO_BENBEN_5 = 8,       // ?∟∼?????-㊣?㊣?MINI-2012
	VSB_EADO_YUEXIANG_1 = 9,       // ?∟∼?????-???豕-2011,2010,2009
	VSB_EADO_YUEXIANG_2 = 10,       // ?∟∼?????-???豕-2012
	VSB_EADO_YUEXIANG_3 = 11,       // ?∟∼?????-???豕V3-2013,2012
	VSB_EADO_YUEXIANG_4 = 12,       // ?∟∼?????-???豕V5-2012
	VSB_EADO_YIDONG_1 = 13        // ?∟∼?????-????-2014,2013,2012
}VSB_EADO_CLASS;

//??㊣?℅??﹞???角??
typedef enum _VSB_JINBEI_CLASS
{
	VSB_JINBEI_OTHER = 0,   // ?????“㊣?????
	VSB_JINBEI_GRACE = 1,   // ??㊣??車????
	VSB_JINBEI_HIACE = 2,   // ??㊣????“
	VSB_JINBEI_HAIXING = 3,   // ????
	VSB_JINBEI_BADAO = 4,   // ??㊣?∼???
	VSB_JINBEI_LINGQI = 5,   // ?足??
	VSB_JINBEI_JINQI = 6,   // ????
	VSB_JINBEI_LINGCHI = 7,   // ?足??
	VSB_JINBEI_QIYUN = 8,   // ????
	VSB_JINBEI_ZHISHANG_1 = 9,       // ??㊣?-????S30-2014,2013,2012
	VSB_JINBEI_HAIXING_1 = 10,       // ??㊣?-????-2012
	VSB_JINBEI_HAIXING_2 = 11,       // ??㊣?-????-2012A7??????,2011
	VSB_JINBEI_HIACE_1 = 12,       // ??㊣?-???“-2008
	VSB_JINBEI_HIACE_2 = 13,       // ??㊣?-???“-2013,2011,2010
	VSB_JINBEI_HIACE_3 = 14,       // ??㊣?-???“-2013??????,2011????,2008㊣那℅???
	VSB_JINBEI_JINDIAN_1 = 15,       // ??㊣?-????-2009
	VSB_JINBEI_GRACE_1 = 16,       // ??㊣?-?車????MPV-2011,2008,2007
	VSB_JINBEI_GRACE_2 = 17,       // ??㊣?-?車????MPV-2011?迄?足??????,2010,2009,2007㊣那℅?9℅迄
	VSB_JINBEI_BADAO_1 = 18       // ??㊣?-∼???SUV-2011,2008 

}VSB_JINBEI_CLASS;

//????℅??﹞???角??
typedef enum _VSB_GEELY_CLASS
{
	VSB_GEELY_OTHER = 0,   // ?????“㊣?????
	VSB_GEELY_EC7 = 1,   // ????????EC7
	VSB_GEELY_EC8 = 2,   // ????????EC8                                                          
	VSB_GEELY_SC3 = 3,   // ????SC3
	VSB_GEELY_SC5RV = 4,   // ????SC5-RV
	VSB_GEELY_SC6 = 5,   // ????SC6
	VSB_GEELY_JINGYING = 6,   // ????
	VSB_GEELY_JINGGANG = 7,   // ????
	VSB_GEELY_SX7 = 8,   // ????SX7
	VSB_GEELY_HAOQING = 9,   // ???谷
	VSB_GEELY_MEIRI = 10,  // ????
	VSB_GEELY_YINGLUNSC7 = 11,  // ???℅SC7
	VSB_GEELY_PANDA = 12,  // ???“
	VSB_GEELY_YUANJING = 13,  // ???∼
	VSB_GEELY_ZIYOUJIAN = 14   // ℅?????
}VSB_GEELY_CLASS;

//????℅??﹞???角??
typedef enum _VSB_MITSUBISHI_CLASS
{
	VSB_MITSUBISHI_OTHER = 0,   // ?????“㊣?????
	VSB_MITSUBISHI_GALANT = 1,   // ?那??
	VSB_MITSUBISHI_ZINGER = 2,   // ???車
	VSB_MITSUBISHI_LANCER = 3,   // ????
	VSB_MITSUBISHI_LANCEREX = 4,   // ?赤??
	VSB_MITSUBISHI_PAJERO = 5,   // ??????
	VSB_MITSUBISHI_PAJEROSPORT = 6,   // ??????-????
	VSB_MITSUBISHI_JINGXUANASX = 7,   // ??足?ASX
	VSB_MITSUBISHI_GRANDIS = 8,   // ??????????
	VSB_MITSUBISHI_OUTLANDER = 9,   // ?﹞????
	VSB_MITSUBISHI_QINXINGYUEYE = 10,  // ?????芍?????∼
	VSB_MITSUBISHI_GTO = 11,  // ????GTO
	VSB_MITSUBISHI_SOVERAN = 12,  // ????????
	VSB_MITSUBISHI_LIONVEL = 13,  // ????????
	VSB_MITSUBISHI_HAFEISIMBO = 14,   // ??﹞??邦?赤
	VSB_MITSUBISHI_LANCEREX_1 = 15,   // ????-?????赤??-2012,2011,2010
	VSB_MITSUBISHI_JINGXUAN_1 = 16,   // ????-??足?-2012,2011
	VSB_MITSUBISHI_ZINGER_1 = 17,   // ????-???車-2011,2009
	VSB_MITSUBISHI_PAJERO_1 = 18,   // ????-??????-2004?迆?迆
	VSB_MITSUBISHI_PAJERO_2 = 19,   // ????-??????-2004????
	VSB_MITSUBISHI_PAJERO_3 = 20,   // ????-??????-2010????
	VSB_MITSUBISHI_PAJEROSPORT_1 = 21,   // ????-??????????-2011
	VSB_MITSUBISHI_GALANT_1 = 22,   // ????-?那??-2009
	VSB_MITSUBISHI_GALANDI_1 = 23,   // ????-??????-2007
	VSB_MITSUBISHI_GALANDI_2 = 24,   // ????-??????-2010
	VSB_MITSUBISHI_OUTLANDER_1 = 25,   // ????-?﹞????-2012,2011,2010
	VSB_MITSUBISHI_OUTLANDER_2 = 26,   // ????-?﹞????-2013
	VSB_MITSUBISHI_LINGYUE_1 = 27,   // ????-????-????
	VSB_MITSUBISHI_LANCER_1 = 28   // ????-????-2010
}VSB_MITSUBISHI_CLASS;

//?℅??????℅??﹞???角??
typedef enum _VSB_LEXUS_CLASS
{
	VSB_LEXUS_OTHER = 0,   // ?????“㊣?????
	VSB_LEXUS_ES = 1,   // ?℅??????ES
	VSB_LEXUS_CT = 2,   // ?℅??????CT                                                          
	VSB_LEXUS_RX = 3,   // ?℅??????RX
	VSB_LEXUS_IS = 4,   // ?℅??????IS
	VSB_LEXUS_LX = 5,   // ?℅??????LX
	VSB_LEXUS_GS = 6,   // ?℅??????GS
	VSB_LEXUS_GX = 7,   // ?℅??????GX
	VSB_LEXUS_LS = 8,    // ?℅??????LS
	VSB_LEXUS_CT_1 = 9,   // ?℅??????-CT-2013,2012,2011
	VSB_LEXUS_ES_1 = 10,   // ?℅??????-ES-1994
	VSB_LEXUS_ES_2 = 11,   // ?℅??????-ES-2010,2009,2006
	VSB_LEXUS_ES_3 = 12,   // ?℅??????-ES-2013,2012
	VSB_LEXUS_GS_1 = 13,   // ?℅??????-GS-2011,2010,2009,2008,2005
	VSB_LEXUS_GX_1 = 14,   // ?℅??????-GX-2012,2010
	VSB_LEXUS_IS_1 = 15,   // ?℅??????-IS-2011
	VSB_LEXUS_LS_1 = 16,   // ?℅??????-LS-1994
	VSB_LEXUS_LS_2 = 17,   // ?℅??????-LS-2005,2004
	VSB_LEXUS_LS_3 = 18,   // ?℅??????-LS-2009,2007,2006
	VSB_LEXUS_LX_1 = 19,   // ?℅??????-LX-2013,2012
	VSB_LEXUS_RX_1 = 20,   // ?℅??????-RX-2011,2010,2009
	VSB_LEXUS_RX_2 = 21,   // ?℅??????-RX-2013,2012
	VSB_LEXUS_RX_3 = 22   // ?℅??????-RX-2007
}VSB_LEXUS_CLASS;

//????℅??﹞???角??
typedef enum _VSB_ROEWE_CLASS
{
	VSB_ROEWE_OTHER = 0,   // ?????“㊣?????
	VSB_ROEWE_350 = 1,   // ????350
	VSB_ROEWE_550 = 2,   // ????550                                                          
	VSB_ROEWE_W5 = 3,   // ????W5
	VSB_ROEWE_950 = 4,   // ????950
	VSB_ROEWE_750 = 5,   // ????750
	VSB_ROEWE_350_1 = 6,   // ????-350-2011????∼?,2010
	VSB_ROEWE_350_2 = 7,   // ????-350-2014,2013,2012,2011
	VSB_ROEWE_550_1 = 8,   // ????-550-2012,2010,2009,2008
	VSB_ROEWE_750_1 = 9,   // ????-750-2009,2008,2007,2006
	VSB_ROEWE_750_2 = 10,  // ????-750-2012,2011
	VSB_ROEWE_950_1 = 11   // ????-950-2012
}VSB_ROEWE_CLASS;


//???赤℅??﹞???角??
typedef enum _VSB_HAIMA_CLASS
{
	VSB_HAIMA_OTHER = 0,   // ?????“㊣?????
	VSB_HAIMA_PREMARIN = 1,   // ?????赤
	VSB_HAIMA_S7 = 2,   // ???赤S7
	VSB_HAIMA_PRINCE = 3,   // ???赤??℅?
	VSB_HAIMA_CUPID = 4,   // ???赤2-??㊣???
	VSB_HAIMA_HATCHBACK = 5,   // ???赤3-????
	VSB_HAIMA_KNIGHT = 6,   // ????
	VSB_HAIMA_HAPPIN = 7,   // ??????
	VSB_HAIMA_FAMILY = 8,   // ??????
	VSB_HAIMA_M3 = 9,    // ???赤M3
	VSB_HAIMA_CUPID_1 = 10,   // ???赤-??㊣???-2012,2011,2010
	VSB_HAIMA_PREMARIN_1 = 11,   // ???赤-?????赤-2007
	VSB_HAIMA_PREMARIN_2 = 12,   // ???赤-?????赤-2012,2010
	VSB_HAIMA_HATCHBACK_1 = 13,   // ???赤-????-2010,2009
	VSB_HAIMA_HAPPIN_1 = 14,   // ???赤-??????-2010,2009,2008,2007,2004
	VSB_HAIMA_HAPPIN_2 = 15,   // ???赤-??????-2012,2011
	VSB_HAIMA_M3_1 = 16,   // ???赤-???赤3-2010,2008,2007
	VSB_HAIMA_FAMILY_1 = 17,   // ???赤-??????-2007,2006
	VSB_HAIMA_FAMILY_2 = 18,   // ???赤-??????-2010,2009,2008
	VSB_HAIMA_FAMILY_3 = 19,   // ???赤-??????-2011
	VSB_HAIMA_FAMILY_4 = 20,   // ???赤-??????-2014,2013,2012
	VSB_HAIMA_KNIGHT_1 = 21,   // ???赤-????-2013_2012A,2011,2010
	VSB_HAIMA_KNIGHT_2 = 22,   // ???赤-????-2013_2012B
	VSB_HAIMA_NEWHONGDA_1 = 23,   // ???赤??????-???豕??-2009
	VSB_HAIMA_NEWHONDGA_2 = 24,   // ???赤??????-???豕??-2012
	VSB_HAIMA_PRINCE_1 = 25,   // ???赤??????-???赤??℅?-2010
	VSB_HAIMA_RONGDA_1 = 26   // ???赤??????-????-2012

}VSB_HAIMA_CLASS;

//?∟??℅??﹞???角??
typedef enum _VSB_GREATWALL_CLASS
{
	VSB_GREATWALL_OTHER = 0,   // ?????“㊣?????
	VSB_GREATWALL_SING = 1,   // ?邦?∼
	VSB_GREATWALL_SAIJUN = 2,   // ?邦??
	VSB_GREATWALL_HAVAL = 3,   // ????
	VSB_GREATWALL_SAFE = 4,   // ?邦??
	VSB_GREATWALL_SAIKU = 5,   // ?邦?芍
	VSB_GREATWALL_SAILING = 6,   // ?邦??
	VSB_GREATWALL_KINGDEER = 7,   // ??????
	VSB_GREATWALL_DEER = 8,   // ????
	VSB_GREATWALL_WINGLE = 9,   // ﹞???
	VSB_GREATWALL_COOLBEAR = 10,  // ?芍??
	VSB_GREATWALL_LINGAO = 11,  // ?豕∼?
	VSB_GREATWALL_CROSS = 12,  // 足???
	VSB_GREATWALL_GWPERI = 13,  // ???谷
	VSB_GREATWALL_COWRY = 14,  // ???赤
	VSB_GREATWALL_M4 = 15,   // ?∟??M4
	VSB_GREATWALL_LINGAO_1 = 16,   // ?∟??-?豕∼?-2010
	VSB_GREATWALL_HAVAL_1 = 17,   // ?∟??-????H3-2010,2009
	VSB_GREATWALL_HAVAL_2 = 18,   // ?∟??-????H3-2012,2010,2009????∼?
	VSB_GREATWALL_HAVAL_3 = 19,   // ?∟??-????H5-2012,2011,2010
	VSB_GREATWALL_HAVAL_4 = 20,   // ?∟??-????H5-2012,2011,2010??????????
	VSB_GREATWALL_HAVAL_5 = 21,   // ?∟??-????H5-2012??????
	VSB_GREATWALL_HAVAL_6 = 22,   // ?∟??-????H5-2014,2013
	VSB_GREATWALL_HAVAL_8 = 23,   // ?∟??-????H6-2014,2013????∼?
	VSB_GREATWALL_HAVAL_9 = 24,   // ?∟??-????M2-2010
	VSB_GREATWALL_HAVAL_10 = 25,   // ?∟??-????M2-2013,2012
	VSB_GREATWALL_HAVAL_11 = 26,   // ?∟??-????M4-2012
	VSB_GREATWALL_HAVAL_12 = 27,   // ?∟??-??????-2011
	VSB_GREATWALL_CROSS_1 = 28,   // ?∟??-足???-2009,2008
	VSB_GREATWALL_CROSS_2 = 29,   // ?∟??-足???CROSS-2011,2009
	VSB_GREATWALL_JINGLING_1 = 30,   // ?∟??-???谷-????
	VSB_GREATWALL_SING_1 = 31,   // ?∟??-?邦?∼-2003
	VSB_GREATWALL_SAIKU_1 = 32,   // ?∟??-?邦?芍-2004
	VSB_GREATWALL_SAILING_1 = 33,   // ?∟??-?邦??-????
	VSB_GREATWALL_DIER_1 = 34,   // ?∟??-????-????
	VSB_GREATWALL_COOLBEAR_1 = 35,   // ?∟??-?芍??-2010,2009
	VSB_GREATWALL_KINGDEER_1 = 36,   // ?∟??-??????-2008,2007,2004,2003
	VSB_GREATWALL_GREATWALL_1 = 37,   // ?∟??-?∟??C20R-2013,2011
	VSB_GREATWALL_GREATWALL_2 = 38,   // ?∟??-?∟??C30-2010
	VSB_GREATWALL_GREATWALL_3 = 39,   // ?∟??-?∟??C30-2012
	VSB_GREATWALL_GREATWALL_4 = 40,   // ?∟??-?∟??C30-2013
	VSB_GREATWALL_GREATWALL_5 = 41,   // ?∟??-?∟??C50-2013,2012
	VSB_GREATWALL_GREATWALL_6 = 42,   // ?∟??-?∟??V80-2013,2012,2010,2009,2008
	VSB_GREATWALL_WINGLE_1 = 43,   // ?∟??-﹞???3-2011,2010,2007,2006
	VSB_GREATWALL_WINGLE_2 = 44,   // ?∟??-﹞???5-2014,2012,2011,2009 
	VSB_GREATWALL_HAVAL_7 = 45   // ?∟??-????H6-2013,2012,2011
}VSB_GREATWALL_CLASS;

//????℅??﹞???角??
typedef enum _VSB_DS_CLASS
{
	VSB_DS_OTHER = 0,          // ?????“㊣?????
	VSB_DS_KUBO_1 = 1,          // ????-?芍??-2011,2010,2009,2008
	VSB_DS_KUWEI_1 = 2,          // ????-?芍??-2011,2010,2009
	VSB_DS_KUWEI_2 = 3           // ????-?芍??-2013
}VSB_DS_CLASS;

//?﹞??℅??﹞???角??
typedef enum _VSB_LANDROVER_CLASS
{
	VSB_LANDROVER_OTHER = 0,   // ?????“㊣?????
	VSB_LANDROVER_FAXIAN_1 = 1,   // ?﹞??-﹞???-2005,2004
	VSB_LANDROVER_FAXIAN_2 = 2,   // ?﹞??-﹞???-2013,2011,2010
	VSB_LANDROVER_LANSHENG_1 = 3,   // ?﹞??-???∟-2012,2011,2010
	VSB_LANDROVER_LANSHENG_2 = 4,   // ?﹞??-???∟????-2014,2013,2012,2011
	VSB_LANDROVER_LANSHENG_3 = 5,   // ?﹞??-???∟????∼?-2013,2012,2011,2010
	VSB_LANDROVER_LANSHENG_4 = 6,   // ?﹞??-???∟????∼?-2013???足????∼?
	VSB_LANDROVER_SXZ_1 = 7   // ?﹞??-??????2?迆-2014,2013,2011
}VSB_LANDROVER_CLASS;

//????℅??﹞???角??
typedef enum _VSB_MG_CLASS
{
	VSB_MG_OTHER = 0,  // ?????“㊣?????
	VSB_MG_3SW_1 = 1,  // MG-MG-3SW-2009,2008
	VSB_MG_MG3_1 = 2,  // MG-MG3-2013,2012,2011
	VSB_MG_MG5_1 = 3,  // MG-MG5-2014,2013,2012
	VSB_MG_MG6_1 = 4,  // MG-MG6???芍-2012,2011
	VSB_MG_MG7_1 = 5,  // MG-MG7-2010,2009,2008,2007
}VSB_MG_CLASS;

//????℅??﹞???角??
typedef enum _VSB_FAW_CLASS
{
	VSB_FAW_OTHER = 0,    // ?????“㊣?????
	VSB_FAW_501_1 = 1,    //????-501-?芍?“
	VSB_FAW_N3_1 = 2,    //????-N3+???芍-2006
	VSB_FAW_N3_2 = 3,    //????-N3+???芍-2008
	VSB_FAW_JIABAO_1 = 4,    //????-??㊣?????-2011T50,T57
	VSB_FAW_JIABAO_2 = 5,    //????-??㊣???∼邦??-2000
	VSB_FAW_JIABAO_3 = 6,    //????-??㊣???∼邦??-2006
	VSB_FAW_JIABAO_4 = 7,    //????-??㊣???∼邦??-2012,2011V50????∼?
	VSB_FAW_JIABAO_5 = 8,    //????-??㊣???∼邦??-2012,2011V70
	VSB_FAW_JIABAO_6 = 9,    //????-??㊣???∼邦??-2013,2012,2011V52??????
	VSB_FAW_JIABAO_7 = 10,    //????-??㊣???∼邦??-2014,2013V80
	VSB_FAW_XIALI_1 = 11,    //????-????-1999,1997
	VSB_FAW_XIALI_2 = 12,    //????-????2000-2003,2002
	VSB_FAW_XIALI_3 = 13,    //????-????A+-2011,2010,2006,2005
	VSB_FAW_XIALI_4 = 14,    //????-????N3-2012
	VSB_FAW_XIALI_5 = 15,    //????-????N5-2014,2013,2011,2010,2009
	VSB_FAW_XIALI_6 = 16,    //????-????N7-2013
	VSB_FAW_AOWEI_1 = 17,    //????-∼???J5P-2005,2004,2003
	VSB_FAW_AOWEI_2 = 18,    //????-∼???J5P-4X2????????????,℅?????
	VSB_FAW_AOWEI_3 = 19,    //????-∼???J5P-4X2??????,??????
	VSB_FAW_AOWEI_4 = 20,    //????-∼???J5P-6X6???∼℅?????
	VSB_FAW_AOXING_1 = 21,    //????-∼???-2004
	VSB_FAW_WEILE_1 = 22,    //????-????-2004
	VSB_FAW_WEILE_2 = 23,    //????-????-2008,2007
	VSB_FAW_WEIZI_1 = 24,    //????-??℅?-2004
	VSB_FAW_WEIZHI_1 = 25,    //????-????V2-2012????CROSS
	VSB_FAW_WEIZHI_2 = 26,    //????-????V2-2012℅???CROSS,2010
	VSB_FAW_WEIZHI_3 = 27,    //????-????V5-2013,2012
	VSB_FAW_WEIZHI_4 = 28,    //????-???????芍-2009,2008,2007
	VSB_FAW_WEIZHI_5 = 29,    //????-???????芍-2011
	VSB_FAW_XIAOJIEFANG_1 = 30,    //????-????﹞?-90,109?赤???芍?“
	VSB_FAW_HANWEI_1 = 31,    //????-?﹞??J5M-4X4??????
	VSB_FAW_HANWEI_2 = 32,    //????-?﹞??J5M-6X6??????,6X4℅?????
	VSB_FAW_HANWEI_3 = 33,    //????-?﹞??J5M-8X8℅?????
	VSB_FAW_XINDAWEI_1 = 34,    //????-???車??-2010
	VSB_FAW_XINHANWEI_1 = 35,    //????-???﹞??-2011
	VSB_FAW_SENYA_1 = 36,    //????-????M80-2012,2011,2009
	VSB_FAW_TENGWEI_1 = 37,    //????-????L5M-???“
	VSB_FAW_JIEFANG_1 = 38,    //????-??﹞?J4R-A??
	VSB_FAW_JIEFANG_2 = 39,    //????-??﹞?J4R-℅?????,??????
	VSB_FAW_JIEFANG_3 = 40,    //????-??﹞?J6-2004
	VSB_FAW_JIEFANG_4 = 41,    //????-??﹞?J6-???“
	VSB_FAW_JIEFANG_5 = 42,    //????-??﹞?J6L-???“
	VSB_FAW_JIEFANG_6 = 43,    //????-??﹞?L5-A??
	VSB_FAW_SAILONG_1 = 44,    //????-?邦?迆-???“
	VSB_FAW_JUNWEI_1 = 45,    //????-????J5K-???“
	VSB_FAW_B50_1 = 46,    //????-㊣???B50-2012,2011,2009
	VSB_FAW_B50_2 = 47    //????-㊣???B50-2013
}VSB_FAW_CLASS;


//????℅??﹞???角??
typedef enum _VSB_SAICMOTOR_CLASS
{
	VSB_SAICMOTOR_OTHER = 0,    // ?????“㊣?????
	VSB_HONGYAN_JIESHI_1 = 1,    // ???????????足??-???“-2012
	VSB_DATONG_V80_1 = 2     // ?????車?“-V80-2014,2013,2012,2011
}VSB_SAICMOTOR_CLASS;

//????????℅??﹞???角??
typedef enum _VSB_SOUEAST_CLASS
{
	VSB_SOUEAST_OTHER = 0,    // ?????“㊣?????
	VSB_SOUEAST_V3_1 = 1,    // ????-V3????-2011????????∼?,2010,2009,2008
	VSB_SOUEAST_V3_2 = 2,    // ????-V3????-2012
	VSB_SOUEAST_V3_3 = 3,    // ????-V3????-2012?足??∼?,2011,2010??﹞???∼?
	VSB_SOUEAST_V3_4 = 4,    // ????-V3????-2012﹞???∼?
	VSB_SOUEAST_V5_1 = 5,    // ????-V5????-2014,2013,2012
	VSB_SOUEAST_XIWANG_1 = 6,    // ????-???迆-2011,2010
	VSB_SOUEAST_DELIKA_1 = 7,    // ????-?????“-2003,2002
	VSB_SOUEAST_DELIKA_2 = 8,    // ????-?????“-2005
	VSB_SOUEAST_DELIKA_3 = 9,    // ????-?????“-2008
	VSB_SOUEAST_DELIKA_4 = 10,    // ????-?????“-2009
	VSB_SOUEAST_LINGSHUAI_1 = 11,    // ????-???∫-2005,2004GLXi
	VSB_SOUEAST_FULIKA_1 = 12,    // ????-?????“-2005
	VSB_SOUEAST_FULIKA_2 = 13    // ????-?????“-2007
}VSB_SOUEAST_CLASS;


//????????℅??﹞???角??
typedef enum _VSB_ZTE_CLASS
{
	VSB_ZTE_OTHER = 0,        // ?????“㊣?????
	VSB_ZTE_WEIHU_1 = 1,        // ????-????-2012,2010
	VSB_ZTE_WEIHU_2 = 2,        // ????-????TUV-2010,2006
	VSB_ZTE_WUXIAN_1 = 3,        // ????-????-2008
	VSB_ZTE_WUXIAN_2 = 4         // ????-????-2012,2011,2010,2009
}VSB_ZTE_CLASS;


//????????℅??﹞???角??
typedef enum _VSB_ZHONGHUA_CLASS
{
	VSB_ZHONGHUA_OTHER = 0,    // ?????“㊣?????
	VSB_ZHONGHUA_H230_1 = 1,   // ????-H230-2012
	VSB_ZHONGHUA_H320_1 = 2,   // ????-H320-2012
	VSB_ZHONGHUA_H330_1 = 3,   // ????-H330-2013
	VSB_ZHONGHUA_H530_1 = 4,   // ????-H530-2012,2011
	VSB_ZHONGHUA_V5_1 = 5,   // ????-V5-2012,2011
	VSB_ZHONGHUA_ZUNCHI_1 = 6,   // ????-℅???-2004
	VSB_ZHONGHUA_ZUNCHI_2 = 7,   // ????-℅???-2005,2003
	VSB_ZHONGHUA_KUBAO_1 = 8,   // ????-?芍㊣?-2007
	VSB_ZHONGHUA_JUNJIE_1 = 9,   // ????-????-2010,2009,2008,2007,2006
	VSB_ZHONGHUA_JUNJIE_2 = 10,   // ????-????-2012,2011
	VSB_ZHONGHUA_JUNJIECROSS_1 = 11,   // ????-????cross-2010,2009
	VSB_ZHONGHUA_JUNJIEFRV_1 = 12,   // ????-????FRV-2009,2008
	VSB_ZHONGHUA_JUNJIEFRV_2 = 13,   // ????-????FRV-2010
	VSB_ZHONGHUA_JUNJIEFSV_1 = 14,   // ????-????FSV-2009
	VSB_ZHONGHUA_JUNJIEFSV_2 = 15,   // ????-????FSV-2010
	VSB_ZHONGHUA_JUNJIEFSV_3 = 16   // ????-????FSV-2011
}VSB_ZHONGHUA_CLASS;


//???迆????℅??﹞???角??
typedef enum _VSB_CNHTC_CLASS
{
	VSB_CNHTC_OTHER = 0,    // ?????“㊣?????
	VSB_CNHTC_HOKA_2 = 1,      // ???迆????-HOKA-??????,℅?????
	VSB_CNHTC_HOWO_1 = 2,      // ???迆????-HOWO-A7
	VSB_CNHTC_HOWO_2 = 3,      // ???迆????-HOWO-T7H
	VSB_CNHTC_HOWO_3 = 4,      // ???迆????-HOWO-?芍?“
	VSB_CNHTC_HOWO_4 = 5,      // ???迆????-HOWO???“-??????
	VSB_CNHTC_HOWO_5 = 6,      // ???迆????-HOWO???“-℅?????A
	VSB_CNHTC_HOWO_6 = 7,      // ???迆????-HOWO???“-℅?????B
	VSB_CNHTC_HOWO_7 = 8,      // ???迆????-HOWO???“-??????A
	VSB_CNHTC_HOWO_8 = 9,      // ???迆????-HOWO???“-??????C
	VSB_CNHTC_SITAIERWANG_1 = 10,      // ???迆????-????????-??????A,??????,??∼豕??
	VSB_CNHTC_HAOHAN_1 = 11,      // ???迆????-????-A??
	VSB_CNHTC_HAOYUN_1 = 12,      // ???迆????-????-??????B,??????,℅?????
	VSB_CNHTC_JINWANGZI_1 = 13,      // ???迆????-????℅????“-??????B
	VSB_CNHTC_HOKA_1 = 14      // ???迆????-HOKA-H7
}VSB_CNHTC_CLASS;

//???“℅??﹞???角??
typedef enum _VSB_ZHONGTONG_CLASS
{
	VSB_ZHONGTONG_OTHER = 0,  // ?????“㊣?????
	VSB_ZHONGTONG_KAICHI_1 = 1,  // ???“????-????A-A??
	VSB_ZHONGTONG_LINGYU_1 = 2,  // ???“????-?足?迄-A??
	VSB_ZHONGTONG_LINGXIU_1 = 3,  // ???“????-?足??-A??
	VSB_ZHONGTONG_LINGHANG_1 = 4,  // ???“????-?足??-A??
	VSB_ZHONGTONG_SHIJI_1 = 5,  // ???“????-????-A??
	VSB_ZHONGTONG_KAIXUAN_1 = 6,  // ???“????-????-A??
	VSB_ZHONGTONG_LINGYUN_1 = 7,  // ???“????-?足??A-A??
	VSB_ZHONGTONG_YANGGUANG_1 = 8  // ???“????-????-A??
}VSB_ZHONGTONG_CLASS;


//???迆℅??﹞???角??
typedef enum _VSB_JIULONG_CLASS
{
	VSB_JIULONG_OTHER = 0,    // ?????“㊣?????
	VSB_JIULONG_JIULONGA5_1 = 1,    // ???迆-???迆A5-2011
}VSB_JIULONG_CLASS;

//????℅??﹞???角??
typedef enum _VSB_ZOTYE_CLASS
{
	VSB_ZOTYE_OTHER = 0,       // ?????“㊣?????
	VSB_ZOTYE_2008_2 = 1,      // ????-2008-2011,2010,2008
	VSB_ZOTYE_5008_1 = 2,      // ????-5008-2013,2011,2010,2008
	VSB_ZOTYE_Z300_1 = 3,      // ????-Z300-2013,2012
	VSB_ZOTYE_2008_1 = 4      // ????-2008-2007
}VSB_ZOTYE_CLASS;

//??????℅??﹞???角??
typedef enum _VSB_NAVECO_CLASS
{
	VSB_NAVECO_OTHER = 0,       // ?????“㊣?????
	VSB_NAVECO_Daily_1 = 1,     // ??????-Daily-2006,2004,2003
	VSB_NAVECO_Power_1 = 2,     // ??????-Power-Daily
	VSB_NAVECO_Turbo_1 = 3,     // ??????-Turbo-Daily-2014,2012,2011
	VSB_NAVECO_Venice_1 = 4,     // ??????-Venice-2011,2008
	VSB_NAVECO_BAODI_1 = 5,     // ??????-㊣???-2012,2009
	VSB_NAVECO_DEYIHUOCHE_1 = 6,     // ??????-????????-2011
	VSB_NAVECO_DULING_1 = 7     // ??????-???谷-2010,2009,2007
}VSB_NAVECO_CLASS;

//㊣??㊣??℅??﹞???角??
typedef enum _VSB_PORSCHE_CLASS
{
	VSB_PORSCHE_OTHER = 0,    // ?????“㊣?????
	VBR_PORSCHE_PANAMERA_1 = 1,    // ㊣??㊣??-panamera-2013,2012,2010
	VBR_PORSCHE_CAYENNE_1 = 2,    // ㊣??㊣??-?“??Cayenne-2014,2013,2011,2010
}VSB_PORSCHE_CLASS;


//????????℅??﹞???角??
typedef enum _VSB_CHRYSLER_CLASS
{
	VSB_CHRYSLER_OTHER = 0,    // ?????“㊣?????
	VSB_CHRYSLER_300C_1 = 1,   // ????????-300C-2007,2006,2004
	VSB_CHRYSLER_PTMANBUZHE_1 = 2,   // ????????-PT??????-2007
}VSB_CHRYSLER_CLASS;

//????????℅??﹞???角??
typedef enum _VSB_CADILLAC_CLASS
{
	VSB_CADILLAC_OTHER = 0,    // ?????“㊣?????
	VSB_CADILLAC_ATS_1 = 1,   // ????????-ATS-2014
	VSB_CADILLAC_CTS_1 = 2,   // ????????-CTS-2012
	VSB_CADILLAC_CTS_3 = 3,   // ????????-CTS-2012??????????,2011,2010,2009,2008
	VSB_CADILLAC_SLS_1 = 4,   // ????????-SLS?邦??-2007,2006
	VSB_CADILLAC_SLS_2 = 5,   // ????????-SLS?邦??-2012,2011,2010
	VSB_CADILLAC_SRX_1 = 6,   // ????????-SRX-2012,2011,2010,2009
	VSB_CADILLAC_CTS_2 = 7,   // ????????-CTS-2012,2009CTS
	VSB_CADILLAC_KAILEIDE_1 = 8   // ????????-???℅??-2011,2010,2008,2007,2006
}VSB_CADILLAC_CLASS;


//???赤KAMA℅??﹞???角??
typedef enum _VSB_KAMA_CLASS
{
	VSB_KAMA_OTHER = 0,       // ?????“㊣?????
	VSB_KAMA_QINGKA_2 = 1,       // ???赤KAMA-???赤-?芍?“D
	VSB_KAMA_FULAIKA_1 = 2,       // ???赤KAMA-?????“-?芍?“A
	VSB_KAMA_JINYUNKA_1 = 3,       // ???赤KAMA-?????“-?芍?“
	VSB_KAMA_JUNWEIKA_1 = 4,       // ???赤KAMA-?????“??-2014,2011
	VSB_KAMA_QINGKA_1 = 5       // ???赤KAMA-???赤-?芍?“C
}VSB_KAMA_CLASS;

//??﹞?℅??﹞???角??
typedef enum _VSB_LIFAN_CLASS
{
	VSB_LIFAN_OTHER = 0,      // ?????“㊣?????
	VSB_LIFAN_320_1 = 1,      // ??﹞?-320-2012,2011,2009
	VSB_LIFAN_520_1 = 2,      // ??﹞?-520-2007,2006
	VSB_LIFAN_520_2 = 3,      // ??﹞?-520-2013,2011,2010,2008
	VSB_LIFAN_620_1 = 4,      // ??﹞?-620-2012,2010,2009,2008
	VSB_LIFAN_X60_1 = 5,      // ??﹞?-X60-2013,2012,2011
	VSB_LIFAN_FENGSHUN_1 = 6      // ??﹞?-﹞芍??-2011
}VSB_LIFAN_CLASS;


//㊣㊣??℅??﹞???角??
typedef enum _VSB_BEIJING_CLASS
{
	VSB_BEIJING_OTHER = 0,      // ?????“㊣?????
	VSB_BEIJING_E_1 = 1,    // ㊣㊣??????-E???????芍-2014,2013,2012
}VSB_BEIJING_CLASS;

//㊣㊣㊣?????℅??﹞???角??
typedef enum _VSB_BEIBEN_CLASS
{
	VSB_BEIBEN_OTHER = 0,      // ?????“㊣?????
	VSB_BEIBEN_NG80_1 = 1,     // ㊣㊣㊣?????-NG80-???“A
	VSB_BEIBEN_NG80_2 = 2,     // ㊣㊣㊣?????-NG80-???“B
	VSB_BEIBEN_NG80_3 = 3,     // ㊣㊣㊣?????-NG80-???“C
	VSB_BEIBEN_V3_1 = 4,     // ㊣㊣㊣?????-㊣㊣㊣?V3-V3H1
	VSB_BEIBEN_V3_2 = 5     // ㊣㊣㊣?????-㊣㊣㊣?V3-???“A
}VSB_BEIBEN_CLASS;

//㊣㊣﹞?????℅??﹞???角??
typedef enum _VSB_BEIFANG_CLASS
{
	VSB_BEIFANG_OTHER = 0,      // ?????“㊣?????
	VSB_BEIFANG_A_1 = 1       // ㊣㊣﹞?????-????????1-A??
}VSB_BEIFANG_CLASS;


//㊣㊣?????足℅??﹞???角??
typedef enum _VSB_BAW_CLASS
{
	VSB_BAW_OTHER = 0,        // ?????“㊣?????
	VSB_BAW_YUSHENG007_1 = 1,        // ㊣㊣?????足-?辰?∟007-2013,2011
	VSB_BAW_QILING_1 = 2,        // ㊣㊣?????足-?足??-A??
	VSB_BAW_LUBA_1 = 3,        // ㊣㊣?????足-??∼?-2004
	VSB_BAW_QISHI_1 = 4         // ㊣㊣?????足-????-2009,2007
}VSB_BAW_CLASS;

//㊣㊣?????迆℅??﹞???角??
typedef enum _VSB_BQWEIWANG_CLASS
{
	VSB_BQWEIWANG_OTHER = 0,  // ?????“㊣?????
	VSB_BQWEIWANG_205_1 = 1,  // ㊣㊣?????迆-205-2013
	VSB_BQWEIWANG_306_1 = 2   // ㊣㊣?????迆-306-2014,2013,2011
}VSB_BQWEIWANG_CLASS;


//????℅??﹞???角??
typedef enum _VSB_SMA_CLASS
{
	VSB_SMA_OTHER = 0,        // ?????“㊣?????
	VSB_SMA_HAIYU_1 = 1,        // ????-???辰-2007,2005,2004
	VSB_SMA_HAIYU_2 = 2,        // ????-???辰-2007???辰MB
	VSB_SMA_HAISHANG_1 = 3,        // ????-????-2008,2005
	VSB_SMA_HAIJING_1 = 5,        // ????-???∼-2010,2009
	VSB_SMA_HAIXUN_1 = 4,        // ????-????-2005,2004足?﹞?
	VSB_SMA_HAIXUN_2 = 6,        // ????-????-2007,2006
}VSB_SMA_CLASS;

//???????赤℅??﹞???角??
typedef enum _VSB_XINGMA_CLASS
{
	VSB_XINGMA_OTHER = 0,        // ?????“㊣?????
	VSB_XINGMA_XINGKAIMA_1 = 1         // ???????赤-?????赤-????????1,????????1
}VSB_XINGMA_CLASS;

//???﹞℅??﹞???角??
typedef enum _VSB_SHUANGHUAN_CLASS
{
	VSB_SHUANGHUAN_OTHER = 0,        // ?????“㊣?????
	VSB_SHUANGHUAN_SCEO_1 = 1,        // ???﹞-SCEO-2011,2009,2006,2005
}VSB_SHUANGHUAN_CLASS;

//????℅??﹞???角??
typedef enum _VSB_JEEP_CLASS
{
	VSB_JEEP_OTHER = 0,       // ?????“㊣?????
	VSB_JEEP_DAQIENUOJI_1 = 1,       // ????-?車?????迄(????)-2014,2013,2012,2011
	VSB_JEEP_DAQIENUOJI_2 = 2,       // ????-?車?????迄(????)-2014???赤????∼?
	VSB_JEEP_ZHINANZHE_1 = 3,       // ????-??????-2010,2007
	VSB_JEEP_ZHINANZHE_2 = 4,       // ????-??????-2014,2013,2012,2011
	VSB_JEEP_MUMAREN_1 = 5,       // ????-???赤??-2012???邦????????∼?,2011
	VSB_JEEP_MUMAREN_2 = 6,       // ????-???赤??-2014,2013,2012,2011,2010,2009,2008
	VSB_JEEP_ZIYOUKE = 7,       // ????-℅?????-2014,2013,2012,2011
}VSB_JEEP_CLASS;

//????℅??﹞???角??
typedef enum _VSB_VENUCIA_CLASS
{
	VSB_VENUCIA_OTHER = 0,       // ?????“㊣?????
	VSB_VENUCIA_D50_1 = 1        // ????-D50-2014,2013,2012
}VSB_VENUCIA_CLASS;

//??﹞?℅??﹞???角??
typedef enum _VSB_HAFEI_CLASS
{
	VSB_HAFEI_OTHER = 0,      // ?????“㊣?????
	VSB_HAFEI_XINMINYI_1 = 1,      // ??﹞?-??????????-2010
	VSB_HAFEI_XINMINYI_2 = 2,      // ??﹞?-????????∼邦??-2012
	VSB_HAFEI_MINYI_1 = 3,      // ??﹞?-????????-2006
	VSB_HAFEI_MINYI_2 = 4,      // ??﹞?-??????∼邦??-2008
	VSB_HAFEI_SAIBAO_1 = 5,      // ??﹞?-?邦㊣??車-2012
	VSB_HAFEI_SAIMA_1 = 6,      // ??﹞?-?邦?赤-2002
	VSB_HAFEI_SAIMA_2 = 7,      // ??﹞?-?邦?赤-2004,2003
	VSB_HAFEI_SAIMA_3 = 8,      // ??﹞?-?邦?赤-2009
	VSB_HAFEI_LUBAO_1 = 9,      // ??﹞?-?﹞㊣?-2004
	VSB_HAFEI_LUBAO_2 = 10,      // ??﹞?-?﹞㊣?-2008,2007
	VSB_HAFEI_LUBAO_3 = 11,      // ??﹞?-?﹞㊣?-2012
	VSB_HAFEI_LUZUNXIAOBAWANG_1 = 12,      // ??﹞?-?﹞℅???∼???-2011,2010
	VSB_HAFEI_RUIYI_1 = 13,      // ??﹞?-????-2009
	VSB_HAFEI_JUNYI_1 = 14       // ??﹞?-????-2012,2010
}VSB_HAFEI_CLASS;

//?????﹞??℅??﹞???角??
typedef enum _VSB_TKING_CLASS
{
	VSB_TKING_OTHER = 0,      // ?????“㊣?????
	VSB_TKING_OUGUAN_1 = 1,      // ?????﹞??-?﹞??-2011
	VSB_TKING_OUGUAN_2 = 2,      // ?????﹞??-?﹞??-?芍?“B
	VSB_TKING_OUTENG_1 = 3,      // ?????﹞??-?﹞??-?芍?“A
	VSB_TKING_FUXING_1 = 4,      // ?????﹞??-????-2006
	VSB_TKING_QINGKAWANG_1 = 5,      // ?????﹞??-?芍?“??-?芍?“
	VSB_TKING_AFANDA_1 = 6,      // ?????﹞??-∼?﹞???-?????“
	VSB_TKING_JUNQI_1 = 7       // ?????﹞??-??‾豕-?????“A
}VSB_TKING_CLASS;

//?車??℅??﹞???角??
typedef enum _VSB_DAEWOO_CLASS
{
	VSB_DAEWOO_OTHER = 0,    // ?????“㊣?????
	VBR_DAEWOO_6960H3_1 = 1     // ?車??-6960H3-A??
}VSB_DAEWOO_CLASS;

//?車??????℅??﹞???角??
typedef enum _VSB_DAYUN_CLASS
{
	VSB_DAYUN_OTHER = 0,     // ?????“㊣?????
	VBR_DAYUN_ZHONGKA_1 = 1      // ?車??????-???“-A??
}VSB_DAYUN_CLASS;

//㊣???℅??﹞???角??
typedef enum _VSB_BESTURN_CLASS
{
	VSB_BESTURN_OTHER = 0,   // ?????“㊣?????
	VSB_BESTURN_B70_1 = 1,    // ㊣???-B70-2009,2007,2006
	VSB_BESTURN_B70_2 = 2,    // ㊣???-B70-2011
	VSB_BESTURN_B70_3 = 3,    // ㊣???-B70-2011??????,2010
	VSB_BESTURN_B70_4 = 4,    // ㊣???-B70-2012
	VSB_BESTURN_B90_1 = 5,    // ㊣???-B90-2012
	VSB_BESTURN_AOXING_1 = 6       // ????-∼???-2004
}VSB_BESTURN_CLASS;

//??‾?℅??﹞???角??
typedef enum _VSB_WEILIN_CLASS
{
	VSB_WEILIN_OTHER = 0,      // ?????“㊣?????
	VSB_WEILIN_H3_1 = 1,     // ??‾?-H3-2011
	VSB_WEILIN_V5_1 = 2,     // ??‾?-V5-2012,2009
	VSB_WEILIN_X5_1 = 3      // ??‾?-X5-2012,2011,2010
}VSB_WEILIN_CLASS;

//???“℅??﹞???角??
typedef enum _VSB_YUTONG_CLASS
{
	VSB_YUTONG_OTHER = 0,     // ?????“㊣?????
	VSB_YUTONG_8XI_1 = 1,     // ???“-8??-2012,2005
	VSB_YUTONG_KECHE_1 = 2,     // ???“-????????10-2013,2010
	VSB_YUTONG_KECHE_3 = 3,     // ???“-????????2-A??
	VSB_YUTONG_KECHE_4 = 4,     // ???“-????????8-2004
	VSB_YUTONG_KECHE_5 = 5,     // ???“-????????9-2014
	VSB_YUTONG_KECHE_2 = 6      // ???“-????????12-A??
}VSB_YUTONG_CLASS;

//∼???℅??﹞???角??
typedef enum _VSB_ANKAI_CLASS
{
	VSB_ANKAI_OTHER = 0,      // ?????“㊣?????
	VSB_ANKAI_KECHE_1 = 1,      // ∼???-????????1-A??
	VSB_ANKAI_KECHE_2 = 2       // ∼???-????????3-A??
}VSB_ANKAI_CLASS;

//㊣???℅??﹞???角??
typedef enum _VSB_BAOJUN_CLASS
{
	VSB_BAOJUN_OTHER = 0,   // ?????“㊣?????
	VSB_BAOJUN_630_1 = 1      // ㊣???-㊣???630-2014,2013,2012,2011
}VSB_BAOJUN_CLASS;

//㊣???℅??﹞???角??
typedef enum _VSB_BINLI_CLASS
{
	VSB_BINLI_OTHER = 0,     // ?????“㊣?????
	VSB_BINLI_OULU_1 = 1      // ㊣???-?﹞??-2009,2008
}VSB_BINLI_CLASS;

//??????足‾℅??﹞???角??
typedef enum _VSB_TRUMPCHE_CLASS
{
	VSB_TRUMPCHE_OTHER = 0,   // ?????“㊣?????
	VSB_TRUMPCHE_GA5_1 = 1,   // ??????足‾-GA5-2012,2011
	VSB_TRUMPCHE_GA5_2 = 3,   // ??????足‾-GA5-2013,2012℅???????∼?
	VSB_TRUMPCHE_GS5_1 = 2    // ??????足‾-GS5-2014,2013,2012
}VSB_TRUMPCHE_CLASS;

//??????∼? ℅??﹞???角??
typedef enum _VSB_GONOW_CLASS
{
	VSB_GONOW_OTHER = 0,   // ?????“㊣?????
	VSB_GONOW_G3_1 = 1,      // ??????∼?-G3-2011
	VSB_GONOW_G5_1 = 2,      // ??????∼?-G5-2012,2011
	VSB_GONOW_SHUAIJIAN_1 = 4,      // ??????∼?-?∫??-2012,2009
	VSB_GONOW_XINGWANGM1_1 = 3,      // ??????∼?-???迆M1-2012
	VSB_GONOW_CAIYUN500_1 = 5      // ??????∼?-????500-2010
}VSB_GONOW_CLASS;

//?足??℅??﹞???角??
typedef enum _VSB_ISUZU_CLASS
{
	VSB_ISUZU_OTHER = 0,   // ?????“㊣?????
	VSB_ISUZU_ZHONGXINGSHANGYONG_1 = 1,      // ?足??-??????????-2011
	VSB_ISUZU_WUSHILINGPIKA_1 = 2,      // ?足??-???????∟?“-2009
	VSB_ISUZU_WUSHILINGPIKA_2 = 3,      // ?足??-???????∟?“-2014,2009
	VSB_ISUZU_JINGJIZHE_1 = 4      // ?足??-??????-2004,2002
}VSB_ISUZU_CLASS;


//????℅??﹞???角??
typedef enum _VSB_KARRY_CLASS
{
	VSB_KARRY_OTHER = 0,   // ?????“㊣?????
	VSB_KARRY_YOU_2 = 1,      // ????-????-2013,2012
	VSB_KARRY_YOUJIN_1 = 2,      // ????-????-2012,2011?迄㊣???,2010
	VSB_KARRY_YOUSHENG_1 = 3,      // ????-???∟-2010
	VSB_KARRY_YOUSHENG_2 = 4,      // ????-???∟-2012,2011
	VSB_KARRY_YOUYA = 5,      // ????-????-2012,2011,2007
	VSB_KARRY_YOU_1 = 6      // ????-????-2011,2010,2009
}VSB_KARRY_CLASS;

//??㊣?℅??﹞???角??
typedef enum _VSB_GAGUAR_CLASS
{
	VSB_GAGUAR_OTHER = 0,   // ?????“㊣?????
	VSB_GAGUAR_XF_1 = 1,     // ??㊣?-XF-2014,2013
	VSB_GAGUAR_XJ_1 = 2     // ??㊣?-XJ-2014,2013,2012,2011,2010
}VSB_GAGUAR_CLASS;

//??∼???℅??﹞???角??
typedef enum _VSB_SUBARU_CLASS
{
	VSB_SUBARU_OTHER = 0,   // ?????“㊣?????
	VSB_SUBARU_AOHU_1 = 1,     // ??∼???-∼???-2012,2011,2010
	VSB_SUBARU_LISHI_1 = 2,     // ??∼???-???“????-2008,2006
	VSB_SUBARU_LISHI_2 = 3,     // ??∼???-???“????-2011,2010
	VSB_SUBARU_XV_1 = 4,     // ??∼???-??∼???XV-2014,2012
	VSB_SUBARU_SENLINREN_1 = 5,     // ??∼???-??????-2007,2006
	VSB_SUBARU_SENLINREN_2 = 6     // ??∼???-??????-2012,2011,2010,2009,2008
}VSB_SUBARU_CLASS;

//?㊣?迆????℅??﹞???角??
typedef enum _VSB_ERA_CLASS
{
	VSB_ERA_OTHER = 0,   // ?????“㊣?????
	VSB_ERA_XIAOKA_1 = 1,        // ?㊣?迆????-???“????-???“????1,2,Q2
	VSB_ERA_XIAOKA_3 = 2,        // ?㊣?迆????-???“????-???“????5
	VSB_ERA_XIAOKA_4 = 3,        // ?㊣?迆????-???“????-????
	VSB_ERA_KANGRUI_1 = 4,        // ?㊣?迆????-????-????H1
	VSB_ERA_KANGRUI_2 = 5,        // ?㊣?迆????-????-????H3
	VSB_ERA_KANGRUI_3 = 6,        // ?㊣?迆????-????-????K1,KQ1
	VSB_ERA_RUIWO_1 = 7,        // ?㊣?迆????-????-RC1
	VSB_ERA_RUIWO_2 = 8,        // ?㊣?迆????-????-RC2
	VSB_ERA_RUIWO_3 = 9,        // ?㊣?迆????-????-????II?芍?“A
	VSB_ERA_JINGANG = 10,        // ?㊣?迆????-????-????568
	VSB_ERA_LINGHANG_1 = 11,        // ?㊣?迆????-?足??-?足??2
	VSB_ERA_LINGHANG_2 = 12,        // ?㊣?迆????-?足??-?足??3
	VSB_ERA_YULING_1 = 13,        // ?㊣?迆????-????-????V1
	VSB_ERA_YULING_2 = 14,        // ?㊣?迆????-????-????V5,VQ5
	VSB_ERA_YULING_3 = 15,        // ?㊣?迆????-????-????VQ1,VQ2
	VSB_ERA_YULING_4 = 17,        // ?㊣?迆????-????-?豕??
	VSB_ERA_XIAOKA_2 = 17,        // ?㊣?迆????-???“????-???“????3
}VSB_ERA_CLASS;

//????℅??﹞???角??
typedef enum _VSB_CHANGHE_CLASS
{
	VSB_CHANGHE_OTHER = 0,  // ?????“㊣?????
	VSB_CHANGHE_CH6321_1 = 1,  // ????-CH6321-2000
	VSB_CHANGHE_DANSHUANGPAI_1 = 2,  // ????-????????????-1999
	VSB_CHANGHE_AIDIER_1 = 3,  // ????-∼?????-2004
	VSB_CHANGHE_AIDIER_2 = 4,  // ????-∼??????辰-2007,2006
	VSB_CHANGHE_FURUIDA_1 = 5   // ????-????????∼邦??-2014,2013,2011,2009
}VSB_CHANGHE_CLASS;

//?﹞㊣?℅??﹞???角??
typedef enum _VSB_OPEL_CLASS
{
	VSB_OPEL_OTHER = 0,    // ?????“㊣?????
	VSB_OPEL_YATE_1 = 1     // ?﹞㊣?-????-2010GTC???∼﹞???∼?,2007,2006
}VSB_OPEL_CLASS;

//????℅??﹞???角??
typedef enum _VSB_JONWAY_CLASS
{
	VSB_JONWAY_OTHER = 0,   // ?????“㊣?????
	VSB_JONWAY_A380_1 = 1    // ????-A380-2010,2009,2008
}VSB_JONWAY_CLASS;

//????℅??﹞???角??
typedef enum _VSB_JIANGNAN_CLASS
{
	VSB_JIANGNAN_OTHER = 0,   // ?????“㊣?????
	VSB_JIANGNAN_TT_1 = 1    // ????-????TT-2011,2010,2004
}VSB_JIANGNAN_CLASS;

//???????辰??℅??﹞???角??
typedef enum _VSB_GLEAGLE_CLASS
{
	VSB_GLEAGLE_OTHER = 0,   // ?????“㊣?????
	VSB_GLEAGLE_EAGLE_GC7_1 = 1,   // ???????辰??-GC7-2013,2012
	VSB_GLEAGLE_EAGLE_GX2_1 = 2,   // ???????辰??-GX2-2012,2011
	VSB_GLEAGLE_EAGLE_GX7_1 = 3,   // ???????辰??-GX7-2013,2012
	VSB_GLEAGLE_EAGLE_PANDA_1 = 4,   // ???????辰??-???“-2013,2011,2010,2009
	VSB_GLEAGLE_EAGLE_ZIYOUJIAN_1 = 5,   // ???????辰??-℅?????-2009????㊣那℅???,2007
	VSB_GLEAGLE_EAGLE_ZIYOUJIAN_2 = 6,   // ???????辰??-℅?????-2010,2009,2008,2006,2005
	VSB_GLEAGLE_EAGLE_ZIYOUJIAN_3 = 7,   // ???????辰??-℅?????-2012,2011
	VSB_GLEAGLE_EAGLE_YUANJING_1 = 8,   // ???????辰??-???∼-2011,2010,2009,2008,2006
	VSB_GLEAGLE_EAGLE_YUANJING_2 = 9,   // ???????辰??-???∼-2013,2012
}VSB_GLEAGLE_CLASS;

//????????℅??﹞???角??
typedef enum _VSB_EMGRAND_CLASS
{
	VSB_EMGRAND_OTHER = 0,   // ?????“㊣?????
	VSB_EMGRAND_EC7_2 = 1,   // ????????-EC7-2013
	VSB_EMGRAND_EC7_3 = 2,   // ????????-EC7-RV
	VSB_EMGRAND_EC8_1 = 3,   // ????????-EC8-2013,2011,2010
	VSB_EMGRAND_EC7_1 = 4    // ????????-EC7-2012,2010,2009
}VSB_EMGRAND_CLASS;


//???????℅℅??﹞???角??
typedef enum _VSB_ENGLON_CLASS
{
	VSB_ENGLON_OTHER = 0,    // ?????“㊣?????
	VSB_ENGLON_SC3_1 = 1,    // ???????℅-SC3-2012
	VSB_ENGLON_SC5_1 = 2,    // ???????℅-SC5-RV-2012
	VSB_ENGLON_SC6_1 = 3,    // ???????℅-SC6-2012
	VSB_ENGLON_SC7_1 = 4,    // ???????℅-SC7-2013,2012,2011,2010
	VSB_ENGLON_SX7_1 = 5,    // ???????℅-SX7-2014,2013
	VSB_ENGLON_JINGANG_1 = 6,    // ???????℅-????-2010,2007,2006
	VSB_ENGLON_JINYING_1 = 7     // ???????℅-????-2011,2010,2008
}VSB_ENGLON_CLASS;


//????-℅??﹞???角??
typedef enum _VSB_JAC_CLASS
{
	VSB_JAC_OTHER = 0,      // ?????“㊣?????
	VSB_JAC_TONGYUE_1 = 1,      // ????-????-2012,2010,2008
	VSB_JAC_HEYUE_1 = 2,      // ????-????-2012,2011,2010
	VSB_JAC_HEYUEA30_2 = 3,      // ????-????A30-2013
	VSB_JAC_HEYUERS_3 = 4,      // ????-????RS-2012,2011
	VSB_JAC_HAOYUN_1 = 5,      // ????-????-?芍?“1
	VSB_JAC_WEILING_2 = 6,      // ????-????-??∼??芍?“
	VSB_JAC_WEILING_3 = 7,      // ????-????-??∼???????
	VSB_JAC_WEILING_4 = 8,      // ????-????-?芍?“
	VSB_JAC_KECHE_1 = 9,      // ????-????-A??
	VSB_JAC_BINYUE_1 = 10,      // ????-㊣???-2010,2008
	VSB_JAC_SHUAILING_2 = 11,      // ????-?∫??-?芍?“
	VSB_JAC_KANGLING_1 = 12,      // ????-????-?芍?“1
	VSB_JAC_KANGLING_2 = 13,      // ????-????-?芍?“2
	VSB_JAC_YUEYUE_1 = 14,      // ????-????-2013,2012,2011,2010
	VSB_JAC_XINGRUI_1 = 15,      // ????-????-2012,2011
	VSB_JAC_GEERFA_H_1 = 16,      // ????-????﹞?H-??∼???????
	VSB_JAC_GEERFA_K_2 = 17,      // ????-????﹞?K-???“1
	VSB_JAC_GEERFA_K_3 = 18,      // ????-????﹞?K-???“2
	VSB_JAC_GEERFA_M_4 = 19,      // ????-????﹞?M-??∼???????
	VSB_JAC_RUIFENG_1 = 20,      // ????-??﹞?-2011,2009,2007????
	VSB_JAC_RUIFENG_2 = 21,      // ????-??﹞?-2013,2012,2011,2010,2007,2005
	VSB_JAC_RUIFENG_3 = 22,      // ????-??﹞?M5-2012,2011
	VSB_JAC_RUIFENG_4 = 23,      // ????-??﹞?S5-2013
	VSB_JAC_RUIYING_1 = 24,      // ????-????-2009,2007
	VSB_JAC_RUIYING_2 = 25,      // ????-????-2013,2012,2011
	VSB_JAC_JUNLING_2 = 26,      // ????-????-????∼?,????∼?
	VSB_JAC_WEILING_1 = 27,      // ????-????-?芍???芍?“
	VSB_JAC_SHUAILING_1 = 28,      // ????-?∫??-??????
	VSB_JAC_RUILING_1 = 29,      // ????-????-2012
	VSB_JAC_JUNLING_1 = 30      // ????-????-?足??∼?
}VSB_JAC_CLASS;


//????℅??﹞???角??
typedef enum _VSB_JMC_CLASS
{
	VSB_JMC_OTHER = 0,      // ?????“㊣?????
	VSB_JMC_KAIYUN_1 = 1,      // ????-????-102,109?赤???芍?“
	VSB_JMC_KAIYUN_2 = 2,      // ????-????-95?赤???芍?“
	VSB_JMC_YUHU_1 = 3,      // ????-?辰??-2012
	VSB_JMC_BAODIAN_1 = 4,      // ????-㊣???-2007
	VSB_JMC_BAODIAN_2 = 5,      // ????-㊣???-2009㊣那℅???,2008
	VSB_JMC_BAODIAN_3 = 6,      // ????-㊣???-2014,2012,2009??????
	VSB_JMC_BAOWEI_1 = 7,      // ????-㊣???-2005
	VSB_JMC_BAOWEI_2 = 8,      // ????-㊣???-2009
	VSB_JMC_QUANSHUN_1 = 9,      // ????-?????????迆????-2010,2008
	VSB_JMC_QUANSHUN_2 = 10,      // ????-????????-2006
	VSB_JMC_QUANSHUN_3 = 11,      // ????-????????-2013,2011,2010
	VSB_JMC_SHUNDA_1 = 12,      // ????-????-2004,2003
	VSB_JMC_SHUNDA_2 = 13,      // ????-????-2011,2010,2008
	VSB_JMC_YUSHENG_1 = 14,      // ????-???∟-2013
	VSB_JMC_YUSHENG_2 = 15       // ????-???∟-2013??????℅∼∼?,2012,2011
}VSB_JMC_CLASS;

// ??????℅??﹞???角??
typedef enum _VSB_VOLVO_CLASS
{
	VSB_VOLVO_OTHER = 0,   // ?????“㊣?????
	VSB_VOLVO_C30_1 = 1,    // ??????-C30-2013,2012,2011,2010
	VSB_VOLVO_S40_1 = 2,    // ??????-S40-2012,2011,2010,2009,2008,2007
	VSB_VOLVO_S60_1 = 3,    // ??????-S60-2003
	VSB_VOLVO_S60_2 = 4,    // ??????-S60-2013,2012,2011
	VSB_VOLVO_S80L_1 = 5,    // ??????-S80L-2012,2011,2010,2009
	VSB_VOLVO_XC60_1 = 6,    // ??????-XC60-2013,2012,2011,2010,2009
	VSB_VOLVO_XC90_1 = 7     // ??????-XC90-2013,2012,2011,2008
}VSB_VOLVO_CLASS;

// ????℅??﹞???角??
typedef enum _VSB_HIGER_CLASS
{
	VSB_HIGER_OTHER = 0,   // ?????“㊣?????
	VSB_HIGER_H8_1 = 1,    // ????-H8-A??
	VSB_HIGER_H92_1 = 2,    // ????-H92-A??
	VSB_HIGER_V7_1 = 3,    // ????-V7,V8-2006
	VSB_HIGER_KECHE_1 = 4,    // ????-????????5-A??
	VSB_HIGER_LONGWEI_1 = 5,    // ????-?迆??-2012,2011
	VSB_HIGER_H7V_1 = 6     // ????-????H7V-2010
}VSB_HIGER_CLASS;

// ??‾豕℅??﹞???角??
typedef enum _VSB_RUILIN_CLASS
{
	VSB_RUILIN_OTHER = 0,   // ?????“㊣?????
	VSB_RUILIN_G3_1 = 1,   // ??‾豕-G3-2012,2010
	VSB_RUILIN_G5_1 = 2,   // ??‾豕-G5-2012,2011,2010
	VSB_RUILIN_M1_1 = 3,   // ??‾豕-M1-2013,2011,2010,2009
	VSB_RUILIN_X1_1 = 4,   // ??‾豕-X1-2012A,2011,2010
	VSB_RUILIN_X1_2 = 5    // ??‾豕-X1-2012B
}VSB_RUILIN_CLASS;

// ?那?迆℅??﹞???角??
typedef enum _VSB_SHENLONG_CLASS
{
	VSB_SHENLON_OTHER = 0,         // ?????“㊣?????
	VSB_SHENLONG_KECHE_1 = 1          //?那?迆????-????????4-A??
}VSB_SHENLONG_CLASS;

// ????℅??﹞???角??
typedef enum _VSB_FOTON_CLASS
{
	VSB_FOTON_OTHER = 0,            // ?????“㊣?????
	VSB_FOTON_AOLING_1 = 1,            // ????-∼???-???“
	VSB_FOTON_AOLING_2 = 2,            // ????-∼???-?芍??????
	VSB_FOTON_AOLING_3 = 3,            // ????-∼???-∼???TX,CTX
	VSB_FOTON_OUMAN_1 = 4,            // ????-?﹞?邦-GTL6??B
	VSB_FOTON_OUMAN_2 = 5,            // ????-?﹞?邦-TX6??,9??
	VSB_FOTON_OUMAN_3 = 6,            // ????-?﹞?邦-?﹞?邦???“1
	VSB_FOTON_OUMAN_4 = 7,            // ????-?﹞?邦-???“6??,9??
	VSB_FOTON_OUHUI_1 = 8,            // ????-?﹞??????-D??
	VSB_FOTON_OUMAKE_1 = 9,            // ????-?﹞?赤??-3??
	VSB_FOTON_OUMAKE_2 = 10,            // ????-?﹞?赤??-5??
	VSB_FOTON_SAPU_1 = 11,            // ????-????-2011
	VSB_FOTON_SAPU_3 = 12,            // ????-????-2011???????足
	VSB_FOTON_MENGPAIKE_1 = 13,            // ????-??????-2013
	VSB_FOTON_MIDI_1 = 14,            // ????-????-2011,2009
	VSB_FOTON_FENGJING_1 = 15,            // ????-﹞??∼????-2012,2011,2009
	VSB_FOTON_SAPU_2 = 16            // ????-????-2011?????‾﹞???Z7
}VSB_FOTON_CLASS;

//????℅??﹞???角??
typedef enum _VSB_FODAY_CLASS
{
	VSB_FODAY_OTHER = 0,            // ?????“㊣?????
	VSB_FODAY_CHAOREN_1 = 1,            // ????-???????∟?“-2009,2006
	VSB_FODAY_CHAOREN_2 = 2,            // ????-???????∟?“-2011
	VSB_FODAY_TANSUOZHE_1 = 3,            // ????-???‾??6-2013,2011,2010
	VSB_FODAY_TANSUOZHE_2 = 4,            // ????-???‾???辰-2011,2010,2009
	VSB_FODAY_TANSUOZHE_3 = 5,            // ????-???‾???車-2011,2004
	VSB_FODAY_XIONGSHI_1 = 6             // ????-???“F16?∟?“-2012
}VSB_FODAY_CLASS;

// ?足?足℅??﹞???角??
typedef enum _VSB_HONGQI_CLASS
{
	VSB_HONGQI_OTHER = 0,         // ?????“㊣?????
	VSB_HONGQI_MINGSHI_1 = 1           // ?足?足-?‾??-2007,2003,2001,2000,1999
}VSB_HONGQI_CLASS;


// ?????? ℅??﹞???角??
typedef enum _VSB_LUXGEN_CLASS
{
	VSB_LUXGEN_OTHER = 0,         // ?????“㊣?????
	VSB_LUXGEN_DASEVEN_1 = 1          // ??????-?車7-SUV
}VSB_LUXGEN_CLASS;

// ????℅??﹞???角??
typedef enum _VSB_XIALI_CLASS
{
	VSB_XIALI_OTHER = 0,         // ?????“㊣?????
	VSB_XIALI_QIBING_1 = 1,         // ????(????)-??㊣?-2010
}VSB_XIALI_CLASS;

// ????????℅??﹞???角??
typedef enum _VSB_SHUCHI_CLASS
{
	VSB_SHUCHI_OTHER = 0,         // ?????“㊣?????
	VSB_SHUCHI_A_1 = 1          // ????????-????-A??
}VSB_SHUCHI_CLASS;

//??﹞??芍??℅??﹞???角??
typedef enum _VSB_INFINITI_CLASS
{
	VSB_INFINITI_OTHER = 0,         // ?????“㊣?????
	VSB_INFINITI_EX_1 = 1,         // ??﹞??芍??-EX-2013,2011,2010,2009,2008
	VSB_INFINITI_FX_1 = 2,         // ??﹞??芍??-FX-2007
	VSB_INFINITI_FX_2 = 3,         // ??﹞??芍??-FX-2011,2010,2009
	VSB_INFINITI_FX_3 = 4,         // ??﹞??芍??-FX-2013,2012FX35
	VSB_INFINITI_G_1 = 5,         // ??﹞??芍??-G-2013,2010
	VSB_INFINITI_JX_1 = 6          // ??﹞??芍??-JX-2013,2011
}VSB_INFINITI_CLASS;


// ???“℅??﹞???角??
typedef enum _VSB_LOTUS_CLASS
{
	VSB_LOTUS_OTHER = 0,            // ?????“㊣?????
	VSB_LOTUS_L3_1 = 1,            // ???“-L3???芍-2010??????,2009
	VSB_LOTUS_L3_2 = 2             // ???“-L5???芍-2012,2011
}VSB_LOTUS_CLASS;

//﹞?????℅??﹞???角??
typedef enum _VSB_FIAT_CLASS
{
	VSB_FIAT_OTHER = 0,            // ?????“㊣?????
	VSB_FIAT_FEIYUE_1 = 1             // ﹞?????-﹞???-2014,2013,2012
}VSB_FIAT_CLASS;

//???豕℅??﹞???角??
typedef enum _VSB_OGA_CLASS
{
	VSB_OGA_OTHER = 0,              // ?????“㊣?????
	VSB_OGA_MDX_1 = 1,              // ???豕-MDX-2010
	VSB_OGA_MDX_2 = 2               // ???豕-MDX-2011
}VSB_OGA_CLASS;



// ????℅??﹞???角??
typedef enum _VSB_YUEJIN_CLASS
{
	VSB_YUEJIN_OTHER = 0,           // ?????“㊣?????
	VSB_YUEJIN_SHUAIHU_1 = 1,           // ????-?∫??-H100,H300
	VSB_YUEJIN_CAISHEN_1 = 2,           // ????-????-S100
	VSB_YUEJIN_CAISHEN_2 = 3,           // ????-????-S300
	VSB_YUEJIN_CAISHEN_3 = 4            // ????-????-S500
}VSB_YUEJIN_CLASS;

//?∼?赤℅??﹞???角??
typedef enum _VSB_YEMA_CLASS
{
	VSB_YEMA_OTHER = 0,        // ?????“㊣?????
	VSB_YEMA_F99_1 = 1            // ?∼?赤-F99-2012,2011,2010,2009 
}VSB_YEMA_CLASS;

//???迆℅??﹞???角??
typedef enum _VSB_SZKINGLONG_CLASS
{
	VSB_SZKINGLONG_OTHER = 0,        // ?????“㊣?????
	VSB_SZKINGLONG_BUS11_1 = 1,       // ???迆-????????11-A??
	VSB_SZKINGLONG_BUS12_1 = 2,       // ???迆-????????12-A??
	VSB_SZKINGLONG_BUS13_1 = 3,       // ???迆-????????13-A??
	VSB_SZKINGLONG_BUS14_1 = 4,       // ???迆-????????14-A??
	VSB_SZKINGLONG_BUS16_1 = 5,       // ???迆-????????16-A??
	VSB_SZKINGLONG_BUS18_1 = 6,       // ???迆-????????18-A??
	VSB_SZKINGLONG_BUS1_1 = 7,       // ???迆-????????1-A??
	VSB_SZKINGLONG_BUS20_1 = 8,       // ???迆-????????20-A??
	VSB_SZKINGLONG_BUS2_1 = 9,       // ???迆-????????2-A??
	VSB_SZKINGLONG_BUS5_1 = 10,       // ???迆-????????5-A??
	VSB_SZKINGLONG_BUS6_1 = 11,       // ???迆-????????6-A??
	VSB_SZKINGLONG_BUS9_1 = 12,       // ???迆-????????9-A??
	VSB_SZKINGLONG_BUS10_1 = 13,       // ???迆-????????10-A??
	VSB_SZKINGLONG_BUS15_1 = 14        // ???迆-????????15-A??
}VSB_SZKINGLONG_CLASS;

//?∟﹞芍??㊣?℅??﹞???角??
typedef enum _VSB_CHANGFENG_CLASS
{
	VSB_CHANGFENG_OTHER = 0,        // ?????“㊣?????
	VSB_CHANGFENG_CS7_1 = 1,        // ?∟﹞芍??㊣?-CS7-2009
	VSB_CHANGFENG_QIBING_1 = 2,        // ?∟﹞芍??㊣?-??㊣?-2010,2009
	VSB_CHANGFENG_LIEBAO_1 = 3,        // ?∟﹞芍??㊣?-??㊣?CS6-2010,2008
	VSB_CHANGFENG_FULING_1 = 4,        // ?∟﹞芍??㊣?-?????∟?“-A??
	VSB_CHANGFENG_FEIYANG_1 = 5,        // ?∟﹞芍??㊣?-﹞????∟?“-2010,2009,2005
	VSB_CHANGFENG_FEITENG_1 = 6,        // ?∟﹞芍??㊣?-﹞???-2010,2009,2006
	VSB_CHANGFENG_BLACKJINGANG_1 = 7,        // ?∟﹞芍??㊣?-??????-2013,2010,2009,2008,2006
}VSB_CHANGFENG_CLASS;

//??﹞?℅??﹞???角??
typedef enum _VSB_LUFENG_CLASS
{
	VSB_LUFENG_OTHER = 0,           // ?????“㊣?????
	VSB_LUFENG_X6_1 = 1,           // ??﹞?-X6-2005
	VSB_LUFENG_X6_2 = 2,           // ??﹞?-X6-2006
	VSB_LUFENG_X6_3 = 3,           // ??﹞?-X6-2011,2010,2008,2007
	VSB_LUFENG_LUFENGX5_1 = 4,           // ??﹞?-??﹞?X5-2013
	VSB_LUFENG_LUFENGX8_1 = 5,           // ??﹞?-??﹞?X8-2013,2012,2011,2009
	VSB_LUFENG_LUFENGX8_2 = 6,           // ??﹞?-??﹞?X8-2014,2012???‾∼?
	VSB_LUFENG_FENGHUA_1 = 7,           // ??﹞?-﹞???-2008,2007
	VSB_LUFENG_X6_4 = 8,           // ??﹞?-X6-2011????
	VSB_LUFENG_FENGSHANG_1 = 9            // ??﹞?-﹞???-2011,2006 
}VSB_LUFENG_CLASS;

//???????“℅??﹞???角??
typedef enum _VSB_SHANQI_CLASS
{
	VSB_SHANQI_OTHER = 0,           // ?????“㊣?????
	VSB_SHANQI_AOLONG_1 = 1,           // ???????“-∼??迆-???“A
	VSB_SHANQI_AOLONG_2 = 2,           // ???????“-∼??迆-???“B
	VSB_SHANQI_DELONG_1 = 3,           // ???????“-???迆F2000-4X2??????
	VSB_SHANQI_DELONG_2 = 4,           // ???????“-???迆F3000-B??
	VSB_SHANQI_DELONG_3 = 5,           // ???????“-???迆M3000-???“ 
}VSB_SHANQI_CLASS;


//?∼?赤℅??﹞???角??
typedef enum _VSB_RENAULT_CLASS
{
	VSB_RENAULT_OTHER = 0,          // ?????“㊣?????
	VSB_RENAULT_MEIGANNA_1 = 1,          // ?℅??-?﹞????-2006
	VSB_RENAULT_KELEIAO_1 = 2,          // ?℅??-???℅∼?-2010,2009
	VSB_RENAULT_KELEIAO_2 = 3,          // ?℅??-???℅∼?-2013,2012
	VSB_RENAULT_SCENE_1 = 4,          // ?℅??-﹞??∼-2007
	VSB_RENAULT_FENGLANG_1 = 5,          // ?℅??-﹞???-2011
	VSB_RENAULT_TAFEIKE_1 = 6           // ?℅??-??﹞???-2004    
}VSB_RENAULT_CLASS;

//????℅??﹞???角??
typedef enum _VSB_HUANGHAI_CLASS
{
	VSB_HUANGHAI_OTHER = 0,         // ?????“㊣?????
	VSB_HUANGHAI_DACAISHEN_1 = 1,         // ????-?車????-2013,2012
	VSB_HUANGHAI_DACAISHEN_2 = 2,         // ????-?車????-2013,2012,2011,2010,2009????∼?
	VSB_HUANGHAI_BUS4_1 = 3,         // ????-????????4-2012,2011
	VSB_HUANGHAI_CHALLENGER_1 = 4,         // ????-??????-2011,2010,2009,2008
	VSB_HUANGHAI_AOLONGCUV_1 = 5,         // ????-∼??迆CUV-2010,2009
	VSB_HUANGHAI_AOJUN_1 = 6,         // ????-∼???-2009
	VSB_HUANGHAI_AOJUN_2 = 7,         // ????-∼???-2010,2009
	VSB_HUANGHAI_QISHENGV3_1 = 8,         // ????-?足?∟V3-2011
	VSB_HUANGHAI_LINGHANGZHE_1 = 9,         // ????-?足????-2007,2005
	VSB_HUANGHAI_FENGCHI_1 = 10         // ????-﹞???-A??
}VSB_HUANGHAI_CLASS;

/********************?????﹞??℅??角??End*************************/

//????????
typedef struct tagNET_DVR_VEHICLE_INFO_
{
	DWORD dwIndex;          //?????辰??
	BYTE  byVehicleType;    //?????角?? 0 ㊣赤?????邦??????1 ㊣赤??????????2 ㊣赤???車???? ,3㊣赤????????﹞? ,4㊣赤??????????﹞? 5㊣赤??????????﹞?(3.5Ver)
	BYTE  byColorDepth;        //???赤????????
	BYTE  byColor;          //???赤????,????VCR_CLR_CLASS
							/*?℅???足??℅?????
							0~?℅????????
							1~?℅??????
							2~?℅?????㊣﹞??????????角????????
							3~?℅????????????0
							4~?℅?????????????車?辰??????
							*/
	BYTE  byRadarState;
	WORD  wSpeed;           //????km/h
	WORD  wLength;          //?∼???????????赤?∟??  
							/*?????角????0-??????1-??????2-??????3-??????4-???足??,5-????????,6-??∼????辰??7-?﹞????????
							8-?迆??﹞???9-??﹞“㊣?????10-??∼????? 11-??﹞???????12-?﹞????????13-????????, 14-??????????(??﹞“?迆??1357),
							15-??????????16-???????﹞,17-???????㊣????,18-????,19-??℅車,20-??????,21-????∼?????,22-???????足??,23-????,24-??﹞“????????????
							25-?????㊣???辰???????????∼??26-℅車℅??????㊣????27-??℅?????℅車℅???28-???﹞?????㊣????29-?車????℅?, 30-????????31-?????﹞????
							32-﹞??迆??????????33-﹞??迆?????????迆????????34-﹞??迆?????辰????, 35-??????, 36-?迄??,37-????????,38-????????,39-??????????????*/
	BYTE  byIllegalType;
	BYTE  byVehicleLogoRecog; //?????????角?? VLR_VEHICLE_CLASS
	BYTE  byVehicleSubLogoRecog; //?????﹞??℅??角????㊣???????VSB_VOLKSWAGEN_CLASS??℅??角????????
	BYTE  byVehicleModel; //????℅??﹞???那????0-??????????"????℅??﹞???那??.xlsx"
	BYTE  byCustomInfo[16];  //℅??“??????
	WORD  wVehicleLogoRecog;  //?????‾?﹞????????"?????‾?﹞??.xlsx" (??℅???????byVehicleLogoRecog);
	BYTE  byIsParking;//??﹞????? 0-???∫??1-??????2-??????
	BYTE  byRes;//㊣???℅???
	DWORD dwParkingTime; //?????㊣??????????s
	BYTE  byBelieve; //byIllegalType????????1-100
	BYTE  byCurrentWorkerNumber;//?㊣?∼℅‾??????
	BYTE  byCurrentGoodsLoadingRate;//?㊣?∼????℅∼???? 0-?? 1-?? 2-?? 3-?角 4-?迆
	BYTE  byDoorsStatus;//????℅??? 0-??????㊣? 1-????????
	BYTE  byRes3[4];
}NET_DVR_VEHICLE_INFO, *LPNET_DVR_VEHICLE_INFO;

//?????足???芍??
typedef struct tagNET_DVR_PLATE_RESULT
{
	DWORD   dwSize;            //?芍???∟??
	BYTE    byResultType;    //0-??????㊣??芍????1??????㊣??芍?? 2 ?車??10M?㊣℅??????﹞??
	BYTE    byChanIndex;    //?“????
	WORD    wAlarmRecordID;    //㊣“??????ID(?????谷???????????㊣byResultType??2?㊣???∫)
	DWORD   dwRelativeTime;    //?角???㊣????  
	BYTE    byAbsTime[32];    //?????㊣????,yyyymmddhhmmssxxx,e.g.20090810235959999?“??????
	DWORD   dwPicLen;        //?????∟??(?邦?∼??)
	DWORD    dwPicPlateLen;  //???????????∟??
	DWORD   dwVideoLen;        //?????????∟??
	BYTE    byTrafficLight;    //0-﹞??足????℅?????1-?????㊣℅?????2-?足???㊣℅???
	BYTE    byPicNum;       //???????????辰??
	BYTE    byDriveChan;    //??﹞???????
	BYTE     byVehicleType; //?????角????????VTR_RESULT
	DWORD   dwBinPicLen;    //???????????∟??
	DWORD   dwCarPicLen;    //?????????∟??
	DWORD   dwFarCarPicLen; //???∼???∟??
	BYTE    *pBuffer3;      //??????????
	BYTE    *pBuffer4;      //????????
	BYTE    *pBuffer5;      //???∼??
							//????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
							//????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE    byRelaLaneDirectionType;
	BYTE    byCarDirectionType; //??????????????﹞??辰??0㊣赤???????迄????1㊣赤???????迄???“?迄????????????????﹞??辰??????﹞???
	BYTE    byRes3[6];
	NET_DVR_PLATE_INFO  struPlateInfo;    //?????????芍??
	NET_DVR_VEHICLE_INFO struVehicleInfo; //????????
	BYTE    *pBuffer1;                   // ?㊣????????????(?邦?∼??)?????????辰???????????㊣?????????????????????辰???????????????????????????辰????????????NULL(DVS?????邦?∼??)
	BYTE    *pBuffer2;                  // ?㊣????????????(??????)?㊣?????辰???????????????“DVS??????????
}NET_DVR_PLATE_RESULT, *LPNET_DVR_PLATE_RESULT;
//?車?????迆???????????????????????????????????????????∼????+??????????

//????????????????        
typedef struct tagNET_DVR_IMAGEOVERLAYCFG
{
	DWORD        dwSize;
	BYTE        byOverlayInfo;//??????????????0-????????1-????
	BYTE        byOverlayMonitorInfo;//??﹞??????角??????????0-????????1-????
	BYTE        byOverlayTime;//??﹞??????㊣????0-????????1-????
	BYTE        byOverlaySpeed;//??﹞???????????0-????????1-????
	BYTE        byOverlaySpeeding;//??﹞?????????㊣?????0-????????1-????
	BYTE        byOverlayLimitFlag;//??﹞?????????㊣那????0-????????1-????
	BYTE        byOverlayPlate;//??﹞?????????????0-????????1-????
	BYTE        byOverlayColor;//??﹞????????赤??????0-????????1-????
	BYTE        byOverlayLength;//??﹞????????∟??0-????????1-????
	BYTE        byOverlayType;//??﹞???????????0-????????1-????
	BYTE        byOverlayColorDepth;//??﹞????????赤??????????0-????????1-????
	BYTE        byOverlayDriveChan;//??﹞???????????0-????????1-????
	BYTE        byOverlayMilliSec; //???????????? 0-????????1-????
	BYTE        byOverlayIllegalInfo; //???????????? 0-????????1-????
	BYTE        byOverlayRedOnTime;  //?????足???????㊣?? 0-????????1-????
	BYTE        byFarAddPlateJpeg;      //???∼????﹞?????????????,0-??????,1-????
	BYTE        byNearAddPlateJpeg;      //?邦?∼????﹞?????????????,0-??????,1-????
	BYTE        byRes1[3];    //㊣???
	BYTE        byMonitorInfo1[32];    //?角????????1
	BYTE        byMonitorInfo2[44]; //?足????????2
	BYTE        byRes2[52];    //㊣???
}NET_DVR_IMAGEOVERLAYCFG, *LPNET_DVR_IMAGEOVERLAYCFG;

//??IO??﹞?℅???????????
typedef struct tagNET_DVR_SNAPCFG
{
	DWORD   dwSize;
	BYTE    byRelatedDriveWay;//??﹞?IO????????????
	BYTE     bySnapTimes; //????℅?????????0-??℅?????﹞?0-?????????????∼℅??車5??  
	WORD    wSnapWaitTime;  //℅????????㊣????????ms??????﹞??∫[0,60000]
	WORD    wIntervalTime[MAX_INTERVAL_NUM];//?????????㊣????ms
	DWORD   dwSnapVehicleNum; //℅????????辰????
	NET_DVR_JPEGPARA  struJpegPara;//℅???????????
	BYTE    byRes2[16];//㊣???℅???
}NET_DVR_SNAPCFG, *LPNET_DVR_SNAPCFG;

typedef enum _ITC_MAINMODE_ABILITY_
{
	ITC_MODE_UNKNOW = 0x0,   //??
	ITC_POST_MODE = 0x1,  //?“??????
	ITC_EPOLICE_MODE = 0x2,  //????????
	ITC_POSTEPOLICE_MODE = 0x4  //?“??????????
}ITC_MAINMODE_ABILITY;

typedef enum _ITC_RECOG_REGION_TYPE_
{
	ITC_REGION_RECT = 0x0,   //????
	ITC_REGION_POLYGON = 0x1,  //?角㊣???
}ITC_RECOG_REGION_TYPE;

typedef struct tagNET_DVR_SNAP_ABILITY
{
	DWORD dwSize;
	BYTE  byIoInNum;//IO????????
	BYTE  byIoOutNum;//IO????????
	BYTE  bySingleSnapNum;//??IO??﹞?℅谷??
	BYTE  byLightModeArrayNum;//?足????????℅谷??
	BYTE  byMeasureModeArrayNum;//????????℅谷??
	BYTE  byPlateEnable; //??????㊣?????
	BYTE  byLensMode;//???﹞????0-CCD,1-CMOS
	BYTE  byPreTriggerSupport; //??﹞??∫??????﹞???????0-?∫????1-???∫??
	DWORD dwAbilityType; //?∫??????﹞???????????∼???㊣赤?????“????ITC_MAINMODE_ABILITY
	BYTE  byIoSpeedGroup; //?∫????IO????℅谷??
	BYTE  byIoLightGroup; //?∫????IO?足????℅谷??
	BYTE  byRecogRegionType; //???????辰?∫?????角?????那???“??ITC_RECOG_REGION_TYPE
	BYTE  bySupport; //?豕㊣???????∼???㊣赤????0-???∫????1-?∫??
					 // bySupport&0x1??㊣赤????﹞??∫????????℅?﹞?????????
					 // bySupport&0x2??㊣赤????﹞??∫???????????㊣?????芍??
					 // bySupport&0x4, ㊣赤????﹞??∫???角???“(?角??????)
					 // bySupport&0x8, ㊣赤????﹞??∫?????“??bonding????(???????赤)
					 // bySupport&0x10, ㊣赤????﹞??∫??????????
					 //2013-07-09 ??????﹞???
	WORD wSupportMultiRadar;// ?豕㊣???????∼???㊣赤????0-???∫????1-?∫??
							// wSupportMultiRadar&0x1??㊣赤?? ?“??RS485?℅?? ?∫???????????℅?????赤
							// wSupportMultiRadar&0x2??㊣赤?? ?“???谷?????? ?∫???????????℅?????赤
							// wSupportMultiRadar&0x4??㊣赤?? ?足???“?? ?∫???????????℅?????赤
							// wSupportMultiRadar&0x8??㊣赤?? ?????足?? ?∫???????????℅?????赤
	BYTE  byICRPresetNum;
	// ㊣赤???∫????ICR?∟?????“????????????????
	BYTE  byICRTimeSlot;//㊣赤???∫????ICR???㊣???????“1??8??
	BYTE  bySupportRS485Num;//㊣赤???∫????RS485????????
	BYTE  byExpandRs485SupportSensor;// ?豕㊣???????∼???㊣赤????0-???∫????1-?∫??
									 // byExpandRs485SupportSensor &0x1??㊣赤?????????足?‾?∫?????足?‾
									 // byExpandRs485SupportSensor &0x2??㊣赤???“?????????足?‾?∫?????足?‾
	BYTE  byExpandRs485SupportSignalLampDet;// ?豕㊣???????∼???㊣赤????0-???∫????1-?∫??
											// byExpandRs485SupportSignalLampDet &0x1??㊣赤?????????足?‾?∫?????????????足???‾
											// byExpandRs485SupportSignalLampDet &0x2??㊣赤???“?????????足?‾?∫?????????????足???‾
	BYTE  byRelayNum;// ㊣赤???∫???????‾?????? 2013-11-04
	BYTE  bySupport1; //?豕㊣???????∼???㊣赤????0-???∫????1-?∫??
					  // bySupport1&0x1??㊣赤????﹞??∫??℅??“?????㊣????????
					  // bySupport1&0x2,  ㊣赤????﹞??∫????????﹞?????﹞?∼?
					  // bySupport1&0x4,  ㊣赤????﹞??∫??DDNS????﹞?∼?
					  // bySupport1&0x8,  ㊣赤????﹞??∫???????豕㊣??㊣?∼??﹞??????????邦??
					  // bySupport1&0x10, ㊣赤????﹞??∫???????????? 2014-03-03
					  // bySupport1&0x20,  ㊣赤????﹞??∫??GPS???谷????????
					  // bySupport1&0x40,  ㊣赤????﹞??∫??NTP???㊣?????∫??﹞????豕??
					  // bySupport1&0x80,  ㊣赤????﹞??∫??tps㊣“??????????
	BYTE  bySupport2; //?豕㊣???????∼???㊣赤????0-???∫????1-?∫??
					  // bySupport2&0x01,  ㊣赤????﹞??∫?????‾????????????
					  // bySupport2&0x02,  ㊣赤???“???????????“INTER_PICCFG_V30??????﹞??∫???????????㊣???????????????“byOSDMilliSecondEnable??
					  // bySupport2&0x04,   ㊣赤???????????“NET_DVR_BARRIERGATE_CFG????byBarrierGateCtrl℅????∫???‾??4~?????????????∫??byUnlock??????????﹞????辰㊣那?????∫??
	BYTE  bySupportWhiteBalance; //∼℅???????????????????∫??????∼℅??????℅???∼℅??????℅???∼℅????2??3????????
								 // bySupportWhiteBalance &0x01,  ㊣赤????﹞??∫????????????
								 // bySupportWhiteBalance &0x02,  ㊣赤????﹞??∫??℅?????????
								 // bySupportWhiteBalance &0x04,  ㊣赤????﹞??∫????????????
								 // bySupportWhiteBalance &0x08,  ㊣赤????﹞??∫??∼℅????????
	BYTE  byRes[9];
} NET_DVR_SNAP_ABILITY, *LPNET_DVR_SNAP_ABILITY;

typedef struct tagNET_DVR_TRANSFER_CAP
{
	BYTE  byAbility;
	BYTE  byRes[63];
}NET_DVR_TRANSFER_CAP, *LPNET_DVR_TRANSFER_CAP;

typedef struct tagNET_ITC_ICRTIMECFG
{
	NET_DVR_SCHEDTIME  struTime;
	BYTE   byAssociateRresetNo;//?∟??????1??8 , 0?迆㊣赤??
	BYTE   bySubSwitchMode;//1~∼℅?足??2~?赤?? (?㊣?∟????????0 ???㊣?辰?迆?∫)
	BYTE   byRes[10];
}NET_ITC_ICRTIMECFG, *LPNET_ITC_ICRTIMECFG;

typedef struct tagNET_ITC_ICR_TIMESWITCH_PARAM  //156
{
	NET_ITC_ICRTIMECFG  struAutoCtrlTime[MAX_TIMESEGMENT_V30];//℅????????㊣???? (℅????????? ?㊣?????迆?∫ ?????∫??4℅谷???∟??4℅谷)
	BYTE  byICRPreset[MAX_ICR_NUM]; //?????迆?∫?迄???????????????? [0~100] ??℅谷??㊣那㊣赤???∟??????1??8 ?“0??7 ?角??????
	BYTE  byRes[20];
}NET_ITC_ICR_TIMESWITCH_PARAM, *LPNET_ITC_ICR_TIMESWITCH_PARAM;

typedef struct tagNET_ITC_ICR_MANUALSWITCH_PARAM
{
	BYTE  byICRPreset[MAX_ICR_NUM]; //?????迆?∫?迄???????????????? [0~100]
	BYTE  bySubSwitchMode;//1~∼℅?足??2~?赤??
	BYTE  byRes[147];
}NET_ITC_ICR_MANUALSWITCH_PARAM, *LPNET_ITC_ICR_MANUALSWITCH_PARAM;

typedef struct tagNET_ITC_ICR_AOTOSWITCH_PARAM
{
	BYTE  byICRPreset[MAX_ICR_NUM]; //?????迆?∫?迄???????????????? [0~100] ??℅谷??㊣那㊣赤???∟??????1??8 ?“0??7 ?角??????
	BYTE  byICRAutoSwitch; // ICR℅?????????????????, ????﹞??∫[0 100]
	BYTE  byRes[147];
}NET_ITC_ICR_AOTOSWITCH_PARAM, *LPNET_ITC_ICR_AOTOSWITCH_PARAM;

//??﹞“℅???
typedef struct tagNET_ITC_ICR_ALGAOTOSWITCH_PARAM
{
	BYTE  byDetectThreshold;//?足??????,﹞??∫[0,100],???? 58
	BYTE  byAbBrightnessThreshold; //?足????????????﹞??∫[0,100]??????12
	BYTE  byRes[154];
}NET_ITC_ICR_ALGAOTOSWITCH_PARAM, *LPNET_ITC_ICR_ALGAOTOSWITCH_PARAM;

typedef union tagNET_ITC_ICR_PARAM_UNION
{
	BYTE uLen[156];
	NET_ITC_ICR_AOTOSWITCH_PARAM struICRAutoSwitch;
	NET_ITC_ICR_MANUALSWITCH_PARAM struICRManualSwitch;
	NET_ITC_ICR_TIMESWITCH_PARAM struICRTimeSwitch;
	NET_ITC_ICR_ALGAOTOSWITCH_PARAM strICRAlgorithmAutoSwitch;
}NET_ITC_ICR_PARAM_UNION, *LPNET_ITC_ICR_PARAM_UNION;

typedef struct tagNET_ITC_ICRCFG
{
	DWORD dwSize;
	BYTE  bySwitchType;//1~℅?????????2~???????? ,3~?“?㊣????,4~??﹞“℅??? 
	BYTE  byRes[3];
	NET_ITC_ICR_PARAM_UNION uICRParam;
}NET_ITC_ICRCFG, *LPNET_ITC_ICRCFG;

//2013-07-09 ?足?????赤
typedef struct
{
	DWORD   dwHandleType; //?足?????赤,?足?????赤﹞?????"?辰"?芍??
						  /*0x00: ???足??*/
						  /*0x01: ?角???‾??????*/
						  /*0x02: ?迄??????*/
						  /*0x04: ????????*/
						  /*0x08: ??﹞?㊣“???????“?????‾??????*/
						  /*0x10: ??﹞?JPRG℅?????????Email*/
						  /*0x20: ?????迄??㊣“???‾????*/
						  /*0x40: ??????℅?????(???∼????PCNVR?∫??)*/
						  /*0x200: ℅?????????FTP*/
	BYTE     byEnable; //0??????????1??????
	BYTE    byRes;
	WORD    wDuration;//?????㊣??(????/s)
	BYTE    byAlarmOutTriggered[MAX_ITC_EXCEPTIONOUT];//??﹞??????“??
	BYTE    byRes1[8];
} NET_ITC_HANDLEEXCEPTION, *LPNET_ITC_HANDLEEXCEPTION;

typedef struct
{
	DWORD dwSize;
	NET_ITC_HANDLEEXCEPTION struSnapExceptionType[MAX_EXCEPTIONNUM_V30]; //??℅谷????????????㊣赤???????足??????℅谷0- ???????赤,1-??????,2-IP ???﹞????, 3-???足?‾?足??, 4-???????足???‾?足??
}NET_ITC_EXCEPTION, *LPNET_ITC_EXCEPTION;

typedef struct tagNET_DVR_TRIGCOORDINATE
{
	WORD wTopLeftX; /*????℅車?????芍℅?㊣那?“2??℅?????*/
	WORD wTopLeftY; /*????℅車????℅?℅?㊣那?“2??℅?????*/
	WORD wWdith; /*?????赤???“2??℅?????*/
	WORD wHeight; /*?????????“2??℅?????*/
} NET_DVR_TRIGCOORDINATE, *LPNET_DVR_TRIGCOORDINATE;

typedef enum _PROVINCE_CITY_IDX_
{
	ANHUI_PROVINCE = 0,              //∼???
	AOMEN_PROVINCE = 1,              //∼???
	BEIJING_PROVINCE = 2,              //㊣㊣??
	CHONGQING_PROVINCE = 3,              //???足
	FUJIAN_PROVINCE = 4,              //???“
	GANSU_PROVINCE = 5,              //???角
	GUANGDONG_PROVINCE = 6,              //????
	GUANGXI_PROVINCE = 7,              //???‾
	GUIZHOU_PROVINCE = 8,              //?車??
	HAINAN_PROVINCE = 9,              //????
	HEBEI_PROVINCE = 10,             //??㊣㊣
	HENAN_PROVINCE = 11,             //????
	HEILONGJIANG_PROVINCE = 12,             //???迆??
	HUBEI_PROVINCE = 13,             //??㊣㊣
	HUNAN_PROVINCE = 14,             //????
	JILIN_PROVINCE = 15,             //????
	JIANGSU_PROVINCE = 16,             //????
	JIANGXI_PROVINCE = 17,             //???‾
	LIAONING_PROVINCE = 18,             //????
	NEIMENGGU_PROVINCE = 19,             //??????
	NINGXIA_PROVINCE = 20,             //????
	QINGHAI_PROVINCE = 21,             //?角??
	SHANDONG_PROVINCE = 22,             //????
	SHANXI_JIN_PROVINCE = 23,             //???‾
	SHANXI_SHAN_PROVINCE = 24,             //???‾
	SHANGHAI_PROVINCE = 25,             //????
	SICHUAN_PROVINCE = 26,             //???“
	TAIWAN_PROVINCE = 27,             //?“??
	TIANJIN_PROVINCE = 28,             //?足?辰
	XIZANG_PROVINCE = 29,             //?‾??
	XIANGGANG_PROVINCE = 30,             //????
	XINJIANG_PROVINCE = 31,             //????
	YUNNAN_PROVINCE = 32,             //????
	ZHEJIANG_PROVINCE = 33              //????
}PROVINCE_CITY_IDX;

typedef struct tagNET_DVR_GEOGLOCATION
{
	int iRes[2]; /*㊣???*/
	DWORD dwCity; /*???????那??PROVINCE_CITY_IDX */
}NET_DVR_GEOGLOCATION, *LPNET_DVR_GEOGLOCATION;

//???∼????
typedef enum _SCENE_MODE_
{
	UNKOWN_SCENE_MODE = 0,            //???????∼????
	HIGHWAY_SCENE_MODE = 1,            //???????∼????
	SUBURBAN_SCENE_MODE = 2,            //???????∼????(㊣???)
	URBAN_SCENE_MODE = 3,            //???????∼????
	TUNNEL_SCENE_MODE = 4             //?赤?????∼????(㊣???)
}SCENE_MODE;
// ???????????谷?角??
typedef enum _PRIDATA_RENDER
{
	RENDER_ANA_INTEL_DATA = 0x00000001, //????﹞???
	RENDER_MD = 0x00000002, //?????足??
	RENDER_ADD_POS = 0x00000004, //POS?????車????        
	RENDER_ADD_PIC = 0x00000008, //????????
	RENDER_FIRE_DETCET = 0x00000010,  //??????????
	RENDER_TEM = 0x00000020,   //????????
	RENDER_TRACK_TEM = 0x00000040 //?足??????
}PRIDATA_RENDER;

typedef enum _FIRE_ALARM {
	FIRE_FRAME_DIS = 0x00000001, //?????辰????
	FIRE_MAX_TEMP = 0x00000002, //℅???????
	FIRE_MAX_TEMP_POSITION = 0x00000004, //℅???????????????
	FIRE_DISTANCE = 0x00000008, //℅????????角??}FIRE_ALARM
}FIRE_ALARM;

typedef enum _TEM_FLAG {
	TEM_REGION_BOX = 0x00000001, //?辰????
	TEM_REGION_LINE = 0x00000002, //??????
	TEM_REGION_POINT = 0x00000004, //??????}TEM_FLAG
}TEM_FLAG;

typedef struct tagNET_DVR_VTPARAM
{
	DWORD   dwSize;
	BYTE    byEnable;  /* ??﹞??????谷????????0-????????1-????*/
	BYTE    byIsDisplay; /* ??﹞??????谷????????0-????????1-????*/
	BYTE    byLoopPos; //?赤????﹞??????????辰??0-?辰????1-?辰??
	BYTE    bySnapGain; /*℅???????*/
	DWORD   dwSnapShutter; /*℅????足??????*/
	NET_DVR_TRIGCOORDINATE struTrigCoordinate; //㊣???
	NET_DVR_TRIGCOORDINATE struRes[MAX_VL_NUM];
	BYTE    byTotalLaneNum;/*??????﹞?????????1*/
	BYTE    byPolarLenType; /*???????角????0??????????????1??????????????????*/
	BYTE    byDayAuxLightMode; /*∼℅?足?“?迆???‾??????0?????“?迆???‾??1??LED?????‾??2???????????‾*/
	BYTE    byLoopToCalRoadBright; /*?????????﹞????????????(?谷??????)*/
	BYTE    byRoadGrayLowTh; /*?﹞????????????????????1*/
	BYTE    byRoadGrayHighTh; /*?﹞????????????????????140*/
	WORD    wLoopPosBias; /*?赤????﹞?????????30*/
	DWORD   dwHfrShtterInitValue; /*?????????????㊣??????????2000*/
	DWORD   dwSnapShtterInitValue; /*℅????????????㊣??????????500*/
	DWORD   dwHfrShtterMaxValue; /*?????????????㊣????℅??車??20000*/
	DWORD   dwSnapShtterMaxValue; /*℅????????????㊣????℅??車??1500*/
	DWORD   dwHfrShtterNightValue; /*?赤???????????????㊣?????豕????3000*/
	DWORD   dwSnapShtterNightMinValue; /*?赤??℅????????????㊣????℅?????3000*/
	DWORD   dwSnapShtterNightMaxValue; /*?赤??℅????????????㊣????℅??車??5000*/
	DWORD   dwInitAfe; /*????????????200*/
	DWORD   dwMaxAfe; /*??????℅??車??400*/
	WORD    wResolutionX;/* ?豕㊣??㊣?∼﹞?㊣????赤*/
	WORD    wResolutionY;/* ?豕㊣??㊣?∼﹞?㊣?????*/
	DWORD   dwGainNightValue; /*?赤??????????????70*/
	DWORD   dwSceneMode; /*???∼?????? ?那??SCENE_MODE */
	DWORD   dwRecordMode; /*????㊣那????0-????????1-????*/
	NET_DVR_GEOGLOCATION struGeogLocation; /*???﹞????*/
	BYTE    byTrigFlag[MAX_VL_NUM]; /*??﹞?㊣那????0-???﹞??﹞???1-??????﹞???2-???﹞/????????﹞?*/
	BYTE    byTrigSensitive[MAX_VL_NUM];  /*??﹞??谷??????1-100*/
	BYTE    byRes2[62];
}NET_DVR_VTPARAM, *LPNET_DVR_VTPARAM;

typedef struct tagNET_DVR_SNAPENABLECFG
{
	DWORD dwSize;
	BYTE  byPlateEnable;//??﹞??∫????????㊣???0-???∫????1-?∫??
	BYTE  byRes1[2];   //㊣???
	BYTE  byFrameFlip;   //??????﹞?﹞?℅? 0-??﹞?℅???1-﹞?℅?
	WORD  wFlipAngle;    //????﹞?℅????? 0,90,180,270
	WORD  wLightPhase;   //?角????????﹞??∫[0, 360]
	BYTE  byLightSyncPower;  //??﹞?????????????????0-????????1-????
	BYTE  byFrequency;        //????????
	BYTE  byUploadSDEnable;  //??﹞?℅???????SD??????0-﹞???1-??
	BYTE  byPlateMode; //??㊣?????????:0-??????﹞?,1-??????﹞?
	BYTE  byUploadInfoFTP; //??﹞?????℅?????????????FTP??0-﹞???1-??
	BYTE  byAutoFormatSD; //??﹞?℅?????????SD?“??0-﹞???1-??
	WORD  wJpegPicSize; //Jpeg?????車??[64-8196]
	BYTE  bySnapPicResolution;  //℅???????﹞?㊣???(??NET_DVR_COMPRESSION_INFO_V30??﹞?㊣???㊣???????)
	BYTE  byRes[55]; //㊣???
}NET_DVR_SNAPENABLECFG, *LPNET_DVR_SNAPENABLECFG;

/*ftp????????*/
typedef struct
{
	DWORD    dwSize;
	DWORD    dwEnableFTP;            /*??﹞?????ftp????????*/
	char    sFTPIP[16];                /*ftp ﹞????‾*/
	DWORD    dwFTPPort;                /*ftp????*/
	BYTE    sUserName[NAME_LEN];    /*???∫??*/
	BYTE    sPassword[PASSWD_LEN];    /*????*/
	DWORD    dwDirLevel;    /*0 = ???????????芍?????㊣??㊣??????迄????,1 = ????1??????,2=????2??????*/
	WORD     wTopDirMode;    /* ??????????0x1 = ?????豕㊣???,0x2 = ?????豕㊣???,0x3 = ?????豕㊣?ip???﹞??0x4=?????角????,0x5=?????㊣??(?那??),0x=6℅??“??,0x7=?????角??,0x8=﹞??辰,0x9=????*/
	WORD     wSubDirMode;    /* ??????????0x1 = ?????“????,0x2 = ?????“??????,0x3=?????㊣??(?那????),0x4=??????????,0x=5℅??“??,0x6=?????角??,0x7=﹞??辰,0x8=????*/
	BYTE    byEnableAnony; //??????????0-﹞???1-??
	BYTE    byPicArchivingInterval;//?????谷??????[1~30],0㊣赤????㊣?
	BYTE    byRes[22];
}NET_DVR_FTPCFG, *LPNET_DVR_FTPCFG;

/*???????邦?????????角?????? */
#define PICNAME_ITEM_DEV_NAME         1        /*?豕㊣???*/
#define PICNAME_ITEM_DEV_NO         2        /*?豕㊣???*/
#define PICNAME_ITEM_DEV_IP         3        /*?豕㊣?IP*/
#define PICNAME_ITEM_CHAN_NAME         4        /*?“????*/
#define PICNAME_ITEM_CHAN_NO         5        /*?“????*/
#define PICNAME_ITEM_TIME             6        /*?㊣??*/
#define PICNAME_ITEM_CARDNO            7        /*?“??*/
#define PICNAME_ITEM_PLATE_NO       8   /*????????*/
#define PICNAME_ITEM_PLATE_COLOR    9   /*????????*/
#define PICNAME_ITEM_CAR_CHAN       10  /*??????*/
#define PICNAME_ITEM_CAR_SPEED      11  /*????????*/
#define PICNAME_ITEM_CARCHAN        12  /*?角????*/
#define PICNAME_ITEM_PIC_NUMBER     13  //?????辰??
#define PICNAME_ITEM_CAR_NUMBER     14  //?????辰??
#define PICNAME_MAXITEM             15

#define PICNAME_ITEM_SPEED_LIMIT_VALUES    15 //??????
#define PICNAME_ITEM_ILLEGAL_CODE          16 //?迆㊣那??﹞“?迆??
#define PICNAME_ITEM_CROSS_NUMBER          17 //?﹞??㊣角??
#define PICNAME_ITEM_DIRECTION_NUMBER      18 //﹞??辰㊣角??

//(3.7Ver)
#define PICNAME_ITEM_CAR_COLOR             19 //???赤????
#define PICNAME_ITEM_PLATE_COORDINATE      20 //????℅?㊣那
#define PICNAME_ITEM_CAR_TYPE              21 //?????角??
#define PICNAME_ITEM_VIOLATION_TYPE        22 //?????角??
#define PICNAME_ITEM_CUSTOM                255//℅??“??



//?????邦??
typedef struct
{
	BYTE     byItemOrder[PICNAME_MAXITEM];    /*    豕???℅谷?“???????邦???????辰 */
	BYTE     byDelimiter;        /*﹞???﹞?????∼???'_'*/
}NET_DVR_PICTURE_NAME, *LPNET_DVR_PICTURE_NAME;

//?邦?????辰??2013-09-27
#define PICNAME_ITEM_PARK_DEV_IP             1        /*?豕㊣?IP*/
#define PICNAME_ITEM_PARK_PLATE_NO          2       /*????????*/
#define PICNAME_ITEM_PARK_TIME                 3        /*?㊣??*/
#define PICNAME_ITEM_PARK_INDEX             4       /*????㊣角??*/
#define PICNAME_ITEM_PARK_STATUS            5       /*????℅???*/
#define PICNAME_ITEM_BUILDING_NUMBER        6       /*?∼????????*/
#define PICNAME_ITEM_OUTDOOR_UNIT_ID        7       /*?????迆㊣角??*/
#define PICNAME_ITEM_UNLOCK_TYPE            8       /*????﹞???*/
#define PICNAME_ITEM_DEVICE_NAME            9       //?豕㊣?????
#define PICNAME_ITEM_PERIOD_NO              10      /*????*/
#define PICNAME_ITEM_DEV_INDEX              11      /*?豕㊣?㊣角??*/
#define PICNAME_PREFIX                      32      /*??????℅??“???∼℅??∟??*/
//?????邦?????? 2013-09-27
typedef struct
{
	BYTE     byItemOrder[PICNAME_MAXITEM];    /*    豕???℅谷?“???????邦???????辰 */
	BYTE     byDelimiter;                    /*﹞???﹞?????∼???'_'*/
	BYTE    byPicNamePrefix[PICNAME_PREFIX/*32*/];  //??????℅??“???∼℅?
}NET_DVR_PICTURE_NAME_EX, *LPNET_DVR_PICTURE_NAME_EX;

/* ????℅????豕??*/
typedef struct
{
	BYTE    byStrFlag;    /*????????????﹞?*/
	BYTE     byEndFlag;    /*?芍??﹞?*/
	WORD    wCardIdx;    /*?“???角????????*/
	DWORD     dwCardLen;    /*?“???∟??*/
	DWORD   dwTriggerPicChans;    /*?迄??﹞????“??????∼?????????1????????????0x2㊣赤???????“??*/
}NET_DVR_SERIAL_CATCHPIC_PARA, *LPNET_DVR_SERIAL_CATCHPIC_PARA;

//DVR℅????????????“?迄????
typedef struct
{
	DWORD    dwSize;
	NET_DVR_JPEGPARA struJpegPara[MAX_CHANNUM_V30];    /*?????“????????????*/
	WORD    wBurstMode;                            /*℅???﹞???,∼????豕??.0x1=㊣“????????﹞???0x2=?????足????﹞? 0x4=232??﹞???0x8=485??﹞???0x10=??????﹞?*/
	WORD    wUploadInterval;                    /*????????????(??)[0,65535]*/
	NET_DVR_PICTURE_NAME     struPicNameRule;    /* ?????邦?????辰 */
	BYTE    bySaveToHD;        /*??﹞?㊣?????????*/
	BYTE    byRes1;
	WORD    wCatchInterval;        /*℅???????(????)[0,65535]*/
	BYTE    byRes2[12];
	NET_DVR_SERIAL_CATCHPIC_PARA struRs232Cfg;
	NET_DVR_SERIAL_CATCHPIC_PARA struRs485Cfg;
	DWORD dwTriggerPicTimes[MAX_CHANNUM_V30];    /* ?????“????????﹞????????? */
	DWORD dwAlarmInPicChanTriggered[MAX_ALARMIN_V30]; /*㊣“????﹞?℅????“??,∼????豕????????1??????*/
}NET_DVR_JPEGCFG_V30, *LPNET_DVR_JPEGCFG_V30;

//℅?????﹞????車?芍??(㊣???)
typedef struct tagNET_DVR_MANUALSNAP
{
	BYTE   byOSDEnable;//0-????㊣?(????)??1-??㊣?
	BYTE   byLaneNo;//??????, ﹞??∫??1-6????????1(℅????迆????????????)
	BYTE   byChannel;//?“????
	BYTE   byRes[21]; //㊣???
}NET_DVR_MANUALSNAP, *LPNET_DVR_MANUALSNAP;

typedef struct tagNET_DVR_SPRCFG
{
	DWORD dwSize;
	BYTE byDefaultCHN[MAX_CHJC_NUM]; /*?豕㊣???????﹞?????℅??辰??*/
	BYTE byPlateOSD;    /*0:??﹞?????????????,1:﹞?????????????*/
	BYTE bySendJPEG1;   /*0-???????邦?∼JPEG??,1-?????邦?∼JPEG??*/
	BYTE bySendJPEG2;   /*0-?????????∼JPEG??,1-???????∼JPEG??*/
	WORD wDesignedPlateWidth;   /*?????豕???赤??*/
	BYTE byTotalLaneNum;  /*??㊣?????????*/
	BYTE byRes1;      /*㊣???*/
	WORD wRecognizedLane;  /*??㊣???????????∼???㊣赤????bit0㊣赤??????1??﹞???㊣???0-????㊣???1-??㊣?*/
	NET_VCA_RECT struLaneRect[MAX_LANERECT_NUM];  /*??????㊣????辰*/
	DWORD dwRecogMode;  /*??㊣????角????
						bit0-㊣??辰??㊣???0-???辰??????㊣???1-㊣??辰??㊣?(??????㊣?) ??
						bit1-?車??????㊣??辰????????㊣???0-????????㊣???1-?車??????㊣? ??
						bit2-???赤??????㊣???0-?????????赤??????㊣?????㊣??辰??㊣??辰????????㊣??㊣??????????1-???赤??????㊣???
						bit3-????????㊣???0-??????????????㊣???1-????????㊣???
						bit4-??????㊣???0-????????????㊣???1-??????㊣???
						bit5-???“???辰???“????0-???“????1-???“????
						bit6-????㊣??辰????㊣???0-????㊣???1-????㊣???
						bit7-?赤???辰∼℅?足??0-∼℅?足??1-?赤?? */
	BYTE  bySendPRRaw;           //??﹞?﹞?????????0-??﹞?????1-﹞??? 
	BYTE  bySendBinImage;      //??﹞?﹞???????????????0-??﹞?????1-﹞??? 
	BYTE  byDelayCapture;  //???㊣℅???????,????????
	BYTE  byUseLED;    //????LED??????0-﹞???1-??
	BYTE  byRes2[68];    //㊣???
}NET_DVR_SPRCFG, *LPNET_DVR_SPRCFG;

typedef struct tagNET_DVR_PLCCFG
{
	DWORD dwSize;
	BYTE byPlcEnable;    //??﹞??????????????????“????????????0-??㊣???1-???? 
	BYTE byPlateExpectedBright;    //???????∟???????“??????50??, ﹞??∫[0, 100]
	BYTE byRes1[2];    //㊣??? 
	BYTE byTradeoffFlash;     //??﹞??????????????∼?足: 0 - ﹞?;  1 - ??(????); 
							  //???????????????㊣, ?????????????????????????????∫??, ?辰?豕???豕??1;﹞??辰??0
	BYTE byCorrectFactor;     //????????, ﹞??∫[0, 100], ??????50 (??tradeoff_flash?????㊣,????????????
	WORD wLoopStatsEn;  //??﹞???????????????∼???㊣赤????0-????????1-????
	BYTE byPlcBrightOffset;// ?????????????谷????(?谷?????????????∫)??????﹞??∫1~100
	BYTE byRes[19];
}NET_DVR_PLCCFG, *LPNET_DVR_PLCCFG;

typedef struct tagNET_DVR_DEVICESTATECFG
{
	DWORD dwSize;
	WORD wPreviewNum; //?∟??????????
	WORD wFortifyLinkNum; //??﹞?????????
	NET_DVR_IPADDR struPreviewIP[MAX_LINK];  //?∟???????∫IP???﹞
	NET_DVR_IPADDR struFortifyIP[MAX_FORTIFY_NUM]; //??﹞??????????∫IP???﹞
	DWORD dwVideoFrameRate;    //??????0-????; 1-1/16; 2-1/8; 3-1/4; 4-1/2; 5-1; 6-2; 7-4; 8-6; 9-8; 10-10; 11-12; 12-16; 13-20; 14-15; 15-18; 16-22;
	BYTE byResolution;      //﹞?㊣???0-DCIF 1-CIF, 2-QCIF, 3-4CIF, 4-2CIF 5?“㊣?????,16-VGA?“640*480??, 17-UXGA?“1600*1200??, 18-SVGA ?“800*600??,19-HD720p?“1280*720??,20-XVGA,  21-HD900p, 27-HD1080i, 28-2560*1920, 29-1600*304, 30-2048*1536, 31-2448*2048
	BYTE bySnapResolution;      //℅???﹞?㊣???0-DCIF 1-CIF, 2-QCIF, 3-4CIF, 4-2CIF 5?“㊣?????,16-VGA?“640*480??, 17-UXGA?“1600*1200??, 18-SVGA ?“800*600??,19-HD720p?“1280*720??,20-XVGA,  21-HD900p, 27-HD1080i, 28-2560*1920, 29-1600*304, 30-2048*1536, 31-2448*2048
	BYTE byStreamType; //?????角????0-?‾???‾??1-℅????‾
	BYTE byTriggerType; //??﹞???????0-??????﹞???1-???“??﹞?
	DWORD dwSDVolume;  //SD?“????
	DWORD dwSDFreeSpace; //SD?“???角????
	BYTE byDetectorState[MAX_DRIVECHAN_NUM][MAX_COIL_NUM];  //???足?‾℅?????0-????????1-??????2-?足??
	BYTE byDetectorLinkState; //???足?‾????℅?????0-????????1-????
	BYTE bySDStatus;    //SD?“℅??? 0????????1????????2???足????3-??sd?“
	BYTE byFortifyLevel[MAX_FORTIFY_NUM]; //??﹞???????0-????1-???????“??????2-???????“??????3-???????“????
	BYTE byRes2[116]; //㊣???
}NET_DVR_DEVICESTATECFG, *LPNET_DVR_DEVICESTATECFG;

typedef struct tagNET_DVR_POSTEPOLICECFG
{
	DWORD dwSize;
	DWORD dwDistance;//?????角??,????cm??????﹞??∫[0,20000]
	DWORD dwLightChan[MAX_SIGNALLIGHT_NUM];    //???????“????
	BYTE  byCapSpeed;//㊣那????????????km/h??????﹞??∫[0,255]
	BYTE  bySpeedLimit;//????????????km/h??????﹞??∫[0,255]
	BYTE  byTrafficDirection;//???‾﹞??辰??0-?????辰?‾??1-???‾?辰????2-?????辰㊣㊣??3-??㊣㊣?辰??
	BYTE  byRes1; //㊣???
	WORD  wLoopPreDist;        /*??﹞??????角?? ????????﹞??℅*/
	WORD  wTrigDelay;             /*??﹞??????㊣?㊣?? ????????????*/
	BYTE  byRes[124];//㊣???℅???
}NET_DVR_POSTEPOLICECFG, *LPNET_DVR_POSTEPOLICECFG;


//???????足???足??
typedef struct  tagNET_DVR_SIGNALLAMP_DETCFG
{
	DWORD   dwSize;        //?芍???∟??
						   //?????㊣????,yyyymmddhhmmssxxx,e.g.20090810235959999  ℅??車????????????
	BYTE    byAbsTime[32];
	NET_DVR_IPADDR    struAlarmCamIP;//㊣“???????迆IP
	DWORD   dwPic1Len;     //?足??????1?∟??
	DWORD   dwPic2Len;     //?足??????2?∟??
	char    *pPic1Buffer;    //????????  ??????????????
	char    *pPic2Buffer;    //????????  ??????????℅???????
	BYTE    byRes[128];
}NET_DVR_SIGNALLAMP_DETCFG, *LPNET_DVR_SIGNALLAMP_DETCFG;

typedef struct tagNET_DVR_EXDEVDET_COND
{
	DWORD         dwSize; // ?芍?????車??
	DWORD         dwChannel;                //?“????    
	BYTE          byExternalDevType;// 0-???∫???“㊣?????1-??????,2-??????
	BYTE          byRes[63];             // ㊣???℅???
}NET_DVR_EXDEVDET_COND, *LPNET_DVR_EXDEVDET_COND;

typedef struct tagNET_DVR_EXDEVDET_CFG
{
	DWORD         dwSize; // ?芍?????車??
	BYTE          byExternalDevStatus;// 0-????1-?足??
	BYTE          byRes[63];// ㊣???℅???
} NET_DVR_EXDEVDET_CFG, *LPNET_DVR_EXDEVDET_CFG;

/***************************** end *********************************************/

#define IPC_PROTOCOL_NUM      50   //ipc ???谷℅??車????

//???谷?角??
typedef struct tagNET_DVR_PROTO_TYPE
{
	DWORD dwType;               /*ipc???谷??*/
	BYTE  byDescribe[DESC_LEN]; /*???谷?豕??℅???*/
}NET_DVR_PROTO_TYPE, *LPNET_DVR_PROTO_TYPE;

//???谷??㊣赤
typedef struct tagNET_DVR_IPC_PROTO_LIST
{
	DWORD   dwSize;
	DWORD   dwProtoNum;           /*???∫??ipc???谷????*/
	NET_DVR_PROTO_TYPE struProto[IPC_PROTOCOL_NUM];   /*???∫??ipc???谷*/
	BYTE    byRes[8];
}NET_DVR_IPC_PROTO_LIST, *LPNET_DVR_IPC_PROTO_LIST;

//???谷??㊣赤V41
typedef struct tagNET_DVR_IPC_PROTO_LIST_V41
{
	DWORD   dwSize;
	DWORD   dwProtoNum;  //???∫??ipc???谷????
	BYTE    *pBuffer;    //???谷??㊣赤??????, dwProtoNum ??NET_DVR_PROTO_TYPE?芍??  
	DWORD   dwBufferLen; //???????∟??
	BYTE    byRes[32];
}NET_DVR_IPC_PROTO_LIST_V41, *LPNET_DVR_IPC_PROTO_LIST_V41;

typedef struct tagNET_DVR_PTZPOS_INFO
{
	DWORD    dwPanPos;    // P?????“??????????
	DWORD    dwTiltPos;    // T?????“???㊣??????
	DWORD    dwZoomPos;  // Z?????“㊣?㊣???????
}NET_DVR_PTZPOS_INFO, *LPNET_DVR_PTZPOS_INFO;

//???????‾??㊣??芍???芍????
typedef struct tagNET_VCA_HUMAN_FEATURE
{
	BYTE byAgeGroup;    //?那????,???? HUMAN_AGE_GROUP_ENUM
	BYTE bySex;         //??㊣?, 0-㊣赤???∼?????㊣?“??﹞“???∫????,1 “C ?? , 2 “C ??, 0xff-??﹞“?∫??????????????㊣?????
	BYTE byEyeGlass;    //??﹞??‾???? 0-㊣赤???∼?????㊣?“??﹞“???∫????,1 “C ???‾, 2 “C ?‾,0xff-??﹞“?∫??????????????㊣?????
						//℅????????????那????????﹞???????byAge??15,byAgeDeviation??1,㊣赤?????????????????那??????14-16????
	BYTE byAge;//?那?? 0-㊣赤???∼?????㊣?“??﹞“???∫????,0xff-??﹞“?∫??????????????㊣?????
	BYTE byAgeDeviation;//?那???車????
	BYTE byEthnic;   //℅????∟??,??????﹞?
	BYTE byMask;       //??﹞??‾???? 0-㊣赤???∼?????㊣?“??﹞“???∫????,1 “C ???‾, 2 “C?‾???“????, 3 “C?‾????,0xff-??﹞“?∫??????????????㊣?????
	BYTE bySmile;      //??﹞????? 0-㊣赤???∼?????㊣?“??﹞“???∫????,1 “C ??????, 2 “C ????, 0xff-??﹞“?∫??????????????㊣?????
	BYTE byFaceExpression;    /* ㊣赤?谷,????FACE_EXPRESSION_GROUP_ENUM*/
	BYTE byBeard; // ?迆℅?, 0-???∫????1-?????迆℅???2-???迆℅???0xff-unknow㊣赤??????,??﹞“?∫?????足??
	BYTE byRace; // ????, 0-???∫????1-????????2-??????3-∼℅??,0xff-unknow㊣赤??????,??﹞“?∫?????足??
	BYTE byHat; // ?㊣℅?, 0-???∫??,1-???‾?㊣℅?,2-?‾?㊣℅?,0xff-unknow㊣赤??????,??﹞“?∫?????足??
	BYTE byRes[4];    //㊣???
}NET_VCA_HUMAN_FEATURE, *LPNET_VCA_HUMAN_FEATURE;

//????????????
typedef struct tagNET_DVR_OBJECT_FEATURE
{
	BYTE  byColorRatel;            //????????????????????㊣?????
	BYTE  byRed;                        // RGB??????﹞????????足??
	BYTE  byGreen;                    // RGB??????﹞???????????
	BYTE  byBlue;                   // RGB??????﹞???????????
	BYTE  byRes[32];
}NET_DVR_OBJECT_FEATURE, *LPNET_DVR_OBJECT_FEATURE;

//℅谷?????‾????
typedef union tagNET_DVR_ADVANCE_COND_UNION
{
	BYTE                  byLen[36];  //???????∟??
	NET_VCA_HUMAN_FEATURE      struHumanFeature; //????????
	NET_DVR_OBJECT_FEATURE     struObjectFeature; //????????
}NET_DVR_ADVANCE_COND_UNION, *LPNET_DVR_ADVANCE_COND_UNION;


#define MAX_ALERTLINE_NUM    8 //℅??車??????????    


typedef struct tagNET_DVR_TRAVERSE_PLANE_SEARCHCOND
{
	NET_VCA_TRAVERSE_PLANE struVcaTraversePlane[MAX_ALERTLINE_NUM/*8*/];  //??????????????
	DWORD dwPreTime;   /*????㊣“???芍?∼?㊣?? ????:??*/
	DWORD dwDelayTime; /*????㊣“???????㊣?? ????:??*/
	NET_DVR_PTZPOS_INFO struPTZPosInfo;  //PTZ℅?㊣那????
	BYTE  byAdvanceType;   //℅谷??﹞?????0-??????℅谷????1-??????????℅谷????2-????????????㊣?℅谷??
	BYTE  byRes1[3];  //㊣???
	NET_DVR_ADVANCE_COND_UNION uAdvanceCond;  //℅谷??????
	BYTE  byRes[5604]; //㊣???
}NET_DVR_TRAVERSE_PLANE_SEARCHCOND, *LPNET_DVR_TRAVERSE_PLANE_SEARCHCOND; //?????足???谷??????

#define MAX_INTRUSIONREGION_NUM    8 //℅??車???辰????
typedef struct tagNET_DVR_INTRUSION_SEARCHCOND
{
	NET_VCA_INTRUSION struVcaIntrusion[MAX_INTRUSIONREGION_NUM/*8*/]; //???????辰
	DWORD dwPreTime;   /*????㊣“???芍?∼?㊣?? ????:??*/
	DWORD dwDelayTime; /*????㊣“???????㊣?? ????:??*/
	NET_DVR_PTZPOS_INFO struPTZPosInfo;  //PTZ℅?㊣那????
	BYTE  byAdvanceType;//℅谷??﹞?????0-??????℅谷????1-??????????℅谷????2-????????????㊣?℅谷??
	BYTE  byRes1[3];  //㊣???
	NET_DVR_ADVANCE_COND_UNION uAdvanceCond;  //℅谷??????
	BYTE byRes[5348]; //㊣???
} NET_DVR_INTRUSION_SEARCHCOND, *LPNET_DVR_INTRUSION_SEARCHCOND; //???辰????


typedef struct tagNET_DVR_FACEDETECTION_SEARCHCOND
{
	NET_VCA_POLYGON  struFacePolygon; //??㊣????辰
	DWORD           dwPreTime;   /*?????????芍?∼?㊣?? ????:??*/
	DWORD           dwDelayTime; /*?????????????㊣?? ????:??*/
	BYTE byRes[5972]; //㊣???
}NET_DVR_FACEDETECTION_SEARCHCOND, *LPNET_DVR_FACEDETECTION_SEARCHCOND; //?????足??


typedef union tagNET_DVR_AREA_SMARTSEARCH_COND_UNION
{
	BYTE    byLen[6144];  //?芍?????∟??
	BYTE    byMotionScope[64][96]; //?足?????辰 0-96??㊣赤??64????????96*64?????那?谷??1-???????足?????辰??0-﹞??????足?????辰 
	NET_DVR_TRAVERSE_PLANE_SEARCHCOND struTraversPlaneCond; //?????足??
	NET_DVR_INTRUSION_SEARCHCOND struIntrusionCond; //???辰????
	NET_DVR_FACEDETECTION_SEARCHCOND struFaceSnapCond; //?????足??????
}NET_DVR_AREA_SMARTSEARCH_COND_UNION,
*LPNET_DVR_AREA_SMARTSEARCH_COND_UNION;


//???????‾????
typedef struct tagNET_DVR_SMART_SEARCH_PARAM
{
	BYTE      byChan;                    //?“????
	BYTE      bySearchCondType; //?????谷????????NET_DVR_AREA_SMARTSEARCH_COND_UNION???‾??     
								/*0-?????足?????辰 ??1-?????足???? 2-???辰????, 3-?????足?? */
	WORD      wChan;                //?“?????? ??℅???????byChan??????????????℅????車byChan????????????
	NET_DVR_TIME struStartTime;        //???????????㊣??
	NET_DVR_TIME struEndTime;        //???????????㊣??
	NET_DVR_AREA_SMARTSEARCH_COND_UNION uSmartSearchCond;  //?????谷??????
	BYTE  bySensitivity;               //?????足?????‾?谷????,1    >80%  2 40%~80%  3 1%~40%    
	BYTE byRes2[11];
}NET_DVR_SMART_SEARCH_PARAM, *LPNET_DVR_SMART_SEARCH_PARAM;

typedef struct tagNET_DVR_SMART_SEARCH_PARAM_V40
{
	DWORD                   dwSize;                 //?芍?????車??
	NET_DVR_STREAM_INFO   struIDInfo;           //?“??????
	BYTE                   bySearchCondType;     //?????谷?????????‾?? 0-?足?????辰, 1-?????足??, 2-???辰????,3-?????足??, 4-?????足??
	BYTE                  bySensitivity; //?足?????辰????﹞????谷????,1-100
	BYTE                  byRes1[2];
	NET_DVR_TIME_EX       struStartTime;
	NET_DVR_TIME_EX       struEndTime;
	NET_DVR_AREA_SMARTSEARCH_COND_UNION uSmartSearchCond;  //?????谷??????
	BYTE   	           byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char        cStartTimeDifferenceH;   //?????㊣????UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣????byISO8601??1?㊣???∫
	char        cStartTimeDifferenceM;   //?????㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣????byISO8601??1?㊣???∫
	char        cStopTimeDifferenceH;    //?芍???㊣????UTC???㊣???“???㊣????-12 ... +14??????㊣赤?????㊣????byISO8601??1?㊣???∫
	char        cStopTimeDifferenceM;    //?芍???㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣????byISO8601??1?㊣???∫
	BYTE               byRes2[251];
}NET_DVR_SMART_SEARCH_PARAM_V40, *LPNET_DVR_SMART_SEARCH_PARAM_V40;



typedef struct tagNET_DVR_SMART_SEARCH_RET
{
	NET_DVR_TIME struStartTime;    //?????足??㊣“?????????㊣??
	NET_DVR_TIME struEndTime;   //???????????㊣??
	BYTE   	     byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char  cStartTimeDifferenceH;   //?????㊣????UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣??
	char  cStartTimeDifferenceM;   //?????㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	char  cStopTimeDifferenceH;    //?芍???㊣????UTC???㊣???“???㊣????-12 ... +14??????㊣赤?????㊣??
	char  cStopTimeDifferenceM;    //?芍???㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	BYTE         byRes[59];
}NET_DVR_SMART_SEARCH_RET, *LPNET_DVR_SMART_SEARCH_RET;

// IPSAN ?????????谷??
typedef struct tagNET_DVR_IPSAN_SERACH_PARAM
{
	NET_DVR_IPADDR  struIP;     // IPSAN IP???﹞
	WORD            wPort;      // IPSAN  ????
	BYTE            byRes[10];  // ㊣???℅???
}NET_DVR_IPSAN_SERACH_PARAM, *LPNET_DVR_IPSAN_SERACH_PARAM;

typedef struct tagNET_DVR_IPSAN_SERACH_RET
{
	BYTE byDirectory[128];  // ﹞?????????????
	BYTE byRes[20];
}NET_DVR_IPSAN_SERACH_RET, *LPNET_DVR_IPSAN_SERACH_RET;

//DVR?豕㊣?????
typedef struct
{
	DWORD dwSize;
	BYTE sDVRName[NAME_LEN];     //DVR????
	DWORD dwDVRID;                //DVR ID,?????????‾ //V1.4(0-99), V1.5(0-255)
	DWORD dwRecycleRecord;        //??﹞????﹞????,0:????; 1:??
								  //?????????邦??
	BYTE sSerialNumber[SERIALNO_LEN];  //?辰????
	DWORD dwSoftwareVersion;            //?赤??∼?㊣???,??16?????‾∼?㊣?,??16??????∼?㊣?
	DWORD dwSoftwareBuildDate;            //?赤???迆??????,0xYYYYMMDD
	DWORD dwDSPSoftwareVersion;            //DSP?赤??∼?㊣?,??16?????‾∼?㊣?,??16??????∼?㊣?
	DWORD dwDSPSoftwareBuildDate;        // DSP?赤???迆??????,0xYYYYMMDD
	DWORD dwPanelVersion;                // ?∼??∼?∼?㊣?,??16?????‾∼?㊣?,??16??????∼?㊣?
	DWORD dwHardwareVersion;    // ????∼?㊣?,??16?????‾∼?㊣?,??16??????∼?㊣?
	BYTE byAlarmInPortNum;        //DVR㊣“??????????
	BYTE byAlarmOutPortNum;        //DVR㊣“??????????
	BYTE byRS232Num;            //DVR 232????????
	BYTE byRS485Num;            //DVR 485???????? 
	BYTE byNetworkPortNum;        //??????????
	BYTE byDiskCtrlNum;            //DVR ?????????‾????
	BYTE byDiskNum;                //DVR ????????
	BYTE byDVRType;                //DVR?角??, 1:DVR 2:ATM DVR 3:DVS ......
	BYTE byChanNum;                //DVR ?“??????
	BYTE byStartChan;            //?????“????,????DVS-1,DVR - 1
	BYTE byDecordChans;            //DVR ?????﹞??
	BYTE byVGANum;                //VGA???????? 
	BYTE byUSBNum;                //USB????????
	BYTE byAuxoutNum;            //?“????????
	BYTE byAudioNum;            //????????????
	BYTE byIPChanNum;            //℅??車??℅??“???? ??8??????8????byHighIPChanNum 
	BYTE byZeroChanNum;            //???“??㊣角??????
	BYTE bySupport;        //???????????芍????0㊣赤?????∫????1㊣赤???∫????
						   //bySupport & 0x1, ㊣赤????﹞??∫?????????‾
						   //bySupport & 0x2, ㊣赤????﹞??∫??㊣?﹞?
						   //bySupport & 0x4, ㊣赤????﹞??∫??????????????????
						   //bySupport & 0x8, ㊣赤????﹞??∫???角???“
						   //bySupport & 0x10, ㊣赤???∫??????SADP
						   //bySupport & 0x20, ㊣赤???∫??Raid?“????
						   //bySupport & 0x40, ㊣赤???∫??IPSAN???‾
						   //bySupport & 0x80, ㊣赤???∫??rtp over rtsp
	BYTE byEsataUseage;        //Esata????????????0-????㊣?﹞???1-????????
	BYTE byIPCPlug;            //0-??㊣???????????1-?辰??????????
	BYTE byStorageMode;        //0-??℅谷????,1-????????, 2?谷??????, 3-℅???
	BYTE bySupport1;        //???????????芍????0㊣赤?????∫????1㊣赤???∫??
							//bySupport1 & 0x1, ㊣赤????﹞??∫??snmp v30
							//bySupport1 & 0x2, ?∫????﹞???﹞???????
							//bySupport1 & 0x4, ??﹞??∫????﹞???????    
							//bySupport1 & 0x8, ?????豕㊣???﹞??∫????﹞??㊣????????
							//bySupport1 & 0x10, ㊣赤????﹞??∫???角???????“????33????
							//bySupport1 & 0x20, ㊣赤????﹞??∫??rtsp over http    
	WORD wDevType;//?豕㊣?????
	BYTE  byDevTypeName[DEV_TYPE_NAME_LEN];//?豕㊣????????? 
	BYTE bySupport2; //?????????????????芍????0㊣赤?????∫????1㊣赤???∫??
					 //bySupport2 & 0x1, ㊣赤????﹞??∫????????OSD℅?﹞?????(??????℅????迆??????﹞?)
	BYTE byAnalogAlarmInPortNum; //????㊣“??????????
	BYTE byStartAlarmInNo;    //????㊣“????????????
	BYTE byStartAlarmOutNo;  //????㊣“????????????
	BYTE  byStartIPAlarmInNo;  //IP㊣“????????????
	BYTE  byStartIPAlarmOutNo; //IP㊣“????????????
	BYTE byHighIPChanNum;      //??℅??“??????????8?? 
	BYTE byEnableRemotePowerOn;//??﹞????????豕㊣???????℅????????????迆??????0-????????1-????
	WORD wDevClass; //?豕㊣??車?角㊣????????????迆?﹞????0 ㊣?????1-50 DVR??51-100 DVS??101-150 NVR??151-200 IPC??65534 ??????????﹞??角﹞?﹞“?????豕㊣??角???????辰???????角????.docx?﹞
	BYTE byRes2[6];    //㊣???
}NET_DVR_DEVICECFG_V40, *LPNET_DVR_DEVICECFG_V40;

typedef struct
{
	DWORD dwSize;
	BYTE sDVRName[NET_DEV_NAME_LEN];     //DVR????
	DWORD dwDVRID;                //DVR ID,?????????‾ //V1.4(0-99), V1.5(0-255)
	DWORD dwRecycleRecord;        //??﹞????﹞????,0:????; 1:??
								  //?????????邦??
	BYTE sSerialNumber[SERIALNO_LEN];  //?辰????
	DWORD dwSoftwareVersion;            //?赤??∼?㊣???,??16?????‾∼?㊣?,??16??????∼?㊣?
	DWORD dwSoftwareBuildDate;            //?赤???迆??????,0xYYYYMMDD
	DWORD dwDSPSoftwareVersion;            //DSP?赤??∼?㊣?,??16?????‾∼?㊣?,??16??????∼?㊣?
	DWORD dwDSPSoftwareBuildDate;        // DSP?赤???迆??????,0xYYYYMMDD
	DWORD dwPanelVersion;                // ?∼??∼?∼?㊣?,??16?????‾∼?㊣?,??16??????∼?㊣?
	DWORD dwHardwareVersion;    // ????∼?㊣?,??16?????‾∼?㊣?,??16??????∼?㊣?
	BYTE byAlarmInPortNum;        //DVR㊣“??????????
	BYTE byAlarmOutPortNum;        //DVR㊣“??????????
	BYTE byRS232Num;            //DVR 232????????
	BYTE byRS485Num;            //DVR 485???????? --
	BYTE byNetworkPortNum;        //??????????
	BYTE byDiskCtrlNum;            //DVR ?????????‾????
	BYTE byDiskNum;                //DVR ????????
	BYTE byDVRType;                //DVR?角??, 1:DVR 2:ATM DVR 3:DVS ......--
	BYTE byChanNum;                //DVR ?“??????
	BYTE byStartChan;            //?????“????,????DVS-1,DVR - 1
	BYTE byDecordChans;            //DVR ?????﹞??
	BYTE byVGANum;                //VGA???????? --
	BYTE byUSBNum;                //USB????????
	BYTE byAuxoutNum;            //?“????????
	BYTE byAudioNum;            //????????????
	BYTE byIPChanNum;            //℅??車??℅??“????  --
	BYTE byZeroChanNum;        //???“??㊣角??????
	BYTE bySupport;        //???????????芍????0㊣赤?????∫????1㊣赤???∫????
						   //bySupport & 0x1, ㊣赤????﹞??∫?????????‾
						   //bySupport & 0x2, ㊣赤????﹞??∫??㊣?﹞?
						   //bySupport & 0x4, ㊣赤????﹞??∫??????????????????
						   //bySupport & 0x8, ㊣赤????﹞??∫???角???“
						   //bySupport & 0x10, ㊣赤???∫??????SADP
						   //bySupport & 0x20, ㊣赤???∫??Raid?“????
						   //bySupport & 0x40, ㊣赤???∫??IPSAN???‾
						   //bySupport & 0x80, ㊣赤???∫??rtp over rtsp
	BYTE byEsataUseage;        //Esata????????????0-????㊣?﹞???1-????????
	BYTE byIPCPlug;            //0-??㊣???????????1-?辰??????????
	BYTE byStorageMode;        //0-??℅谷????,1-????????,2?谷??????
	BYTE bySupport1;                //???????????芍????0㊣赤?????∫????1㊣赤???∫??
									//bySupport1 & 0x1, ㊣赤????﹞??∫??snmp v30
									//bySupport1 & 0x2, ?∫????﹞???﹞???????
									//bySupport1 & 0x4, ??﹞??∫????﹞???????    
									//bySupport1 & 0x8, ?????豕㊣???﹞??∫????﹞??㊣????????
									//bySupport1 & 0x10, ㊣赤????﹞??∫???角???????“????33????
									//bySupport1 & 0x20, ㊣赤????﹞??∫??rtsp over http    
	WORD wDevType;//?豕㊣?????????
	BYTE  byDevTypeName[NET_DEV_TYPE_NAME_LEN];//?豕㊣?????????
	BYTE bySupport2; //?????????????????芍????0㊣赤?????∫????1㊣赤???∫??
					 //bySupport2 & 0x1, ㊣赤????﹞??∫????????OSD℅?﹞?????(??????℅????迆??????﹞?)
	BYTE  byAnalogAlarmInPortNum; //????㊣“??????????
	BYTE  byStartAlarmInNo;    //????㊣“????????????
	BYTE  byStartAlarmOutNo;  //????㊣“????????????
	BYTE  byStartIPAlarmInNo;  //IP㊣“????????????
	BYTE  byStartIPAlarmOutNo; //IP㊣“????????????
	BYTE  byHighIPChanNum;     //??℅??“??????????8?? 
	BYTE  byEnableRemotePowerOn;//??﹞????????豕㊣???????℅????????????迆??????0-????????1-????
	BYTE  byRes[256];            //㊣???
}NET_DVR_DEVICECFG_V50, *LPNET_DVR_DEVICECFG_V50;
#define MAX_ZEROCHAN_NUM    16
//???“??????????????
typedef struct tagNET_DVR_ZEROCHANCFG
{
	DWORD dwSize;            //?芍???∟??
	BYTE  byEnable;            //0-???????“??㊣角????1-㊣赤?????????“??㊣角??
	BYTE  byRes1[3];            //㊣???
	DWORD dwVideoBitrate;     //???????? 0-㊣??? 1-16K(㊣???) 2-32K 3-48k 4-64K 5-80K 6-96K 7-128K 8-160k 9-192K 10-224K 11-256K 12-320K
							  // 13-384K 14-448K 15-512K 16-640K 17-768K 18-896K 19-1024K 20-1280K 21-1536K 22-1792K 23-2048K
							  //℅?????(31??)????1㊣赤????℅??“?????‾, 0-30??㊣赤?????‾??(MIN-32K MAX-8192K)??
	DWORD dwVideoFrameRate;    //???? 0-????; 1-1/16; 2-1/8; 3-1/4; 4-1/2; 5-1; 6-2; 7-4; 8-6; 9-8; 10-10; 11-12; 12-16; 13-20, //V2.0????14-15, 15-18, 16-22;
	BYTE  byRes2[32];        //㊣???
}NET_DVR_ZEROCHANCFG, *LPNET_DVR_ZEROCHANCFG;

//???“????﹞?????
typedef struct tagNET_DVR_ZERO_ZOOMCFG
{
	DWORD dwSize;                //?芍???∟??
	NET_VCA_POINT  struPoint;    //????????℅?㊣那??
	BYTE byState;                //??????℅?????0-??????1-﹞??車  
	BYTE byPreviewNumber;       //?∟??????,0-1????,1-4????,2-9????,3-16???? ??????????
	BYTE byPreviewSeq[MAX_WINDOW_V30];//?????“?????? ??????????
	BYTE byRes[30];                //㊣??? 
}NET_DVR_ZERO_ZOOMCFG, *LPNET_DVR_ZERO_ZOOMCFG;

#define DESC_LEN_64 64
typedef struct tagNET_DVR_SNMPCFG
{
	DWORD   dwSize;            //?芍???∟??
	BYTE    byEnable;            //0-????SNMP??1-㊣赤??????SNMP
	BYTE    byRes1[3];            //㊣???
	WORD    wVersion;        //snmp ∼?㊣?  v1 = 1, v2 =2, v3 =3???豕㊣????∼???∫?? v3
	WORD    wServerPort; //snmp?????????????????? 161
	BYTE    byReadCommunity[NAME_LEN]; //??????????℅??角31,????"public"
	BYTE    byWriteCommunity[NAME_LEN];//????????,℅??角31 ℅???,???? "private"
	BYTE     byTrapHostIP[DESC_LEN_64];    //℅????‾?迆ip???﹞?豕?????∫??IPV4 IPV6???辰???豕??    
	WORD    wTrapHostPort;   // trap?‾?迆????
	BYTE    byTrapName[NAME_LEN];
	BYTE    byRes2[70];    //㊣???
}NET_DVR_SNMPCFG, *LPNET_DVR_SNMPCFG;

typedef struct tagNET_DVR_SNMPv3_USER
{
	BYTE    byUserName[NAME_LEN];            // ???∫??                
	BYTE    bySecLevel;                        // ∼?????㊣? 0-㊣??? 1-?????谷 2-?????“???谷 3-???“???谷
	BYTE    byAuthtype;                        // ???∟?角?? 0-MD5???∟ 1-SHA???∟ 2: none
	BYTE    byPrivtype;                        // 0: DES; 1: AES; 2: none;
	BYTE    byRes[5];
	BYTE    byAuthpass[PASSWD_LEN];            // ???∟????
	BYTE    byPrivpass[PASSWD_LEN];            // ????????
}NET_DVR_SNMPv3_USER, *LPNET_DVR_SNMPv3_USER;

// snmpv30
typedef struct tagNET_DVR_SNMPCFG_V30
{
	DWORD                dwSize;            //?芍???∟??
	BYTE                byEnableV1;        //0-????SNMP V1??1-㊣赤??????SNMP V1
	BYTE                byEnableV2;        //0-????SNMP V2??1-㊣赤??????SNMP V2
	BYTE                byEnableV3;        //0-????SNMP V3??1-㊣赤??????SNMP V3
	BYTE                byRes1[3];
	WORD                wServerPort;                    //snmp?????????????????? 161
	BYTE                byReadCommunity[NAME_LEN];        //??????????℅??角31,????"public"
	BYTE                byWriteCommunity[NAME_LEN];        //????????,℅??角31 ℅???,???? "private"
	BYTE                 byTrapHostIP[DESC_LEN_64];        //℅????‾?迆ip???﹞?豕?????∫??IPV4 IPV6???辰???豕??    
	WORD                wTrapHostPort;                    // trap?‾?迆????
	BYTE                byRes2[2];
	NET_DVR_SNMPv3_USER    struRWUser;    // ???????∫
	NET_DVR_SNMPv3_USER    struROUser;    // ???????∫
	BYTE                byTrapName[NAME_LEN];
}NET_DVR_SNMPCFG_V30, *LPNET_DVR_SNMPCFG_V30;

#define  PROCESSING          0     //???????赤
#define  PROCESS_SUCCESS     100   //?????那??
#define  PROCESS_EXCEPTION   400   //?????足??
#define  PROCESS_FAILED      500   //?????∫∼?
#define  PROCESS_QUICK_SETUP_PD_COUNT 501 //???邦????????3?谷????

#define  SOFTWARE_VERSION_LEN 48
#define  NET_SDK_DEVICE_MODEL_LEN 24 //?豕㊣??????∟??
typedef struct tagNET_DVR_SADPINFO
{
	NET_DVR_IPADDR  struIP;     // ?豕㊣?IP???﹞
	WORD            wPort;      // ?豕㊣???????
	WORD            wFactoryType;   // ?豕㊣??∫???角??
	char            chSoftwareVersion[SOFTWARE_VERSION_LEN];
	char            chSerialNo[16]; // ?辰????
	WORD            wEncCnt;       // ㊣角???“??????
	BYTE            byMACAddr[MACADDR_LEN];        // MAC ???﹞
	NET_DVR_IPADDR  struSubDVRIPMask;   // DVR IP???﹞????
	NET_DVR_IPADDR  struGatewayIpAddr;  // ????
	NET_DVR_IPADDR    struDnsServer1IpAddr;            /* ?辰??﹞????‾1??IP???﹞ */
	NET_DVR_IPADDR    struDnsServer2IpAddr;            /* ?辰??﹞????‾2??IP???﹞ */
	BYTE            byDns;
	BYTE            byDhcp;
	BYTE            szGB28181DevID[DEV_ID_LEN];  //GB28181???谷?????㊣???豕㊣?ID??????IPC??GB28181???谷????
	BYTE            byActivated;//0-???∫??1-???∟????2-???∟??
	BYTE            byDeviceModel[NET_SDK_DEVICE_MODEL_LEN/*24*/];//?豕㊣?????
	BYTE            byRes[101];     // ㊣???℅???
}NET_DVR_SADPINFO, *LPNET_DVR_SADPINFO;

#define  MAX_SADP_NUM   256   // ???‾???豕㊣?℅??車????
typedef struct tagNET_DVR_SADPINFO_LIST
{
	DWORD            dwSize;   //  ?芍???車??
	WORD             wSadpNum;   // ???‾???豕㊣?????
	BYTE             byRes[6];   // ㊣???℅???
	NET_DVR_SADPINFO struSadpInfo[MAX_SADP_NUM]; // ???‾
}NET_DVR_SADPINFO_LIST, *LPNET_DVR_SADPINFO_LIST;

typedef struct tagNET_DVR_SADP_VERIFY
{
	char chPassword[PASSWD_LEN];
	NET_DVR_IPADDR struOldIP;
	WORD        wOldPort;
	BYTE        byRes[62];
}NET_DVR_SADP_VERIFY, *LPNET_DVR_SADP_VERIFY;

/*******************************㊣?﹞????? begin********************************/
//????㊣?﹞??豕㊣??????????“??
#define DESC_LEN_32          32   //?豕??℅??∟??
#define MAX_NODE_NUM         256  //????????

typedef struct tagNET_DVR_DESC_NODE
{
	int   iValue;
	BYTE  byDescribe[DESC_LEN_32]; //?豕??℅??? 
	DWORD dwFreeSpace;           //??????????㊣赤℅“??,??????M
	BYTE  byRes[12];              //㊣???  
}NET_DVR_DESC_NODE, *LPNET_DVR_DESC_NODE;

typedef struct tagNET_DVR_DISKABILITY_LIST
{
	DWORD     dwSize;            //?芍???∟??
	DWORD     dwNodeNum;         //?????芍??????
	NET_DVR_DESC_NODE  struDescNode[MAX_NODE_NUM];  //?豕??????  
}NET_DVR_DISKABILITY_LIST, *LPNET_DVR_DISKABILITY_LIST;

//㊣?﹞???????㊣赤
#define BACKUP_SUCCESS                100  //㊣?﹞??那??
#define BACKUP_CHANGE_DEVICE          101  //㊣?﹞??豕㊣????迆???邦???豕㊣?????㊣?﹞?

#define BACKUP_SEARCH_DEVICE          300  //???????‾㊣?﹞??豕㊣?
#define BACKUP_SEARCH_FILE            301  //???????‾????????
#define BACKUP_SEARCH_LOG_FILE        302  //???????‾????????
#define BACKUP_CHANGE_DISK            303  //?????邦??????

#define BACKUP_EXCEPTION              400  //㊣?﹞??足??
#define BACKUP_FAIL                      500  //㊣?﹞??∫∼?

#define BACKUP_TIME_SEG_NO_FILE       501  //?㊣????????????????
#define BACKUP_NO_RESOURCE            502  //?那??????℅???
#define BACKUP_DEVICE_LOW_SPACE       503  //㊣?﹞??豕㊣???????℅?
#define BACKUP_DISK_FINALIZED         504  //????????﹞???
#define BACKUP_DISK_EXCEPTION         505  //?????????足??
#define BACKUP_DEVICE_NOT_EXIST       506  //㊣?﹞??豕㊣???????
#define BACKUP_OTHER_BACKUP_WORK      507  //??????㊣?﹞???℅‾??????
#define BACKUP_USER_NO_RIGHT          508  //???∫??????℅‾?“??
#define BACKUP_OPERATE_FAIL           509  //??℅‾?∫∼?
#define BACKUP_NO_LOG_FILE            510  //????????????

//㊣?﹞??????????“??
typedef struct tagNET_DVR_BACKUP_NAME_PARAM
{
	DWORD dwFileNum;   //????????
	NET_DVR_FINDDATA_V30 struFileList[MAX_RECORD_FILE_NUM]; //??????㊣赤
	BYTE byDiskDes[DESC_LEN_32];   //㊣?﹞??????豕??
	BYTE byWithPlayer;      //??﹞?㊣?﹞???﹞??‾
	BYTE byContinue;    /*??﹞?????㊣?﹞? 0?????? 1????*/
	BYTE byRes[34];         //㊣???
}NET_DVR_BACKUP_NAME_PARAM, *LPNET_DVR_BACKUP_NAME_PARAM;

typedef struct tagNET_DVR_BACKUP_TIME_PARAM
{
	LONG            lChannel;        //∼??㊣??㊣?﹞????“??
	NET_DVR_TIME    struStartTime;   //㊣?﹞????????㊣??
	NET_DVR_TIME    struStopTime;    //㊣?﹞????????㊣??
	BYTE            byDiskDes[DESC_LEN_32];     //㊣?﹞??????豕??
	BYTE            byWithPlayer;               //??﹞?㊣?﹞???﹞??‾
	BYTE            byContinue;                 //??﹞?????㊣?﹞? 0?????? 1????
	BYTE            byDrawFrame;                 //0 ???谷??  1 ?谷??
	BYTE            byUseBackCfgParam;          //????㊣?﹞???????????????0-???∫??1-????(?????車???“???????∫)??2-??????
	DWORD           dwStreamType;                //㊣?﹞????‾?角????∼???㊣赤??
												 //&0x1-㊣赤???‾???‾ 
												 //&0x2-㊣赤??℅????‾
												 //&0x4-㊣赤?????‾??
	BYTE            byRes[28];                     // ㊣???℅??? 
}NET_DVR_BACKUP_TIME_PARAM, *LPNET_DVR_BACKUP_TIME_PARAM;
/********************************* end *******************************************/

typedef enum _COMPRESSION_ABILITY_TYPE_
{
	COMPRESSION_STREAM_ABILITY = 0, //???‾?????角??
	MAIN_RESOLUTION_ABILITY = 1,    //?‾???‾????﹞?㊣???
	SUB_RESOLUTION_ABILITY = 2,    //℅????‾????﹞?㊣???
	EVENT_RESOLUTION_ABILITY = 3,  //????????????﹞?㊣???
	FRAME_ABILITY = 4,                //????????
	BITRATE_TYPE_ABILITY = 5,        //?????角??????
	BITRATE_ABILITY = 6,            //????????
	THIRD_RESOLUTION_ABILITY = 7,   //?????‾????﹞?㊣???
	STREAM_TYPE_ABILITY = 8,        //???‾?角??
	PIC_QUALITY_ABILITY = 9,         //????????
	INTERVAL_BPFRAME_ABILITY = 10,  //BP??????
	VIDEO_ENC_ABILITY = 11,           //????㊣角??????
	AUDIO_ENC_ABILITY = 12,           //????㊣角??????
	VIDEO_ENC_COMPLEXITY_ABILITY = 13, //????㊣角????????????
	FORMAT_ABILITY = 14, //﹞?℅∼????????
}COMPRESSION_ABILITY_TYPE;

//??????㊣赤
typedef struct tagNET_DVR_ABILITY_LIST
{
	DWORD     dwAbilityType;    //?????角?? COMPRESSION_ABILITY_TYPE
	BYTE      byRes[32];        //㊣???℅???
	DWORD     dwNodeNum;        //?????芍??????
	NET_DVR_DESC_NODE  struDescNode[MAX_NODE_NUM];  //?豕??????  
}NET_DVR_ABILITY_LIST, *LPNET_DVR_ABILITY_LIST;

#define MAX_ABILITYTYPE_NUM  12   //℅??車??????
// ??????????????㊣赤
typedef struct tagNET_DVR_COMPRESSIONCFG_ABILITY
{
	DWORD     dwSize;            //?芍???∟??
	DWORD     dwAbilityNum;        //?????角??????
	NET_DVR_ABILITY_LIST struAbilityNode[MAX_ABILITYTYPE_NUM]; //?豕??????  
}NET_DVR_COMPRESSIONCFG_ABILITY, *LPNET_DVR_COMPRESSIONCFG_ABILITY;
/********************************9000RH begin****************************************/
#define SUPPORT_PD_NUM            16
#define SUPPORT_ARRAY_NUM        8
#define SUPPORT_VD_NUM            128
#define SUPPORT_PD_NUM_            16
#define SUPPORT_PD_NUM_PARTTWO    8

typedef enum tagRAID_MODE
{
	RAID0 = 1,
	RAID1,
	RAID10,
	RAID1E,
	RAID5,
	RAID6,
	RAID50,
	JBOD,
	RAID60
}RAID_MODE;

typedef enum tagHD_SUPPORT_TYPE
{
	HD_TYPE_SATA = 0x01,
	HD_TYPE_PATA = 0x02,
	HD_TYPE_SAS = 0x04,
	HD_TYPE_ATAPI = 0x08,
	HD_TYPE_TAPE = 0x10,
	HD_TYPE_SES = 0x20
}HD_SUPPORT_TYPE;

// ∼???㊣赤?? ????0㊣赤?????∫??  1㊣赤???∫??
typedef enum tagSUPPORT_RAID_TYPE
{
	RAID0_ABILITY = 0x0001,
	RAID1_ABILITY = 0x0002,
	RAID10_ABILITY = 0x0004,
	RAID1E_ABILITY = 0x0008,
	RAID5_ABILITY = 0x0010,
	RAID6_ABILITY = 0x0020,
	RAID50_ABILITY = 0x0040,
	JBOD_ABILITY = 0x0080,
	RAID60_ABILITY = 0x0100
}SUPPORT_RAID_TYPE;

// ???赤???? 
typedef struct tagNET_DVR_PHY_DISK_INFO
{
	WORD    wPhySlot;         // ???????? 
	BYTE    byType;         // ??????????0 ???“??1??????㊣???2-?車????㊣? 3-?車????
	BYTE    byStatus;       // ????℅?????  0-???? 1-???? 2-?????? 3-???????∫ 4-???? 5-?????? 6-???? 7-?足?? 8-SMART℅????足?? 9-???? 10-?????谷 0xff-??????
	BYTE    byMode[40];   // ?????角?? ℅?﹞???
	DWORD   dwHCapacity;    //  ????℅?????32?? ????kb
	DWORD   dwLCapacity;    //  ????℅?????32??
	BYTE    byArrrayName[MAX_NAMELEN];
	WORD    wArrayID;          // ?迄???車??ID
	BYTE    byArrayInformation;   // ??﹞??????車????????0 ﹞???1??
	BYTE    byRes[101];         // ㊣???℅???  
}NET_DVR_PHY_DISK_INFO, *LPNET_DVR_PHY_DISK_INFO;

typedef struct tagNET_DVR_PHY_DISK_LIST
{
	DWORD   dwSize;
	DWORD   dwCount;
	NET_DVR_PHY_DISK_INFO struPhyDiskInfo[SUPPORT_PD_NUM];
}NET_DVR_PHY_DISK_LIST, *LPNET_DVR_PHY_DISK_LIST;

typedef enum tagBGA_TYPE
{
	BGA_REBUILD = 0x01,            // ???“
	BGA_CONSISTENCY_FIX = 0x02,    // ???????足?谷??????
	BGA_CONSISTENCY_CHECK = 0x04,  // ???????足?谷
	BGA_INIT_QUICK = 0x08,         // ??????(?足)
	BGA_INIT_BACK = 0x10,          // ??????(?那??)
	BGA_MIGRATION = 0x20,       // ?“??
	BGA_INIT_FORE = 0x40,           // ??????
	BGA_COPYBACK = 0x80             // ???“
}BGA_TYPE;

typedef enum tagBGA_STATE
{
	BGA_STATE_NONE = 0,     //  ???車?“????
	BGA_STATE_RUNNING,       //  ?車?“????????????
	BGA_STATE_ABORTED,       //  ?車?“????????
	BGA_STATE_PAUSED         //  ?車?“????????     
}BGA_STATE;
typedef struct tagNET_DVR_BGA_INFO
{
	BYTE    byBga;  // ?車?“?????∼?角?? 
	BYTE    byBgaState;           /*????﹞?????--?車?“????℅???*/
	WORD    wBgaPercentage;     /*????﹞?????--?車?“????????∼?﹞?㊣?*/
	BYTE    byRes[4];  // ㊣???℅???
}NET_DVR_BGA_INFO, *LPNET_DVR_BGA_INFO;

// ?車??????
typedef struct tagNET_DVR_ARRAY_INFO
{
	WORD    wArrayID; // ?車??ID
	BYTE    byRaidMode; // raid????  ????RAID_MODE
	BYTE    byStatus;  // 0-???? 1-???????∫ 2-???? 3-???? 4-?足?? 5-?????? 6-??????  7-?????? 8-SMART℅????足?? 0xff-??????
	DWORD   dwHCapacity; // ?車????????32??
	DWORD   dwLCapacity; // ?車????????32??
	DWORD   dwHFreeSpace;   // ?車?????角??????32??
	DWORD   dwLFreeSpace;   // ?車?????角??????32??
	BYTE    byArrayName[MAX_NAMELEN]; // ?車??????
	BYTE    byPDCount;  // ???赤????????
	BYTE    bySpareCount;   // ??㊣?????
	BYTE    byRes1[2];
	WORD    wPDSlots[SUPPORT_PD_NUM];    // ???赤?????‾??
	WORD    wSparePDSlots[SUPPORT_PD_NUM];    // ??㊣??????‾??
	NET_DVR_BGA_INFO    struBgaInfo;    // ?車?“????????℅???
	WORD    wPDSlotsPartTwo[SUPPORT_PD_NUM_PARTTWO];  //???赤?????‾????????0㊣赤?????∫
	WORD    wSparePDSlotsPartTwo[SUPPORT_PD_NUM_PARTTWO];    // ??㊣??????‾????????0㊣赤?????∫
	BYTE    byRes2[48]; // ㊣???℅???
}NET_DVR_ARRAY_INFO, *LPNET_DVR_ARRAY_INFO;


typedef struct tagNET_DVR_ARRAY_LIST
{
	DWORD   dwSize;     // ?芍?????車??
	DWORD   dwCount;    // ?車??????
	NET_DVR_ARRAY_INFO struArrayInfo[SUPPORT_ARRAY_NUM];
}NET_DVR_ARRAY_LIST, *LPNET_DVR_ARRAY_LIST;

//?谷??????????
typedef struct tagNET_DVR_VD_INFO
{
	WORD    wSlot;    //?谷??????????  
	BYTE    byStatus; // ℅???0-???? 1-???? 2-?????? 3-???????∫ 4-???? 5-?????? 6-???? 7-?足?? 8-SMART℅????足?? 0xff-?????? 
	BYTE    byRaidMode; // Raid ???? ???? RAID_MODE
	WORD    wArrayID;      // ?迄???車??ID
	BYTE    byRepair;   // ??﹞??豕?????? 0 ???豕?? 1?豕??
	BYTE    byUsage;          //LUN?赤??????﹞???  0-IPSAN 1-FCSAN 2-DVR???? 3-NAS 4-?????赤
	BYTE    byArrayName[MAX_NAMELEN];
	BYTE    byName[MAX_NAMELEN];    // ?谷????????????
	DWORD   dwHCapacity;    // ?谷????????????32??
	DWORD   dwLCapacity;    // ?谷????????????32??
	DWORD   dwHFreeSpace;   // ?谷?????????角??????32??
	DWORD   dwLFreeSpace;   // ?谷?????????角??????32??
	NET_DVR_BGA_INFO    struBgaInfo;    // ?車?“????℅???
	DWORD                dwBlockSize;    //℅????????????谷?車??
	NET_DVR_IPADDR        struWarrantIP;    // ???“??DVR????IP
	char                szArrayGroup[NAME_LEN];     //???????車??????℅谷???????????????????辰?????????車??
	BYTE                byRes[20];
}NET_DVR_VD_INFO, *LPNET_DVR_VD_INFO;

typedef struct tagNET_DVR_VD_LIST
{
	DWORD   dwSize;     // ?芍?????車??
	DWORD   dwCount;    // ?谷??????????
	NET_DVR_VD_INFO struVDInfo[SUPPORT_VD_NUM];  //?谷????????℅谷
}NET_DVR_VD_LIST, *LPNET_DVR_VD_LIST;

typedef struct tagNET_DVR_ADAPTER_VERSION
{
	WORD    wMajorVersion;
	WORD    wMinorVersion;
	WORD    wRevisionNumber;
	WORD    wBuildNumber;
}NET_DVR_ADAPTER_VERSION, *LPNET_DVR_ADAPTER_VERSION;

typedef struct tagNET_DVR_VD_SLOT
{
	WORD  wVDSlot;
	BYTE  byAlloc;  // ??﹞?????﹞???
	BYTE  byRes[5];
	DWORD dwHVDSlotSize;    // ?谷???????????車????32??
	DWORD dwLVDSlotSize;    // ?谷???????????車????32??
}NET_DVR_VD_SLOT, *LPNET_DVR_VD_SLOT;

typedef struct tagNET_DVR_ARRAY_SPACE_ALLOC_INFO
{
	BYTE    byVDSlotCount;                        /*current number of slots in DG*/
	BYTE    byRes1[3];              // ㊣???℅???
	NET_DVR_VD_SLOT struVDSlots[SUPPORT_VD_NUM];
}NET_DVR_ARRAY_SPACE_ALLOC_INFO, *LPNET_DVR_ARRAY_SPACE_ALLOC_INFO;

typedef struct tagNET_DVR_RAID_ADAPTER_INFO
{
	DWORD dwSize;    // ?芍?????車??
	NET_DVR_ADAPTER_VERSION struVersion;    // ?????‾∼?㊣???
	BYTE    bySlotCount;    //?????‾??????
	BYTE    bySupportMigrate;  // ?“??(1-?∫??  0-???∫??)
	BYTE    bySupportExpand;   // ????  (1-?∫??  0-???∫??)
	BYTE    bySupportRebuild;  // ??﹞??∫?????“?車?? (1???∫?? 0-???∫??)
	WORD    wSlotSupportType; //  ∼???㊣赤?? HD_SUPPORT_TYPE
	WORD    wSupportRaidType;      // ?∫??Raid ?角?? ∼???㊣赤??  
	BYTE    byAutoRebuild;      // 0 ??℅??????“ 1℅??????“ ???豕
	BYTE    byRes[27];      // ㊣???℅???
}NET_DVR_RAID_ADAPTER_INFO, *LPNET_DVR_RAID_ADAPTER_INFO;

typedef struct tagNET_DVR_OPERATE_ARRAY_PARAM
{
	//??﹞????邦???“  ?????????邦???“???辰???“?㊣?㊣?辰?????豕??array???????????豕??????????
	// ???????????豕㊣?℅??????“
	BYTE    byRaidMode;     // ???“/?“???㊣Raid???角??
	BYTE    byPDCount;  // ???赤????????
	WORD    wArrayID;   // ?“???辰?????“?㊣?豕???????車??ID      
	WORD    wPDSlots[SUPPORT_PD_NUM];// ???赤???? 
	BYTE    byName[MAX_NAMELEN];  // array ????
	BYTE    byInitMode;              //??????﹞???
	BYTE    byRes1;
	WORD    wPDSlotsPartTwo[SUPPORT_PD_NUM_PARTTWO];       //???赤????????
	BYTE    byRes2[2];
}NET_DVR_OPERATE_ARRAY_PARAM, *LPNET_DVR_OPERATE_ARRAY_PARAM;


#define INIT_QUICK                                      0    /*?足????????*/
#define INIT_FULLFOREGROUND                             1    /*?那????????(?∼?“)*/
#define INIT_FULLBACKGROUND                             2    /*?那????????(?車?“)*/

typedef struct tagNET_DVR_OPERATE_VD_PARAM
{
	WORD    wArrayID;        // ?車??ID
	BYTE    bySlot;            // ???“?谷?????????“????
	BYTE    byInitType;     // ???“?谷???????㊣???????角?? 0 - ?足???????? 1 - ?∼?“?那???????? 2 - ?車?“?那????????
	DWORD    dwHCapacity;    // ?谷???????車????32??
	DWORD    dwLCapacity;    // ?谷???????車????32??
	BYTE    byName[MAX_NAMELEN]; // ?谷??????????
	BYTE    byRes2[16];          // ㊣???℅??? 
}NET_DVR_OPERATE_VD_PARAM, *LPNET_DVR_OPERATE_VD_PARAM;


typedef struct tagNET_DVR_SPARE_DISK_PARAM
{
	WORD    wPDSlot;        // ???赤????????
	WORD    wArrayID;       // ?迄?????車??
	BYTE    bySpareType;    // ??㊣??角?? 1-??????㊣?  2 ???“?車??  ?㊣?????“?車?????㊣?辰?豕???????迄???車????ID
	BYTE    byRes[7];       // ㊣???℅???
}NET_DVR_SPARE_DISK_PARAM, *LPNET_DVR_SPARE_DISK_PARAM;

/********************************9000RH End****************************************/


#define MATRIX_MAXDECSUBSYSTEMCHAN    4//????℅??????“????℅??????“????

//????????℅?????????????
typedef struct tagNET_DVR_DECSUBSYSTEMJIONSTATUS
{
	BYTE    byJoinStatus;//????℅?????0-??????????1-????????
	BYTE    byJoinSubSystem;//?迄????℅???????????
	BYTE    byJoinDispNum;//?迄?????????“????
	BYTE    byJoinSubWindowNum;//?迄????℅??∼????
	BYTE    byRes[4];
}NET_DVR_DECSUBSYSTEMJIONSTATUS, LPNET_DVR_DECSUBSYSTEMJIONSTATUS;

typedef struct tagNET_DVR_SINGLESUBSYSTEMJOININFO
{
	BYTE    bySubSystemType;//℅??????角????0-????1-??????℅???????2-㊣角????℅???????3-????????℅???????4-????????℅?????,5-??﹞?℅???????6-㊣“??℅?????
	BYTE    byConnectStatus;//????????????℅?????1-??????????2-????????
	BYTE    byMatrixNum;//????????℅??????“????℅??????角????3?辰4?㊣????
	BYTE    bySubSystemNum;//????℅?????????????0~79??℅??????角????3?辰4?㊣????    
	NET_DVR_DECSUBSYSTEMJIONSTATUS struDecSub[MATRIX_MAXDECSUBSYSTEMCHAN];
	BYTE    byBindStatus;//∼車?“℅?????0-????∼車?“??1-????∼車?“?“?車???????㊣??????
	BYTE    byRes[7];
}NET_DVR_SINGLESUBSYSTEMJOININFO, LPNET_DVR_SINGLESUBSYSTEMJOININFO;

typedef struct tagNET_DVR_ALLDECSUBSYSTEMJOININFO
{
	DWORD dwSize;
	NET_DVR_SINGLESUBSYSTEMJOININFO struSingleSubSystemJoinInfo[MAX_SUBSYSTEM_NUM];//80
	BYTE  byRes[8];
}NET_DVR_ALLDECSUBSYSTEMJOININFO, *LPNET_DVR_ALLDECSUBSYSTEMJOININFO;

//2010-04-13 ????NAT?????角??????
typedef struct tagNET_DVR_NATASSOCIATECFG
{
	DWORD                  dwSize;
	NET_DVR_NETCFG_V30  struNatIpAddress[2];//NAT IP???﹞ 
	BYTE                byNATEnable;//??﹞?????NAT??????0-????????﹞?0-????
	BYTE   byNATCfgMode; //NAT??????????0-????﹞?????1-℅???﹞???
	BYTE   byRes[62];
}NET_DVR_NATASSOCIATECFG, *LPNET_DVR_NATASSOCIATECFG;

//2010-06-01 ????℅??????“㊣“??????
typedef struct tagNET_DVR_TEMPERATUREALARMCFG
{
	BYTE     byEnableTemperatureAlarm;//????????????㊣“????0-㊣“????1-??㊣“??
	BYTE     byRes1[3];
	int      iTemperatureUpLimited;    //???﹞?????????車????????1234㊣赤??????12.34??
	int      iTemperatureDownLimited;
	NET_DVR_HANDLEEXCEPTION_V30 struTempHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30]; /*??﹞??㊣??*/
	BYTE     byRes2[32];
}NET_DVR_TEMPERATUREALARMCFG, *LPNET_DVR_TEMPERATUREALARMCFG;

typedef struct tagNET_DVR_BOARDALARMCFG
{
	BYTE   byEnablePullAlarm;//????∼?㊣“????????1-㊣“????0-??㊣“??
	BYTE   byRes1[3];
	NET_DVR_HANDLEEXCEPTION_V30 struBoardHandleType;    /* ???赤﹞??? */
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30]; /*??﹞??㊣??*/
	BYTE   byRes2[32];
}NET_DVR_BOARDALARMCFG, *LPNET_DVR_BOARDALARMCFG;


typedef struct tagNET_DVR_VIDEOPLATFORMALARMCFG
{
	DWORD                          dwSize;
	NET_DVR_TEMPERATUREALARMCFG  struTempAlarmCfg;
	NET_DVR_BOARDALARMCFG          struBoardAlarmCfg;
	NET_DVR_HANDLEEXCEPTION_V30  struHandleException[MAX_EXCEPTIONNUM];//0-﹞????足????1-℅??????足????2-IP???﹞??????3-????????4-﹞?﹞“﹞?????5-?????足????6-?∼??∼??足??
	BYTE                         byRes[32];
}NET_DVR_VIDEOPLATFORMALARMCFG, *LPNET_DVR_VIDEOPLATFORMALARMCFG;
//2010-05-17
typedef struct  tagNET_DVR_CODESPLITTERASSOCIATE
{
	DWORD        dwSize;
	NET_DVR_IPADDR   struIP;  /*㊣角???‾IP???﹞*/
	WORD        wPort;        //㊣角???‾??????
	BYTE        byRes1[6];
	BYTE        sUserName[NAME_LEN];    /* ???∫???“32?? */
	BYTE        sPassword[PASSWD_LEN];    /*???? ?“16??*/
	BYTE        byChan;//㊣角???‾?“????
	BYTE        byRes2[15];
} NET_DVR_CODESPLITTERASSOCIATE, *LPNET_DVR_CODESPLITTERASSOCIATE;

//2010-06-01 ????℅??????“㊣“???????芍??
typedef struct tagNET_DVR_MATRIXSUBSYSTEMINFO
{
	BYTE   byMatrixNum;//????℅??????“??
	BYTE    bySubSystemNum;//℅???????????
	BYTE   byRes[14];
} NET_DVR_MATRIXSUBSYSTEMINFO, *LPNET_DVR_MATRIXSUBSYSTEMINFO;

typedef struct tagNET_DVR_VIDEOPLATFORM_ALRAMINFO
{
	DWORD  dwSize;      //?芍?????車??
	BYTE   byAlarmType;    // 0-∼???℅?∼???1-????℅?∼?,2-??????????㊣“????3-??????????㊣“????4-﹞???℅????足????5-℅??????足??,6-﹞?﹞“﹞?????7-?????足??㊣“??,8-?∼??∼??足??㊣“??
	BYTE   byBoardNum;     //℅?∼???????1????B10???∫????℅????????∫??????0xff
	BYTE   byRes1[2];
	BYTE   bySubSystemChan[8]; //℅?∼???????,????℅?∼?????8??℅?????????﹞?㊣???????????????℅??????足???㊣??bySubSystemChan[0]㊣赤??????℅??????辰??        
	int    iTemperature;  //????????㊣“???㊣????????????
	BYTE   byMainboardSeq;//????????㊣“???㊣??????0-﹞??‾∼???1-?‾∼?
	BYTE   byRes2[3];
	BYTE   byFanSequence[32];//?足??﹞?????byFanSequence[i] = 1㊣赤??﹞???i+1?足????byFanSequence[i] = 0㊣赤??﹞???i+1????    
	NET_DVR_MATRIXSUBSYSTEMINFO struInputNote;// ?????足??㊣“???㊣???????????芍??
	NET_DVR_MATRIXSUBSYSTEMINFO struOutputNote;//?????足??㊣“???㊣???????????芍??
	BYTE   byRes3[68];
}NET_DVR_VIDEOPLATFORM_ALRAMINFO, *LPNET_DVR_VIDEOPLATFORM_ALRAMINFO;

/***************************?車??DVR begin *****************************/
#define MAX_INQUEST_PIP_NUM        3     //???“??????????????????
#define MAX_INQUEST_CDRW_NUM    4     //℅??車?????迆????
#define MAX_INQUEST_PIP_NUM_EX    16        //?車???迆??????℅??車????

typedef struct
{
	DWORD      dwSize;
	DWORD      dwNum;                       //?????迆??????
	DWORD      dwRwSelectPara[MAX_CHANNUM_V30];// ??﹞???????????
	DWORD      dwModeSelect;                //0㊣赤?????﹞????????  1㊣赤??????????????(????????)
	BYTE       byRes[24];                   //㊣???
	DWORD       dwStartCDRW;                 //DVR ㊣???????????????
	DWORD      dwHdExcp;                    //???????足 ??
	DWORD       dwInterval;                  //?㊣????????10﹞???(0)??20﹞???(1)??30﹞???(2)
	char        sLable[64];                  //????????
}NET_DVR_INQUEST_CDRW_CFG, *LPNET_DVR_INQUEST_CDRW_CFG;

typedef struct
{
	char      sFileName[36];             //??????
	DWORD     dwFileLen;                 //?????∟??
}NET_DVR_INQUEST_FILEINFO, *LPNET_DVR_INQUEST_FILEINFO;

typedef struct
{
	DWORD     dwFileNum;                     // ?豕???????辰????????????????℅??角????20??
	NET_DVR_INQUEST_FILEINFO struFileInfo[MAX_RECORD_FILE_NUM];
	//??????????????㊣赤?????????????㊣????
	DWORD     dwCDIndex;                    //?????迆???‾????1:????1???????迆??2:????2???????迆?? 3:3???????迆,4:4???????迆,5:?迄???????迆
	DWORD      bFinalizeDisc;                 // 0=?????那???車??﹞?????1=?????那???車﹞???
}NET_DVR_INQUEST_FILES, *LPNET_DVR_INQUEST_FILES;

typedef struct
{
	DWORD     dwEnable;            //?????迆℅?????﹞????∫,0-???∫,1-???∫    
	DWORD     dwStatus;            /* ?㊣dwType=0?㊣??
								   0-??????????1-???????辰?????足??,
								   ?㊣dwType=1?辰2?㊣??
								   0-??????????1-???????辰?????足????
								   2-??????﹞???(81???∫??)??3-??????????℅???
								   4-?足???????車??????(81???∫??)
								   ?㊣dwType=3?㊣??
								   0-??????????1-???????辰?????足????
								   2-??????﹞???(81???∫??)??3-??????????℅?
								   ?㊣dwType=4?㊣??
								   0-??????????1-???????辰?????足????
								   2-??????﹞???(81???∫??)??3-??????????℅?
								   ?㊣dwType=5?㊣,
								   0-?????????? 1-???????辰?????足??,
								   2-??????﹞???(81???∫??)
								   ?㊣dwType=6?辰7?㊣,
								   0-????????, 1-???????辰?????足??,
								   2-??????﹞???(81???∫??), 3-??????????℅?*/
	DWORD    dwVolumn;      //????????,????M
	DWORD    dwFreeSpace;   //???????角????,????M    
	DWORD    dwTimeLeft;     // ???????角?㊣??????????
	BYTE          byCDType;         // ?????角??
	BYTE       byRes[3];      //㊣???℅???
}NET_DVR_INQUEST_CDRW, *LPNET_DVR_INQUEST_CDRW;

typedef struct
{
	/*????℅?????0-?車????????
	1-?車??????????????2-?車????????
	3-?????車??????,
	4-㊣?﹞?(???車㊣?﹞???㊣???㊣?﹞?)
	5-????
	6-??????????
	7-?????車??*/
	DWORD    dwType;
	NET_DVR_INQUEST_CDRW   strCDRWNum[MAX_INQUEST_CDRW_NUM];   //??℅谷0㊣赤???????迆1    
	NET_DVR_TIME_EX            struInquestStartTime;        //?車?????????㊣????
	BYTE                    byRes[16];             //㊣???
}NET_DVR_INQUEST_CDRW_STATUS, *LPNET_DVR_INQUEST_CDRW_STATUS;

typedef struct
{
	BYTE     byPipChan;              //?????????????“?? 0xFF??㊣?
	BYTE     byRes[3];              //㊣???℅???
	WORD     wTopLeftX;              //????????x℅?㊣那
	WORD     wTopLeftY;              //????????Y℅?㊣那
}NET_DVR_INQUEST_PIP_PARAM, *LPNET_DVR_INQUEST_PIP_PARAM;

typedef struct
{
	BYTE     byBaseChan;          //???????????迄?????“??
	BYTE     byBackChan;          //??????????㊣??∼?“??
	BYTE     byPIPMode;           /*??﹞?????,
								  0 ?㊣?∼?∼??????????
								  1 ?㊣?∼?∼????1????????
								  2 ?㊣?∼?∼????2????????
								  3 ?㊣?∼?∼????3????????
								  */
	BYTE     byRes;               //㊣???℅???
	NET_DVR_INQUEST_PIP_PARAM  strPipPara[MAX_INQUEST_PIP_NUM];  //??????????????    
}NET_DVR_INQUEST_PIP_STATUS, *LPNET_DVR_INQUEST_PIP_STATUS;

//V40????????????????????????32??
typedef struct tagNET_DVR_INQUEST_PIP_PARAM_V40
{
	BYTE     byPipChan;      /*?????????????“?? 0xFF??㊣?*/
	BYTE     byRes1[3];
	WORD     wTopLeftX;         /*????????x℅?㊣那*/
	WORD     wTopLeftY;         /*????????Y℅?㊣那*/
	WORD     wHeight;            /*?????????? */
	WORD     wWidth;            /*?????????赤 */
	BYTE     byRes2[32];
}NET_DVR_INQUEST_PIP_PARAM_V40, *LPNET_DVR_INQUEST_PIP_PARAM_V40;

typedef struct tagNET_DVR_INQUEST_PIP_STATUS_V40
{
	NET_DVR_STRUCTHEAD    struStructHead;
	BYTE             byBaseChan;     /*???????????迄?????“??*/
	BYTE             byBackChan;     /*??????????㊣??∼?“??*/
	BYTE             byPIPMode;      /*??﹞?????, 0 ?㊣?∼?∼??????????
									 1 ?㊣?∼?∼????1????????
									 2 ?㊣?∼?∼????2????????
									 3 ?㊣?∼?∼????3????????
									 4 ?㊣?∼?∼????4????????
									 5 ?㊣?∼?∼????5????????
									 6 ?㊣?∼??????6????????
									 7 ?㊣?∼?∼????7????????
									 8 ?㊣?∼?∼????8????????
									 9 ?㊣?∼?∼????9????????
									 255  ?㊣?∼?∼????㊣??∟??????*/
	BYTE                         byPipCount;          /*????????????*/
	BYTE                        byPicShowMode; /*??????????????0-????????1-?????迄﹞?2-????????*/
	BYTE                        byRes[31];        /*㊣???*/
	NET_DVR_INQUEST_PIP_PARAM_V40     strPipPara[MAX_INQUEST_PIP_NUM_EX];  /*??????????????*/
}NET_DVR_INQUEST_PIP_STATUS_V40, *LPNET_DVR_INQUEST_PIP_STATUS_V40;

typedef struct
{
	BYTE    sSecretKey[16];        /*???‾????????*/
	BYTE    byRes[64];             /*㊣???℅???*/
}NET_DVR_INQUEST_SECRET_INFO, *LPNET_DVR_INQUEST_SECRET_INFO;


/***************************?車??DVR end *****************************/


/********************************?????????芍??(end)*********************************/
#define        MAX_BIGSCREENNUM    100//℅??角?車????????

typedef struct tagNET_DVR_SINGLESCREENCFG
{
	BYTE    byScreenSeq;//?????辰????0xff㊣赤??????????,64-T?????‾??????㊣赤???‾??
	BYTE    bySubSystemNum;//????℅???????????,?????‾??????????
	BYTE    byDispNum;//????℅????????????????“??????64-T?????‾??????㊣赤???????‾???????“????
	BYTE    byRes[9];
}NET_DVR_SINGLESCREENCFG, *LPNET_DVR_SINGLESCREENCFG;

typedef struct tagNET_DVR_BIGSCREENCFG
{
	DWORD   dwSize;
	BYTE    byEnable;//?車????????????0-????????1-????
	BYTE    byModeX;/*?車??????????*/
	BYTE    byModeY;
	BYTE    byMainDecodeSystem;//℅??????“??????∼???????㊣赤???‾??????????64-T?????‾??????㊣赤???????“????
	BYTE    byMainDecoderDispChan;//?‾???迄???????“??????1.1netra∼?㊣???????netra?????‾???????????“??????????℅‾???‾????64-T?????????∫
	BYTE    byVideoStandard;      //?車??????℅????????角?? 1:NTSC,2:PAL
	BYTE    byRes1[2];
	DWORD  dwResolution;         //?車??????℅???﹞?㊣????角??
								 //?車????????????????
	NET_DVR_SINGLESCREENCFG struFollowSingleScreen[MAX_BIGSCREENNUM];
	//????℅?㊣那㊣??????迄℅?℅?㊣那??????㊣?
	WORD    wBigScreenX; //?車????????????????X℅?㊣那
	WORD    wBigScreenY; //?車????????????????Y℅?㊣那
	BYTE    byRes2[12];
}NET_DVR_BIGSCREENCFG, *LPNET_DVR_BIGSCREENCFG;


#define    DECODEPIC_LEFTADJUST            1        /*????℅車??*/
#define    DECODEPIC_RIGHTADJUST            2        /*????????*/
#define    DECODEPIC_UPADJUST                3        /*????????*/
#define    DECODEPIC_DOWNADJUST            4        /*????????*/
#define    DECODEPIC_REDUCEADJUST            5        /*????????*/  
#define    DECODEPIC_FULL_SCREEN_ADJUST    6        /*????????*/
#define    DECODEPIC_CANCEL_FULL_SCREEN_ADJUST    7        /*????????????????*/   
#define DECODEPIC_AUTOADJUST           8        /*  ????℅????‾?? */
#define DECODEPIC_HEIGHTADJUST         9       /* ?????????‾?? */
#define DECODEPIC_WIDTHADJUST             10       /* ?????赤???‾?? */

#define     MAX_UNITEDMATRIX_NUM        8//??????℅??角????℅??????“????
#define     MAX_SUBDOMAIN_NUM            4//??????℅??角℅??辰????
typedef struct tagNET_DVR_SUBSERVERINFO
{
	BYTE        bySequence;//?辰????????℅??辰????℅??辰????????????℅??????“???????“????0㊣赤?????????“\℅??辰
	BYTE        byBelongSubDomain;//???????“???∫??㊣赤??????????℅??辰
	BYTE        byRes1[6];
	DWORD       dwMaxIpcNums;//??????℅??角IPC????
	NET_DVR_IPADDR struSubMatrixIP;        /*IP???﹞*/
	WORD        wSubMatrixPort;        /*℅???????????*/
	BYTE        byRes2[6];
}NET_DVR_SUBSERVERINFO, *LPNET_DVR_SUBSERVERINFO;

typedef struct tagNET_DVR_UNITEDMATRIXINFO
{
	DWORD dwSize;
	NET_DVR_SUBSERVERINFO struDomainInfo;
	NET_DVR_SUBSERVERINFO struSubDomainInfo[MAX_SUBDOMAIN_NUM];//℅??辰????
	NET_DVR_SUBSERVERINFO struMatrixInfo[MAX_UNITEDMATRIX_NUM];//????℅??????“????
	BYTE  byRes[32];
}NET_DVR_UNITEDMATRIXINFO, *LPNET_DVR_UNITEDMATRIXINFO;

typedef struct tagNET_DVR_REGCALLBACKPARAM
{
	char sDeviceID[NAME_LEN];//?豕㊣?ID??
	char sPassword[PASSWD_LEN];
	BYTE sSerialNumber[SERIALNO_LEN]; /* ?豕㊣??辰???? */
	DWORD dwDeviceType;//?豕㊣??角??
	BYTE nStatus;// ??????℅????“0??????1??????
				 /* net type, 0: unknow; 1: 2G wireless networks; 2: 3G wireless networks; 3: line networks */
	BYTE byNetType;
	BYTE byRes[14];
}NET_DVR_REGCALLBACKPARAM, *LPNET_DVR_REGCALLBACKPARAM;

typedef struct tagNET_DVR_LOGONREPONSEPARAM
{
	//?????㊣????????????????, 5??㊣?????180??????????????15????
	WORD wHeartbeatTime;
	BYTE byOvertimes;// ?豕㊣????????㊣????????????3??
	BYTE byRes[13];
}NET_DVR_LOGONREPONSEPARAM, *LPNET_DVR_LOGONREPONSEPARAM;


typedef struct tagNET_DVR_PREVIEWPARAM
{
	BYTE byTransProtol;        //???????谷??0-TCP, 1-UDP
	BYTE byTransMode;        ///* ???????‾???? 0???‾???‾ 1??℅????‾*/ 
	NET_DVR_IPADDR struCuIp; //CU??IP???﹞
	WORD wPort;/*CU????*/
	WORD wUdpPort;
	BYTE bySupportQos;//??﹞?????QOS,1-??????0-??????
					  //??﹞???NAT?∟?????車??0-﹞???1-??(???豕byTransMode℅???)
	BYTE  byNatRequest;
	BYTE  byPreviewType;// 0-???“?∟?? 1-???㊣?∟??
	BYTE  byRes[7];
}NET_DVR_PREVIEWPARAM, *LPNET_DVR_PREVIEWPARAM;
typedef struct tagNET_DVR_DEVICENATINFO
{
	NET_DVR_IPADDR struPuIp; //PU??????IP???﹞
	WORD    wOuterPort;/*PU????????*/
	WORD    wInterPort;//PU﹞?????????㊣???????
	DWORD   nSessionID;//CMS﹞?????sessionID
	BYTE    byRes[4];
}NET_DVR_DEVICENATINFO, *LPNET_DVR_DEVICENATINFO;


typedef struct tagNET_DVR_PREVIEWCALLBACKPARAM
{
	LONG lChannel;
	BYTE nLinkProtocol;
	BYTE nTransMode;
	BYTE byPreviewType; //0-???“?∟?? 1-???㊣?∟??
	BYTE byRes[5];
	DWORD nSessionID;//CMS﹞?????sessionID
}NET_DVR_PREVIEWCALLBACKPARAM, *LPNET_DVR_PREVIEWCALLBACKPARAM;

//??﹞?
typedef struct tagNET_DVR_PLAYBACKREQUESTPARAM
{
	BYTE byPlayBackMode;        /* ??﹞????????? 1??∼???℅? 2??∼??㊣?? */
	BYTE byRes1[3];
	union
	{
		char sFileName[100];        /* ??﹞????????? */
		struct
		{
			LONG    lChannel;                /*??﹞????“????*/
			NET_DVR_TIME struStartTime;            /* ∼??㊣????﹞????????㊣?? */
			NET_DVR_TIME struStopTime;            /* ∼??㊣????﹞????芍???㊣?? */
			BYTE    byRes[48];
		}struPlayBackbyTime;
	}playbackmode;
	NET_DVR_IPADDR struCuIp; //CU??IP???﹞
	WORD    wPort;/*CU????*/
	BYTE    byRes2[2];
	DWORD   dwSessionID;//CMS﹞?????sessionID,????????
	BYTE    byRes3[16];
}NET_DVR_PLAYBACKREQUESTPARAM, *LPNET_DVR_PLAYBACKREQUESTPARAM;

//2010-10-06
typedef struct tagNET_DVR_PLAYBACKCALLBACKPARAM
{
	BYTE byPlayBackMode;        /* ??﹞????????? 1??∼???℅? 2??∼??㊣?? */
	BYTE byRes1[3];
	union
	{
		char sFileName[100];        /* ??﹞????????? */
		struct
		{
			LONG        lChannel;                /*??﹞????“????*/
			NET_DVR_TIME struStartTime;            /* ∼??㊣????﹞????????㊣?? */
			NET_DVR_TIME struStopTime;            /* ∼??㊣????﹞????芍???㊣?? */
			BYTE       byRes[48];
		}struPlayBackbyTime;
	}playbackmode;
	DWORD nSessionID;//CMS﹞?????sessionID
	BYTE byRes2[44];
}NET_DVR_PLAYBACKCALLBACKPARAM, *LPNET_DVR_PLAYBACKCALLBACKPARAM;

typedef struct tagNET_DVR_VOICEREQUESETPARAM
{
	BYTE    nVoiceChannel;        //?????“????
	BYTE    byRes1[3];
	NET_DVR_IPADDR struCuIp; //CU??IP???﹞
	WORD     wPort;/*CU????*/
	BYTE    byRes2[10];
}NET_DVR_VOICEREQUESTPARAM, *LPNET_DVR_VOICEREQUESTPARAM;

typedef struct tagNET_DVR_ALARMSETUPREQUESETPARAM
{
	NET_DVR_IPADDR struCuIp; //CU??IP???﹞
	WORD     wPort;/*CU????*/
	BYTE    byRes[2];
}NET_DVR_ALARMSETUPREQUESTPARAM, *LPNET_DVR_ALARMSETUPREQUESTPARAM;

typedef struct tagNET_DVR_GPSALARMINFO
{
	BYTE byDeviceID[NAME_LEN];/*?豕㊣???ID??*/
	NET_DVR_TIME_EX struGpsTime;    /*GPS???????㊣??*/
	DWORD    dwLongitude;    /* ????*/
	DWORD    dwLatitude;  /* ????*/
	int     iTimeZone; /*?㊣??????﹞?????㊣赤????+60?迆㊣赤??1????+480?迆㊣赤??8????-60?迆㊣赤?‾????-480?迆㊣赤?‾8??????℅?????GPSTime?????????那?????㊣???豕??*/
	DWORD dwDirection; /*????﹞??辰=????﹞??辰?“??????????????㊣㊣﹞??辰???????㊣??﹞??辰??????*100*/
	WORD  wSatellites; /*????????*/
	WORD  wPrecision; /*????*/
	DWORD dwHeight; /*????:???℅???∟??*/
	DWORD dwGPSSeq; /*GPS?辰????GPS?????㊣??????*/
	WORD  wSpeed;//????????????km/h
				 /* direction[0]:'E'or'W'(????/?‾??), direction[1]:'N'or'S'(㊣㊣??/????)*/
	char sDirection[2];
	BYTE byLocateMode;/*?“??????(????0)??1,℅??‾?“??,2,??﹞?3,????,4,???????∫??65,???∫?“????78?????∫?“??*/
	BYTE byRes[3];
}NET_DVR_GPSALARMINFO, *LPNET_DVR_GPSALARMINFO;

//????????????
typedef struct tagNET_DVR_PICINFO
{
	DWORD   dwSize;                //?芍???∟??
	BYTE    byChanIndex;            //?“????
	BYTE    byRes1[3];                //㊣???
	BYTE     byDeviceID[NAME_LEN];/*?豕㊣???ID??*/
	BYTE    byAbsTime[32];        //?????㊣????, yyyymmddhhmmssxxx,
	DWORD   dwPicLen;                    //?????∟??
	BYTE    byRes2[32];
	BYTE    *pPicBuffer;
}NET_DVR_PICTUREINFO, *LPNET_DVR_PICTUREINFO;

//???“????
typedef struct tagNET_DVR_CMSPARAM
{
	DWORD   dwSize;
	NET_DVR_IPADDR struCmsAddr;
	WORD   wCmsPort;
	BYTE   byRes1[2];
	BYTE   sDeviceID[NAME_LEN];
	BYTE   byPassword[PASSWD_LEN];
	NET_DVR_IPADDR struPicServerAddr;
	WORD   wPicServerPort;
	WORD   wCmsUdpPort;//CMS????UDP?????谷????????
	BYTE   byRes2[12];
}NET_DVR_CMSPARAM, *LPNET_DVR_CMSPARAM;

///????????
#define DIALPASSWD_LEN  32 //?????????∟??

typedef struct tagNET_DVR_QOSPARAM
{
	WORD wMaxBitUL;    /* the maximum number of kbits/s in up-link traffic */
	WORD wMaxBitDL;    /* the maximum number of kbits/s in down-link traffic */
	BYTE byTrafficClass;    /* 0: conversationnal; 1: streaming; 2: interactive;3: background; 4: subscribed value(default) */
	BYTE byRes[7];
}NET_DVR_QOSPARAM, *LPNET_DVR_QOSPARAM;


typedef struct tagNET_DVR_PPPDPARAM
{
	BYTE byDialNum[NAME_LEN];        /* dial number, eg. "#777" */
	BYTE byUserName[NAME_LEN];    /* user name, eg. "card" */
	BYTE byPassword[DIALPASSWD_LEN];    /* password, eg. "card" */
	BYTE byApn[NAME_LEN];        /* access point name, eg. "cmnet" */
	NET_DVR_IPADDR struLocalIp;/* local IP address */
	NET_DVR_IPADDR struRemoteIp;/* remote IP address */
	WORD wMtuSize;        /* max transfer unit of ppp interface */
	BYTE byVerifyProtocal;    /* IPCP verify protocal: 0: auto; 1: CHAP; 2: PAP */
	BYTE byRes[25];
}NET_DVR_PPPDPARAM, *LPNET_DVR_PPPDPARAM;

#define MAX_PHONE_NUM                32//℅??∟?????∟??

typedef struct tagNET_DVR_DIALPARAM
{
	DWORD dwSize;
	BYTE bEnable3G;        /* 0: disable; 1: enable 3g */
	BYTE byDialMethod;        /* dial methold: 0: auto dial; 1: manual dial; */
	BYTE bySwitchMethod;    /* switch methold: 0: auto switch;1??3G??????2: manual switch to 2G; 3: manual switch to 3G; */
	BYTE byEnaAlarmInDial;   /* ????㊣“????????﹞?????; 0: disable; 1: enable */
	BYTE byRes1[10];
	WORD wOffLineTime;        /* auto off line when no connection exist,??????﹞?????﹞??∫??5~65535﹞??? */
	NET_DVR_PPPDPARAM struPppdParam;
	NET_DVR_QOSPARAM struQosParam;
	BYTE byUimNumber[MAX_PHONE_NUM];
	BYTE byRes2[24];
}NET_DVR_DIALPARAM, *LPNET_DVR_DIALPARAM;

typedef struct tagNET_DVR_DIALREQUEST
{
	BYTE byConnNum;        /*???“?辰??*/
	BYTE byNetType;        /* ???“?????????????????????????????豕???㊣????????????0??℅?????1??CDMA??2??EVDO??3??WCDMA??4??TD-SCDMA */
	BYTE byRes[6];
} NET_DVR_DIALREQUEST, *LPNET_DVR_DIALREQUEST;


/* UIM card information */
typedef enum
{
	UIM_UNKNOWN = 0,
	UIM_VALID = 1,
	UIM_NOVALID = 4,
	UIM_ROAM = 11,
	UIM_NOEXIST = 255
}UIM_INFO;

/* real 3g mode */
typedef enum
{
	/* evdo */
	RMODE_CDMA1X = 12,
	RMODE_EVDO = 14,
	RMODE_CDMAHYBRID = 18,
	/* wcdma */
	RMODE_GSM = 21,
	RMODE_GPRS = 22,
	RMODE_EDGE = 23,
	RMODE_WCDMA = 24,
	RMODE_HSDPA = 25,
	RMODE_HSUPA = 26,
	RMODE_HSPA = 27,
	/* tdscdma */
	RMODE_TGSM = 31,
	RMODE_TGPRS = 32,
	RMODE_TEDGE = 33,
	RMODE_TDSCDMA = 34,
	RMODE_TDHSDPA = 35,
	RMODE_TDHSUPA = 36,
	RMODE_TDHSPA = 37
}REAL_MODE;

typedef struct tagNET_DVR_DIALSTATUS
{
	BYTE byRealMode;        /* REAL_MODE ,real 3g mode networks */
	BYTE byUimCard;        /* UIM_INFO ,UIM card information */
	BYTE byRes1[6];
	DWORD dwSignal;            /* signal RSSI */
	DWORD dwDialStatus;        /* dial status */
	NET_DVR_IPADDR struLocalIp;    /* wireless networks IP address */
	NET_DVR_IPADDR struRemoteIp;    /* wireless networks gateway */
	NET_DVR_IPADDR struNetMask;    /* wireless networks netmask */
	NET_DVR_IPADDR struDns;        /* wireless networks DNS */
	BYTE  byRes2[16];
}NET_DVR_DIALSTATUS, *LPNET_DVR_DIALSTATUS;

//????????
#define MAX_WHITELIST_NUM            8 //℅??車∼℅??????
#define NET_SDK_MAX_WHITELIST_NUM_32    32 //℅??車∼℅??????

#define HARDDISKFULL_EXCEPTION      0x0     /*?????迆*/
#define HARDDISKERROR_EXCEPTION     0x1     /*?????赤*/
#define ETHERNETBROKEN_EXCEPTION    0x2     /*??????*/
#define IPADDRCONFLICT_EXCEPTION    0x3     /*IP???﹞????*/
#define ILLEGALACCESS_EXCEPTION     0x4     /*﹞?﹞“﹞???*/
#define VI_EXCEPTION                0x5     /*?????????足??*/
#define VS_MISMATCH_EXCEPTION       0x6     /*????/?????????????????? */
#define VIDEOCABLELOSE_EXCEPTION    0x7     /*??????????*/
#define AUDIOCABLELOSE_EXCEPTION    0x8     /*??????????*/
#define ALARMIN_EXCEPTION           0x9     /*㊣“??????*/
#define MASKALARM_EXCEPTION         0xa     /*????㊣“??*/
#define MOTDET_EXCEPTION            0xb     /*?????足??*/
#define RECORDING_EXCEPTION         0xc     /*?????足??*/
#define WIRELESS_EXCEPTION          0xd     /*PIR㊣“??*/
#define PIR_EXCEPTION                0xe     /*????㊣“??*/
#define CALLHELP_EXCEPTION          0xf     /*????㊣“??*/

#define AUDIO_DETECTION_EXCEPTION              0x10    /*?????足???足??㊣“??*/
#define SCENECHANGE_DETECTION_EXCEPTION        0x11    /*???∼?足??㊣“??*/
#define DEFOCUS_DETECTION_EXCEPTION            0x12    /*?谷???足??㊣“??*/
#define FACE_DETECTION_ENTRANCE_EXCEPTION      0x13    /*?????足??㊣“??*/
#define LINE_DETECTION_ENTRANCE_EXCEPTION      0x14    /*?????足??㊣“??*/
#define FIELD_DETECTION_ENTRANCE_EXCEPTION     0x15    /*???辰?????足??㊣“??*/
#define REGION_EXITING_EXCEPTION               0x16    /*???????辰?足??㊣“??*/
#define REGION_ENTRANCE_EXCEPTION              0x17    /*???????辰㊣“??*/
#define LOITERING_EXCEPTION                    0x18    /*???㊣?????足??㊣“??*/
#define GROUP_EXCEPTION                        0x19    /*???㊣?????足??㊣“??*/
#define RAPIDMOVE_EXCEPTION                    0x1a    /*?足???????足??㊣“??*/
#define PARKING_EXCEPTION                      0x1b    /*?????足??㊣“??*/
#define UNATTENDEDBAGGAGE_EXCEPTION            0x1c    /*???﹞?????足??㊣“??*/
#define ATTENDEDBAGGAGE_EXCEPTION              0x1d    /*???﹞?????足??㊣“??*/
#define DATATRAFFIC_EXCESS                     0x1e    /*?‾??????*/
#define VOLTAGEINSTABLE_EXCEPTION              0x1f    /*?????????足??㊣“??*/
#define ALL_EXCEPTION                          0xff    /*?迄?????????迄??????????﹞?????????﹞?????????????*/


#define PHONECFG_RECEIVE_SMS        0x0    /* ?∫??????㊣“?????? */
#define PHONECFG_SMS_CONTROL        0x1    /* ?∫???????????????? */
#define PHONECFG_CALL_CONTROL       0x2    /* ?∫?????????????? */
#define PHONECFG_SMS_REBOOT         0x3    /*?∫??????????*/
#define PHONECFG_DOOR_CONTROL       0x4    /* ?∫??????℅‾????*/
#define PHONECFG_SMS_GET_DAIL_STATUS       0x5   /* ?∫??????????????℅???*/


typedef struct tagNET_DVR_PHONECFG
{
	BYTE byWhiteList[MAX_PHONE_NUM];
	BYTE byPhonePerssion[32]; /*∼?℅???㊣赤????﹞????????????????????????????迆㊣赤??????
							  ??PHONECFG_RECEIVE_SMS???“?? */
	BYTE byAlarmHandler[32];   /*∼?℅???㊣赤????﹞???????????㊣“???角????????﹞???*/
	BYTE byRes[128];
} NET_DVR_PHONECFG, *LPNET_DVR_PHONECFG;

typedef struct tagNET_DVR_SMSRELATIVEPARAM
{
	DWORD dwSize;
	BYTE bEnableSmsAlarm;    /* 0: disable; 1: enable 3g */
	BYTE byRes1[7];
	NET_DVR_PHONECFG struWhiteList[MAX_WHITELIST_NUM];
	BYTE byRes2[32];
}NET_DVR_SMSRELATIVEPARAM, *LPNET_DVR_SMSRELATIVEPARAM;

typedef struct tagNET_DVR_PHONECFG_V50
{
	BYTE byWhiteList[MAX_PHONE_NUM];
	BYTE byPhonePerssion[32]; /*∼?℅???㊣赤????﹞????????????????????????????迆㊣赤??????
							  ??PHONECFG_RECEIVE_SMS???“?? */
	BYTE byAlarmHandler[32];   /*∼?℅???㊣赤????﹞???????????㊣“???角????????﹞???(?????‾?迆???㊣??????)*/
	BYTE byAcsPassword[16];       /*?????邦??*/
	BYTE byName[NAME_LEN/*32*/];     /*????*/
	BYTE byRes[80];
} NET_DVR_PHONECFG_V50, *LPNET_DVR_PHONECFG_V50;

typedef struct tagNET_DVR_SMSRELATIVEPARAM_V50
{
	DWORD dwSize;
	BYTE bEnableSmsAlarm;    /* 0: disable; 1: enable 3g */
	BYTE byRes1[7];
	NET_DVR_PHONECFG_V50 struWhiteList[NET_SDK_MAX_WHITELIST_NUM_32];
	BYTE byRes2[32];
}NET_DVR_SMSRELATIVEPARAM_V50, *LPNET_DVR_SMSRELATIVEPARAM_V50;

#define NET_SDK_MONITOR_ID_LEN 64 //?角????ID?∟??

typedef struct tagNET_DVR_ACS_EVENT_COND
{
	DWORD dwSize;
	DWORD dwMajor; //㊣“???‾?角?????????????????那?“????0-????
	DWORD dwMinor; //㊣“?????角?????????????????那?“????0-????
	NET_DVR_TIME    struStartTime; //?????㊣??
	NET_DVR_TIME    struEndTime; //?芍???㊣??
	BYTE byCardNo[ACS_CARD_NO_LEN]; //?“??
	BYTE byName[NAME_LEN]; //???“??????
	BYTE byPicEnable; //??﹞?????????0-??????????1-??????
	BYTE byTimeType; //?㊣???角????0-?豕㊣?㊣????㊣???“????????1-UTC?㊣???“struStartTime??struEndTime???㊣????
	BYTE byRes2[2]; //㊣???
	DWORD dwBeginSerialNo; //?????‾?????“??0?㊣??????????
	DWORD dwEndSerialNo; //?芍???‾?????“??0?㊣??????????
	DWORD dwIOTChannelNo; //IOT?“??????0-???∫
	WORD  wInductiveEventType; //?谷???????角????0-???∫????????????2.2?????????∫????????????﹞?0???車??㊣“???角???“???谷???????角????﹞???﹞??辰?“??????㊣“???‾???角???“dwMajor??dwMinor????﹞?
	BYTE   bySearchType;      //???‾﹞?????0-㊣?????1-∼??????????‾?“???㊣?“??????﹞??????“????????2-∼??角????ID???‾
	BYTE   byEventAttribute; //??????????0-???“????1-??﹞“??????2-???邦
	char     szMonitorID[NET_SDK_MONITOR_ID_LEN/*64*/];          //?角????ID?“???豕㊣??辰???????“???角????㊣角??℅谷?????????????????豕㊣??辰????+?∼DOOR?㊣+??㊣角????
	BYTE  byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID??
	BYTE byRes[140]; //㊣???
}NET_DVR_ACS_EVENT_COND, *LPNET_DVR_ACS_EVENT_COND;

typedef struct tagNET_DVR_ACS_EVENT_DETAIL
{
	DWORD dwSize;
	BYTE byCardNo[ACS_CARD_NO_LEN]; //?“???“mac???﹞??????0???∫
	BYTE byCardType; //?“?角????1-???“?“??2-???????“??3-???????“??4-???邦?“??5-?????“??6-?????“??7-??㊣??“??8-?????“????0???∫
	BYTE byWhiteListNo; //∼℅????????,1-8????0???∫
	BYTE byReportChannel; //㊣“???????“????1-??﹞???????2-????℅谷1??????3-????℅谷2????????0???∫
	BYTE byCardReaderKind; //???“?‾?????????角??0-???∫??1-IC???“?‾??2-?赤﹞??∟???“?‾??3-?????????“?‾,4-?????﹞
	DWORD dwCardReaderNo; //???“?‾㊣角??????0???∫
	DWORD dwDoorNo; //??㊣角???“????㊣角????????0???∫
	DWORD dwVerifyNo; //?角???“???∟?辰??????0???∫
	DWORD dwAlarmInNo;  //㊣“????????????0???∫
	DWORD dwAlarmOutNo; //㊣“????????????0???∫
	DWORD dwCaseSensorNo; //??????﹞??‾㊣角??
	DWORD dwRs485No;    //RS485?“????????0???∫
	DWORD dwMultiCardGroupNo; //??℅谷㊣角??
	WORD wAccessChannel;    //???㊣?“????
	BYTE  byDeviceNo; //?豕㊣?㊣角??????0???∫?“???∫﹞??∫1-255??
	BYTE  byDistractControlNo;//﹞????‾㊣角??????0???∫
	DWORD dwEmployeeNo; //?∟??????0???∫
	WORD wLocalControllerID; //?????????‾㊣角????0-?????‾?迆??1-64?迆㊣赤?????????‾
	BYTE  byInternetAccess; //????ID???“1-????????1,2-????????2,3-????????1??
	BYTE  byType;     //﹞????角????0:???㊣﹞???,1-24???㊣﹞???,2-???㊣﹞??? ,3-????﹞?????4-???℅﹞??? 5-????﹞??? 6-????﹞??? 7-24???㊣???迄﹞???  8-24???㊣?“?迆﹞?????9-24???㊣????﹞???,10-???????㊣????﹞?????11-???????㊣????﹞??? 0xff-??
	BYTE  byMACAddr[MACADDR_LEN]; //???赤???﹞????0???∫
	BYTE  bySwipeCardType;//???“?角????0-???∫??1-??????
	BYTE  byEventAttribute; //??????????0-???“????1-??﹞“???∟??2-???邦
	DWORD dwSerialNo; //?????‾????????0???∫
	BYTE  byChannelControllerID; //?“???????‾ID????0???∫??1-?‾?“???????‾??2-???“???????‾
	BYTE  byChannelControllerLampID; //?“???????‾??∼?ID????0???∫?“???∫﹞??∫1-255??
	BYTE  byChannelControllerIRAdaptorID; //?“???????‾?足??℅???∼?ID????0???∫?“???∫﹞??∫1-255??
	BYTE  byChannelControllerIREmitterID; //?“???????‾?足??????ID????0???∫?“???∫﹞??∫1-255??
	DWORD dwRecordChannelNum; //?????“??????
	char    *pRecordChannelData;//?????“?????車????sizeof(DWORD)* dwRecordChannelNum
	BYTE  byUserType; //???㊣?角????0-???∫??1-???“???“?‾??????2-??㊣??“﹞???????3-??????????4-???赤?㊣
	BYTE  byCurrentVerifyMode; //???“?‾?㊣?∼?谷?∟﹞?????0-???∫??1-??????2-???“+??????3-???“??4-???“?辰??????5-??????6-????+??????7-?????辰???“??8-????+???“??9-????+???“+??????10-?????辰?????辰???“?辰??????11-????+??????12-????+??????
							   //13-????+???“??14-??????15-?∟??+??????16-?????辰??????17-?∟??+??????18-?∟??+????+??????19-????+????+???“??20-????+????+??????21-?∟??+??????22-?????辰????+???“??23-?????辰??????24-???“?辰?????辰??????25-???“?辰??????26-???“?辰?????辰??????27-???“?辰?????辰????
	BYTE  byAttendanceStatus;  //????℅?????0-???“??,1-??∼角??2-??∼角??3-??????????4-?芍????????5-??????∼角??6-?芍????∼角
	BYTE  byStatusValue;  //????℅?????
	BYTE  byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID???“?????豕㊣??????????????????∟???“???㊣ID??℅?????byEmployeeNo???“????????????byEmployeeNo??℅?????dwEmployeeNo????????℅????????????????????????“?辰???∫????????????????byEmployeeNo℅?????????℅???????????????????dwEmployeeNo℅?????
	BYTE  byRes[64];
}NET_DVR_ACS_EVENT_DETAIL, *LPNET_DVR_ACS_EVENT_DETAIL;

typedef struct tagNET_DVR_ACS_EVENT_CFG
{
	DWORD dwSize;
	DWORD dwMajor; //㊣“???‾?角?????????那?“??
	DWORD dwMinor; //㊣“?????角?????????那?“??
	NET_DVR_TIME struTime; //?㊣??
	BYTE    sNetUser[MAX_NAMELEN];//??????℅‾?????∫??
	NET_DVR_IPADDR    struRemoteHostAddr;//?????‾?迆???﹞
	NET_DVR_ACS_EVENT_DETAIL struAcsEventInfo; //?那??????
	DWORD dwPicDataLen;   //?????????車????????0??㊣赤???車????????
	char    *pPicData;
	WORD  wInductiveEventType; //?谷???????角????0-???∫????????????2.2?????????∫????????????﹞?0???車??㊣“???角???“???谷???????角????﹞???﹞??辰?“??????㊣“???‾???角???“dwMajor??dwMinor????﹞?
	BYTE byTimeType; //?㊣???角????0-?豕㊣?㊣????㊣???“????????1-UTC?㊣???“struTime???㊣????
	BYTE byRes[61];
}NET_DVR_ACS_EVENT_CFG, *LPNET_DVR_ACS_EVENT_CFG;

typedef struct tagNET_DVR_SMSLISTINFO
{
	DWORD  dwSize;
	DWORD dwTotalSmsNum;//????????
	BYTE  byRes[8];
	BYTE  *pSmsParam;
	DWORD dwBufLen;//?迄﹞????????∟????????????
}NET_DVR_SMSLISTINFO, *LPNET_DVR_SMSLISTINFO;

typedef struct tagNET_DVR_SMSPARAM
{
	DWORD dwIndex;            /* the index of sms */
	BYTE byStatus;            /* read yet or not */
	BYTE byRes[7];
	NET_DVR_TIME_EX struRecvTime;        /* sms receive time */
}NET_DVR_SMSPARAM, *LPNET_DVR_SMSPARAM;

#define    MAX_SMSCONTENT_LEN        140//?????????∟??
typedef struct tagNET_DVR_SMSCONTENT
{
	BYTE byPhoneNum[MAX_PHONE_NUM];
	BYTE byMsg[MAX_SMSCONTENT_LEN];
}NET_DVR_SMSCONTENT, *LPNET_DVR_SMSCONTENT;

//pin??????
typedef enum
{
	CPIN_READY = 1,
	CPIN_PIN = 2,
	CPIN_PUK = 3,
	CPIN_PIN2 = 4,
	CPIN_PUK2 = 5
}PIN_READY;

typedef struct tagNET_DVR_PINSTATUS
{
	DWORD dwSize;
	BYTE byStatus;        /* PIN status, defination see enum: PIN_READY */
	BYTE byPinTimes;    /* remain input PIN times */
	BYTE byPukTimes;    /* remain input PUK times */
	BYTE bEnableLock;    /* now the PIN locking function is enabled or not: 0, not enabled lock; 1, lock enabled */
	BYTE byRes[4];
}NET_DVR_PINSTATUS, *LPNET_DVR_PINSTATUS;

typedef enum
{
	PIN_ENABLE = 1,
	PIN_DISABLE = 2,
	PIN_VERIFY = 3,
	PUK_VERIFY = 4,
	PIN_CHANGE = 5
}PIN_CMD;
#define MAX_PIN_LEN        12  //PIN??℅??車?∟??
typedef struct tagNET_DVR_PINCODEPARAM
{
	DWORD dwSize;
	BYTE byPinCmd;        /* PIN command, defination see enum: PIN_CMD */
	BYTE byRes1[3];
	BYTE byPinCode[MAX_PIN_LEN];        /* pin/puk code */
	BYTE byNewPinCode[MAX_PIN_LEN];    /* new pin code */
	BYTE byRes2[16];
}NET_DVR_PINCODEPARAM, *LPNET_DVR_PINCODEPARAM;


//????????
typedef struct
{
	/* 0=CIF, 1=QCIF, 2=D1 3=UXGA(1600x1200), 4=SVGA(800x600), 5=HD720p(1280x720),6=VGA*/
	WORD    wPicSize;
	WORD    wPicQuality; /* ???????????? 0-℅??? 1-???? 2-??∼? */
						 //℅??????????赤﹞?????1-??????????2-?豕㊣?㊣???㊣?????3-???????????㊣?豕㊣?㊣???㊣???
	BYTE    byPicTackleMode;
	BYTE   byRes[11];
}NET_DVR_PUSHJPEGPARA, *LPNET_DVR_PUSHJPEGPARA;


#define    COM_PUSHALARM        0x1200    //?豕㊣??迄㊣?㊣“???????????????????豕㊣?????
#define    COM_PUSHALARM_V30    0x1201    //?豕㊣??迄㊣?㊣“??????????v30?????????豕㊣?????
typedef struct tagNET_DVR_PUSHALARMINFO
{
	DWORD dwAlarmType;/*0-??????㊣“??,1-?????迆,2-???????∫,3???????足??,4??????????????,5-???????????赤,6-????㊣“??,7-??????????, 8-﹞?﹞“﹞???*/
	DWORD dwAlarmInputNumber;/*㊣“??????????*/
	DWORD dwAlarmOutputNumber[MAX_ALARMOUT];/*??﹞?????????????????????1㊣赤????????????????*/
	DWORD dwAlarmRelateChannel[MAX_CHANNUM];/*??﹞????????“????????????1㊣赤???????????﹞????, dwAlarmRelateChannel[0]??????1???“??*/
	DWORD dwChannel[MAX_CHANNUM];/*dwAlarmType??2?辰3,6?㊣??㊣赤???????“????dwChannel[0]??????1???“??*/
	DWORD dwDiskNumber[MAX_DISKNUM];/*dwAlarmType??1,4,5?㊣,㊣赤??????????, dwDiskNumber[0]????????1??????*/
	BYTE byDeviceID[NAME_LEN];/*?豕㊣???ID??*/
	BYTE byRes[4];
}NET_DVR_PUSHALARMINFO, *LPNET_DVR_PUSHALARMINFO;

typedef struct
{
	DWORD dwAlarmType;/*0-??????㊣“??,1-?????迆,2-???????∫,3???????足??,4??????????????,5-???????????赤,6-????㊣“??,7-??????????, 8-﹞?﹞“﹞???, 9-?????????足????10-?????足?? 11- ???????∼㊣???  12-?車???足?? */
	DWORD dwAlarmInputNumber;/*㊣“??????????*/
	BYTE byAlarmOutputNumber[MAX_ALARMOUT_V30];/*??﹞???????????????1㊣赤??????????*/
	BYTE byAlarmRelateChannel[MAX_CHANNUM_V30];/*??﹞????????“??????1㊣赤??????????, dwAlarmRelateChannel[0]??????1???“??*/
	BYTE byChannel[MAX_CHANNUM_V30];/*dwAlarmType??2?辰3,6??9??10?㊣??㊣赤???????“????dwChannel[0]??????1???“??*/
	BYTE byDiskNumber[MAX_DISKNUM_V30];/*dwAlarmType??1,4,5?㊣,㊣赤??????????, dwDiskNumber[0]??????1??????*/
	BYTE byDeviceID[NAME_LEN];/*?豕㊣???ID??*/
	BYTE byRes[7];
}NET_DVR_PUSHALARMINFO_V30, *LPNET_DVR_PUSHALARMINFO_V30;

//2011-04-20
//????????
typedef struct tagNET_DVR_MB_AUTOWORKPARA
{
	/*?㊣?∼????????﹞??? 0:  ?∟??,  1:  ???㊣???迆,  2:  ℅????????迆*/
	BYTE    byCurPowerCtrlType;
	BYTE    byRes[3];
	NET_DVR_SCHEDTIME    struWorkTime[MAX_DAYS][2];
}NET_DVR_MB_AUTOWORKPARA, *LPNET_DVR_MB_AUTOWORKPARA;

typedef struct tagNET_DVR_MB_POWERCTRLPARA
{
	DWORD    dwSize;
	DWORD     dwHaltDelay; /* ???迆?????㊣??,????min */
	NET_DVR_MB_AUTOWORKPARA  struAutoWorkPara;/*?????????角???????豕??*/
	BYTE       byEnableUnderVoltProtect;   /*??﹞??????﹞??㊣??∟*/
	BYTE       byUnderVoltPercent;   /*?﹞??㊣??∟∼?﹞?㊣?????85??90??95???????∫??*/
	BYTE       byRes[34];
}NET_DVR_MB_POWERCTRLPARA, *LPNET_DVR_MB_POWERCTRLPARA;
/*℅???1???????迆?????㊣??, ?????㊣???? 0??5﹞?????10﹞??? ??20﹞??? 25﹞??? 30﹞??? 35﹞??? 40﹞??? ??45 ﹞??? 50﹞??? ??60﹞??? ??60*2﹞??? ??60*3  60 *4   60*5  60*6 */

//℅???㊣?﹞?
typedef struct tagNET_DVR_MB_AUTOBACKUPPARA
{
	DWORD dwSize;
	BYTE  byEnableAutoBackup; /* ??﹞?????℅???㊣?﹞? 0 ??㊣? ??1 ???? */
	BYTE  byRes1[3];
	BYTE  byBackupChannel[MAX_CHANNUM_V30];     /*?豕??㊣?﹞????“??*/
	BYTE  byBackupDays[MAX_CHANNUM_V30];/*㊣?﹞??足??*/
										/* ㊣?﹞??????角??
										{0,ALL_RECORD_TYPE,????},
										{1,TIMING_REC,?“?㊣},
										{2,MOTION_DETECT_REC,?????足?? },
										{3,ALARM_REC,㊣“?? },
										{4,MANUAL_REC,????????}*/
	BYTE  byBackupFileType[MAX_CHANNUM_V30];
	NET_DVR_SCHEDTIME struBackupTime[MAX_CHANNUM_V30][2];    /* ℅???㊣?﹞??㊣????*/
	BYTE  byRes2[36];                        /* ㊣???℅???*/
}NET_DVR_MB_AUTOBACKUPPARA, *LPNET_DVR_MB_AUTOBACKUPPARA;


typedef struct tagNET_DVR_MB_GPSPARA
{
	DWORD dwSize;
	BYTE  byEnableGPS;    /*??﹞?????GPS */
	BYTE  byGpsInterface;/*gps????????0-rs232, 1-rs485, 2-frontpanel, 3-lcd */
	BYTE  bySpeedUnit;  /*??????????0??????/???㊣??1 ??????/???㊣*/
	BYTE  byEnableRetrieve; /* ?∟????﹞?(1??????0??????) */
	int      iAdjustTime;/*?㊣??*/
	BYTE  byEnableAdjustTime;/*??﹞?????GPS???㊣?? 1-????, 0-??????*/
	BYTE  byRes1[5];
	WORD  wGpsUploadInterval;    /* GPS????????, ??*/
	BYTE  byGpsOsdChannel[MAX_CHANNUM_V30];/*OSD ????????℅????迆㊣赤???﹞ */
	DWORD dwSpeedLimit;    /* ????㊣“??*/
	NET_DVR_HANDLEEXCEPTION_V30  struGpsAlarm;
	BYTE  byRes2[36];
}NET_DVR_MB_GPSPARA, *LPNET_DVR_MB_GPSPARA;
/*℅???1?????㊣??????????/???㊣ ?㊣﹞??∫???“0 ,965?????㊣????????/???㊣℅????????㊣?辰 ??℅??車????﹞??∫????0-600*/

#define         SENSOR_IN_NUMBER          8
typedef struct tagNET_DVR_MB_SENSORINPARA
{
	DWORD dwSize;
	BYTE  byTriggerType[SENSOR_IN_NUMBER];/*????℅????角????﹞??????????????車4????﹞?㊣??迆㊣赤??????℅車℅?????℅?????????0-????????1-??????*/
	BYTE  byTriggerChannel[SENSOR_IN_NUMBER];
	BYTE  byOsdDisplay[MAX_CHANNUM_V30];/*OSD????,?????迆㊣赤???﹞*/
	BYTE  byRes[32];
}NET_DVR_MB_SENSORINPARA, *LPNET_DVR_MB_SENSORINPARA;


typedef struct tagNET_DVR_ACCELERATIONCFG
{
	DWORD    dwMaxXAcc;    /* X?芍??????㊣“???? ??????????????????????10,℅?????0*/
	DWORD    dwMaxYAcc;    /* Y?芍??????㊣“???? ??????????????????????10.℅?????0*/
	DWORD    dwMaxZAcc;    /* Z?芍??????㊣“?????? ????????????????????10,℅?????0*/
	BYTE    byRes[4];
}NET_DVR_ACCELERATIONCFG, *LPNET_DVR_ACCERATIONCFG;

typedef struct tagNET_DVR_GSENSORPARA
{
	DWORD dwSize;
	NET_DVR_ACCELERATIONCFG struAccelerationCfg;
	BYTE  byModuleSelect;/*???谷??????0????/1????*/
	BYTE  byRes1[3];
	NET_DVR_HANDLEEXCEPTION_V30 struHandleException;
	BYTE  byRes2[24];    /*㊣???????℅???*/
}NET_DVR_GSENSORPARA, *LPNET_DVR_GSENSORPARA;

typedef struct tagNET_DVR_MB_DOWNLOADSVRPARA
{
	DWORD dwSize;
	NET_DVR_IPADDR    struDownloadSvrIp;        /* ℅???????﹞????‾???﹞ */
	BYTE  byRes[64];
}NET_DVR_MB_DOWNLOADSVRPARA, *LPNET_DVR_MB_DOWNLOADSVRPARA;

/* ??????㊣????角??????*/
typedef struct tagNET_DVR_PLATERECOG_PARA
{
	DWORD dwSize;
	BYTE byPrMode; /* ??????㊣???????, ????????0/????????1 */
	BYTE byPrScene; /* ??????㊣??????∼, ???????∼0/???????∼1 */
	BYTE byPrDetRect; /* 0:??????;1:???????辰 */
	BYTE byPrPicQuality; /* ??????㊣?﹞?????????????, 0:℅???/3:℅??? */
	BYTE byPrPicMode;/*??????㊣?﹞?????????﹞?㊣???: JPEG_MODE_D1, JPEG_MODE_CIF, JPEG_MODE_QCIF */
	BYTE byPlateOsdDisplay; /* ????OSD??﹞????? 0:??????/1:???? */
	BYTE byPrProvCharIndex;    /* ??????㊣???﹞??℅??℅????????‾?? */
	BYTE byPrProvCharIndex1;    /* ??????㊣??????℅??℅?1???????‾?? */
	BYTE byPrProvCharIndex2;    /* ??????㊣??????℅??℅?2???????‾?? */
	BYTE byRes[7];
}NET_DVR_PLATERECOG_PARA, *LPNET_DVR_PLATERECOG_PARA;


/* ???????∟????,?????豕?????????芍??*/
typedef struct tagNET_DVR_SPEEDLMT_PARA
{
	BYTE    bStartMaxSpeedLimit;        /* ???????????? */
	BYTE    bStartMinSpeedLimit;        /* ???????????? */
	BYTE    byRes[6];
	DWORD    dwMaxSpeedLimit;                /* ℅??????? */
	DWORD    dwMinSpeedLimit;                /* ℅??????? */
}NET_DVR_SPEEDLMT_PARA, *LPNET_DVR_SPEEDLMT_PARA;

/* ???????∟????,????㊣??????????芍??*/
typedef struct tagNET_DVR_PLATECHECK_PARA
{
	BYTE    bAlarmWhenChecked;            /* ?邦?谷??????﹞?㊣“?? */
	BYTE    bInformWhenChecked;            /* ?邦?谷??????﹞????∼?辰?芍?? */
	BYTE    byRes[6];
	NET_DVR_IPADDR struBlackFtpServer;            /* ??????FTP﹞????‾???﹞ */
}NET_DVR_PLATECHECK_PARA, *LPNET_DVR_PLATECHECK_PARA;

typedef struct tagNET_DVR_ENFORCESYS_PARA
{
	DWORD dwSize;
	NET_DVR_SPEEDLMT_PARA    struSpeedLmtPara;    /*?????豕??*/
	NET_DVR_PLATECHECK_PARA struPlateCheckPara;    /*????㊣???*/
	BYTE    bySelPeccType;    /*??﹞??????????角??*/
	BYTE    byEnfOptHabit; /*???∟??℅‾?∼??, 0:?∟∼????∟;1:??∼????????∟*/
						   /*?∟???????‾??????﹞???????
						   A ??㊣? adjPrevFpsMode=0
						   ?????“??????(25FPS)?∟??
						   B ㊣那℅? adjPrevFpsMode=1
						   ?????“??????(6FPS)?∟??
						   C ℅????? adjPrevFpsMode=2
						   ?迄??GPS?????????????‾???∟????????
						   3???????∫GPS???谷???????????“???????∟??*/
	BYTE    byAdjPrevFpsMode;
	BYTE    byRes1;
	NET_DVR_IPADDR  struUploadServerIp; //????﹞????‾???﹞
	WORD    wUploadServerPort;
	BYTE    byRes2[18];
}NET_DVR_ENFORCESYS_PARA, *LPNET_DVR_ENFORCESYS_PARA;

typedef struct tagNET_DVR_PUSHMODEPARAM
{
	//?㊣????????UDP?∟????????1-???????角?﹞?‾??2-?????????﹞?‾
	BYTE byUdpPreviewMode;
	//?????????∟℅‾??????0-??????????1-????℅?﹞??“SDK????????????????????﹞???
	BYTE byVoiceWorkMode;
	BYTE byRes[18];
}NET_DVR_PUSHMODEPARAM, *LPNET_DVR_PUSHMODEPARAM;

#define MAX_ALARMHOST_ALARMIN_NUM            512//????㊣“???‾?迆℅??車㊣“??????????
#define MAX_ALARMHOST_ALARMOUT_NUM            512//????㊣“???‾?迆℅??車㊣“??????????

#define ALARMHOST_MAX_AUDIOOUT_NUM            32//????㊣“???‾?迆℅??車??????????
#define ALARMHOST_MAX_ELECTROLOCK_NUM        32//????㊣“???‾?迆℅??車??????
#define ALARMHOST_MAX_MOBILEGATE_NUM        32//????㊣“???‾?迆℅??車????????
#define ALARMHOST_MAX_SIREN_NUM             8 // ℅??車????????
#define MAX_ALARMHOST_SUBSYSTEM             32//㊣“???‾?迆℅??車℅???????
#define ALARMHOST_DETECTOR_SERIAL_LEN       9//㊣“???‾?迆?????????‾?辰?????∟??
#define ALARMHOST_DETECTOR_SERIAL_LEN_V50   16 //㊣“???‾?迆?????????‾?辰????V50?∟??
#define MAX_DETECTOR_NUM                    128//℅??車?????????‾??
#define MAX_DETECTOR_NUM_V51        256     //℅??車?????????‾??
#define MAX_REPEATER_NUM        16     //℅??車?????‾??
#define MAX_OUTPUT_MODULE_NUM        64     //℅??車???????谷??

//?????‾?角??
typedef enum tagSENSOR_TYPE
{
	SENSOR_TYPE_NONE = 0,                   // ??
	SENSOR_TYPE_TEMPERATURE = 1,            // ????
	SENSOR_TYPE_HUMIDITY,                  // ????
	SENSOR_TYPE_WINDSPEED,                  // ﹞???
	SENSOR_TYPE_GAS,                        // ????
	SENSOR_AC_VOLTAGE,                      // ???‾????
	SENSOR_AC_CURRENT,                      // ???‾???‾
	SENSOR_DC_VOLTAGE,                      // ?㊣?‾????
	SENSOR_DC_CURRENT,                      // ?㊣?‾???‾
	SENSOR_WATER_PRESSURE,                  // ????
	SENSOR_PRESSURE_TRANSMITTER,            // ????㊣????‾
	SENSOR_FLOW_TRANSMITTER,                // ?‾??㊣????‾
	SENSOR_WATER_LEAKAGE,                   // ?????????‾
	SENSOR_INTERGRATED_TEMPERATURE_DETECTOR,//????????㊣?
	SENSOR_ISOLATION_TEMPERATURE_DETECTOR,  //????????㊣?
	SENSOR_RESIDUAL_CHLORINE,               //?????角????
	SENSOR_TYPE_AC_TERMINAL = 16,           // AC??℅?              
	SENSOR_TYPE_AC_SOCKET = 17,             // AC??℅迄
	SENSOR_TYPE_HUMITURE,                   // ??????
	SENSOR_TYPE_FLOW,                       // ?‾??
	SENSOR_LIQUID_LEVEL,                    // ????
	SENSOR_TYPE_ARC,                        // ????
	SENSOR_TYPE_UNKNOW = 255                // ???“??
}SENSOR_TYPE;

typedef struct tagNET_DVR_SENSOR_INFO
{
	DWORD  dwSize;                 // ?芍?????車??
	BYTE    byName[NAME_LEN];    // ?????‾????
	BYTE    byEnable;               // ??﹞????? 
	BYTE    byValid;                // ??﹞????∫ ?????‾??????????(????????????????????????)
	BYTE    byType;                 // ???????角?? ????SENSOR_TYPE
	BYTE    byAlarmMode;//㊣“??????????????15-HHHH??14-HHHL??12-HHLL??8HLLL??0-LLLL??????1111?“????????????1110?“????????????1100?“????????????1000(????????)??0000(????????)
	float   fMeasureHigh;           // ????????
	float   fMeasureLow;            // ????????
	float    fAlarm1;           //㊣“????1,㊣“????1-4 ???????車
	float    fAlarm2;           //㊣“????2
	float    fAlarm3;           //㊣“????3
	float    fAlarm4;           //㊣“????4
	DWORD   dwOsdCfg;          //??????℅?﹞???????∼???㊣赤??0-15?????????“??1-16
	float    fSensitive;            // ?谷????㊣赤???㊣???㊣????㊣????????谷??????﹞??∫?㊣???辰㊣赤?????㊣??﹞??迆??㊣?????﹞??辰????????﹞??迆㊣??????????谷??????0.1???辰㊣赤???∼?車?足???????????????車??0.1?㊣???辰????????﹞??迆㊣????車??0.1???豕??????????????1???辰㊣赤??㊣???????1?㊣??㊣“??
	BYTE    bySensorStandard;    //?????‾??????0- 0~20mA??1- 0~5V??2- 0~2.5Mpa??3- 0~1.6Mpa??4- 0~5m
	BYTE    byChan;            //???????“????
	BYTE    byRes3[114];            // ㊣???℅???
}NET_DVR_SENSOR_INFO, *LPNET_DVR_SENSOR_INFO;

typedef struct tagNET_DVR_SIREN_PARAM
{
	DWORD   dwSize;                    // ?芍???車??
	BYTE    byName[NAME_LEN];        // ????
	WORD    wDelay;                    // ???????? ????????, ﹞??∫ 0~5599s 0㊣赤?????㊣??????
	BYTE    byRes1[2];
	DWORD   dwOverallEventJointSirenOn;        //???????????????????????????????角??∼???㊣赤????bit0-?‾?迆﹞???, bit1-?????邦?????㊣㊣“??,bit2-???‾????????bit3-??????????,bit4-???∼??????,bit5-?????????足??,bit6-?????????足??,  bit7-?邦??485??????bit8- WIFI?“????????bit9-RF????????????
	DWORD    dwSubsystemEventJointSirenOn[MAX_ALARMHOST_SUBSYSTEM/*32*/];//℅?????????????????????????????℅谷??㊣那㊣赤??℅???????????????????∼???㊣赤???????角????bit0-???㊣㊣“??
	BYTE    byRes2[448];  // ㊣???℅???????
}NET_DVR_SIREN_PARAM, *LPNET_DVR_SIREN_PARAM;

typedef struct tagNET_DVR_AIR_CONDITION_PARAM
{
	DWORD    dwSize;        // ?芍?????車??
	BYTE    byEnable;    // 0--???迆 1--???迆
	BYTE    byMode;        // ???‾????
	BYTE    byTemperature;    // ????????????㊣赤?? ?“????16-30??
	BYTE    byRes[9];        // ㊣???℅???
}NET_DVR_AIR_CONDITION_PARAM, *LPNET_DVR_AIR_CONDITION_PARAM;

typedef enum tagDETECTOR_TYPE
{
	PANIC_BUTTON = 0,               // ???㊣∼???
	MAGNETIC_CONTACT,               // ????
	SMOKE_DETECTOR,                 // ?????????‾
	ACTIVE_INFRARED_DETECTOR,       // ?‾???足???????‾
	PASSIVE_INFRARED_DETECTOR,      // ㊣????足???????‾
	GLASS_BREAK_DETECTOR,           // ???∫???谷?????‾
	VIBRATION_DETECTOR,             // ?????????‾
	DUAL_TECHNOLOGY_PIR_DETECTOR,   // ?????????‾
	TRIPLE_TECHNOLOGY_PIR_DETECTOR, // ???????????‾
	HUMIDITY_DETECTOR,              // ?????????‾
	TEMPERATURE_DETECTOR,           // ?????????‾
	COMBUSTIBLE_GAS_DETECTOR,        // ?????????????‾
	DYNAMIC_SWITCH,                    //????????
	CONTROL_SWITCH,                    //????????
	SMART_LOCK,                        //??????
	WATER_DETECTOR,                 //?????????‾
	DISPLACEMENT_DETECTOR,    //?????????‾
	SINGLE_INFRARED_DETECTOR,    //?????????????‾
	SINGLE_ZONE_MODULE,    //??????﹞??????谷
	CURTAIN_INFRARED_DETECTOR,   //???㊣?足???????????‾19
								 //20
								 DOORBELL_SWITCH = 21,              //????????21
								 MEDICAL_HELP_BUTTON,			//?????車?迆∼???
								 OUTDOOR_DUAL_TECH,				//?????????????‾

								 OTHER_DETECTOR = 0xffff          // ???邦?????‾   
}DETECTOR_TYPE;

typedef struct tagNET_DVR_ALARMIN_PARAM
{
	DWORD   dwSize;
	BYTE    byName[NAME_LEN];
	WORD    wDetectorType; // DETECTOR_TYPE
	BYTE    byType;     //﹞????角????0:???㊣﹞???,1-24???㊣﹞???,2-???㊣﹞??? ,3-????﹞?????4-???℅﹞??? 5-????﹞??? 6-????﹞??? 7-24???㊣???迄﹞???  8-24???㊣?“?迆﹞?????9-24???㊣????﹞???,10-???????㊣????﹞?????11-???????㊣????﹞??? ??12-???㊣﹞?????13-???㊣﹞?????0xff-??
	BYTE    byUploadAlarmRecoveryReport;    //??﹞?????﹞???㊣“??????㊣“????0-????????1-????        
	DWORD    dwParam;    // ﹞???????  ???㊣﹞??????㊣?角?∟?㊣??, ???﹞㊣“???‾?迆??℅??迆??㊣“???‾?迆?????㊣?㊣???“?????????????豕?? , ???????????豕??﹞????“????????????bySupportAlarmInDelay℅???????㊣?
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT];/*??﹞??㊣???㊣????*/
	BYTE    byAssociateAlarmOut[MAX_ALARMHOST_ALARMOUT_NUM];  // ㊣“??????????㊣“??????
	BYTE    byAssociateSirenOut[8];        //  ???????? ??℅谷0 ㊣赤??????1 ????1㊣赤?????? 0 ㊣赤????????
	BYTE    bySensitivityParam;//﹞????谷????????, 0-10ms??1-250ms??2-500ms??3-750ms
	BYTE    byArrayBypass;//??﹞????????﹞℅谷,0-???∫??℅谷???﹞,1-?∫??℅谷???﹞
	BYTE    byJointSubSystem; //﹞????迄????℅???????????????????????  
	BYTE    byModuleStatus;    //???谷℅??? 1-???? 2-????
	WORD    wModuleAddress;    //???谷???﹞?????????谷??0~255??0xFFFF㊣赤?????∫
	BYTE    byModuleChan;    //???谷?“????????1??????℅??車???迄?????谷?角???????“??0xFF㊣赤?????∫
	BYTE    byModuleType;    //???谷?角????1-㊣???﹞?????2-??﹞?????3-??﹞?????4-8﹞?????5-8?﹞??????﹞???, 6-??﹞?????﹞??‾, 7-1???????????‾??8-2???????????‾??9-4???????????‾??10-8﹞?????????11-?邦????12-8﹞?????????13-????﹞???
	WORD    wZoneIndex;        //﹞?????????????????????      
	WORD    wInDelay;    //???????㊣??0-255??
	WORD    wOutDelay;    //???????㊣??0-255??
	BYTE    byAlarmType;     //㊣“???‾?角?? 0-???∫??1-??????2-??㊣?
	BYTE    byZoneResistor;    //﹞?????℅豕???????∫?﹞  0-???∫ 1--2.2 ??2--3.3??3--4.7??4--5.6 ?? 5--8.2 ??0xff-℅??“??
	float    fZoneResistorManual;/*﹞?????????℅豕??1.0-10.0?????﹞?????????車???????????∫?﹞??byZoneResistor??0xff?㊣???∫*/
	BYTE    byDetectorSerialNo[ALARMHOST_DETECTOR_SERIAL_LEN]; //?????‾?辰??????????
	BYTE    byZoneSignalType;    //﹞????????????角??(????)??0-????﹞?????1-????﹞???
	BYTE    byDisableDetectorTypeCfg;    //???????角????﹞?????????0-??????1-??????
	BYTE    byTimeOutRange;      // ???㊣?㊣??﹞??∫??0:1~599s,1:1~65535s
	BYTE    byAssociateLampOut[8];//  ???????? ??℅谷0 ㊣赤??????1 ????1㊣赤?????? 0 ㊣赤????????
	WORD   wTimeOut;  //???㊣?㊣??????
	BYTE    byDetectorSignalIntensity;      // ?????‾?????????“????????0~100
	BYTE    byTimeOutMethod;    //???㊣﹞??????㊣﹞?????0-??﹞????㊣??1-???????㊣
	BYTE    byRes3[8];      // ㊣???℅???
}NET_DVR_ALARMIN_PARAM, *LPNET_DVR_ALARMIN_PARAM;

typedef struct tagNET_DVR_ALARMIN_PARAM_V50
{
	DWORD   dwSize;
	BYTE    byName[NAME_LEN];
	WORD    wDetectorType; // DETECTOR_TYPE
	BYTE    byType;     //﹞????角????0:???㊣﹞???,1-24???㊣﹞???,2-???㊣﹞??? ,3-????﹞?????4-???℅﹞??? 5-????﹞??? 6-????﹞??? 7-24???㊣???迄﹞???  8-24???㊣?“?迆﹞?????9-24???㊣????﹞??? ??12-???㊣﹞?????13-???㊣﹞?????14-????﹞?????0xff-??
	BYTE    byUploadAlarmRecoveryReport;    //??﹞?????﹞???㊣“??????㊣“????0-????????1-????        
	DWORD    dwParam;    // ﹞???????  ???㊣﹞??????㊣?角?∟?㊣??, ???﹞㊣“???‾?迆??℅??迆??㊣“???‾?迆?????㊣?㊣???“?????????????豕?? , ???????????豕??﹞????“????????????bySupportAlarmInDelay℅???????㊣?
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT];/*??﹞??㊣???㊣????*/
	BYTE    byAssociateAlarmOut[MAX_ALARMHOST_ALARMOUT_NUM];  // ㊣“??????????㊣“??????
	BYTE    byAssociateSirenOut[8];        //  ???????? ??℅谷0 ㊣赤??????1 ????1㊣赤?????? 0 ㊣赤????????
	BYTE    bySensitivityParam;//﹞????谷????????, 0-10ms??1-250ms??2-500ms??3-750ms
	BYTE    byArrayBypass;//??﹞????????﹞℅谷,0-???∫??℅谷???﹞,1-?∫??℅谷???﹞
	BYTE    byJointSubSystem; //﹞????迄????℅???????????????????????  
	BYTE    byModuleStatus;    //???谷℅??? 1-???? 2-????
	WORD    wModuleAddress;    //???谷???﹞?????????谷??0~255??0xFFFF㊣赤?????∫
	BYTE    byModuleChan;    //???谷?“????????1??????℅??車???迄?????谷?角???????“??0xFF㊣赤?????∫
	BYTE    byModuleType;    //???谷?角????1-㊣???﹞?????2-??﹞?????3-??﹞?????4-8﹞?????5-8?﹞??????﹞???, 6-??﹞?????﹞??‾, 7-1???????????‾??8-2???????????‾??9-4???????????‾??10-8﹞?????????11-?邦????12-8﹞?????????13-????﹞???
	WORD    wZoneIndex;        //﹞?????????????????????      
	WORD    wInDelay;    //???????㊣??0-255??
	WORD    wOutDelay;    //???????㊣??0-255??
	BYTE    byAlarmType;     //㊣“???‾?角?? 0-???∫??1-??????2-??㊣?
	BYTE    byZoneResistor;    //﹞?????℅豕???????∫?﹞  0-???∫ 1--2.2 ??2--3.3??3--4.7??4--5.6 ?? 5--8.2 ??0xff-℅??“??
	float    fZoneResistorManual;/*﹞?????????℅豕??1.0-10.0?????﹞?????????車???????????∫?﹞??byZoneResistor??0xff?㊣???∫*/
	BYTE    byDetectorSerialNo[ALARMHOST_DETECTOR_SERIAL_LEN_V50]; //?????‾?辰??????????
	BYTE    byZoneSignalType;    //﹞????????????角??(????)??0-????﹞?????1-????﹞???
	BYTE    byDisableDetectorTypeCfg;    //???????角????﹞?????????0-??????1-??????
	WORD   wTimeOut;  //???㊣?㊣??????    
	BYTE    byAssociateLampOut[8];//  ???????? ??℅谷0 ㊣赤??????1 ????1㊣赤?????? 0 ㊣赤????????
	BYTE    byVoiceFileName[32];   //??????????
	BYTE    byTimeOutRange;      // ???㊣?㊣??﹞??∫??0:1~599s,1:1~65535s
	BYTE    byDetectorSignalIntensity;      // ?????‾?????????“????????0~100
	BYTE    byTimeOutMethod;    //???㊣﹞??????㊣﹞?????0-??﹞????㊣??1-???????㊣
	BYTE    byAssociateFlashLamp;//  ?????????? 0-???∫??1-????????2-????
	BYTE    byStayAwayEnabled;//  ?∼?㊣﹞??????????﹞???? 0-???∫??1-????????2-????
	BYTE    bySilentModeEnabled;//  ???????????? 0-???∫??1-????????2-????
	BYTE    byRes[2];
	BYTE    byDetectorVersion[VERSION_INFO_LEN];   //?????‾∼?㊣???????
	BYTE    byDetectorMAC[MACADDR_LEN];    //?????‾MAC???﹞??????
	BYTE    byLinkageAlarmType;    //????㊣“???角????1-??????2-?角????3-??????4-??㊣???5-????
	BYTE    byRes3[465];  // ㊣???℅???
}NET_DVR_ALARMIN_PARAM_V50, *LPNET_DVR_ALARMIN_PARAM_V50;

#define MAX_MAX_ALARMIN_NUM            64    /* ?迆??????℅??車﹞?????*/
typedef    struct tagNET_DVR_MULTI_ALARMIN_COND
{
	DWORD    dwSize;
	int        iZoneNo[MAX_MAX_ALARMIN_NUM];    //﹞?????,??0??????????0㊣赤?????∫
	BYTE    byRes[256];
}NET_DVR_MULTI_ALARMIN_COND, *LPNET_DVR_MULTI_ALARMIN_COND;

typedef struct tagNET_DVR_SINGLE_ALARMIN_PARAM
{
	DWORD   dwSize;
	WORD    wZoneNo;        //﹞?????????????????????
	BYTE    byJointSubSystem; //﹞????迄????℅??????????????????????? 
	BYTE    byType;            //﹞????角????0:???㊣﹞???,1-24???㊣﹞???,2-???㊣﹞??? ,3-????﹞?????4-???℅﹞??? 5-????﹞??? 6-????﹞??? 7-24???㊣???迄﹞???  8-24???㊣?“?迆﹞?????9-24???㊣????﹞???,12-???㊣﹞???,13-???㊣﹞???14-????﹞?????0xff-??
	BYTE    byName[NAME_LEN];
	WORD    wDetectorType;    // DETECTOR_TYPE
	WORD    wInDelay;        //???????㊣??0-255??
	WORD    wOutDelay;        //???????㊣??0-255??
	BYTE    byAlarmType;    //㊣“???‾?角??  0-???∫ 1-???? 1-??㊣?
	BYTE    byZoneSignalType;    //﹞????????????角????0-????﹞?????1-????﹞???
	BYTE    byDetectorSerialNo[ALARMHOST_DETECTOR_SERIAL_LEN]; //?????‾?辰??????????
	BYTE    byDisableDetectorTypeCfg;    //???????角????﹞?????????0-??????1-??????
	BYTE    byTimeOutRange;      // ???㊣?㊣??﹞??∫??0:1~599s,1:1~65535s
	BYTE    byDetectorSignalIntensity;      // ?????‾?????????“????????0~100
	WORD   wTimeOut;  //???㊣?㊣??????
	BYTE    byTimeOutMethod;    //???㊣﹞??????㊣﹞?????0-??﹞????㊣??1-???????㊣
	BYTE    byAssociateFlashLamp;//  ?????????? 0-???∫??1-????????2-????
	BYTE    byStayAwayEnabled;//  ?∼?㊣﹞??????????﹞???? 0-???∫??1-????????2-????
	BYTE    bySilentModeEnabled;//  ???????????? 0-???∫??1-????????2-????
	BYTE    byRes2[110];    // ㊣???℅???
}NET_DVR_SINGLE_ALARMIN_PARAM, *LPNET_DVR_SINGLE_ALARMIN_PARAM;

typedef struct tagNET_DVR_SINGLE_ALARMIN_PARAM_V50
{
	DWORD   dwSize;
	WORD    wZoneNo;        //﹞?????????????????????
	BYTE    byJointSubSystem; //﹞????迄????℅??????????????????????? 
	BYTE    byType;            //﹞????角????0:???㊣﹞???,1-24???㊣﹞???,2-???㊣﹞??? ,3-????﹞?????4-???℅﹞??? 5-????﹞??? 6-????﹞??? 7-24???㊣???迄﹞???  8-24???㊣?“?迆﹞?????9-24???㊣????﹞???,12-???㊣﹞???,13-???㊣﹞???14-????﹞?????0xff-??
	BYTE    byName[NAME_LEN];
	WORD    wDetectorType;    // DETECTOR_TYPE
	WORD    wInDelay;        //???????㊣??0-255??
	WORD    wOutDelay;        //???????㊣??0-255??
	BYTE    byAlarmType;    //㊣“???‾?角??  0-???∫ 1-???? 1-??㊣?
	BYTE    byZoneSignalType;    //﹞????????????角????0-????﹞?????1-????﹞???
	BYTE    byDetectorSerialNo[ALARMHOST_DETECTOR_SERIAL_LEN]; //?????‾?辰??????????
	BYTE    byDisableDetectorTypeCfg;    //???????角????﹞?????????0-??????1-??????
	BYTE    byTimeOutRange;      // ???㊣?㊣??﹞??∫??0:1~599s,1:1~65535s
	BYTE    byDetectorSignalIntensity;      // ?????‾?????????“????????0~100
	WORD   wTimeOut;  //???㊣?㊣??????
	BYTE    byTimeOutMethod;    //???㊣﹞??????㊣﹞?????0-??﹞????㊣??1-???????㊣
	BYTE    byAssociateFlashLamp;//  ?????????? 0-???∫??1-????????2-????
	BYTE    byStayAwayEnabled;//  ?∼?㊣﹞??????????﹞???? 0-???∫??1-????????2-????
	BYTE    bySilentModeEnabled;//  ???????????? 0-???∫??1-????????2-????
	BYTE    byRes3[2];
	BYTE    byAssociateAlarmOut[MAX_ALARMHOST_ALARMOUT_NUM];  // ㊣“??????????㊣“??????
	BYTE    byRes2[128];    // ㊣???℅???
}NET_DVR_SINGLE_ALARMIN_PARAM_V50, *LPNET_DVR_SINGLE_ALARMIN_PARAM_V50;

typedef struct tagNET_DVR_ALARMIN_PARAM_LIST
{
	DWORD    dwSize;
	NET_DVR_SINGLE_ALARMIN_PARAM    struSingleAlarmInParam[MAX_MAX_ALARMIN_NUM];
	BYTE    byRes[128];
}NET_DVR_ALARMIN_PARAM_LIST, *LPNET_DVR_ALARMIN_PARAM_LIST;

typedef struct tagNET_DVR_ALARMIN_PARAM_LIST_V50
{
	DWORD	dwSize;
	NET_DVR_SINGLE_ALARMIN_PARAM_V50	struSingleAlarmInParam[MAX_MAX_ALARMIN_NUM];
	BYTE	byRes[128];
}NET_DVR_ALARMIN_PARAM_LIST_V50, *LPNET_DVR_ALARMIN_PARAM_LIST_V50;

typedef struct tagNET_DVR_ALARMOUT_PARAM
{
	DWORD   dwSize;             // ?芍?????車??
	BYTE    byName[NAME_LEN];   // ????
	WORD    wDelay;             // ???????? ????s, ﹞??∫??0~3599s 0 ㊣赤?????㊣??????
	WORD    wTriggerIndex;        //??﹞??‾??????????????????
	BYTE    byAssociateAlarmIn[MAX_ALARMHOST_ALARMIN_NUM];   //㊣赤???????迆????㊣“???????“?? ?“?角??㊣“?????????㊣??﹞?????????????????℅谷??㊣那0㊣赤??㊣“??????1???????角?? 0-???迆?? 1-?迆??
	BYTE    byModuleType;   //??????﹞??‾?角????1-㊣?????﹞??‾?? 2-4?﹞??﹞??‾??3-8?﹞??﹞??‾ 4-??﹞?????﹞??‾??5-32?﹞??﹞??‾??6-1???????????‾??7-2???????????‾??8-4???????????‾,9-2?﹞??﹞??‾??10-?邦????11-??????﹞??‾
	BYTE    byModuleStatus;    //??????﹞??‾℅??? 1-???? 2-????
	WORD    wModuleAddress;    //??????﹞??‾???﹞?????????谷??0~255??0xFFFF㊣赤?????∫
	BYTE    byModuleChan;    //??????﹞??‾?“????????1??????℅??車???迄?????谷?角???????“??0xFF㊣赤?????∫
	BYTE    byWorkMode;        //?∟℅‾??????1-??????2-????
	BYTE    byAlarmOutMode;    //??????????1-﹞???????????2-????????
	BYTE    byTimeOn;        //???㊣?? 1~60s
	BYTE    byTimeOff;        //???㊣?? 1~60s
	BYTE       byRes2[51];             //㊣???℅???
}NET_DVR_ALARMOUT_PARAM, *LPNET_DVR_ALARMOUT_PARAM;

typedef struct tagNET_DVR_ALARMIN_SETUP
{
	BYTE byAssiciateAlarmIn[MAX_ALARMHOST_ALARMIN_NUM];//㊣“???????“?? ??℅谷??㊣那0????㊣“????????1???????角??
	BYTE byRes[100];//㊣???℅???
}NET_DVR_ALARMIN_SETUP, *LPNET_DVR_ALARMIN_SETUP;

typedef struct tagNET_DVR_ALARMHOST_MAIN_STATUS
{
	DWORD  dwSize;
	BYTE   bySetupAlarmStatus[MAX_ALARMHOST_ALARMIN_NUM];//㊣“??????????﹞?℅?????(℅??車?∫??512??㊣“?????????谷??)??0-????㊣“?????????????﹞﹞?℅?????1-????㊣“??????????????﹞?℅???
	BYTE   byAlarmInStatus[MAX_ALARMHOST_ALARMIN_NUM];//㊣“????????㊣“??℅?????(℅??車?∫??512??㊣“?????????谷??)??0-????㊣“?????????㊣?∼??㊣“????1-????㊣“?????????㊣?∼??㊣“??
	BYTE   byAlarmOutStatus[MAX_ALARMHOST_ALARMOUT_NUM];//㊣“????????℅?????(℅??車?∫??512??㊣“?????????谷??)??0-????㊣“??????????㊣“????1-????㊣“??????????㊣“??
	BYTE   byBypassStatus[MAX_ALARMHOST_ALARMIN_NUM];  // ???﹞℅??? ??℅谷??㊣那㊣赤??0????㊣“????????1 0-㊣赤??㊣“???????????????﹞ 1-㊣赤??㊣“???????????﹞
	BYTE   bySubSystemGuardStatus[MAX_ALARMHOST_SUBSYSTEM]; //℅???????﹞?℅???,0-????℅??????????﹞﹞?℅?????1-????℅???????????﹞?℅???
	BYTE   byAlarmInFaultStatus[MAX_ALARMHOST_ALARMIN_NUM];//㊣“????????????℅?????0-????㊣“????????????????℅?????1-????㊣“????????????????℅???
	BYTE   byRes[56];      //  ㊣???℅???
}NET_DVR_ALARMHOST_MAIN_STATUS, *LPNET_DVR_ALARMHOST_MAIN_STATUS;

typedef struct tagNET_DVR_ALARMHOST_MAIN_STATUS_V40
{
	DWORD  dwSize;
	BYTE   bySetupAlarmStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞?????﹞?℅?????(℅??車?∫??512??﹞????谷??)??0-????﹞????????﹞﹞?℅?????1-????﹞?????????﹞?℅???
	BYTE   byAlarmInStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞???㊣“??℅?????(℅??車?∫??512??﹞????谷??)??0-????﹞????㊣?∼??㊣“????1-????﹞????㊣?∼??㊣“??
	BYTE   byAlarmOutStatus[MAX_ALARMHOST_ALARMOUT_NUM]; //??﹞??‾℅?????(℅??車?∫??512????﹞??‾?谷??)??0-??????﹞??‾??㊣“????1-??????﹞??‾??㊣“??
	BYTE   byBypassStatus[MAX_ALARMHOST_ALARMIN_NUM]; //???﹞℅??? ??℅谷??㊣那㊣赤??0????﹞???1 0-㊣赤??﹞??????????﹞ 1-㊣赤??﹞??????﹞
	BYTE   bySubSystemGuardStatus[MAX_ALARMHOST_SUBSYSTEM/*32*/]; //℅???????﹞?℅???,0-????℅??????????﹞﹞?℅?????1-????℅???????????﹞?℅???
	BYTE   byAlarmInFaultStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞???????℅?????0-????﹞???????????℅?????1-????﹞???????????℅???
	BYTE   byAlarmInMemoryStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞???㊣“??????℅????? 0-????﹞????㊣?∼??㊣“????1-????﹞????㊣?∼??㊣“??
	BYTE   byAlarmInTamperStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞???﹞???℅?????0-????﹞?????㊣“????1-????﹞?????㊣“??
	BYTE   byEnableSubSystem[MAX_ALARMHOST_SUBSYSTEM/*32*/]; //℅?????????℅?????0-???∫??1-????℅?????????????2-????℅?????????
	BYTE   bySubSystemGuardType[MAX_ALARMHOST_SUBSYSTEM]; //℅???????﹞?℅?????0-???∫??1-??????﹞???2-???㊣??﹞???3-??????﹞?
	BYTE   byRes[448]; //㊣???℅???
}NET_DVR_ALARMHOST_MAIN_STATUS_V40, *LPNET_DVR_ALARMHOST_MAIN_STATUS_V40;

typedef struct tagNET_DVR_ALARMHOST_MAIN_STATUS_V51
{
	DWORD  dwSize;
	BYTE   bySetupAlarmStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞?????﹞?℅?????(℅??車?∫??512??﹞????谷??)??0xff-???∫??0-????﹞????????﹞﹞?℅?????1-????﹞?????????﹞?℅?????2-????﹞?????????﹞???
	BYTE   byAlarmInStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞???㊣“??℅????“??﹞?℅???????(℅??車?∫??512??﹞????谷??)??0xff-???∫??0-????﹞????㊣?∼??㊣“????1-????﹞????㊣?∼??㊣“??
	BYTE   byAlarmOutStatus[MAX_ALARMHOST_ALARMOUT_NUM]; //??﹞??‾℅?????(℅??車?∫??512????﹞??‾?谷??)??0xff-???∫??0-??????﹞??‾??㊣“????1-??????﹞??‾??㊣“????2-????????3-??????4-?????足??
	BYTE   byBypassStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞??????﹞℅???????℅谷??㊣那㊣赤??0????﹞???1??0xff-???∫??0-㊣赤??﹞??????????﹞ 1-㊣赤??﹞??????﹞
	BYTE   bySubSystemGuardStatus[MAX_ALARMHOST_SUBSYSTEM/*32*/]; //℅???????﹞?℅?????0xff-???∫??0-????℅??????????﹞﹞?℅?????1-????℅???????????﹞?℅?????2-????℅???????????﹞???
	BYTE   byAlarmInFaultStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞???????℅?????0xff-???∫??0-????﹞???????????℅?????1-????﹞???????????℅???
	BYTE   byAlarmInMemoryStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞???㊣“??????℅????“㊣“??℅??????? 0xff-???∫??0-????﹞????㊣?∼??㊣“????1-????﹞????㊣?∼??㊣“??
	BYTE   byAlarmInTamperStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞???﹞???℅?????0xff-???∫??0-????﹞?????㊣“????1-????﹞?????㊣“??
	BYTE   byEnableSubSystem[MAX_ALARMHOST_SUBSYSTEM/*32*/]; //℅?????????℅?????0-???∫??1-????℅?????????????2-????℅?????????
	BYTE   bySubSystemGuardType[MAX_ALARMHOST_SUBSYSTEM]; //℅???????﹞??角????0-???∫??1-??????﹞???2-???㊣??﹞???3-??????﹞?
	BYTE   bySubSystemAlarm[MAX_ALARMHOST_SUBSYSTEM]; //℅?????㊣“??℅?????0-???∫??1-??????2-㊣“??
	BYTE   byAlarmOutCharge[MAX_ALARMHOST_ALARMOUT_NUM]; //??﹞??‾????℅?????(℅??車?∫??512????﹞??‾?谷??)??0-???∫??1-??????2-??????
	BYTE   byAlarmOutTamperStatus[MAX_ALARMHOST_ALARMOUT_NUM]; //??﹞??‾﹞???℅?????(℅??車?∫??512????﹞??‾?谷??)??0-???∫??1-﹞?????2-??﹞???
	BYTE   byAlarmInShieldedStatus[MAX_ALARMHOST_ALARMIN_NUM]; //﹞?????㊣?℅?????0-???∫??1-??㊣???2-﹞???㊣?
	BYTE   byAlarmOutLinkage[MAX_ALARMHOST_ALARMOUT_NUM]; //??﹞??‾?????????角????(℅??車?∫??512????﹞??‾?谷??)??0-???∫??1-㊣“????2-??﹞???3-?﹞﹞???4-????????
	BYTE   byRes[512]; //㊣???℅???
}NET_DVR_ALARMHOST_MAIN_STATUS_V51, *LPNET_DVR_ALARMHOST_MAIN_STATUS_V51;

typedef struct tagNET_DVR_ALARMHOST_OTHER_STATUS
{
	DWORD  dwSize;
	BYTE   bySirenStatus[ALARMHOST_MAX_SIREN_NUM];    // ????????℅??? 0-??????????㊣“??℅?????1-??????????㊣“??℅???
	BYTE   byRes[92];             // ㊣???℅???
}NET_DVR_ALARMHOST_OTHER_STATUS, *LPNET_DVR_ALARMHOST_OTHER_STATUS;

typedef struct tagNET_DVR_ALARMHOST_OTHER_STATUS_V50
{
	DWORD  dwSize;
	//????DS-PEA???????邦?????㊣㊣“???迆?﹞????℅谷??㊣那0????????℅???????℅谷??㊣那1????????℅???,??℅谷??㊣那2????????????????℅???
	BYTE   bySirenStatus[ALARMHOST_MAX_SIREN_NUM]; //????????℅?????0xff-???∫??0-??????????㊣“??℅?????1-??????????㊣“??℅?????2-????????3-??????4-?????足??
	BYTE   byDetetorPower[MAX_DETECTOR_NUM]; //?????‾????℅?????0xff-???∫??????????0-100??????????????20???﹞??℅???
	BYTE   byDetetorConnection[MAX_DETECTOR_NUM]; //?????‾????℅?????0xff-???∫??0-㊣赤????℅??芍??1-㊣赤?????????? 2-㊣赤????????3-?????足??
	BYTE   bySirenPower[ALARMHOST_MAX_SIREN_NUM]; //????????℅?????0-???∫??1-??????2-?﹞??
	BYTE   bySirenTamperStatus[ALARMHOST_MAX_SIREN_NUM]; //????﹞???℅?????0-???∫??1-﹞?????2-??﹞???
	BYTE   byPowerStausEnabled[MAX_DETECTOR_NUM / 8]; //?????‾????℅?????﹞????∫??∼???㊣赤????0-???∫??1-???∫
	BYTE   byDetetorPowerStatus[MAX_DETECTOR_NUM / 8]; //?????‾????℅?????∼???㊣赤????0-??????1-??????
	BYTE   byDetetorPowerType; //?????‾??????㊣赤???角????0-∼?????????㊣赤????????byDetetorPower ℅?????1-∼???????℅???㊣赤????????byPowerStausEnabled??byDetetorPowerStatus℅???
	BYTE   byRes[975]; //㊣???℅???
}NET_DVR_ALARMHOST_OTHER_STATUS_V50, *LPNET_DVR_ALARMHOST_OTHER_STATUS_V50;

typedef struct tagNET_DVR_ALARMHOST_OTHER_STATUS_V51
{
	DWORD   dwSize;
	//????DS-PEA???????邦?????㊣㊣“???迆?﹞????℅谷??㊣那0????????℅???????℅谷??㊣那1????????℅???,??℅谷??㊣那2????????????????℅???
	BYTE    bySirenStatus[ALARMHOST_MAX_SIREN_NUM]; //????????℅?????0xff-???∫??0-??????????㊣“??℅?????1-??????????㊣“??℅?????2-????????3-????
	BYTE    byDetetorPower[MAX_DETECTOR_NUM_V51]; //?????‾??????0xff-???∫??????????0-100??????????????20???﹞??℅?????byDetetorPowerType??0?㊣???∫
	BYTE    byDetetorConnection[MAX_DETECTOR_NUM_V51]; //?????‾????℅?????0xff-???∫??0-㊣赤????℅??芍??1-㊣赤?????????? 2-㊣赤??????
	BYTE    bySirenPower[ALARMHOST_MAX_SIREN_NUM]; //????????℅?????0-???∫??1-??????2-?﹞??
	BYTE    bySirenTamperStatus[ALARMHOST_MAX_SIREN_NUM]; //????﹞???℅?????0-???∫??1-﹞?????2-??﹞???
	BYTE    byPowerStausEnabled[MAX_DETECTOR_NUM_V51 / 8]; //?????‾????℅?????﹞????∫??∼???㊣赤????0-???∫??1-???∫
	BYTE    byDetetorPowerStatus[MAX_DETECTOR_NUM_V51 / 8]; //?????‾????℅?????∼???㊣赤????0-??????1-??????
	BYTE    byDetetorPowerType; //?????‾??????㊣赤???角????0-∼?????????㊣赤????????byDetetorPower ℅?????1-∼???????℅???㊣赤????????byPowerStausEnabled??byDetetorPowerStatus℅???
	BYTE    byRes2[3];
	BYTE    byRepeaterStatus[MAX_REPEATER_NUM];    //?????‾℅?????0-???∫??1-??????2-??????3-??????
	BYTE    byRepeaterTamperStatus[MAX_REPEATER_NUM / 8];    //?????‾﹞???℅?????∼???㊣赤????0-?????????‾??㊣“????1-?????????‾??㊣“??
	BYTE    byAlarmOutTamperStatus[MAX_ALARMHOST_ALARMOUT_NUM / 8];    //㊣“???????“?????‾??﹞???℅?????∼???㊣赤????0-????㊣“????????㊣“????1-????㊣“????????㊣“??
	BYTE    byOutputModuleTamperStatus[MAX_OUTPUT_MODULE_NUM / 8];    //???????谷﹞???℅?????∼???㊣赤????0-???????????谷??㊣“????1-???????????谷??㊣“??
	BYTE    byRes[338]; //㊣???℅???
}NET_DVR_ALARMHOST_OTHER_STATUS_V51, *LPNET_DVR_ALARMHOST_OTHER_STATUS_V51;


//????℅???????
typedef struct tagNET_DVR_ALARMHOST_ENABLECFG
{
	DWORD dwSize;
	BYTE  byAudioOutEnable[ALARMHOST_MAX_AUDIOOUT_NUM];//??????????????0-??????1-????
	BYTE  byElectroLockEnable[ALARMHOST_MAX_ELECTROLOCK_NUM];//??????????0-??????1-????
	BYTE  byMobileGateEnable[ALARMHOST_MAX_MOBILEGATE_NUM];//????????????0-??????1-????
	BYTE  bySirenEnable[ALARMHOST_MAX_SIREN_NUM];//?????????? 0-??????1-????
	BYTE  bySerialPurpose;//??????????0-????????㊣“???‾?迆??1-????PTZ????
	BYTE  byRes[63];
}NET_DVR_ALARMHOST_ENABLECFG, *LPNET_DVR_ALARMHOST_ENABLECFG;

typedef struct tagNET_DVR_ALARMHOST_ABILITY
{
	DWORD   dwSize;                      // ?芍?????車??
	WORD    wTotalAlarmInNum;         // ㊣“????????℅???(﹞???),∼邦?“????
	WORD    wLocalAlarmInNum;         // ㊣???㊣“????????
	WORD    wExpandAlarmInNum;        // ????????㊣“????????
	WORD    wTotalAlarmOutNum;        // ㊣“????????℅??? ?“?豕㊣??∫????℅?????
	WORD    wLocalAlarmOutNum;        // ㊣???㊣“????????????
	WORD    wExpandAlarmOutNum;       // ????????㊣“????????
	WORD    wTotalRs485Num;           // ㊣“????????℅??? ?“?豕㊣??∫????℅?????
	WORD    wLocalRs485Num;           // ㊣???485????
	WORD    wExpandRs485Num;          // ????????485????
	WORD    wFullDuplexRs485Num;    // ?????∟??485????
	WORD    wTotalSensorNum;          // ??????℅??車???? (?豕㊣??∫????℅???)
	WORD    wLocalSensorNum;        // ㊣?????????????
	WORD    wExpandSensorNum;         // ??????????????????
	WORD    wAudioOutNum;                //????????????
	WORD    wGatewayNum;            //????????
	WORD    wElectroLockNum;            //????????
	WORD    wSirenNum;                 // ?‾?迆????????
	WORD    wSubSystemNum;            // ????﹞?℅?????????
	WORD    wNetUserNum;            // ???????∫??
	WORD    wKeyboardNum;           // ?邦????
	WORD    wOperatorUserNum;           // ??℅‾???∫??
	BYTE    bySupportDetector;//??﹞??∫??????????㊣??????‾??1-?∫????0-???∫??
	BYTE    bySupportSensitivity;//??﹞??∫??﹞????谷??????1-?∫????0-???∫??
	BYTE    bySupportArrayBypass;//??﹞??∫??℅谷???﹞??1-?∫????0-???∫??
	BYTE    bySupportAlarmInDelay;//??﹞??∫??﹞???????,1-?∫????0-???∫??
								  //????bySupportAlarmInDelay??1?㊣??㊣赤?????∫??????????NET_DVR_ALARMIN_PARAM ????dwParam???豕?????㊣?㊣???????﹞㊣“???‾?迆??℅??迆??㊣“???‾?迆???????????????㊣﹞???;
								  //????bySupportAlarmInDelay??0?㊣??㊣赤???“??NET_DVR_ALARMSUBSYSTEMPARAM ????wEnterDelay ??wExitDelay ???豕??
	BYTE    bySupportAlarmInType[16];//?∫????﹞????角??,??℅谷0:???㊣﹞???,1-24???㊣﹞???,2-???㊣﹞??? ,3-????﹞?????4-???℅﹞??? 5-????﹞??? 6-????﹞??? 7-24???㊣???迄﹞??? 8-24???㊣?“?迆﹞?????9-24???㊣????﹞???,10-???????㊣????﹞?????11-???????㊣????﹞???15-??
	BYTE    byTelNum;        //?∫?????∼????
	BYTE    byCenterGroupNum;    //????℅谷????
	BYTE    byGPRSNum;        //GPRS????????℅??角4??
	BYTE    byNetNum;        //????????????℅??角4??
	BYTE    byAudioNum;        //????????
	BYTE    by3GNum;        //3G???谷????
	BYTE    byAnalogVideoChanNum;        //?????????“??????
	BYTE    byDigitalVideoChanNum;        //??℅??????“??????
	BYTE    bySubSystemArmType;        //℅???????﹞??角????0-㊣赤?????∫????1-㊣赤???∫????bit0-???“??﹞??“℅??????????‾?迆???∫?????“??﹞???????????????????℅??????㊣?辰???????‾?迆????﹞??????迄?????????‾?迆????℅?????0???迄????0㊣赤???∫????1㊣赤?????∫??????????????SDK?????芍℅?????????bit1-???㊣??﹞???bit2-??????﹞???    
	BYTE    byPublicSubSystemNum;    //????℅?????????
	DWORD    dwSupport1;    //∼???㊣赤?????芍??﹞?0㊣赤???∫????0㊣赤?????∫??
							// bit0:     ??﹞??∫??℅????????????????????㊣?????????∫???辰?????????㊣????????℅????????????????????∫?????????㊣?????????????????????豕??
							// bit1:    ??﹞??∫????????﹞?㊣“??????????
							// bit2:    ??﹞??∫????????﹞?㊣“????????㊣?
							// bit3:    ??﹞??∫??℅?????????
							// bit4;    ??﹞??∫??﹞?????﹞?
							// bit5;    ??﹞??∫??℅?????℅??????﹞﹞?
							// bit6:    ??﹞??∫???????????????迄??????
							// bit7:    ??﹞??∫??????℅????谷??
							// bit8:    ??﹞??∫??℅?????????????
							// bit9:    ??﹞??∫?????℅﹞?????℅‾℅?????
							// bit10:   ??﹞??∫??"?邦???芍??????﹞???㊣“??"????
							// bit11:   ??﹞??∫??????????????????
							// bit12:   ??﹞??∫??LED????????????
							// bit13: ??﹞??∫??????????㊣?????????????
	DWORD    dwSubSystemEvent;        //℅???????????∼???㊣赤????0㊣赤?????∫????﹞?0㊣赤???∫??,bit0-???????㊣??bit1-???????㊣??bit2-??﹞???bit3-?﹞﹞???bit4-㊣“????bit5-????㊣“??????
	DWORD    dwOverallEvent;            //??????????∼???㊣赤????0㊣赤?????∫????﹞?0㊣赤???∫????bit0-???‾????????bit1-????????????bit2-???∼????????bit3-?????????足????bit4-?????????足????bit5-????????,bit6-3G/4G?????足??, bit7-?“???谷??????????﹞??‾?迆????,bit8-WIFI?“????????bit9-RF????????????
	DWORD    dwFaultType;            //?豕㊣??∫?????????角????bit0-???‾????????bit1-???????﹞????bit2-?‾?迆﹞???????bit3-???∼????????bit4-?‾?邦????????bit5-??????????bit6-?????足????bit7-????℅????足????bit8-?????足??    
	BYTE    byPublicSubsystemAssociateSubsystemNum;    //????℅?????????????℅?????????
	BYTE    byOverallKeyboard;    //?????邦??????
	WORD    wSafetyCabinSupport; //﹞??∟???????‾??????∼???㊣赤?????芍??﹞?0㊣赤???∫????0㊣赤?????∫??    
								 //bit0: ??﹞??∫??﹞??∟???????‾?∟℅‾????????
								 //bit1: ??﹞??∫?????????????‾?角??????
								 //bit2: ??﹞??∫?????㊣?????‾?????????“?????????㊣??????℅???㊣????足???㊣????
								 //bit3: ??﹞??∫???足???????????‾?????????“???“??
								 //bit4: ??﹞??∫??﹞??∟?????????㊣?㊣??????
	BYTE    by485SlotNum;        //485?谷????????
	BYTE    bySubSystemAttributeAbility;  // ??????1??????1??℅???????㊣?????
	WORD    wKeyboardAddrNum;      // ?邦?????﹞??
	BYTE     byAlarmLampNum;         //????????
	BYTE    byRes[117];            //  ㊣???℅???
}NET_DVR_ALARMHOST_ABILITY, *LPNET_DVR_ALARMHOST_ABILITY;

#define MAX_485CHAN                256    //485?“????
#define MAX_485SLOT                256    //485??????
typedef struct tagNET_DVR_485_SLOT_LIST_INFO
{
	DWORD        dwSize;
	BYTE        byAll;    //0-??????????????1-????????
	BYTE        byres[3];
	BYTE        byIndex[MAX_485SLOT];            //485??????
	BYTE           byRes[64];      //㊣???
}NET_DVR_485_SLOT_LIST_INFO, *LPNET_DVR_485_SLOT_LIST_INFO;

typedef struct tagNET_DVR_485LIST_INFO
{
	DWORD        dwSize;
	BYTE        byAll;    //0-??????????????1-????????
	BYTE        byres[3];
	BYTE        byIndex[MAX_485CHAN];            //485?“???? ??㊣那㊣赤???“????????0-㊣赤??????????1㊣赤??????
	BYTE       byRes[64];      //㊣???
}NET_DVR_485LIST_INFO, *LPNET_DVR_485LIST_INFO;

typedef struct tagNET_DVR_ALARM_RS485CFG
{
	DWORD   dwSize;                 // ?芍?????車??
	BYTE    sDeviceName[NAME_LEN];  // ?∼???豕㊣????? 
	WORD    wDeviceType;            // ?∼???豕㊣??角??,?“??NET_DVR_GetDeviceTypeList????
	WORD    wDeviceProtocol;        // ?∼???豕㊣????谷 ?“?????????谷??㊣赤????    
	DWORD   dwBaudRate;             //?“????(bps)??0-50??1-75??2-110??3-150??4-300??5-600??6-1200??7-2400??8-4800??9-9600??10-19200??11-38400??12-57600??13-76800??14-115.2k 
	BYTE    byDataBit;              // ????????????0-5????1-6????2-7????3-8?? 
	BYTE    byStopBit;              // ????????0-1????1-2?? 
	BYTE    byParity;               //??﹞????谷??0-?????谷??1-?????谷??2-?????谷 
	BYTE    byFlowcontrol;           // ??﹞??‾????0-????1-?赤?‾??,2-???‾?? 
	BYTE    byDuplex;                // 0 - ∼????∟1- ?????∟  ?????“??1???????????∟????????????∼????∟
	BYTE    byWorkMode;                // ?∟℅‾???? 0-?????“ 1-???‾?“??,2-??????3-???“?‾,4-????∼??????谷,0xfe-℅??“????0xff-????
	BYTE    byChannel;                //485?“????
	BYTE    bySerialType;            //?????角??: 0--485, 1--232
	BYTE    byMode;                 //???? 0-???????“?‾ 1-???????∫?? 2-???????????谷 3-?????????‾?迆 0xff-????
	BYTE    byRes[35];              // ㊣???℅???
}NET_DVR_ALARM_RS485CFG, *LPNET_DVR_ALARM_RS485CFG;

#define MAX_DEVICE_PROTO_NUM       256
#define MAX_DEVICE_TYPE_NUM            256

// 485?∼???豕㊣??∫?????谷??㊣赤
typedef struct tagNET_DVR_DEVICE_PROTO_LIST
{
	DWORD   dwSize;             // ?芍?????車??
	DWORD   dwProtoNum;         // ???谷????
	NET_DVR_PROTO_TYPE struProtoType[MAX_DEVICE_PROTO_NUM];  // ???谷?角??
	BYTE    byRes[12];          // ㊣???℅???
}NET_DVR_DEVICE_PROTO_LIST, *LPNET_DVR_DEVICE_PROTO_LIST;

typedef struct tagNET_DVR_DEVICE_TYPE
{
	DWORD    dwType;
	BYTE    byDescribe[DESC_LEN];
}NET_DVR_DEVICE_TYPE, *LPNET_DVR_DEVICE_TYPE;

typedef struct tagNET_DVR_DEVICE_TYPE_LIST
{
	DWORD    dwSize;                // ?芍?????車??
	DWORD    dwTypeNum;            // ?角??????
	NET_DVR_DEVICE_TYPE struDeviceType[MAX_DEVICE_TYPE_NUM];
	BYTE    byRes[12];
}NET_DVR_DEVICE_TYPE_LIST, *LPNET_DVR_DEVICE_TYPE_LIST;

#define    MAX_ALARMHOST_VIDEO_CHAN    64
typedef struct tagNET_DVR_ALARM_DEVICE_USER
{
	DWORD  dwSize;                 // ?芍?????車??
	BYTE   sUserName[NAME_LEN];    // ???∫??
	BYTE   sPassword[PASSWD_LEN];    // ????
	NET_DVR_IPADDR    struUserIP;                    /* ???∫IP???﹞(??0?㊣㊣赤?????赤???????﹞) */
	BYTE   byMACAddr[MACADDR_LEN];            /* ???赤???﹞ */
	BYTE   byUserType; // 0-???“???∫ 1-???赤?㊣???∫
	BYTE   byAlarmOnRight;         // ??﹞??“??
	BYTE   byAlarmOffRight;        // ?﹞﹞??“??
	BYTE   byBypassRight;          // ???﹞?“??
	BYTE   byOtherRight[MAX_RIGHT];  // ?????“??
									 // 0 -- ?????“??
									 // 1 -- ???????迆
									 // 2 -- ?????豕???“??
									 // 3 --    ?????????“??
									 // 4 -- ?????????????“??
									 // 5 -- ?????????“??
									 // 6 -- PTZ ?????“??
									 // 7 -- ?????????“??
									 // 8 -- ?????∟??
									 // 9 -- ????????????
									 // 10 -- ??????﹞?
	BYTE    byNetPreviewRight[MAX_ALARMHOST_VIDEO_CHAN / 8];    // ?????????∟?????“????∼???㊣赤???‾?“???“bit0-channel 1????1-???“????0-???“??
	BYTE    byNetRecordRight[MAX_ALARMHOST_VIDEO_CHAN / 8];    // ???????????????“????∼???㊣赤???‾?“???“bit0-channel 1????1-???“????0-???“??
	BYTE    byNetPlaybackRight[MAX_ALARMHOST_VIDEO_CHAN / 8]; // ??????????﹞????“????∼???㊣赤???‾?“???“bit0-channel 1????1-???“????0-???“??
	BYTE    byNetPTZRight[MAX_ALARMHOST_VIDEO_CHAN / 8];        // ????????PTZ???“????∼???㊣赤???‾?“???“bit0-channel 1????1-???“????0-???“??
																//BYTE    byPriority;                                        // ????????0xff-????0--????1--????2--??
																//???“㊣赤?????∫???????????豕????
																//???“?????“????∼邦?“??????﹞????????谷????????℅????????????迆/??????
																//???“∼邦?“???????????“??????????????????????﹞??????????????????∟????㊣???㊣?﹞???㊣???/???????迆/??????
																//???“???赤?㊣??
	BYTE        sOriginalPassword[PASSWD_LEN];        // ????????
	BYTE        byRes2[152];                  // ㊣???℅???
}NET_DVR_ALARM_DEVICE_USER, *LPNET_DVR_ALARM_DEVICE_USER;

typedef struct tagNET_DVR_KEYBOARD_USER
{
	DWORD     dwSize;     // ?芍?????車??
	DWORD    dwID;        // ?邦?????∫ID
	BYTE    byDefanceArea[MAX_ALARMHOST_ALARMIN_NUM]; //﹞????“??  ∼???℅谷??㊣那㊣赤?? ℅??車?∫??512??﹞??? 0 - ???“?? 1- ???“??
	BYTE    byRes[560];        // ㊣???℅???
}NET_DVR_KEYBOARD_USER, *LPNET_DVR_KEYBOARD_USER;

typedef struct tagNET_DVR_OPERATE_USER
{
	DWORD     dwSize;        // ?芍?????車??
	BYTE    sUserName[NAME_LEN];    // ???∫??
	BYTE    sPassword[PASSWD_LEN];  // ????
	BYTE   bySubSystemPermission;/*0-∼?℅∼?㊣?“?? ??℅‾?㊣?“???“?迄??℅????????????? 1-????﹞???????﹞?㊣“???????????﹞ 2-???﹞﹞??????﹞﹞?㊣“???????????﹞ 3-???﹞﹞????????﹞﹞?㊣“???????????﹞
								 4-????﹞???????//﹞?㊣“???????????﹞ 5-???﹞﹞??????﹞﹞?㊣“???????????﹞ 6-???﹞﹞????????﹞﹞?㊣“???????????﹞  7-????﹞????????﹞﹞?㊣“???????赤???﹞
								 8-???﹞﹞????????﹞﹞?㊣“???????赤???﹞ 9-???﹞﹞????????﹞﹞?㊣“???????赤???﹞ 10-????﹞???????﹞?㊣“???????赤???﹞ 11-???﹞﹞??????﹞﹞?㊣“???????赤???﹞ 1
								 2-???﹞﹞????????﹞﹞?㊣“???????赤???﹞*/
	BYTE    byRes[63];             //  ㊣???℅???
}NET_DVR_OPERATE_USER, *LPNET_DVR_OPERATE_USER;

typedef struct tagNET_DVR_GATEWAY_CFG
{
	DWORD    dwSize;        // ?芍?????車??
	BYTE    byName[NAME_LEN];    //  ????????    
	BYTE    byEnable;    // ??﹞?????
	BYTE    byLocalEnable;  //  ㊣?????﹞?????
	WORD    wDelayTime;    // ???????㊣?㊣??    ????????0-65535 0?????㊣????
	BYTE    byLockWorkMode;//?????∟℅‾??????0-?“????????1-????????
	BYTE    byRes[31];    // ㊣???℅???
}NET_DVR_GATEWAY_CFG, *LPNET_DVR_GATEWAY_CFG;

typedef struct tagNET_DVR_SENSOR_ALARM
{
	DWORD   dwSize;                // ?芍?????車??
	DWORD   dwAbsTime;            // ?????㊣㊣那????  OSD????????
	BYTE    byName[NAME_LEN];     // sensor ????
	BYTE    bySensorChannel;    // ???????“??
	BYTE    byType;             // ???????角??
	BYTE    byAlarmType;        // 1-??4??2-??3??3-??2??4-??1??5-??1??6-??2??7-??3??8-??4 ???㊣?∼????????
								// ?????㊣??1000?㊣,????1??1??2??3㊣“??????㊣“??
	BYTE    byAlarmMode;        //㊣“??????????????-HHHH??-HHHL??-HHLL??HLLL??-LLLL?? ℅‾?????“㊣“??????????????,????1111?“????????????1110?“????????????1100?“????????????1000(????????)??0000(????????) 
	float    fValue;                // ???∼??????????
	float   fOriginalValue; //???????‾????????㊣??????????車????????????㊣赤?????‾?????????迄??NET_DVR_SENSOR_INFO??bySensorStandard?角??
	BYTE    byRes2[28];		    // ㊣???℅???
}NET_DVR_SENSOR_ALARM, *LPNET_DVR_SENSOR_ALARM;

#define PROTOCOL_VERTION_LEN    32

typedef struct tagNET_DVR_RS485_PROTOCOL_VERSION
{
	DWORD  dwSize;
	BYTE   byProtocleVersion[PROTOCOL_VERTION_LEN];//RS485???谷??∼?㊣?????
	BYTE   byRes[128];
}NET_DVR_RS485_PROTOCOL_VERSION, *LPNET_DVR_RS485_PROTOCOL_VESRION;


typedef struct
{
	/*?∟???????∼㊣“???‾?迆??㊣“???????角??(??﹞??????辰???角???‾?迆?辰)*/
	DWORD  dwAlarmType;
	/*??℅谷0??????1??????????*/
	BYTE   byAlarmInputNumber[MAX_ALARMHOST_ALARMIN_NUM];
	BYTE    byRes[160];
}NET_DVR_ALARMHOST_ALARMINFO, *LPNET_DVR_ALARMHOST_ALARMINFO;
// ??????㊣“??????
typedef struct tagNET_DVR_SWITCH_ALARM
{
	DWORD dwSize;
	BYTE   byName[NAME_LEN];     // switch ????
	WORD  wSwitchChannel;     // ???????“??, 0-255
	BYTE    byAlarmType;        // ㊣“???角?? 0--??????1--???﹞??2--???﹞,3-?足?? 
	BYTE     byRes[41];            // ㊣???℅???
}NET_DVR_SWITCH_ALARM, *LPNET_DVR_SWITCH_ALARM;

typedef union tagNET_DVR_ALARMHOST_EXCEPTION_PARAM
{
	DWORD   dwUnionSize[20];        // ???????車??    
}NET_DVR_ALARMHOST_EXCEPTION_PARAM, *LPNET_DVR_ALARMHOST_EXCEPTION_PARAM;

typedef struct tagNET_DVR_ALARMHOST_EXCEPTION_ALARM
{
	DWORD   dwSize;             // ?芍?????車??
								// ?足??????  1-?豕㊣?﹞???㊣“?? 2-?豕㊣?﹞????車?車???????? 3-?‾????????㊣“?? 4-?‾?????????車???????? 5-?????“??????㊣“?? 
								// 6-?????“???????車????????  7-???∼?????? 8-???∼?????????? 9-℅??足?∫∼?㊣“??  10-℅??足?∫∼??車????????    
								// 11???????﹞??  12????????????????????13-????????????14-MBUS???谷??????15-MBUS???谷??????????16-?邦????????
								//17-?邦????????????18-?豕㊣?㊣???????19-?豕㊣?㊣?????????  20-485???豕???﹞??㊣“??  21-485???豕???﹞???車????????
								//25-℅?∼?1????,26-℅?∼?1∼???, 27-℅?∼?2????,28-℅?∼?2∼???
	DWORD   dwExceptionType;
	BYTE   byRes[36];          // ㊣???
}NET_DVR_ALARMHOST_EXCEPTION_ALARM, *LPNET_DVR_ALARMHOST_EXCEPTION_ALARM;

//℅??迆???????????????∼????﹞???????
#define MAX_CENTERNUM            4        //G1,G2 G3 G4?辰??N1??N2??N3??N4?辰??T1??T2??T3??T4
typedef struct tagNET_DVR_PHONECENTERDIALCFG
{
	BYTE sCenterName[NAME_LEN];
	BYTE byPhoneNum[MAX_PHONE_NUM/*32*/];  //????????  
	BYTE byRepeatCall;          //??????????????1~15??
	BYTE byPstnProtocol;        //?“?????谷??0-CID??
	BYTE byDialDelay;           //???????㊣??℅??車150s, 0-150
	BYTE byPstnTransMode;       //????﹞?????0-DTMF 5/S??1-DTMF 10/S??
	BYTE byEnable;       //??????0-??㊣???1-????
	BYTE byRes1[5];
	BYTE byReceiverId[6];         //?????迆??㊣???????
	BYTE byRes2[32];
}NET_DVR_PHONECENTERDIALCFG, *LPNET_DVR_PHONECENTERDIALCFG;

typedef struct tagNET_DVR_ALARMHOSTDIALCFG
{
	DWORD dwSize;
	NET_DVR_PHONECENTERDIALCFG struPhoneCenterParam[MAX_CENTERNUM];//?‾????????
	WORD wReportPeriod;      //????㊣“???????????????㊣???“℅??車???∫??7?足????168???㊣), ﹞??∫??1-168
	WORD wFirstReportTime;     //???豕㊣?????????????????㊣“????????1~3600﹞???
	BYTE  byReportValid;    //0-??????????㊣“?????? 1-????????㊣“??????
	BYTE  byRes[19];
}NET_DVR_ALARMHOSTDIALCFG, *LPNET_DVR_ALARMHOSTDIALCFG;

typedef struct tagNET_DVR_ALARMHOSTDIALSETUPMODE
{
	DWORD dwSize;
	BYTE byEnableMode;//????﹞?????0??????????1?????㊣??????2:?????????????????㊣??㊣???
	BYTE byCallType; //????????﹞?????1-????????2-????????3????㊣“??㊣?
	BYTE byRes1[14];
}NET_DVR_ALARMHOSTDIALSETUPMODE, *LPNET_DVR_ALARMHOSTDIALSETUPMODE;

#define  MAX_PU_CHAN_NUM    512

typedef struct tagNET_DVR_PU_CHAN_INFO
{
	NET_DVR_IPADDR  struIpAddr;     // ip???﹞
	WORD            wPort;          // ????
	WORD            wChannel;       // ?“??     
	BYTE            byRes[24];      // 
}NET_DVR_PU_CHAN_INFO, *LPNET_DVR_PU_CHAN_INFO;

typedef struct tagNET_DVR_PU_CHAN_LIST
{
	DWORD   dwSize;     // ?芍????
	DWORD   dwNum;      // ?∼???“??????
	NET_DVR_PU_CHAN_INFO struPuChanInfo[MAX_PU_CHAN_NUM];
}NET_DVR_PU_CHAN_LIST, *LPNET_DVR_PU_CHAN_LIST;

#define  MAX_ALARM_CAM_NUM    32        // ㊣“????﹞?CAM℅??車????

typedef struct tagNET_DVR_PTZ_CTRL
{
	BYTE    byEnable;   // ??﹞?????PTZ????
	BYTE    byType;     // PTZ ???????角?? 1- ?∟???? 2 -????  3-?足??
	BYTE    byPtzNo;    //  ptz ???????∟???? ???? ?足????
	BYTE    byRes[5];    // ㊣???℅???
}NET_DVR_PTZ_CTRL, *LPNET_DVR_PTZ_CTRL;

typedef struct tagNET_DVR_ALARM_CAM_INFO
{
	DWORD            dwCamID;      // ??﹞???CAM?“????℅‾
	DWORD           dwRecordTime;   // ??﹞??????㊣?? ??????s  -1㊣赤?????㊣???? 0 ㊣赤????????
	DWORD           dwMonID;      // ??﹞?Cam??Mon??????
	DWORD           dwResidentTime; // ?????????㊣????????s  -1㊣赤?????㊣???? 0 ㊣赤????????
	NET_DVR_PTZ_CTRL struPtzCtrl;    // PTZ????????
	BYTE            byAlarmOffMode;        // ㊣“??????????????????   0-??????????1-℅?????????2-???????? ??????????㊣“???????㊣????????????????   ℅?????????㊣“???????㊣???????“?㊣???車?????????????????????“??20??  ?????????????∫?“????????﹞???????
	BYTE            byDevType;        // ?㊣?豕㊣????????豕㊣??㊣???迆?∫㊣赤??????㊣“???豕㊣????‾?? 1-?????“     2-㊣角???“
	BYTE            byDecChan;        // ?㊣???????“?????????“????
	BYTE            byRes[17];      // ㊣???℅???
}NET_DVR_ALARM_CAM_INFO, *LPNET_DVR_ALARM_CAM_INFO;

typedef struct tagNET_DVR_ALARM_CAM_CFG
{
	DWORD        dwSize;            // ?芍?????車??
	BYTE        byEnable;       // ??﹞?????㊣“????﹞?CAM???? ?豕㊣???????????
	BYTE        byRes[7];       // ㊣???℅???
	DWORD        dwNum;            // ??﹞?CAM?????????? ??????℅谷???∼???????∫???赤  
	NET_DVR_ALARM_CAM_INFO struAlarmCam[MAX_ALARM_CAM_NUM];
}NET_DVR_ALARM_CAM_CFG, *LPNET_DVR_ALARM_CAM_CFG;

#define MAX_GATEWAY_NUM         8  // ℅??車????????
typedef struct tagNET_DVR_ALARMHOST_AUDIO_ASSOCIATE_ALARM
{
	DWORD         dwSize;
	BYTE        byEnterDoor[8];    // ??㊣那㊣赤??????????????????㊣赤????????????0㊣赤?????????? 1-8㊣赤??????????????
	BYTE        byExitDoor[8];     // ??㊣那㊣赤??????????????????㊣赤????????????0㊣赤?????????? 1-8㊣赤??????????????
	BYTE         byAlarmIn[MAX_ALARMHOST_ALARMIN_NUM/*512*/];  //????㊣“??????????㊣那㊣赤??㊣“??????????????????㊣赤????????????0㊣赤?????????? 1-8㊣赤??????????????
	BYTE         byRes[128];
}NET_DVR_ALARMHOST_AUDIO_ASSOCIATE_ALARM, *LPNET_DVR_ALARMHOST_AUDIO_ASSOCIATE_ALARM;

//?????????????“????????????????????
typedef struct tagNET_DVR_UPLOAD_PARAM
{
	DWORD         dwSize;
	BYTE        byUploadType;    /*????﹞?????1-?迄???????????????﹞?????????????????? 2-????????????????????*/
	BYTE        byDataType;        //?????角????1-????????
	BYTE        byDataNum;        //????㊣角???????????????????辰??????㊣赤?????????????????????????“???????角??????????????
	BYTE        byAudioType;        //??????????0-wave
	char        sFileName[260];        //?????????????﹞??
	char        *lpBuffer;            //??????????
	DWORD        dwBufferSize;        //???????車??
	BYTE        byRes2[128];
}NET_DVR_UPLOAD_PARAM, *LPNET_DVR_UPLOAD_PARAM;

typedef void (CALLBACK *DATADOWNLOAD)(LONG nDownloadHandle, DWORD dwDataType, void* pBuffer, DWORD dwBufSize, void *pUser);
typedef struct tagNET_DVR_ALARMHOST_PARAM
{
	DWORD         dwSize;
	BYTE        byDownType;        /*??????????㊣???﹞?????1-?迄???????????????﹞㊣????????? 2-?“?????‾????????????*/
	BYTE        byDataType;        //?????角????1-????????
	BYTE        byDataNum;        //????㊣角???????????????????辰??????㊣赤?????????????????????????“???????角??????????????
	BYTE        byRes1;
	char        sFileName[260];        //?????????????﹞??
	DATADOWNLOAD lpDataCallBack; //?????㊣?????‾??????㊣迆
	void*        pUserData;    //???∫?????????????‾??????????
	BYTE        byRes2[128];
}NET_DVR_DOWNLOAD_PARAM, *LPNET_DVR_DOWNLOAD_PARAM;


typedef struct tagNET_DVR_ALARMHOST_DOWNLOAD_PARAM
{
	DWORD         dwSize;
	BYTE        byDownType;        /*??????????㊣???﹞?????1-?迄???????????????﹞㊣????????? 2-?“?????‾????????????*/
	BYTE        byDataType;        //?????角????1-????????
	BYTE        byDataNum;        //????㊣角???????????????????辰??????㊣赤?????????????????????????“???????角??????????????
	BYTE        byRes1;
	char        sFileName[260];        //?????????????﹞??
	DATADOWNLOAD lpDataCallBack; //?????㊣?????‾??????㊣迆
	void*        pUserData;    //???∫?????????????‾??????????
	BYTE        byRes2[128];
}NET_DVR_ALARMHOST_DOWNLOAD_PARAM, *LPNET_DVR_ALARMHOST_DOWNLOAD_PARAM;

//LED????????
typedef  struct tagNET_DVR_LED_SCREEN_CFG
{
	DWORD         dwSize;
	BYTE        sLEDName[NAME_LEN/*32*/];    // LED????????
	BYTE        byTransMode;                 // ?????∫???????“?? 1-?????“??
	BYTE        byProtocolType;                // ???谷?角????????LED?????∫??
	BYTE        byLEDColor;                 // 1-?????? 2-?????? 3-256?????????迄???? 4- ???????“???∼??????????
	BYTE        byDataPolarity;                // ???????? .0-??????1-????
	BYTE        byOEPolarity;                // 0-?????∫ 1-?????∫
	BYTE        byScanMode;                 // 1-1/16,  2-1/8,  3-1/4,  4-1/2,  5-????
	BYTE        byRes1[2];
	//?????赤????????℅?????16*16??????????8????    
	WORD        wLEDWidth;                     // 16~2048
	WORD         wLEDHeight;                    // 16~2048
	BYTE        byRes2[64];
}NET_DVR_LED_SCREEN_CFG, *LPNET_DVR_LED_SCREEN_CFG;

//LED????????
#define  MAX_CONTENT_LEN  512
typedef  struct tagNET_DVR_LED_CONTENT_CFG
{
	DWORD         dwSize;
	BYTE        sLEDContent[MAX_CONTENT_LEN];    // LED????????????
	BYTE        byContentAct;                    // 1-??????2-?足???辰????3-?辰℅車??????4-?辰???????? 5-?辰???????? 6-?辰??????
	BYTE        byContentSpeed;                    // 1-24?“1℅??足??24℅?????    
	BYTE        byContentStayTime;                 // 0-127.5s(????0.5s?? SDK?????㊣?辰*2????????????0-255???豕㊣????????????㊣?辰?豕????2)
	BYTE        byRes[33];
}NET_DVR_LED_CONTENT_CFG, *LPNET_DVR_LED_CONTENT_CFG;

//LED?“?㊣?????迆
#define     LED_TIMER_NUM             3            // LED???迆?????迆?㊣??℅谷??
#define        TIME_SEGMENT_A_DAY        48            // ?㊣?????????????足24???㊣??∼????㊣??????

typedef struct tagNET_DVR_SWITCH_TIME
{
	BYTE    byValid;                // ??℅谷?“?㊣?㊣????﹞????∫???㊣?????????豕????
	BYTE    byRes[3];
	NET_DVR_TIME_EX struTimeOn;     // ???迆?㊣??
	NET_DVR_TIME_EX struTimeOff;     // ???迆?㊣??
}NET_DVR_SWITCH_TIME, *LPNET_DVR_SWITCH_TIME;


typedef struct tagNET_DVR_LED_SWITCH_TIME
{
	DWORD        dwSize;
	NET_DVR_SWITCH_TIME struTimer[LED_TIMER_NUM /*3*/];         //?“?㊣?????迆?㊣?????芍?????????????㊣??﹞??????????????∫????℅谷???迆?㊣??????????℅谷?????迆?㊣??????㊣??∼??℅谷?????迆?㊣?????赤????????struTimer[0]?????迆?㊣????10??00??????struTimer[0]?????迆?㊣?????豕????10:00???∼?? struTimer[1]?????迆?㊣?????豕????10??:00???車??
	BYTE        byRes[64];
}NET_DVR_LED_SWITCH_TIME, *LPNET_DVR_LED_SWITCH_TIME;

//﹞??㊣?????‾??
typedef struct tagNET_DVR_LED_BRIGHTNESS_STEP
{
	DWORD         dwSize;
	BYTE        byValid;        //﹞??㊣?????‾????﹞????∫
	BYTE        byRes1[3];
	BYTE         byBrightnessStep[TIME_SEGMENT_A_DAY /*48*/];     //?????足24?????㊣﹞???48???㊣??????30﹞????????㊣??????48??℅???㊣赤???????㊣??????????㊣?????????16??????0~15㊣赤????
	BYTE        byRes2[48];
}NET_DVR_LED_BRIGHTNESS_STEP, *LPNET_DVR_LED_BRIGHTNESS_STEP;

typedef struct tagNET_DVR_LED_STATUS
{
	DWORD    dwSize;
	BYTE    bySwitchState;        //1-???迆℅??? 2-???迆℅???
	BYTE    byBrightness;        //????????﹞??∫0-15
	BYTE    byRes[62];
}NET_DVR_LED_STATUS, *LPNET_DVR_LED_STATUS;

//2010-12-28 ?????????“?????? begin
//?????????“﹞????‾??????
#define        MAX_DECODE_CARD_NUM            6   //℅??角?????????“??
/********************?????????“?????????那?“??********************/
typedef enum _HD_DISPLAY_FORMAT
{
	HD_DISPLAY_FORMAT_INVALID = 0x00000000,
	HD_DISPLAY_FORMAT_CVBS = 0x00000001,
	HD_DISPLAY_FORMAT_DVI = 0x00000002,
	HD_DISPLAY_FORMAT_VGA = 0x00000004,
	HD_DISPLAY_FORMAT_HDMI = 0x00000008,
	HD_DISPLAY_FORMAT_YPbPr = 0x00000010
}HD_DISPLAY_FORMAT, *LPHD_DISPLAY_FORMAT;

/********************?????????“?????????那?“??********************/
typedef struct tagNET_DVR_DECCARD_ABILITY      /*?????????“??????*/
{
	BYTE byCardType;      //?????“?角??(0:MD,1:MD+,2:HD)
	BYTE byDecNums;      //?????“????
	BYTE byDispNums;      //?????“????
	BYTE byDecStartIdx;     //?℅???????“?????迄???????“???????‾??
	BYTE byDispStartIdx;     //?℅???????“?????迄???????“???????‾??
	BYTE byDispResolution[80]; //?????????∫????﹞?㊣???
	BYTE byDispFormat[8];     //?∫????????????(∼?HD_DISPLAY_FORMAT)
	BYTE byWindowMode[4][8]; //?∫?????∼??????(㊣???1,2,4,9,16))
	BYTE byRes[35];
} NET_DVR_DECCARD_ABILITY, *LPNET_DVR_DECCARD_ABILITY;

typedef struct tagNET_DVR_DECODESVR_ABILITY
{
	DWORD dwSize;      /* ?芍?????車?? */
	BYTE byCardNums;      /* ?????“?? */
	BYTE byStartChan;     /* ?????“???? */
	BYTE byRes1[2];
	NET_DVR_DECCARD_ABILITY struDecCardAbility[MAX_DECODE_CARD_NUM];
	BYTE byRes2[64];
}NET_DVR_DECODESVR_ABILITY, *LPNET_DVR_DECODESVR_ABILITY;

typedef struct tagNET_MATRIX_DEV_CHAN_INFO
{
	NET_DVR_IPADDR     struIP;            //DVR IP???﹞
	WORD     wDVRPort;                 //??????
	BYTE     byChannel;                //?“????
	BYTE    byTransProtocol;        //???????谷?角??0-TCP??1-UDP
	BYTE    byTransMode;            //???????‾???? 0???‾???‾ 1??℅????‾
	BYTE    byFactoryType;            /*?∼???豕㊣??∫???角??,?“??????????*/
	BYTE    byUsedSlotNum;            //??﹞?????????????0-????????1-????
	BYTE    bySlotNum;//??????
	BYTE    byRes[68];
	BYTE    sUserName[NAME_LEN];    //?角???‾?迆????????
	BYTE    sPassword[PASSWD_LEN];    //?角???‾?迆????
}NET_MATRIX_DEV_CHAN_INFO, *LPNET_MATRIX_DEV_CHAN_INFO;

typedef struct tagNET_MATRIX_PU_STREAM_CFG
{
	DWORD                            dwSize;
	NET_DVR_STREAM_MEDIA_SERVER_CFG    struStreamMediaSvrCfg;
	NET_MATRIX_DEV_CHAN_INFO        struDevChanInfo;
} NET_MATRIX_PU_STREAM_CFG, LPNET_MATRIX_PU_STREAM_CFG;

/*camera?????????芍??*/
typedef struct tagNET_DVR_MATRIX_CAMERACFG
{
	DWORD                    dwGlobalIndex;//????㊣角??
	DWORD                    dwInterIndex;//????㊣角??
	BYTE                    sCamName[NAME_LEN];
	NET_MATRIX_PU_STREAM_CFG struPuStreamCfg;
} NET_DVR_MATRIX_CAMERACFG, *LPNET_DVR_MATRIX_CAMERACFG;

typedef struct tagNET_DVR_MATRIX_CAMERALIST
{
	DWORD            dwSize;
	BYTE            byRes[12];
	DWORD            dwCamNum;//CAM????
	BYTE              *pBuffer;
	DWORD             dwBufLen;//?迄﹞????????∟????????????
} NET_DVR_MATRIX_CAMERALIST, *LPNET_DVR_MATRIX_CAMERALIST;

typedef struct tagNET_DVR_DISP_CHAN_INFO
{
	NET_DVR_IPADDR    struIP;                /* ?????‾ IP???﹞ */
	WORD     wDVRPort;                 /* ?????? */
	BYTE     byDispChannel;            /* ?????“???? */
	BYTE    byUsedSlotNum;            //??﹞?????????????0-??????1-??????
	BYTE    bySlotNum;//??????
	BYTE    byRes[7];
	BYTE    sUserName[NAME_LEN];    /*???????? */
	BYTE    sPassword[PASSWD_LEN];    /*???? */
}NET_DVR_DISP_CHAN_INFO, *LPNET_DVR_DISP_CHAN_INFO;

/*monitor?????????芍??*/
typedef struct tagNET_DVR_MATRIX_MONITORCFG
{
	DWORD                        dwGlobalIndex;//????㊣角??
	DWORD                        dwInterIndex;
	BYTE                        sMonName[NAME_LEN];
	NET_DVR_DISP_CHAN_INFO        struDispChanCfg;
} NET_DVR_MATRIX_MONITORCFG, *LPNET_DVR_MATRIX_MONITORCFG;
typedef struct tagNET_DVR_MATRIX_MONITORLIST
{
	DWORD        dwSize;
	BYTE        byRes[12];
	DWORD        dwMonNum;//MON????
	BYTE          *pBuffer;
	DWORD         dwBufLen;//?迄﹞????????∟????????????
} NET_DVR_MATRIX_MONITORLIST, *LPNET_DVR_MATRIX_MONITORLIST;

#define     MAX_SUBMATRIX_NUM        8//??????℅?℅??角??????????
typedef struct tagNET_DVR_SUBMATRIXINFO
{
	BYTE        byMainMatrix;//??﹞????‾??????1-????0-﹞?
	BYTE        bySubMatrixSequence;//????℅?????℅??????“?????辰??
	BYTE        byLoginType;//℅??芍?角????1-?㊣????2-DNS??3-?“?迆??
	BYTE        byRes1[9];
	NET_DVR_IPADDR  struSubMatrixIP;        /*IP???﹞?“????????*/
	WORD        wSubMatrixPort;        /*℅????????????“????????*/
	BYTE        byRes2[6];
	NET_DVR_IPADDR  struSubMatrixIPMask;    /*IP???﹞????*/
	NET_DVR_IPADDR    struGatewayIpAddr;         /* ???????﹞ */
	BYTE        sUserName[NAME_LEN];    /* ???∫?? ?“????????????????*/
	BYTE        sPassword[PASSWD_LEN];    /*???? ?“????????????????*/
	char        sDomainName[MAX_DOMAIN_NAME];//?辰??(??????)
	char         sDnsAddress[MAX_DOMAIN_NAME];/*DNS?辰???辰IP???﹞*/
	BYTE        sSerialNumber[SERIALNO_LEN];//?辰?????“????????????????
	BYTE        byRes3[16];
}NET_DVR_SUBMATRIXINFO, *LPNET_DVR_SUBMATRIXINFO;

typedef struct tagNET_DVR_ALLUNITEDMATRIXINFO
{
	DWORD dwSize;
	NET_DVR_SUBMATRIXINFO struSubMatrixInfo[MAX_SUBMATRIX_NUM];
	BYTE  byRes2[32];
}NET_DVR_ALLUNITEDMATRIXINFO, *LPNET_DVR_ALLUNITEDMATRIXINFO;

#define    MAX_GATEWAYTRUNKNUM        1024 //????????℅??????“??℅??車?﹞????????

typedef struct tagNET_DVR_MATRIXGATEWAYNOTE
{
	WORD    wTrunkInToOutAbility;//???????赤??∼?D1??㊣那℅?????????4㊣赤???∫??4??D1
	WORD    wTrunkOutToInAbility;//???????赤??∼?D1??㊣那℅?????????4㊣赤???∫??4??D1?????辰?????㊣????????
	BYTE    byRes[4];
	NET_DVR_MATRIXSUBSYSTEMINFO struInputNote;
	NET_DVR_MATRIXSUBSYSTEMINFO struOutputNote;
}NET_DVR_MATRIXGATEWAYNOTE, *LPNET_DVR_MATRIXGATEWAYNOTE;

typedef struct tagNET_DVR_MATRIXGATEWAYINFO
{
	DWORD dwSize;
	NET_DVR_MATRIXGATEWAYNOTE struGatewayNote[MAX_GATEWAYTRUNKNUM];
	BYTE  byRes[32];
}NET_DVR_MATRIXGATEWAYINFO, *LPNET_DVR_MATRIXGATEWAYINFO;

typedef struct tagNET_DVR_MATRIXCODESYSTEMINFO
{
	BYTE   byMatrixNum;//????℅??????“??
	BYTE    bySubSystemNum;//℅???????????
	BYTE    byChan;//㊣角???“??
	BYTE   byRes[13];
}NET_DVR_MATRIXCODESYSTEMINFO, *LPNET_DVR_MATRIXCODESYSTEMINFO;
typedef struct tagNET_DVR_MATRIXDECODESYSTEMINFO
{
	BYTE    byMatrixNum;//????℅??????“??
	BYTE    bySubSystemNum;//℅???????????
	BYTE    byDispChan;//?????“??
	BYTE    bySubDispChan;//?????“??℅??“????
	BYTE    byRes[12];
}NET_DVR_MATRIXDECODESYSTEMINFO, *LPNET_DVR_MATRIXDECODESYSTEMINFO;

typedef struct tagNET_DVR_MATRIXSWITCH
{
	NET_DVR_MATRIXCODESYSTEMINFO struInputNote;
	NET_DVR_MATRIXDECODESYSTEMINFO struOutputNote;
	BYTE    byRes[32];
}NET_DVR_MATRIXSWITCH, *LPNET_DVR_MATRIXSWITCH;

typedef enum {
	ENC_CARD = 0,
	DEC_CARD,
	SD_DEC_CARD,
	FPGA_CARD,
	CS_CARD,
	ALERTOR_CARD,
	NAT_0,
	NAT_1,
	VCA_CARD,
	VGA_DEC_CARD,
	VGA_ENC_CARD,
	ERR_CARD,
} DEV_TYPE;

typedef struct tagNET_DVR_MATRIXSWITCHCTRL
{
	DWORD dwCamId;//?????迆????㊣角??
	DWORD dwMonId;//?角???‾????㊣角??
	BYTE  bySubWindowNum;//?角???‾????℅??∼????
	BYTE   bySwitchType;/*?????角????0:??????????1:㊣“????﹞???????2:㊣“????????0xff:㊣赤????MON???迄??㊣“??????????*/
	WORD   wAlarmType;//㊣“???豕㊣??角????1:㊣“???‾?迆??2???????豕㊣?
	DWORD  dwResidentTime;/* ????℅∟???㊣????0xFFFFFFFF ?㊣ ????℅∟?谷????㊣???????*/
	BYTE   byVcaDevType;//?㊣㊣“???豕㊣??角????"?????豕㊣?"?㊣??∼?DEV_TYPE?角??
	BYTE   byWallNo;//????
	BYTE   byRes[18];
}NET_DVR_MATRIXSWITCHCTRL, *LPNET_DVR_MATRIXSWITCHCTRL;

typedef struct tagNET_DVR_MATRIXDATABASE
{
	//?????????角????1-?辰????????????????2-℅??辰????????????????3-???“????????????????4-???∼??????????0xff℅??車?????∫∼?????????????
	DWORD dwDevType;
	DWORD dwParam; //???????迆㊣赤?辰????℅??辰???????“???????∼?????????㊣????????
	BYTE  byFileType;//?????角????1-sql??????2-db??????3-???∼????????
	BYTE  byRes[3];
} NET_DVR_MATRIXDATABASE, *LPNET_DVR_MATRIXDATABASE;

typedef struct tagNET_DVR_SUBSYSTEMINFO_V40
{
	/*℅??????角????1-??????℅???????2-㊣角????℅???????3-????????℅???????4-????????℅???????5-??﹞??‾℅???????6-㊣“???‾?迆℅???????7-????℅???????8-V6????℅???????
	9-V6℅???????10-℅???℅???????11-X86﹞????‾℅???????12-??????????℅???????13-X86????﹞???∼???14- X86????﹞???∼???15-?角?角?迆????℅??????? 16-????????????℅???????17-X86????℅???????18-???“????℅???????19-????℅???????0-NULL?“????????????????*/
	BYTE        bySubSystemType;
	//℅??????“????????????﹞?℅????????迆㊣赤485?????????“????????????????
	BYTE        byChan;
	BYTE        byLoginType;//℅??芍?角????1-?㊣????2-DNS??3-?“?迆??
	BYTE        bySlotNum;//??????????????????????
	BYTE        byRes1[4];
	NET_DVR_IPADDR   struSubSystemIP;        /*IP???﹞?“????????*/
	NET_DVR_IPADDR   struSubSystemIPMask;//℅???????
	NET_DVR_IPADDR   struGatewayIpAddr;    /* ???????﹞ */
	WORD        wSubSystemPort;        //℅????????????“????????
	BYTE        byRes2[6];
	BYTE        sUserName[NAME_LEN];    /* ???∫?? ?“????????????????*/
	BYTE        sPassword[PASSWD_LEN];    /*????(??????)*/
	char        sDomainName[MAX_DOMAIN_NAME];//?辰??(??????)
	char        sDnsAddress[MAX_DOMAIN_NAME];/*DNS?辰???辰IP???﹞*/
	BYTE        sSerialNumber[SERIALNO_LEN];//?辰?????“????????????????
	BYTE        byBelongBoard;//?迄??℅?∼???????1??????0xff㊣赤?????∫
	BYTE        byInterfaceType;//?????角????0-???角????1-BNC??2-VGA??3-HDMI??4-DVI??5-SDI, 6-FIBER, 7-RGB, 8-YPrPb, 9-VGA/HDMI/DVI℅???????10-3GSDI, 11-VGA/DVI℅???????12-HDTVI??13-HDBaseT??14-DP??15-DVIT??16-TVI,17-VSCREEN,18-miniDP,0xff-???∫
	BYTE        byInterfaceNums;//??????????0xff㊣赤?????∫
	BYTE        byInterfaceStartNum;//????????????0xff㊣赤?????∫
	BYTE        byDeviceName[20];//℅?????????
	BYTE        byAudioChanNums; //?????“??????
	BYTE        byAudioChanStartNum; //?????“????????
	BYTE        byAudioChanType;//?????“???角????0-???∫??1-??????????2-????????
	BYTE        byRes3[33];
}NET_DVR_SUBSYSTEMINFO_V40, *LPNET_DVR_SUBSYSTEMINFO_V40;

#define  MAX_SUBSYSTEM_NUM_V40  120
typedef struct tagNET_DVR_ALLSUBSYSTEMINFO_V40
{
	DWORD dwSize;
	NET_DVR_SUBSYSTEMINFO_V40 struSubSystemInfo[MAX_SUBSYSTEM_NUM_V40];
	BYTE byRes[8];
}NET_DVR_ALLSUBSYSTEMINFO_V40, *LPNET_DVR_ALLSUBSYSTEMINFO_V40;

typedef struct tagNET_DVR_SUBSYSTEM_BASIC_INFO
{
	DWORD       dwSize;
	/*℅??????角????1-??????℅???????2-㊣角????℅???????3-????????℅???????4-????????℅???????5-??﹞??‾℅???????6-㊣“???‾?迆℅???????7-????℅???????8-Fpga????℅???????9-Fpga℅???????10-℅???℅???????11-X86﹞????‾℅???????12-??????????℅???????13-X86????﹞???∼??? 14- X86????﹞???∼???15-?角?角?迆????℅??????? 16-????????????℅???????17-X86????℅???????18-???“????℅???????19-????????℅?????,0-NULL?“????????????????*/
	BYTE        bySubSystemType;
	//℅??????“????????????﹞?℅????????迆㊣赤485?????????“????????????????
	BYTE        bySubSystemNo;//℅???????????????????????
	BYTE        byInterfaceType;//?????角????0-???角????1-BNC??2-VGA??3-HDMI??4-DVI??5-SDI, 6-FIBER, 7-RGB, 8-YprPb, 9-VGA/HDMI/DVI℅???????10-3GSDI, 11-VGA/DVI℅???????12-HDTVI??13-HDBaseT??14-DP??15-DVIT??0xff-???∫
	BYTE        byRes1;
	DWORD       dwChan;
	NET_DVR_IPADDR   struSubSystemIP; /*IP???﹞?“????????*/
	NET_DVR_IPADDR   struSubSystemIPMask;//℅???????
	NET_DVR_IPADDR   struGatewayIpAddr; /* ???????﹞ */
	WORD        wSubSystemPort;        //℅????????????“????????
	BYTE        byRes2[6];
	BYTE        sSerialNumber[SERIALNO_LEN];//?辰?????“????????????????
	BYTE        byBelongBoard;//?迄??℅?∼???????1??????0xff㊣赤?????∫?????㊣byBelongBoardH????0?㊣??℅?????????0xff
	BYTE        byBelongBoardH; //?迄??℅?∼???????
	BYTE        byRes3[2];
	BYTE        byDeviceName[20];//℅?????????
	DWORD       dwStartChanNo;//?????“????
	BYTE        byDevNo; //?豕㊣???
	BYTE        byRes4[63];
}NET_DVR_SUBSYSTEM_BASIC_INFO, *LPNET_DVR_SUBSYSTEM_BASIC_INFO;

typedef struct NET_DVR_SUBSYSTEM_BASIC_INFO_RESPONSE
{
	DWORD dwSize;
	DWORD dwErrorCode; //?赤?車
	BYTE   byDevNo; //?豕㊣???
	BYTE    bySubSystemNo;//℅???????
	BYTE   byRes[30];
} NET_DVR_SUBSYSTEM_BASIC_INFO_RESPONSE, *LPNET_DVR_SUBSYSTEM_BASIC_INFO_RESPONSE;

typedef struct NET_DVR_CAMERA_INFO_RESPONSE
{
	DWORD dwErrorCode; //?赤?車
	DWORD dwCamId; /*cam ??????㊣角??*/
	BYTE   byRes[4];
} NET_DVR_CAMERA_INFO_RESPONSE, *LPNET_DVR_CAMERA_INFO_RESPONSE;

typedef struct NET_DVR_MONITOR_INFO_RESPONSE
{
	DWORD dwErrorCode; //?赤?車
	DWORD dwMonId; /*mon ??????㊣角??*/
	BYTE   byRes[4];
} NET_DVR_MONITOR_INFO_RESPONSE, *LPNET_DVR_MONITOR_INFO_RESPONSE;

typedef struct tagNET_DVR_AUDIO_INFO
{
	DWORD    dwSize;
	BYTE    byAudioChanType;//?????“???角????1-??????????2-????????
	BYTE       byRes1[3];
	DWORD    dwAudioNo; //??????(1℅????豕㊣???+1℅???℅?∼???+2℅???????????)
	BYTE      byRes2[16];
}NET_DVR_AUDIO_INFO, *LPNET_DVR_AUDIO_INFO;


typedef struct tagNET_DVR_SINGLESUBSYSTEMJOININFO_V40
{
	/*℅??????角????1-??????℅???????2-㊣角????℅???????3-????????℅???????4-????????℅???????5-??﹞??‾℅???????6-㊣“???‾?迆℅???????7-????℅???????8-V6????℅???????9-V6℅???????0-NULL?“????????????????*/
	BYTE   bySubSystemType;
	BYTE   byConnectStatus;//????????????℅?????1-??????????2-????????
	BYTE   byMatrixNum;//????????℅??????“????℅??????角????3?辰4?㊣????
	BYTE   bySubSystemNum;//????℅?????????????0~79??℅??????角????3?辰4?㊣????
	NET_DVR_DECSUBSYSTEMJIONSTATUS struDecSub[MATRIX_MAXDECSUBSYSTEMCHAN];
	BYTE   byBindStatus;//∼車?“℅?????0-????∼車?“??1-????∼車?“?“?車???????㊣??????
	BYTE   bySlotNum;//??????????????????????
					 //℅??????角????1???㊣??????0-????????1-D1??2-720??3-1080
	BYTE   byDecodeAbility;
	BYTE   byUsedTrunk;
	BYTE   byRes[64];
}NET_DVR_SINGLESUBSYSTEMJOININFO_V40, LPNET_DVR_SINGLESUBSYSTEMJOININFO_V40;

typedef struct tagNET_DVR_ALLDECSUBSYSTEMJOININFO_V40
{
	DWORD dwSize;
	NET_DVR_SINGLESUBSYSTEMJOININFO_V40 struSingleSubSystemJoinInfo[MAX_SUBSYSTEM_NUM_V40];
	BYTE  byRes[48];
}NET_DVR_ALLDECSUBSYSTEMJOININFO_V40, *LPNET_DVR_ALLDECSUBSYSTEMJOININFO_V40;

#define  MAX_OPTICALFIBER_NUM  16
typedef struct tagNET_DVR_SUBSYSTEM_ABILITY
{
	/*℅??????角????1-??????℅???????2-㊣角????℅???????3-????????℅???????4-????????℅???????5-??﹞??‾℅???????6-㊣“???‾?迆℅???????7-????℅???????8-V6????℅???????9-V6℅???????
	10-℅???℅???????11-X86﹞????‾℅???????∼??? 14- X86????﹞???∼???15-?角?角?迆????℅??????? 16-????????????℅???????17-X86????℅???????18-???“????℅???????0-NULL?“??????0-NULL?“????????????????*/
	BYTE  bySubSystemType;
	BYTE  byChanNum;//℅??????“????
	BYTE  byStartChan;//℅??????????“????
	BYTE  bySlotNum;//?????? 
	BYTE  byRes1[4];
	union
	{
		BYTE byRes[200];
		struct
		{
			BYTE byDecode;        //??﹞???????????????????∼?,1-????0-﹞?
			BYTE byNeedPreAllocDec; //??﹞??豕???∟﹞???????℅?????1-????0-﹞?
			BYTE byVACType;  //????℅??????角????0-???“????1-??????
			BYTE byRes[197];
		}struVACSystemAbility;
		struct
		{
			BYTE  byVGANums;//VGA?????“???????“??1??????
			BYTE  byBNCNums;//BNC?????“???????“??9??????
			BYTE  byHDMINums;//HDMI?????“???????“??25??????
			BYTE  byDVINums;//DVI?????“???????“??29??????
			BYTE  byLayerNums;//?車??????????℅??‾???㊣?迄?∫????????
			BYTE  bySpartan;//??????????0-???∫????1-?∫??
			BYTE  byDecType; //????℅??????角????0-???“??,1-??????(???“??﹞????㊣?∼4?∼???豕????℅??赤℅???????????????????????????℅??角??㊣?????℅??????豕16?﹞D1????℅???
							 //??????㊣??車????????℅????車℅?????㊣??豕???????“???辰????㊣??豕??)
							 //2-????????????℅???????3-℅???????????℅??????“??????℅???????℅???????????????????????
			BYTE  byOutputSwitch;//??﹞??∫??HDMI/DVI???角??????0-???∫????1-?∫??
			BYTE  bySDINums;//SDI?????“???????“??33??????
			BYTE  byRes1[38];
			BYTE  byDecoderType; //????∼???﹞??∫???角?∫?????‾??????0-???∫????1-?∫??
			BYTE  byRes2[152];
		}struDecoderSystemAbility;
		struct
		{
			BYTE  byCoderType;//㊣角???‾?角????0-㊣那????1-????, 2-????????
			BYTE  byOptical;//?????迆??????0-﹞???1-??
			BYTE  byOpticalSubChan; //??????????????            
			BYTE  bySupportAVSeparate;//??﹞??∫????????﹞?????0-???∫????1-?∫??
			BYTE  byRes[196];
		}struCoderSystemAbility;
		struct
		{
			WORD    wTrunkAbility;//???????赤??∼?D1??㊣那℅?????????4㊣赤???∫??4??D1
			BYTE    byOpticalFiberNum;//????????
			BYTE    byRes[197];
		}struInputSystemAbility;
		struct
		{
			WORD    wTrunkAbility;//???????赤??∼?D1??㊣那℅?????????4㊣赤???∫??4??D1
			BYTE    byOpticalFiberNum;//????????
			BYTE    byRes[197];
		}struOutputSystemAbility;
		struct
		{
			BYTE    by485Num;//??﹞?℅???????485????
			BYTE    bySlotNum;//????485??????
			BYTE    byRes[198];
		}struCodeSpitterSystemAbility;
		struct
		{
			WORD    wAlarmInNums;
			WORD    wAlarmOutNums;
			/* ㊣那??㊣“??????﹞??????? 1㊣赤?????????? ??0 ㊣赤???????? */
			BYTE  byAlarmBoxEnable[4][8];
			BYTE  bySupportContact; /* ????℅??????“????㊣“????????0-???∫??,1-?∫?? */
			BYTE  byRes[163];
		}struAlarmHostSystemAbility;
		struct
		{
			BYTE  byOpticalFiberNum;//????????
			BYTE  byRes1[3];
			//???????赤??∼?D1??㊣那℅?????????4㊣赤???∫??4??D1
			WORD    wTrunkAbility[MAX_OPTICALFIBER_NUM/*16*/];
			BYTE  byRes2[164];
		}struInOutputSystemAbility;
		struct
		{
			BYTE  bySupportRingProtocol;   //??﹞??∫???﹞?????谷
			BYTE  bySupportRingNums; //?∫???﹞??????
			BYTE  bySupportPortNums;  //?∫????????????
			BYTE  byRes[1];
			DWORD dwPortSupportRingProto; //??????????﹞??∫???﹞?????谷??∼???????1??32??﹞?㊣?㊣赤??1??32??????0-???∫????1-㊣赤???∫?? 
			BYTE  byRes2[192];
		} struFiberSwitchSystemAbility;
	}struAbility;
}NET_DVR_SUBSYSTEM_ABILITY, *LPNET_DVR_SUBSYSTEM_ABILITY;

typedef struct tagNET_DVR_VIDEOPLATFORM_ABILITY_V40
{
	DWORD   dwSize;
	BYTE    byCodeSubSystemNums;//㊣角??℅?????????
	BYTE    byDecodeSubSystemNums;//????℅?????????
	BYTE    bySupportNat;//??﹞??∫??NAT??0-???∫????1-?∫??
	BYTE    byInputSubSystemNums;//????????℅?????????
	BYTE    byOutputSubSystemNums;//????????℅?????????
	BYTE    byCodeSpitterSubSystemNums;//??﹞?℅?????????
	BYTE    byAlarmHostSubSystemNums;//㊣“??℅?????????
	BYTE    bySupportBigScreenNum;//?迄?∫??℅??角℅谷???車????????
	BYTE    byVCASubSystemNums;//????℅?????????
	BYTE    byV6SubSystemNums;//V6℅?????????
	BYTE    byV6DecoderSubSystemNums;//V6????℅?????????
	BYTE    bySupportBigScreenX;/*?車??????????????m??n*/
	BYTE    bySupportBigScreenY;
	BYTE    bySupportSceneNums;//?∫?????∼??????????
	BYTE    byVcaSupportChanMode;//?????∫?????“????????????0-?????????“????1-?????????“???∼℅??“????
	BYTE    bySupportScreenNums;//?迄?∫?????車????????℅??車????
	BYTE    bySupportLayerNums;//?迄?∫????????????0xff-???∫
	BYTE    byNotSupportPreview;//??﹞??∫???∟??,1-???∫????0-?∫??
	BYTE    byNotSupportStorage;//??﹞??∫??????,1-???∫????0-?∫??
	BYTE    byUploadLogoMode;//????logo??????0-???????????“????1-???????????“??
	NET_DVR_SUBSYSTEM_ABILITY struSubSystemAbility[MAX_SUBSYSTEM_NUM_V40];
	BYTE    by485Nums;//485????????
	BYTE    by232Nums;//232????????
	BYTE    bySerieStartChan;//?????“??
	BYTE    byScreenMode;//?車????????0-?‾???????∫??﹞?????1-?‾?????豕㊣???﹞???
	BYTE    byDevVersion;//?豕㊣?∼?㊣???0-B10/B11/B12??1-B20
	BYTE    bySupportBaseMapNums;//?迄?∫?????℅???????℅??????1????
	WORD    wBaseLengthX;//???????車?????迄℅?????B20????
	WORD    wBaseLengthY;
	BYTE    bySupportPictureTrans;  //??﹞??∫????????????0-???∫????1-?∫??    
	BYTE    bySupportPreAllocDec;   //??﹞??∫??????????℅????∟﹞?????0-???∫????1-?∫??
	BYTE    bySupportDecAutoManage; //??﹞??∫??????℅??????赤
	BYTE    byTranDevSubSystemNums; //℅???℅?????????
	BYTE    byFiberSwitchNums;  //????????℅?????????
	BYTE    byRes2[625];
}NET_DVR_VIDEOPLATFORM_ABILITY_V40, *LPNET_DVR_VIDEOPLATFORM_ABILITY_V40;

typedef struct tagNET_DVR_VIDEOPLATFORM_ABILITY
{
	DWORD dwSize;
	BYTE  byCodeSubSystemNums;//㊣角??℅?????????
	BYTE  byDecodeSubSystemNums;//????℅?????????
	BYTE  bySupportNat;//??﹞??∫??NAT??0-???∫????1-?∫??
	BYTE  byInputSubSystemNums;//????????℅?????????
	BYTE  byOutputSubSystemNums;//????????℅?????????
	BYTE  byCodeSpitterSubSystemNums;//??﹞?℅?????????
	BYTE  byAlarmHostSubSystemNums;//㊣“??℅?????????
	BYTE  bySupportBigScreenNum;//?迄?∫??℅??角?車??????????
	BYTE  byVCASubSystemNums;//????℅?????????
	BYTE  byRes1[11];
	NET_DVR_SUBSYSTEM_ABILITY struSubSystemAbility[MAX_SUBSYSTEM_NUM];
	BYTE  by485Nums;//485????????
	BYTE  by232Nums;//485????????
	BYTE  bySerieStartChan;//?????“??
	BYTE  byRes2[637];
}NET_DVR_VIDEOPLATFORM_ABILITY, *LPNET_DVR_VIDEOPLATFORM_ABILITY;
//??????????????

//????A 
typedef struct tagNET_DVR_HOLIDATE_MODEA
{
	BYTE    byStartMonth;    // ?????? ??1????
	BYTE    byStartDay;        // ?????? ??1????
	BYTE    byEndMonth;        // ?芍???? 
	BYTE    byEndDay;        // ?芍????
	BYTE    byRes[4];        // ㊣???℅???
}NET_DVR_HOLIDATE_MODEA, *LPNET_DVR_HOLIDATE_MODEA;

typedef struct tagNET_DVR_HOLIDATE_MODEB
{
	BYTE    byStartMonth;    // ??1????
	BYTE    byStartWeekNum;    // ?????????? ??1???? 
	BYTE    byStartWeekday;    // ??????
	BYTE    byEndMonth;        // ??1????
	BYTE    byEndWeekNum;    // ?????????? ??1???? 
	BYTE    byEndWeekday;    // ??????    
	BYTE    byRes[2];        // ㊣???℅??? 
}NET_DVR_HOLIDATE_MODEB, *LPNET_DVR_HOLIDATE_MODEB;

typedef struct tagNET_DVR_HOLIDATE_MODEC
{
	WORD    wStartYear;        // ?那
	BYTE    byStartMon;        // ??
	BYTE    byStartDay;        // ??
	WORD    wEndYear;        // ?那
	BYTE    byEndMon;        // ??
	BYTE    byEndDay;        // ??
}NET_DVR_HOLIDATE_MODEC, *LPNET_DVR_HOLIDATE_MODEC;

typedef union tagNET_DVR_HOLIDATE_UNION
{
	// ???????車?? 12℅???
	DWORD                    dwSize[3];
	NET_DVR_HOLIDATE_MODEA    struModeA;    // ????A
	NET_DVR_HOLIDATE_MODEB    struModeB;    // ????B
	NET_DVR_HOLIDATE_MODEC    struModeC;    // ????C
}NET_DVR_HOLIDATE_UNION, *LPNET_DVR_HOLIDATE_UNION;

typedef enum tagHOLI_DATE_MODE
{
	HOLIDATE_MODEA = 0,
	HOLIDATE_MODEB,
	HOLIDATE_MODEC
}HOLI_DATE_MODE;

typedef struct tagNET_DVR_HOLIDAY_PARAM
{
	BYTE    byEnable;            // ??﹞?????
	BYTE    byDateMode;            // ???????? 0-????A 1-????B 2-????C
	BYTE    byRes1[2];            // ㊣???℅???
	NET_DVR_HOLIDATE_UNION uHolidate;    // ????????
	BYTE    byName[NAME_LEN];    // ????????
	BYTE    byRes2[20];            // ㊣???℅???
}NET_DVR_HOLIDAY_PARAM, *LPNET_DVR_HOLIDAY_PARAM;

#define  MAX_HOLIDAY_NUM    32

typedef struct tagNET_DVR_HOLIDAY_PARAM_CFG
{
	DWORD    dwSize;            // ?芍?????車??
	NET_DVR_HOLIDAY_PARAM struHolidayParam[MAX_HOLIDAY_NUM];    // ????????
	DWORD    byRes[40];        // ㊣???????
}NET_DVR_HOLIDAY_PARAM_CFG, *LPNET_DVR_HOLIDAY_PARAM_CFG;

// ????㊣“?????赤﹞???
typedef struct tagNET_DVR_HOLIDAY_HANDLE
{
	DWORD    dwSize;                // ?芍?????車??
	NET_DVR_SCHEDTIME              struAlarmTime[MAX_TIMESEGMENT_V30];    // ??﹞??㊣????
	BYTE    byRes2[240];        // ㊣???℅???
}NET_DVR_HOLIDAY_HANDLE, *LPNET_DVR_HOLIDAY_HANDLE;

typedef struct tagNET_DVR_HOLIDAY_HANDLE_COND
{
	DWORD    dwSize;                // ?芍?????車??
	DWORD    dwChannel;            //?“????
	DWORD    dwSMDHandleType;    //?辰?℅??????????﹞??角?? 0-?????足???足????1-?谷???足????2-???∼㊣??邦?足??
	BYTE     byRes2[32];        // ㊣???℅???
}NET_DVR_HOLIDAY_HANDLE_COND, *LPNET_DVR_HOLIDAY_HANDLE_COND;

typedef struct tagNET_DVR_HOLIDAY_RECORD
{
	DWORD           dwSize;
	NET_DVR_RECORDDAY     struRecDay;     // ????????
	NET_DVR_RECORDSCHED   struRecordSched[MAX_TIMESEGMENT_V30]; // ?????㊣????
	BYTE      byRes[20];      //  ㊣???℅???
}NET_DVR_HOLIDAY_RECORD, *LPNET_DVR_HOLIDAY_RECORD;

#define  MAX_LINK_V30  128

typedef struct tagNET_DVR_ONE_LINK
{
	NET_DVR_IPADDR  struIP;     // ???∫??IP
	LONG            lChannel;   // ?“????
	BYTE            byRes[32];  // ㊣???℅???
}NET_DVR_ONE_LINK, *LPNET_DVR_ONE_LINK;

typedef struct tagNET_DVR_LINK_STATUS
{
	DWORD   dwSize;      // ?芍?????車??
	WORD    wLinkNum;    // ??????????
	BYTE    byRes1[2];  // ㊣???℅???
	NET_DVR_ONE_LINK struOneLink[MAX_LINK_V30];   // ?????????∫??????
	BYTE    byRes[32];  // ㊣???℅???
}NET_DVR_LINK_STATUS, *LPNET_DVR_LINK_STATUS;

#define MAX_BOND_NUM  2

typedef struct tagNET_DVR_ONE_BONDING
{
	BYTE    byMode;                // ?∟℅‾????0 - ???????赤 1 - ?????迄??
	BYTE    byUseDhcp;            // ??﹞?????dhcp
	BYTE    byMasterCard;        //  ???“???????“???‾???“        
	BYTE    byStatus;           // BONDING??℅???  0 - ?足?? 1-???? ?????????????豕??
	BYTE    byBond[MAX_NETWORK_CARD];// byBond[0]== 1 ㊣赤??????eh0  0㊣赤????????eh0
	NET_DVR_ETHERNET_V30    struEtherNet;        // ???“????
	NET_DVR_IPADDR    struGatewayIpAddr;  // ???????﹞
	BYTE  byEnableDNS; //DNS????, 0-??㊣???1-?辰?? 
	BYTE  byBondMode; //∼車?“﹞???, 0-???∫??1-?‾㊣???????2-??℅???????3-XOR??????4-??????????5-802.3ad??????6-T1b??????7-?谷????????
	BYTE  byRes1[2];
	BYTE  byBond2[MAX_NETWORK_CARD_EX/*12*/];// byBond2[0]== 1 ㊣赤??????eh4  0㊣赤????????eh4???迄??byBond????
	BYTE  byRes[4];// ㊣???℅???
}NET_DVR_ONE_BONDING, *LPNET_DVR_ONE_BONDING;

typedef struct tagNET_DVR_NETWORK_BONDING
{
	DWORD   dwSize;         // ?芍?????車??
	BYTE    byEnable;       // ??﹞?????bonding????
	BYTE    byNum;          // Bonding???“??????
	BYTE    byRes1[2];         //  ㊣???℅???
	NET_DVR_ONE_BONDING struOneBond[MAX_BOND_NUM];
	BYTE    byRes2[40];        // ㊣???℅???
}NET_DVR_NETWORK_BONDING, *LPNET_DVR_NETWORK_BONDING;


// ????????
typedef struct tagNET_DVR_DISK_QUOTA
{
	BYTE    byQuotaType;     // ?????????角??,1 - ∼????? 2-∼?㊣?????3-∼??㊣??
	BYTE    byRes1[5];       // ㊣???℅???
	WORD    wStoragePeriod;  //???????????????????足???????角????∼??㊣???㊣???∫
	DWORD   dwHCapacity;     // ﹞???????????????32?? ????MB
	DWORD   dwLCapacity;     // ﹞???????????????32?? ????MB
	DWORD   dwHUsedSpace;    // ?????????????車????32?? ????MB
	DWORD   dwLUsedSpace;    // ?????????????車????32?? ????MB
	BYTE    byQuotaRatio;    //    ﹞?????????㊣???,????:%
	BYTE    byRes2[21];      // ㊣???℅???
}NET_DVR_DISK_QUOTA, *LPNET_DVR_DISK_QUOTA;

typedef struct tagNET_DVR_DISK_QUOTA_CFG
{
	DWORD   dwSize;         // ?芍?????車??
	NET_DVR_DISK_QUOTA    struPicQuota;       //  ????????
	NET_DVR_DISK_QUOTA    struRecordQuota;    //  ????????
	NET_DVR_DISK_QUOTA    struAddInfoQuota;   //  ???????????? (??????????﹞????‾?????∼?∫???????????????????????????‾??)
	BYTE    byRes[12];      //㊣???℅???
}NET_DVR_DISK_QUOTA_CFG, *LPNET_DVR_DISK_QUOTA_CFG;


typedef struct tagNET_DVR_TIMING_CAPTURE
{
	NET_DVR_JPEGPARA  struJpegPara;   // ?“?㊣℅???????????
	DWORD      dwPicInterval;  // ?“?㊣℅????㊣??????,????s   1-1s 2-2s 3-3s 4-4s 5-5s 
							   //    6-10m 7-30m 8-1h 9-12h 10-24h
	BYTE       byRes[12];      // ㊣???℅???
}NET_DVR_TIMING_CAPTURE, *LPNET_DVR_TIMING_CAPTURE;

typedef struct tagNET_DVR_REL_CAPTURE_CHAN
{
	BYTE    byChan[16];    // ∼???㊣赤??
	BYTE    byRes[20];          // ㊣???℅???
}NET_DVR_REL_CAPTURE_CHAN, *LPNET_DVR_REL_CAPTURE_CHAN;

#define MAX_PIC_EVENT_NUM      32
#define MAX_ALARMIN_CAPTURE   16

typedef struct  tagNET_DVR_REL_CAPTURE_CHAN_V40
{
	DWORD   dwMaxRelCaptureChanNum;  //℅??車????﹞????????“????-????????
	DWORD   dwChanNo[MAX_CHANNUM_V40]; //??﹞???????℅????“??????∼???㊣赤??????????????????,0xffffffff㊣赤???車?????∫
	BYTE     byRes[32];
}NET_DVR_REL_CAPTURE_CHAN_V40, *LPNET_DVR_REL_CAPTURE_CHAN_V40;

typedef struct tagNET_DVR_EVENT_CAPTURE_V40
{
	NET_DVR_JPEGPARA  struJpegPara;   // ????℅???????????
	DWORD   dwPicInterval;   // ????℅????㊣??????  ???????? 
	NET_DVR_REL_CAPTURE_CHAN_V40 struRelCaptureChan[MAX_PIC_EVENT_NUM];   // ??℅谷??㊣那 0 ?????足????﹞?℅??? 1 ??????????﹞?℅??? 2 ???????∫??﹞?℅???,??℅谷3㊣赤??PIR㊣“??℅???????℅谷4㊣赤??????㊣“??℅???????℅谷5㊣赤??????㊣“??℅???,??℅谷6㊣赤??????℅???
	NET_DVR_REL_CAPTURE_CHAN_V40 struAlarmInCapture[MAX_ALARMIN_CAPTURE];    // ㊣“????????﹞?℅???????㊣那0 ?迆㊣赤㊣“??????1 ?????角??
	DWORD   dwMaxGroupNum;  //?豕㊣??∫????℅??車㊣“??????℅谷??????℅谷16??㊣“??????
	BYTE      byCapTimes; //℅???????
	BYTE      byRes[59];
}NET_DVR_EVENT_CAPTURE_V40, *LPNET_DVR_EVENT_CAPTURE_V40;


typedef struct tagNET_DVR_EVENT_CAPTURE
{
	NET_DVR_JPEGPARA  struJpegPara;   // ????℅???????????
	DWORD       dwPicInterval;  // ????℅????㊣??????  ????????  1-1s 2-2s 3-3s 4-4s 5-5s 
								//    6-10m 7-30m 8-1h 9-12h 10-24h
								/*
								??℅谷??㊣那 0 ?????足????﹞?℅??? 1 ??????????﹞?℅?????2 ???????∫??﹞?℅???,??℅谷3㊣赤??PIR㊣“??℅?????
								??℅谷4㊣赤??????㊣“??℅???????℅谷5㊣赤??????㊣“??℅???,??℅谷6㊣赤??????℅???,??℅谷7 ㊣赤???????足??℅?????
								??℅谷8 ㊣赤??-?????足???足??℅???????℅谷9 ㊣赤?????辰?????足??℅???,??℅谷10㊣赤?????∼㊣??邦?足??℅???,
								??℅谷11-???????辰?足??,??℅谷12-???????辰?足??,??℅谷13-?????足??,??℅谷14-???㊣?????足??,??℅谷15-?足???????足??,
								??℅谷16-?????足??,??℅谷17-???﹞?????足??,??℅谷18-???﹞?????足????
								*/
	NET_DVR_REL_CAPTURE_CHAN struRelCaptureChan[MAX_PIC_EVENT_NUM];
	NET_DVR_REL_CAPTURE_CHAN struAlarmInCapture[MAX_ALARMIN_CAPTURE];    // ㊣“????????﹞?℅???????㊣那0 ?迆㊣赤㊣“??????1 ?????角??
	BYTE       byCapTimes; //℅???????
	BYTE       byRes[59];
}NET_DVR_EVENT_CAPTURE, *LPNET_DVR_EVENT_CAPTURE;

typedef struct tagNET_DVR_JPEG_CAPTURE_CFG_V40
{
	DWORD                             dwSize;               //?芍?????∟??
	NET_DVR_TIMING_CAPTURE        struTimingCapture;
	NET_DVR_EVENT_CAPTURE_V40    struEventCapture;
	BYTE       byStreamType;//℅??????‾?角?? 0-?‾???‾??1-℅????‾
	BYTE       byRes3[19];     // ㊣???℅???
}NET_DVR_JPEG_CAPTURE_CFG_V40, *LPNET_DVR_JPEG_CAPTURE_CFG_V40;

typedef struct tagNET_DVR_JPEG_CAPTURE_CFG
{
	DWORD      dwSize;         // ?芍?????車??
	NET_DVR_TIMING_CAPTURE struTimingCapture;
	NET_DVR_EVENT_CAPTURE struEventCapture;
	BYTE       byStreamType;//℅??????‾?角?? 0-?‾???‾??1-℅????‾
	BYTE       byRes3[19];     // ㊣???℅???
}NET_DVR_JPEG_CAPTURE_CFG, *LPNET_DVR_JPEG_CAPTURE_CFG;

typedef struct tagNET_DVR_CAPTURE_DAY
{
	BYTE    byAllDayCapture;    // ??﹞????足℅???
	BYTE    byCaptureType;        // ℅????角????0-?“?㊣℅?????1-?????足??℅?????2-㊣“??℅?????3-?????足???辰㊣“??℅?????4-?????足????㊣“??℅?????6-????㊣“??℅???,7-?????足??℅?????8-???????? ,39-????????℅???,40-﹞???㊣“????41-???㊣?車?迆,42????℅??? 
	BYTE    byRes[2];
}NET_DVR_CAPTURE_DAY, *LPNET_DVR_CAPTURE_DAY;

typedef struct tagNET_DVR_CAPTURE_SCHED
{
	NET_DVR_SCHEDTIME struCaptureTime;        // ℅????㊣????
	BYTE        byCaptureType;       // ℅????角????0-?“?㊣℅?????1-?????足??℅?????2-㊣“??℅?????3-?????足???辰㊣“??℅?????4-?????足????㊣“??℅?????6-????㊣“??℅???,7-?????足??℅?????8-????????  ,39-????????℅??? ,40-﹞???㊣“????41-???㊣?車?迆,42????℅???
	BYTE        byRes[3];           // ㊣???℅???
}NET_DVR_CAPTURE_SCHED, *LPNET_DVR_CAPTURE_SCHED;

// ?“??℅???????
typedef struct tagNET_DVR_SCHED_CAPTURECFG
{
	DWORD  dwSize;     // ?芍????
	BYTE    byEnable;    // ??﹞?℅???
	BYTE    byRes1[3];    // ㊣???℅???
	NET_DVR_CAPTURE_DAY    struCaptureDay[MAX_DAYS];    // ???足℅???????
	NET_DVR_CAPTURE_SCHED    struCaptureSched[MAX_DAYS][MAX_TIMESEGMENT_V30];    // ?㊣????℅?????﹞?????
	NET_DVR_CAPTURE_DAY    struCaptureHoliday;            // ????℅???????
	NET_DVR_CAPTURE_SCHED    struHolidaySched[MAX_TIMESEGMENT_V30];    // ?㊣????????℅?????﹞?????
	DWORD    dwRecorderDuration;    // ℅???㊣???℅??∟?㊣?? 0xffffffff㊣赤?????????∫ 
	DWORD    dwDelayTime;           /* ℅??????㊣?㊣?? 0- ?????㊣?? 1-3???? 2-4???? 3-5???? 4-10???? 5-30???? 6-60???? 7- 120????8-300??*/
	BYTE      byRes[36];            // ㊣???℅???
}NET_DVR_SCHED_CAPTURECFG, *LPNET_DVR_SCHED_CAPTURECFG;


typedef struct tagNET_DVR_FLOW_TEST_PARAM
{
	DWORD  dwSize;              //?芍???車??
	LONG   lCardIndex;         //???“?‾??
	DWORD  dwInterval;         //?豕㊣??????‾???㊣??????, ????:100ms
	BYTE   byRes[8];           //㊣???℅???
}NET_DVR_FLOW_TEST_PARAM, *LPNET_DVR_FLOW_TEST_PARAM;

typedef struct tagNET_DVR_FLOW_INFO
{
	DWORD  dwSize;             //?芍???車??
	DWORD  dwSendFlowSize;     //﹞????‾???車??,????kbps
	DWORD  dwRecvFlowSize;     //?????‾???車??,????kbps
	BYTE   byRes[20];          //㊣??? 
}NET_DVR_FLOW_INFO, *LPNET_DVR_FLOW_INFO;

//  ????㊣那??
#define LABEL_NAME_LEN 40
typedef struct tagNET_DVR_RECORD_LABEL
{
	DWORD  dwSize;                    // ?芍?????車??
	NET_DVR_TIME  struTimeLabel;            // ㊣那?????㊣?? 
	BYTE    byQuickAdd;                // ??﹞??足???赤?? ?足???赤???㊣㊣那?????????∫
	BYTE    byRes1[3];                // ㊣???℅???
	BYTE    sLabelName[LABEL_NAME_LEN];    // ㊣那???????? ?∟????40℅???  
	BYTE    byRes2[40];                // ㊣???℅???
}NET_DVR_RECORD_LABEL, *LPNET_DVR_RECORD_LABEL;

#define  LABEL_IDENTIFY_LEN     64
typedef struct tagNET_DVR_LABEL_IDENTIFY
{
	BYTE    sLabelIdentify[LABEL_IDENTIFY_LEN];    // 64℅???㊣那??
	BYTE    byRes[8];               // ㊣???℅???
}NET_DVR_LABEL_IDENTIFY, *LPNET_DVR_LABEL_IDENTIFY;

#define MAX_DEL_LABEL_IDENTIFY  20// ??????℅??車㊣那??㊣那??????

typedef struct tagNET_DVR_DEL_LABEL_PARAM
{
	DWORD   dwSize;       // ?芍?????車??
	BYTE    byMode;   // ∼???㊣赤??,0x01㊣赤??∼?㊣那??????
	BYTE    byRes1;
	WORD    wLabelNum;      // ㊣那??????      
	NET_DVR_LABEL_IDENTIFY struIndentify[MAX_DEL_LABEL_IDENTIFY]; // ㊣那??㊣那??
	BYTE    byRes2[160];   //㊣???℅???    
}NET_DVR_DEL_LABEL_PARAM, *LPNET_DVR_DEL_LABEL_PARAM;

typedef struct tagNET_DVR_MOD_LABEL_PARAM
{
	NET_DVR_LABEL_IDENTIFY struIndentify; //????????㊣那??㊣那??
	BYTE byRes1[24];
	BYTE sLabelName[LABEL_NAME_LEN];    //?????車??㊣那??????
	BYTE byRes2[40];
}NET_DVR_MOD_LABEL_PARAM, *LPNET_DVR_MOD_LABEL_PARAM;

// ㊣那?????‾?芍????
typedef struct tagNET_DVR_FIND_LABEL
{
	DWORD       dwSize;          // ?芍?????車??
	LONG        lChannel;        // ?谷?????“??
	NET_DVR_TIME    struStartTime;    // ?????㊣??
	NET_DVR_TIME    struStopTime;    // ?芍???㊣??
	BYTE        sLabelName[LABEL_NAME_LEN];    //  ????㊣那?????? ????㊣那?????????????辰???‾?????㊣???迄??㊣那??
	BYTE        byDrawFrame;        //0:???谷????1???谷??
	BYTE   	    byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char cStartTimeDifferenceH;   //?????㊣????UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣??
	char cStartTimeDifferenceM;   //?????㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	char cStopTimeDifferenceH;    //?芍???㊣????UTC???㊣???“???㊣????-12 ... +14??????㊣赤?????㊣??
	char cStopTimeDifferenceM;    //?芍???㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	BYTE        byRes[34];        // ㊣???℅???
}NET_DVR_FIND_LABEL, *LPNET_DVR_FIND_LABEL;

// ㊣那???????芍????
typedef struct tagNET_DVR_FINDLABEL_DATA
{
	BYTE    sLabelName[LABEL_NAME_LEN];    // ㊣那??????
	NET_DVR_TIME struTimeLabel;        // ㊣那???㊣??
	NET_DVR_LABEL_IDENTIFY struLabelIdentify; // ㊣那??㊣那??
	BYTE   	    byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char cTimeDifferenceH;   //?????㊣????UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣??
	char cTimeDifferenceM;   //?????㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	BYTE        byRes[29];            // ㊣???℅???
}NET_DVR_FINDLABEL_DATA, *LPNET_DVR_FINDLABEL_DATA;

#define CARDNUM_LEN_V30 40
//?迆??????
typedef enum _COUNTRY_INDEX_
{
	COUNTRY_NONSUPPORT = 0,   //0-??﹞“?????∫???????迆??
							  /*???車?? ??????235?迆???????? */
							  /*?﹞?? 48???迆???????? ???? ?????﹞??(Cyprus)???????﹞?????????迆??*/
							  COUNTRY_CZE = 1, //Czech Republic ?????????迆
							  COUNTRY_FRA = 2, //France ﹞“?迆
							  COUNTRY_DEU = 3, //Germany ???迆
							  COUNTRY_ESP = 4, //Spain ?‾∼角??
							  COUNTRY_ITA = 5, //Italy ???車??
							  COUNTRY_NLD = 6, //Netherlands ????
							  COUNTRY_POL = 7, //Poland ?“??
							  COUNTRY_SVK = 8, //Slovakia ????﹞???
							  COUNTRY_BLR = 9, //Belarus ∼℅?赤????
							  COUNTRY_MDA = 10, //Moldova ?????角??
							  COUNTRY_RUS = 11, //Russia ?赤????
							  COUNTRY_UKR = 12, //Ukraine ??????
							  COUNTRY_BEL = 13, //Belgium ㊣????㊣
							  COUNTRY_BGR = 14, //Bulgaria ㊣???????
							  COUNTRY_DNK = 15, //Denmark ?∟?車
							  COUNTRY_FIN = 16, //Finland ﹞???
							  COUNTRY_GBR = 17, //United Kingdom ???迆
							  COUNTRY_GRC = 18, //Greece ???∼
							  COUNTRY_HRV = 19, //Croatia ????????
							  COUNTRY_HUN = 20, //Hungary ??????
							  COUNTRY_ISR = 21, //Israel ??????(????)
							  COUNTRY_LUX = 22, //Luxembourg ????㊣∟
							  COUNTRY_MKD = 23, //Macedonia ?赤?????????迆
							  COUNTRY_NOR = 24, //Norway  ????
							  COUNTRY_PRT = 25, //Portuga ??????
							  COUNTRY_ROU = 26, //Romania ???赤?芍??
							  COUNTRY_SRB = 27, //Serbia ????????
							  COUNTRY_AZE = 28, //Azerbaijan ∼???∼????????迆(????)
							  COUNTRY_GEO = 29, //Georgia  ????????(????)
							  COUNTRY_KAZ = 30, //Kazakhstan ??????????(????)
							  COUNTRY_LTU = 31, //Lithuania ???????????迆
							  COUNTRY_TKM = 32, //Turkmenistan ?????邦????(????)
							  COUNTRY_UZB = 33, //Uzbekistan ??℅?㊣???????(????)
							  COUNTRY_LVA = 34, //Latvia ????????
							  COUNTRY_EST = 35, //Estonia ∼????芍??
							  COUNTRY_ALB = 36, //Albania ∼???∼??芍??
							  COUNTRY_AUT = 37, //Austria ∼?????
							  COUNTRY_BIH = 38, //Bosnia and Herzegovina ?“???芍??????????????
							  COUNTRY_IRL = 39, //Ireland ∼?????
							  COUNTRY_ISL = 40, //Iceland ㊣迄??
							  COUNTRY_VAT = 41, //Vatican 豕車????
							  COUNTRY_MLT = 42, //Malta ?赤?迆??
							  COUNTRY_SWE = 43, //Sweden ????
							  COUNTRY_CHE = 44, //Switzerland ????
							  COUNTRY_CYP = 45, //Cyprus ?????﹞??
							  COUNTRY_TUR = 46, //Turkey ???迆??
							  COUNTRY_SVN = 47, //Slovenia ???????芍??
							  COUNTRY_MTG = 48, //Montenegro ?????????迆
							  COUNTRY_KOV = 49, //Kosovo ???‾??
							  COUNTRY_ADR = 50, //Andorra ∼?????
							  COUNTRY_ARM = 51, //Armenia ?????芍??(????)
							  COUNTRY_MON = 52, //Monaco ??????
							  COUNTRY_LIE = 53, //Liechtenstein ???∫??????
							  COUNTRY_SMO = 54, //San Marino ???赤????
							  COUNTRY_ORN = 55, //Aland ∼???(﹞???℅?????)
							  COUNTRY_RES2 = 56, //㊣???℅???
							  COUNTRY_RES3 = 57, //㊣???℅???
							  COUNTRY_RES4 = 58, //㊣???℅???
												 /*???? 48???迆?? ???? ?????﹞??(Cyprus)???????﹞?????????迆??*/
												 COUNTRY_CHI = 59, //China ???迆
												 COUNTRY_IBN = 60, //In bahrain ∼???
												 COUNTRY_SKR = 61, //South Korea ???迆
												 COUNTRY_LEB = 62, //Lebanon ?豕∼???
												 COUNTRY_NEP = 63, //Nepal ?芍???? 
												 COUNTRY_THA = 64, //Thailand ???迆
												 COUNTRY_PAK = 65, //Pakistan ∼??迄????
												 COUNTRY_EMI = 66, //The united Arab emirates ∼????????????∟?迆
												 COUNTRY_BHU = 67, //Bhutan ???∟
												 COUNTRY_OMA = 68, //Oman ∼??邦
												 COUNTRY_KOR = 69, //North Korea ????
												 COUNTRY_PHI = 70, //The Philippines ﹞???㊣?
												 COUNTRY_CAM = 71, //Cambodia ?赤????
												 COUNTRY_QAT = 72, //Qatar ?“????
												 COUNTRY_KYR = 73, //Kyrgyzstan ????????????
												 COUNTRY_MAL = 74, //The maldives ?赤???迆﹞辰
												 COUNTRY_MLY = 75, //Malaysia ?赤???‾??
												 COUNTRY_MOG = 76, //Mongolia ????
												 COUNTRY_ARA = 77, //Saudi Arabia ????∼?????
												 COUNTRY_BRU = 78, //brunei ????
												 COUNTRY_LAO = 79, //Laos ????
												 COUNTRY_JAP = 80, //Japan ??㊣?
												 COUNTRY_RES19 = 81, //㊣???℅???
												 COUNTRY_PAS = 82, //Palestinian state ∼????????迆
												 COUNTRY_TAJ = 83, //Tajikistan ??????????
												 COUNTRY_KUW = 84, //Kuwait ??????
												 COUNTRY_SYR = 85, //Syria ??????
												 COUNTRY_IND = 86, //India ????
												 COUNTRY_ISA = 87, //Indonesia ?????芍?‾??
												 COUNTRY_AFG = 88, //Afghanistan ∼?????
												 COUNTRY_LAN = 89, //Sri Lanka ???????“
												 COUNTRY_IRQ = 90, //Iraq ??????
												 COUNTRY_VIE = 91, //Vietnam ????
												 COUNTRY_IRA = 92, //Iran ????
												 COUNTRY_YEM = 93, //yemen ????
												 COUNTRY_JOR = 94, //Jordan ????
												 COUNTRY_BUR = 95, //Burma ???谷
												 COUNTRY_SIK = 96, //Sikkim ????
												 COUNTRY_BAN = 97, //Bangladesh ???????迆
												 COUNTRY_SGA = 98, //Singapore ??????
												 COUNTRY_EAT = 99, //East timor ???????“?????????????????????赤?角?迆??????????
												 COUNTRY_RES5 = 100, //㊣???℅???
												 COUNTRY_RES6 = 101, //㊣???℅???
												 COUNTRY_RES7 = 102, //㊣???℅???
												 COUNTRY_RES8 = 103, //㊣???℅???
																	 /*﹞??? 60???迆????????*/
																	 COUNTRY_EGT = 104, //Egypt ∼??∼
																	 COUNTRY_LIY = 105, //Libya ??㊣???
																	 COUNTRY_SUA = 106, //Sudan ???∟
																	 COUNTRY_TUN = 107, //Tunisia ???芍??
																	 COUNTRY_ALG = 108, //Algeria ∼????∼????
																	 COUNTRY_MCC = 109, //Morocco ??????
																	 COUNTRY_ETH = 110, //Ethiopia ∼????赤㊣???
																	 COUNTRY_ERI = 111, //Eritrea ?辰????????
																	 COUNTRY_SDE = 112, //Somalia Democratic ?‾?赤??
																	 COUNTRY_DJI = 113, //Djibouti ?????芍
																	 COUNTRY_KEN = 114, //Kenya ???芍??
																	 COUNTRY_TAI = 115, //Tanzania ?????芍??
																	 COUNTRY_UGA = 116, //Uganda ??????
																	 COUNTRY_RWA = 117, //Rwanda ???迆??
																	 COUNTRY_BUD = 118, //Burundi ??????
																	 COUNTRY_SEY = 119, //Seychelles ???角??
																	 COUNTRY_CHA = 120, //Chad ?∫??
																	 COUNTRY_CEA = 121, //Central African ??﹞?
																	 COUNTRY_CON = 122, //Cameroon ???車?? 
																	 COUNTRY_EQG = 123, //Equatorial Guinea?角????????
																	 COUNTRY_GAB = 124, //Gabon ????
																	 COUNTRY_TCO = 125, //the Congo ?????????迆?“?????????“??????
																	 COUNTRY_DRC = 126, //Democratic Republic of the Congo ???????‾?????迆?“?????????“??????
																	 COUNTRY_STP = 127, //Sao Tome and Principe ???角?????????‾㊣?
																	 COUNTRY_MAN = 128, //Mauritania ???????芍??
																	 COUNTRY_WSA = 129, //Western Sahara ?‾???????“????????
																	 COUNTRY_SEL = 130, //Senegal ????????
																	 COUNTRY_TGA = 131, //the Gambia ??㊣???
																	 COUNTRY_MAI = 132, //Mali ?赤??
																	 COUNTRY_BUF = 133, //Burkina Faso ???迄??﹞“?‾
																	 COUNTRY_GUI = 134, //Guinea ??????
																	 COUNTRY_GUB = 135, //Guinea-Bissau ??????㊣???
																	 COUNTRY_CAV = 136, //Cape Verde ﹞????? 
																	 COUNTRY_SLE = 137, //Sierra Leone ??????∼?
																	 COUNTRY_LIR = 138, //Liberia ??㊣?????
																	 COUNTRY_IVC = 139, //Ivory Coast ????????
																	 COUNTRY_GHA = 140, //Ghana ????
																	 COUNTRY_TGO = 141, //Togo ?角??
																	 COUNTRY_BEN = 142, //Benin ㊣???
																	 COUNTRY_NIG = 143, //Niger ?芍????
																	 COUNTRY_ZAB = 144, //Zambia ??㊣???
																	 COUNTRY_ANG = 145, //Angola ∼?????
																	 COUNTRY_ZBE = 146, //Zimbabwe ?辰∼????∟
																	 COUNTRY_MAW = 147, //Malawi ?赤????
																	 COUNTRY_MOQ = 148, //Mozambique ????㊣???
																	 COUNTRY_BOT = 149, //Botswana ????????
																	 COUNTRY_NAM = 150, //Namibia ???℅㊣???
																	 COUNTRY_SAF = 151, //South Africa ??﹞?
																	 COUNTRY_SWD = 152, //Swaziland ????????
																	 COUNTRY_LES = 153, //Lesotho ???‾??
																	 COUNTRY_MAG = 154, //Madagasca ?赤????????
																	 COUNTRY_UOC = 155, //Union of Comoros ??????
																	 COUNTRY_MAT = 156, //Mauritius ?????車??
																	 COUNTRY_NGE = 157, //Nigeria ?芍??????
																	 COUNTRY_SSD = 158, //South Sudan ?????∟ 
																	 COUNTRY_SAH = 159, //Saint Helena ?????????“???迆????????
																	 COUNTRY_MYT = 160, //Mayotte ?赤?????“﹞“?迆????????
																	 COUNTRY_REN = 161, //Reunion ???芍?迆?“﹞“?迆????????
																	 COUNTRY_CAI = 162, //Canary Islands ???????????“?‾∼角???????足????
																	 COUNTRY_AZO = 163, //AZORES ???????????“㊣㊣?車?‾?車﹞????‾??∼??“??????????
																	 COUNTRY_MAD = 164, //Madeira ?赤?????????“㊣㊣?車?‾?車﹞????‾??∼??“??????????
																	 COUNTRY_RES9 = 165, //㊣???℅???
																	 COUNTRY_RES10 = 166, //㊣???℅???
																	 COUNTRY_RES11 = 167, //㊣???℅???
																	 COUNTRY_RES12 = 168, //㊣???℅???
																						  /*???? 55???迆????????*/
																						  COUNTRY_CAD = 169, //Canada ?????車
																						  COUNTRY_GRE = 170, //Greenland Nuuk ???那???“?∟?車???迆??????℅????足????
																						  COUNTRY_PIE = 171, //Pierre and Miquelon ???∟∼????????????“﹞“?迆?????足????
																						  COUNTRY_USA = 172, //United States ???迆
																						  COUNTRY_BER = 173, //Bermuda ∼????車?“???迆?????足????
																						  COUNTRY_MEX = 174, //Mexico ???‾??
																						  COUNTRY_GUA = 175, //Guatemala ?????赤??
																						  COUNTRY_BLI = 176, //Belize ????℅?
																						  COUNTRY_SAR = 177, //El Salvador ???????角
																						  COUNTRY_HOR = 178, //Honduras ?谷??????
																						  COUNTRY_NIC = 179, //Nicaragua ?芍??????
																						  COUNTRY_COR = 180, //Costa Rica ???????豕??
																						  COUNTRY_PAN = 181, //Panama ∼????赤
																						  COUNTRY_TBM = 182, //The Bahamas ∼????赤
																						  COUNTRY_TCI = 183, //The Turks and Caicos Islands ???????????????????????“???迆?????足????
																						  COUNTRY_CUB = 184, //Cuba ??∼?
																						  COUNTRY_JAM = 185, //Jamaica ???辰??
																						  COUNTRY_CAY = 186, //Cayman Islands ???邦?????“???迆?????足????
																						  COUNTRY_HAT = 187, //Haiti ????
																						  COUNTRY_TDO = 188, //The Dominican ?角?℅?芍??
																						  COUNTRY_PUR = 189, //Puerto Rico ?“?角?豕?‾?“???迆?????足????
																						  COUNTRY_VIL = 190, //The United States Virgin Islands??????????????
																						  COUNTRY_BVI = 191, //The British Virgin Islands ??????????????
																						  COUNTRY_ATV = 192, //Anguilla The Valley ∼??????“???迆?????足????
																						  COUNTRY_ANB = 193, //Antigua and Barbuda ∼??芍????∼?????
																						  COUNTRY_CSM = 194, //Collectivit“? de Saint-Martin ﹞“?????赤???“﹞“?迆?????足????
																						  COUNTRY_ACY = 195, //Autonomous country ???????赤???“???????迆??℅????迆 ??
																						  COUNTRY_SBY = 196, //Saint-Barth“?lemy ??∼??????℅???“﹞“?迆?????足????
																						  COUNTRY_SKN = 197, //Saint Kitts and Nevis ???迄?????芍????
																						  COUNTRY_MOT = 198, //Montserrat ???????????“???迆?????足????
																						  COUNTRY_GLP = 199, //Guadeloupe ?????????“﹞“?迆?????足????
																						  COUNTRY_DOM = 200, //Dominica ?角?℅?芍??
																						  COUNTRY_MTE = 201, //Martinique ?赤?芍?芍???“﹞“?迆?????足????
																						  COUNTRY_LUC = 202, //St. Lucia ?????‾??
																						  COUNTRY_SVG = 203, //Saint Vincent and the Grenadines ????????????????????
																						  COUNTRY_GRD = 204, //Grenada ????????
																						  COUNTRY_BAR = 205, //Barbados ∼?∼??角??
																						  COUNTRY_TRT = 206, //Trinidad and Tobago ?????芍?????角∼???
																						  COUNTRY_CUR = 207, //Cura?ao ?????‾?“???????迆??????℅????迆??
																						  COUNTRY_ARB = 208, //Aruba ∼???∼??“???????迆??????℅????迆??
																						  COUNTRY_NEA = 209, //Netherlands Antilles ????∼???????
																						  COUNTRY_COL = 210, //Colombia ???℅㊣???
																						  COUNTRY_VEN = 211, //Venezuela ????????
																						  COUNTRY_GUY = 212, //Guyana ??????
																						  COUNTRY_SUR = 213, //Suriname ??????
																						  COUNTRY_FRN = 214, //Guyane Francaise ﹞“????????
																						  COUNTRY_ECU = 215, //Ecuador ?辰???角??
																						  COUNTRY_PER = 216, //Peru ????
																						  COUNTRY_BOL = 217, //Bolivia ????????
																						  COUNTRY_PAR = 218, //Paraguay ∼?????
																						  COUNTRY_CLE = 219, //Chile ????
																						  COUNTRY_BRA = 220, //Brazil ∼??‾
																						  COUNTRY_UGY = 221, //Uruguay ??????
																						  COUNTRY_ARG = 222, //Argentina ∼??迄??
																						  COUNTRY_RES13 = 223, //㊣???℅???
																						  COUNTRY_RES14 = 224, //㊣???℅???
																						  COUNTRY_RES15 = 225, //㊣???℅???
																						  COUNTRY_RES16 = 226, //㊣???℅???
																											   /*?車?車?? 25???迆???????? */
																											   COUNTRY_ATN = 227, //Australien ∼??車????
																											   COUNTRY_NED = 228, //Neuseeland ???‾??
																											   COUNTRY_PNG = 229, //Papua New Guinea ∼?????????????
																											   COUNTRY_SAN = 230, //Salomonen ?迄????????
																											   COUNTRY_VAU = 231, //Vanuatu ????∼???
																											   COUNTRY_NCN = 232, //New Caledonia ???????角?芍???“﹞“?迆????????????
																											   COUNTRY_PAU = 233, //Palau ????
																											   COUNTRY_FSM = 234, //Federated States of Micronesia ???????芍?‾????∼?
																											   COUNTRY_MRI = 235, //Marshall Island  ?赤????????
																											   COUNTRY_CNM = 236, //Commonwealth of the Northern Mariana Islands ㊣㊣?赤???????????“???迆????????????
																											   COUNTRY_TEG = 237, //The Territory of Guahan ?????“???迆????????????
																											   COUNTRY_NUR = 238, //Nauru 豕∫??
																											   COUNTRY_KIB = 239, //Kiribati ?迄??∼???
																											   COUNTRY_FID = 240, //Fidschi 足???????
																											   COUNTRY_TNG = 241, //Tonga ????
																											   COUNTRY_TUV = 242, //Tuvalu ??????
																											   COUNTRY_WEF = 243, //Wallis et Futuna  ???????????????“﹞“?迆????????????
																											   COUNTRY_TIS = 244, //The Independent State of Samoa ??????
																											   COUNTRY_EAS = 245, //Eastern Samoa ??????????
																											   COUNTRY_TOE = 246, //Tokelau ???????“???‾????
																											   COUNTRY_NUE = 247, //Niue ??∼??“???‾????
																											   COUNTRY_TCD = 248, //The Cook Islands ?????????“???‾????
																											   COUNTRY_PFP = 249, //Polyn“?sie fran?aiseFrench Polynesia ﹞“???“???芍?‾??
																											   COUNTRY_PID = 250, //Pitcairn Islands ?∟?????‾?????“???迆????????????
																											   COUNTRY_HAW = 251, //Hawaii State ???????“???迆????????????
																											   COUNTRY_RES17 = 252, //㊣???℅???
																											   COUNTRY_RES18 = 253, //㊣???℅???
																											   COUNTRY_UNRECOGNIZED = 0xfe, //Unrecognized ??﹞“??㊣?
																											   COUNTRY_ALL = 0xff, //ALL  ????
}COUNTRY_INDEX;

//∼????????????∟?迆???辰????
typedef enum _EMI_AREA_
{
	EMI_AREA_UNKNOWN = 0,        //???∫?????辰??㊣?
	EMI_AREA_AD,                //∼????迆㊣?
	EMI_AREA_FJR,               //???谷????
	EMI_AREA_DB,                //??∼?
	EMI_AREA_RAK,               //?????赤??
	EMI_AREA_AM,                //∼????邦
	EMI_AREA_SJ,                //????
	EMI_AREA_UMW,               //???﹞???辰
	EMI_AREA_OTHER = 0xff,       //????㊣??“?????豕㊣??∫??????﹞“???????﹞???????辰????????㊣???
} EMI_AREA;

typedef struct tagNET_DVR_FIND_PICTURE_PARAM
{
	DWORD  dwSize;         // ?芍?????車?? 
	LONG   lChannel;       // ?“????
						   /* ?谷?????????角??:0?“?㊣℅???1 ?????足??℅??? 2 ㊣“??℅?????
						   3 ㊣“?? | ?????足??℅??? 4 ㊣“?? & ?????足??℅??? 6 ????℅??? ,
						   9-????????,10- PIR㊣“????11- ????㊣“????12- ????㊣“??,
						   0xa ?∟???㊣??????0xd ?????足??, 0xe ?????足????0xf ???????辰?足????
						   0x10 ???∼㊣??邦?足??, 0x11-?豕㊣?㊣?????﹞??㊣????, 0x12-?????足??,
						   0x13-???????辰?足??,0x14-???????辰?足??,0x15-?????足??,
						   0x16-???㊣?????足??,0x17-?足???????足??,0x18-?????足??,
						   0x19-???﹞?????足??,0x1a-???﹞?????足??, 0x1b-?????足??,
						   0x1c-?足???足??,0x1d-???∟????,0x1e-?????足??,0x1f-﹞??????足??,
						   0x20-?????足????0x21-?????∟????0x22-????㊣“??, 0x23????㊣“??,
						   0x24?????足??,0x25-????℅???,0x26-????????㊣“??,0x2a-???赤?足??,
						   0x2b-????????,0x2c-???????㊣,0x2d-∼????㊣?足??,0x2e-????℅???,
						   0x2f-??????㊣那℅???,0x30-????℅????“??, 0x31-?足????㊣那?足??,
						   0x32-﹞???㊣“??, 0x33-???㊣?車?迆, 0x34-????℅???,0x35-﹞?﹞“∼???,
						   0x36-???㊣?????“?????∟????,0x37-?????足??,0x38-?????足???足??,
						   0x39-?????????足??, 0x3a-????, 0x3b-????,0x3c-????,0x3d-?迆??﹞?,0x3e-㊣???,0x3f-???﹞,0x40-?????足??,0x41-?﹞??,
						   0x42-?℅?‾??,0x43-?“?赤?足??,0x44-???∟,0x45-????,0x46-???“?????足??, 0x47-?角﹞???????0x48-??????﹞?㊣“??
						   0xff- ?????角??*/
	BYTE   byFileType;
	BYTE   byNeedCard;     // ??﹞??豕???“??
						   /*
						   0-㊣?????1-∼???2-????3-????4-????5-????6-????7-????
						   8-?車??9-?赤??10-????11-????12-????13-????14-????
						   15-????16-????17-????18-????19-????20-????21-?角??
						   22-????23-?迆??24-????25-????26-?“??27-?“??28-?辰??
						   29-????30-????31-????32-????33-????34-????0xff-????
						   */
	BYTE   byProvince;     //??﹞??‾????
	BYTE   byEventType;      // ?????角????0㊣?????1-???“??????2-???????∟??3-????????
	BYTE   sCardNum[CARDNUM_LEN_V30];     // ?“??
	NET_DVR_TIME  struStartTime;//?谷?????????????㊣??
	NET_DVR_TIME  struStopTime;// ?谷?????????芍???㊣??
							   //ITC3.7 ????
	DWORD    dwTrafficType; //?????足?‾?迆?∫?? ???? VCA_OPERATE _TYPE 
	DWORD    dwVehicleType; //?????角?? ???? VCA_VEHICLE_TYPE
							//?????足???角?????? VCA_ILLEGAL_TYPE ?㊣?∼???∫??????
	DWORD    dwIllegalType;
	BYTE     byLaneNo;  //??????(1~99)
	BYTE     bySubHvtType;//0-㊣???,1-?迆????(?迆????℅??角?????∫???????足?‾????﹞??足?‾),2-﹞??迆????,3-????
	BYTE     byRes2[2];
	char     sLicense[MAX_LICENSE_LEN/*16*/];    //????????
	BYTE     byRegion;     // ???辰?‾???? 0-㊣?????1-?﹞??(Europe Region)??2-?赤?????辰(Russian Region)??3-?﹞??&?赤????(EU&CIS), 4-????(Middle East),0xff-?迄??
	BYTE     byCountry;     // ?迆???‾????????????COUNTRY_INDEX 
	BYTE     byArea;  //????
	BYTE   	    byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char cStartTimeDifferenceH;   //?????㊣????UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣??
	char cStartTimeDifferenceM;   //?????㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	char cStopTimeDifferenceH;    //?芍???㊣????UTC???㊣???“???㊣????-12 ... +14??????㊣赤?????㊣??
	char cStopTimeDifferenceM;    //?芍???㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
}NET_DVR_FIND_PICTURE_PARAM, *LPNET_DVR_FIND_PICTURE_PARAM;

#define PICTURE_NAME_LEN 64
#define PICTURE_INFO_MAX_SIZE 640*960*1.5

typedef struct
{
	char    sFileName[PICTURE_NAME_LEN];//??????
	NET_DVR_TIME struTime;//???????㊣??
	DWORD dwFileSize;//???????車??
	char    sCardNum[CARDNUM_LEN_V30];    //?“??
	BYTE   byPlateColor;//?????芍?? VCA_PLATE_COLOR
	BYTE   byVehicleLogo;//?????芍?? VLR_VEHICLE_CLASS
	BYTE   byEventSearchStatus; //????????㊣赤???????谷???芍?????㊣?辰??0-㊣赤???車????????????????1-㊣赤???車????????????????℅???????????∼邦?“℅??車????℅?????0????????
	BYTE   byRecogResult;//??㊣??芍???????芍??VTR_RESULT
	char   sLicense[MAX_LICENSE_LEN/*16*/];    //????????
	BYTE   byRes[12];
}NET_DVR_FIND_PICTURE, *LPNET_DVR_FIND_PICTURE;

#define MAX_RECORD_PICTURE_NUM  50      //  ℅??車㊣?﹞?????????  

typedef struct tagNET_DVR_BACKUP_PICTURE_PARAM
{
	DWORD  dwSize;         // ?芍?????車??   
	DWORD  dwPicNum;
	NET_DVR_FIND_PICTURE struPicture[MAX_RECORD_PICTURE_NUM];
	BYTE   byDiskDes[DESC_LEN_32];
	BYTE   byWithPlayer;
	BYTE   byContinue;    /*??﹞?????㊣?﹞? 0?????? 1????*/
	BYTE   byRes[34];
}NET_DVR_BACKUP_PICTURE_PARAM, *LPNET_DVR_BACKUP_PICTURE_PARAM;

typedef struct
{
	DWORD dwSize;           //?芍?????車??
	DWORD dwChannel;        //?“????
	BYTE  byCompressType;   //?????????????????角??1,?‾???‾2,℅????‾3,????
	BYTE  byRes[15];        //㊣???
	NET_DVR_COMPRESSIONCFG_V30  struCurrentCfg; //?㊣?∼????????????
}NET_DVR_COMPRESSION_LIMIT, *LPNET_DVR_COMPRESSION_LIMIT;

#define   STEP_READY       0    //℅?㊣?????
#define   STEP_RECV_DATA   1    //????????∼邦????
#define   STEP_UPGRADE     2    //????????
#define   STEP_BACKUP      3    //㊣?﹞?????
#define   STEP_SEARCH      255  //???‾????????

typedef struct tagNET_DVR_VIDEO_EFFECT
{
	DWORD dwBrightValue;      //????[0,255]
	DWORD dwContrastValue;    //??㊣???[0,255]
	DWORD dwSaturationValue;  //㊣?????[0,255]
	DWORD dwHueValue;         //???‾[0,255]
	DWORD dwSharpness;          //????[0,255]
	DWORD dwDenoising;          //????[0,255]
	BYTE  byRes[12];
}NET_DVR_VIDEO_EFFECT, *LPNET_DVR_VIDEO_EFFECT;

typedef struct tagNET_DVR_VIDEO_INPUT_EFFECT
{
	DWORD                    dwSize;                //?芍?????車??
	WORD                    wEffectMode;        //???? 0-㊣那℅? 1-???? 2-???? 3-????  255-℅??“??
	BYTE                    byRes1[146];        //㊣???
	NET_DVR_VIDEO_EFFECT    struVideoEffect;    //?????∫??????
	BYTE                    byRes2[60];            //㊣???
}NET_DVR_VIDEO_INPUT_EFFECT, *LPNET_DVR_VIDEO_INPUT_EFFECT;


typedef struct tagNET_DVR_VIDEOPARA_V40
{
	DWORD    dwChannel;            // ?“????
	DWORD    dwVideoParamType;      // ?????????角?? 0-???? 1-??㊣??? 2-㊣????? 3-???? 4-???? 5-????
	DWORD    dwVideoParamValue;  //??????????????????﹞??∫??????????
	BYTE     byRes[12];
}NET_DVR_VIDEOPARA_V40, *LPNET_DVR_VIDEOPARA_V40;

typedef struct tagNET_DVR_DEFAULT_VIDEO_COND
{
	DWORD    dwSize;            // ?芍?????車??
	DWORD    dwChannel;        // ?“????
	DWORD    dwVideoMode;    // ????
	BYTE    byRes[32];      // ㊣???
}NET_DVR_DEFAULT_VIDEO_COND, *LPNET_DVR_DEFAULT_VIDEO_COND;

typedef struct tagNET_DVR_ENCODE_JOINT_PARAM
{
	DWORD    dwSize;            // ?芍?????車??
	BYTE    byJointed;        //  0 ???????? 1 ????????
	BYTE    byDevType;        // ㊣????????豕㊣??角??  1 ?迆㊣赤?????豕㊣?
	BYTE    byRes1[2];        // ㊣???℅???
	NET_DVR_IPADDR    struIP;            // ??????㊣????‾?豕㊣?IP???﹞
	WORD    wPort;            // ??????㊣????‾?豕㊣???????
	WORD    wChannel;        // ??????㊣????‾?豕㊣??“????
	BYTE    byRes2[20];            // ㊣???℅???
}NET_DVR_ENCODE_JOINT_PARAM, *LPNET_DVR_ENCODE_JOINT_PARAM;

typedef struct tagNET_DVR_VCA_CHAN_WORKSTATUS
{
	BYTE    byJointed;                // 0-????????  1-????????
	BYTE    byRes1[3];
	NET_DVR_IPADDR    struIP;                    // ?????????‾?豕㊣?IP???﹞
	WORD    wPort;                    // ?????????‾?豕㊣???????
	WORD    wChannel;                // ?????????‾?豕㊣??“????
	BYTE    byVcaChanStatus;        // 0 - ?????? 1 - ????
	BYTE    byRes2[19];                // ㊣???℅???
}NET_DVR_VCA_CHAN_WORKSTATUS, *LPNET_DVR_VCA_CHAN_WORKSTATUS;

typedef struct tagNET_DVR_VCA_DEV_WORKSTATUS
{
	DWORD    dwSize;            // ?芍?????車??
	BYTE    byDeviceStatus;    // ?豕㊣???℅???0 - ?????∟℅‾ 1- ???????∟℅‾
	BYTE    byCpuLoad;        // CPU??????0-100 ﹞?㊣??迆㊣赤????∼?﹞???
	NET_DVR_VCA_CHAN_WORKSTATUS struVcaChanStatus[MAX_VCA_CHAN];
	DWORD    dwRes[40];        // ㊣???℅???
}NET_DVR_VCA_DEV_WORKSTATUS, *LPNET_DVR_VCA_DEV_WORKSTATUS;

typedef struct tagNET_DVR_VGA_DISP_CHAN_CFG_V40
{
	DWORD    dwSize;
	BYTE   byAudio;            /*??????﹞?????*/
	BYTE   byAudioWindowIdx;      /*????????℅??∼??*/
	BYTE     byVgaResolution;      /*﹞?㊣?????????????????*/
	BYTE    byVedioFormat;         /*1:NTSC,2:PAL??0-NULL*/
	DWORD    dwWindowMode;        /*????????????????????*/
	BYTE      byJoinDecChan[MAX_WINDOWS];/*?‾??℅??∼?????????????“??*/
	BYTE    byEnlargeStatus;          /*??﹞?????﹞??車℅?????0????﹞??車??1??﹞??車*/
	BYTE    byEnlargeSubWindowIndex;//﹞??車??℅??∼????
	BYTE    byScale; /*??????????0---??????????1---??﹞?????( ????BNC )*/
					 /*??﹞?????????0-????℅??????“?????????‾?????“????????1-?????????‾?????“??????*/
	BYTE    byUnionType;
	union
	{
		BYTE byRes[160];
		struct
		{
			/*?‾??℅??∼???????????“???迄??????????℅?????????????(????????℅??????“??????℅????????∫)*/
			BYTE    byJoinDecoderId[MAX_WINDOWS];
			//?????∼???迄??????﹞?㊣?????1-D1,2-720P,3-1080P???豕㊣????豕???迄????//﹞?㊣????????????“????﹞???????1﹞?????????1080P???辰?豕㊣??芍∼?4???????“
			//????﹞????????????“??
			BYTE    byDecResolution;
			BYTE    byRes[143];
		}struVideoPlatform;
		struct
		{
			BYTE    byRes[160];
		}struNotVideoPlatform;
	}struDiff;
	BYTE    byRes[120];
}NET_DVR_VGA_DISP_CHAN_CFG_V40, *LPNET_DVR_VGA_DISP_CHAN_CFG_V40;

typedef struct tagNET_DVR_V6SUBSYSTEMPARAM
{
	BYTE        bySerialTrans;//??﹞???????0-﹞???1-??
	BYTE        byRes[35];
}NET_DVR_V6SUBSYSTEMPARAM, *LPNET_DVR_V6SUBSYSTEMPARAM;




typedef struct tagNET_DVR_CORRECT_DEADPIXEL_PARAM
{
	DWORD dwSize;
	DWORD dwCommand; //?邦????0-??????????????1-?赤????????2-㊣?????????3-????????
	DWORD dwDeadPixelX; //????X℅?㊣那
	DWORD dwDeadPixelY; //????Y℅?㊣那
	BYTE byRes[12]; //㊣???
}NET_DVR_CORRECT_DEADPIXEL_PARAM, *LPNET_DVR_CORRECT_DEADPIXEL_PARAM;

#define MAX_REDAREA_NUM   6   //℅??車?足???????辰????

typedef struct tagNET_DVR_CORRECT_PARAMS
{
	BYTE byYellowIntervalTime;//???????????㊣?????????????“s??
	BYTE byDigTrafficLight;//??﹞??????“??℅???????0-??????1-??
	BYTE byRes[2];
}NET_DVR_CORRECT_PARAMS, *LPNET_DVR_CORRECT_PARAMS;

typedef struct tagNET_DVR_REDAREACFG
{
	DWORD dwSize;
	DWORD dwCorrectEnable; //??﹞???????????????0-??㊣???1-????
	DWORD dwCorrectLevel; //??????㊣???1(??????℅???)-10(??????℅???),??????5
	DWORD dwAreaNum; //???????辰????
	NET_VCA_RECT struLaneRect[MAX_REDAREA_NUM]; //???????辰
	NET_DVR_CORRECT_PARAMS struCorrectParam[MAX_REDAREA_NUM/*6*/]; //???????辰?????????????辰????
	BYTE   byRes2[8]; //㊣???
}NET_DVR_REDAREACFG, *LPNET_DVR_REDAREACFG;

typedef struct tagNET_DVR_HISTORICDATACFG
{
	DWORD dwSize;
	DWORD dwTotalNum;  //?迆?﹞????????
	BYTE byRes[16];
}NET_DVR_HISTORICDATACFG, *LPNET_DVR_HISTORICDATACFG;


#define INQUEST_MESSAGE_LEN     44    //?車??????㊣那???????∟??
#define INQUEST_MAX_ROOM_NUM    2     //℅??車?車????????
#define MAX_RESUME_SEGMENT      2     //?∫?????㊣??????????????

typedef struct tagNET_DVR_INQUEST_ROOM
{
	BYTE        byRoomIndex;     //?車????㊣角??
	BYTE        byFileType;        //0-?車????????1-????????????
	BYTE        byRes[22];       //㊣???
}NET_DVR_INQUEST_ROOM, *LPNET_DVR_INQUEST_ROOM;

typedef struct tagNET_DVR_INQUEST_MESSAGE
{
	char         sMessage[INQUEST_MESSAGE_LEN]; //????㊣那??????
	BYTE    byRes[46];                     //㊣???
}NET_DVR_INQUEST_MESSAGE, *LPNET_DVR_INQUEST_MESSAGE;

typedef struct tagNET_DVR_INQUEST_SENSOR_DEVICE
{
	WORD    wDeviceType;    //?????????豕㊣?????:0-?? 1-?℅?? 2-???? 3-???? 4-???? 5-??????6-??????7-????????
	WORD    wDeviceAddr;    //?????????豕㊣????﹞    
	BYTE     byRes[28];        //㊣???
}NET_DVR_INQUEST_SENSOR_DEVICE, *LPNET_DVR_INQUEST_SENSOR_DEVICE;

typedef struct tagNET_DVR_INQUEST_SENSOR_INFO
{
	NET_DVR_INQUEST_SENSOR_DEVICE struSensorDevice[INQUEST_MAX_ROOM_NUM];
	DWORD   dwSupportPro;      //?∫?????谷?角??,∼???㊣赤??, ??∼?㊣?℅???????????????????℅???
							   //0x1:?℅?? 0x2:???? 0x4:????
	BYTE    byRes[120];        //㊣???
}NET_DVR_INQUEST_SENSOR_INFO, *LPNET_DVR_INQUEST_SENSOR_INFO;

typedef struct tagNET_DVR_INQUEST_ROOM_INFO
{
	char        szCDName[NAME_LEN];    //???????????????????????????????迄??
	union
	{
		BYTE     byBitRate;    // byCalcType??0?㊣???∫??(0-32??1-48??2-64??3-80??4-96??5-128??
							   //6-160??7-192??8-224??9-256??10-320??11-384??12-448??
							   //13-512??14-640??15-768??16-896?∼16????㊣???)17-1024??18-1280??19-1536??
							   //20-1792??21-2048??22-3072??23-4096??24-8192
		BYTE    byInquestTime;  // byCalcType??1?㊣???∫??0-1???㊣, 1-2???㊣,2-3???㊣,3-4???㊣, 4-6???㊣,5-8???㊣,6-10???㊣,7-12???㊣
								//8-16???㊣, 9-20???㊣,10-22???㊣,11-24???㊣
	}uCalcMode;
	BYTE        byCalcType;            //?????????角??0-∼????? 1-∼??㊣??
	BYTE        byAutoDelRecord;    // ??﹞?℅?????????????0-???????????芍???㊣㊣??????? 1-????
	BYTE        byAlarmThreshold;        // ?迄??㊣“??﹞∫??
	BYTE        byInquestChannelResolution;     //?車???“??﹞?㊣?????0:720P,1:1080P,2:CIF,3:4CIF,4:WD1,5-VGA
	BYTE        byAutoOpenTray;        //??﹞?℅??????? 0-﹞???1-??
	BYTE        byRes[10];
}NET_DVR_INQUEST_ROOM_INFO, *LPNET_DVR_INQUEST_ROOM_INFO;

typedef struct tagNET_DVR_INQUEST_SYSTEM_INFO
{
	DWORD    dwRecordMode;         //????????:1 ???????????? 2 ???????????? 3 ?????????????“?????豕???????豕㊣???
	DWORD    dwWorkMode;           //?∟℅‾????:0 ㊣那℅????? 1 ?“??????(㊣????????∼????㊣那℅?????)
	DWORD    dwResolutionMode;     //?豕㊣?﹞?㊣?????0:㊣那?? 1:D1 2:720P 3:1080P?“?????車???迆??????℅?????
	NET_DVR_INQUEST_SENSOR_INFO struSensorInfo;  //???????????‾????    
	NET_DVR_INQUEST_ROOM_INFO     struInquestRoomInfo[INQUEST_MAX_ROOM_NUM];
	BYTE    byEnableHashCheck;        //??﹞???????????????HASH?????谷 0-????????1-????????2-????
	BYTE    byEnableInitCD;        //??﹞??????????????? 0-????????1-????????2-????
	BYTE    byRes[22];             //㊣???
}NET_DVR_INQUEST_SYSTEM_INFO, *LPNET_DVR_INQUEST_SYSTEM_INFO;

typedef struct _NET_DVR_INQUEST_ALARM_
{
	DWORD dwSize;
	DWORD dwAlarmType;    /*㊣“???角?? 0-?????迆 1-?????赤?車*/
	BYTE byTrayNo;     /*??????*/
	BYTE byRes[255];
}NET_DVR_INQUEST_ALARM, *LPNET_DVR_INQUEST_ALARM;

typedef struct _NET_DVR_VIDEO_PARKING_POLE_ALARM_
{
	DWORD  dwSize;  //?芍?????車??
	NET_DVR_TIME_V30  struTime;  //??﹞??㊣??
	BYTE  byParkingNum[32];  //????㊣角??
	BYTE  byAlarmType;  //㊣“???角????0-??????1-???﹞????㊣“????2-∼???㊣“????3-﹞?﹞“????㊣“????4-????℅???㊣???
	BYTE  byVehicleEnterState; //????????℅?????0-??????1-??????2-????
	BYTE  byRes[78];
}NET_DVR_VIDEO_PARKING_POLE_ALARM, *LPNET_DVR_VIDEO_PARKING_POLE_ALARM;

typedef struct tagNET_DVR_INQUEST_RESUME_SEGMENT
{
	NET_DVR_TIME  struStartTime; //?????????㊣??
	NET_DVR_TIME  struStopTime;  //?????????㊣??
	BYTE    byRoomIndex;         //?車????㊣角??,??1????
	BYTE    byDriveIndex;        //?????迆㊣角??,??1????
	WORD    wSegmetSize;         //㊣????????車??, ????M 
	DWORD   dwSegmentNo;         //㊣???????㊣????車???????辰??,??1???? 
	BYTE    byRes[24];           //㊣???
}NET_DVR_INQUEST_RESUME_SEGMENT, *LPNET_DVR_INQUEST_RESUME_SEGMENT;

typedef struct tagNET_DVR_INQUEST_RESUME_EVENT
{
	DWORD   dwResumeNum;       //?豕??????????????
	NET_DVR_INQUEST_RESUME_SEGMENT struResumeSegment[MAX_RESUME_SEGMENT];
	BYTE    byResumeMode;        //??????????0-????????????1-??????????
	BYTE    byRes[199];        //㊣???
}NET_DVR_INQUEST_RESUME_EVENT, *LPNET_DVR_INQUEST_RESUME_EVENT;

typedef struct tagNET_DVR_INQUEST_DEVICE_VERSION
{
	BYTE  byMainVersion;         /*?迄???‾∼?㊣?.
								 0 : ????
								 1 : 8000?車??DVR
								 ??∼?㊣?: 1 : 8000HD-S
								 2 : 8100?車??DVR
								 ??∼?㊣?: 1 : ?車??81SNL
								 2 : ?車??81SH
								 3 : ?車??81SFH
								 3 : 8608?????車???迆NVR
								 ??∼?㊣?: 1 : DS-8608SN-SP
								 2 : DS-8608SN-ST
								 */
	BYTE  bySubVersion;          //?迄????∼?㊣?
	BYTE  byUpgradeVersion;      //????∼?㊣?,????????0
	BYTE  byCustomizeVersion;     //?“??∼?㊣?,﹞??“????0
	BYTE  byRes[60];             //㊣???
}NET_DVR_INQUEST_DEVICE_VERSION, *LPNET_DVR_INQUEST_DEVICE_VERSION;

typedef struct tagNET_DVR_DISK_RAID_INFO
{
	DWORD dwSize;   //?芍?????車??
	BYTE byEnable;  //????Raid??﹞?????
	BYTE bySleepStatus;    //0-???∫?? 1-??????2-??????
	BYTE byRes[34];  //㊣???℅???
}NET_DVR_DISK_RAID_INFO, *LPNET_DVR_DISK_RAID_INFO;


typedef struct tagNET_DVR_SYNCHRONOUS_IPC
{
	DWORD dwSize;    //?芍?????車??
	BYTE  byEnable;  //??﹞??????????∼??IPC?????豕㊣?????
	BYTE  byRes[7];  //㊣???
}NET_DVR_SYNCHRONOUS_IPC, *LPNET_DVR_SYNCHRONOUS_IPC;

typedef struct tagNET_DVR_IPC_PASSWD
{
	DWORD dwSize;    //?芍?????車??
	char sOldPasswd[PASSWD_LEN];  //IPC??????????????DVR??DVR?谷?∟
	char sNewPasswd[PASSWD_LEN];  //IPC????????
	BYTE byRes[32];
}NET_DVR_IPC_PASSWD, *LPNET_DVR_IPC_PASSWD;

//?“??????DVR??????℅?????????bps
typedef struct tagNET_DEVICE_NET_USING_INFO
{
	DWORD dwSize;    //?芍?????車??
	DWORD dwPreview;   //?∟??
	DWORD dwPlayback;  //??﹞?
	DWORD dwIPCModule; //IPC????
	DWORD dwNetDiskRW; //????????
	BYTE res[32];
}NET_DVR_DEVICE_NET_USING_INFO, *LPNET_DVR_DEVICE_NET_USING_INFO;

//?“??DVR?豕???∼??IPC??IP???﹞
typedef struct tagNET_DVR_IPC_NETCFG
{
	DWORD dwSize;      //?芍?????車??
	NET_DVR_IPADDR struIP;       //IPC??IP???﹞
	WORD wPort;       //IPC??????
	char res[126];
}NET_DVR_IPC_NETCFG, *LPNET_DVR_IPC_NETCFG;

//∼??㊣?????“
typedef struct tagNET_DVR_TIME_LOCK
{
	DWORD dwSize;      //?芍?????車??
	NET_DVR_TIME strBeginTime;
	NET_DVR_TIME strEndTime;
	DWORD   dwChannel;        //?“????, 0xff㊣赤???迄???“??
	DWORD   dwRecordType;     //?????角??:  0xffffffff????????0???“?㊣??????1-?????足????2??㊣“????﹞???3-㊣“????﹞??辰?????足????4-㊣“????﹞????????足????5-?邦????﹞???6-??????????7-????????(???????谷??)
	DWORD   dwLockDuration;   //???“?????㊣??,??????,0xffffffff㊣赤?????????“
	NET_DVR_TIME_EX strUnlockTimePoint;    //?????㊣???∫???㊣dwLockDuration???????????“?㊣?????“???????㊣???????㊣??????℅???????
	BYTE    byRes[4];
}NET_DVR_TIME_LOCK, *LPNET_DVR_TIME_LOCK;

typedef struct tagNET_DVR_LOCK_RETURN
{
	DWORD dwSize;      //?芍?????車??
	NET_DVR_TIME strBeginTime;
	NET_DVR_TIME strEndTime;
	BYTE    byRes[20];
}NET_DVR_LOCK_RETURN, *LPNET_DVR_LOCK_RETURN;

//67DVS
//?∟?谷?????角??
typedef enum
{
	UPGRADE_CERT_FILE = 0,
	UPLOAD_CERT_FILE = 1,
	TRIAL_CERT_FILE = 2,
	CONFIGURATION_FILE = 3,
	UPLOAD_RECORD_FILE = 4, //????????????
	SCENE_CONFIGURATION_FILE = 5, //???∼????????????
	UPLOAD_PICTURE_FILE = 6,  //????????????
	UPLOAD_VIOLATION_FILE = 7,  //??????﹞“℅???????
	UPLOAD_TG_FILE = 8,  //????TG?“Timing Generator???????“????T1??????
	UPLOAD_DATA_TO_DB = 9,        //????????????????
	UPLOAD_BACKGROUND_PIC = 10, //????㊣??∼????
	UPLOAD_CALIBRATION_FILE = 11, //????㊣那?“????
	UPLOAD_TME_FILE = 12, //?????????????赤????

						  //UPLOAD_TME_FILE = 12, //?????????????赤????
						  UPLOAD_VEHICLE_BLACKWHITELST_FILE = 13,
						  UPLOAD_PICTURE_TO_CLOUD = 15,    //????????????????
						  UPLOAD_VIDEO_FILE = 16,  //????????????
						  UPLOAD_SCREEN_FILE = 17,    //????????﹞????‾????
						  UPLOAD_PUBLISH_MATERIAL = 18,    //????????﹞???????????????
						  UPLOAD_PUBLISH_UPGRADE_FILE = 19,    //????????﹞?????????
						  UPLOAD_RING_FILE = 20,   //????????????
						  UPLOAD_ENCRYPT_CERT = 21,    //?????????∟?谷
						  UPLOAD_THERMOMETRIC_FILE = 22, //????????㊣那?“????
						  UPLOAD_SUBBRAND_FILE = 23, //????????℅??﹞??????
						  UPLOAD_LED_CHECK_FILE = 24,    //????LED????????
						  BATCH_UPLOAD_PICTURE_FILE = 25,  //?迆??????????????
						  UPLOAD_EDID_CFG_FILE = 26, //????EDID????????
						  UPLOAD_PANORAMIC_STITCH = 27,//???????∼℅???????????????
						  UPLOAD_BINOCULAR_COUNTING = 28,//???????㊣???‾????㊣赤
						  UPLOAD_AUDIO_FILE = 29,  //????????????
						  UPLOAD_PUBLISH_THIRD_PARTY_FILE = 30,  //????????﹞?????
						  UPLOAD_DEEPEYES_BINOCULAR = 31,//????TX1????????㊣赤
						  UPLOAD_CERTIFICATE_BLACK_LIST = 32,  //?????赤﹞??∟??????
						  UPLOAD_HD_CAMERA_CORRECT_TABLE = 33,//????2400W????㊣赤
						  UPLOAD_FD_DATA = 35,//????????????????????
						  UPLOAD_FACE_DATA = 36,//????????????????????????
						  UPLOAD_FACE_ANALYSIS_DATA = 37,//???????????????豕㊣???㊣???????㊣那
						  UPLOAD_FILEVOLUME_DATA = 38,//?????????赤????????(???∼????CVR??????)
						  IMPORT_DATA_TO_FACELIB = 39,//?????????????“????????+???????????? ???豕㊣?????????
						  UPLOAD_LEFTEYE_4K_CALIBFILE = 40,//℅車????4K?角?迆㊣那?“?????????????“?????????????????角?迆??
						  UPLOAD_SECURITY_CFG_FILE = 41,//????????∼???????
						  UPLOAD_RIGHT_CONTROLLER_AUDIO = 42, //?????“???????‾????????
						  UPLOAD_MODBUS_CFG_FILE = 43, //????Modbus???谷????????
						  UPLOAD_NOTICE_VIDEO_DATA = 44, //??????????﹞?
						  UPLOAD_RS485_PROTOCOL_DLL_FILE = 45, //????RS485???谷??????????
						  UPLOAD_PIC_BY_BUF = 46,//∼?????????????????????
						  UPLOAD_CLIENT_CALIBFILE = 47,//???∫㊣那?“????????(.pto????????)
						  UPLOAD_HD_CAMERA_CORRECT_TABLE_3200W = 48,//3200W????㊣赤(.cal????????)
						  UPLOAD_DOOR_CONTENT = 49, //??????????????????????
						  UPLOAD_ASR_CONTROL_FILE = 50, //??????㊣?????????????
						  UPLOAD_APP_FILE = 51,//????HEOP APP????
						  UPLOAD_AI_ALGORITHM_MODEL = 52 //AI??﹞????“???‾????????﹞“???????豕㊣?
}NET_SDK_UPLOAD_TYPE;

typedef enum
{
	NET_SDK_DOWNLOAD_CERT = 0,        //?????∟?谷
	NET_SDK_DOWNLOAD_IPC_CFG_FILE = 1,//????IPC????????
	NET_SDK_DOWNLOAD_BASELINE_SCENE_PIC = 2, //?????迄℅????∼????
	NET_SDK_DOWNLOAD_VQD_ALARM_PIC = 3,       //????VQD㊣“??????
	NET_SDK_DOWNLOAD_CONFIGURATION_FILE = 4,   //????????????
	NET_SDK_DOWNLOAD_SCENE_CONFIGURATION_FILE = 5, //???????∼????????
	NET_SDK_DOWNLOAD_FILE_FORM_DB = 6,                //??????????????
													  // NET_SDK_DOWNLOAD_TME_FILE = 7  //?????????????赤????

													  NET_SDK_DOWNLOAD_TME_FILE = 7,  //?????????????赤????
													  NET_SDK_DOWNLOAD_VEHICLE_BLACKWHITELST_FILE = 8, //??????∼℅????????????
													  NET_SDK_DOWNLOAD_GUID_FILE = 9, //????GUID???? 
													  NET_SDK_DOWNLOAD_FILE_FORM_CLOUD = 10,    //????????????????
													  NET_SDK_DOWNLOAD_PICTURE = 11, //????????
													  NET_SDK_DOWNLOAD_VIDEO = 12, //????????
													  NET_DVR_DOWNLOAD_SCREEN_FILE = 13, //????????﹞????‾????
													  NET_SDK_DOWNLOAD_PUBLISH_MATERIAL = 14,    //????????﹞???????????????
													  NET_SDK_DOWNLOAD_THERMOMETRIC_FILE = 15,//????????㊣那?“????
													  NET_SDK_DOWNLOAD_LED_CHECK_FILE = 16,//????LED????????
													  NET_SDK_DOWNLOAD_VEHICLE_INFORMATION = 17,//????????????
													  NET_SDK_DOWNLOAD_CERTIFICATE_BLACK_LIST_TEMPLET = 18, //?????赤﹞??∟????????∼?
													  NET_SDK_DOWNLOAD_LOG_FILE = 19, //????????
													  NET_SDK_DOWNLOAD_FILEVOLUME_DATA = 20,//?????????赤?????????“???∼????CVR?豕㊣??∫????
													  NET_SDK_DOWNLOAD_FD_DATA = 21,//???????“????????????
													  NET_SDK_DOWNLOAD_SECURITY_CFG_FILE = 22,//????????∼???????
													  NET_SDK_DOWNLOAD_PUBLISH_SCHEDULE = 23, //????????
													  NET_SDK_DOWNLOAD_RIGHT_CONTROLLER_AUDIO = 24, //?????“???????‾????????
													  NET_SDK_DOWNLOAD_MODBUS_CFG_FILE = 25, //????Modbus???谷????????
													  NET_SDK_DOWNLOAD_RS485_PROTOCOL_DLL_FILE = 26, //????RS485???谷??????????
													  NET_SDK_DOWNLOAD_CLUSTER_MAINTENANCE_LOG = 27, //???????∟????????
													  NET_SDK_DOWNLOAD_SQL_ARCHIVE_FILE = 28, //?谷????????????????
													  NET_SDK_DOWNLOAD_SUBWIND_STREAM = 29,//????℅??∼?????‾
													  NET_SDK_DOWNLOAD_DEVTYPE_CALIBFILE = 30,//????㊣那?“????????(.cal????????)
													  NET_SDK_DOWNLOAD_HD_CAMERA_CORRECT_TABLE = 31,// 2400W/3200W????㊣赤????(.cal????????)
													  NET_SDK_DOWNLOAD_CLIENT_CALIBFILE = 32,//???∫㊣那?“????????(.pto????????)
													  NET_SDK_DOWNLOAD_FOUE_CAMERAS_PICTURES = 33,//???“??????∼邦????(.tar????????)
													  NET_SDK_DOWNLOAD_DOOR_CONTENT = 34 //??????????????????
}NET_SDK_DOWNLOAD_TYPE;

//????℅???
typedef enum
{
	NET_SDK_DOWNLOAD_STATUS_SUCCESS = 1,    //????????
	NET_SDK_DOWNLOAD_STATUS_PROCESSING,        //????????
	NET_SDK_DOWNLOAD_STATUS_FAILED,            //?????∫∼?
	NET_SDK_DOWNLOAD_STATUS_UNKOWN_ERROR,    //?????赤?車 
	NET_SDK_DOWNLOAD_STATUS_RESOURCE,         //??????℅?
	NET_SDK_DOWNLOAD_STATUS_GUIDFILE_EXPORT_FAIL        //GUID?????????∫∼?
}NET_SDK_DOWNLOAD_STATUS;

//?????????邦???角??
typedef enum tagNET_SDK_DOWNLOAD_CONTROL_TYPE_ENUM
{
	ENUM_DOWNLOAD_CONTROL_ERR = -1,
	ENUM_DOWNLOAD_CONTROL_QOS = 1        //?‾??
}NET_SDK_DOWNLOAD_CONTROL_TYPE_ENUM;

typedef struct tagNET_DVR_PANORAMIC_STITCH_UPLOAD
{
	DWORD     dwSize;
	DWORD        dwChannel;// ?“????
	BYTE        byRes[128];
}NET_DVR_PANORAMIC_STITCH_UPLOAD, *LPNET_DVR_PANORAMIC_STITCH_UPLOAD;

typedef struct NET_DVR_FD_DATA_COND
{
	DWORD       dwSize;
	char        szFDID[NET_SDK_MAX_FDID_LEN/*256*/];   //??????ID
	char        szCheckCode[NET_SDK_CHECK_CODE_LEN/*128*/];   //???谷??
	BYTE         byCover;//??﹞??????????? 0-﹞???1-??
	BYTE        byRes[127];
}NET_DVR_FD_DATA_COND, *LPNET_DVR_FD_DATA_COND;

typedef struct NET_DVR_UPLOAD_FACE_DATA
{
	DWORD       dwSize;
	char        szFDID[NET_SDK_MAX_FDID_LEN/*256*/];   //??????ID
	BYTE        byFDLibType; //???????角??0-㊣???;1-????????2-∼℅????
	BYTE        byRes1[3];
	char        szCustomInfo[NET_SDK_FDPIC_CUSTOM_INFO_LEN/*96*/];   //??????????℅??“??????
	BYTE        byRes[512];
}NET_DVR_UPLOAD_FACE_DATA, *LPNET_DVR_UPLOAD_FACE_DATA;

typedef struct NET_DVR_UPLOAD_FACE_DATA_OUT
{
	char        szPicID[NET_SDK_MAX_PICID_LEN/*256*/];   //????ID
	BYTE        byRes[128];
}NET_DVR_UPLOAD_FACE_DATA_OUT, *LPNET_DVR_UPLOAD_FACE_DATA_OUT;

typedef struct NET_DVR_UPLOAD_FACE_ANALYSIS_DATA_OUT
{
	DWORD       dwSize;
	DWORD       dwPID;//????ID
	DWORD       dwFaceAnalysisNum;//??㊣????????????辰????
	NET_VCA_RECT       struVcaRect[NET_DVR_MAX_FACE_ANALYSIS_NUM];  //??㊣?????????????㊣那??????????
	BYTE        byRes[128];
}NET_DVR_UPLOAD_FACE_ANALYSIS_DATA_OUT, *LPNET_DVR_UPLOAD_FACE_ANALYSIS_DATA_OUT;

typedef struct NET_DVR_SECURITY_CFG_FILE_COND
{
	DWORD       dwSize;
	char        szSecretKey[NET_SDK_SECRETKEY_LEN/*128*/];//???谷????
	BYTE        byRes[128];
}NET_DVR_SECURITY_CFG_FILE_COND, *LPNET_DVR_SECURITY_CFG_FILE_COND;

typedef struct tagNET_DVR_DOWNLOAD_CLUSTER_MAINTENANCE_LOG_PARAM_
{
	DWORD     dwSize;
	BYTE      byType;   //?????角????0-??????1-???辰??2-????
	BYTE      byRes[255];
}NET_DVR_DOWNLOAD_CLUSTER_MAINTENANCE_LOG_PARAM, *LPNET_DVR_DOWNLOAD_CLUSTER_MAINTENANCE_LOG_PARAM;


typedef struct tagNET_DVR_BONJOUR_CFG
{
	DWORD    dwSize;                // ?芍?????車??
	BYTE    byEnableBonjour;        // Bonjour???? 0 ?????? 1????㊣?
	BYTE     byRes1[3];
	BYTE     byFriendlyName[MAX_DOMAIN_NAME];     // ﹞?????
	BYTE     byRes2[128];
}NET_DVR_BONJOUR_CFG, *LPNET_DVR_BONJOUR_CFG;

typedef struct tagNET_DVR_SOCKS_CFG
{
	DWORD            dwSize;                // ?芍?????車??
	BYTE            byEnableSocks;          // ???? 0????㊣? 1??????
	BYTE             byVersion;              // SOCKS∼?㊣? 4??SOCKS4   5??SOCKS5
	WORD            wProxyPort;                // ?迆?赤??????????1080
	BYTE            byProxyaddr[MAX_DOMAIN_NAME];      // ?迆?赤IP???﹞?????????辰??
	BYTE             byUserName[MAX_DOMAIN_NAME];     // ???∫?? SOCKS????
	BYTE             byPassword[NAME_LEN];            // ????SOCKS5????
	BYTE             byLocalAddr[MAX_LOCAL_ADDR_LEN];  //??????socks?迆?赤??????????????"ip/netmask;ip/netmask;??"
	BYTE             byRes[128];
}NET_DVR_SOCKS_CFG, *LPNET_DVR_SOCKS_CFG;



typedef struct tagNET_DVR_QOS_CFG
{
	DWORD        dwSize;
	BYTE        byManageDscp;   // ???赤??????DSCP?? [0-63]
	BYTE        byAlarmDscp;    // ㊣“????????DSCP?? [0-63]
	BYTE        byVideoDscp;    // ??????????DSCP?? [0-63]??byFlag??0?㊣??㊣赤????????
	BYTE        byAudioDscp;    // ??????????DSCP?? [0-63]??byFlag??1?㊣???∫
	BYTE        byFlag;            // 0??????????????1????????﹞???
	BYTE        byEnable;
	BYTE         byRes[126];
}NET_DVR_QOS_CFG, *LPNET_DVR_QOS_CFG;

typedef struct tagNET_DVR_HTTPS_CFG
{
	DWORD        dwSize;
	WORD        wHttpsPort;        // HTTPS????
	BYTE        byEnable;        // ???? 0????㊣? 1??????
	BYTE        byRes[125];
}NET_DVR_HTTPS_CFG, *LPNET_DVR_HTTPS_CFG;

//?∟?谷?角??
typedef struct tagNET_DVR_CERT_NAME
{
	BYTE    byCountry[MAX_COUNTRY_NAME_LEN];              //?迆???迆?? CN??
	BYTE     byState[MAX_DOMAIN_NAME];                //???辰??
	BYTE     byLocality[MAX_DOMAIN_NAME];            //????
	BYTE     byOrganization[MAX_DOMAIN_NAME];        //℅谷??
	BYTE     byUnit[MAX_DOMAIN_NAME];                //????
	BYTE     byCommonName[MAX_DOMAIN_NAME];
	BYTE     byEmail[MAX_DOMAIN_NAME];
	BYTE     byRes[128];
}NET_DVR_CERT_NAME, *LPNET_DVR_CERT_NAME;

typedef struct tagNET_DVR_CERT_PARAM
{
	DWORD dwSize;
	WORD wCertFunc; //?∟?谷???角??0-802.1x(??????WIFI?????∟?谷),1-HTTPS, 3-ieee802.1x(??????????LAN???????∟)
	WORD wCertType; //?∟?谷?角????0-CA??1-Certificate,2-????????
	BYTE byFileType; //?∟?谷?????角????0-PEM,1-PFX
	BYTE byRes[35];
}NET_DVR_CERT_PARAM, *LPNET_DVR_CERT_PARAM;

#define UPLOAD_CERTIFICATE  1 //?????∟?谷


typedef struct tagNET_DVR_CERT_INFO
{
	DWORD                 dwSize;
	NET_DVR_CERT_PARAM     struCertParam;    //?∟?谷????
	DWORD                dwValidDays;   //???∫?足?????角????℅??????㊣???∫
	BYTE                 byPasswd[NAME_LEN];   //????????
	NET_DVR_CERT_NAME     struCertName;    // ?∟?谷????
	NET_DVR_CERT_NAME     struIssuerName;    // ?∟?谷﹞??????????“℅??????∟?谷?????????㊣???∫??
	NET_DVR_TIME_EX         struBeginTime;   //?∟?谷???“?㊣???“℅??????∟?谷?????????㊣???∫??
	NET_DVR_TIME_EX         struEndTime;   //?∟?谷?????㊣???“℅??????∟?谷?????????㊣???∫??
	BYTE                 serialNumber[NAME_LEN];   //?∟?谷㊣那?????“℅??????∟?谷?????????㊣???∫??
	BYTE                 byVersion;
	BYTE                 byKeyAlgorithm;            //?????角?? 0-RSA  1-DSA
	BYTE                  byKeyLen;                //?????∟?? 0-512  1-1024?? 2-2048
	BYTE                 bySignatureAlgorithm; //??????﹞“?角???“℅??????∟?谷?????????㊣???∫??
	BYTE                 byRes[128];
}NET_DVR_CERT_INFO, *LPNET_DVR_CERT_INFO;


//channel record status
//***?“??????℅???*****//
typedef struct tagNET_DVR_CHANS_RECORD_STATUS
{
	BYTE    byValid;       //??﹞????∫
						   /*(????)?????角??:0: ??????????1???????? 2-????
						   3-?????? 4-?????????? 5-?????? 6-?????? 7-??????
						   8-???∫???辰?????赤 9-???谷?∟,10-?????????????? 11-?????????????????? 12-token???∟?∫∼?*/
	BYTE    byRecord;
	WORD    wChannelNO;   //?“????
	DWORD   dwRelatedHD;  //????????
	BYTE    byOffLineRecord;  //???????????? 0-??㊣? 1-????
	BYTE    byRes[7];      //㊣???℅???
}NET_DVR_CHANS_RECORD_STATUS, *LPNET_DVR_CHANS_RECORD_STATUS;


typedef struct tagNET_DVR_IP_ALARM_GROUP_NUM
{
	DWORD dwSize;
	DWORD dwIPAlarmInGroup;      //IP?“??㊣“??????℅谷??
	DWORD dwIPAlarmInNum;       //IP?“??㊣“??????????
	DWORD dwIPAlarmOutGroup;     //IP?“??㊣“??????℅谷??
	DWORD dwIPAlarmOutNum;      //IP?“??㊣“??????????
	BYTE byRes[64];
}NET_DVR_IP_ALARM_GROUP_NUM, *LPNET_DVR_IP_ALARM_GROUP_NUM;
//****NVR end***//

typedef struct tagNET_DVR_CHAN_GROUP_RECORD_STATUS
{
	DWORD dwSize; //?芍?????車??
	NET_DVR_CHANS_RECORD_STATUS struChanStatus[MAX_CHANNUM_V30]; //??℅谷64??
}NET_DVR_CHAN_GROUP_RECORD_STATUS, *LPNET_DVR_CHAN_GROUP_RECORD_STATUS;


typedef struct tagNET_DVR_RECTCFG
{
	WORD wXCoordinate; /*????℅車??????????X℅?㊣那*/
	WORD wYCoordinate; /*????℅車????Y℅?㊣那*/
	WORD wWidth;       /*?????赤??*/
	WORD wHeight;      /*????????*/
}NET_DVR_RECTCFG, *LPNET_DVR_RECTCFG;
/*?∼??????*/
typedef struct tagNET_DVR_WINCFG
{
	DWORD dwSize;
	BYTE  byVaild;
	BYTE  byInputIdx;          /*???????‾??*/
	BYTE  byLayerIdx;          /*??????0??℅??℅??*/
	BYTE  byTransparency; //???‾????0??100 
	NET_DVR_RECTCFG  struWin;//?????∼??(?角????????)
	WORD wScreenHeight;//?車????
	WORD wScreenWidth;//?車???赤
	BYTE  byRes[20];
}NET_DVR_WINCFG, *LPNET_DVR_WINCFG;

#define  MAX_LAYERNUMS    32

typedef struct tagNET_DVR_ALLWINCFG
{
	DWORD dwSize;
	NET_DVR_WINCFG struWinCfg[MAX_LAYERNUMS];
	BYTE  byRes2[24];
}NET_DVR_ALLWINCFG, *LPNET_DVR_ALLWINCFG;

typedef struct tagNET_DVR_SCREENZOOM
{
	DWORD dwSize;
	DWORD dwScreenNum;//?車????
	NET_DVR_POINT_FRAME struPointFrame;
	BYTE  byLayer;//??????
	BYTE  byRes[11];
}NET_DVR_SCREENZOOM, *LPNET_DVR_SCREENZOOM;

//2011-04-18
/*?????迆????,℅??角9999??????1???? */
typedef struct tagNET_MATRIX_CAMERAINFO
{
	DWORD dwGlobalCamId;      /* cam??????㊣角??*/
	BYTE  sCamName[NAME_LEN]; /*cam??????*/
	DWORD dwMatrixId;          /*cam???????車??㊣角??*/
	DWORD dwLocCamId;         /*cam???????車??????㊣角??*/
	BYTE  byValid;    /*??﹞????∫??0-﹞???1-??*/
	BYTE  byPtzCtrl; /* ??﹞???????0-﹞???1-??*/
	BYTE  byUseType; //*?????角????0-??℅‾????????????1-BNC??2-SP3,3-V6??????4-????????*/ 
	BYTE  byUsedByTrunk;//?㊣?∼????℅?????0-????㊣???????1-㊣????????? 
	BYTE  byTrunkReq; /*?????迆﹞?㊣???,??D1????????1 - 1??D1??2- 2??D1??℅‾???????????㊣?????????????????赤*/
	BYTE  byRes1[3];
	NET_DVR_TIME struInstallTime;//∼?℅∼?㊣??
	BYTE  sPurpose[NAME_LEN];/*?????豕??*/
	BYTE  byRes2[20];
}NET_MATRIX_CAMERAINFO, *LPNET_MATRIX_CAMERAINFO;

/*?角???‾??????℅??角2048??*/
typedef struct tagNET_MATRIX_MONITORINFO
{
	DWORD    dwGloalMonId; /*mon ??????㊣角??*/
	BYTE    sMonName[NAME_LEN];
	DWORD    dwMatrixId;  /*mon?迄?????車??㊣角??*/
	DWORD    dwLocalMonId; /*mon??????㊣角??*/
	BYTE    byValid;    /*??﹞????∫??0-﹞???1-??*/
	BYTE    byTrunkType; /*?????角????0-??℅‾????????????1-BNC??2-SP3,3-V6??????4-????????*/
	BYTE    byUsedByTrunk;//?㊣?∼????℅?????0-????㊣???????1-㊣????????? 
	BYTE    byTrunkReq; /*﹞?㊣???, ??D1????????1- 1??D1??2- 2??D1??℅‾???????????㊣?????????????????赤*/
	NET_DVR_TIME struInstallTime;//∼?℅∼?㊣??
	BYTE    sPurpose[NAME_LEN];/*?????豕??*/
	BYTE    byRes[20];
}NET_MATRIX_MONITORINFO, *LPNET_MATRIX_MONITORINFO;

typedef struct tagNET_MATRIX_DIGITALMATRIX
{
	NET_DVR_IPADDR  struAddress; /*?豕㊣?????℅??豕㊣??㊣??IP????*/
	WORD    wPort;
	BYTE    byNicNum; /*0 - eth0, 1 - eth1, ???????????????“??????∼車?“??????*/
	BYTE    byRes[69];
}NET_MATRIX_DIGITALMATRIX, *LPNET_MATRIX_DIGITALMATRIX;
typedef struct tagNET_MATRIX_ANALOGMATRIX
{
	BYTE    bySerPortNum;   /*????????????  0xff-?﹞?“????*/
	BYTE    byMatrixSerPortType;/* ???車???????????????????????車???邦????(?邦?????谷)?????????????車?“?????“???車???谷?????? ??0 --- ???車???谷?“???? 1 --- ?邦???“????*/
	BYTE    byRes1[2];
	NET_DVR_SINGLE_RS232 struRS232;    //232????????  ?﹞?“?????㊣?????????∫
	BYTE    byRes2[200];
}NET_MATRIX_ANALOGMATRIX, *LPNET_MATRIX_ANALOGMATRIX;

typedef union tagNET_MATRIX_UNION
{
	NET_MATRIX_DIGITALMATRIX struDigitalMatrix;
	NET_MATRIX_ANALOGMATRIX struAnalogMatrix;
}NET_MATRIX_UNION, *LPNET_MATRIX_UNION;
/*???車??????????℅??角20??*/
typedef struct tagNET_MATRIX_MATRIXINFO
{
	DWORD   dwSize;
	DWORD    dwMatrixId;  /*???車㊣角??*/
	BYTE    sDevName[NAME_LEN];
	BYTE    byCtrlType; /*???“??﹞??????????“??, ?????????“??*/
	BYTE    byProtocolType;/*?豕???“?????????谷*/
	BYTE    byRes1[6];   /*?∟??*/
	NET_MATRIX_UNION struMatrixUnion;
	DWORD    dwMaxPortsIn; /*???車??????*/
	DWORD    dwMaxPortsOut;/*???車??????*/
	BYTE    sUserName[NAME_LEN];   /*???????∫??*/
	BYTE    sPassword[PASSWD_LEN];  /*????????*/
	NET_DVR_TIME struInstallTime;//∼?℅∼?㊣??
	BYTE    sPurpose[NAME_LEN];/*?????豕??*/
	BYTE    byRes2[20];   /*?∟??*/
}NET_MATRIX_MATRIXINFO, *LPNET_MATRIX_MATRIXINFO;


typedef struct tagNET_DVR_MATRIXLIST
{
	DWORD    dwSize;
	BYTE    byRes[12];
	DWORD    dwMatrixNum;//?豕㊣?﹞????????車????
	BYTE    *pBuffer;//???車??????????
	DWORD   dwBufLen;//?迄﹞????????∟????????????
}NET_DVR_MATRIXLIST, *LPNET_DVR_MATRIXLIST;

/*????????????*/
typedef struct tagNET_MATRIX_UARTPARAM
{
	DWORD dwSize;
	BYTE  byPortName[NAME_LEN];
	WORD  wUserId; /*???∫㊣角?????㊣?????豕㊣????邦???㊣??∼車?“???????∫???????“?????赤*/
	BYTE  byPortType;    /*?????角????????0-RS232/1-RS485/2-RS422*/
	BYTE  byFuncType; /*???????????豕㊣????角??0-??????1-?邦????2-??℅‾???‾?“??(485?????????????????‾?“??),3-???????車*/
	BYTE  byProtocolType;  /*?????∫???????谷?角??, ?㊣?????邦???豕㊣??㊣?豕????????,?????邦???∫?????谷??㊣角???∼?豕??﹞?*/
	BYTE  byBaudRate;
	BYTE  byDataBits;
	BYTE  byStopBits;   /*??????*/
	BYTE  byParity;      /*???谷*/
	BYTE  byFlowCtrl;   /*?‾?????赤???‾???????‾??*/
	BYTE  byRes[22];     /*?∟??*/
}NET_MATRIX_UARTPARAM, *LPNET_MATRIX_UARTPARAM;

//℅??角256?????∫??1??256
typedef struct tagNET_MATRIX_USERPARAM
{
	DWORD dwSize;
	BYTE    sUserName[NAME_LEN];
	BYTE    sPassword[PASSWD_LEN/*16*/];
	BYTE    byRole;/*???∫????:0-???赤?㊣,1-??℅‾?㊣?????????????????赤?㊣??255????℅‾?㊣*/
	BYTE    byLevel;  /*??????㊣?????????℅‾??㊣????赤,1- 255*/
	BYTE    byRes[18];
}NET_MATRIX_USERPARAM, *LPNET_MATRIX_USERPARAM;

//℅??角255??℅???℅谷
typedef struct tagNET_MATRIX_RESOURSEGROUPPARAM
{
	DWORD dwSize;
	BYTE  byGroupName[NAME_LEN];
	BYTE  byGroupType;/*0-?????迆CAM℅谷??1-?角???‾MON℅谷*/
	BYTE  byRes1;
	WORD  wMemNum;
	DWORD dwGlobalId[512];
	BYTE  byRes2[20];
}NET_MATRIX_RESOURCEGROUPPARAM, *LPNET_MATRIX_RESOURSEGROUPPARAM;

//℅??角255?????∫℅谷
typedef struct tagNET_MATRIX_USERGROUPPARAM
{
	DWORD dwSize;
	BYTE  sGroupName[NAME_LEN];
	WORD  wUserMember[255];  /*∼邦???????∫???㊣*/
	WORD  wResorceGroupMember[255]; /*∼邦????℅???℅谷???㊣*/
	BYTE  byPermission[32];//?“??????℅谷0-ptz?“?????????“?????谷???“??
	BYTE  byRes[20];
} NET_MATRIX_USERGROUPPARAM, *LPNET_MATRIX_USERGROUPPARAM;

typedef struct tagNET_MATRIX_TRUNKPARAM
{
	DWORD    dwSize;
	DWORD    dwTrunkId;
	BYTE    sTrunkName[NAME_LEN];
	DWORD    dwSrcMonId;
	DWORD    dwDstCamId;
	BYTE    byTrunkType;  /*?????角??  1-BNC??2-SP3??????????3-SP3????D1?? 4-V6??????5-????????*/
	BYTE    byAbility;     /*㊣赤???????????赤?????????????﹞*/
	BYTE    bySubChan;   /*??????????????????㊣赤??℅??“????*/
	BYTE    byLevel;        /* ??????㊣? 1-255*/
	WORD    wReserveUserID;    //?∟???????∫ID?? 1~256 ??0㊣赤????﹞??∟??
	BYTE   byRes[18];
} NET_MATRIX_TRUNKPARAM, *LPNET_MATRIX_TRUNKPARAM;

typedef struct tagNET_DVR_MATRIX_TRUNKLIST
{
	DWORD    dwSize;
	BYTE    byRes[12];
	DWORD    dwTrunkNum;//?豕㊣?﹞?????????????
	BYTE    *pBuffer;//??????????????
	DWORD   dwBufLen;//?迄﹞????????∟????????????
}NET_DVR_MATRIX_TRUNKLIST, *LPNET_DVR_MATRIX_TRUNKLIST;

#define MATRIX_PROTOCOL_NUM    20    //?∫????℅??車???車???谷??
#define KEYBOARD_PROTOCOL_NUM  20    //?∫????℅??車?邦?????谷??
typedef struct tagNET_DVR_PROTO_TYPE_EX
{
	WORD wType;               /*ipc???谷??*/
	WORD wCommunitionType;        /*0?????? 1????℅? 2??????????????℅?*/
	BYTE  byDescribe[DESC_LEN]; /*???谷?豕??℅???*/
}NET_DVR_PROTO_TYPE_EX, LPNET_DVR_PROTO_TYPE_EX;

typedef struct tagNET_DVR_MATRIXMANAGE_ABIILITY
{
	DWORD    dwSize;
	DWORD    dwMaxCameraNum;//℅??車Camera????
	DWORD    dwMaxMonitorNum;//℅??車?角???‾????
	WORD    wMaxMatrixNum;//℅??車???車????
	WORD    wMaxSerialNum;//????????
	WORD    wMaxUser;//℅??車???∫??
	WORD    wMaxResourceArrayNum;//℅??車℅???℅谷??
	WORD    wMaxUserArrayNum;//℅??車???∫℅谷??
	WORD    wMaxTrunkNum;//℅??車??????
	BYTE    nStartUserNum;//???????∫??
	BYTE    nStartUserGroupNum;//???????∫℅谷??
	BYTE    nStartResourceGroupNum;//????℅???℅谷??
	BYTE    nStartSerialNum;//??????????
	DWORD   dwMatrixProtoNum;     /*???∫?????車???谷????????0????*/
	NET_DVR_PROTO_TYPE_EX struMatrixProto[MATRIX_PROTOCOL_NUM];/*℅??車???谷??㊣赤?∟??*/
	DWORD   dwKeyBoardProtoNum;     /*???∫???邦?????谷????????0????*/
	NET_DVR_PROTO_TYPE_EX struKeyBoardProto[KEYBOARD_PROTOCOL_NUM];/*℅??車???谷??㊣赤?∟??*/
	BYTE   byDelMonitorLongCfg;  //??﹞??∫??????monitor?∟????????
	BYTE   byDelCamonitorLongCfg;//??﹞??∫??????camera?∟????????
	BYTE   byAudioSwitchContorl;//??﹞??∫??????????????
	BYTE    byRes[29];
} NET_DVR_MATRIXMANAGE_ABILITY, *LPNET_DVR_MATRIXMANAGE_ABILITY;


//????℅??????辰(????)
typedef struct tagNET_VCA_SINGLE_FACESNAPCFG
{
	BYTE byActive;                //??﹞??∟?????辰??0-﹞???1-??
								  /********* IPC5.1.7 ???????? Begin 2014-03-21***********/
								  //????℅???ROI????????
	BYTE byAutoROIEnable;//0-??㊣?,1-????
	BYTE byRes[2]; //㊣???
				   /********* IPC5.1.7 ???????? End 2014-03-21***********/
	NET_VCA_SIZE_FILTER struSizeFilter;   //?????????‾
	NET_VCA_POLYGON     struVcaPolygon;        //??????㊣????辰
}NET_VCA_SINGLE_FACESNAPCFG, *LPNET_VCA_SINGLE_FACESNAPCFG;

//????℅??????辰????
typedef struct tagNET_VCA_FACESNAPCFG
{
	DWORD dwSize;
	BYTE bySnapTime;                    //??????㊣那??????℅???????0-10
	BYTE bySnapInterval;                 //℅?????????????????
	BYTE bySnapThreshold;               //℅?????????0-100
	BYTE byGenerateRate;         //??㊣那?迆??????,﹞??∫[1, 5]    
	BYTE bySensitive;            //??㊣那?足???谷??????﹞??∫[1, 5]
	BYTE byReferenceBright; //2012-3-27????????[0,100]
	BYTE byMatchType;         //2012-5-3㊣???㊣“????????0-??㊣那???∫?車㊣“????1-???㊣㊣“??
	BYTE byMatchThreshold;  //2012-5-3???㊣㊣?????????0~100
	NET_DVR_JPEGPARA  struPictureParam; //?????????芍??
	NET_VCA_SINGLE_FACESNAPCFG struRule[MAX_RULE_NUM]; //????℅??????辰
													   //????????℅????????㊣???“????℅?????
	WORD wFaceExposureMinDuration;//﹞??∫(1~3600????????60)?迆?∫??℅?????????
								  //????????????
	BYTE byFaceExposureMode;//1-??㊣???2-??????0-℅????“?迄????????????
	BYTE byBackgroundPic;//㊣??∼?????????? 0-???????“????????1-????
	DWORD dwValidFaceTime;    //???∫????℅????????㊣????????????
	DWORD dwUploadInterval; //????℅????????????????????㊣??????????????????900??
	DWORD dwFaceFilteringTime;//?????????㊣??????,????5????﹞??∫0-100????0??㊣赤????????
	BYTE  bySceneID;     //???∼??,???∼?∫??1~4???∼??0?????∫
	BYTE byInvalCapFilterEnable;//???∫℅?????????????0????㊣???1??????????????0
	BYTE byInvalCapFilterThreshold;//???∫℅?????????????0~100???㊣byInvalCapFilterEnable??1?㊣?迆?∫
	BYTE byRes2[81];
}NET_VCA_FACESNAPCFG, *LPNET_VCA_FACESNAPCFG;

typedef struct tagNET_DVR_FIRMWARE_VERSION_IFNO
{
	DWORD       dwSize;//?芍?????車??
	char        szFirmwareVersion[LEN_PROPERTY/*128*/];  //?‾??∼?㊣????? ????
	BYTE        byRes2[128];
}NET_DVR_FIRMWARE_VERSION_IFNO, *LPNET_DVR_FIRMWARE_VERSION_IFNO;

//?那????
typedef enum tagHUMAN_AGE_GROUP_ENUM
{
	ENUM_AGE_GROUP_INFANT = 1,   //?∟?℅?迄
	ENUM_AGE_GROUP_CHILD = 2,   //?迄??
	ENUM_AGE_GROUP_YOUNGSTER = 3,   //???那
	ENUM_AGE_GROUP_ADOLESCENT = 4,   //?角???那
	ENUM_AGE_GROUP_YOUTH = 5,   //?角?那
	ENUM_AGE_GROUP_PRIME = 6,   //℅??那
	ENUM_AGE_GROUP_MIDLIFE = 7,   //???那
	ENUM_AGE_GROUP_MIDAGE = 8,   //?????那
	ENUM_AGE_GROUP_OLD = 9,    //???那
	ENUM_AGE_GROUP_UNKNOW = 0xff   //????,??﹞“?∫?????足??
}HUMAN_AGE_GROUP_ENUM;

//????㊣赤?谷
typedef enum tagFACE_EXPRESSION_GROUP_ENUM
{
	ENUM_EXPRESSION_GROUP_SURPRISED = 1,   //????
	ENUM_EXPRESSION_GROUP_PANIC = 2,   //????
	ENUM_EXPRESSION_GROUP_DISGUUSTED = 3,   //?芍??
	ENUM_EXPRESSION_GROUP_HAPPY = 4,   //????
	ENUM_EXPRESSION_GROUP_SAD = 5,   //????
	ENUM_EXPRESSION_GROUP_ANGRY = 6,   //﹞???
	ENUM_EXPRESSION_GROUP_POKER = 7,   //????
	ENUM_EXPRESSION_GROUP_UNKNOW = 0xff   //????,??﹞“?∫?????足??
}FACE_EXPRESSION_GROUP_ENUM;

//????℅????????????芍????
typedef struct tagNET_VCA_FACESNAP_ADDINFO
{
	//?????????辰,??℅?㊣那??????????(?﹞????)????????℅?㊣那
	NET_VCA_RECT  struFacePicRect;
	int    iSwingAngle;//??℅???, -90~90??
	int    iTiltAngle;//??????, -90~90??
	DWORD  dwPupilDistance;//???角,﹞??∫????℅???????10????,℅??車?????㊣?∼﹞?㊣????赤??/1.6
	BYTE   byBlockingState;//??㊣那????℅????? 0-㊣赤???∼?????㊣?“??﹞“???∫????,1~??????,2~???㊣?芍????????3~?????芍????????4~????????
	BYTE   byRes[499];// ㊣???℅???
}NET_VCA_FACESNAP_ADDINFO, *LPNET_VCA_FACESNAP_ADDINFO;

//????℅????芍??
typedef struct tagNET_VCA_FACESNAP_RESULT
{
	DWORD   dwSize;             // ?芍???車??
	DWORD     dwRelativeTime;     // ?角???㊣㊣那
	DWORD    dwAbsTime;            // ?????㊣㊣那
	DWORD   dwFacePicID;       //??????ID
	DWORD   dwFaceScore;        //??????﹞?,0-100
	NET_VCA_TARGET_INFO  struTargetInfo;//㊣“????㊣那????
	NET_VCA_RECT         struRect;      //????℅??????辰
	NET_VCA_DEV_INFO       struDevInfo;    //?∼???豕㊣?????
	DWORD   dwFacePicLen;        //????℅??????∟??????0㊣赤?????????????車??0㊣赤????????
	DWORD   dwBackgroundPicLen; //㊣??∼?????∟??????0㊣赤?????????????車??0㊣赤????????(㊣???)
	BYTE    bySmart;            //IDS?豕㊣?﹞???0(??????)??Smart Functiom Return 1
	BYTE    byAlarmEndMark;//㊣“???芍??㊣那??0-㊣?????1-?芍??㊣那???“??℅????芍??????ID℅?????????㊣赤????ID????????㊣“???芍?????‾???芍????NVR??????????????㊣“???芍?????芍????㊣????????????????迆??℅???????????
	BYTE    byRepeatTimes;   //????㊣“????????0-??????
	BYTE    byUploadEventDataType;//?????????????∟??﹞?????0-????????????1-URL
	NET_VCA_HUMAN_FEATURE   struFeature;  //????????
	float   fStayDuration;  //???????????㊣??(????: ??)
	char    sStorageIP[16];        //????﹞???IP???﹞
	WORD    wStoragePort;            //????﹞?????????
	WORD    wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
									   /*????℅?????????????????????0-????????,1-????????,2-????????,
									   ????????℅?????????﹞??迆????????????????﹞???㊣???
									   ????????????﹞?????????℅??????????????????﹞㊣?????????℅?????????℅??????????∫???????????角??????????????﹞???????????℅?????????﹞??迆????????????℅????那????????????????????????﹞“???????????????????????赤???角????????????????﹞?????∼?????????㊣那℅????????????∫????????????﹞?*/
	BYTE    byFacePicQuality;
	BYTE    byUIDLen;     // ????㊣“????㊣那???∟??
	BYTE    byLivenessDetectionStatus;// ?????足??℅?????0-㊣?????1-????(?足???∫∼?)??2-﹞???????????3-??????????4-???????????足??
									  /*????????㊣那?????“????﹞???NET_VCA_FACESNAP_ADDINFO?芍??????,0-??????????, 1-????????????*/
	BYTE    byAddInfo;
	BYTE    *pUIDBuffer;  //㊣那??????
						  //????????????,???辰NET_VCA_FACESNAP_ADDINFO?芍????
	BYTE   *pAddInfoBuffer;
	BYTE    byTimeDiffFlag;      /*?㊣??℅?????﹞????∫  0-?㊣?????∫?? 1-?㊣?????∫ */
	char    cTimeDifferenceH;         /*??UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????,??byTimeDiffFlag??1?㊣???∫*/
	char    cTimeDifferenceM;      	/*??UTC???㊣???“﹞???????-30, 30, 45?? +㊣赤????????byTimeDiffFlag??1?㊣???∫*/
	BYTE    byBrokenNetHttp;     //????????㊣那??????0-??????????????1-????????
	BYTE*   pBuffer1;  //????℅?????????????
	BYTE*   pBuffer2;  //㊣??∼?????????????“㊣??????“???谷??㊣??∼??????????????㊣??∼????
}NET_VCA_FACESNAP_RESULT, *LPNET_VCA_FACESNAP_RESULT;

typedef struct tagNET_VCA_SUB_PROCIMG_V50
{
	DWORD dwImageLen;  //?????????∟??
	DWORD dwFaceScore;        //??????﹞?,0-100
	NET_VCA_RECT struVcaRect; //????℅??????辰
	NET_VCA_POINT struLeftEyePoint;  //℅車??????
	NET_VCA_POINT struRightEyePoint; //????????
	BYTE       byDistance;           //???????角
	BYTE       bySex;
	BYTE       byAgeGroup;
	BYTE       byEyeGlass;
	NET_VCA_RECT struPosRect;  //???????????辰
	BYTE       byRes[20];  //㊣???
	BYTE       *pImage;  //????????
}NET_VCA_SUB_PROCIMG_V50, *LPNET_VCA_SUB_PROCIMG_V50;

typedef struct tagNET_DVR_FACE_DETECTION
{
	DWORD     dwSize; //?芍???車??
	DWORD        dwRelativeTime; //?角???㊣㊣那
	DWORD       dwAbsTime; //?????㊣㊣那
	DWORD      dwBackgroundPicLen; //㊣??∼?????∟??????0㊣赤?????????????車??0㊣赤????????
	NET_VCA_DEV_INFO  struDevInfo;   //?∼???豕㊣?????
	NET_VCA_RECT   struFacePic[MAX_FACE_PIC_NUM/*30*/];//????℅??????辰
	BYTE   byFacePicNum;//℅???????
	BYTE   byUploadEventDataType;//?????????∟??﹞?????0-????????????1-URL
	WORD   wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE   byTimeDiffFlag;      /*?㊣??℅?????﹞????∫  0-?㊣?????∫?? 1-?㊣?????∫ */
	char   cTimeDifferenceH;         /*??UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????,??byTimeDiffFlag??1?㊣???∫*/
	char   cTimeDifferenceM;      	/*??UTC???㊣???“﹞???????-30, 30, 45?? +㊣赤????????byTimeDiffFlag??1?㊣???∫*/
	BYTE   byRes[249];
	BYTE*  pBackgroundPicpBuffer; //㊣??∼????????????
}NET_DVR_FACE_DETECTION, *LPNET_DVR_FACE_DETECTION;

typedef struct tagNET_DVR_UPGRADE_PARAM
{
	DWORD dwUpgradeType;
	char *sFileName;
	void *pInbuffer;
	DWORD dwBufferLen;
	char *pUnitIdList[64];
	BYTE  byRes[112];
}NET_DVR_UPGRADE_PARAM, *LPNET_DVR_UPGRADE_PARAM;


typedef struct tagNET_VCA_FD_PROCIMG_RESULT_V50
{
	DWORD dwSize;   //?芍???車??
	DWORD dwImageId; //?車??ID
	BYTE byRes[20]; //㊣???
	DWORD dwSubImageNum;  //????℅???????
	NET_VCA_SUB_PROCIMG_V50  struProcImg[MAX_TARGET_NUM];  //????℅???????
}NET_VCA_FD_PROCIMG_RESULT_V50, *LPNET_VCA_FD_PROCIMG_RESULT_V50;

//?谷???足???芍??
typedef struct  tagNET_DVR_DEFOCUS_ALARM
{
	DWORD   dwSize;     /*?芍???∟??*/
	NET_VCA_DEV_INFO       struDevInfo;/*?豕㊣?????*/
	WORD    wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE    byRes1[2];     //㊣???℅???
	DWORD  dwRelativeTime; //?角???㊣㊣那
	DWORD     dwAbsTime; //?????㊣㊣那
	BYTE    byTimeDiffFlag;      /*?㊣??℅?????﹞????∫  0-?㊣?????∫?? 1-?㊣?????∫ */
	char    cTimeDifferenceH;         /*??UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????,??byTimeDiffFlag??1?㊣???∫*/
	char    cTimeDifferenceM;      	/*??UTC???㊣???“﹞???????-30, 30, 45?? +㊣赤????????byTimeDiffFlag??1?㊣???∫*/
	BYTE    byRes[49];        // ㊣???℅???
}NET_DVR_DEFOCUS_ALARM, *LPNET_DVR_DEFOCUS_ALARM;

//?車?赤?足???芍??
typedef struct  tagNET_DVR_DENSEFOGDETECTION_ALARM
{
	DWORD   dwSize;     /*?芍???∟??*/
	NET_VCA_DEV_INFO       struDevInfo;/*?豕㊣?????*/
	DWORD  dwRelativeTime; //?角???㊣㊣那
	DWORD     dwAbsTime; //?????㊣㊣那
	BYTE    byFogLevel; //?赤????????0-???赤~㊣??赤 ??1-㊣??赤~???赤?? 2-?車?赤~?“?赤?? 3-?“?赤?∼????
	BYTE    byRes[259];  // ㊣???℅???
}NET_DVR_DENSEFOGDETECTION_ALARM, *LPNET_DVR_DENSEFOGDETECTION_ALARM;

typedef struct  tagNET_DVR_AUDIOEXCEPTION_ALARM
{
	DWORD      dwSize;     /*?芍???∟??*/
	BYTE  byAlarmType;//㊣“???角????1-?????????足????2-??????????㊣??“?迄??????????3-?迄????????4-???????∫
	BYTE  byRes1;
	WORD wAudioDecibel;//?迄???????“??????????㊣??㊣??????
	NET_VCA_DEV_INFO       struDevInfo;/*?豕㊣?????*/
	WORD    wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE    byRes[62];        // ㊣???℅???
}NET_DVR_AUDIOEXCEPTION_ALARM, *LPNET_DVR_AUDIOEXCEPTION_ALARM;

typedef struct  tagNET_BUTTON_DOWN_EXCEPTION_ALARM
{
	DWORD      dwSize;     /*?芍???∟??*/
	NET_VCA_DEV_INFO       struDevInfo;/*?豕㊣?????*/
	BYTE    byRes[64];        // ㊣???℅???
}NET_BUTTON_DOWN_EXCEPTION_ALARM, *LPNET_BUTTON_DOWN_EXCEPTION_ALARM;

typedef struct tagNET_VCA_FD_IMAGE_CFG
{
	DWORD   dwWidth;                  //?????????????赤??
	DWORD   dwHeight;                 //????????????
	DWORD   dwImageLen;  //?????????????∟??
	BYTE     byRes[20];  //㊣???
	BYTE     *pImage;    //????????????
}NET_VCA_FD_IMAGE_CFG, *LPNET_VCA_FD_IMAGE_CFG;

typedef struct tagNET_VCA_FD_PROCIMG_CFG
{
	DWORD    dwSize;           //?芍???車??
	BYTE     byEnable;         //??﹞??∟?????辰;
	BYTE     bySensitivity;      //?足???谷??????[0,5]
	BYTE     byRes1[22];       //㊣???℅??? 
	NET_VCA_SIZE_FILTER  struSizeFilter;  //?????????‾
	NET_VCA_POLYGON   struPolygon;    //?角㊣???
	NET_VCA_FD_IMAGE_CFG struFDImage;  //????????
	BYTE     byRes2[20];    //㊣???
}NET_VCA_FD_PROCIMG_CFG, *LPNET_VCA_FD_PROCIMG_CFG;

typedef struct tagNET_VCA_SUB_PROCIMG
{
	DWORD dwImageLen;  //?????????∟??
	DWORD dwFaceScore;        //??????﹞?,0-100
	NET_VCA_RECT struVcaRect; //????℅??????辰
	BYTE  byRes[20];  //㊣???
	BYTE  *pImage;  //????????
}NET_VCA_SUB_PROCIMG, *LPNET_VCA_SUB_PROCIMG;

typedef struct tagNET_VCA_FD_PROCIMG_RESULT
{
	DWORD dwSize;   //?芍???車??
	DWORD dwImageId; //?車??ID
	BYTE byRes[20]; //㊣???
	DWORD dwSubImageNum;  //????℅???????
	NET_VCA_SUB_PROCIMG  struProcImg[MAX_TARGET_NUM];  //????℅???????
}NET_VCA_FD_PROCIMG_RESULT, *LPNET_VCA_FD_PROCIMG_RESULT;

typedef struct tagNET_VCA_PICMODEL_RESULT
{
	DWORD dwImageLen;  //?????????∟??
	DWORD dwModelLen;  //?????????∟??
	BYTE  byRes[20]; //㊣???
	BYTE  *pImage;  //????????????????
	BYTE  *pModel;  //????????????
}NET_VCA_PICMODEL_RESULT, *LPNET_VCA_PICMODEL_RESULT;

typedef struct tagNET_VCA_REGISTER_PIC
{
	DWORD dwImageID; //?車??ID
	DWORD dwFaceScore;        //??????﹞?,0-100
	NET_VCA_RECT struVcaRect;  //????℅??????辰
	BYTE  byRes[20];  //㊣???
}NET_VCA_REGISTER_PIC, *LPNET_VCA_REGISTER_PIC;

#define MAX_HUMAN_PICTURE_NUM  10   //℅??車??????
#define MAX_HUMAN_BIRTHDATE_LEN 10   //℅??車???迆?那???∟??

typedef struct tagNET_DVR_AREAINFOCFG
{
	WORD wNationalityID; //?迆??
	WORD wProvinceID; //??
	WORD wCityID; //??
	WORD wCountyID; //??
					/*
					if (dwCode != 0) dwCode ???????? ?∼???迆?‾??﹞???????㊣赤.txt?㊣
					else dwCode ???????????? PROVINCE_CITY_IDX
					*/
	DWORD dwCode;
}NET_DVR_AREAINFOCFG, *LPNET_DVR_AREAINFOCFG;

typedef struct tagNET_VCA_HUMAN_ATTRIBUTE
{
	BYTE   bySex; //??㊣???0-????1-????0xff-????
	BYTE   byCertificateType; //?∟???角????0-?赤﹞??∟??1-?????∟??2-?邦???∟??3-?∟????4-??????0xff-????
	BYTE   byBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???迆?那????????201106
	BYTE   byName[NAME_LEN]; //????
	NET_DVR_AREAINFOCFG struNativePlace; //???芍????
	BYTE   byCertificateNumber[NAME_LEN];  //?∟????
										   /*
										   dwPersonInfoExtendLen && pPersonInfoExtend ????URL(/ISAPI/System/Video/inputs/channels/<ID>/faceContrast/personInfoExtend)㊣赤???? PersonInfoExtendList XML Block
										   ?????迄???????“???????赤???㊣?辰??????picture??????℅??“???????????豕㊣??足??????㊣“???車??????℅‾???????????????????????“???????赤??????
										   */
	DWORD  dwPersonInfoExtendLen;// ???㊣㊣那???????????∟??
	BYTE  *pPersonInfoExtend;  //???㊣㊣那??????????????
	BYTE   byAgeGroup;//?那???????那??HUMAN_AGE_GROUP_ENUM????????0xff㊣赤??????
	BYTE   byRes2[11];
}NET_VCA_HUMAN_ATTRIBUTE, *LPNET_VCA_HUMAN_ATTRIBUTE;

typedef struct tagNET_VCA_HUMANATTRIBUTE_COND
{
	BYTE   bySex; //??㊣???0-????????1-????2-??
	BYTE   byCertificateType; //?∟???角????0-????????1-?赤﹞??∟??2-?????∟
	BYTE   byStartBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那????????201106
	BYTE   byEndBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那??????201106
	BYTE   byName[NAME_LEN]; //????
	NET_DVR_AREAINFOCFG struNativePlace; //???芍????
	BYTE   byCertificateNumber[NAME_LEN];  //?∟????
	BYTE   byRes[20];
}NET_VCA_HUMANATTRIBUTE_COND, *LPNET_VCA_HUMANATTRIBUTE_COND;


typedef struct tagNET_VCA_BLACKLIST_INFO
{
	DWORD  dwSize;   //?芍???車??
	DWORD  dwRegisterID;  //????℅??芍ID???“??????
	DWORD  dwGroupNo; //﹞?℅谷??
	BYTE   byType; //??∼℅????㊣那????0-??????1-∼℅??????2-??????
	BYTE   byLevel; //????????????0-??????1-????2-????3-??
	BYTE   byRes1[2];  //㊣???
	NET_VCA_HUMAN_ATTRIBUTE struAttribute;  //???㊣????
	BYTE   byRemark[NAME_LEN]; //㊣?℅?????
	DWORD dwFDDescriptionLen;//???????豕???????∟??
	BYTE  *pFDDescriptionBuffer;//???????豕??????????
	DWORD dwFCAdditionInfoLen;//℅??????????????∟??
	BYTE  *pFCAdditionInfoBuffer;//℅??????????????????????“FCAdditionInfo??∼邦???角?迆PTZ℅?㊣那??
	BYTE   byRes2[4];
}NET_VCA_BLACKLIST_INFO, *LPNET_VCA_BLACKLIST_INFO;

typedef struct tagNET_VCA_BLACKLIST_PARA
{
	DWORD dwSize;   //?芍???車??
	NET_VCA_BLACKLIST_INFO struBlackListInfo;  //???????迄㊣?????
	DWORD dwRegisterPicNum;  //????????????
	NET_VCA_PICMODEL_RESULT struRegisterPic[MAX_HUMAN_PICTURE_NUM];  //??????????????
	BYTE  byRes[40]; //㊣???
}NET_VCA_BLACKLIST_PARA, *LPNET_VCA_BLACKLIST_PARA;

typedef struct tagNET_VCA_BLACKLIST_COND
{
	LONG  lChannel; //?“????
	DWORD dwGroupNo; //﹞?℅谷??
	BYTE  byType; //??∼℅????㊣那????0-??????1-∼℅??????2-??????
	BYTE  byLevel; //????????????0-??????1-????2-????3-??
	BYTE  byRes1[2];  //㊣???
	NET_VCA_HUMAN_ATTRIBUTE struAttribute; //???㊣????
	BYTE  byRes[20];
}NET_VCA_BLACKLIST_COND, *LPNET_VCA_BLACKLIST_COND;

typedef struct tagNET_VCA_BLACKLIST_PIC
{
	DWORD dwSize;   //?芍???車??
	DWORD dwFacePicNum;  //??????????
	BYTE  byRes[20]; //㊣???
	NET_VCA_PICMODEL_RESULT  struBlackListPic[MAX_HUMAN_PICTURE_NUM];  //????????????
}NET_VCA_BLACKLIST_PIC, *LPNET_VCA_BLACKLIST_PIC;

typedef struct tagNET_VCA_FIND_PICTURECOND
{
	LONG lChannel;//?“????
	NET_DVR_TIME struStartTime;//?????㊣??
	NET_DVR_TIME struStopTime;//?芍???㊣??
	BYTE byRes[12]; //㊣???
}NET_VCA_FIND_PICTURECOND, *LPNET_VCA_FIND_PICTURECOND;

#define MAX_FACE_PIC_LEN   6144   //℅??車?????????????∟??
typedef struct tagNET_VCA_SUB_SNAPPIC_DATA
{
	DWORD dwFacePicID; //??????ID
	DWORD dwFacePicLen;  //???????????∟??
	NET_DVR_TIME struSnapTime;  //℅????㊣??
	DWORD dwSimilarity; //?角????
	BYTE  byRes[16];  //㊣???
	char  sPicBuf[MAX_FACE_PIC_LEN];  //????????
}NET_VCA_SUB_SNAPPIC_DATA, *LPNET_VCA_SUB_SNAPPIC_DATA;

typedef struct tagNET_VCA_ADVANCE_FIND
{
	DWORD dwFacePicID; //????????ID
	BYTE  byRes[36];
}NET_VCA_ADVANCE_FIND, *LPNET_VCA_ADVANCE_FIND;

typedef struct tagNET_VCA_NORMAL_FIND
{
	DWORD dwImageID; //?車??ID
	DWORD dwFaceScore;  //??????﹞?
	NET_VCA_RECT struVcaRect; //????℅??????辰
	BYTE byRes[20];
}NET_VCA_NORMAL_FIND, *LPNET_VCA_NORMAL_FIND;

typedef union tagNET_VCA_FIND_SNAPPIC_UNION
{
	NET_VCA_NORMAL_FIND  struNormalFind; //???“?足?‾
	NET_VCA_ADVANCE_FIND struAdvanceFind; //?????足?‾
}NET_VCA_FIND_SNAPPIC_UNION, *LPNET_VCA_FIND_SNAPPIC_UNION;

typedef enum _VCA_FIND_SNAPPIC_TYPE_
{
	VCA_NORMAL_FIND = 0x00000000,   //???“?足?‾
	VCA_ADVANCE_FIND = 0x00000001  //?????足?‾
}VCA_FIND_SNAPPIC_TYPE;

typedef struct tagNET_VCA_FIND_PICTURECOND_ADVANCE
{
	LONG lChannel;//?“????
	NET_DVR_TIME struStartTime;//?????㊣??
	NET_DVR_TIME struStopTime;//?芍???㊣??
	BYTE byThreshold;  //??????0-100
	BYTE byRes[23]; //㊣???
	VCA_FIND_SNAPPIC_TYPE dwFindType;//?足?‾?角?????那??VCA_FIND_SNAPPIC_TYPE
	NET_VCA_FIND_SNAPPIC_UNION uFindParam; //?足?‾????
}NET_VCA_FIND_PICTURECOND_ADVANCE, *LPNET_VCA_FIND_PICTURECOND_ADVANCE;

typedef struct tagNET_VCA_FACESNAP_INFO_ALARM
{
	DWORD dwRelativeTime;     // ?角???㊣㊣那
	DWORD dwAbsTime;            // ?????㊣㊣那
	DWORD dwSnapFacePicID;       //℅?????????ID
	DWORD dwSnapFacePicLen;        //℅???????℅??????∟??????0㊣赤?????????????車??0㊣赤????????
	NET_VCA_DEV_INFO struDevInfo;        //?∼???豕㊣?????
	BYTE  byFaceScore;        //??????﹞?????????℅?????????????﹞?,0-100
	BYTE bySex;//??㊣???0-??????1-????2-??,0xff-??﹞“?∫??????????????㊣?????
	BYTE byGlasses;//??﹞?????????0-??????1-????2-﹞?,3-?‾????, 0xff-??﹞“?∫??????????????㊣?????
				   /*
				   ??㊣????????那????﹞??∫[byAge-byAgeDeviation,byAge+byAgeDeviation]
				   */
	BYTE byAge;//?那??,0-㊣赤???∼?????㊣?“??﹞“???∫????,0xff-??﹞“?∫??????????????㊣?????
	BYTE byAgeDeviation;//?那???車????
	BYTE byAgeGroup;//?那???????那??HUMAN_AGE_GROUP_ENUM????????0xff㊣赤??????
					/*????℅?????????????????????0-????????,1-????????,2-????????,
					????????????﹞“??????????℅???????????,???????“??℅????????迆?????????谷?????????谷???????∼?足??????㊣????????辰??℅??????????芍??*/
	BYTE byFacePicQuality;
	BYTE  byEthnic; //℅????∟??,??????﹞?
	DWORD dwUIDLen; // ????㊣“????㊣那???∟??
	BYTE  *pUIDBuffer;  //㊣那??????
	float fStayDuration;  //???????????㊣??(????: ??)
	BYTE  *pBuffer1;  //℅???????℅?????????????
}NET_VCA_FACESNAP_INFO_ALARM, *LPNET_VCA_FACESNAP_INFO_ALARM;

typedef struct tagNET_VCA_BLACKLIST_INFO_ALARM
{
	NET_VCA_BLACKLIST_INFO struBlackListInfo; //???????迄㊣?????
	DWORD dwBlackListPicLen;       //??????????℅??????∟??????0㊣赤?????????????車??0㊣赤????????
	DWORD  dwFDIDLen;// ??????ID?∟??
	BYTE  *pFDID;  //??????Id????
	DWORD  dwPIDLen;// ??????????ID?∟??
	BYTE  *pPID;  //??????????ID????
	WORD  wThresholdValue; //??????????[0,100]
	BYTE  byIsNoSaveFDPicture;//0-㊣?????????????,1-??㊣?????????????, ?????????????????辰???“???㊣??㊣????????????㊣,??℅???﹞???1,???㊣????????????????﹞???
	BYTE  byRealTimeContrast;//??﹞????㊣㊣“?? 0-???㊣ 1-﹞????㊣
	BYTE  *pBuffer1;  //??????????℅?????????????
}NET_VCA_BLACKLIST_INFO_ALARM, *LPNET_VCA_BLACKLIST_INFO_ALARM;

typedef struct tagNET_VCA_FACESNAP_MATCH_ALARM
{
	DWORD dwSize;             // ?芍???車??
	float fSimilarity; //?角??????[0.001,1]
	NET_VCA_FACESNAP_INFO_ALARM  struSnapInfo; //℅???????
	NET_VCA_BLACKLIST_INFO_ALARM struBlackListInfo; //??????????
	char         sStorageIP[16];        //????﹞???IP???﹞
	WORD            wStoragePort;            //????﹞?????????
	BYTE  byMatchPicNum; //????????????????0-㊣????“???豕㊣???????????0?????豕㊣?????????0?㊣㊣赤???車??????????????????????
	BYTE  byPicTransType;//????????????﹞???: 0-????????1-url
	DWORD dwSnapPicLen;//?豕㊣???㊣?℅????????∟??
	BYTE  *pSnapPicBuffer;//?豕㊣???㊣?℅???????????
	NET_VCA_RECT  struRegion;//??㊣那㊣????辰???豕㊣???㊣?℅???????????????℅???℅?㊣那
	DWORD dwModelDataLen;//?“???????∟??
	BYTE  *pModelDataBuffer;// ?“??????????
	BYTE  byModelingStatus;// ?“??℅???
	BYTE  byLivenessDetectionStatus;//?????足??℅?????0-㊣?????1-?????“?足???∫∼?????2-﹞???????????3-??????????4-???????????足??
	char  cTimeDifferenceH;         /*??UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????,0xff???∫*/
	char  cTimeDifferenceM;      	/*??UTC???㊣???“﹞???????-30, 30, 45?? +㊣赤????????0xff???∫*/
	BYTE  byMask;                //℅???????﹞??‾??????0-㊣?????1-??????2-???‾??????3-?‾????
	BYTE  bySmile;               //℅???????﹞???????0-㊣?????1-??????2-????????3-????
	BYTE  byContrastStatus;      //㊣????芍????0-㊣?????1-㊣?????????2-㊣????∫∼?
	BYTE  byBrokenNetHttp;     //????????㊣那??????0-??????????????1-????????
}NET_VCA_FACESNAP_MATCH_ALARM, *LPNET_VCA_FACESNAP_MATCH_ALARM;

typedef struct tagNET_VCA_BLACKLIST_INFO_ALARM_LOG
{
	NET_VCA_BLACKLIST_INFO struBlackListInfo; //???????迄㊣?????
	DWORD dwBlackListPicID;       //??????????℅???ID???????谷??????
	BYTE  byRes[20];              // ㊣???℅???
}NET_VCA_BLACKLIST_INFO_ALARM_LOG, *LPNET_VCA_BLACKLIST_INFO_ALARM_LOG;

typedef struct tagNET_VCA_FACESNAP_INFO_ALARM_LOG
{
	DWORD dwRelativeTime;     // ?角???㊣㊣那
	DWORD dwAbsTime;            // ?????㊣㊣那
	DWORD dwSnapFacePicID;       //℅?????????ID
	NET_VCA_DEV_INFO       struDevInfo;        //?∼???豕㊣?????
	BYTE  byRes[20];              // ㊣???℅???
}NET_VCA_FACESNAP_INFO_ALARM_LOG, *LPNET_VCA_FACESNAP_INFO_ALARM_LOG;

typedef struct tagNET_VCA_FACESNAP_MATCH_ALARM_LOG
{
	DWORD dwSize;             // ?芍???車??
	float fSimilarity; //?角??????[0.001,1]
	NET_VCA_FACESNAP_INFO_ALARM_LOG  struSnapInfoLog; //℅???????
	NET_VCA_BLACKLIST_INFO_ALARM_LOG struBlackListInfoLog; //??????????
	BYTE  byRes[60];              // ㊣???℅???
}NET_VCA_FACESNAP_MATCH_ALARM_LOG, *LPNET_VCA_FACESNAP_MATCH_ALARM_LOG;

typedef struct tagNET_VCA_FACEMATCH_PICCOND
{
	DWORD dwSize;             // ?芍???車??
	DWORD dwSnapFaceID; //℅???????℅???ID
	DWORD dwBlackListID; //????????????ID
	DWORD dwBlackListFaceID; //㊣???????????????℅???ID
	BYTE  byRes[20];              // ㊣???℅???
}NET_VCA_FACEMATCH_PICCOND, *LPNET_VCA_FACEMATCH_PICCOND;

typedef struct tagNET_VCA_FACEMATCH_PICTURE
{
	DWORD dwSize;             // ?芍???車??
	DWORD dwSnapFaceLen; //℅???????℅????∟??
	DWORD dwBlackListFaceLen; //㊣???????????????℅????∟??
	BYTE  byRes[20];              //㊣???℅???
	BYTE *pSnapFace;  //℅???????℅?????????????
	BYTE *pBlackListFace;  //㊣???????????????℅???????
}NET_VCA_FACEMATCH_PICTURE, *LPNET_VCA_FACEMATCH_PICTURE;

typedef struct tagNET_VCA_BLACKLIST_FASTREGISTER_PARA
{
	DWORD dwSize;   //?芍???車??
	NET_VCA_BLACKLIST_INFO struBlackListInfo;  //???????迄㊣?????
	DWORD dwImageLen;  //?????????∟??
	BYTE  byRes[124];  //㊣???
	BYTE  *pImage;    //????????
}NET_VCA_BLACKLIST_FASTREGISTER_PARA, *LPNET_VCA_BLACKLIST_FASTREGISTER_PARA;

/*******PJ01C20170209084????????NVS?赤????????﹞??“??????℅“??******/
//?????????????????芍??????
typedef struct tagNET_DVR_FRAMES_PEOPLE_COUNTING
{
	DWORD  dwSize;          // ?芍?????車??
	NET_VCA_DEV_INFO   struDevInfo;//?∼???豕㊣?????
	DWORD  dwRelativeTime; //?角???㊣㊣那
	DWORD  dwAbsTime;      // ?????㊣㊣那
	DWORD  dwPeopleCountingNum; //????????????????????
	DWORD  dwPicLen;       //?豕㊣???㊣?℅????????∼?????????∟??
	BYTE   *pPicBuffer;    //?豕㊣???㊣?℅????????∼????????????
	BYTE   byRes[512];     // ㊣???℅???
}NET_DVR_FRAMES_PEOPLE_COUNTING, *LPNET_DVR_FRAMES_PEOPLE_COUNTING;
/*******PJ01C20170209084????????NVS?赤????????﹞??“??????℅“??******/

//????﹞???????
typedef struct tagNET_VCA_SINGLE_PATH
{
	BYTE  byActive;  // ??﹞?????,0-﹞?,1-?? 
	BYTE  byType;   //0-????℅?????1-??????????㊣???㊣“????2-????℅???????????㊣???㊣“????0xff-???∫
	BYTE  bySaveAlarmPic; //??﹞?????㊣?????????㊣“????????0-﹞???1-??
	BYTE  byRes1[5]; //㊣???
	DWORD dwDiskDriver;   //??﹞???????0????
	DWORD dwLeftSpace;   //?∟???????“??????G??
	BYTE  byRes2[8]; //㊣???
}NET_VCA_SINGLE_PATH, *LPNET_VCA_SINGLE_PATH;

//?????﹞???豕??
typedef struct tagNET_VCA_SAVE_PATH_CFG
{
	DWORD dwSize;   //?芍???車??
	NET_VCA_SINGLE_PATH  struPathInfo[MAX_DISKNUM_V30]; //????﹞???
	BYTE  byRes[40]; //㊣???
}NET_VCA_SAVE_PATH_CFG, *LPNET_VCA_SAVE_PATH_CFG;

typedef struct tagNET_DVR_DEV_ACCESS_CFG
{
	DWORD   dwSize;
	NET_DVR_IPADDR     struIP;        //?????豕㊣???IP???﹞
	WORD     wDevicePort;                 //??????
	BYTE    byEnable;                 //??﹞???????0-﹞???1-??
	BYTE     byRes1;                //㊣???
	BYTE    sUserName[NAME_LEN];    //?????豕㊣???????????
	BYTE    sPassword[PASSWD_LEN];    //?????豕㊣???????????
	BYTE    byRes2[60];
}NET_DVR_DEV_ACCESS_CFG, *LPNET_DVR_DEV_ACCESS_CFG;

/********************************??????????㊣? end****************************/
//﹞?㊣???
#define MAKE_RESOLUTION(_interlace_, _width_, _height_, _fps_) \
    (((_interlace_)<<28) \
    |((((_width_)>>3)&0x1ff)<<19)| \
    ((((_height_)>>1)&0x7ff)<<8)| \
((_fps_)&0xff))
#define GET_RES_INTERLACE(_res_) \
(((_res_)>>28)&0x1)
#define GET_RES_WIDTH(_res_) \
((((_res_)>>19)&0x1ff)<<3)
#define GET_RES_HEIGHT(_res_) \
((((_res_)>>8)&0x7ff)<<1)
#define GET_RES_FPS(_res_) \
((_res_)&0xff)

#define NOT_AVALIABLE    MAKE_RESOLUTION (0,0,0,0)
#define SVGA_60HZ         MAKE_RESOLUTION(0, 800, 600, 60)
#define SVGA_75HZ         MAKE_RESOLUTION(0, 800, 600, 75)
#define XGA_60HZ         MAKE_RESOLUTION(0, 1024, 768, 60) 
#define XGA_75HZ         MAKE_RESOLUTION(0, 1024, 768, 75)
#define SXGA_60HZ          MAKE_RESOLUTION(0, 1280, 1024, 60)
#define SXGA2_60HZ      MAKE_RESOLUTION(0, 1280, 960, 60)
#define _720P_24HZ      MAKE_RESOLUTION(0, 1280, 720, 24)
#define _720P_25HZ      MAKE_RESOLUTION(0, 1280, 720, 25)
#define _720P_30HZ      MAKE_RESOLUTION(0, 1280, 720, 30)  
#define _720P_60HZ      MAKE_RESOLUTION(0, 1280, 720, 60)
#define _720P_50HZ      MAKE_RESOLUTION(0, 1280, 720, 50) 
#define _1080I_60HZ     MAKE_RESOLUTION(1, 1920, 1080, 60)
#define _1080I_50HZ      MAKE_RESOLUTION(1, 1920, 1080, 50)
#define _1080P_60HZ     MAKE_RESOLUTION(0, 1920, 1080, 60)
#define _1080P_50HZ     MAKE_RESOLUTION(0, 1920, 1080, 50)
#define _1080P_30HZ     MAKE_RESOLUTION(0, 1920, 1080, 30)
#define _1080P_25HZ     MAKE_RESOLUTION(0, 1920, 1080, 25)
#define _1080P_24HZ     MAKE_RESOLUTION(0, 1920, 1080, 24)
#define UXGA_60HZ          MAKE_RESOLUTION(0, 1600, 1200, 60)
#define UXGA_30HZ          MAKE_RESOLUTION(0, 1600, 1200, 30)
#define WSXGA_60HZ         MAKE_RESOLUTION(0, 1680, 1050, 60)
#define WUXGA_60HZ      MAKE_RESOLUTION(0, 1920, 1200, 60)
#define WUXGA_30HZ         MAKE_RESOLUTION(0, 1920, 1200, 30)
#define WXGA_60HZ          MAKE_RESOLUTION(0, 1360, 768, 60)
#define SXGA_PLUS_60HZ    MAKE_RESOLUTION(0, 1400, 1050, 60)
#define VGA_MODE_3840x2160_30HZ MAKE_RESOLUTION(0, 3840, 2160, 30)
#define VGA_MODE_3840x2160_60HZ MAKE_RESOLUTION(0, 3840, 2160, 60)



//?????“??????﹞???????
#define  MAX_WINDOWS_NUM 12        //????﹞?????????????
#define  MAX_SUPPORT_RES 32
#define  MAX_DISPNUM_V41 32
#define  MAX_SDI_RES     16     //SDI?????“??℅??車?∫??﹞?㊣?????

typedef struct tagNET_DVR_DISPWINDOWMODE
{
	BYTE byDispChanType;//?????“???角????0-BNC, 1-VGA, 2-HDMI, 3-DVI 4-SDI
	BYTE byDispChanSeq;//?????“???辰??,??1???????????角????VGA???辰㊣赤????????VGA
	BYTE byRes[2];
	BYTE byDispMode[MAX_WINDOWS_NUM/*12*/];
}NET_DVR_DISPWINDOWMODE, *LPNET_DVR_DISPWINDOWMODE;

typedef struct tagNET_DVR_DISPINFO
{
	BYTE  byChanNums;//?“??????
	BYTE  byStartChan;//?????“??
	BYTE  byRes[2];
	DWORD    dwSupportResolution[MAX_SUPPORT_RES/*32*/];//?∫??﹞?㊣???
}NET_DVR_DISPINFO, *LPNET_DVR_DISPINFO;

//?車??????????
typedef struct tagNET_DVR_SCREENINFO
{
	BYTE  bySupportBigScreenNums;//℅??角?車??????????
	BYTE  byStartBigScreenNum;//?車????????????
	BYTE  byMaxScreenX;//?車??????????
	BYTE  byMaxScreenY;
	BYTE  byRes[8];
}NET_DVR_SCREENINFO, *LPNET_DVR_SCREENINFO;

typedef struct tagNET_DVR_SDI_INFO
{
	BYTE  byChanNums;//?“??????
	BYTE  byStartChan;//?????“??
	BYTE  byRes[2];
	DWORD dwSupportResolution[MAX_SDI_RES/*16*/];//?∫??﹞?㊣???
}NET_DVR_SDI_INFO, *LPNET_DVR_SDI_INFO;

typedef struct tagNET_DVR_MATRIX_ABILITY_V41
{
	DWORD dwSize;
	BYTE  byDspNums;//DSP????  
	BYTE  byDecChanNums;//?????“????
	BYTE  byStartChan;//?????????“??
	BYTE  byRes1[5];
	NET_DVR_DISPINFO struVgaInfo;//VGA?????“??????
	NET_DVR_DISPINFO struBncInfo;//BNC?????“??????
	NET_DVR_DISPINFO struHdmiInfo;//HDMI?????“??????
	NET_DVR_DISPINFO struDviInfo;//DVI?????“??????
	NET_DVR_DISPWINDOWMODE struDispMode[MAX_DISPNUM_V41/*32*/];
	NET_DVR_SCREENINFO struBigScreenInfo;
	BYTE  bySupportAutoReboot; //??﹞??∫??℅?????????0-???∫????1-?∫??
	BYTE  byRes2[3];
	NET_DVR_SDI_INFO struSDIInfo;//SDI?????“??????
	BYTE  byRes3[48];
} NET_DVR_MATRIX_ABILITY_V41, *LPNET_DVR_MATRIX_ABILITY_V41;

//?????“??????
#define  MAX_WINDOWS                16
#define  MAX_WINDOWS_V41            36

#define  STARTDISPCHAN_VGA        1
#define  STARTDISPCHAN_BNC        9
#define  STARTDISPCHAN_HDMI        25
#define  STARTDISPCHAN_DVI        29

typedef union tagNET_DVR_VIDEO_PLATFORM
{
	BYTE byRes[160];
	struct
	{
		/*?‾??℅??∼???????????“???迄??????????℅?????????????(????????℅??????“??????℅????????∫)*/
		//????℅??????“?∫??℅???﹞???????℅??????????????豕??????
		BYTE    byJoinDecoderId[MAX_WINDOWS_V41];
		//?????∼???迄??????﹞?㊣?????1-D1,2-720P,3-1080P???豕㊣????豕???迄????﹞?㊣????????????“????﹞???????1﹞?????????1080P???辰?豕㊣??芍∼?4???????“????﹞????????????“??
		BYTE    byDecResolution[MAX_WINDOWS_V41];
		NET_DVR_RECTCFG struPosition; //?????“????????????????
		BYTE    byRes[80];
	}struVideoPlatform;
	struct
	{
		BYTE    byRes[160];
	}struNotVideoPlatform;
}NET_DVR_VIDEO_PLATFORM, LPNET_DVR_VIDEO_PLATFORM;


typedef struct tagNET_DVR_MATRIX_VOUTCFG
{
	DWORD    dwSize;
	BYTE    byAudio;            /*??????﹞?????*/
	BYTE    byAudioWindowIdx;      /*????????℅??∼??*/
	BYTE    byDispChanType;      /*?????“???角????0-BNC??1-VGA??2-HDMI??3-DVI??4-YPbPr(?????“﹞????‾DECODER_SERVER℅“??)*/
	BYTE    byVedioFormat;         /*1:NTSC,2:PAL??0-NULL*/
	DWORD    dwResolution;//﹞?㊣???
	DWORD    dwWindowMode;        /*????????????????????*/
	BYTE    byJoinDecChan[MAX_WINDOWS_V41];/*?‾??℅??∼?????????????“??,?豕㊣??∫??????℅???℅???﹞????㊣??????????????*/
	BYTE    byEnlargeStatus;          /*??﹞?????﹞??車℅?????0????﹞??車??1??﹞??車*/
	BYTE    byEnlargeSubWindowIndex;//﹞??車??℅??∼????
	BYTE    byScale; /*??????????0---??????????1---??﹞?????( ????BNC )*/
	BYTE    byUnionType;/*??﹞???????,0-????℅??????“?????????‾?????“????????1-?????????‾?????“??????*/
	NET_DVR_VIDEO_PLATFORM        struDiff;
	DWORD   dwDispChanNum; //?????????????????????????????㊣???∫
	WORD     wLEDWidth;     //LED﹞?㊣????赤??0?????∫   
	WORD     wLEDHeight;    //LED﹞?㊣???????0?????∫
	BYTE      byEnableVideoEffect;  //?????∫???????? 0-???????? !0-????
	BYTE      byRes[3];  //㊣???℅???
	NET_DVR_VIDEOEFFECT struVideoEffect;   //?????∫??
	BYTE    byRes2[60];
}NET_DVR_MATRIX_VOUTCFG, *LPNET_DVR_MATRIX_VOUTCFG;

/*?????‾?豕㊣?℅???*/
typedef struct tagNET_DVR_DISP_CHAN_STATUS_V41
{
	BYTE  byDispStatus;      /*????℅?????0??????????1??????????*/
	BYTE  byBVGA;              /*0-BNC??1-VGA?? 2-HDMI??3-DVI??4-SDI 0xff-???∫*/
	BYTE  byVideoFormat;     /*??????????1:NTSC,2:PAL,0-NON*/
	BYTE  byWindowMode;       /*????????*/
	BYTE  byJoinDecChan[MAX_WINDOWS_V41];   /*?‾??℅????????????????“??*/
	BYTE  byFpsDisp[MAX_WINDOWS_V41];        /*????℅???????????????*/
	BYTE  byScreenMode;        /*????????0-???“ 1-?車??*/
	BYTE  byRes1[3];
	DWORD  dwDispChan; /*?????????????“??℅????㊣???∫???豕???㊣????0*/
	BYTE  byRes2[24];
}NET_DVR_DISP_CHAN_STATUS_V41, *LPNET_DVR_DISP_CHAN_STATUS_V41;

/*?????‾?豕㊣?℅???*/
typedef struct tagNET_DVR_DECODER_WORK_STATUS_V41
{
	DWORD dwSize;
	NET_DVR_MATRIX_CHAN_STATUS struDecChanStatus[32];     /*?????“??℅???*/
														  /*?????“??℅???*/
	NET_DVR_DISP_CHAN_STATUS_V41   struDispChanStatus[MAX_DISPNUM_V41/*32*/];
	BYTE byAlarmInStatus[32];         /*㊣“??????℅???*/
	BYTE byAlarmOutStatus[32];       /*㊣“??????℅???*/
	BYTE byAudioInChanStatus;          /*????????℅???*/
	BYTE byRes[127];
}NET_DVR_DECODER_WORK_STATUS_V41, *LPNET_DVR_DECODER_WORK_STATUS_V41;
/*******************************??????﹞?-??????﹞??豕??*******************************/
typedef struct tagNET_DVR_MATRIX_DEC_REMOTE_PLAY_V41
{
	DWORD    dwSize;
	NET_DVR_IPADDR    struIP;        /* DVR IP???﹞ */
	WORD    wDVRPort;            /* ?????? */
	BYTE    byChannel;            /* ?“???? */
	BYTE     byReserve;
	BYTE    sUserName[NAME_LEN];        /* ???∫?? */
	BYTE    sPassword[PASSWD_LEN];        /* ???? */
	DWORD    dwPlayMode;       /* 0??∼????? 1??∼??㊣??*/
	NET_DVR_TIME StartTime;
	NET_DVR_TIME StopTime;
	char    sFileName[128];
	BYTE    byRes[64];        /*㊣???*/
}NET_DVR_MATRIX_DEC_REMOTE_PLAY_V41, *LPNET_DVR_MATRIX_DEC_REMOTE_PLAY_V41;


#define  MAX_BIGSCREENNUM_SCENE 100
#define  MAX_LAYERNUMS    32

//?????“???????芍??
typedef struct tagNET_DVR_RECTCFG_SCENE
{
	WORD wXCoordinate; /*????℅車??????????X℅?㊣那*/
	WORD wYCoordinate; /*????℅車????Y℅?㊣那*/
	WORD wWidth;       /*?????赤??*/
	WORD wHeight;      /*????????*/
}NET_DVR_RECTCFG_SCENE, *LPNET_DVR_RECTCFGSCENE;

typedef struct tagNET_DVR_SCENEDISPCFG
{
	BYTE    byEnable;//??﹞???????0-????????1-????
	BYTE    bySoltNum;//??????
	BYTE    byRes1[2];
	BYTE    byDispChanNum;
	BYTE    byAudio;                /*??????﹞?????,0-﹞???1-??*/
	BYTE    byAudioWindowIdx;      /*????????℅??∼??*/
	BYTE    byVedioFormat;          /*1:NTSC,2:PAL??0-NULL*/
	BYTE    byWindowMode;            /*??????????????????????*/
	BYTE    byEnlargeStatus;         /*??﹞?????﹞??車℅?????0????﹞??車??1??﹞??車*/
	BYTE    byEnlargeSubWindowIndex;//﹞??車??℅??∼????    
	BYTE    byScale; /*??????????0-??????????1-??﹞?????( ????BNC )*/
	DWORD   dwResolution;//﹞?㊣???
	BYTE    byJoinDecChan[MAX_WINDOWS_V41];/*?‾??℅??∼?????????????“??*/
	BYTE    byJoinDecoderId[MAX_WINDOWS_V41];/*??????*/
											 //?????∼???迄??????﹞?㊣?????1-D1,2-720P,3-1080P???豕㊣????豕???迄????//﹞?㊣????????????“????﹞???????1﹞?????????1080P???辰?豕㊣??芍∼?4???????“????﹞????????????“??
	BYTE    byDecResolution[MAX_WINDOWS_V41];
	BYTE    byRow;//?車???迄?????????辰??
	BYTE    byColumn;//?車???迄?????????辰??
	BYTE    byRes2[5];
	NET_DVR_RECTCFG struDisp; //??????????????
} NET_DVR_SCENEDISPCFG, *LPNET_DVR_SCENEDISPCFG;

typedef struct tagDEV_CHAN_INFO_SCENE
{
	NET_DVR_IPADDR struIP;                /* DVR IP???﹞ */
	WORD     wDVRPort;                 /* ?????? */
	BYTE     byChannel;        /* ?“??????????9000???豕㊣???IPC???????“??????33???? */
	BYTE    byTransProtocol;        /* ???????谷?角??0-TCP??1-UDP ??2-MCAST??3-RTP*/
	BYTE    byTransMode;            /* ???????‾???? 0???‾???‾ 1??℅????‾*/
	BYTE    byFactoryType;                /*?∼???豕㊣??∫???角??*/
	BYTE    byDeviceType;            //?豕㊣??角????1-IPC??2- ENCODER
	BYTE    byRes[5];
	BYTE    sUserName[NAME_LEN];    /* ?角???‾?迆???????? */
	BYTE    sPassword[PASSWD_LEN];    /* ?角???‾?迆???? */
} NET_DVR_DEV_CHAN_INFO_SCENE, *LPNET_DVR_DEV_CHAN_INFO_SCENE;

/*?‾????﹞????‾?迄㊣?????*/
typedef struct tagSTREAM_MEDIA_SERVER_CFG_SCENE
{
	BYTE    byValid;            /*??﹞??????‾????﹞????‾???‾,0㊣赤?????∫*/
	BYTE    byRes1[3];
	NET_DVR_IPADDR struDevIP;    /*?‾????﹞????‾???﹞*/
	WORD    wDevPort;            /*?‾????﹞????‾????*/
	BYTE    byTransmitType;        /*???????谷?角??0-TCP??1-UDP */
	BYTE    byRes2[5];
}NET_DVR_STREAM_MEDIA_SERVER_CFG_SCENE, *LPNET_DVR_STREAM_MEDIA_SERVER_CFG_SCENE;

typedef struct tagPU_STREAM_CFG_SCENE
{
	NET_DVR_STREAM_MEDIA_SERVER_CFG_SCENE    streamMediaServerCfg;
	NET_DVR_DEV_CHAN_INFO_SCENE                struDevChanInfo;
}NET_DVR_PU_STREAM_CFG_SCENE, *LPNET_DVR_PU_STREAM_CFG_SCENE;

typedef struct  tagNET_DVR_CYC_SUR_CHAN_ELE_SCENE
{
	BYTE                            byEnable;    /* ??﹞????? 0??﹞? 1??????*/
	BYTE                            byRes[3];
	NET_DVR_STREAM_MEDIA_SERVER_CFG_SCENE    struStreamMediaSvrCfg;
	NET_DVR_DEV_CHAN_INFO_SCENE            struDecChanInfo;    /*?????????“??????*/
}NET_DVR_CYC_SUR_CHAN_ELE_SCENE, *LPNET_DVR_CYC_SUR_CHAN_ELE_SCENE;

//?????????芍??
typedef struct  tagNET_DVR_MATRIX_LOOP_DECINFO_SCENE
{
	WORD    wPoolTime;        /*????????*/
	BYTE    byRes1[2];
	NET_DVR_CYC_SUR_CHAN_ELE_SCENE    struChanArray[MAX_CYCLE_CHAN/*16*/];
	BYTE    byRes2[4];
} NET_DVR_MATRIX_LOOP_DECINFO_SCENE, *LPNET_DVR_MATRIX_LOOP_DECINFO_SCENE;

//?????????“???????芍????
typedef struct tagNET_DVR_DECODECHANCFG_SCENE/*struct size : 2064*/
{
	BYTE    byDecodeEnable;//????????㊣那????0-??????1-??????????????2-????????????
	BYTE    bySlotNum;//??????
	BYTE    byDecChan;
	BYTE    byJointAllDecodeChan;        //??﹞??????辰???????“?? 0-????????1-????
	BYTE    byJointSlotNum;            //?????????????“?辰??????∼???????????
	BYTE    byJointChanNum;        //???????“?????“?辰??????∼??“??????
	BYTE    byRes[2];
	union
	{
		NET_DVR_PU_STREAM_CFG_SCENE struSceneDynamicDecCfg;
		NET_DVR_MATRIX_LOOP_DECINFO_SCENE struSceneCycDecCfg;
	} struDecCfg;
}NET_DVR_DECODECHANCFG_SCENE, *LPNET_DVR_DECODECHANCFG_SCENE;

typedef struct tagNET_DVR_BIGSCREENCFG_SCENE
{
	BYTE byAllValid; /*????????㊣那?? */
	BYTE byAssociateBaseMap;//???????℅???辰????0?迆㊣赤??????
	BYTE byEnableSpartan;//?車????????????1-????0-??
	BYTE byRes;
	NET_DVR_WINCFG struWinCfg[MAX_LAYERNUMS];
	NET_DVR_BIGSCREENCFG struBigScreen;
}NET_DVR_BIGSCREENCFG_SCENE, *LPNET_DVR_BIGSCREENCFG_SCENE;

typedef struct tagNET_DVR_MATRIX_SCENECFG
{
	DWORD dwSize;
	BYTE  sSceneName[NAME_LEN];
	BYTE  byBigScreenNums;//?車??????????℅??車???“????????????
	BYTE  byRes1[3];
	WORD  wDecChanNums;//???∼???????“????????
	WORD  wDispChanNums;//???∼???????“????????
	BYTE  byRes2[12];
	BYTE  *pBigScreenBuffer;//?車????????????, byBigScreenNums??sizeof(NET_DVR_BIGSCREENCFG_SCENE)
	BYTE  *pDecChanBuffer;//?????“????????????, wDecChanNums??sizeof(NET_DVR_DECODECHANCFG_SCENE)
	BYTE  *pDispChanBuffer;//?????“????????????, wDispChanNums??sizeof(NET_DVR_SCENEDISPCFG)
}NET_DVR_MATRIX_SCENECFG, *LPNET_DVR_MATRIX_SCENECFG;



typedef struct tagNET_DVR_BIGSCREENASSOCIATECFG
{
	DWORD dwSize;
	BYTE  byEnableBaseMap;//?????℅??????
	BYTE  byAssociateBaseMap;//???????℅???辰????0?迆㊣赤??????
	BYTE  byEnableSpartan;//?車????????????1-????0-??
	BYTE  byRes[21];
} NET_DVR_BIGSCREENASSOCIATECFG, *LPNET_DVR_BIGSCREENASSOCIATECFG;
/*******************************?∼???豕??*******************************/
#define MAX_WIN_COUNT  224 //?∫????℅??車???∼??

typedef struct tagNET_DVR_SCREEN_WINCFG
{
	DWORD    dwSize;
	BYTE    byVaild;
	BYTE    byInputType;        //??CAM_MDOE
	WORD    wInputIdx;            /*???????‾??*/
	DWORD    dwLayerIdx;            /*??????0??℅??℅??*/
	NET_DVR_RECTCFG  struWin;    //?????∼??(?角????????)
	BYTE    byWndIndex;            //?∼????
	BYTE    byCBD;                //0-????1-??㊣??∼??2-????㊣??∼
	BYTE    bySubWnd;            //0??????1??
	BYTE    byRes1;
	DWORD   dwDeviceIndex;//?豕㊣??辰??
	BYTE    byRes2[16];
}NET_DVR_SCREEN_WINCFG, *LPNET_DVR_SCREEN_WINCFG;

typedef struct tagNET_DVR_WINLIST
{
	DWORD    dwSize;
	WORD    wScreenSeq;    //?豕㊣??辰??
	BYTE    byRes[10];
	DWORD    dwWinNum;    //?豕㊣?﹞??????∼??????
	BYTE    *pBuffer;    //?∼??????????????℅??車??224*sizeof(NET_DVR_WINCFG)
	DWORD   dwBufLen;    //?迄﹞????????∟??
}NET_DVR_WINLIST, *LPNET_DVR_WINLIST;

#define MAX_LAYOUT_COUNT 16        //℅??車??????
typedef struct tagNET_DVR_LAYOUTCFG
{
	DWORD dwSize;
	BYTE  byValid;                                //??????﹞????∫
	BYTE  byRes1[3];
	BYTE  byLayoutName[NAME_LEN/*32*/];            //????????            
	NET_DVR_SCREEN_WINCFG struWinCfg[MAX_WIN_COUNT/*224*/];    //???????∼??????
	BYTE  byRes2[16];
}NET_DVR_LAYOUTCFG, *LPNET_DVR_LAYOUTCFG;

typedef struct tagNET_DVR_LAYOUT_LIST
{
	DWORD dwSize;
	NET_DVR_LAYOUTCFG struLayoutInfo[MAX_LAYOUT_COUNT/*16*/];   //?迄??????
	BYTE byRes[4];
}NET_DVR_LAYOUT_LIST, *LPNET_DVR_LAYOUT_LIST;

#define MAX_CAM_COUNT       224
#define MAX_CAM_COUNT_V50    512

typedef enum tagNET_DVR_CAM_MODE
{
	NET_DVR_UNKNOW = 0,//???∫
	NET_DVR_CAM_BNC,
	NET_DVR_CAM_VGA,
	NET_DVR_CAM_DVI,
	NET_DVR_CAM_HDMI,
	NET_DVR_CAM_IP,
	NET_DVR_CAM_RGB,
	NET_DVR_CAM_DECODER,
	NET_DVR_CAM_MATRIX,
	NET_DVR_CAM_YPBPR,
	NET_DVR_CAM_USB,
	NET_DVR_CAM_SDI,
	NET_DVR_CAM_HDI,
	NET_DVR_CAM_DP, //???角??????℅??????“??﹞???
	NET_DVR_CAM_HDTVI,
	NET_DVR_CAM_JOINT, //??????????
	NET_DVR_CAM_HDBASET,
	NET_DVR_CAM_DVIT, //DVI?????﹞?????角??????℅??????“??﹞???
	NET_DVR_CAM_FUSION, //?角IPC????
	NET_DVR_CAM_VSCREEN, //?谷????
	NET_DVR_CAM_FIBER, //????
	NET_DVR_CAM_3GSDI, //3G-SDI
	NET_DVR_CAM_DISTRIBUTED_IP, //﹞???????????
	NET_DVR_CAM_JONIT_X86,// x86????℅????????????“??
	NET_DVR_CAM_TVI, //TVI??????
}NET_DVR_CAM_MODE;

typedef struct tagNET_DVR_INPUTSTREAMCFG
{
	DWORD    dwSize;
	BYTE    byValid;
	BYTE    byCamMode;                        //???????????角??????NET_DVR_CAM_MODE
	WORD    wInputNo;                        //???????辰??0-224
	BYTE    sCamName[NAME_LEN];            //??????????????
	NET_DVR_VIDEOEFFECT struVideoEffect;    //????????
	NET_DVR_PU_STREAM_CFG    struPuStream;    //ip?????㊣????
	WORD    wBoardNum;                        //???????迄????∼??“??
	WORD    wInputIdxOnBoard;                //????????∼??“????????
	DWORD   dwResolution;//﹞?㊣???
	BYTE    byVideoFormat;//????????????VIDEO_STANDARD
	BYTE    byStatus;    //??????℅?????0-℅??????∫ 1-?????? 2-?????? 3-?足?? 
	BYTE    sGroupName[NAME_LEN/*32*/];    //??????????﹞?℅谷 ℅谷??
	BYTE    byJointMatrix;            //  ???????車 ??0-??????  1-????
	BYTE    byRes;
}NET_DVR_INPUTSTREAMCFG, *LPNET_DVR_INPUTSTREAMCFG;

typedef struct tagNET_DVR_INPUTSTREAM_LIST
{
	DWORD dwSize;
	NET_DVR_INPUTSTREAMCFG struInputStreamInfo[MAX_CAM_COUNT]; //?迄????????
	BYTE byRes[4];
}NET_DVR_INPUTSTREAM_LIST, *LPNET_DVR_INPUTSTREAM_LIST;

/*******************************????????????*******************************/
/*?????“?????赤*/
typedef struct tagNET_DVR_OUTPUTPARAM
{
	DWORD  dwSize;
	BYTE   byMonMode;        /*????????????,1-BNC,2-VGA,3-DVI,4-HDMI*/
	BYTE   byRes1[3];
	DWORD  dwResolution;    /*﹞?㊣??????迄?????????????迄?∫?????????豕??*/
	NET_DVR_VIDEOEFFECT  struVideoEffect;    /*?????“??????????????*/
	BYTE    byRes2[32];
}NET_DVR_OUTPUTPARAM, *LPNET_DVR_OUTPUTPARAM;

typedef struct tagNET_DVR_OUTPUTCFG
{
	DWORD    dwSize;
	BYTE    byScreenLayX;                        //?車??????-?芍℅?㊣那
	BYTE    byScreenLayY;                        //?車??????-℅?℅?㊣那
	WORD    wOutputChanNum;                    //?????“????????0㊣赤???豕㊣??∫????℅??車?????“????????℅??車????????????????????????㊣赤???????????“??????
	BYTE    byRes1[4];
	NET_DVR_OUTPUTPARAM  struOutputParam;    /*?????“??????????????*/
	BYTE    sWallName[16];                    //??????????
	BYTE    byRes2[8];
}NET_DVR_OUTPUTCFG, *LPNET_DVR_OUTPUTCFG;

/*******************************??????*******************************/
#define SCREEN_PROTOCOL_NUM      20    //?∫????℅??車?車???????‾???谷??
//?角??﹞????‾??????
typedef struct tagNET_DVR_SCREENSERVER_ABILITY
{
	DWORD dwSize;               /*?芍???∟??*/
	BYTE byIsSupportScreenNum; /*?迄?∫???車???????‾??????*/
	BYTE bySerialNums;            //????????
	BYTE byMaxInputNums;
	BYTE byMaxLayoutNums;
	BYTE byMaxWinNums;
	BYTE byRes1[19];
	BYTE byMaxScreenLayX;//?車??????-℅??車?芍℅?㊣那?車????
	BYTE byMaxScreenLayY;//?車??????-℅??車℅?℅?㊣那?車????
	WORD wMatrixProtoNum; /*???∫???車?????谷????*/
	NET_DVR_PROTO_TYPE struScreenProto[SCREEN_PROTOCOL_NUM];/*℅??車???谷??㊣赤*/
	BYTE byRes2[24];
}NET_DVR_SCREENSERVER_ABILITY, *LPNET_DVR_SCREENSERVER_ABILITY;

//?角???????‾??????
typedef struct tagNET_DVR_SCREENCONTROL_ABILITY
{
	DWORD dwSize;           /*?芍???∟??*/
	BYTE byLayoutNum;         /* ????????*/
	BYTE byWinNum;             /*?????∼??????*/
	BYTE byOsdNum;          /*OSD????*/
	BYTE byLogoNum;         /*Logo????*/
	BYTE byInputStreamNum;  //?????????? ---?豕㊣??∫??℅??車?????“???????“∼邦?“㊣???????????????????????
	BYTE byOutputChanNum;    //?????“??????---?豕㊣??∫??℅??車?????“??????
	BYTE byCamGroupNum;        /*﹞?℅谷????*/
	BYTE byPlanNum;            /*?∟∼?????*/
	BYTE byRes1[5];
	BYTE byIsSupportPlayBack;  /*??﹞??∫????﹞?*/
	BYTE byMatrixInputNum;  //?∫?????????車℅??車????
	BYTE byMatrixOutputNum; //?∫?????????車℅??車????
	NET_DVR_DISPINFO struVgaInfo;//VGA????????
	NET_DVR_DISPINFO struBncInfo;//BNC????????
	NET_DVR_DISPINFO struHdmiInfo;//HDMI????????
	NET_DVR_DISPINFO struDviInfo;//DVI????????
	BYTE byMaxUserNums;//?∫?????∫??
	BYTE byPicSpan;        //?℅?????????????℅??℅??角??????????????
	WORD wDVCSDevNum;    //﹞??????車???????‾℅??車?豕㊣???
	WORD wNetSignalNum;    //℅??車??????????????
	WORD wBaseCoordinateX;//?迄℅?℅?㊣那
	WORD wBaseCoordinateY;
	BYTE byExternalMatrixNum;    //℅??車???????車????
	BYTE byRes2[49];
}NET_DVR_SCREENCONTROL_ABILITY, *LPNET_DVR_SCREENCONTROL_ABILITY;

/*******************************????????℅???*******************************/
typedef struct tagNET_DVR_ANALOGINPUTSTATUS
{
	DWORD    dwLostFrame;        /*??????????????*/
	BYTE    byHaveSignal;        /*??﹞???????????????*/
	BYTE    byVideoFormat;        /*??????????1??NTSC,2??PAL,0????*/
	BYTE    byRes[46];
} NET_DVR_ANALOGINPUTSTATUS, *LPNET_DVR_ANALOGINPUTSTATUS;

typedef union tagNET_DVR_INPUTSTATUS_UNION
{
	NET_DVR_MATRIX_CHAN_STATUS struIpInputStatus;
	NET_DVR_ANALOGINPUTSTATUS struAnalogInputStatus;
} NET_DVR_INPUTSTATUS_UNION, *LPNET_DVR_INPUTSTATUS_UNION;

typedef struct tagNET_DVR_INPUTSTATUS
{
	WORD    wInputNo;        /*???????辰??*/
	BYTE    byInputType;    //??NET_DVR_CAM_MODE
	BYTE    byRes1[9];
	NET_DVR_INPUTSTATUS_UNION struStatusUnion;
	BYTE    byRes2[16];
} NET_DVR_INPUTSTATUS, *LPNET_DVR_INPUTSTATUS;

typedef struct tagNET_DVR_SCREENINPUTSTATUS
{
	DWORD    dwSize;
	BYTE    byRes[12];
	DWORD    dwNums;        //?豕㊣?﹞???????????℅?????????
	BYTE    *pBuffer;    //??????
	DWORD   dwBufLen;    //?迄﹞????????∟????????????
}NET_DVR_SCREENINPUTSTATUS, *LPNET_DVR_SCREENINPUTSTATUS;

typedef struct tagNET_DVR_SCREENALARMCFG
{
	DWORD    dwSize;
	BYTE    byAlarmType;    //㊣“???角????1-℅?∼?∼?????2-℅?∼???????3-℅?????℅????足????4-℅????????????? 5-???????足??   6-????㊣“?? 7-FPGA∼?㊣??????? 8-?∟∼????? 9-?∟∼??芍?? 10-????∼????? 11-????∼?IP???﹞??????12-﹞????足??
	BYTE    byBoardType;    // 1-????∼? 2-????∼? ??3-?‾∼???4-㊣?∼???㊣“???角????1??2??3??6???㊣?辰???? 
	BYTE    bySubException;    //?????足???㊣????℅??足?? 1- ﹞?㊣?????????㊣? 2-?????????角????㊣?3-﹞?㊣????赤?車4-﹞?㊣?????㊣?????????℅?????℅?????㊣??????????????∼????5-﹞?㊣?????㊣????????????∼????﹞?㊣???????1/8??8㊣?﹞??∫??6-﹞?㊣???????????,7-﹞?㊣?????㊣?????????∼???????????,?豕㊣???㊣??∼?? 
	BYTE    byRes1;
	WORD    wStartInputNum; // ?足?????????“?足???????? 
	WORD    wEndInputNum;    // ?足?????????“?足???????? 
	BYTE    byRes2[16];
}NET_DVR_SCREENALARMCFG, *LPNET_DVR_SCREENALARMCFG;

typedef struct tagNET_DVR_MATRIX_CFG
{
	BYTE  byValid;                //??????﹞??????????車?“??﹞????∫??
	BYTE  byCommandProtocol;    //???????車???????“4????
	BYTE  byScreenType;            //㊣???    
	BYTE  byRes1;
	BYTE  byScreenToMatrix[32];    //???????車??????????????????????
	BYTE  byRes2[4];
}NET_DVR_MATRIX_CFG, *LPNET_DVR_MATRIX_CFG;

typedef struct tagNET_DVR_DIGITALSCREEN
{
	NET_DVR_IPADDR  struAddress;/*?豕㊣?????℅??豕㊣??㊣??IP????*/
	WORD            wPort;        //?“????
	BYTE            byRes[26];  //㊣???
}NET_DVR_DIGITALSCREEN, *LPNET_DVR_DIGITALSCREEN;
typedef struct tagNET_DVR_ANALOGSCREEN
{
	BYTE    byDevSerPortNum;   /*?????豕㊣?????????*/
	BYTE    byScreenSerPort;  /*?????車??????????*/
	BYTE    byRes[130];
	NET_DVR_MATRIX_CFG struMatrixCfg;
}NET_DVR_ANALOGSCREEN, *LPNET_DVR_ANALOGSCREEN;

typedef union tagNET_DVR_SCREEN_UNION
{
	NET_DVR_DIGITALSCREEN struDigitalScreen;
	NET_DVR_ANALOGSCREEN struAnalogScreen;
}NET_DVR_SCREEN_UNION, *LPNET_DVR_SCREEN_UNION;
typedef struct tagNET_DVR_SCREEN_SCREENINFO
{
	DWORD dwSize;
	BYTE byValid;                //??﹞????∫
	BYTE nLinkMode;                //????﹞?????0-??????1-????
	BYTE byDeviceType;            //?豕㊣?????????????????
	BYTE byScreenLayX;            //?車??????-?芍℅?㊣那
	BYTE byScreenLayY;            //?車??????-℅?℅?㊣那
	BYTE byRes1[3];
	BYTE sUserName[NAME_LEN];    /*???????∫??*/
	BYTE sPassword[PASSWD_LEN]; /*????????*/
	BYTE sDevName[NAME_LEN];    /*?豕㊣?????*/
	NET_DVR_SCREEN_UNION struScreenUnion;
	BYTE byInputNum;            // ??????????
	BYTE byOutputNum;            // ??????????
	BYTE byCBDNum;                //CBD????
	BYTE byRes2[29];
} NET_DVR_SCREEN_SCREENINFO, *LPNET_DVR_SCREEN_SCREENINFO;

/*******************************?℅??????*******************************/
typedef struct tagNET_DVR_BASEMAP_CFG
{
	BYTE byScreenIndex;         //???????辰??
	BYTE byMapNum;                /*㊣?﹞????????角???谷 */
	BYTE res[2];
	WORD wSourWidth;            /* ?????????赤?? */
	WORD wSourHeight;            /* ???????????? */
}NET_DVR_BASEMAP_CFG, LPNET_DVR_BASEMAP_CFG;


typedef struct tagNET_DVR_PICCFG
{
	DWORD    dwSize;        //?車??
	BYTE    byUseType;    //1-?℅????2-GIF??????3-CAD???? 4-??????????
	BYTE    bySequence;//?辰??    
	BYTE    byRes[2];
	NET_DVR_BASEMAP_CFG    struBasemapCfg;
	BYTE    sPicName[NAME_LEN];//????????
	DWORD   dwVideoWall;       //???? 1℅???????+3℅???㊣???
	BYTE    byRes2[28];
}NET_DVR_PICTURECFG, *LPNET_DVR_PICTURECFG;

/*******************************OSD*******************************/
#define MAX_OSDCHAR_NUM 256
typedef struct tagNET_DVR_OSDCFG
{
	DWORD   dwSize;
	BYTE    byValid;    /*??﹞????∫ 0???∫ 1???∫*/
	BYTE    byDispMode;  //??????????1-???‾??2-∼????‾??3-????????????
	BYTE    byFontColorY; /*℅???????Y,0-255*/
	BYTE    byFontColorU; /*℅???????U,0-255*/
	BYTE    byFontColorV; /*℅???????V,0-255*/
	BYTE    byBackColorY; /*㊣??∼????Y,0-255*/
	BYTE    byBackColorU; /*㊣??∼????U,0-255*/
	BYTE    byBackColorV; /*㊣??∼????V,0-255*/
	WORD    wXCoordinate;   /*OSD??????℅車????????x*/
	WORD    wYCoordinate;   /*OSD??????℅車????????y*/
	WORD    wWidth;       /*OSD?赤??*/
	WORD    wHeight;      /*OSD????*/
	DWORD   dwCharCnt;     /*℅?﹞???????*/
	WORD    wOSDChar[MAX_OSDCHAR_NUM];       /*OSD℅?﹞?????*/
	BYTE    byRes[32];
}NET_DVR_OSDCFG, *LPNET_DVR_OSDCFG;


/*******************************????????????*******************************/
typedef struct tagNET_DVR_SERIAL_CONTROL
{
	DWORD    dwSize;
	BYTE    bySerialNum;        // ????????
	BYTE    byRes1[3];
	BYTE    bySerial[32];
	BYTE    byRes2[32];
}NET_DVR_SERIAL_CONTROL, *LPNET_DVR_SERIAL_CONTROL;

/*******************************????????*******************************/
//??????????????
typedef enum tagINPUT_INTERFACE_TYPE
{
	INTERFACE_VGA = 0,
	INTERFACE_SVIDEO, // 2046NL???∫????2046NH?∫??
	INTERFACE_YPBPR,
	INTERFACE_DVI,
	INTERFACE_BNC,
	INTERFACE_DVI_LOOP,//(?﹞?“) 2046NH???∫????2046NL?∫??
	INTERFACE_BNC_LOOP, //(?﹞?“) 2046NH???∫????2046NL.?∫??
	INTERFACE_HDMI,
	INTERFACE_IP,
	INTERFACE_USB,
	INTERFACE_SDI,
	INTERFACE_DP,
	INTERFACE_HDBASET
}INPUT_INTERFACE_TYPE;
typedef struct tagNET_DVR_INPUT_INTERFACE_CTRL
{
	BYTE    byInputSourceType;    //??INPUT_INTERFACE_TYPE
	BYTE    byRes[15];
}NET_DVR_INPUT_INTERFACE_CTRL, *LPNET_DVR_INPUT_INTERFACE_CTRL;
//????????????????
typedef struct tagNET_DVR_DISPLAY_COLOR_CTRL
{
	BYTE    byColorType;        //1-???? 2-??㊣??? 3-㊣????? 4-???迆??
	char    byScale;            //-1 ??0??+1??????
	BYTE    byRes[14];
}NET_DVR_DISPLAY_COLOR_CTRL, *LPNET_DVR_DISPLAY_COLOR_CTRL;
//????????????????
typedef struct tagNET_DVR_DISPLAY_POSITION_CTRL
{
	BYTE    byPositionType;    //1-???????? 2-???㊣??????
	char    byScale;            //-1 ??0??+1??????
	BYTE    byRes[14];
}NET_DVR_DISPLAY_POSITION_CTRL, *LPNET_DVR_DISPLAY_POSITION_CTRL;


/*******************************????????V41*******************************/
typedef struct tagNET_DVR_RECTCFG_EX
{
	DWORD dwXCoordinate; /*????℅車??????????X℅?㊣那*/
	DWORD dwYCoordinate; /*????℅車????Y℅?㊣那*/
	DWORD dwWidth;       /*?????赤??*/
	DWORD dwHeight;      /*????????*/
	BYTE  byRes[4];
}NET_DVR_RECTCFG_EX, *LPNET_DVR_RECTCFG_EX;

/*******************************?∟∼????赤*******************************/
#define        MAX_PLAN_ACTION_NUM     32     //?∟∼???℅‾????
#define        DAYS_A_WEEK                7    //????7?足
#define        MAX_PLAN_COUNT            16    //?∟∼?????


typedef enum
{
	NET_DVR_SWITCH_LAYOUT = 1,         // ???????? ????
	NET_DVR_SCREEN_POWER_OFF,          // ??㊣??車????????
	NET_DVR_SCREEN_POWER_ON,           // ?辰???車????????
	NET_DVR_SWITCH_BASEMAP            //?℅??????
}NET_DVR_PLAN_OPERATE_TYPE;

/*?∟∼???????*/
typedef struct  tagNET_DVR_PLAN_INFO
{
	BYTE      byValid;          // ??????﹞????∫
	BYTE      byType;           // ???“??NET_DVR_PLAN_OPERATE_TYPE
	WORD      wLayoutNo;      // ??????
	BYTE    byScreenStyle;    //???????????????迆?迄????1????????2??????
	BYTE  byBaseMapType;  //?℅???角????1-?????℅????2-???????????℅?????℅???????㊣???∫
	BYTE  byRes1[2];
	DWORD      dwDelayTime;      // ?????????????㊣??, ??????
	DWORD   dwSerialNo;        //?????????????????㊣????
	DWORD  dwBaseMapWndNo; //?℅???∼???????℅???????㊣???∫
	DWORD  dwBaseMapNo;   //?℅???????℅???????㊣???∫???℅???角????1?㊣???????????????辰?????℅???角????2?㊣??????????????????℅????????????“1℅????豕㊣???+1℅???℅?∼???+2℅????????????辰????
	BYTE    byRes2[20];
} NET_DVR_PLAN_INFO, *LPNET_DVR_PLAN_INFO;

typedef struct tagNET_DVR_CYCLE_TIME
{
	BYTE    byValid;
	BYTE    byRes[3];
	NET_DVR_TIME_EX struTime;
}NET_DVR_CYCLE_TIME, *LPNET_DVR_CYCLE_TIME;
/*?∟∼????赤*/
typedef struct tagNET_DVR_PLAN_CFG
{
	DWORD     dwSize;
	BYTE      byValid;          // ???∟∼???﹞????∫
	BYTE      byWorkMode;      // ?∟∼??∟℅‾???? 1㊣赤????????2℅?????3?∟∼????﹞
	BYTE    byWallNo;        //????????????1????
	BYTE    byPlanNo;    //?∟∼??????????∟∼???㊣赤?㊣???∫??0-???∫?辰???∫??
	BYTE      byPlanName[NAME_LEN/*32*/]; //?∟∼?????
	NET_DVR_TIME_EX struTime; // ?∟℅‾??????℅????㊣????
	NET_DVR_CYCLE_TIME struTimeCycle[DAYS_A_WEEK/*7*/]; /*???﹞?㊣?????????????????????那????????????????????????????struTimeCycle[0]????byValid??????1??㊣赤???????足???????∟∼?????????????????[0,6]??????0?迆㊣赤?????足??1?迆㊣赤?????????????角??*/
	DWORD     dwWorkCount;      // ?∟∼?????????????
	NET_DVR_PLAN_INFO strPlanEntry[MAX_PLAN_ACTION_NUM/*32*/];  // ?∟∼???????????
	DWORD		dwPlanNo; //4℅????∟∼????????∫??????????4℅??????∟∼???????℅??????∟∼???????????
	BYTE		byRes2[60];
}NET_DVR_PLAN_CFG, *LPNET_DVR_PLAN_CFG;


/*******************************?????豕㊣?℅???*******************************/
/*?∟∼???㊣赤*/
typedef struct tagNET_DVR_PLAN_LIST
{
	DWORD        dwSize;
	DWORD        dwPlanNums;            //?豕㊣???????????????
	BYTE          *pBuffer;            //???辰dwInputSignalNums??NET_DVR_PLAN_CFG?芍???車??????????
	BYTE        byWallNo;            //????????1????
	BYTE        byRes1[2];
	DWORD         dwBufLen;            //?迄﹞??????????∟?????????????“?車??????dwInputSignalNums??NET_DVR_PLAN_CFG?芍???車????
	BYTE        byRes2[64];
} NET_DVR_PLAN_LIST, *LPNET_DVR_PLAN_LIST;


/*******************************?∟∼?????*******************************/
//???芍??????℅‾???“???????芍????
typedef struct tagNET_DVR_CONTROL_PARAM
{
	DWORD    dwSize;
	BYTE    sDeviceID[NAME_LEN]; //㊣????豕㊣????豕㊣?ID
	WORD    wChan;                 //㊣????“??
	BYTE    byIndex;             //?????‾?????迄???邦???﹞?“????㊣赤???????‾??
	BYTE    byRes1;
	DWORD    dwControlParam;
	BYTE    byMandatoryAlarm;    //1-????  0-??????
	BYTE      byRes2;
	WORD     wZoneIndex;            //﹞?????
	BYTE      byOperatorCode[16];   //??????
	DWORD	dwPlanNo; //4℅????∟∼????????∫??????????4℅??????∟∼???????℅??????∟∼???????????
	BYTE	byRes3[8];
}NET_DVR_CONTROL_PARAM, *LPNET_DVR_CONTROL_PARAM;

/*******************************?????豕㊣?℅???*******************************/
typedef struct tagNET_DVR_DEVICE_RUN_STATUS
{
	DWORD 	dwSize;
	DWORD   dwMemoryTotal;		    //????℅?????????Kbyte
	DWORD	dwMemoryUsage;		    //????????????????Kbyte
	BYTE	byCPUUsage;			    //CPU????????0-100
	BYTE    byMainFrameTemp;   	    //?迆????????????????????
	BYTE    byBackPanelTemp;    	//㊣?∼???????????????????
	BYTE    byRes1;
	BYTE    byLeftDecResource[32];	//?‾????∼????角????℅?????????D1﹞?㊣???℅???????????byLeftDecResource[i],㊣赤????????i????∼????角℅?????0xff㊣赤?????∫?“﹞?????∼??辰????∼?℅???
	float	fNetworkFlow; 		    //?????‾??????????KB/s???谷???????赤??㊣??????????車????
	BYTE	byRes2[88];
}NET_DVR_DEVICE_RUN_STATUS, *LPNET_DVR_DEVICE_RUN_STATUS;

// 91????HD-SDI????DVR ?角?迆????
typedef struct tagNET_DVR_ACCESS_CAMERA_INFO
{
	DWORD dwSize;
	char  sCameraInfo[32];        // ?∼???角?迆????
	BYTE  byInterfaceType;        // ?∼???????????角????1:VGA, 2:HDMI, 3:YPbPr 4:SDI 5:FC
	BYTE  byRes1[3];
	DWORD dwChannel;
	BYTE  byRes[24];
}NET_DVR_ACCESS_CAMERA_INFO, *LPNET_DVR_ACCESS_CAMERA_INFO;

typedef struct tagNET_DVR_AUDIO_INPUT_PARAM
{
	BYTE  byAudioInputType;  //?????????角????0-mic in??1-line in
	BYTE  byVolume; //volume,[0-100]
	BYTE  byEnableNoiseFilter; //??﹞??????迄??????-????-??
	BYTE  byres[5];
}NET_DVR_AUDIO_INPUT_PARAM, *LPNET_DVR_AUDIO_INPUT_PARAM;

typedef struct tagNET_DVR_CAMERA_DEHAZE_CFG
{
	DWORD dwSize;
	BYTE byDehazeMode; //0-????????1-℅?????????2-??
	BYTE byLevel; //??????0-100
	BYTE byRes[6];
}NET_DVR_CAMERA_DEHAZE_CFG, *LPNET_DVR_CAMERA_DEHAZE_CFG;

typedef struct tagNET_DVR_INPUT_SIGNAL_LIST
{
	DWORD        dwSize;
	DWORD        dwInputSignalNums;    //?豕㊣???????????????
	BYTE          *pBuffer;            //???辰dwInputSignalNums??NET_DVR_INPUTSTREAMCFG?芍???車??????????
	BYTE        byRes1[3];
	DWORD         dwBufLen;            //?迄﹞??????????∟?????????????“?車??????dwInputSignalNums??NET_DVR_INPUTSTREAMCFG?芍???車????
	BYTE        byRes2[64];
} NET_DVR_INPUT_SIGNAL_LIST, *LPNET_DVR_INPUT_SIGNAL_LIST;

// ∼???∼???℅???
#define PULL_DISK_SUCCESS        1   // ∼???∼???????
#define PULL_DISK_FAIL            2   // ∼???∼????∫∼?
#define PULL_DISK_PROCESSING    3   // ?????????車??
#define PULL_DISK_NO_ARRAY         4    // ?車???????? 
#define PULL_DISK_NOT_SUPPORT    5     // ???∫??∼???∼???

// ?“?豕?車??℅???
#define SCAN_RAID_SUC            1     // ?“?豕?車??????
#define SCAN_RAID_FAIL            2     // ?“?豕?車???∫∼?
#define SCAN_RAID_PROCESSING    3    // ?????“?豕?車??
#define SCAN_RAID_NOT_SUPPORT    4     // ???∫???車???“?豕

// ?豕???∼???角?迆?角??℅???
#define SET_CAMERA_TYPE_SUCCESS            1   // ????
#define SET_CAMERA_TYPE_FAIL            2   // ?∫∼?
#define SET_CAMERA_TYPE_PROCESSING        3   // ???????赤

//9000 2.2
typedef struct tagNET_DVR_RECORD_TIME_SPAN_INQUIRY
{
	DWORD    dwSize;    //?芍?????車??
	BYTE    byType;    //0 ??????????????, 1?????“??????, 2ANR?“??????, 3?谷???“??????
	BYTE     byRes[63]; //㊣???
}NET_DVR_RECORD_TIME_SPAN_INQUIRY, *LPNET_DVR_RECORD_TIME_SPAN_INQUIRY;

typedef struct tagNET_DVR_RECORD_TIME_SPAN
{
	DWORD          dwSize;        //?芍?????車??
	NET_DVR_TIME  strBeginTime;  //?????㊣??
	NET_DVR_TIME  strEndTime;    //?芍???㊣??
	BYTE          byType;        //0 ??????????????, 1?????“??????, 2ANR?“??????, 3?谷???“??????
	BYTE           byRes[35];     //㊣???
}NET_DVR_RECORD_TIME_SPAN, *LPNET_DVR_RECORD_TIME_SPAN;

typedef struct tagNET_DVR_DRAWFRAME_DISK_QUOTA_CFG
{
	DWORD    dwSize;                    //?芍?????車??
	BYTE     byPicQuota;                //????∼?﹞?㊣?     [0%,  30%]
	BYTE     byRecordQuota;                //???“????∼?﹞?㊣? [20%, 40%]
	BYTE     byDrawFrameRecordQuota;    //?谷??????∼?﹞?㊣? [30%, 80%]
	BYTE     byRes[61];                    //㊣???℅???
}NET_DVR_DRAWFRAME_DISK_QUOTA_CFG, *LPNET_DVR_DRAWFRAME_DISK_QUOTA_CFG;

typedef struct tagNET_DVR_NAT_PORT
{
	WORD wEnable;         //????????﹞?????????
	WORD wExtPort;        //????????????????
	BYTE byRes[12];       //㊣???
}NET_DVR_NAT_PORT, *LPNET_DVR_NAT_PORT;

typedef struct  tagNET_DVR_NAT_CFG
{
	DWORD dwSize;          //?芍?????車??
	WORD wEnableUpnp;     //UPNP??????﹞?????
	WORD wEnableNat;        //UPNP?????????“NAT????????﹞?????(㊣???????wEnableUpnp㊣???????)
	NET_DVR_IPADDR  struIpAddr;      //NAT?﹞???‾LAN IP???﹞
	NET_DVR_NAT_PORT    struHttpPort;   //web server http????????????
	NET_DVR_NAT_PORT    struCmdPort; //?邦??????????????(8000)
	NET_DVR_NAT_PORT    struRtspPort;  //rtsp????????????
	BYTE byFriendName[64]; //﹞?????
	BYTE byNatType; //UPNP?????????角????0-??????1-℅???
	BYTE            byRes1[3];    //㊣???
	NET_DVR_NAT_PORT    struHttpsPort;     //https????????????
	NET_DVR_NAT_PORT    struSDKOverTLSPort;  //SDKOverTLS????????????
	BYTE            byres[60];    //㊣???
}NET_DVR_NAT_CFG, *LPNET_DVR_NAT_CFG;

typedef struct
{
	DWORD  dwEnabled;               //????????﹞?㊣?????????
	WORD   wInternalPort;           //?????∼??????
	WORD   wExternalPort;           //?????車??????
	DWORD  dwStatus;                 /*????????℅???
									 0 ???迆?∫
									 1 ???迆?∫???????????????????????豕????
									 2 ???迆?∫:  ????????????㊣?????
									 3 ?迆?∫
									 */
	NET_DVR_IPADDR    struNatExternalIp;       //?????車?????????﹞
	NET_DVR_IPADDR    struNatInternalIp;       //NAT?﹞???‾LAN IP???﹞
	BYTE   byRes[16];               //㊣???
}NET_DVR_UPNP_PORT_STATE, *LPNET_DVR_UPNP_PORT_STATE;


typedef struct
{
	NET_DVR_UPNP_PORT_STATE strUpnpPort[UPNP_PORT_NUM];     //????????℅???,??℅谷0 web server???? ??℅谷1 ???赤???? ??℅谷2 rtsp????
	BYTE   byRes[200];              //㊣???
}NET_DVR_UPNP_NAT_STATE, *LPNET_DVR_UPNP_NAT_STATE;

typedef struct tagNET_DVR_PLAYCOND
{
	DWORD             dwChannel;
	NET_DVR_TIME     struStartTime;
	NET_DVR_TIME     struStopTime;
	BYTE             byDrawFrame;  //0:???谷????1???谷??
	BYTE             byStreamType; //???‾?角????0-?‾???‾ 1-℅????‾ 2-???‾??
	BYTE             byStreamID[STREAM_ID_LEN];
	BYTE             byCourseFile;    //????????0-﹞???1-??
	BYTE             byDownload;    //??﹞????? 0-﹞???1-??
	BYTE             byOptimalStreamType;    //??﹞?∼?℅??????‾?角????﹞? 0-﹞???1-???“?????????‾?豕㊣??????????㊣???????????????????“???‾?角?????????辰﹞??????????‾?角??????????
	BYTE             byRes[27];    //㊣???
}NET_DVR_PLAYCOND, *LPNET_DVR_PLAYCOND;

typedef struct tagNET_DVR_ATMFINDINFO
{
	BYTE    byTransactionType;       //???℅?角?? 0-??????1-?谷???? 2-?????? 3-?????? 4-??????????5-℅????? 6-???“?谷?? 7-???“?????? 8-???? 9-???“ 10-℅??“??
	BYTE    byRes[3];    //㊣???
	DWORD  dwTransationAmount;     //???℅???? ;
} NET_DVR_ATMFINDINFO, *LPNET_DVR_ATMFINDINFO;

typedef union  tagNET_DVR_SPECIAL_FINDINFO_UNION
{
	BYTE  byLenth[8];
	NET_DVR_ATMFINDINFO      struATMFindInfo;           //ATM?谷??
}NET_DVR_SPECIAL_FINDINFO_UNION, *LPNET_DVR_SPECIAL_FINDINFO_UNION;


typedef struct tagNET_DVR_FILECOND_V40
{
	LONG           lChannel;
	DWORD          dwFileType;/*?????“?????車?????角??0xff-??????0-?“?㊣??????1-?????足????2-㊣“????﹞???3-㊣“????﹞??辰?????足????4-㊣“????﹞????????足????5-?邦????﹞???6-??????????
							  7-??????????10-PIR㊣“????11-????㊣“????12-????㊣“????13-??????????14-???????“??????15-?????足????16-???辰??????17-?迄???足????18-???∼㊣??邦?足????19-?????足???“?????足??|???辰????|?????足??|?迄???足??|???∼㊣??邦?足??????
							  20-?????足???? 21-????????22-??????23-???“??????24-??????25-pos??????26-???????辰?足??, 27-???????辰?足??,28-?????足??,29-???㊣?????足??,30-?足???????足??,31-?????足??,32-???﹞?????足??,33-???﹞?????足??,
							  34-?????足????35-﹞??????足????36-?????足????37-?????∟??,38-????㊣“??,39-?辰???﹞??㊣“????40-???赤?足????41-?∫???足????42-????㊣“????43-????????㊣“??,44-﹞???㊣“????45-???㊣?車?迆,46-????℅???,47-???赤?足??,48-????????,49-???????㊣??50-㊣????足????51-?????足????52-????℅???, 53-﹞?﹞“∼???, 54-??㊣那??㊣?,
							  55-??????????56-?????足????57-??????58-????㊣?????59-????, 60-????,61-????,62-?迆??﹞?,63-㊣???,64-???﹞,65-?????足??,66-?﹞??,67-?℅?‾??,68-?“?赤?足??,69-???∟,70-????,71-???“?????足??, 72-?角﹞???????73-??????﹞?㊣“??
							  */
	DWORD          dwIsLocked;
	DWORD          dwUseCardNo;//??﹞???ATM?????????谷????0-????ATM??????1-∼????℅?“???谷????2-∼????℅?角???谷????3-∼????℅?????谷????4-∼??“???????℅?角???∼???℅??????℅谷???谷?? 5-∼??????????谷???????㊣?“??㊣赤??????????
	BYTE           sCardNumber[CARDNUM_LEN_OUT];
	NET_DVR_TIME   struStartTime;
	NET_DVR_TIME   struStopTime;
	BYTE           byDrawFrame; //0:???谷????1???谷??
	BYTE        byFindType; //0:?谷?????“?赤??1???谷???????赤
	BYTE        byQuickSearch; //0:???“?谷????1???足???“???迆???谷??
	BYTE        bySpecialFindInfoType;    //℅“???谷???????角?? 0-???∫?? 1-??ATM?谷??????  
	DWORD       dwVolumeNum;  //?????赤??
	BYTE        byWorkingDeviceGUID[GUID_LEN];    //?∟℅‾?迆GUID???“??????N+1????
	NET_DVR_SPECIAL_FINDINFO_UNION uSpecialFindInfo;   //℅“???谷??????
	BYTE        byStreamType;    //0-???????㊣??????﹞??????????????????????辰?????‾???‾??℅????‾???????‾??1-℅????‾??2-?????‾??3-?‾???‾??254-?????‾???‾(????﹞????‾???‾???????????‾???‾?????㊣﹞???℅????‾????)
	BYTE        byAudioFile;                //???????? 0-﹞???????????1-????????
	BYTE        byRes2[30];    //㊣???
}NET_DVR_FILECOND_V40, *LPNET_DVR_FILECOND_V40;

//?????????谷???????芍??V50
typedef struct tagNET_DVR_FILECOND_V50
{
	NET_DVR_STREAM_INFO struStreamID; //?‾ID?辰?“????
	NET_DVR_TIME_SEARCH_COND    struStartTime; //?????㊣??
	NET_DVR_TIME_SEARCH_COND    struStopTime; //?芍???㊣??
	BYTE  byFindType; //0-?谷?????“?赤??1-?谷???????赤 2-?谷??N+1????????
	BYTE  byDrawFrame; //??﹞??谷?? 0-???谷?? 1-?谷??
	BYTE  byQuickSearch; //0-???“?谷????1-?足???“???迆???谷??
	BYTE  byStreamType; //0-?‾???‾??1-℅????‾??2-3???‾??0xff-????
	DWORD  dwFileType; // ?????角??
	DWORD  dwVolumeNum; //?????赤????byFindType??1?㊣???∫
	BYTE  byIsLocked; //??﹞????“ 0-????????,1-???“????, 0xff㊣赤???迄??????
	BYTE  byNeedCard; //??﹞??豕???谷???“??0-???豕?? 1-?豕??
	BYTE  byOnlyAudioFile;        //???????? 0-???????? 1-????????
	BYTE  bySpecialFindInfoType; //0-???∫?? 1-??ATM?谷??????
	char  szCardNum[32];  //?“????byNeedCard??1?㊣???∫
	char    szWorkingDeviceGUID[16]; //?∟℅‾?迆GUID???“??????N+1??????byFindType??2?㊣???∫
	NET_DVR_SPECIAL_FINDINFO_UNION    uSpecialFindInfo; //℅“???谷????????????
	BYTE                              byRes[256];
}NET_DVR_FILECOND_V50, *LPNET_DVR_FILECOND_V50;

typedef struct
{
	BYTE    sAESKey[16];        /*???‾????????*/
	BYTE    byRes[64];          /*㊣???℅???*/
}NET_DVR_AES_KEY_INFO, *LPNET_DVR_AES_KEY_INFO;

typedef struct
{
	NET_DVR_IPADDR struIP;     //IP???﹞
	BYTE  byRes[128]; //㊣???
}NET_DVR_POE_CFG, *LPNET_DVR_POE_CFG;

#define MAX_PRO_PATH         256    //℅??車???谷?﹞???∟??

typedef struct
{
	DWORD dwSize;              //?芍?????車??
	DWORD dwEnabled;           //??﹞??????????谷0 ?????? 1 ????
	char  sProtocalName[DESC_LEN];   //℅??“?????谷????, 16??
	BYTE  byRes1[64];          //㊣???,???????谷????????
	DWORD dwEnableSubStream;   //℅????‾??﹞?????0 ?????? 1 ????

	BYTE  byMainProType;        //?‾???‾???谷?角?? 1 RTSP
	BYTE  byMainTransType;        //?‾???‾?????角?? 0??Auto 1??udp 2??rtp over rtsp
	WORD  wMainPort;           //?‾???‾????    
	char  sMainPath[MAX_PRO_PATH];  //?‾???‾?﹞??

	BYTE  bySubProType;         //℅????‾???谷?角?? 1 RTSP
	BYTE  bySubTransType;        //℅????‾?????角?? 0??Auto 1??udp 2??rtp over rtsp
	WORD  wSubPort;            //℅????‾????
	char  sSubPath[MAX_PRO_PATH];   //℅????‾?﹞?? 

	BYTE  byRes2[200];          //㊣???
}NET_DVR_CUSTOM_PROTOCAL, *LPNET_DVR_CUSTOM_PROTOCAL;


//B10???∫??PSIA?豕㊣?
//???﹞?????芍?????“???㊣??
typedef struct
{
	DWORD    dwEnable; /* ??﹞????? 0??﹞? 1??????*/
	BYTE    byType; //?豕㊣??角?? 0: DEV_SDK  1:DEV_DAHUA  2:DEV_EHOME    3:DEV_OTHERES
	BYTE    byRes[3];  //㊣???
	NET_DVR_STREAM_MEDIA_SERVER_CFG streamMediaServerCfg;
	NET_DVR_DEV_CHAN_INFO  struDevChanInfo; /* ?????????“?????? */
	BYTE    sRtspUrl[128];//?‾???﹞
}NET_DVR_MATRIX_CHAN_INFO_EX, *LPNET_DVR_MATRIX_CHAN_INFO_EX;

typedef struct
{
	DWORD    dwSize;
	DWORD    dwPoolTime;    /*????????*/
	NET_DVR_MATRIX_CHAN_INFO_EX        struchanConInfo[MAX_CYCLE_CHAN_V30];
	BYTE    byRes[16];
}NET_DVR_MATRIX_LOOP_DECINFO_EX, *LPNET_DVR_MATRIX_LOOP_DECINFO_EX;

//???㊣?∟???????芍????
typedef struct
{
	DWORD dwSize;
	BYTE byType; //?豕㊣??角?? 0: DEV_SDK  1:DEV_DAHUA  2:DEV_EHOME 3:DEV_OTHERES
	BYTE byRes[3]; //㊣???
	NET_DVR_STREAM_MEDIA_SERVER_CFG struStreamMediaSvrCfg;
	NET_DVR_DEV_CHAN_INFO struDevChanInfo;
	BYTE sRtspUrl[128];//?‾???﹞
}NET_DVR_PU_STREAM_CFG_EX, *LPNET_DVR_PU_STREAM_CFG_EX;

typedef struct tagNET_DVR_MATRIX_TRUNKCFG
{
	DWORD     dwGlobalIndex;  //?‾?邦
	DWORD     dwInterIndex;   //㊣???????㊣角??
	BYTE      sTrunkName[NAME_LEN];
	BYTE      byType;   //?豕㊣??角??1-bnc, 2-SP3, 3-V6
	BYTE      byDir;   //????﹞??辰 1-????2-????
	BYTE      byAbility;   //??????????D1????
	BYTE      bySubsys;   //℅?????ID
	BYTE      byChan;     //?“??ID
	BYTE      byRes[255];     //?∟??
} NET_DVR_MATRIX_TRUNKCFG, *LPNET_DVR_MATRIX_TRUNKCFG;

typedef struct tagNET_DVR_DECSUBSYSTEMJIONSTATUS_V41
{
	BYTE        byJoinStatus;//????℅?????0-??????????1-???????????“??????℅???????㊣?℅????????辰㊣?????℅???????????2-㊣???????byDecodeAbility?車??1?㊣???∫??3-㊣??車???‾????????4-㊣??車??℅???????
	BYTE        byJoinSubSystem;// ?迄?????辰??????℅???????????
	BYTE        byJoinDispNum;// ?迄?????辰???????????“????
	BYTE        byJoinSubWindowNum;// ?迄?????辰??????℅??∼????
	BYTE        byDecodeAbility;   //?????“?????㊣?∼??????????0-????????1-D1??2-720??3-1080
	BYTE        byRes[15];
}NET_DVR_DECSUBSYSTEMJIONSTATUS_V41, LPNET_DVR_DECSUBSYSTEMJIONSTATUS_V41;

typedef struct tagNET_DVR_SINGLESUBSYSTEMJOININFO_V41
{
	/*℅??????角????1-??????℅???????2-㊣角????℅???????3-????????℅???????4-????????℅???????5-??﹞??‾℅???????6-㊣“???‾?迆℅???????7-????℅???????8-V6????℅???????9-V6℅???????0-NULL?“????????????????*/
	BYTE    bySubSystemType;
	BYTE    byConnectStatus;//????????????℅?????1-??????????2-????????
	BYTE    byMatrixNum;//????????℅??????“????℅??????角????3?辰4?㊣????
	BYTE    bySubSystemNum;//????℅?????????????℅??????角????3?辰4?㊣????
	NET_DVR_DECSUBSYSTEMJIONSTATUS_V41 struSubSystem[MAX_DECODECHANNUM];
	BYTE    byBindStatus;//∼車?“℅?????0-????∼車?“??1-????∼車?“?“?車???????㊣??????
	BYTE    bySlotNum;//??????????????????????
	BYTE    byUsedTrunk;//??﹞?㊣???????????0-??㊣???????1-㊣?????
	BYTE    byRes[65];
}NET_DVR_SINGLESUBSYSTEMJOININFO_V41, LPNET_DVR_SINGLESUBSYSTEMJOININFO_V41;

typedef struct tagNET_DVR_ALLDECSUBSYSTEMJOININFO_V41
{
	DWORD dwSize;
	NET_DVR_SINGLESUBSYSTEMJOININFO_V41 struSingleSubSystemJoinInfo[MAX_SUBSYSTEM_NUM_V40];
	BYTE  byRes[48];
}NET_DVR_ALLDECSUBSYSTEMJOININFO_V41, *LPNET_DVR_ALLDECSUBSYSTEMJOININFO_V41;

//////////℅?????????/////////////
#define MAX_ALARMHOSTKEYBOARD 64 //????㊣“???‾?迆℅??車?邦????
typedef struct tagNET_DVR_PUBLIC_SUB_SYSTEM
{
	//????℅?????????∼???㊣赤????bit0㊣赤????????℅?????????℅?????1.
	DWORD    dwJointSubSystem;
	BYTE    byRes[16];
}NET_DVR_PUBLIC_SUB_SYSTEM, *LPNET_DVR_PUBLIC_SUB_SYSTEM;

typedef struct tagNET_DVR_NOAMAL_SUB_SYSTEM
{
	//㊣赤??㊣?????????℅???????????∼???㊣赤????bit0 ㊣赤??????℅?????.㊣???????????℅?????1
	DWORD    dwBeJoinedSubSystem;
	BYTE    byRes[16];
}NET_DVR_NOAMAL_SUB_SYSTEM, *LPNET_DVR_NOAMAL_SUB_SYSTEM;

typedef union tagNET_DVR_JOINT_SUB_SYSTEM
{
	// byPublicAttributeEnable??0?㊣??????㊣???
	NET_DVR_NOAMAL_SUB_SYSTEM     struNormalSubSystem;
	//byPublicAttributeEnable??1?㊣??????㊣???
	NET_DVR_PUBLIC_SUB_SYSTEM        struPublicSubSystem;
	BYTE    byRes[20];
}NET_DVR_JOINT_SUB_SYSTEM, *LPNET_DVR_JOINT_SUB_SYSTEM;

#define MAX_SUBSYSTEM_ID_LEN 16 //℅?????ID℅??車?∟??

//////////GPRS????????/////////////
#define    ACCOUNTNUM_LEN             6
#define ACCOUNTNUM_LEN_32             32
#define ACCOUNTNUM_LEN_V40      9
#define    APN_NAME_LEN            32
#define    APN_USERNAME_LEN        24
#define    APN_USERPASSWORD_LEN    16

typedef struct tagNET_DVR_ALARMSUBSYSTEMPARAM
{
	DWORD        dwSize;
	WORD        wEnterDelay;                    //???????㊣,????:??, ﹞??∫??10-150 ???﹞㊣“???‾?迆??℅??迆??㊣“???‾?迆?????㊣?㊣???? NET_DVR_ALARMIN_PARAM ????dwParam???豕?????㊣?㊣??
												//???????????豕??﹞????“????????????bySupportAlarmInDelay℅???????㊣?
	WORD        wExitDelay;//???????㊣,????:???? ﹞??∫10-300
	BYTE        byHostageReport;                //????㊣“????0???? 1????
	BYTE        bySubsystemEnable;                //℅?????????
	BYTE        byKeyToneOfArmOrDisarm;            // ????﹞??????﹞﹞?㊣“????﹞??邦???芍????0-?邦?????芍?? 1-?邦???????芍????
	BYTE        byKeyToneOfManualTestReport;    //????﹞???????㊣“????﹞??邦???芍????0-?邦?????芍?? 1-?邦???????芍????
	WORD        wDelayTime;                        //???????????㊣???㊣????????dwSupport1????bit0????1?㊣?????????????豕???????????㊣????bit0??0?㊣??????NET_DVR_SIREN_PARAM????wDelay?????豕???????????㊣??
	BYTE        byEnableAlarmInDelay;//0--??????(????℅????????㊣),1--????(????﹞??????㊣)????????????
	BYTE         byPublicAttributeEnable;        //??﹞???????℅?????
	NET_DVR_JOINT_SUB_SYSTEM struJointSubSystem;
	BYTE        byKeyZoneArm;                    //??﹞??∫?????℅﹞?????℅???????????﹞???℅‾
	BYTE        byKeyZoneArmReport;                //??﹞??∫?????℅﹞?????℅???????﹞??㊣﹞?????﹞?㊣“??
	BYTE        byKeyZoneDisarm;                //??﹞??∫?????℅﹞?????℅??????????﹞﹞???℅‾
	BYTE        byKeyZoneDisarmReport;            //??﹞??∫?????℅﹞?????℅??????????﹞﹞???℅‾?㊣﹞????﹞﹞?㊣“??
	BYTE        bySubSystemID[MAX_SUBSYSTEM_ID_LEN];    //℅?????ID
	BYTE        byKeyZoneArmReportEnable;    //???℅﹞?????????﹞?㊣“?????? 0-???? 1-????
	BYTE        byKeyZoneArmEnable;    //???℅﹞????????? 0 -???? 1-????
	BYTE        byOneKeySetupAlarmEnable;          //???邦??﹞?????
	BYTE        bySingleZoneSetupAlarmEnable;       //??﹞??????﹞﹞?????
	BYTE        byCenterType;                    //0-???∫, 1-????????(?∟??6),2-??????????????(?∟??9)
	BYTE        sCenterAccount[ACCOUNTNUM_LEN/*6*/];    //????????
	BYTE        sCenterAccountV40[ACCOUNTNUM_LEN_32/*32*/];    //????????V40,??????℅????㊣sCenterAccount???∫
	BYTE        byRes2[565];                    // ㊣???℅???
}NET_DVR_ALARMSUBSYSTEMPARAM, *LPNET_DVR_ALARMSUBSYSTEMPARAM;

typedef struct tagNET_DVR_REMIND_TIME//8
{
	BYTE byEnable;//??﹞?????㊣????芍?? 0-????????1-????
	BYTE byHour;//0~24
	BYTE byMinute;//0~60
	BYTE bySecond;//0~60
}NET_DVR_REMIND_TIME, *LPNET_DVR_REMIND_TIME;

//℅?????????????????
#define    MAX_KEYBOARD_USER_NUM    256
typedef struct tagNET_DVR_SUBSYSTEM_PARAM_EX
{
	DWORD     dwSize;
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS/*7*/][MAX_TIMESEGMENT_V30/*8*/]; //???﹞﹞??㊣??
	BYTE    byAlarmInAdvance;            // ???﹞﹞??芍?∼?芍???㊣??0~45﹞?
	BYTE    byRes1[3];
	BYTE     byJointAlarmIn[MAX_ALARMHOST_ALARMIN_NUM / 8];//∼?????㊣赤??℅???????????㊣“???????“??????0-????????1-????
	BYTE     byJointKeyboard[MAX_ALARMHOSTKEYBOARD/*64*/ / 8];//∼?????㊣赤???∫?????邦??????0-????????1-????
	BYTE    byJointOpetaterUser[MAX_KEYBOARD_USER_NUM / 8];//∼???㊣赤????bit0㊣赤???邦????℅‾???∫1 ??0-?????? 1-????
	NET_DVR_REMIND_TIME    struAlarmRemindTime[MAX_DAYS/*7*/][MAX_TIMESEGMENT_V30/*8*/];//MAX_TIMESEGMENT_V30㊣赤?????足℅??角?∫??8???芍??
	BYTE             byRes2[288];            // ㊣???℅???
}NET_DVR_SUBSYSTEM_PARAM_EX, *LPNET_DVR_SUBSYSTEM_PARAM_EX;


typedef struct tagNET_DVR_ALARMHOST_PRINTER_CFG
{
	DWORD     dwSize;
	BYTE     byPrinterEnable;        //??﹞??????辰???迆
	BYTE    byPrintTime;            //??﹞??辰???㊣??
	BYTE     byFaultDetect;            //??﹞??足???辰???迆????
	BYTE    byRes1;
	DWORD    dwAlarmInfo;            //㊣“????????∼???㊣赤????bit0-﹞???㊣“????bit1-﹞???㊣“????????bit2-???㊣㊣“????bit-3????㊣“??
	DWORD    dwDeviceInfo;            //?豕㊣???????∼???㊣赤????bit0-???‾????????bit1-???‾????????????bit2-???????﹞????bit3-???????﹞????????bit4-???∼????????bit5-???∼????????????bit6-????㊣“????bit7-﹞?????bit8-﹞?????????bit9-485?豕㊣???????bit10-485?豕㊣???????????bit11-?????????足????bit12-??????????????????bit13-?????????足????bit14-??????????????????bit15-????℅????足????bit17-????℅?????????????bit17-??????????bit18-??????????????bit19-?邦?????“
	DWORD    dwOperateInfo;            //??℅‾??????∼???㊣赤????bit0-??﹞???bit1-?﹞﹞???bit2-??????bit3-???﹞??bit4-???﹞??????bit5-????㊣角????bit6-????㊣角????bit7-?‾?迆????
	BYTE     byRes2[256];            // ㊣???℅???
}NET_DVR_ALARMHOST_PRINTER_CFG, *LPNET_DVR_ALARMHOST_PRINTER_CFG;

typedef struct tagNET_DVR_ALARMHOST_NETPARAM
{
	DWORD dwSize;
	NET_DVR_IPADDR struIP;
	WORD    wPort;
	BYTE    byAddressType;    //0 - ??????, 1 - ipv4/ipv6???﹞??2 - ?辰??
	BYTE    byRes1[1];
	BYTE    byDomainName[MAX_DOMAIN_NAME/*64*/]; //?辰????GPRS???????????????????????㊣??℅????迄???∫
	BYTE    byReportProtocol;        //1-private 2-NAL2300, 3-Ehome
	BYTE    byDevID[ACCOUNTNUM_LEN_32/*32*/]; //???谷??NAL2300?㊣???∫
	BYTE    byRes2[7]; //GPRS???辰?????????????“??﹞????‾???????????迄?????豕????????﹞????‾???????∟??????℅???
}NET_DVR_ALARMHOST_NETPARAM, *LPNET_DVR_ALARMHOST_NETPARAM;

typedef struct tagNET_DVR_REGISTER_RS485CFG
{
	DWORD   dwSize;                 // ?芍?????車??
	WORD    wDeviceProtocol;        // ?∼???豕㊣????谷 ?“?????????谷??㊣赤????    
	BYTE    byRes[2];
	DWORD   dwBaudRate;             //?“????(bps)??0-50??1-75??2-110??3-150??4-300??5-600??6-1200??7-2400??8-4800??9-9600??10-19200??11-38400??12-57600??13-76800??14-115.2k 
	BYTE    byRes1[124];              // ㊣???℅???
}NET_DVR_REGISTER_RS485CFG, *LPNET_DVR_REGISTER_RS485CFG;

typedef struct tagNET_DVR_ALARMHOST_WIRELESS_NETWORK_CFG
{
	DWORD    dwSize;
	NET_DVR_ALARMHOST_NETPARAM struNetCenter[MAX_CENTERNUM]; //???? GPRS?????角???????????? 
	BYTE     byAPNName[APN_NAME_LEN/*32*/];
	BYTE    byAPNUserName[APN_USERNAME_LEN/*24*/];
	BYTE    byAPNPassWord[APN_USERPASSWORD_LEN/*16*/];
	BYTE    byReconnTime;    //?????㊣?????????∫?∫?車???????????㊣????10????????,????﹞??∫1-30
	BYTE    byOverTime;        //???㊣?㊣????????OverTime?㊣?????????????∫?????辰??????﹞??∫1-254??????30??
	BYTE    byDetectLinkTime;    //    //???????﹞??﹞???㊣?????﹞??∫1-30??????10s
	BYTE    byRes1;
	BYTE    bySIMNum[NAME_LEN/*32*/]; //SIM?“???“???迆????
	NET_DVR_IPADDR    struSIMIP;      //?????????車??????﹞?????IP???﹞??????????
	BYTE    byRes2[64];
}NET_DVR_ALARMHOST_WIRELESS_NETWORK_CFG, *LPNET_DVR_ALARMHOST_WIRELESS_NETWORK_CFG;


//////////????????????/////////////
typedef struct tagNET_DVR_ALARMHOST_NETCFG
{
	DWORD dwSize;
	NET_DVR_ALARMHOST_NETPARAM     struNetCenter[MAX_CENTERNUM];
	BYTE    byRes1[32];
}NET_DVR_ALARMHOST_NETCFG, *LPNET_DVR_ALARMHOST_NETCFG;

//////////????????﹞???/////////////
#define    MAX_REPORTCHAN_NUM        4
#define    MAX_CENTERGROUP_NUM        16
typedef struct tagNET_DVR_ALARMHOST_REPORTCENTER_CFG
{
	DWORD    dwSize;
	BYTE    byValid;                //??﹞?????
	BYTE    byRes[3]; //㊣???1
	BYTE    byChanAlarmMode[MAX_REPORTCHAN_NUM/*4*/];    //????℅谷㊣“???“???? 1-T1??2-T2?? 3-N1?? 4-N2??5-G1?? 6-G2
	BYTE    byDealFailCenter[MAX_CENTERGROUP_NUM/*16*/]; //?辰???“????℅谷﹞????∫∼?㊣“????????℅谷??㊣那㊣赤????????????℅谷??0-????????1-????
	BYTE    byDataType;    //1-㊣“?????? 2-﹞?㊣“?????? 3-?迄??????
	BYTE    byRes2[15];    //㊣???2
}NET_DVR_ALARMHOST_REPORTCENTER_CFG, *LPNET_DVR_ALARMHOST_REPORTCENTER_CFG;

#define MAX_EVENT_NUM 32//????㊣“???‾?迆℅??車??????
typedef struct tagNET_DVR_ALARMHOST_REPORT_CENTER_CFG_V40
{
	DWORD        dwSize;
	BYTE        byValid;            //??﹞?????
	BYTE        byDataType;            //1-?迄??㊣“?????? 2-?迄??﹞?㊣“?????? 3-?迄????????4-﹞???㊣“??㊣“????5-﹞?﹞???㊣“??㊣“??
	BYTE        byRes[2];             //㊣???1
	BYTE        byChanAlarmMode[MAX_REPORTCHAN_NUM/*4*/];    //????℅谷㊣“???“???? 1-T1??2-T2?? 3-N1?? 4-N2??5-G1?? 6-G2??7-N3?? 8-N4(?????豕㊣??∫??3G??G1??G2㊣赤??3G???谷?????????∫????㊣赤??GPRS???谷???????豕㊣???3G???谷??GPRS???谷???芍????????)
	BYTE        byDealFailCenter[MAX_CENTERGROUP_NUM/*16*/]; //?辰???“????℅谷﹞????∫∼?㊣“????????℅谷??㊣那㊣赤????????????℅谷??0-????????1-????
	BYTE         byZoneReport[MAX_ALARMHOST_ALARMIN_NUM];    //﹞???㊣“???角????0-????????1-???? 
	BYTE        byNonZoneReport[MAX_EVENT_NUM]; //﹞?﹞???㊣“??㊣“??, ??????????㊣赤???????????角????0-????????1-??????byNonZoneReport[0]-?赤﹞???㊣“?? byNonZoneReport[1]-????℅???㊣“?? byNonZoneReport[2]-????㊣“?? byNonZoneReport[3]-????㊣“?? byNonZoneReport[4]-??﹞?㊣“?? byNonZoneReport[5]-?﹞﹞?㊣“?? byNonZoneReport[6]-????㊣“?? byNonZoneReport[7]-㊣“??????㊣“?? byNonZoneReport[8]-???﹞㊣“?? byNonZoneReport[9]-???﹞????㊣“????byNonZoneReport[10]-?????‾????℅???㊣“???“??????????????byNonZoneReport[11]-?????‾????℅???㊣“???“???????????﹞????byNonZoneReport[12]-????㊣“??㊣“??
	BYTE        byAlarmNetCard[MAX_REPORTCHAN_NUM/*4*/];    //????℅谷㊣“?????“??????0-?‾???“????1??1-?‾???“????2??2-???????“????1,3-???????“????2?“㊣“???“????N1??N2??N3??N4?㊣???∫??
	BYTE        byRes2[252];            //㊣???2
}NET_DVR_ALARMHOST_REPORT_CENTER_CFG_V40, *LPNET_DVR_ALARMHOST_REPORT_CENTER_CFG_V40;


//////////﹞??∟??℅???????/////////////
typedef  struct tagNET_DVR_ALARMHOST_SAFETYCABINSTATE
{
	DWORD    dwSize;
	BYTE    byEnterButton;    //????∼???℅??? 0-??∼??? 1-∼???∼???
	BYTE    byExitButton;    //????∼???℅??? 0-??∼??? 1-∼???∼???
	BYTE    byDoorState;    //??℅???    0-????㊣? 1-???辰??
	BYTE    byLockState;    //??℅??? 0-????    1-????
	BYTE    byUrgencyButton;    //???㊣∼???℅???    0-??∼??? 1-∼???∼???
	BYTE    byManState;        //??℅???     0-???? 1-????
	BYTE    byAbnormal; //?足??℅???  0-???? 1-?足??(﹞??∟?????????㊣?????足??)
	BYTE    byLightState;   //????℅??? 0-?? ??1-??
	BYTE    byFanState;     //﹞???℅??? 0-????1-??
	BYTE    byFollow;  //????????℅??? 0-????????1-??????
	BYTE    byFighting;  //?辰?﹞℅??? 0-???辰?﹞??1-???辰?﹞
	BYTE    byFaint;  //????℅??? 0-????????1-????????
	BYTE    byManyPerson;  //?角??℅??? 0-???角????????1-?角??????
	BYTE    byRes[59];  //㊣???
}NET_DVR_ALARMHOST_SAFETYCABINSTATE, *LPNET_DVR_ALARMHOST_SAFETYCABINSTATE;

/////////????????????????℅???????/////////////
typedef  struct tagNET_DVR_ALARMHOST_ALARMOUTSTATUS
{
	DWORD    dwSize;
	BYTE    byName[32];        //㊣“?????????????辰????????
	BYTE    byAlarmType;    //1-㊣“????????℅????? 2-????℅???
	WORD    wChan;            //??????㊣“????????℅???????????﹞??∫??0-511????????????℅?????﹞??∫1-8?“﹞??∟??????1????????????
	BYTE    byAlarmStatus; //㊣“??℅??? 0-??㊣“?? 1-??㊣“??
	BYTE    byRes[32];
}NET_DVR_ALARMHOST_ALARMOUTSTATUS, *LPNET_DVR_ALARMHOST_ALARMOUTSTATUS;

//////////????????????/////////////
typedef struct tagNET_DVR_AUDIO_PARAM
{
	DWORD        dwSize;
	BYTE        byAudioFormat;      //??????????1-G711??2-G722 
	BYTE        byRes1;
	WORD        wChannels;          // number of channels (i.e. mono, stereo...)
	DWORD        dwSamplesPerSec;    //???迄??
	BYTE        byRes2[20];            //㊣???
	DWORD        dwAudioSize;        //?????∟???車?????????車???車??
}NET_DVR_AUDIO_PARAM, *LPNET_DVR_AUDIO_PARAM;

//?∟??V40????
typedef struct tagNET_DVR_PREVIEWINFO
{
	LONG lChannel;//?“????
	DWORD dwStreamType;    // ???‾?角????0-?‾???‾??1-℅????‾??2-???‾3??3-???‾4, 4-???‾5,5-???‾6,7-???‾7,8-???‾8,9-???‾9,10-???‾10
	DWORD dwLinkMode;// 0??TCP﹞???,1??UDP﹞???,2???角??﹞???,3 - RTP﹞?????4-RTP/RTSP,5-RSTP/HTTP ,6- HRUDP?“?????????? ,7-RTSP/HTTPS
	HWND hPlayWnd;//??﹞??∼??????㊣迆,??NULL㊣赤??????﹞????車
	DWORD bBlocked;  //0-﹞?℅豕?????‾, 1-℅豕?????‾, ????℅豕??SDK????connect?∫∼????芍??5s?????㊣??????﹞???,???????????????‾??℅‾.
	DWORD bPassbackRecord; //0-??????????????,1????????????
	BYTE byPreviewMode;//?∟????????0-?????∟????1-?????∟??
	BYTE byStreamID[STREAM_ID_LEN/*32*/];//?‾ID??lChannel??0xffffffff?㊣??????????
	BYTE byProtoType; //?????????‾???谷??0-???????谷??1-RTSP???谷
	BYTE byRes1;
	BYTE byVideoCodingType; //???‾????㊣角?????角?? 0-?“??㊣角?????? 1-???????????‾?迆?迆???????????“?????????????????????“??????????????????????????????????????????
	DWORD dwDisplayBufNum; //??﹞?????﹞???????℅??車??????????﹞??∫1-50????0?㊣??????1 
	BYTE byNPQMode;	//NPQ???㊣???????????????‾???? 0-?㊣?? 1-???‾????
	BYTE byRes[215];
}NET_DVR_PREVIEWINFO, *LPNET_DVR_PREVIEWINFO;

//?????????豕㊣????‾
typedef struct tagNET_DVR_PREVIEWINFO_SPECIAL
{
	char sURL[1024];  //???‾URL??????/ISAPI/SDT/Management/Region/ID﹞????????‾URL????﹞??豕㊣?﹞?????URL????﹞“???豕?????????∫???????????????????∫??????????????℅?deviceUser??devicePassword????
					  //??????rtsp://admin:abcd12345@10.7.37.2:554/Streaming/Channels/101?transportmode=unicast
	DWORD dwLinkMode;// 0??TCP﹞???,1??UDP﹞???,2???角??﹞???,3 - RTP﹞?????4-RTP/RTSP,5-RSTP/HTTP 
	HWND hPlayWnd;//??﹞??∼??????㊣迆,??NULL㊣赤??????﹞????車
	DWORD bBlocked;  //0-﹞?℅豕?????‾, 1-℅豕?????‾, ????℅豕??SDK????connect?∫∼????芍??5s?????㊣??????﹞???,???????????????‾??℅‾.
	DWORD dwDisplayBufNum; //??﹞?????﹞???????℅??車??????????﹞??∫1-50????0?㊣??????1 
	BYTE byRes[64];
}NET_DVR_PREVIEWINFO_SPECIAL, *LPNET_DVR_PREVIEWINFO_SPECIAL;


//??????﹞?㊣“??????

typedef struct tagNET_DVR_TRIGGER_EVENT
{
	DWORD    dwSize;
	DWORD    dwOverallEventTriggerAlarmoutOn;    //??????????﹞?㊣“????????????∼????辰??bit0-???‾????????bit1-????????????bit2-???∼????????bit3-?????????足????bit4-?????????足?? ,bit5-????????, bit6-3G/4G?????足??, bit7-?“???谷??????????﹞??‾?迆???? ??bit8- WIFI?“????????bit9-RF????????????
	DWORD    dwOverallEventTriggerAlarmoutOff;    //??????????﹞?㊣“????????????∼????辰??bit0-???‾????????bit1-????????????bit2-???∼????????bit3-?????????足????bit4-?????????足?? ,bit5-????????, bit6-3G/4G?????足??, bit7-?“???谷??????????﹞??‾?迆???? ??bit8- WIFI?“????????bit9-RF????????????
	DWORD    dwSubSystemEventTriggerAlarmoutOn[MAX_ALARMHOST_SUBSYSTEM/*32*/]; //℅???????????﹞?㊣“??????????,dwSubSystemEvent[0]㊣赤??℅?????1??dwSubSystemEvent[2]㊣赤??℅?????2????????℅??????????????????????“wSubSystem????????℅???????????∼???㊣赤????bit0-???????㊣??bit1-???????㊣??bit2-??﹞???bit3-?﹞﹞???bit4-㊣“????bit5-????㊣“??????,bit6-㊣“??????,bit7-﹞???﹞???,bit8-﹞???﹞???????
	DWORD    dwSubSystemEventTriggerAlarmoutOff[MAX_ALARMHOST_SUBSYSTEM/*32*/]; //℅???????????﹞?㊣“????????㊣?,wSubSystemEvent[0]㊣赤??℅?????1??dwSubSystemEvent[2]㊣赤??℅?????2????????℅??????????????????????“wSubSystem????????℅???????????∼???㊣赤????bit0-???????㊣??bit1-???????㊣??bit2-??﹞???bit3-?﹞﹞???bit4-㊣“????bit5-????㊣“??????,bit6-㊣“??????,bit7-﹞???﹞???,bit8-﹞???﹞???????
	BYTE    byRes[128];
}NET_DVR_TRIGGER_EVENT, *LPNET_DVR_TRIGGER_EVENT;

//???????赤????
typedef struct  tagNET_DVR_ALARMHOST_FAULT_CFG
{
	DWORD     dwSize;
	DWORD    dwCheckFault;    //??﹞??足????????bit0-???‾????????bit1-???????﹞????bit2-?‾?迆﹞???????bit3-???∼????????bit4-485?豕㊣??足????bit5-??????????bit6-?????足????bit7-????℅????足????bit8-?????足????bit9- FPGA??????bit10- ??????????, bit11-﹞???????∼??足????bit12-WIFI?“????????bit13-RF???????????????????∫?????????角??????????????
	DWORD    dwOverallFaultJointLED;        //?????????????邦???????????? bit0-???‾????????bit1-???????﹞????bit2-?‾?迆﹞???????bit3-???∼????????bit4-485?豕㊣??足????bit5-??????????bit6-?????足????bit7-????℅????足????bit8-?????足?????????∫?????????角??????????????
	DWORD    dwOverallFaultJointSound;    //?????????????邦???迄?????? bit0-???‾????????bit1-???????﹞????bit2-?‾?迆﹞???????bit3-???∼????????bit4-485?豕㊣??足????bit5-??????????bit6-?????足????bit7-????℅????足????bit8-?????足?????????∫?????????角??????????????
	DWORD    dwSubSystemFaultJointLED[MAX_ALARMHOST_SUBSYSTEM]; /*????????℅??????邦??????????????dwSubSystemFaultJointLED[0]㊣赤??℅?????1????????????dwSubSystemFaultJointLED[0]????????㊣赤????????????bit0-???‾????????bit1-???????﹞????bit2-?‾?迆﹞???????bit3-???∼????????bit4-485?豕㊣??足????bit5-??????????bit6-?????足????bit7-????℅????足????bit8-?????足??; dwSubSystemFaultJointLED[1]㊣赤??℅?????2???????角??*/
	DWORD    dwSubSystemFaultJointSound[MAX_ALARMHOST_SUBSYSTEM];/*????????℅??????邦???迄???????“?迄?????邦??????????dwSubSystemFaultJointLED[0]㊣赤??℅?????1????????????dwSubSystemFaultJointSound [0]????????㊣赤????????????bit0-???‾????????bit1-???????﹞????bit2-?‾?迆﹞???????bit3-???∼????????bit4-485?豕㊣??足????bit5-??????????bit6-?????足????bit7-????℅????足????bit8-?????足??; dwSubSystemFaultJointSound [1]㊣赤??℅?????2???????角??*/
	DWORD    dwFaultJointFaultLight;//??????????????????
	BYTE    byRes[60];
}NET_DVR_ALARMHOST_FAULT_CFG, *LPNET_DVR_ALARMHOST_FAULT_CFG;

typedef struct tagNET_DVR_LIST_INFO
{
	DWORD    dwSize;
	BYTE    byIndex;            //℅?????????0xff㊣赤???迄??℅?????
	BYTE       byRes[63];      //㊣???
}NET_DVR_LIST_INFO, *LPNET_DVR_LIST_INFO;

#define CID_CODE_LEN 4
#define DEV_SERIAL_LEN 9
typedef enum tagNET_DVR_ALARMHOST_REPORT_TYPE
{
	NET_DVR_DEFENCE_ALARM = 1,        //﹞???㊣“??
	NET_DVR_VIDEO_ALARM,            //????㊣“??
	NET_DVR_VIRTUAL_DEFENCE_ALARM,    //?赤﹞???㊣“??
	NET_DVR_HOSTAGE_ALARM,            //????㊣“??
	NET_DVR_KNOCK_DOWN_ALARM,        //﹞???㊣“??
	NET_DVR_OPERATE_ALARM,            //??℅‾㊣“??
	NET_DVR_OHTER_ABNORMAL_ALARM    //?足??㊣“??
}NET_DVR_ALARMHOST_REPORT_TYPE;


typedef enum tagNET_DVR_ALARMHOST_CID_MAIN_TYPE
{
	CID_ENTER = 1000,    /*??﹞?㊣“?????迄??*/
	CID_EXIT = 3000        /*????㊣“?????迄??*/
}NET_DVR_ALARMHOST_CID_MAIN_TYPE;


typedef enum tagNET_DVR_ALARMHOST_CID_MINOR_TYPE
{
	CID_MEDICAL_ALARM = 100,                /*???∟㊣“??*/
	CID_ALARM = 103,                        /*㊣“??*/
	CID_FIRE_ALARM = 110,                   /*????*/
	CID_ABDUCT_REPORT = 121,                /*????㊣“??*/
	CID_SILENT_24 = 122,                    /*24???㊣???迄*/
	CID_AUDIO_24 = 123,                     /*24???㊣???迄*/
	CID_AUXILIARY_24 = 124,                 /*24???㊣?“?迆*/
	CID_SHOCK_24 = 125,                     /*24???㊣????*/
	CID_OVERTIME_ALARM = 126,               /*???㊣㊣“??*/
	CID_EMERGENCE_CALL_HELP = 129,          /*???㊣㊣“???車?迆*/
	CID_BURGLARY_ALARM = 130,               /*????㊣“??*/
	CID_PERIMETER_ALARM = 131,              /*????*/
	CID_INNET_ALARM = 132,                  /*????﹞???*/
	CID_ENTER_EXIT = 134,                   /*????*/
	CID_DEVICE_OPEN = 137,                  /*?豕㊣?﹞???*/
	CID_ZONE_BUS_BREAK = 141,               /*℅??????﹞*/
	CID_ZONE_BUS_SHORT = 142,               /*℅??????﹞*/
	CID_MOTION_ALARM = 148,                 /*????㊣“??*/
	CID_GAS_LEAKAGE = 151,                  /*????????*/
	CID_ZONE_EARLY_WARNING = 207,           /*﹞????∟??*/
	CID_AC_LOSS = 301,                      /*???‾????*/
	CID_LOW_BATT_VOL = 302,                 /*????????????*/
	CID_DEV_RESET = 305,                    /*?‾?迆????*/
	CID_MBUS_MODEL_FAULT = 333,             /*???????谷????*/
	CID_PRINTER_FAIL = 336,                 /*?辰???迆????*/
	CID_LOW_EXPANDER_VOL = 338,             /*???????谷??????*/
	CID_EXPANDER_OPEN = 341,                /*???????谷㊣???*/
	CID_EXPANDER_AC_POWER_DOWN = 342,       /*???????谷???‾??????*/
	CID_WIRELESS_REPEATER_TAMPERED = 343,   /*?????????‾﹞?????﹞?*/
	CID_WIRELESS_SIREN_TAMPERED = 344,      /*????????﹞?????﹞?*/
	CID_WIRELESS_SIREN_DISCONNECTED = 345,  /*????????????*/
	CID_LINE_LOSS = 354,                    /*???∼???“???∫∼?*/
	CID_BUS_LOSS = 382,                     /*????℅??????谷????*/
	CID_DETECTOR_OPEN = 383,                /*﹞????????‾㊣???*/
	CID_ZONE_OPEN_CIRCUIT = 386,            /*﹞??????﹞?芍??*/
	CID_ZONE_SHORT_CIRCUIT = 387,           /*﹞??????﹞?芍??*/
	CID_GUARD = 401,                        /*??﹞??﹞﹞?*/
	CID_GUARD_AUTO = 403,                   /*℅??????﹞﹞?*/
	CID_CANCEL_ARM = 406,                   /*????*/
	CID_GUARD_IMME = 408,                   /*???㊣???﹞﹞?*/
	CID_KEY_ZONE_GUARD = 409,               /*???℅﹞??????﹞﹞?*/
	CID_GUARD_STAY = 441,                   /*???????﹞﹞?*/
	CID_FORCED_ARM = 442,                   /*??????﹞?*/
	CID_AUTOCTRL_TRIG = 443,                /*?“?㊣??/????﹞??‾*/
	CID_ONETOUCH_AWAY_ARMING = 444,         /*???邦??????﹞?*/
	CID_ONETOUCH_STAY_ARMING = 445,         /*???邦??????﹞?*/
	CID_CARD_ARMING_OR_DISARMING = 446,     /*???“???﹞﹞?*/
	CID_LATE_TO_DISARM = 452,               /*?????﹞﹞?*/
	CID_AUTOGUARD_FAIL = 455,               /*℅?????﹞??∫∼?*/
	CID_AOPEN_TRIG_FAIL = 460,              /*?“?㊣??????﹞??‾?∫∼?*/
	CID_ACLOSE_TRIG_FAIL = 461,             /*?“?㊣??㊣???﹞??‾?∫∼?*/
	CID_AUTOUNGUARD_FAIL = 462,             /*℅????﹞﹞??∫∼?*/
	CID_BYPASS = 570,                       /*???﹞????*/
	CID_GROUP_BYPASS = 574,                 /*℅谷???﹞*/
	CID_MANUAL_TEST_RPT = 601,              /*????????㊣“??*/
	CID_AUTO_TEST_RPT = 602,                /*?“?㊣????㊣“??*/
	CID_PHONE_CONNET_TEST = 617,            /*???∼???﹞????*/
	CID_ENTER_PROG = 627,                   /*????㊣角??*/
	CID_EXIT_PROG = 628,                    /*????㊣角??*/
	CID_FIELD_DETECTION = 759,              /*???辰????*/
	CID_LINE_DETECTION = 773,               /*????㊣“??*/
	CID_PIR_ALARM = 774,                    /*PIR㊣“??*/
	CID_SOUND_INTENSITY_RISE = 775,         /*?迄??????㊣“??*/
	CID_SOUND_INTENSITY_DROP = 776,         /*?迄??????㊣“??*/
	CID_AUDIO_INPUT_EXCEPTION = 777,        /*?????????足??㊣“??*/
	CID_SOFT_INSTAND = 810,                 /*?赤﹞??????㊣㊣“??*/
	CID_SOFT_FIRE = 811,                    /*?赤﹞???????*/
	CID_SOFT_MOBS = 812,                    /*?赤﹞???﹞???mobster*/
	CID_KEYPAD_LOCKED = 862,                /*?邦?????“*/
	CID_ABSENCE_ALARM = 863,                /*????????*/
	CID_KEY_FAIL = 910,                     /*?邦??????*/
	CID_TRIGGER_FAIL = 911,                 /*?邦??℅???????﹞??‾????*/
	CID_GPK_FAIL = 912,                     /*?邦??℅?????GP/K????*/
	CID_MODULE_FAIL = 913,                  /*?邦??℅?????MN/K????*/
	CID_WIRELESS_DETECTOR_FAIL = 914,       /*?????????‾????*/
	CID_WIRELESS_DETECTOR_BATTERY_LOW = 915,/*?????????‾?﹞??/????????????*/
	CID_EXPANDER_DISCONNECT = 916,          /*???????谷????*/
	CID_WIRELESS_REPEATER_DISCONNECT = 917, /*?????????‾????*/
	CID_RADAR_TRANS_FAULT = 918,            /*?℅???????足??*/
	CID_WIRELESS_SIREN_LOW_BATTERY = 919,   /*??????????????*/
	CID_WRIE_LESS_NET = 920,                /*????????????*/
	CID_SIM_FAULT = 921,                    /*SIM?“????*/
	CID_WIFI_ABNORMAL = 922,                /*WIFI?“???足??/????????*/
	CID_RF_ABNORMAL = 923,                  /*RF?????足??/????????*/
	CID_DATE_TRAFFIC_OVERFLOW = 924,        /*?‾??????*/
	CID_IPADDR_CONFLICT = 930,              /*IP????*/
	CID_ETHERNET_BROKEN = 931,              /*??????*/
	CID_GROUP_OUT_RP = 932,                 /*℅谷???“???∫∼?*/
	CID_GROUP_IN_RP = 933,                  /*?“???“???∫∼?*/
	CID_MOTION_DECTECT = 940,               /*?????足??㊣“??????/?芍??*/
	CID_MASK_ALARM = 941,                   /*????㊣“??????/?芍??*/
	CID_VI_LOST = 942,                      /*???????∫????/?芍??*/
	CID_VS_MISMATCH = 943,                  /*????/??????????????????*/
	CID_VI_EXCEPTION = 944,                 /*?????????足??/????????*/
	CID_HD_FULL = 945,                      /*?????迆/????????*/
	CID_HD_ERROR = 946,                     /*?????赤/????????*/
	CID_PIC_SEND_FAILED = 947,              /*?????????∫∼?*/
	CID_KEY_LOCKED = 948,                   /*?邦?????“*/
	CID_NETWORK_CAMERA_DISCONNECT = 949,    /*IPC????????*/
	CID_DUTY_CHECKING = 960,                /*?????谷??*/
	CID_POST_RESPONSE = 961,                /*????????*/
	CID_ZONE_BUS_SEARCH = 970,              /*℅??????‾*/
	CID_ZONE_BUS_REGIST = 971,              /*℅???℅??芍*/
	CID_GUARD_DELAY_OP = 972,               /*℅??????﹞﹞????㊣??℅‾*/
	CID_GUARD_SINGLE = 973,                 /*??﹞??????﹞﹞?*/
	CID_SINGLE_ZONE_CLEARED = 974,          /*??﹞???????*/
	CID_ZONE_ASSOCIATED_DETECTOR = 975,     /*﹞????赤??/?????????‾*/
	CID_ZONE_CONSULTING = 976,              /*????℅???*/
	CID_EXPANDER_DELETED = 977,             /*???????????谷*/
	CID_WIRELESS_REPEATER_DELETED = 978,    /*?????????????‾*/
	CID_WIRELESS_SIREN_DELETED = 979,       /*????????????*/
}NET_DVR_ALARMHOST_CID_MINOR_TYPE;

typedef enum tagNET_DVR_ALARMHOST_CID_ALL_MINOR_TYPE
{
	CID_TYPE_MEDICAL_ALARM = 1100,                      /*???????∟㊣“??*/
	CID_TYPE_MEDICAL_ALARM_RESET = 3100,                /*???????∟㊣“??????*/
	CID_TYPE_ALARM = 1103,                              /*???㊣㊣“??*/
	CID_TYPE_ALARM_RESET = 3103,                        /*???㊣㊣“??????*/
	CID_TYPE_FIRE_ALARM = 1110,                         /*????㊣“??*/
	CID_TYPE_FIRE_ALARM_RESET = 3110,                   /*????㊣“??????*/
	CID_TYPE_ABDUCT_REPORT = 1121,                      /*????㊣“??*/
	CID_TYPE_SILENT_24 = 1122,                          /*24???㊣???迄㊣“??*/
	CID_TYPE_SILENT_24_RESET = 3122,                    /*24???㊣???迄㊣“??????*/
	CID_TYPE_AUDIO_24 = 1123,                           /*24???㊣???迄㊣“??*/
	CID_TYPE_AUDIO_24_RESET = 3123,                     /*24???㊣???迄㊣“??????*/
	CID_TYPE_AUXILIARY_24 = 1124,                       /*24???㊣?“?迆㊣“??*/
	CID_TYPE_AUXILIARY_24_RESET = 3124,                 /*24???㊣?“?迆㊣“??????*/
	CID_TYPE_SHOCK_24 = 1125,                           /*24???㊣????㊣“??*/
	CID_TYPE_SHOCK_24_RESET = 3125,                     /*24???㊣????㊣“??????*/
	CID_TYPE_TIMEOUT = 1126,                            /*???㊣㊣“??*/
	CID_TYPE_TIMEOUT_RESET = 3126,                      /*???㊣㊣“??????*/
	CID_TYPE_EMERGENCE_CALL_HELP = 1129,                /*???㊣?車?迆㊣“??*/
	CID_TYPE_EMERGENCE_CALL_HELP_RESET = 3129,          /*???㊣?車?迆㊣“??????*/
	CID_TYPE_BURGLARY_ALARM = 1130,                     /*????㊣“??*/
	CID_TYPE_BURGLARY_ALARM_RESET = 3130,               /*????㊣“??????*/
	CID_TYPE_PERIMETER_ALARM = 1131,                    /*????㊣“??*/
	CID_TYPE_PERIMETER_ALARM_RESET = 3131,              /*????㊣“??????*/
	CID_TYPE_INNET_ALARM = 1132,                        /*???????㊣㊣“??*/
	CID_TYPE_INNET_ALARM_RESET = 3132,                  /*???????㊣㊣“??????*/
	CID_TYPE_ENTER_EXIT = 1134,                         /*???㊣㊣“??*/
	CID_TYPE_ENTER_EXIT_RESET = 3134,                   /*???㊣㊣“??????*/
	CID_TYPE_DEVICE_OPEN = 1137,                        /*?豕㊣?﹞???㊣“??*/
	CID_TYPE_DEVICE_OPEN_RESET = 3137,                  /*?豕㊣?﹞???㊣“??????*/
	CID_TYPE_ZONE_BUS_BREAK = 1141,                     /*℅??????﹞㊣“??*/
	CID_TYPE_ZONE_BUS_BREAK_RESET = 3141,               /*℅??????﹞㊣“??????*/
	CID_TYPE_ZONE_BUS_SHORT = 1142,                     /*℅??????﹞㊣“??*/
	CID_TYPE_ZONE_BUS_SHORT_RESET = 3142,               /*℅??????﹞㊣“??????*/
	CID_TYPE_MOTION_ALARM = 1148,                       /*?豕㊣?????㊣“??*/
	CID_TYPE_MOTION_ALARM_RESET = 3148,                 /*?豕㊣?????㊣“??????*/
	CID_TYPE_GAS_LEAKAGE_ALARM = 1151,                  /*????????㊣“??*/
	CID_TYPE_GAS_LEAKAGE_ALARM_RESET = 3151,            /*????????㊣“??????*/
	CID_TYPE_ZONE_EARLY_WARNING = 1207,                 /*﹞????∟??*/
	CID_TYPE_ZONE_EARLY_WARNING_RESET = 3207,           /*﹞????∟??????*/
	CID_TYPE_AC_LOSS = 1301,                            /*???‾??????*/
	CID_TYPE_AC_LOSS_RESET = 3301,                      /*???‾??????*/
	CID_TYPE_LOW_BATT_VOL = 1302,                       /*????????????*/
	CID_TYPE_LOW_BATT_VOL_NORMAL = 3302,                /*??????????????*/
	CID_TYPE_DEV_RESET = 1305,                          /*?‾?迆????*/
	CID_TYPE_MBUS_MODEL_FAULT = 1333,                   /*???????谷????*/
	CID_TYPE_MBUS_MODEL_RESET = 3333,                   /*???????谷????*/
	CID_TYPE_PRINTER_OFF = 1336,                        /*?辰???迆????*/
	CID_TYPE_PRINTER_ON = 3336,                         /*?辰???迆????*/
	CID_TYPE_EXTEND_MODULE_VOL_LOW = 1338,              /*???????谷??????*/
	CID_TYPE_EXTEND_MODULE_VOL_NORMAL = 3338,           /*???????谷????????*/
	CID_TYPE_EXTEND_MODULE_REMOVE = 1341,               /*???????谷﹞?????﹞?*/
	CID_TYPE_EXTEND_MODULE_RECOVER = 3341,              /*???????谷﹞???????*/
	CID_TYPE_EXTEND_MODULE_AC_LOSS = 1342,              /*???????谷???‾??????*/
	CID_TYPE_EXTEND_MODULE_AC_LOSS_RESET = 3342,        /*???????谷???‾??????*/
	CID_TYPE_WIRELESS_REPEATER_TAMPER = 1343,           /*?????????‾﹞?????﹞?*/
	CID_TYPE_WIRELESS_REPEATER_RESTORE = 3343,          /*?????????‾﹞???????*/
	CID_TYPE_WIRELESS_SIREN_TAMPER = 1344,              /*????????﹞?????﹞?*/
	CID_TYPE_WIRELESS_SIREN_RESTORE = 3344,             /*????????﹞???????*/
	CID_TYPE_WIRELESS_SIREN_DISCONNECT = 1345,          /*????????????*/
	CID_TYPE_WIRELESS_SIREN_CONNECT = 3345,             /*????????????????*/
	CID_TYPE_LINE_LOSS = 1354,                          /*???∼??????*/
	CID_TYPE_LINE_LOSS_RESET = 3354,                    /*???∼??????*/
	CID_TYPE_BUS_LOSS = 1382, 	                        /*????℅??????谷????*/
	CID_TYPE_BUS_LOSS_RESET = 3382, 	                /*????℅??????谷????????*/
	CID_TYPE_SENSOR_TAMPER = 1383, 	                    /*﹞????????‾﹞???*/
	CID_TYPE_SENSOR_TAMPER_RESET = 3383, 	            /*﹞????????‾﹞???????*/
	CID_TYPE_ZONE_OPEN_CIRCUIT_ALARM = 1386,            /*﹞??????﹞?芍??*/
	CID_TYPE_ZONE_SHORT_CIRCUIT_ALARM = 1387,           /*﹞??????﹞?芍??*/
	CID_TYPE_DISARM = 1401,                             /*?﹞﹞?*/
	CID_TYPE_ARM = 3401,                                /*??????﹞?*/
	CID_TYPE_DISARM_AUTO = 1403,                        /*℅????﹞﹞?*/
	CID_TYPE_ARM_AUTO = 3403,                           /*℅?????﹞?*/
	CID_TYPE_CANCEL_ARM = 1406,                         /*????*/
	CID_TYPE_ARM_IMME = 3408,                           /*???㊣??﹞?*/
	CID_TYPE_KEY_ZONE_ARM = 1409,                       /*???℅﹞????﹞﹞?*/
	CID_TYPE_KEY_ZONE_DISARM = 3409,                    /*???℅﹞?????﹞?*/
	CID_TYPE_GUARD_STAY = 3441,                         /*??????﹞?*/
	CID_TYPE_FORCED_ARM = 3442,                         /*??????﹞?*/
	CID_TYPE_AUTOCTRL_TRIG_ON = 1443,                   /*?“?㊣????﹞??‾*/
	CID_TYPE_AUTOCTRL_TRIG_OFF = 3443,                  /*?“?㊣????﹞??‾*/
	CID_TYPE_LATE_TO_DISARM = 1452,                     /*?????﹞﹞?*/
	CID_TYPE_AUTOGUARD_FAIL = 1455,                     /*℅??????﹞﹞??∫∼?*/
	CID_TYPE_AOPEN_TRIG_FAIL = 1460,                    /*?“?㊣??????﹞??‾?∫∼?*/
	CID_TYPE_ACLOSE_TRIG_FAIL = 1461,                   /*?“?㊣??㊣???﹞??‾?∫∼?*/
	CID_TYPE_AUTOUNGUARD_FAIL = 1462,                   /*℅????﹞﹞??∫∼?*/
	CID_TYPE_BYPASS = 1570,                             /*???﹞*/
	CID_TYPE_BYPASS_RESET = 3570,                       /*???﹞????*/
	CID_TYPE_GROUP_BYPASS = 1574,                       /*℅?????℅谷???﹞*/
	CID_TYPE_GROUP_BYPASS_RESET = 3574,                 /*℅?????℅谷???﹞????*/
	CID_TYPE_MANUAL_TEST_RPT = 1601,                    /*????????㊣“??*/
	CID_TYPE_AUTO_TEST_RPT = 1602,                      /*?“?㊣????㊣“??*/
	CID_TYPE_LINE_TEST = 1617,                          /*???∼???﹞????*/
	CID_TYPE_ENTER_PROG = 1627,                         /*????㊣角??*/
	CID_TYPE_EXIT_PROG = 1628,                          /*????㊣角??*/
	CID_TYPE_FIELD_DETECTION = 1759,                    /*???辰????*/
	CID_TYPE_FIELD_DETECTION_RESET = 3759,              /*???辰????????*/
	CID_TYPE_LINE_DETECTION = 1773,                     /*????㊣“??*/
	CID_TYPE_LINE_DETECTION_RESET = 3773,               /*????㊣“??????*/
	CID_TYPE_PIR_ALARM = 1774,                          /*PIR㊣“??*/
	CID_TYPE_PIR_ALARM_RESET = 3774,                    /*PIR㊣“??????*/
	CID_TYPE_SOUND_INTENSITY_RISE = 1775,               /*?迄??????㊣“??*/
	CID_TYPE_SOUND_INTENSITY_RISE_RESET = 3775,         /*?迄??????㊣“??????*/
	CID_TYPE_SOUND_INTENSITY_DROP = 1776,               /*?迄??????㊣“??*/
	CID_TYPE_SOUND_INTENSITY_DROP_RESET = 3776,         /*?迄??????㊣“??????*/
	CID_TYPE_AUDIO_INPUT_EXCEPTION = 1777,              /*?????????足??㊣“??*/
	CID_TYPE_AUDIO_INPUT_EXCEPTION_RESET = 3777,        /*?????????足??㊣“??????*/
	CID_TYPE_SOFT_INSTAND = 1810,                       /*?赤﹞??????㊣㊣“??*/
	CID_TYPE_SOFT_FIRE = 1811,                          /*?赤﹞???????*/
	CID_TYPE_SOFT_MOBS = 1812,                          /*?赤﹞???﹞???*/
	CID_TYPE_KEYPAD_LOCK = 1862,                        /*?邦?????“*/
	CID_TYPE_KEYPAD_UNLOCK = 3862,                      /*?邦??????*/
	CID_TYPE_ABSENCE_ALARM = 1863,                      /*????????*/
	CID_TYPE_KEY_FAIL = 1910,                           /*?邦??????*/
	CID_TYPE_KEY_RESET = 3910,                          /*?邦??????*/
	CID_TYPE_TRIGGER_FAIL = 1911,                       /*?邦??℅???????﹞??‾????*/
	CID_TYPE_TRIGGER_RESET = 3911,                      /*?邦??℅???????﹞??‾????*/
	CID_TYPE_GPK_FAIL = 1912,                           /*?邦??℅?????GP/K????*/
	CID_TYPE_GPK_RESET = 3912,                          /*?邦??℅?????GP/K????*/
	CID_TYPE_MODULE_FAIL = 1913,                        /*?邦??℅?????MN/K????*/
	CID_TYPE_MODULE_RESET = 3913,                       /*?邦??℅?????MN/K????*/
	CID_TYPE_WIRELESS_DETECTOR_FAIL = 1914,             /*?????????‾????*/
	CID_TYPE_WIRELESS_DETECTOR_RESET = 3914,            /*?????????‾????????*/
	CID_TYPE_WIRELESS_DETECTOR_BATTERY_LOW = 1915,      /*?????????‾??????*/
	CID_TYPE_WIRELESS_DETECTOR_BATTERY_NORMAL = 3915,   /*?????????‾????????*/
	CID_TYPE_EXTEND_MODULE_LOSS = 1916,                 /*???????谷????*/
	CID_TYPE_EXTEND_MODULE_LOSS_RESET = 3916,           /*???????谷????????*/
	CID_TYPE_WIRELESS_REPEATER_DISCONNECT = 1917,       /*?????????‾????*/
	CID_TYPE_WIRELESS_REPEATER_CONNECT = 3917,          /*?????????‾????????*/
	CID_TYPE_RADAR_TRANS_FAULT = 1918,                  /*?℅???????足??*/
	CID_TYPE_RADAR_TRANS_RESET = 3918,                  /*?℅???????足??????*/
	CID_TYPE_WRIELESS_SIREN_LOW_BATTERY = 1919,         /*??????????????*/
	CID_TYPE_NORMAL_WRIELESS_SIREN_BATTERY = 3919,      /*????????????????*/
	CID_TYPE_WRIELESS_NET_FAULT = 1920,                 /*????????????*/
	CID_TYPE_WRIELESS_NET_RESET = 3920,                 /*????????????????*/
	CID_TYPE_SIM_FAULT = 1921,                          /*SIM?“?足??*/
	CID_TYPE_SIM_RESET = 3921,                          /*SIM?“?足??????*/
	CID_TYPE_WIFI_ABNORMAL = 1922,		                /*WIFI?“???足??*/
	CID_TYPE_WIFI_NORMAL = 3922,		                /*WIFI?“??????????*/
	CID_TYPE_RF_ABNORMAL = 1923,		                /*RF?????足??*/
	CID_TYPE_RF_NORMAL = 3923,		                    /*RF????????*/
	CID_TYPE_DATE_TRAFFIC_OVERFLOW = 1924,              /*?‾??????*/
	CID_TYPE_IPADDR_CONFLICT = 1930,                    /*IP????*/
	CID_TYPE_IPADDR_NORMAL = 3930,                      /*IP????*/
	CID_TYPE_ETHERNET_BROKEN = 1931,                    /*????????????*/
	CID_TYPE_ETHERNET_NORMAL = 3931,                    /*????????????????*/
	CID_TYPE_MOTION_DECTECT_START = 1940,               /*?????足??㊣“??????*/
	CID_TYPE_MOTION_DECTECT_STOP = 3940,                /*?????足??㊣“???芍??*/
	CID_TYPE_MASK_ALARM_START = 1941,                   /*????㊣“??????*/
	CID_TYPE_MASK_ALARM_STOP = 3941,                    /*????㊣“???芍??*/
	CID_TYPE_VI_LOST_START = 1942,                      /*???????????∫*/
	CID_TYPE_VI_LOST_STOP = 3942,                       /*????????????*/
	CID_TYPE_VS_MISMATCH = 1943,                        /*????/??????????????????*/
	CID_TYPE_VS_MATCH = 3943,                           /*????/????????????????????*/
	CID_TYPE_VI_EXCEPTION = 1944,                       /*?????????足??*/
	CID_TYPE_VI_NORMAL = 3944,                          /*????????????????*/
	CID_TYPE_HD_FULL = 1945,                            /*?????迆*/
	CID_TYPE_HD_FREE = 3945,                            /*????????*/
	CID_TYPE_HD_ERROR = 1946,                           /*?????足??*/
	CID_TYPE_HD_RESET = 3946,                           /*????????????*/
	CID_TYPE_PIC_SEND_FAILED = 1947,                    /*?????????∫∼?*/
	CID_TYPE_SENDING_EMAIL_FAILED = 1948,               /*????﹞????∫∼?*/
	CID_TYPE_NETWORK_CAMERA_DISCONNECT = 1949,          /*IPC????????*/
	CID_TYPE_NETWORK_CAMERA_CONNECT = 3949,             /*IPC????????*/
	CID_TYPE_DUTY_CHECKING = 1960,                      /*?????谷??*/
	CID_TYPE_POST_RESPONSE = 1961,                      /*????????*/
	CID_TYPE_ZONE_BUS_SEARCH = 1970,                    /*℅??????‾*/
	CID_TYPE_ZONE_BUS_REGIST = 1971,                    /*℅???℅??芍*/
	CID_TYPE_GUARD_SINGLE_ARM = 1973,                   /*??﹞????﹞﹞?*/
	CID_TYPE_GUARD_SINGLE_DISARM = 3973,                /*??﹞?????﹞?*/
	CID_TYPE_SINGLE_ZONE_ALARM_CLEARED = 1974,          /*??﹞???????*/
	CID_TYPE_ZONE_ASSOCIATED_DETECTOR_DEL = 1975,       /*?????????‾*/
	CID_TYPE_ZONE_ASSOCIATED_DETECTOR_ADD = 3975,       /*?赤???????‾*/
	CID_TYPE_ZONE_CONSULT = 1976,                       /*????℅???*/
	CID_TYPE_ZONE_CONSULT_STOP = 3976,                  /*????℅????芍??*/
	CID_TYPE_EXTEND_MODULE_DEL = 1977,                  /*???????????谷*/
	CID_TYPE_EXTEND_MODULE_ADD = 3977,                  /*?赤?????????谷*/
	CID_TYPE_WIRELESS_REPEATER_DEL = 1978,              /*?????????????‾*/
	CID_TYPE_WIRELESS_REPEATER_ADD = 3978,              /*?赤???????????‾*/
	CID_TYPE_WIRELESS_SIREN_DEL = 1979,                 /*????????????*/
	CID_TYPE_WIRELESS_SIREN_ADD = 3979                  /*?赤??????????*/
}NET_DVR_ALARMHOST_CID_ALL_MINOR_TYPE;


typedef struct tagNET_DVR_CID_ALARM
{
	DWORD    dwSize;
	BYTE    sCIDCode[CID_CODE_LEN/*4*/];    //CID??????
	BYTE    sCIDDescribe[NAME_LEN/*32*/];    //CID??????
	NET_DVR_TIME_EX struTriggerTime;            //??﹞?㊣“?????㊣????
	NET_DVR_TIME_EX struUploadTime;                //????㊣“?????㊣????
	BYTE    sCenterAccount[ACCOUNTNUM_LEN/*6*/];    //????????
	BYTE    byReportType;                    //???“??NET_DVR_ALARMHOST_REPORT_TYPE
	BYTE    byUserType;                        //???∫?角????0-???????∫ 1-?邦?????∫,2-???迆???∫,3-???????∫
	BYTE    sUserName[NAME_LEN/*32*/];        //???????∫???∫??
	WORD    wKeyUserNo;                        //?邦?????∫??    0xFFFF㊣赤?????∫
	BYTE    byKeypadNo;                        //?邦????        0xFF㊣赤?????∫
	BYTE    bySubSysNo;                        //℅???????        0xFF㊣赤?????∫
	WORD    wDefenceNo;                        //﹞?????        0xFFFF㊣赤?????∫
	BYTE    byVideoChanNo;                    //?????“????    0xFF㊣赤?????∫
	BYTE    byDiskNo;                        //??????        0xFF㊣赤?????∫
	WORD    wModuleAddr;                    //???谷???﹞        0xFFFF㊣赤?????∫
	BYTE    byCenterType;                    //0-???∫, 1-????????(?∟??6),2-??????????????(?∟??9)
	BYTE    byRes1;
	BYTE    sCenterAccountV40[ACCOUNTNUM_LEN_32/*32*/];    //????????V40,??????℅????㊣sCenterAccount???∫
	BYTE   byDevSerialNo[DEV_SERIAL_LEN];   /*?迆?﹞?辰????*/
	BYTE    byRepeaterNo;    //?????‾??????0???∫
	WORD    wRemoteCtrllerUserNo;    //?????‾???∫??????0???∫
	DWORD dwIOTChannelNo;    //IOT?“????
	BYTE    byRes2[12];
}NET_DVR_CID_ALARM, *LPNET_DVR_CID_ALARM;

typedef struct tagNET_DVR_ALARMHOST_MODULE_CFG
{
	DWORD dwSize;
	BYTE    byModuleType;    //1-﹞?????2-??﹞??‾ 3-﹞?????﹞??‾      
	BYTE    byZoneType;        //﹞????角????1-㊣???﹞?????2-??﹞?????3-??﹞?????4-8﹞?????5-8?﹞??????﹞?????6-??﹞?????﹞??‾??0xff㊣赤???????????∫
	BYTE    byTriggerType;    //??﹞??‾?角????1-㊣?????﹞??‾?? 2-4?﹞??﹞??‾??3-8?﹞??﹞??‾??4-??﹞?????﹞??‾??0xff㊣赤???????????∫
	BYTE    byRes1[1];
	char    sModelInfo[MODULE_INFO_LEN];                //???谷????
	char    sDeviceVersionInfo[VERSION_INFO_LEN];                /* ∼?㊣?????*/
	BYTE    byRes[188];
} NET_DVR_ALARMHOST_MODULE_CFG, *LPNET_DVR_ALARMHOST_MODULE_CFG;


#define MAX_DECODE_CARD_SUPPORTDISPNUMS 8//?????????“℅??角?∫?????????“????
#define MAX_SUPPORT_RES 32
typedef struct tagNET_DVR_DECCARD_ABILITY_V41 /*?????????“??????*/
{
	BYTE byCardType;      //?????“?角??(0:MD,1:MD+,2:HD)
	BYTE byDecNums;      //?????“???? 
	BYTE byDispNums;      //?????“???? 
	BYTE byDecStartIdx;     //?℅???????“?????迄???????“???????‾?? 
	BYTE byDispStartIdx;     //?℅???????“?????迄???????“???????‾??
	BYTE byRes1[3];
	DWORD dwVgaSupportResolution[MAX_SUPPORT_RES/*32*/];//?∫????﹞?㊣???
	DWORD dwHdmiSupportResolution[MAX_SUPPORT_RES/*32*/];//?∫????﹞?㊣???
	DWORD dwDviSupportResolution[MAX_SUPPORT_RES/*32*/];//?∫????﹞?㊣???
	DWORD dwYpbprSupportResolution[MAX_SUPPORT_RES/*32*/];//?∫????﹞?㊣???
	BYTE byDispFormat[MAX_DECODE_CARD_SUPPORTDISPNUMS];   //?∫????????????(∼?HD_DISPLAY_FORMAT????????) 
	BYTE byWindowMode[MAX_DECODE_CARD_SUPPORTDISPNUMS][12]; //?∫?????∼??????(㊣???1,2,4,9,16))
	BYTE byRes2[36];
} NET_DVR_DECCARD_ABILITY_V41, *LPNET_DVR_DECCARD_ABILITY_V41;

#define        MAX_DECODE_CARD_NUM            6   //℅??角?????????“??
typedef struct tagNET_DVR_DECODESVR_ABILITY_V41
{
	DWORD dwSize;      /* ?芍?????車?? */
	BYTE byCardNums;      /* ?????“?? */
	BYTE byStartChan;     /* ?????“???? */
	BYTE byRes1[2];
	NET_DVR_DECCARD_ABILITY_V41 struDecCardAbility[MAX_DECODE_CARD_NUM];
	BYTE byRes2[64];
}NET_DVR_DECODESVR_ABILITY_V41, *LPNET_DVR_DECODESVR_ABILITY_V41;

// ?‾????℅???
typedef struct tagNET_DVR_STREAM_RECORD_STATUS
{
	DWORD           dwSize;
	BYTE            byRecord;         //(????)?????角??, 0????????????1???????? 2-???? 
									  //3-?????? 4-?????????? 5-?????? 6-??????
									  //7-?????? 8-???∫???辰?????赤 9-???谷?∟
									  //10-?????????????? 11-??????????????????12-token???∟?∫∼?
	BYTE            byOffLineRecord;  //???????????? 0-??㊣? 1-????
	BYTE            byRes1[2];        //㊣???℅???
	DWORD            dwRelatedHD;      //????????
	BYTE            byRes2[8];        //㊣???℅???
}NET_DVR_STREAM_RECORD_STATUS, *LPNET_DVR_STREAM_RECORD_STATUS;

#define  CHAN_NO_LEN   24

typedef struct tagNET_DVR_DIRECT_CONNECT_CHAN_INFO
{
	BYTE        byEnable;                    //??﹞?????
	BYTE        byProType;                    //???谷?角????0-???????谷(default), (?豕?????豕㊣?????????)
	BYTE          byZeroChan;                    //??﹞??????“??,0-??????1-??
	BYTE        byPriority;                //??????
	BYTE        sUserName[NAME_LEN];        //???∫??
	BYTE        sPassword[PASSWD_LEN];        //????
	BYTE        byDomain[MAX_DOMAIN_NAME];    //?豕㊣??辰??
	NET_DVR_IPADDR  struIP;                        //IP???﹞
	WORD        wDVRPort;                     //??????
	BYTE        byStreamType;               //?‾???‾:0; ℅????‾??1
	BYTE        byOnline;                    //??????0-?????? 1-????
	DWORD        dwChannel;                  //?“????
	BYTE        byTransProtocol;            //???谷?角????0-TCP??1-UDP??2-?角??
	BYTE        byLocalBackUp;                //㊣???㊣?﹞?: 0-??????CVR㊣???㊣?﹞???1-????CVR㊣???㊣?﹞?--????﹞??㊣???‾??﹞????????赤????﹞????????赤?“㊣???㊣?﹞???
	WORD        wDirectLastTime;            //?????????㊣??
	BYTE        byChanNo[CHAN_NO_LEN];     //?“??㊣角??--????VAG???‾
}NET_DVR_DIRECT_CONNECT_CHAN_INFO, *LPNET_DVR_DIRECT_CONNECT_CHAN_INFO;

typedef struct tagNET_DVR_DIRECT_CONNECT_CHAN_INFO_V40
{
	BYTE    byEnable;                    //??﹞?????
	BYTE    byProType;                    //???谷?角????0-???????谷(default), 1-???????谷??2-?‾?芍, 3-?車?? (?豕?????豕㊣?????????)
	BYTE    byZeroChan;                    //??﹞??????“??,0-??????1-??
	BYTE    byRes1;                        //㊣???℅???????0
	BYTE    sUserName[NAME_LEN];        //???∫??
	BYTE    sPassword[PASSWD_LEN];        //????
	BYTE    byAddress[MAX_DOMAIN_NAME];  //?∼??IP?辰???辰??,?豕???豕㊣? ????﹞???????℅???????????'.'?辰???????辰??,﹞??辰??IP???﹞
	WORD    wDVRPort;                     //??????
	BYTE    byStreamType;               //?‾???‾:0; ℅????‾??1
	BYTE    byOnline;                    //??????0-?????? 1-????
	DWORD   dwChannel;                //?“????
	BYTE    byTransProtocol;            //???????谷?角????0-TCP??1-UDP 2-?角??
	BYTE    byLocalBackUp;                     //㊣???㊣?﹞???0-??????CVR㊣???㊣?﹞???1-????CVR㊣???㊣?﹞?--???????㊣???‾??﹞????????赤????﹞????????赤?“㊣???㊣?﹞???
	BYTE    byRes2[2];                //㊣???℅???????0
	BYTE    byVAGChanNo[MAX_VAG_CHANNO_LEN];     //???谷?角????VAG?㊣????????VAG?“??㊣角??
	BYTE    byRes[340];
}NET_DVR_DIRECT_CONNECT_CHAN_INFO_V40, *LPNET_DVR_DIRECT_CONNECT_CHAN_INFO_V40;


typedef struct tagNET_DVR_PU_STREAM_URL_CFG
{
	BYTE    byEnable;
	BYTE    byRes[3];
	BYTE    byStreamMediaIP[64];//?‾????IP 
	WORD    wStreamMediaPort; //?‾????????
	BYTE    byTransmitType; //?‾???????????谷 0- TCP  1- UDP
	BYTE    byRes1[33];
	BYTE    byDevIP[64]; //?豕㊣?IP 
	WORD    wDevPort; //?豕㊣?????
	BYTE    byChannel; //?“????
	BYTE    byTransMode; //???????? 0-?‾???‾ 1- ℅????‾ 
	BYTE    byProType;
	//?∫???角?? 0-???? 1-?車?? 2-??∼? 3-???? 4-???????? NET_DVR_GetIPCProtoList????????
	//VQD?‾?????????∫?? 0??1﹞??????㊣???∫?? 0??1??2??3??4
	BYTE    byTransProtocol; //???????谷?角??0-TCP,  1-UDP,  2-?角??﹞???,  3-RTP
	BYTE    byRes3[2];
	BYTE    sUserName[NAME_LEN];   //?豕㊣????????∫??
	BYTE    sPassWord[PASSWD_LEN]; // ?豕㊣?????????
	BYTE    byRes2[28];  //?∟??  
}NET_DVR_PU_STREAM_URL_CFG, *LPNET_DVR_PU_STREAM_URL_CFG;

typedef struct tagNET_DVR_PU_STREAM_URL_CFG_V40
{
	BYTE    byEnable;
	BYTE    byRes[3];
	BYTE    byStreamMediaIP[64];//?‾????IP 
	WORD   wStreamMediaPort; //?‾????????
	BYTE    byTransmitType; //?‾???????????谷 0- TCP  1- UDP
	BYTE    byRes1;
	BYTE    byDevIP[64]; //?豕㊣?IP 
	WORD   wDevPort; //?豕㊣?????
	BYTE    byChannel; //?“????
	BYTE    byTransMode; //???????? 0-?‾???‾ 1- ℅????‾ 
	BYTE    byProType;
	//?∫???角?? 0-???? 1-?車?? 2-??∼? 3-???? 4-???????? NET_DVR_GetIPCProtoList????????
	//VQD?‾?????????∫?? 0??1﹞??????㊣???∫?? 0??1??2??3??4
	BYTE    byTransProtocol; //???????谷?角??0-TCP,  1-UDP  2-?角??﹞???
	BYTE    byRes3[2];
	BYTE    sUserName[NAME_LEN];   //?豕㊣????????∫??
	BYTE    sPassWord[PASSWD_LEN]; // ?豕㊣?????????
	BYTE    byRes2[308];  //?∟??  
}NET_DVR_PU_STREAM_URL_CFG_V40, *LPNET_DVR_PU_STREAM_URL_CFG_V40;

typedef struct tagNET_DVR_STREAM_URL_V40
{
	BYTE    byEnable;
	BYTE    byStreamType; //?‾℅????‾
	BYTE    byLocalBackUp; //??﹞?㊣???㊣?﹞?
	BYTE     byRes;
	BYTE    strURL[URL_LEN_V40]; //?‾????URL??????????
	DWORD   dwProtocalType;   //IPC???谷?角???????????“??????IPC???谷??㊣赤????
	BYTE    sUserName[NAME_LEN];   //?豕㊣????????∫??
	BYTE    sPassWord[PASSWD_LEN]; // ?豕㊣?????????
	BYTE    byAddress[MAX_DOMAIN_NAME];  //?‾????IP?辰???辰??,?豕?????? ????﹞???????℅???????????'.'?辰???????辰??,﹞??辰??IP???﹞
	WORD    wIPPort;  //?‾????????????????
	WORD    wChanNo; //?‾?????豕㊣?IP?“????
	BYTE    byVAGChanNo[MAX_VAG_CHANNO_LEN];     //?‾?????“??㊣角??,????VAG????
	BYTE     byRes1[88];
}NET_DVR_STREAM_URL_V40, *LPNET_DVR_STREAM_URL_V40;

typedef union tagNET_DVR_STREAM_TYPE_UNION
{
	NET_DVR_DIRECT_CONNECT_CHAN_INFO    struChanInfo;          //IP?“??????  ?角??????0
	NET_DVR_PU_STREAM_URL                struStreamUrl;        //?“???‾??????url???‾???角??????4
	NET_DVR_PU_STREAM_URL_CFG           struStreamUrlCfg; //?“???‾?????????“?角???豕㊣??????‾???角??????6
}NET_DVR_STREAM_TYPE_UNION, *LPNET_DVR_STREAM_TYPE_UNION;

typedef union tagNET_DVR_STREAM_TYPE_V40_UNION
{
	NET_DVR_DIRECT_CONNECT_CHAN_INFO_V40    struChanInfo;     //IP?“?????????角??????0
	NET_DVR_PU_STREAM_URL struPuStreamUrl;        //?“???‾??????url???‾???角??????4
	NET_DVR_PU_STREAM_URL_CFG_V40   struStreamUrlCfg; //?“???‾??????℅谷??url???‾???角??????6
	NET_DVR_RTSP_PROTOCAL_CFG struRtspCfg;        //??㊣那℅?RTSP???????‾ ?角????7
	NET_DVR_STREAM_URL_V40  struStreamUrlV40;  //?“???‾?????“?∫??????﹞??????辰?‾???????‾???角??????8
}NET_DVR_STREAM_TYPE_V40_UNION, *LPNET_DVR_STREAM_TYPE_V40_UNION;


typedef struct tagNET_DVR_STREAM_MODE_TYPE
{
	BYTE                    byGetStreamType;    //???‾﹞?????0-?㊣?????豕㊣????‾??1-???‾???????‾??2-?“??IPServer????ip???﹞?車???‾, 3.?“??IPServer?????豕㊣??????“???‾???????豕㊣????‾ 4-?“???‾??????URL?????‾
	BYTE                    byRes[3];            // ㊣???℅???
	NET_DVR_STREAM_TYPE_UNION    uGetStream;            // ???????‾﹞????芍????
}NET_DVR_STREAM_MODE_TYPE, *LPNET_DVR_STREAM_MODE_TYPE;

// ?‾????????
typedef struct tagNET_DVR_STREAM_SRC_INFO
{
	DWORD                        dwSize;
	NET_DVR_STREAM_MODE_TYPE    struStreamSrcInfo;
}NET_DVR_STREAM_SRC_INFO, *LPNET_DVR_STREAM_SRC_INFO;

typedef struct tagNET_DVR_STREAM_SRC_INFO_V40
{
	DWORD                    dwSize;
	BYTE                    byGetStreamType;    //???‾﹞?????0-?㊣?????豕㊣????‾??1-???‾???????‾??2-?“??IPServer????ip???﹞?車???‾, 3.?“??IPServer?????豕㊣??????“???‾???????豕㊣????‾ 4-?“???‾??????URL?????‾ 6-?“???‾?????????“?角???豕㊣??????‾
	BYTE                    byRes1[3];            // ㊣???℅???
	NET_DVR_STREAM_TYPE_V40_UNION    uGetStream;            // ???????‾﹞????芍????
	BYTE                    byMonitorName[128];/*?角?????????“?∫?????????車????℅???????℅???????????﹞?????℅?﹞???㊣角???????迄??????﹞?????byCharEncodeType℅?????????
											   ???∼CVR??????∼?㊣??????迄??????????????????CVR???車?角??????????gbk??????∼?㊣?CVR???車?角??????????iso8859-1?????∼????A????_?角????1?㊣??*/
	BYTE                    byRes[384];            // ㊣???℅???
}NET_DVR_STREAM_SRC_INFO_V40, *LPNET_DVR_STREAM_SRC_INFO_V40;


// ?‾????????
typedef struct
{
	DWORD            dwSize;
	NET_DVR_RECORD_V30    struRecordInfo;
}NET_DVR_STREAM_RECORD_INFO, *LPNET_DVR_STREAM_RECORD_INFO;

// ∼??‾ID???㊣????????
typedef struct tagNET_DVR_STREAM_TIME_LOCK
{
	DWORD            dwSize;                // ?芍?????車??
	NET_DVR_TIME    strBeginTime;        // ?????㊣??
	NET_DVR_TIME    strEndTime;            // ?芍???㊣??
	NET_DVR_STREAM_INFO struStreamInfo;        // ?‾????
	DWORD            dwRecordType;        // ?????角??:  0xffffffff???????????“?㊣??????-?????足??????㊣“????﹞???-㊣“????﹞??辰?????足????-㊣“????﹞????????足????-?邦????﹞???-??????????-????????(???????谷??)
	DWORD            dwLockDuration;        // ???“?????㊣??,????????0xffffffff㊣赤?????????“
	NET_DVR_TIME_EX        strUnlockTimePoint;    // ?????㊣???∫???㊣dwLockDuration???????????“?㊣?????“???????㊣???????㊣??????℅???????
	BYTE                byRes[4];
}NET_DVR_STREAM_TIME_LOCK, *LPNET_DVR_STREAM_TIME_LOCK;

//??﹞??谷?????? ?????谷???邦?? NET_DVR_START_DRAWFRAME?????????????芍????
typedef struct tagNET_DVR_VOD_DRAWFRAME_PARA
{
	NET_DVR_TIME_EX struTime;
	/*
	dwDrawType?????豕㊣??∫?????????谷???㊣???????????∫?????谷??﹞???????
	0??????I??
	1????1/2 P???“????svc???‾?∫????
	2????3/4P?? ?“????svc???‾?∫????
	3????1/2 I??(????I????????2??I??????????)
	4????1/4 I??(????I????????4??I??????????)
	5????1/8 I??(????I????????8??I??????????)
	*/
	DWORD  dwDrawType;
	BYTE   byRes[128];
}NET_DVR_VOD_DRAWFRAME_PARA, *LPNET_DVR_VOD_DRAWFRAME_PARA;

// ∼?ID+?㊣????﹞??芍????
typedef struct tagNET_DVR_VOD_PARA
{
	DWORD                dwSize;
	NET_DVR_STREAM_INFO struIDInfo;
	NET_DVR_TIME        struBeginTime;
	NET_DVR_TIME        struEndTime;
	HWND                hWnd;
	BYTE                byDrawFrame; //0:???谷????1???谷??
	BYTE                byVolumeType;  //0-???“?????赤  1-?????赤
	BYTE                byVolumeNum;  //?赤???????∼???????赤??
	BYTE                byStreamType;   //???‾?角?? 0-?‾???‾?? 1-℅????‾??2-???‾??
	DWORD                   dwFileIndex;      //?????赤?????????????‾???????‾?????赤?????㊣﹞???????
	BYTE                byAudioFile;    //????????0-﹞???1-??
	BYTE                byCourseFile;    //????????0-﹞???1-??
	BYTE                byDownload;    //??﹞????? 0-﹞???1-??
	BYTE                byOptimalStreamType;    //??﹞?∼?℅??????‾?角????﹞? 0-﹞???1-???“?????????‾?豕㊣??????????㊣???????????????????“???‾?角?????????辰﹞??????????‾?角??????????
	BYTE                byRes2[20];
}NET_DVR_VOD_PARA, *LPNET_DVR_VOD_PARA;

typedef struct tagNET_DVR_VOD_PARA_V50
{
	DWORD                   dwSize;
	NET_DVR_STREAM_INFO     struIDInfo;
	NET_DVR_TIME_V50        struBeginTime;
	NET_DVR_TIME_V50        struEndTime;
	HWND                    hWnd;
	BYTE                    byDrawFrame; //0:???谷????1???谷??
	BYTE                    byVolumeType;  //0-???“?????赤  1-?????赤
	BYTE                    byVolumeNum;  //?赤???????∼???????赤??
	BYTE                    byStreamType;   //???‾?角?? 0-?‾???‾?? 1-℅????‾??2-???‾??
	DWORD                   dwFileIndex;      //?????赤?????????????‾???????‾?????赤?????㊣﹞???????
	BYTE                    byAudioFile;    //??﹞???????????0-????﹞???????????1-????﹞?????????
	BYTE                    byCourseFile;    //??﹞?????????0-﹞???1-??
	BYTE                    byPlayMode;    //??﹞?﹞???0-??﹞???1-??﹞?
	BYTE                    byLinkMode;    //????﹞???0-TCP??1-AdaptiveUDP
	BYTE                    byDownload;    //??﹞????? 0-﹞???1-??
	BYTE                    byOptimalStreamType;    //??﹞?∼?℅??????‾?角????﹞? 0-﹞???1-???“?????????‾?豕㊣??????????㊣???????????????????“???‾?角?????????辰﹞??????????‾?角??????????
	BYTE                    byDisplayBufNum;  //?豕????﹞????????????㊣??0?㊣????????3????hWnd???????㊣???∫
	BYTE 					byNPQMode;	   //NPQ???㊣???????????????‾???? 0-?㊣?? 1-???‾????
	BYTE                    sUserName[NAME_LEN/*32*/]; //???????∟???∫??
	BYTE                    sPassword[PASSWD_LEN/*16*/]; //???????∟????
	BYTE                    byRemoteFile;    //??﹞?????????0-﹞???1-??
	BYTE                    byRes2[203];
	char*					pSavedFileName;	//?????㊣??㊣??????????????﹞????byDownload??1?㊣???∫???∟??????256???芍㊣?????
}NET_DVR_VOD_PARA_V50, *LPNET_DVR_VOD_PARA_V50;

// ????????
typedef struct tagNET_DVR_MANUAL_RECORD_PARA
{
	NET_DVR_STREAM_INFO struStreamInfo;
	DWORD            lRecordType;
	BYTE            byRes[32];
}NET_DVR_MANUAL_RECORD_PARA, *LPNET_DVR_MANUAL_RECORD_PARA;


// CABAC???‾?????????????????????芍??20%???????????“????????
typedef struct tagNET_DVR_STREAM_CABAC
{
	DWORD        dwSize;                  //?芍?????車??
	BYTE         byCabacEnable;           //???‾??????????????0 ???芍?? 1 ?芍??
	BYTE          byRes1[31];                  //㊣???
}NET_DVR_STREAM_CABAC, *LPNET_DVR_STREAM_CABAC;

#define  MAX_IOSPEED_GROUP_NUM      4 //IO????℅谷????
#define  MAX_IOOUT_NUM              4  //℅??車IO??????????
#define  MAX_IOIN_NUM               8  //℅??車IO??????????
#define  MAX_RELAY_NUM              12 //?????‾?????豕㊣?℅??車?? 2013-11-04
#define  MAX_VEHICLE_TYPE_NUM        8  //????????????℅??車??2013-11-04
#define  MAX_IOIN_NUMEX             10 //℅??車IO??????????(????)
#define  MAX_ITC_LANE_NUM           6  //℅??車????????
#define  MAX_LANEAREA_NUM           2  //??????℅??車???辰????
#define  ITC_MAX_POLYGON_POINT_NUM    20    //?足?????辰℅??角?∫??20???????角㊣???
#define  MAX_ITC_SERIALCHECK_NUM    8 //???????谷?角??????
#define  MAX_LIGHT_NUM              6 //℅??車???“????
#define  MAX_VIDEO_INTERVAL_NUM     2  //℅??車℅?????????
#define  MAX_VIDEO_DETECT_LIGHT_NUM  12  //?????足????℅??車?足?????辰
#define  MAX_CALIB_RECOG_NUM        2  //㊣那?“???辰????
#define  MAX_RS485_NUM  12 //485??℅??車?∫????
#define  MAX_MOBILE_POLYGON_NUM     3 //?????????∫??℅??車???????辰????
#define  MAX_MOBILE_DETECTLINE_NUM  3 //?????????∫??℅??車?????足????????
#define  MAX_IOOUT_K_NUM            8  //K????℅??車IO??????????

//IO???????????“3.1∼?㊣??“???????車??
typedef struct tagNET_ITC_IOOUT_PARAM
{
	DWORD    dwSize;
	BYTE     byDefaultStatus;//IO????℅?????0-????????1-?????? 
	BYTE     byIOOutStatus;//IO???∫?㊣℅?????0-????????1-????????2-????
	BYTE     byMode; //???????∟℅‾﹞???,∼???㊣赤????0-㊣赤???∟℅‾??1-㊣赤?????∟℅‾??bit0-??????bit1-?“????bit2-????
	BYTE     byIOWorkMode;//IO???????∟℅‾??????0-????????1-??????,  2-??????
	DWORD    dwTimeDelay;//IO???∫?????㊣????????us
	WORD     wAheadTime;//????IO?芍?∼?㊣????????us
	BYTE     byFreqMulti;        //㊣?????????﹞??∫[1,15]
	BYTE     byDutyRate;        //????㊣???[0,40%]
	BYTE     byDetectBrightness;/*℅????足????????????????0-???足????1-?足??*/
	BYTE     byBrightnessThreld;/*????????????????????﹞??∫[0,100],??????????*/
	BYTE     byFlashLightEnable;    //?豕?????????㊣??????:0-??;1-??
	BYTE     byStartHour;        //?????㊣??-???㊣,????﹞??∫0-23
	BYTE     byStartMinute;        //?????㊣??-﹞?,????﹞??∫0-59
	BYTE     byEndHour;        //?芍???㊣??-???㊣,????﹞??∫0-23
	BYTE     byEndMinute;        //?芍???㊣??-﹞?,????﹞??∫0-59
	BYTE     byAutoPlateBrightness;// ????????℅????????????? 0-?????? 1-????
	BYTE     byIncrBrightEnable;//??﹞??????????????“??????????????
	BYTE     byIncrBrightPercent;//????∼?﹞?㊣???0~100%?“???????????????迆?∫??
	WORD     wIncrBrightTime;//?????㊣??,???????????“???????????????迆?∫??
	BYTE     byBrightness;//????????0~100?“??????????????
	BYTE     byEnvironBright;//?﹞??????????0~100?“?????????????迆?∫???????????????﹞?????????迆㊣赤℅????????迄???﹞???????????????∫??????????℅‾???????????????角??????????????
	WORD     wDelayCaptureTime;//???㊣℅????㊣??1~1000ms?“???????????????迆?∫??
}NET_ITC_IOOUT_PARAM, *LPNET_ITC_IOOUT_PARAM;

typedef enum _ITC_TRIGGERMODE_TYPE_
{
	ITC_POST_IOSPEED_TYPE = 0x1,  //IO?????“?“????
	ITC_POST_SINGLEIO_TYPE = 0x2,  //??IO??﹞??“?“????
	ITC_POST_RS485_TYPE = 0x4,  //RS485???足?‾??﹞??“?“????
	ITC_POST_RS485_RADAR_TYPE = 0x8,  //RS485?℅????﹞??“?“????
	ITC_POST_VIRTUALCOIL_TYPE = 0x10,   //?谷????????﹞??“?“????
	ITC_POST_HVT_TYPE_V50 = 0x20,    //?足???“????????﹞?V50
	ITC_POST_MPR_TYPE = 0x40,   //?角????㊣?(?“??)(Ver3.7)
	ITC_POST_PRS_TYPE = 0x80,   //?????足????﹞?????
	ITC_EPOLICE_IO_TRAFFICLIGHTS_TYPE = 0x100,  //IO?足?????“??????
	ITC_EPOLICE_RS485_TYPE = 0x200,  //RS485???足?‾??????﹞??“??????
	ITC_POST_HVT_TYPE = 0x400,    //?足???“????????﹞??“?“????
	ITC_PE_RS485_TYPE = 0x10000,  //RS485???足?‾?“????????﹞??“?“????????
	ITC_VIDEO_EPOLICE_TYPE = 0x20000, //??????????﹞??“?“????????
	ITC_VIA_VIRTUALCOIL_TYPE = 0x40000,  //VIA??﹞?????
	ITC_POST_IMT_TYPE = 0x80000,   //?????角??????
	IPC_POST_HVT_TYPE = 0x100000,    //IPC?∫????HVT
	ITC_POST_MOBILE_TYPE = 0x200000, //???????“??﹞?????
	ITC_REDLIGHT_PEDESTRIAN_TYPE = 0x400000,    //???????足????﹞?
	ITC_NOCOMITY_PEDESTRIAN_TYPE = 0x800000    //????????????﹞?
}ITC_TRIGGERMODE_TYPE;

//??????????????????????????pOutBuf????
typedef struct tagNET_ITC_TRIGGERMODE_ABILITY
{
	DWORD dwSize;
	DWORD dwTriggerType; //??﹞??角????∼???㊣赤?????“??ITC_TRIGGERMODE_ABILITY?“?????迄?????????????角????????????﹞???????﹞??角????????
	BYTE byRes[16];
}NET_ITC_TRIGGERMODE_ABILITY, *LPNET_ITC_TRIGGERMODE_ABILITY;

typedef struct tagNET_ITC_INTERVAL_PARAM
{
	BYTE byIntervalType;    //?????角???“????∼??㊣??????0-?㊣?????∫,1-?角?????∫
	BYTE byRes1[3];
	WORD wInterval[MAX_INTERVAL_NUM];//?????????㊣???“????ms???辰?????????角???“????﹞??℅?????㊣byIntervalType??0?㊣??㊣赤???????㊣?????㊣byIntervalType??1?㊣??㊣赤???角??
	BYTE byRes[8];
}NET_ITC_INTERVAL_PARAM, *LPNET_ITC_INTERVAL_PARAM;

//????????
typedef struct tagNET_ITC_PLATE_RECOG_PARAM
{
	BYTE byDefaultCHN[MAX_CHJC_NUM]; /*?豕㊣???????﹞?????℅??辰??*/
	BYTE byEnable; //??﹞??????????辰??????0-﹞???1-??
	DWORD dwRecogMode;
	/*??㊣????角????
	bit0-㊣??辰??㊣???0-???辰??????㊣???1-㊣??辰??㊣?(??????㊣?) ??
	bit1-?車??????㊣??辰????????㊣???0-????????㊣???1-?車??????㊣? ??
	bit2-???赤??????㊣???0-?????????赤??????㊣?????㊣??辰??㊣??辰????????㊣??㊣??????????1-???赤??????㊣???
	bit3-????????㊣???0-??????????????㊣???1-????????㊣???
	bit4-??????㊣???0-????????????㊣???1-??????㊣???
	bit5-???“???辰???“????0-???“????1-???“????
	bit6-????㊣??辰????㊣???0-????㊣???1-????㊣???
	bit7-?赤???辰∼℅?足??0-∼℅?足??1-?赤??
	bit8-????????㊣???0-??????????????㊣???1-????????㊣?;
	bit9-???∼??????0-????/?角????1-?“????
	bit10-??????????0-????????1-??????????????㊣?(????60??80)
	bit11-∼??????足????0-????????1-????∼??????足??
	bit12-??????????㊣?: 0-????????1-??????????????㊣?
	bit13-???????????㊣???赤: 0-????????1-???????????㊣???赤?“PRS??
	bit14-???車??????㊣?: 0-????????1-???????車??????㊣??“PRS??
	bit15-????∼??足????0-????????1-????????∼??足??
	bit16-??㊣那???足????0-????????1-??????㊣那???足??
	bit17-?????﹞?????足????0-????????1-?????????﹞?????足??
	bit18-??????????㊣???0-????????1-??????????????㊣?
	bit19-????℅??﹞????㊣???0-????????1-????????℅??﹞????㊣?
	bit20-?辰???∼??㊣???0-????????1-????
	bit21-???∼?邦??????㊣???0-????????1-????
	*/
	BYTE byVehicleLogoRecog;//??㊣那??㊣? 0-????????1-????  
							/*
							0-㊣?????1-∼???2-????3-????4-????5-????6-????7-????8-?車??9-?赤??10-????11-????
							12-????13-????14-????15-????16-????17-????18-????19-????20-????21-?角??22-????
							23-?迆??24-????25-????26-?“??27-?“??28-?辰??29-????30-????31-????32-????33-????
							34-????0xff-????
							*/
	BYTE byProvince;//??﹞??‾????
	BYTE byRegion;// ???辰?‾???? 0-㊣?????1-?﹞????2-?赤?????辰, 3-?﹞??&?赤????(EU&CIS),4-????(Middle East)
	BYTE byCountry;//?迆???‾????????????COUNTRY_INDEX(???∫???∼COUNTRY_ALL = 0xff,//ALL ?????㊣)
	WORD wPlatePixelWidthMin;//??????????㊣??赤??℅??????“?????????????㊣?∼????﹞??∫[130,500]
	WORD wPlatePixelWidthMax;//??????????㊣??赤??℅??車???“?????????????㊣?∼????﹞??∫[130,500]
	BYTE byRes[24];
}NET_ITC_PLATE_RECOG_PARAM, *LPNET_ITC_PLATE_RECOG_PARAM;

//?角㊣????芍????
typedef struct tagNET_ITC_POLYGON
{
	DWORD dwPointNum; //???∫?? ?車??????3??????3?????????????????????∫???辰?????????????????∫???辰 
	NET_VCA_POINT  struPos[ITC_MAX_POLYGON_POINT_NUM]; //?角㊣???㊣?????,℅??角20?? 
}NET_ITC_POLYGON, *LPNET_ITC_POLYGON;

typedef struct tagNET_ITC_PLATE_RECOG_REGION_PARAM
{
	BYTE byMode; //???辰?角????0-??????1-?角㊣???
	BYTE byRes1[3];
	union
	{
		NET_VCA_RECT struRect;  //???????辰
		NET_ITC_POLYGON struPolygon; //?角㊣??????辰
	}uRegion;
	BYTE  byRes[16];    //㊣???
}NET_ITC_PLATE_RECOG_REGION_PARAM, *LPNET_ITC_PLATE_RECOG_REGION_PARAM;

//??℅谷IO????????
typedef struct tagNET_ITC_SINGLE_IOSPEED_PARAM
{
	BYTE byEnable; //??﹞???????0-????????1-????
	BYTE byTrigCoil1; //????????????IO??0-IO1,1-IO2,2-IO3,3-IO4,4-IO5,5-IO6
	BYTE byCoil1IOStatus;//????????IO??????℅?????0-???????“????????1-????????2-????????????????3-????????4-??????
	BYTE byTrigCoil2; //????????????IO??0-IO1,1-IO2,2-IO3,3-IO4,4-IO5,5-IO6
	BYTE byCoil2IOStatus;//????????IO??????℅?????0-???????“????????1-????????2-????????????????3-????????4-??????
	BYTE byRelatedDriveWay;//????????????
	BYTE byTimeOut;//???㊣?㊣???“????10????????s
	BYTE byRelatedIOOutEx;//??0??㊣赤??IO??????1???????角????0-????????1-???? ?∫????????8??(????byRelatedIOOut℅???)
	DWORD dwDistance;//?????角???“????1000??,?????????℅
	BYTE byCapSpeed;//?????????“????30????????km/h
	BYTE bySpeedLimit;//???????“????60????????km/h
	BYTE bySpeedCapEn; //??﹞?????????℅?????0-﹞???1-??
	BYTE bySnapTimes1; //????1℅????????“??????℅???????0-??℅?????﹞?0-??????????℅??車5?? 
	BYTE bySnapTimes2; //????2℅????????“????1????0-??℅?????﹞?0-??????????℅??車5??
	BYTE byBigCarSpeedLimit; //?車????????????
	BYTE byBigCarSignSpeed;//㊣那??????(?車??)??????km/h(3.7Ver)
	BYTE byIntervalType;    //?????角???“????∼??㊣??????0-?㊣?????∫,1-?角?????∫
	WORD wInterval1[MAX_INTERVAL_NUM];//????1?????????㊣???“????ms???辰?????????角???“????﹞??℅?????㊣byIntervalType??0?㊣??㊣赤???????㊣?????㊣byIntervalType??1?㊣??㊣赤???角??
	WORD wInterval2[MAX_INTERVAL_NUM];//????2?????????㊣???“????ms???辰?????????角???“????﹞??℅?????㊣byIntervalType??0?㊣??㊣赤???????㊣?????㊣byIntervalType??1?㊣??㊣赤???角??
	BYTE byRelatedIOOut[MAX_IOOUT_NUM]; //??????IO??????(???????㊣?????角??)????℅谷0㊣赤??IO??????1????℅谷1㊣赤??IO??????2???????角????0-????????1-????
	BYTE byFlashMode;   //????????????????0-???㊣????1-???‾??
	BYTE byLaneType;   //?????角????0-????????1-???????﹞??2-?????足???﹞??0xff-???????﹞
	BYTE byCarSignSpeed;//㊣那????????????km/h(3.7Ver)
	BYTE byUseageType; //?????????角?????那??ITC_LANE_USEAGE_TYPE
	NET_ITC_PLATE_RECOG_REGION_PARAM struPlateRecog[MAX_LANEAREA_NUM]; //????????(???????????辰1????㊣???????)
																	   //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
																	   //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE byRelaLaneDirectionType;
	BYTE byLowSpeedLimit;                        //???????℅??????????km/h
	BYTE byBigCarLowSpeedLimit;                //?車?????℅??????????km/h
	BYTE byLowSpeedCapEn;                 //??﹞?????????℅?????0-﹞???1-??
	BYTE byEmergencyCapEn;                //??﹞????????㊣????℅?????0-﹞???1-??
	BYTE byRes[27];
}NET_ITC_SINGLE_IOSPEED_PARAM, *LPNET_ITC_SINGLE_IOSPEED_PARAM;

//?“??IO????????
typedef struct tagNET_ITC_POST_IOSPEED_PARAM
{
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	NET_ITC_SINGLE_IOSPEED_PARAM struSingleIOSpeed[MAX_IOSPEED_GROUP_NUM]; //????IO????℅谷????
	BYTE  byRes[32];
}NET_ITC_POST_IOSPEED_PARAM, *LPNET_ITC_POST_IOSPEED_PARAM;

//??IO????
typedef struct tagNET_ITC_SINGLEIO_PARAM
{
	BYTE byDefaultStatus;//IO??﹞?????℅?????0-????????1-??????
	BYTE byRelatedDriveWay;//????????????
	BYTE bySnapTimes; //℅????????“????1????0-??℅?????﹞?0-??????????℅??車5
	BYTE byRelatedIOOutEx;//??0??㊣赤??IO??????1???????角????0-????????1-???? ?∫????????8??(????byRelatedIOOut℅???)
	NET_ITC_INTERVAL_PARAM struInterval; //℅???????????
	BYTE byRelatedIOOut[MAX_IOOUT_NUM]; //??????IO???????????????㊣?????角??
	BYTE byFlashMode;   //????????????????0-???㊣????1-???‾??
	BYTE byEnable;//??IO????㊣那??0-????????1-???? (Remark:??????﹞????∫?? bySupport&0x20??㊣赤????﹞??∫????IO??﹞?????IO???????? ?㊣?迆?∫)
	BYTE byUseageType; //?????????角?????那??ITC_LANE_USEAGE_TYPE
	BYTE byEmergencyCapEn;  //??﹞????????㊣????℅?????0-﹞???1-??
	NET_ITC_PLATE_RECOG_REGION_PARAM struPlateRecog[MAX_LANEAREA_NUM]; //????????
	BYTE byRes[24];
}NET_ITC_SINGLEIO_PARAM, *LPNET_ITC_SINGLEIO_PARAM;

//??IO??﹞?????
typedef struct tagNET_ITC_POST_SINGLEIO_PARAM
{
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	NET_ITC_SINGLEIO_PARAM struSingleIO[MAX_IOIN_NUMEX]; //????IO??﹞?????
}NET_ITC_POST_SINGLEIO_PARAM, *LPNET_ITC_POST_SINGLEIO_PARAM;

typedef struct tagNET_ITC_LANE_PARAM
{
	BYTE byEnable; //??﹞?????????????0-????????1-????
	BYTE byRelatedDriveWay;//????????????
	WORD wDistance; //?????角????????????
	WORD wTrigDelayTime; //??﹞??????㊣???“????200??????????????
	BYTE byTrigDelayDistance; //??﹞??????角???“????0??????????﹞??℅
	BYTE bySpeedCapEn; //??﹞?????????℅?????0-﹞???1-??
	BYTE bySignSpeed;//㊣那????????????km/h
	BYTE bySpeedLimit;//????????????km/h
	BYTE bySnapTimes; //℅????????“????1????0-??℅?????﹞?0-??????????℅??車5
	BYTE byOverlayDriveWay; //OSD????????????
	NET_ITC_INTERVAL_PARAM struInterval; //℅???????????
	BYTE byRelatedIOOut[MAX_IOOUT_NUM]; //??????IO???????????????㊣?????角??
	BYTE byFlashMode;   //????????????????0-???㊣????1-???‾??
	BYTE byCartSignSpeed;//㊣那??????(?車??)??????km/h
	BYTE byCartSpeedLimit;//???????“?車??????????km/h
	BYTE byRelatedIOOutEx;//??0??㊣赤??IO??????1???????角????0-????????1-???? ?∫????????8??(????byRelatedIOOut℅???)
	NET_ITC_PLATE_RECOG_REGION_PARAM struPlateRecog[MAX_LANEAREA_NUM]; //????????????
	BYTE byLaneType;   //?????角????0-????????1-???????﹞??2-?????足???﹞??0xff-???????﹞
	BYTE byUseageType; //?????????角?????那??ITC_LANE_USEAGE_TYPE
					   //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
					   //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE byRelaLaneDirectionType;
	BYTE byLowSpeedLimit;                    //???????℅??????????km/h
	BYTE byBigCarLowSpeedLimit;                //?車?????℅??????????km/h
	BYTE byLowSpeedCapEn;                   //??﹞?????????℅?????0-﹞???1-??
	BYTE byEmergencyCapEn;                 //??﹞????????㊣????℅?????0-﹞???1-??
	BYTE byRes[9];
}NET_ITC_LANE_PARAM, *LPNET_ITC_LANE_PARAM;

//?“??RS485???足?‾??﹞?????
typedef struct tagNET_ITC_POST_RS485_PARAM
{
	BYTE byRelatedLaneNum;//??????????????
	BYTE byTriggerSpareMode; //??﹞?㊣?????????0-??????1-?“???谷??????????,2-?“???足??????????
	BYTE byFaultToleranceTime;//???赤?㊣??(????:﹞???)???????足?????足?‾??﹞???????℅??車?㊣??
	BYTE byRes1;
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	NET_ITC_LANE_PARAM struLane[MAX_ITC_LANE_NUM]; //??????????????
	BYTE  byRes[32];
}NET_ITC_POST_RS485_PARAM, *LPNET_ITC_POST_RS485_PARAM;

typedef struct tagNET_ITC_RADAR_PARAM
{
	BYTE    byRadarType;    //?℅???角????0-???℅??,1-∼????℅?℅????2-∼?????????3-?“?????“4,?℅????IO??????(?????????“???谷?????????足???“???????????????“??RS485?℅????????),0xff-???邦?角??
	BYTE    byLevelAngle;   //?????????迄??????,??????25??(0??90??)
	WORD    wRadarSensitivity; //?℅???谷???? 
	WORD    wRadarSpeedValidTime;//?℅?????????∫?㊣??(0~2000] ,0㊣赤?????∫??
	BYTE    byRes1[2];
	float      fLineCorrectParam;//????????????[0.0~2.0]
	int      iConstCorrectParam;//????????????[-100~100]
	BYTE    byRes2[8];
}NET_ITC_RADAR_PARAM, *LPNET_ITC_RADAR_PARAM;

typedef struct tagNET_ITC_RS485_ACCESS_INFO_COND  //?????芍??
{
	DWORD dwSize;
	DWORD dwChannel;
	DWORD dwTriggerModeType;
	BYTE  byAssociateRS485No;//??????RS485?? 1??5 (?“????)
							 //    BYTE  byModeType; //0???∟????1???℅????2?????足?‾??3?????????足???‾
	BYTE  byRes[15];
}NET_ITC_RS485_ACCESS_INFO_COND, *LPNET_ITC_RS485_ACCESS_INFO_COND;

typedef struct tagNET_ITC_RADAR_INFO_PARAM
{
	NET_ITC_RADAR_PARAM  struRadarParam;//24
	BYTE  byAssociateLaneNo;//????????????1??99 (????????????????RS485??????)
	BYTE  byRes[103];
}NET_ITC_RADAR_INFO_PARAM, *LPNET_ITC_RADAR_INFO_PARAM;

typedef union tagNET_ITC_ACCESS_DEVINFO_PARAM_UNION
{
	BYTE uLen[128];
	NET_ITC_RADAR_INFO_PARAM struRadarInfoParam;//?℅??????????
}NET_ITC_ACCESS_DEVINFO_PARAM_UNION, *LPNET_ITC_ACCESS_DEVINFO_PARAM_UNION;

typedef struct tagNET_ITC_RS485_ACCESS_CFG //144  ?????芍??
{
	DWORD dwSize;
	BYTE  byModeType;//0???∟????bit1???℅????bit2?????足?‾??bit3?????????足???‾
	BYTE  byRes[3];
	NET_ITC_ACCESS_DEVINFO_PARAM_UNION uITCAccessDevinfoParam; //64
	BYTE  byRes1[12];
}NET_ITC_RS485_ACCESS_CFG, *LPNET_ITC_RS485_ACCESS_CFG;

//2013-07-09 ?℅??????????????
typedef struct tagNET_ITC_RS485_ACCESS_INFO
{
	DWORD dwSize;
	NET_ITC_RADAR_PARAM  struRadar[MAX_ITC_LANE_NUM];//?角?????℅??????
													 //?迄??????????﹞??????????∫??????????0????????  ?“???????????∫????????
	BYTE  byRes[20];
}NET_ITC_RS485_ACCESS_INFO, *LPNET_ITC_RS485_ACCESS_INFO;


//?“??RS485?℅????﹞?????
typedef struct tagNET_ITC_POST_RS485_RADAR_PARAM
{
	BYTE byRelatedLaneNum;//??????????????
	BYTE byRes1[3];
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	NET_ITC_LANE_PARAM struLane[MAX_ITC_LANE_NUM]; //??????????????
	NET_ITC_RADAR_PARAM struRadar;  //?℅??????
	BYTE  byRes[32];
}NET_ITC_POST_RS485_RADAR_PARAM, *LPNET_ITC_POST_RS485_RADAR_PARAM;

typedef struct tagNET_ITC_VTLANE_PARAM
{
	BYTE byRelatedDriveWay;//????????????
	BYTE bySpeedCapEn; //??﹞?????????℅?????0-﹞???1-??
	BYTE bySignSpeed;//㊣那????????????km/h
	BYTE bySpeedLimit;//????????????km/h
	BYTE bySnapTimes; //℅????????“????1????0-??℅?????﹞?0-??????????℅??車5
	BYTE byBigCarSignSpeed;///*?車??㊣那????????????km/h*/
	BYTE byBigCarSpeedLimit;/*?車??????????????km/h*/
	BYTE byRelatedIOOutEx;//??0??㊣赤??IO??????1???????角????0-????????1-???? ?∫????????8??(????byRelatedIOOut℅???)
	NET_ITC_INTERVAL_PARAM struInterval; //℅???????????
	BYTE byRelatedIOOut[MAX_IOOUT_NUM]; //??????IO???????????????㊣?????角??
	BYTE byFlashMode;   //????????????????0-???㊣????1-???‾??
	BYTE byLowSpeedLimit;/*????????????km/h*/
	BYTE byBigCarLowSpeedLimit; /*?車??????????????km/h*/
								//????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
								//????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE byRelaLaneDirectionType;
	NET_ITC_PLATE_RECOG_REGION_PARAM struPlateRecog[MAX_LANEAREA_NUM]; //????????????
	NET_VCA_LINE struLine; //??????
}NET_ITC_VTLANE_PARAM, *LPNET_ITC_VTLANE_PARAM;

typedef struct tagNET_ITC_VTCOIL_INFO
{
	NET_VCA_RECT struLaneRect;  /*?谷?????????辰*/
	BYTE byTrigFlag; //??﹞?㊣那????0-???﹞??﹞???1-??????﹞???2-???﹞/????????﹞?
	BYTE byTrigSensitive;  //??﹞??谷??????1-100
	BYTE byRelatedIOOut[MAX_IOOUT_NUM]; //??????IO??????(???????㊣?????角??)????℅谷0㊣赤??IO??????1????℅谷1㊣赤??IO??????2???????角????0-????????1-????
	BYTE byFlashMode;   //????????????????0-???㊣????1-???‾??
	BYTE byLaneType;   //?????角????0-????????1-???????﹞??2-?????足???﹞??0xff-???????﹞
	BYTE byEnableRadar; //??﹞??????℅????????0-﹞???1-??
	NET_ITC_VTLANE_PARAM struLane; //??????????????
								   //?????????角?????那??ITC_LANE_USEAGE_TYPE??????1??8?????角??(3.7Ver)
	BYTE byUseageType;
	//????????﹞??辰???那??ITC_LANE_CAR_DRIVE_DIRECT(3.7Ver)
	BYTE byCarDriveDirect;
	BYTE byRes[30];
}NET_ITC_VTCOIL_INFO, *LPNET_ITC_VTCOIL_INFO;

//?“???谷????????﹞?????
typedef struct tagNET_ITC_POST_VTCOIL_PARAM
{
	BYTE    byRelatedLaneNum;//??????????????
	BYTE    byIsDisplay; //????????﹞??????谷????????0-????????1-????
	BYTE    byLoopPos; //?赤????﹞??????????辰?“????10??
	BYTE    byPolarLenType; /*???????角????0??????????????1??????????????????*/
	BYTE    byDayAuxLightMode; /*∼℅?足?“?迆???‾??????0?????“?迆???‾??1??LED?????‾??2???????????‾*/
	BYTE    byVideoLaneNO; //????????????????????????
	BYTE    byVideoLowTh; /*???????????????????????????“????40??*/
	BYTE    byVideoHighTh; /*???????????????????????????“????55??*/
	BYTE    byRecordMode; //????㊣那????0-????????1-????
	BYTE     bySnapMode;//℅?????????0-??????????1-㊣???????
						/*????﹞?????0-????????0x1-?℅????????0x2-????????*/
	BYTE    bySpeedDetector;
	BYTE    byRes2;
	WORD    wResolutionX;/* ?豕㊣??㊣?∼﹞?㊣????赤*/
	WORD    wResolutionY;/* ?豕㊣??㊣?∼﹞?㊣?????*/
	DWORD   dwDayInitExp; /*????∼℅?足?????㊣??????????2000*/
	DWORD   dwDayMaxExp; /*????∼℅?足?????㊣????℅??車??20000*/
	DWORD   dwNightExp; /*?赤???????????㊣?????豕????3000*/
	DWORD   dwSnapExp; /*℅????????㊣??*/
	BYTE    byDayInitGain; /*????∼℅?足????????????200*/
	BYTE    byDayMaxGain; /*????∼℅?足??????℅??車??400*/
	BYTE    byNightGain; /*?赤??????????*/
	BYTE    bySnapGain; /*℅???????*/
	DWORD   dwSceneMode; //???∼?????? ?那??SCENE_MODE
	NET_DVR_GEOGLOCATION struGeogLocation; //???﹞????(????????)
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	NET_ITC_VTCOIL_INFO struVtCoil[MAX_VL_NUM]; //?谷??????????
	NET_ITC_RADAR_PARAM struRadar;  //?℅??????
	NET_VCA_LINE struLine; //????????
						   //?????足???角????∼???㊣赤?????那??ITC_VIOLATION_DETECT_TYPE??0-????????1-????(3.7Ver)
	DWORD dwVioDetectType;
	BYTE  byDebugMode; /*?‾????????0-????????1-????*/
	BYTE  byRes[11];
}NET_ITC_POST_VTCOIL_PARAM, *LPNET_ITC_POST_VTCOIL_PARAM;

//??℅谷IO?足????????
typedef struct tagNET_ITC_SINGLE_IOTL_PARAM
{
	BYTE byEnable; //??﹞???????0-????????1-????
	BYTE byLightIO; //?足????IO??0-IO1,1-IO2,2-IO3,3-IO4,4-IO5,5-IO6
	BYTE byTrafficLight; //?足???????∫℅???0-???????足????????????????1-???????????????????足??
	BYTE byTrigIO;//??﹞???IO????0-IO1,1-IO2,2-IO3,3-IO4,4-IO5,5-IO6
	BYTE byTrigIOStatus;//??﹞?IO????℅????“????0????0-????????1-????????2-????????????????3-????????4-??????
	BYTE byRelatedDriveWay;//????????????
	BYTE byRecordEnable;//???足??????????㊣那????0-????????1-????
	BYTE byRecordType;//???足???????角????0-?∟????1-???㊣????
	BYTE byPreRecordTime;//???足???????????∟???㊣???“????0????????????
	BYTE byRecordDelayTime;//???足?????????????㊣?㊣???“????0????????????
	BYTE byRecordTimeOut;//???足?????????????㊣?㊣???“????
	BYTE byRedSnapTimes; //?足??℅?????????0-??℅?????﹞?0-??????????℅??車5?? 
	BYTE byGreenSnapTimes; //????℅?????????0-??℅?????﹞?0-??????????℅??車5??
	BYTE byRelatedIOOutEx;//??0??㊣赤??IO??????1???????角????0-????????1-???? ?∫????????8??(????byRelatedIOOut℅???)
	BYTE byRes1;
	BYTE byIntervalType;    //?????角???“????∼??㊣??????0-?㊣?????∫,1-?角?????∫
	WORD wRedInterval[MAX_INTERVAL_NUM];//?足???????????㊣???“????ms???辰?????????角???“????﹞??℅?????㊣byIntervalType??0?㊣??㊣赤???????㊣?????㊣byIntervalType??1?㊣??㊣赤???角??
	WORD wGreenInterval[MAX_INTERVAL_NUM];//?????????????㊣???“????ms???辰?????????角???“????﹞??℅?????㊣byIntervalType??0?㊣??㊣赤???????㊣?????㊣byIntervalType??1?㊣??㊣赤???角??
	BYTE byRelatedIOOut[MAX_IOOUT_NUM]; //??????IO???????????????㊣?????角??
	BYTE byFlashMode;   //????????????????0-???㊣????1-???‾??
	BYTE byRes2[3];
	NET_ITC_PLATE_RECOG_REGION_PARAM struPlateRecog[MAX_LANEAREA_NUM]; //???????辰????
	BYTE  byRes[32];
}NET_ITC_SINGLE_IOTL_PARAM, *LPNET_ITC_SINGLE_IOTL_PARAM;

//????IO?足????????
typedef struct tagNET_ITC_EPOLICE_IOTL_PARAM
{
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	NET_ITC_SINGLE_IOTL_PARAM struSingleIOTL[MAX_IOSPEED_GROUP_NUM]; //??℅谷IO?足????????
	BYTE  byRes[32];
}NET_ITC_EPOLICE_IOTL_PARAM, *LPNET_ITC_EPOLICE_IOTL_PARAM;

typedef enum _ITC_SERIAL_PROTOCOL_
{
	ITC_PROTOCOL_UNKNOW = 0, /*????*/
	ITC_SINGLE_COIL_PROTOCOL_MODE1 = 1, /*?????????足?‾???谷????1?“??????????_??1_??1_??1_1???????????????????????㊣℅???????????????????3?????????????????芍??*/
	ITC_DOUBLE_COIL_PROTOCOL_MODE1 = 2, /*?????????足?‾???谷????1?“??????????_??1_??1_??2_1????????1??????1??????2℅?????????1??????????3?????????????????芍???“??????*/
	ITC_DOUBLE_COIL_PROTOCOL_MODE2 = 3, /*?????????足?‾???谷????2?“??????????_??1_??2_??2_1????????1??????2??????2???㊣℅?????????1??????????3?????????????????芍??*/
	ITC_DOUBLE_COIL_PROTOCOL_MODE3 = 4, /*?????????足?‾???谷????3?“??????????_??2_??1_??2_1????????2??????1??????2???㊣℅?????????1??????????3?????????????????芍??*/
	ITC_DOUBLE_COIL_PROTOCOL_MODE4 = 5, /*?????????足?‾???谷????4?“??????????/??_??2_??2_??2_1????????2??????2??????2???㊣℅?????????1??????????3?????????????????芍??*/
	ITC_DOUBLE_COIL_PROTOCOL_MODE5 = 6, /*?????????足?‾???谷????5?“??????????/??_??2_??2_??2_2????????2??????2??????2???㊣℅?????????2??????1?迄??????????3???????????????????????????芍???“??????*/
	ITC_DOUBLE_COIL_PROTOCOL_MODE6 = 7, /*?????????足?‾???谷????6?“??????????/??_??1_??2_??2_2????????1??????2??????2???㊣℅?????????1??????1?迄??????????3???????????????????????????芍??*/
	ITC_DOUBLE_COIL_PROTOCOL_MODE7 = 8, /*?????????足?‾???谷????7?“??????????_??1_??1_??2_1????????1??????1??????2???㊣℅?????????1???????????????????“?“??????1?????足??????1??????1??????2???㊣?????????芍??*/
	ITC_DOUBLE_COIL_PROTOCOL_MODE8 = 9, /*?????????足?‾???谷????8?“??????????_??1_??1_??2_2????????1??????1??????2???㊣℅?????????1??????1?迄???????????????????“?“??????1?????足??????1??????1??????2???㊣???????????????????芍???“??????*/
	ITC_SINGLE_COIL_PROTOCOL_MODE2 = 10, /*?????????足?‾???谷????2?“??????????_??1_??1_??1_2???????????????????????㊣℅????????????????迄???????????????????“?“???????????足?????????????????????㊣???????????????????芍???“??????*/
	ITC_OTHER_PROTOCOL = 0xff /*???邦???足?‾???谷(??????demo??????????3.3???車∼?㊣???????demo???????迄???∫??????)*/
}ITC_SERIAL_PROTOCOL;

//????????????℅????角??
typedef enum _ITC_NORMAL_PASS_SERIAL_PROTOCOL_
{
	ITC_NORMAL_PASS_SERIAL_UNKNOW = 0,   //????
	ITC_NORMAL_PASS_PROTOCOL_MODE1 = 1,  //????????????℅??????????????“??????
	ITC_NORMAL_PASS_PROTOCOL_MODE2 = 2,  //??????????????????℅??????迄?????????????????????????????????????????芍??
	ITC_NORMAL_PASS_PROTOCOL_MODE3 = 3,  //????????????1℅??????????????“??????
	ITC_NORMAL_PASS_PROTOCOL_MODE4 = 4, //????????????1??????1℅??????迄????????????????1?????????????????????????芍??
	ITC_NORMAL_PASS_PROTOCOL_MODE5 = 5, //????????????2??????1℅??????迄????????????????1?????????????????????????芍??
}ITC_NORMAL_PASS_SERIAL_PROTOCOL;

//????????????℅????角??
typedef enum _ITC_INVERSE_SERIAL_PROTOCOL_
{
	ITC_INVERSE_SERIAL_UNKNOW = 0,   //????
	ITC_INVERSE_PROTOCOL_MODE1 = 1,  //??℅???
	ITC_INVERSE_PROTOCOL_MODE2 = 2,  //????1??℅?2????????2℅?????????1?????迄??????????3???????????????????????????芍??
	ITC_INVERSE_PROTOCOL_MODE3 = 3,  //????1??????2℅?????????1??????????2?????????????????芍??
}ITC_INVERSE_SERIAL_PROTOCOL;

//????????????℅????角??
typedef enum _ITC_SPEED_SERIAL_PROTOCOL_
{
	ITC_SPEED_SERIAL_UNKNOW = 0,   //????
	ITC_SPEED_PROTOCOL_MODE1 = 1,  //??℅???
	ITC_SPEED_PROTOCOL_MODE2 = 2,  //??/????????????1??????2??????2???㊣℅?????????1???????????????????“?“??????1??????????1??????2??????2???㊣?????????芍??
	ITC_SPEED_PROTOCOL_MODE3 = 3,  //??/????????????1??????2??????2???㊣℅?????????1???????????????????“?“??????1??????????1??????2?????????芍??
}ITC_SPEED_SERIAL_PROTOCOL;

//???足?‾????
typedef struct tagNET_ITC_SERIAL_INFO
{
	BYTE bySerialProtocol; //???足?‾???谷?角?????那??ITC_SERIAL_PROTOCOL
	BYTE byIntervalType;    //?????角???“????∼??㊣??????0-?㊣?????∫,1-?角?????∫
	WORD wInterval;//?????????㊣???“????ms???辰?????????角???“????﹞??℅?????㊣byIntervalType??0?㊣??㊣赤???????㊣?????㊣byIntervalType??1?㊣??㊣赤???角??
	BYTE byNormalPassProtocol; //????????℅??????谷?角?????那??ITC_NORMAL_PASS_SERIAL_PROTOCOL
	BYTE byInverseProtocol; //????℅??????谷?角?????那??ITC_INVERSE_SERIAL_PROTOCOL
	BYTE bySpeedProtocol; //????℅??????谷?角?????那??ITC_SPEED_SERIAL_PROTOCOL
	BYTE byRes[9];
}NET_ITC_SERIAL_INFO, *LPNET_ITC_SERIAL_INFO;

typedef struct tagNET_ITC_EPOLICE_LANE_PARAM
{
	BYTE byEnable; //??﹞?????????????0-????????1-????
	BYTE byRelatedDriveWay;//????????????
	WORD wDistance; //?????角???????????℅
	BYTE byRecordEnable;//???足??????????㊣那????0-????????1-????
	BYTE byRecordType;//???足???????角????0-?∟????1-???㊣????
	BYTE byPreRecordTime;//???足???????????∟???㊣???“????0????????????
	BYTE byRecordDelayTime;//???足?????????????㊣?㊣???“????0????????????
	BYTE byRecordTimeOut;//???足?????????????㊣?㊣???“????
	BYTE bySignSpeed;//㊣那??????(?“?????????????∫)??????km/h
	BYTE bySpeedLimit;//??????(?“?????????????∫)??????km/h
	BYTE byOverlayDriveWay; //OSD????????????
	NET_ITC_SERIAL_INFO struSerialInfo; //???足?‾????
	BYTE byRelatedIOOut[MAX_IOOUT_NUM]; //??????IO???????????????㊣?????角??
	BYTE byFlashMode;   //????????????????0-???㊣????1-???‾??
	BYTE bySerialType; //???足?‾?角????0-???????足?‾??1-????OEM???足?‾??2-???????足?‾
	BYTE byRelatedIOOutEx;//??0??㊣赤??IO??????1???????角????0-????????1-???? ?∫????????8??(????byRelatedIOOut℅???)
	BYTE bySnapPicPreRecord; //℅????????∟???㊣??????0-???????“??????????????1-????????????2-????????????3-??????????
	NET_ITC_PLATE_RECOG_REGION_PARAM struPlateRecog[MAX_LANEAREA_NUM]; //????????????
	BYTE byBigCarSignSpeed;    ///*?車??㊣那????????????km/h*/
	BYTE byBigCarSpeedLimit;/*?車??????????????km/h*/
	BYTE byRedTrafficLightChan;//?足???“??????1??16?“?足?????足???‾??
	BYTE byYellowTrafficLightChan;//?????“??????1??16?“?足?????足???‾??
								  //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
								  //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE byRelaLaneDirectionType;
	BYTE byRes3[11];
}NET_ITC_EPOLICE_LANE_PARAM, *LPNET_ITC_EPOLICE_LANE_PARAM;

//????/?“??????RS485???足?‾??﹞?????
typedef struct tagNET_ITC_EPOLICE_RS485_PARAM
{
	BYTE byRelatedLaneNum;//??????????????
	BYTE byTrafficLightSignalSrc;//???“?????????? 0?????足?‾ 1???足?????足???‾
	BYTE byRes1[2];
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	NET_ITC_EPOLICE_LANE_PARAM struLane[MAX_ITC_LANE_NUM]; //??????????????
	BYTE  byRes[32];
}NET_ITC_EPOLICE_RS485_PARAM, *LPNET_ITC_EPOLICE_RS485_PARAM;

//?????????????芍??
typedef struct tagNET_ITC_LANE_LOGIC_PARAM
{
	BYTE byUseageType;     //?????????角?????那??ITC_LANE_USEAGE_TYPE
	BYTE byDirectionType;  //????﹞??辰?角?????那??ITC_LANE_DIRECTION_TYPE
	BYTE byCarDriveDirect; //????????﹞??辰???那??ITC_LANE_CAR_DRIVE_DIRECT 
	BYTE byRes[33];        //㊣???
}NET_ITC_LANE_LOGIC_PARAM, *LPNET_ITC_LANE_LOGIC_PARAM;

//???????????芍??
typedef struct tagNET_ITC_LINE
{
	NET_VCA_LINE struLine; //??????
	BYTE byLineType; //???角?????那??ITC_LINE_TYPE
	BYTE byRes[7];
}NET_ITC_LINE, *LPNET_ITC_LINE;

typedef struct tagNET_ITC_SNAPMODE_PARAM
{
	BYTE     byVehicleCapMode;//?迆????℅?????????0-??????????1-㊣???????
	BYTE     byNoVehicleCapMode;//﹞??迆????℅?????????0-??????????1-㊣???????
	BYTE     byPasserCapMode;//????℅?????????0-??????????1-㊣???????
	BYTE     byRes[29];
}NET_ITC_SNAPMODE_PARAM, *LPNET_ITC_SNAPMODE_PARAM;

//size = 128
typedef struct tagNET_ITC_HVT_EC_PARAM
{
	DWORD         dwCapShutter;            //℅????足??0~65535
	WORD         wCapGain;            //℅???????0??100
	BYTE          byRes[2];
	DWORD         dwDayTimeVideoShutter;    //∼℅?足?????㊣??℅??車??
	WORD         wDayTimeVideoGain;        //∼℅?足????℅??車??
	WORD         wNightVideoGain;            //?赤??????℅??車??
	DWORD         wNightVideoShutter;        //?赤???????㊣??℅??車??
	BYTE          byRes1[108];
}NET_ITC_HVT_EC_PARAM, *LPNET_ITC_HVT_EC_PARAM;

typedef struct tagNET_ITC_LANE_HVT_PARAM
{
	BYTE byLaneNO; //???????????? 1~255?“????????????????
	BYTE bySignSpeed;    //㊣那????????????km/h 0??255  70
	BYTE bySpeedLimit;    //????????????km/h 0??255    80 ???????∫
	BYTE byBigCarSignSpeed;///*?車??㊣那????????????km/h*/
	BYTE byBigCarSpeedLimit;/*?車??????????????km/h*/
	BYTE bySpeedCapEn; //??﹞?????????℅?????0-﹞???1-??
	BYTE byCaptureCount;//℅???????1??5(????)
	BYTE byRelatedIOOut;    /*??????IO??????(???????㊣?????角??)??∼???㊣赤??IO??????????0??㊣赤??IO??????1???????角????0-????????1-????*/
	BYTE byFlashMode;        /*????????????????0-???㊣????1-???‾??*/
	BYTE byEnableRadar; //??﹞??????℅????????0-﹞???1-??
	BYTE byChangeLaneEnable;   //????㊣???℅?????????0-??㊣???1-????
	BYTE byChangeLaneCapNo;    //????㊣???℅???????2-3
	DWORD dwCapTarget;    //℅????角?? bit0 ㊣赤???迆???? bit1 ㊣赤??﹞??迆???? bit2 ㊣赤?????? 0??㊣赤???????? 1??㊣赤??????
	NET_ITC_INTERVAL_PARAM struInterval; //℅???????????
	BYTE byRes3[24];
	NET_ITC_LANE_LOGIC_PARAM struLane; //????????????byUseageType??byCarDriveDirect
	NET_ITC_LINE struLeftLaneLine;          //℅車???????????角?????谷????????????????????????
	NET_ITC_LINE struRightLaneLine;          //?????????????角?????谷????????????????????????
	NET_ITC_POLYGON struPlateRecog;         //???????辰????
	NET_ITC_POLYGON struTraceArea;          //??????﹞????????辰
	NET_VCA_LINE  struForwardTrigLine;      //???辰??﹞????????????????????????????????∼???∫????????????????∼???????????????㊣??????“??∼??????????辰??????℅?????﹞???????     
	NET_VCA_LINE  struBackwardTrigLine;     //㊣??辰??﹞????????????????????????????????∼???∫????????????????∼???????????????㊣????“??∼???????㊣??辰??????℅?????﹞???????
	NET_VCA_LINE  struLeftTrigLine;          //℅車㊣???﹞????????????????????????????????∼???∫?????㊣??????????∼???????????????㊣????“??∼?????????℅車㊣???????????℅?????﹞???????
	NET_VCA_LINE  struRightTrigLine;          //??㊣???﹞????????????????????????????????∼???∫?????㊣??????????∼???????????????㊣????“??∼???????????㊣???????????℅?????﹞???????
	BYTE byRes4[60];
}NET_ITC_LANE_HVT_PARAM, *LPNET_ITC_LANE_HVT_PARAM;

typedef struct tagNET_ITC_POST_HVT_PARAM
{
	BYTE byLaneNum;//??㊣?????????????1-6 
	BYTE bySceneMode;//0-????1-???????﹞??2-??????????
	BYTE byRoadExpBright;//?﹞???????????“?????????????‾???????????????????迆?????㊣?????????????????????‾????????????????
	BYTE byPlateExpBright;//?????????????“?????????????‾???????????????????迆?????“??????㊣????????㊣???????????????????????????????????‾????
	NET_ITC_POLYGON struDetectArea;                    //?????足?????辰  
	NET_ITC_SNAPMODE_PARAM  struCapMode;//℅???????  
	NET_ITC_HVT_EC_PARAM struEcParam;    //????????????  
	NET_ITC_LANE_HVT_PARAM struLaneParam[MAX_ITC_LANE_NUM]; //??????????
	NET_ITC_PLATE_RECOG_PARAM  struPlateRecog;    //????????
	NET_DVR_GEOGLOCATION struGeogLocation;    //???﹞?????“??????????
	BYTE byRes[324];
}NET_ITC_POST_HVT_PARAM, *LPNET_ITC_POST_HVT_PARAM;

/*************************MPR??﹞????? begin 2013-12-07****************/
typedef struct tagNET_ITC_LANE_MPR_PARAM
{
	BYTE byLaneNO;
	union
	{
		BYTE  uLen[4];
		struct
		{
			BYTE  byIONo;//IO??[1, byIoInNum+1] ℅?????1??????℅??車???迄??????????﹞???NET_DVR_SNAP_ABILITY??℅???byIoInNum
			BYTE  byTriggerType;//0-????????1-??????
			BYTE  byRes1[2];
		}struIO;//IO???????迆?∫
		struct
		{
			BYTE  byRelateChan;//???????足?‾?“????[1,16]
			BYTE  byRes2[3];
		}struRS485;
	}uTssParamInfo;
	BYTE byCarDriveDirect; //????????﹞??辰 ITC_LANE_CAR_DRIVE_DIRECT
	BYTE byRes[58];
	NET_ITC_LINE struLaneLine;//??????
	NET_ITC_POLYGON struPlateRecog;//???????辰
								   //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
								   //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE byRelaLaneDirectionType;
	BYTE byRes1[255];
}NET_ITC_LANE_MPR_PARAM, *LPNET_ITC_LANE_MPR_PARAM;

typedef struct tagNET_ITC_POST_MPR_PARAM
{
	BYTE byEnable;
	BYTE byLaneNum;
	BYTE bySourceType;//0-MPR??﹞??“??????﹞???,1-????IO??﹞??“??????????,2-????RS485????﹞?????
	BYTE byPicUploadType;//?????????角????0~??????????1-???辰??????2-㊣??辰????
	BYTE byRoadType;//???????? 0-????????1-???????﹞??2-℅??“????3-㊣“????????4-?“??, 5-??∼??角??(?????????????足??????㊣????足???????????????????∼)
	BYTE byRes2;
	WORD wCustomDelayTime;//℅??“??℅??????㊣?㊣???“??byRoadType?? "℅??“??"???㊣?辰?迆?∫????﹞??∫??[0,15000]ms
	BYTE byRes[56];
	NET_ITC_LINE struLaneBoundaryLine;//????㊣??????“℅?℅車㊣???????℅車㊣???????
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog;//????????  40
	NET_ITC_LANE_MPR_PARAM struLaneParam[MAX_ITC_LANE_NUM/*6*/];
	char szSceneName[NAME_LEN/*32*/]; //???∼????
	NET_VCA_LINE struSnapLine;//℅??????????角?迆?????豕﹞??????角℅∼???????????????迆?∫?“??4.5??NET_DVR_CAMERA_SETUPCFG?芍??????byErectMethod℅?????1?㊣ ??
	BYTE byRes1[392];
}NET_ITC_POST_MPR_PARAM, *LPNET_ITC_POST_MPR_PARAM;
/*************************MPR??﹞????? end 2013-12-07****************/

typedef struct tagNET_DVR_VIA_LANE_PARAM
{
	BYTE byLaneNO;  //??????????
	BYTE byRes[63]; //㊣??? 
	NET_ITC_LANE_LOGIC_PARAM  struLogicParam; //????????????
	NET_ITC_LINE  struLaneLine;//??????  
	NET_ITC_POLYGON  struPlateRecog;//???????辰  
	BYTE byRes1[300]; //㊣??? 
} NET_DVR_VIA_LANE_PARAM, *LPNET_DVR_VIA_LANE_PARAM;

typedef struct tagNET_DVR_VIA_VTCOIL_PARAM
{
	BYTE byEnable;    //???? 0-?????? 1-????
	BYTE byLaneNum; //??????
	BYTE byRes[62]; //㊣???     
	NET_ITC_LINE  struLaneBoundaryLine;//????㊣??????“℅?℅車㊣???????℅車㊣??????? 
	NET_DVR_VIA_LANE_PARAM  struLaneParam[MAX_ITC_LANE_NUM/*6*/];
	NET_ITC_PLATE_RECOG_PARAM  struPlateRecog;//????????      
	BYTE byRes1[624];//㊣???
}NET_DVR_VIA_VTCOIL_PARAM, *LPNET_DVR_VIA_VTCOIL_PARAM;

//????????????
typedef struct tagNET_DVR_TRIGGER_COND
{
	DWORD  dwSize;       //?芍?????車??
	DWORD  dwChannel;    //?“????
	DWORD  dwTriggerMode;//??﹞?﹞????????? ITC_TRIGGERMODE_TYPE
	BYTE   byDetSceneID;//?足?????∼??[1,4], IPC??????0
	BYTE   byRes[63];    //㊣?????
}NET_DVR_TRIGGER_COND, *LPNET_DVR_TRIGGER_COND;

typedef struct tagNET_ITC_LANE_IMT_PARAM
{
	BYTE byLaneNO;//??????????
				  //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
				  //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE byRelaLaneDirectionType;
	BYTE byRes[146];
	NET_ITC_LINE struLaneLine;//??????
	BYTE byRes1[256];
}NET_ITC_LANE_IMT_PARAM, *LPNET_ITC_LANE_IMT_PARAM;

typedef struct tagNET_ITC_POST_IMT_PARAM
{
	BYTE byEnable;
	BYTE byLaneNum;
	BYTE bySnapMode; //℅????角????0~?迆??????1~?迆﹞???
	BYTE byRes[61];
	NET_ITC_PLATE_RECOG_PARAM  struPlateRecog;//???????? 
	NET_ITC_LINE struLaneBoundaryLine;//????㊣??????“℅???㊣???????㊣???????
	NET_ITC_LANE_IMT_PARAM struLaneParam[MAX_ITC_LANE_NUM/*6*/];
	BYTE byRes1[1584];
}NET_ITC_POST_IMT_PARAM, *LPNET_ITC_POST_IMT_PARAM;

typedef struct tagNET_ITC_LANE_PRS_PARAM
{
	BYTE byLaneNO;
	union
	{
		BYTE  uLen[4];
		struct
		{
			BYTE  byIONo;//IO??[1,4]
			BYTE  byTriggerType;//0-????????1-??????
			BYTE  byRes1[2];
		}struIO;//IO???????迆?∫
		struct
		{
			BYTE  byRelateChan;//???????足?‾?“????[1,16]
			BYTE  byRes2[3];
		}struRS485;
	}uTssParamInfo;
	BYTE byRes[59];
	NET_ITC_LINE struLaneLine;//??????
	NET_ITC_POLYGON struPlateRecog;//???????辰
								   //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
								   //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE byRelaLaneDirectionType;
	BYTE byRes2[3];
	NET_ITC_LINE struTrigLine;//??﹞???
	BYTE byRes1[228];
}NET_ITC_LANE_PRS_PARAM, *LPNET_ITC_LANE_PRS_PARAM;


typedef struct tagNET_ITC_POST_PRS_PARAM
{
	BYTE byEnable;
	BYTE byLaneNum;
	BYTE bySourceType;//0-?????足??,1-????IO??﹞??“??????????,2-????RS485????﹞?????
	BYTE bySnapMode;//0-???∼????1-???∼??+????
	BYTE byCapMode;//bySourceType??0?????足???㊣??????0-??????????1-㊣???????
	BYTE byNoPlatCarCap;//??﹞???????????℅??? 0-?????? 1-????
	BYTE bySceneMode;//???∼????:0-???“?????????∼??1-??﹞??????????∼(?????????㊣?????∟)??2-???????????????????∼(∼℅?足?????迄??∼?)
	BYTE byRes[57];
	NET_ITC_LINE struLaneBoundaryLine;//????㊣??????“℅?℅車㊣???????℅車㊣???????
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog;//????????  40
	NET_ITC_LANE_PRS_PARAM struLaneParam[MAX_ITC_LANE_NUM/*6*/];
	BYTE byRes1[440];
}NET_ITC_POST_PRS_PARAM, *LPNET_ITC_POST_PRS_PARAM;

typedef struct tagNET_IPC_LANE_HVT_PARAM
{
	BYTE byLaneNO;
	BYTE byCarDriveDirect; //????????﹞??辰 ITC_LANE_CAR_DRIVE_DIRECT
	BYTE byRes[62];
	NET_ITC_LINE struLaneLine;//??????
	NET_ITC_POLYGON struPlateRecog;//???????辰
	BYTE byRes1[256];
} NET_IPC_LANE_HVT_PARAM, *LPNET_IPC_LANE_HVT_PARAM;

typedef struct _NET_ITC_PARKING_DETECTION_
{
	BYTE        byEnable; //??﹞???????0-????????1-????
	BYTE        byRes; //㊣???℅???
	WORD       wDuration;//?足???㊣??????????????s
	WORD       wAlarmIntervalTime;//?????㊣??????????????s
	BYTE        byRes1[58]; //㊣???℅???
}NET_ITC_PARKING_DETECTION, *LPNET_ITC_PARKING_DETECTION;

typedef struct tagNET_IPC_POST_HVT_PARAM
{
	BYTE  byEnable;
	BYTE  byLaneNum;
	BYTE byEnhancedMode;    //??????????0-????????1-????    
	BYTE byPicRecognition;  //????㊣“????????????㊣???0-????????1-????
	BYTE  byRes[60];
	NET_ITC_LINE struLaneBoundaryLine;//????㊣??????“℅?℅車㊣???????℅車㊣???????
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog;//????????  40
	NET_IPC_LANE_HVT_PARAM struLaneParam[MAX_ITC_LANE_NUM/*6*/];
	char    szSceneName[NAME_LEN/*32*/]; //???∼????
	NET_VCA_LINE struSnapLine;//℅???????℅????角?迆?????豕﹞??????角℅∼???????????????迆?∫?“??4.5??NET_DVR_CAMERA_SETUPCFG?芍??????byErectMethod℅?????1?㊣ ??
	NET_ITC_PARKING_DETECTION struParkingDetection;    //?????足??????
	BYTE byRes1[328];
} NET_IPC_POST_HVT_PARAM, *LPNET_IPC_POST_HVT_PARAM;

//℅????迆4.0????
typedef struct tagNET_ITC_LANE_HVT_PARAM_V50
{
	BYTE  byLaneNO;        //????????????1??255(??????????????)
	BYTE  byFlashMode;    //????????????????0-???㊣????1-???‾??
	BYTE  bySignSpeed;    //????㊣那??????????????km/h
	BYTE  bySpeedLimit;    //??????????????????km/h
	BYTE  bySignLowSpeed;    //????㊣那?????℅????????km/h
	BYTE  byLowSpeedLimit;    //???????℅??????????km/h
	BYTE  byBigCarSignSpeed;    //?車??㊣那??????????????km/h?“????????
	BYTE  byBigCarSpeedLimit;    //?車????????????????km/h?“????????
	BYTE  byBigCarSignLowSpeed;    //?車??㊣那?????℅????????km/h
	BYTE  byBigCarLowSpeedLimit;    //?車?????℅??????????km/h
	BYTE  bySnapTimes;    //?“??℅?????????1~3
	BYTE  byDriveLineSnapTime;// ????℅??????? 1~3
	BYTE  byHighSpeedSnapTime;// ??????℅???????1~3
	BYTE  byLowSpeedSnapTime;// ??????℅???????1~3
	BYTE  byBanSnapTime;// ??﹞?????℅???????  1~3
	BYTE  byReverseSnapTime;//????℅???????  1~3
	BYTE  byRelatedDriveWay;                //???????????????????????足?‾
	BYTE  byLaneType;   //?????角????0-????????1-???????﹞??2-?????足???﹞??0xff-???????﹞
						//????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
						//????????????﹞??辰??????????????????byRelatedDriveWay???????﹞㊣??????“??????
	BYTE  byRelaLaneDirectionType;
	BYTE  byRes1[27];
	BYTE  byChangeLaneEnable;   //????㊣???℅?????????0-??㊣???1-????
	BYTE  byChangeLaneCapNo;    //????㊣???℅???????2-3
								//???∼???????????????????????車?????芍???????角????﹞?㊣?????
								//?角??, ∼???㊣赤??,0-??????,1-???????? ITC_VIOLATION_DETECT_TYPE
	DWORD  dwVioDetectType;
	DWORD  dwRelatedIOOut;  //??????IO??????(???????㊣?????角??)??∼???㊣赤??IO??????????0??㊣赤??IO??????1???????角????0-????????1-????
	NET_ITC_LINE struTrigLine; //??﹞????????∼???????????????????????車?????芍???????角????﹞?㊣?????
	NET_ITC_LINE struLineLeft;                //℅車??????
	NET_ITC_POLYGON struPlateRecog;       //???????辰
	NET_ITC_LANE_LOGIC_PARAM struLane;   //????????????byUseageType??byCarDriveDirect
	NET_ITC_INTERVAL_PARAM struInterval;//℅????????????“20byte??
	BYTE byRes2[280];
}NET_ITC_LANE_HVT_PARAM_V50, *LPNET_ITC_LANE_HVT_PARAM_V50;

typedef struct tagNET_ITC_POST_HVT_PARAM_V50
{
	BYTE byLaneNum;    //??㊣?????????????1-6
	BYTE byCapType;        //℅????角????0-?迆??﹞??????“????????1-?迆????
	BYTE byCapMode;    //℅???﹞?????0-?????谷????1-?辰??℅?????2-?足???????? 
	BYTE bySecneMode;    //???∼??????0-???????﹞?“????????1-????????????2-???????﹞    
	BYTE bySpeedMode;  //??????????0-????????1-?℅????????2-????????
	BYTE byLineRuleEffect; //??﹞????辰?????∫??,???????迆㊣赤??????﹞???,0-???∫;1-???∫??bit0-℅車??﹞???;bit1-????﹞???;bit2-?????足?????辰
	BYTE byRes1[78];
	NET_ITC_LINE struLeftTrigLine;    //℅車??﹞???(???????㊣??)
	NET_ITC_LINE struRigtTrigLine;    //????﹞???(???????㊣??)
	NET_ITC_LINE struLaneBoundaryLine;        //????㊣??????“℅???㊣?????????????????
	NET_ITC_POLYGON struDetectArea;    //?????足?????辰
	NET_DVR_GEOGLOCATION struGeogLocation; //???赤?????“?????????????????㊣??
	NET_ITC_LANE_HVT_PARAM_V50 struLaneParam[MAX_ITC_LANE_NUM/*6*/]; //??????????
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog;    //????????
	BYTE byRes2[260];
} NET_ITC_POST_HVT_PARAM_V50, *LPNET_ITC_POST_HVT_PARAM_V50;


//????????
typedef struct tagNET_ITC_LANE_NOCOMITY_PEDESTRIAN_PARAM
{
	BYTE byRelatedDriveWay;//????????????
						   //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
						   //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE byRelaLaneDirectionType;
	BYTE byPedestriansNum;//??????????????﹞??∫1-100????????1
	BYTE byVehicleSpeed;//??????????????﹞??∫0-100????????0
	DWORD dwVehicleInterval; //?迆???足????????﹞??∫0-65536????????0
	BYTE byPedesDetRule; //?????足?????辰???迆㊣赤?????足?????辰??????????﹞??辰?? 0~?辰℅車?? 1~?辰????
	BYTE byRes[3];
	NET_ITC_LINE struLaneLine;//??????
	NET_ITC_LINE struStopLine;//??????
	NET_ITC_POLYGON struPlateRecog;       //???????辰 
	BYTE byRes1[280];
} NET_ITC_LANE_NOCOMITY_PEDESTRIAN_PARAM,
*LPNET_ITC_LANE_NOCOMITY_PEDESTRIAN_PARAM;

//??????????????
typedef struct tagNET_ITC_NOCOMITY_PEDESTRIAN_PARAM
{
	BYTE byEnable;    //????
	BYTE byLaneNum;// ????????℅?????﹞??∫1-3????????3
	BYTE byRes[74];
	NET_ITC_LINE struLaneBoundaryLine;//??????㊣?????
	NET_ITC_LINE struTriggerLine;//????????????﹞???
	NET_ITC_POLYGON struPedesDetRecog;//?????足?????辰
	NET_ITC_LANE_NOCOMITY_PEDESTRIAN_PARAM struLaneParam[MAX_ITC_LANE_NUM/*6*/];    //????????
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	BYTE byRes1[400];
}NET_ITC_NOCOMITY_PEDESTRIAN_PARAM,
*LPNET_ITC_NOCOMITY_PEDESTRIAN_PARAM;

//????IO??????????????
typedef struct tagNET_ITC_SINGLE_IO_LIGHT_PARAM
{
	BYTE byLightType; //???“?????辰?角??,0-℅車℅???,1-?㊣????,2-??℅???
	BYTE byRelatedIO; //??????IO????
	BYTE byRedLightState; //?足??????℅?????0-???????足????1-???????足??
	BYTE byRes[17];
}NET_ITC_SINGLE_IO_LIGHT_PARAM, *LPNET_ITC_SINGLE_IO_LIGHT_PARAM;

//IO??????????????
typedef struct tagNET_ITC_IO_LIGHT_PARAM
{
	NET_ITC_SINGLE_IO_LIGHT_PARAM struIOLight[MAX_LIGHT_NUM]; //????IO??????????????
	BYTE byRes[8];
}NET_ITC_IO_LIGHT_PARAM, *LPNET_ITC_IO_LIGHT_PARAM;

//????485??????????????
typedef struct tagNET_ITC_SINGLE_RS485_LIGHT_PARAM
{
	BYTE byLightType; //???“?????辰?角????0-℅車℅?????1-?㊣??????2-??℅???
	BYTE byRelatedLightChan; //???????足?????足???‾?“????
	BYTE byInputLight;    //?????????????角????0-???足????1-??????
	BYTE byRelatedYLightChan; //???????????足???‾?“????
	BYTE byRes[16];
}NET_ITC_SINGLE_RS485_LIGHT_PARAM, *LPNET_ITC_SINGLE_RS485_LIGHT_PARAM;

//485??????????????
typedef struct tagNET_ITC_RS485_LIGHT_PARAM
{
	NET_ITC_SINGLE_RS485_LIGHT_PARAM struRS485Light[MAX_LIGHT_NUM]; //????485??????????????
	BYTE byRes[8];
}NET_ITC_RS485_LIGHT_PARAM, *LPNET_ITC_RS485_LIGHT_PARAM;

typedef struct tagNET_POS_PARAM
{
	WORD wLeft;
	WORD wTop;
	WORD wRight;
	WORD wBottom;
}NET_POS_PARAM, *LPNET_POS_PARAM;

//??℅谷?????足?????“???????????芍??
typedef struct tagNET_ITC_SINGLE_VIDEO_DETECT_LIGHT_PARAM
{
	BYTE byLightNum; //???“??????
	BYTE byStraightLight; //??﹞????㊣??㊣那??????0-﹞? ??1-??
	BYTE byLeftLight; //??﹞???℅車℅?㊣那??????0-﹞???1-??
	BYTE byRightLight; //??﹞?????℅?㊣那??????0-﹞???1-??
	BYTE byRedLight;//??﹞????足????0-﹞???1-??
	BYTE byGreenLight; //??﹞?????????0-﹞???1-??
	BYTE byYellowLight; //??﹞?????????0-﹞???1-??
	BYTE byYellowLightTime;//????﹞??∫?“0??10s???“ITC3.7Ver??
	NET_POS_PARAM struLightRect; //???“?????辰
	BYTE byRes[24];
}NET_ITC_SINGLE_VIDEO_DETECT_LIGHT_PARAM, *LPNET_ITC_SINGLE_VIDEO_DETECT_LIGHT_PARAM;


//?????足?????“???????????芍??(℅??車????12?????辰?足????488℅???)
typedef struct tagNET_ITC_VIDEO_DETECT_LIGHT_PARAM
{
	NET_ITC_SINGLE_VIDEO_DETECT_LIGHT_PARAM struTrafficLight[MAX_VIDEO_DETECT_LIGHT_NUM]; //?????????足????????????
	BYTE byRes[8];
}NET_ITC_VIDEO_DETECT_LIGHT_PARAM, *LPNET_ITC_VIDEO_DETECT_LIGHT_PARAM;

//???“??????????????
typedef union tagNET_ITC_LIGHT_ACCESSPARAM_UNION
{
	DWORD uLen[122];
	NET_ITC_IO_LIGHT_PARAM struIOLight; //IO??????????????
	NET_ITC_RS485_LIGHT_PARAM struRS485Light; //485??????????????
	NET_ITC_VIDEO_DETECT_LIGHT_PARAM struVideoDelectLight; //?????足????????????
}NET_ITC_LIGHT_ACCESSPARAM_UNION, *LPNET_ITC_LIGHT_ACCESSPARAM_UNION;

//???“???????????芍??
typedef struct tagNET_ITC_TRAFFIC_LIGHT_PARAM
{
	BYTE bySource; //???“??????????????0-IO??????1-RS485????
	BYTE byRes1[3];
	NET_ITC_LIGHT_ACCESSPARAM_UNION struLightAccess;//??????????????
	BYTE byRes[32];
}NET_ITC_TRAFFIC_LIGHT_PARAM, *LPNET_ITC_TRAFFIC_LIGHT_PARAM;

//?????足?????????芍??
typedef struct tagNET_ITC_VIOLATION_DETECT_LINE
{
	NET_ITC_LINE  struLaneLine; //??????????
	NET_ITC_LINE  struStopLine; //??????????
	NET_ITC_LINE  struRedLightLine; //???足????﹞???????
	NET_ITC_LINE  struCancelLine; //?㊣????﹞???????????
	NET_ITC_LINE struWaitLine; //????????????????
	NET_ITC_LINE struRes[8];
}NET_ITC_VIOLATION_DETECT_LINE, *LPNET_ITC_VIOLATION_DETECT_LINE;

//???????足??????
typedef struct tagNET_ITC_REDLIGHT_PEDESTRIAN_PARAM
{
	BYTE byEnable;    //????
	BYTE bySnapNumTimes; //℅?????????1-3??????3??
	BYTE byPedesDir; //????﹞??辰??0~???辰??1~㊣??辰??2~???辰
	BYTE byDelayTime; //???㊣?㊣??1-5s
	BYTE byStackTargetEnble;//??????㊣那?辰?“??℅????????????????辰℅????足????????????0~????????1~????
	BYTE byCalibRecogCtrl;//㊣那?“???辰??????0~????㊣那?“???辰??1~?赤??㊣那?“???辰
	BYTE byRes1[2];
	NET_ITC_TRAFFIC_LIGHT_PARAM struTrafficLight; //???“??????????
	NET_ITC_LINE struStopLine;//??????
	NET_ITC_POLYGON struCalibRecog[MAX_CALIB_RECOG_NUM/*2*/];//㊣那?“???辰
	BYTE byRes[440];
}NET_ITC_REDLIGHT_PEDESTRIAN_PARAM,
*LPNET_ITC_REDLIGHT_PEDESTRIAN_PARAM;

typedef struct tagNET_ITC_POST_MOBILE_PARAM
{
	BYTE  byEnable;
	BYTE  bySceneMode;//???∼???? 0-???????﹞ 1-???????﹞
					  /*℅????角??
					  bit0-?“??,bit1-?車??????,bit2-?????﹞??
					  */
	WORD  wExpressWayCapType;//???????﹞
							 /*℅????角??
							 bit0-?“??,bit1-?迆??﹞?,bit2-????℅“??????
							 */
	WORD  wUrbanRoadCapType;//???????﹞
	BYTE  byCapNum;//℅??????? [2,3]
	BYTE  byRecordEnable;//???????????? 0-??㊣???1-????
	DWORD dwPreRecordTime;//?????∟???㊣??(s)
	DWORD dwOverRecordTime;//???????㊣?㊣??(s)
	NET_ITC_LANE_LOGIC_PARAM struLane;   //????????
	NET_ITC_POLYGON struPolygon[MAX_MOBILE_POLYGON_NUM/*3*/]; //???????辰????
	NET_ITC_VIOLATION_DETECT_LINE struLine[MAX_MOBILE_DETECTLINE_NUM/*3*/]; //?????足????
	NET_ITC_LINE struLaneBoundaryLine;        //????㊣??????“℅???㊣?????????????????
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	NET_ITC_INTERVAL_PARAM struInterval;//℅????????????“20byte??
	BYTE  byRes[256];
}NET_ITC_POST_MOBILE_PARAM, *LPNET_ITC_POST_MOBILE_PARAM;

typedef union tagNET_ITC_TRIGGER_PARAM_UNION
{
	DWORD  uLen[1070];            //????
	NET_ITC_POST_IOSPEED_PARAM      struIOSpeed;    //?“?“????IO???????? 
	NET_ITC_POST_SINGLEIO_PARAM     struSingleIO;   //?“?“??????IO????
	NET_ITC_POST_RS485_PARAM        struPostRs485;  //?“?“????RS485???足?‾????
	NET_ITC_POST_RS485_RADAR_PARAM  struPostRadar;  //?“?“????RS485?℅??????
	NET_ITC_POST_VTCOIL_PARAM       struVtCoil;     //?“?“?????谷??????????
	NET_ITC_POST_HVT_PARAM          struHvt;        //?“?“?????足???“??????
	NET_ITC_EPOLICE_IOTL_PARAM      struIOTL;        //?“??????IO?足????????
	NET_ITC_EPOLICE_RS485_PARAM     struEpoliceRs485; //?“??????RS485???足?‾??﹞?????
	NET_ITC_EPOLICE_RS485_PARAM     struPERs485;    //?“?“????????RS485???足?‾??﹞?????
	NET_ITC_POST_MPR_PARAM          struPostMpr;    //?角???足????﹞??“MPR??
	NET_DVR_VIA_VTCOIL_PARAM        struViaVtCoil;  //(VIA)?????足??????
	NET_ITC_POST_IMT_PARAM          struPostImt;//?????角????﹞?
	NET_ITC_POST_PRS_PARAM          struPostPrs;//?????足????﹞?
	NET_IPC_POST_HVT_PARAM          struIpcHvt;//(IPC) ?足???“??????
	NET_ITC_POST_HVT_PARAM_V50      struHvtV50;  /*?“?“?????足???“??????V50*/
	NET_ITC_POST_MOBILE_PARAM       struPostMobile;// ???????“??﹞?????
	NET_ITC_NOCOMITY_PEDESTRIAN_PARAM struNoComityPed;//??????????????
	NET_ITC_REDLIGHT_PEDESTRIAN_PARAM struRedLightPed;//???????足??????
}NET_ITC_TRIGGER_PARAM_UNION, *LPNET_ITC_TRIGGER_PARAM_UNION;

//??????﹞??????芍??
typedef struct tagNET_ITC_SINGLE_TRIGGERCFG
{
	BYTE  byEnable;    //??﹞?????????﹞???????0-﹞???1-??
	BYTE  byRes1[3];
	DWORD dwTriggerType; //??﹞??角?????那??ITC_TRIGGERMODE_TYPE
	NET_ITC_TRIGGER_PARAM_UNION uTriggerParam; //??﹞?????
	BYTE  byRes[64];
}NET_ITC_SINGLE_TRIGGERCFG, *LPNET_ITC_SINGLE_TRIGGERCFG;

//??﹞??????芍??
typedef struct tagNET_ITC_TRIGGERCFG
{
	DWORD   dwSize;            //?芍???∟??
	NET_ITC_SINGLE_TRIGGERCFG  struTriggerParam;  //??????﹞?????
	BYTE    byRes[32];
}NET_ITC_TRIGGERCFG, *LPNET_ITC_TRIGGERCFG;


//?????足???角???那?“??
typedef enum _ITC_VIOLATION_DETECT_TYPE_
{
	ITC_VIOLATION_POST = 0x01, //?“??℅???
	ITC_VIOLATION_DRIVELINE = 0x02,//????????℅???
	ITC_VIOLATION_REVERSE = 0x04,//????℅???
	ITC_VIOLATION_REDLIGHT = 0x08,//???足??℅???
	ITC_VIOLATION_DIRECTION = 0x10,//??∼????辰????℅???
	ITC_VIOLATION_INTERSECTION_CONGEST = 0x20,//?﹞??????℅???
	ITC_VIOLATION_NONDRIVEWAY = 0x40,  //?迆??﹞?℅???
	ITC_VIOLATION_CHANGELANE = 0x80, //??﹞“㊣???
	ITC_VIOLATION_BAN = 0x100, //??﹞“????
	ITC_VIOLATION_INTERSECTION_PARK = 0x200,//?足??????
	ITC_VIOLATION_GREEN_PARK = 0x400,//????????
	ITC_VIOLATION_HIGH_SPEED = 0x800, /*????*/
	ITC_VIOLATION_LOW_SPEED = 0x1000, /*????*/
	ITC_VIOLATION_EMERGENCY = 0x2000, /*???????㊣????*/
	ITC_VIOLATION_TURN_AROUND = 0x8000,/*??﹞“???﹞*/
	ITC_VIOLATION_CONGESTION = 0x10000 /*????*/
}ITC_VIOLATION_DETECT_TYPE;


//?????足???????芍??
typedef struct tagNET_ITC_VIOLATION_DETECT_PARAM
{
	DWORD dwVioDetectType; //?????足???角??, ∼???㊣赤??, ?那??ITC_VIOLATION_DETECT_TYPE ,0-??????,1-????
	BYTE byDriveLineSnapTimes; //????????℅???????,2-3
	BYTE byReverseSnapTimes; //????℅???,2-3
	WORD wStayTime; //?迆??﹞??????㊣???“???㊣???車℅???????????s
	BYTE byNonDriveSnapTimes;//?迆??﹞?℅???????2-3
	BYTE byChangeLaneTimes;//??﹞“㊣???℅??????? 2-3
	BYTE bybanTimes;//??﹞“????℅???????2-3
	BYTE byDriveLineSnapSen;// ?????谷????(0~100)(3.7Ver)
	WORD wSnapPosFixPixel; //??2,3??℅???????℅???????(??﹞????????㊣???∫)?“???????????? ?邦???豕????
	BYTE bySpeedTimes;//??﹞“????℅???????2-3(3.8Ver)
	BYTE byTurnAroundEnable;//???????﹞???? 0~??㊣? 1~????
	BYTE byThirdPlateRecogTime;//???????????㊣?? 0~180s
	BYTE byPostSnapTimes;//?“??℅???????,1-2??
	BYTE byRes1[18];
	WORD wStopLineDis;  //??????2????????????????????℅????角????[0,300]????(????)
	BYTE byRes[14];
}NET_ITC_VIOLATION_DETECT_PARAM, *LPNET_ITC_VIOLATION_DETECT_PARAM;

//????????﹞??辰?角???“??
typedef enum _ITC_RELA_LANE_DIRECTION_TYPE_
{
	ITC_RELA_LANE_DIRECTION_UNKNOW = 0,   //???邦
	ITC_RELA_LANE_EAST_WEST = 1,    //?????辰?‾
	ITC_RELA_LANE_WEST_EAST = 2,    //???‾?辰??
	ITC_RELA_LANE_SOUTH_NORTH = 3,    //?????辰㊣㊣
	ITC_RELA_LANE_NORTH_SOUTH = 4,    //??㊣㊣?辰??
	ITC_RELA_LANE_EASTSOUTH_WESTNORTH = 5,    //???????辰?‾㊣㊣
	ITC_RELA_LANE_WESTNORTH_EASTSOUTH = 6,    //???‾㊣㊣?辰????
	ITC_RELA_LANE_EASTNORTH_WESTSOUTH = 7,    //????㊣㊣?辰?‾??
	ITC_RELA_LANE_WESTSOUTH_EASTNORTH = 8     //???‾???辰??㊣㊣
} ITC_RELA_LANE_DIRECTION_TYPE;


//?????????角???“??
typedef enum _ITC_LANE_USEAGE_TYPE_
{
	ITC_LANE_USEAGE_UNKNOW = 0,   //????
	ITC_LANE_CARRIAGEWAY = 1,  //????????
	ITC_LANE_BUS = 2,  //??????℅“????
	ITC_LANE_FAST = 3,  //?足????
	ITC_LANE_SLOW = 4,  //??????
	ITC_LANE_MOTOR = 5,   //????????
	ITC_LANE_NONMOTOR = 6,  //﹞??迆??????
	ITC_LANE_REVERSE_LANE = 7, //﹞??辰????
	ITC_LANE_BAN_TRUCKS = 8, // ????????????
	ITC_LANE_MIX = 9, //?足??????
	ITC_LANE_EMERGENCY = 10, //???㊣????
	ITC_LANE_BAN_LEFT = 11, // ??℅車????
	ITC_LANE_BAN_RIGHT = 12 // ????????
}ITC_LANE_USEAGE_TYPE;

//????﹞??辰?角???“??
typedef enum _ITC_LANE_DIRECTION_TYPE_
{
	ITC_LANE_DIRECTION_UNKNOW = 0,   //????
	ITC_LANE_LEFT = 1,  //℅車℅?
	ITC_LANE_STRAIGHT = 2,  //?㊣??
	ITC_LANE_LEFT_STRAIGHT = 3, //℅車℅?+?㊣??
	ITC_LANE_RIGHT = 4,  //??℅?
	ITC_LANE_LEFT_RIGHT = 5, //℅車℅?+??℅?
	ITC_LANE_RIGHT_STRAIGHT = 6, //??℅?+?㊣??
	ITC_LANE_LEFT_RIGHT_STRAIGHT = 7, //℅車℅?+??℅?+?㊣??
	ITC_LANE_LEFT_WAIT = 9,  //℅車℅?????
	ITC_LANE_STRAIGHT_WAIT = 10, //?㊣??????
	ITC_LANE_FORWARD = 11, //???辰????
	ITC_LANE_BACKWARD = 12, //㊣??辰????
	ITC_LANE_BOTHWAY = 13, //???辰????
	ITC_LANE_STRAIGHT_WAIT_RIGHT = 14 //?㊣?????? + ??℅?
}ITC_LANE_DIRECTION_TYPE;

//????????﹞??辰?角???“?? 
typedef enum _ITC_LANE_CAR_DRIVE_DIRECT_
{
	ITC_LANE_DRIVE_UNKNOW = 0, //????
	ITC_LANE_DRIVE_UP_TO_DOWN = 1, //?????迄??????(????)
	ITC_LANE_DRIVE_DOWN_TO_UP = 2  //?????迄??????(????)        
}ITC_LANE_CAR_DRIVE_DIRECT;

//???角???“??
typedef enum _ITC_LINE_TYPE_
{
	ITC_LINT_UNKNOW = 0,   //????
	ITC_LINE_WHITE = 1,  //????????∼℅????
	ITC_LINE_STOP = 2, //??????????
	ITC_LINE_SINGLE_YELLOW = 3, //??????
	ITC_LINE_DOUBLE_YELLOW = 4, //??????
	ITC_LINE_GUARD_RAIL = 5, //???????????∟??
	ITC_LINE_NO_CROSS = 6, //??????﹞“????????????
	ITC_LINE_DOTTED = 7 //?谷??
}ITC_LINE_TYPE;


//??????????????????﹞??????芍??
typedef struct tagNET_ITC_LANE_VIDEO_EPOLICE_PARAM
{
	BYTE byLaneNO; //????????????
	BYTE bySensitivity; //?????谷??????[1,100]
	BYTE byEnableRadar;//?????℅??????0-????????1-????
					   //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
					   //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE byRelaLaneDirectionType;
	NET_ITC_LANE_LOGIC_PARAM struLane; //????????
	NET_ITC_VIOLATION_DETECT_PARAM struVioDetect; //?????足??????
	NET_ITC_VIOLATION_DETECT_LINE struLine; //?????足????
	NET_ITC_POLYGON struPlateRecog; //???????辰????
	BYTE byRecordEnable;//???足??????????㊣那????0-????????1-????
	BYTE byRecordType;//???足???????角????0-?∟????1-???㊣????
	BYTE byPreRecordTime;//???足???????????∟???㊣???“????0????????????
	BYTE byRecordDelayTime;//???足?????????????㊣?㊣???“????0????????????
	BYTE byRecordTimeOut;//???足?????????????㊣?㊣???“????
	BYTE byCarSpeedLimit; //????????????????km/h
	BYTE byCarSignSpeed;//㊣那????????????km/h
	BYTE bySnapPicPreRecord; //℅????????∟???㊣??????0-???????“??????????????1-????????????2-????????????3-??????????
	NET_ITC_INTERVAL_PARAM struInterval;//℅????????????“20byte??
	BYTE byRes[36];
}NET_ITC_LANE_VIDEO_EPOLICE_PARAM, *LPNET_ITC_LANE_VIDEO_EPOLICE_PARAM;

//??????????﹞??????芍??
typedef struct tagNET_ITC_VIDEO_EPOLICE_PARAM
{
	BYTE byEnable;    //??﹞???????0-????????1-????
	BYTE byLaneNum; //??㊣???????????
	BYTE byLogicJudge;//???足?????????????????豕????????0-∼?﹞??辰??1-∼?????
	BYTE byRes1;
	NET_ITC_PLATE_RECOG_PARAM struPlateRecog; //????????
	NET_ITC_TRAFFIC_LIGHT_PARAM struTrafficLight; //???“??????????
	NET_ITC_LANE_VIDEO_EPOLICE_PARAM struLaneParam[MAX_ITC_LANE_NUM]; //??????????
	NET_ITC_LINE  struLaneBoundaryLine; //????㊣??????“℅???㊣???????㊣???????
	NET_ITC_LINE  struLeftLine; //℅車℅???﹞?????
	NET_ITC_LINE  struRightLine; //??℅???﹞?????
	NET_ITC_LINE  struTopZebraLine; //????∼??赤??
	NET_ITC_LINE  struBotZebraLine; //????∼??赤??
	BYTE  byRes[32];
}NET_ITC_VIDEO_EPOLICE_PARAM, *LPNET_ITC_VIDEO_EPOLICE_PARAM;

typedef union tagNET_ITC_VIDEO_TRIGGER_PARAM_UNION
{
	DWORD  uLen[1150];
	NET_ITC_VIDEO_EPOLICE_PARAM struVideoEP; //????????????
}NET_ITC_VIDEO_TRIGGER_PARAM_UNION, *LPNET_ITC_VIDEO_TRIGGER_PARAM_UNION;

typedef struct tagNET_ITC_VIDEO_TRIGGER_PARAM
{
	DWORD dwSize;
	DWORD dwMode; //??﹞????????那??ITC_TRIGGERMODE_TYPE
	NET_ITC_VIDEO_TRIGGER_PARAM_UNION uVideoTrigger; //??﹞?????????
	BYTE  byRes[32];
}NET_ITC_VIDEO_TRIGGER_PARAM, *LPNET_ITC_VIDEO_TRIGGER_PARAM;

typedef struct tagNET_DVR_STATUS_DETECTCFG
{
	DWORD  dwSize;            //?芍???∟??
	BYTE   byEnableTrigIODetect; //??????﹞?IO℅????足????1-????0-﹞?
	BYTE   byEnableFlashOutDetect; //????????????℅????足????1-????0-﹞?
	BYTE   byEnableRS485Detect; //????RS485????℅????足????1-????0-﹞?
	BYTE   byEnableTrafficLightDetect;//???????“??℅????足????1-????0-﹞?
	BYTE   byRes[28];
}NET_DVR_STATUS_DETECTCFG, *LPNET_DVR_STATUS_DETECTCFG;

typedef enum _ITC_STATUS_DETECT_TYPE_
{
	ITC_STATUS_DETECT_NULL = 0,        //????
	ITC_STATUS_DETECT_TRIGGERIO,    //??﹞?IO
	ITC_STATUS_DETECT_FLASHOUT,     //????????
	ITC_STATUS_DETECT_RS485, //RS485
	ITC_STATUS_DETECT_TRIGGERTYPE, //??﹞??角???“㊣?????
	ITC_STATUS_DETECT_TRAFFICLIGHT_COLOR,  //???“???“??﹞???????
	ITC_STATUS_DETECT_TRAFFICLIGHT_TURN  //???“???“??﹞?℅??辰??
}ITC_STATUS_DETECT_TYPE;

typedef struct tagNET_ITC_TRIGGERIO_INFO
{
	BYTE byTriggerIOIndex[MAX_IOIN_NUM]; //??﹞?IO??
	BYTE byRes[40];
}NET_ITC_TRIGGERIO_INFO, *LPNET_ITC_TRIGGERIO_INFO;

typedef struct tagNET_ITC_FLASHOUT_INFO
{
	BYTE byFlashOutIndex[MAX_IOOUT_K_NUM]; //??????????
	BYTE byRes[40];
}NET_ITC_FLASHOUT_INFO, *LPNET_ITC_FLASHOUT_INFO;

typedef struct tagNET_ITC_SERIAL_CHECKINFO
{
	BYTE bySerialIndex[MAX_ITC_SERIALCHECK_NUM]; //485???????谷?芍????0-???∫,1-???∫, bySerialIndex[0]㊣赤?????﹞???﹞, bySerialIndex[1]㊣赤?????﹞????
	BYTE byRes[40];
}NET_ITC_SERIAL_CHECKINFO, *LPNET_ITC_SERIAL_CHECKINFO;

typedef struct tagNET_ITC_TRIGGERTYPE_INFO
{
	BYTE byTrigTypeIndex; //??﹞??角????
	BYTE byRes[47];
}NET_ITC_TRIGGERTYPE_INFO, *LPNET_ITC_TRIGGERTYPE_INFO;

//????????
typedef struct tagNET_ITC_TRAFFIC_LIGHT_COLOR
{
	BYTE  byLeftLight;//℅車℅?????0 ㊣赤?????∫??1???足?? 2?????? 3 ???? 4????????
	BYTE  byRightLight; //??℅?????0 ㊣赤?????∫??1???足?? 2?????? 3 ???? 4????????
	BYTE  byStraightLight; //?㊣??????0 ㊣赤?????∫??1???足?? 2?????? 3 ???? 4????????
	BYTE  byRes[45];
}NET_ITC_TRAFFIC_LIGHT_COLOR, *LPNET_ITC_TRAFFIC_LIGHT_COLOR;

//﹞?????????
typedef struct tagNET_ITC_TRAFFIC_LIGHT_TURN
{
	BYTE byLightType[MAX_ITC_LANE_NUM];// 0 ㊣赤?????∫??1???足?? 2?????? 3 ???? 4????????
	BYTE byRes[42];
} NET_ITC_TRAFFIC_LIGHT_TURN, *LPNET_ITC_TRAFFIC_LIGHT_TURN;

typedef union tagNET_ITC_STATUS_UNION
{
	BYTE   uLen[48];            //????
	NET_ITC_TRIGGERIO_INFO struTrigIO; //??﹞?IO????
	NET_ITC_FLASHOUT_INFO struFlashOut; //????????
	NET_ITC_SERIAL_CHECKINFO struSerial;  //????
	NET_ITC_TRIGGERTYPE_INFO struTrigType; //??﹞??角???“㊣?????
	NET_ITC_TRAFFIC_LIGHT_COLOR struTrafficLightColor; //???“???“??﹞????????????角??ITC_STATUS_DETECT_TRAFFICLIGHT_COLOR
	NET_ITC_TRAFFIC_LIGHT_TURN struTrafficLightTurn;//???“???“??﹞?℅??辰???????角??ITC_STATUS_DETECT_TRAFFICLIGHT_TURN
}NET_ITC_STATUS_UNION, *LPNET_ITC_STATUS_UNION;

typedef struct tagNET_ITC_STATUS_DETECT_RESULT
{
	ITC_STATUS_DETECT_TYPE dwStatusType;//℅????足???角?????那??ITC_STATUS_DETECT_TYPE
	NET_ITC_STATUS_UNION uStatusParam; //℅????足???芍??
	DWORD dwHoldTime; //?????????㊣???“㊣?????????????ms
	BYTE byRes[32];
}NET_ITC_STATUS_DETECT_RESULT, *LPNET_ITC_STATUS_DETECT_RESULT;

typedef struct tagNET_DVR_SETUPALARM_PARAM
{
	DWORD dwSize;
	BYTE  byLevel; //??﹞?????????0-???????“??????1-???????“??????2-???????“????
	BYTE  byAlarmInfoType; //????㊣“???????角???“℅????迆?∫??????0-??㊣“???????“NET_DVR_PLATE_RESULT????1-??㊣“??????(NET_ITS_PLATE_RESULT)2012-9-28
	BYTE  byRetAlarmTypeV40; //0--﹞???NET_DVR_ALARMINFO_V30?辰NET_DVR_ALARMINFO, 1--?豕㊣??∫??NET_DVR_ALARMINFO_V40?辰﹞???NET_DVR_ALARMINFO_V40?????∫???辰﹞???NET_DVR_ALARMINFO_V30?辰NET_DVR_ALARMINFO
	BYTE  byRetDevInfoVersion; //CVR????㊣“?????????‾?芍????∼?㊣??? 0-COMM_ALARM_DEVICE?? 1-COMM_ALARM_DEVICE_V40
	BYTE  byRetVQDAlarmType; //VQD㊣“???????角????0-????㊣“㊣“??NET_DVR_VQD_DIAGNOSE_INFO??1-????㊣“??NET_DVR_VQD_ALARM
							 //1-㊣赤???????足??㊣“??????(INTER_FACE_DETECTION),0-㊣赤???????∫???芍??(INTER_FACESNAP_RESULT)
	BYTE  byFaceAlarmDetection;
	//Bit0- ㊣赤????????﹞???﹞?????????: 0-??????1-??????
	//Bit1- ㊣赤???????????????﹞???迆????0-????????1-????
	//Bit6- ㊣赤???℅???足??㊣“??(eventType:radarDetection)??﹞????????㊣??????0-????????1-?????“????web???????㊣?????℅????㊣那?足????
	BYTE  bySupport;
	//?????????角?? 
	//bit0-?????足???“IPC?? ?“0-????????1-??????
	//bit1-???‾?????“IPC??  ?“0-????????1-??????
	//bit2-???????????“IPC?? ?“0-????????1-??????
	//bit3-????℅????“IPC?? ?“0-????????1-??????
	//bit4-??????㊣??“IPC?? ?“0-????????1-??????
	BYTE  byBrokenNetHttp;
	WORD  wTaskNo;    //???????赤?? ?? (????????NET_DVR_VEHICLE_RECOG_RESULT????℅???dwTaskNo???? ???㊣ ??﹞??????芍?? NET_DVR_VEHICLE_RECOG_COND????℅???dwTaskNo????)
	BYTE  byDeployType;    //??﹞??角????0-???∫????﹞???1-???㊣??﹞?
	BYTE  byRes1[3];
	BYTE  byAlarmTypeURL;//bit0-㊣赤??????℅???㊣“???????“INTER_FACESNAP_RESULT????0-㊣赤??????????????1-㊣赤??URL?????“?豕㊣??∫?????谷???????豕㊣??∫???????迄??????㊣“????????????,???㊣?豕㊣??豕???∫??URL???角??﹞??????㊣?∼???㊣???????∼??
						 //bit1-㊣赤??EVENT_JSON???????????∟???角????0-㊣赤??????????????1-㊣赤??URL?????“?豕㊣??∫?????谷???????豕㊣??∫???????迄??????㊣“??????????????
						 //bit2 - ????㊣???(㊣“???角????COMM_SNAP_MATCH_ALARM)???????????????角????0 - ????????????1 - URL????
						 //bit3 - ????﹞???(㊣“???角????COMM_ALARM_RULE)???????????????角????0 - ????????????1 - URL??????㊣?℅????豕㊣???﹞??∫?????????赤????????????<isSupportBehaviorUploadByCloudStorageURL>??????﹞?﹞???????true
	BYTE  byCustomCtrl;//Bit0- ㊣赤???∫???㊣????????℅???????: 0-??????,1-????
}NET_DVR_SETUPALARM_PARAM, *LPNET_DVR_SETUPALARM_PARAM;

typedef struct tagNET_DVR_SETUPALARM_PARAM_V50
{
	DWORD dwSize;
	BYTE  byLevel; //??﹞?????????0-???????“??????1-???????“??????2-???????“????
	BYTE  byAlarmInfoType; //????㊣“???????角???“℅????迆?∫??????0-??㊣“???????“NET_DVR_PLATE_RESULT????1-??㊣“??????(NET_ITS_PLATE_RESULT)2012-9-28
	BYTE  byRetAlarmTypeV40; //0--﹞???NET_DVR_ALARMINFO_V30?辰NET_DVR_ALARMINFO, 1--?豕㊣??∫??NET_DVR_ALARMINFO_V40?辰﹞???NET_DVR_ALARMINFO_V40?????∫???辰﹞???NET_DVR_ALARMINFO_V30?辰NET_DVR_ALARMINFO
	BYTE  byRetDevInfoVersion; //CVR????㊣“?????????‾?芍????∼?㊣??? 0-COMM_ALARM_DEVICE?? 1-COMM_ALARM_DEVICE_V40
	BYTE  byRetVQDAlarmType; //VQD㊣“???????角????0-????㊣“㊣“??NET_DVR_VQD_DIAGNOSE_INFO??1-????㊣“??NET_DVR_VQD_ALARM
							 //1-㊣赤???????足??㊣“??????(INTER_FACE_DETECTION),0-㊣赤???????∫???芍??(INTER_FACESNAP_RESULT)
	BYTE  byFaceAlarmDetection;
	//Bit0- ㊣赤????????﹞???﹞?????????: 0-??????1-??????
	//Bit1- ㊣赤???????????????﹞???迆????0-????????1-????
	//Bit6- ㊣赤???℅???足??㊣“??(eventType:radarDetection)??﹞????????㊣??????0-????????1-?????“????web???????㊣?????℅????㊣那?足????
	BYTE  bySupport;
	//?????????角?? 
	//bit0-?????足???“IPC?? ?“0-????????1-??????
	//bit1-???‾?????“IPC??  ?“0-????????1-??????
	//bit2-???????????“IPC?? ?“0-????????1-??????
	//bit3-????℅????“IPC?? ?“0-????????1-??????
	//bit4-??????㊣??“IPC?? ?“0-????????1-??????
	//bit5-JSON㊣“???????“IPC?? ?“0-????????1-??????
	//bit6-??????∼????㊣?????㊣???????????????????“0-????????1-??????
	//bit7-??????∼????????????????????????﹞???迆???“0-????????1-??????
	BYTE  byBrokenNetHttp;
	WORD  wTaskNo;    //???????赤?? ?? (????????NET_DVR_VEHICLE_RECOG_RESULT????℅???dwTaskNo???? ???㊣ ??﹞??????芍?? NET_DVR_VEHICLE_RECOG_COND????℅???dwTaskNo????)
	BYTE  byDeployType;    //??﹞??角????0-???∫????﹞???1-???㊣??﹞?
	BYTE  byRes1[3];
	BYTE  byAlarmTypeURL;//bit0-㊣赤??????℅???㊣“???????“INTER_FACESNAP_RESULT????0-㊣赤??????????????1-㊣赤??URL?????“?豕㊣??∫?????谷???????豕㊣??∫???????迄??????㊣“????????????,???㊣?豕㊣??豕???∫??URL???角??﹞??????㊣?∼???㊣???????∼??
						 //bit1-㊣赤??EVENT_JSON???????????∟???角????0-㊣赤??????????????1-㊣赤??URL?????“?豕㊣??∫?????谷???????豕㊣??∫???????迄??????㊣“??????????????
						 //bit2 - ????㊣???(㊣“???角????COMM_SNAP_MATCH_ALARM)???????????????角????0 - ????????????1 - URL????
						 //bit3 - ????﹞???(㊣“???角????COMM_ALARM_RULE)???????????????角????0 - ????????????1 - URL??????㊣?℅????豕㊣???﹞??∫?????????赤????????????<isSupportBehaviorUploadByCloudStorageURL>??????﹞?﹞???????true
	BYTE  byCustomCtrl;//Bit0- ㊣赤???∫???㊣????????℅???????: 0-??????,1-????
	BYTE  byRes4[128];
}NET_DVR_SETUPALARM_PARAM_V50, *LPNET_DVR_SETUPALARM_PARAM_V50;

typedef struct tagNET_ITC_VIDEO_TRIGGER_COND
{
	DWORD dwSize;
	DWORD dwChannel;
	DWORD dwTriggerMode; //??????﹞??????角?????那??ITC_TRIGGERMODE_TYPE
	BYTE byRes[16];
}NET_ITC_VIDEO_TRIGGER_COND, *LPNET_ITC_VIDEO_TRIGGER_COND;

//?????芍??
typedef struct tagNET_ITC_FTP_TYPE_COND
{
	DWORD dwChannel;//?“????
	BYTE    byWorkMode;  // 0-FTP1(?‾FTP)??1-FTP2(㊣?FTP)
	BYTE    byRes[7];
}NET_ITC_FTP_TYPE_COND, *LPNET_ITC_FTP_TYPE_COND;

//?????芍??
typedef struct tagNET_ITC_FTP_CFG
{
	DWORD            dwSize;
	BYTE                byEnable;            /*??﹞?????ftp??????????0-﹞???1-??*/
	BYTE                 byAddressType;   //0-????ipv4 ipv6???﹞ 1-?辰??
										  // ????unionServer?????????????﹞?????辰??
	WORD                wFTPPort;            /*????*/
	union
	{
		struct
		{
			BYTE            szDomain[MAX_DOMAIN_NAME];//﹞????‾???﹞???辰?? 
			BYTE            byRes1[80];
		}struDomain;
		struct
		{
			NET_DVR_IPADDR     struIp;/*IP???﹞*/        //IPv4 IPv6???﹞, 144℅???
		} struAddrIP;
	}unionServer;  //???????????芍?????“??byAddressType℅???㊣赤????IP???﹞?????辰?? 64    
	BYTE                szUserName[NAME_LEN];        /*???∫??*/
	BYTE                szPassWORD[PASSWD_LEN];        /*????*/
	BYTE                byRes4;  // 0-FTP1(?‾FTP)??1-FTP2(㊣?FTP)
	BYTE                byDirLevel;    /*0 = ???????????芍?????㊣??㊣??????迄????,
									   1 = ????1??????,2=????2??????,
									   3 = ????3??????,4=????4??????*/
	BYTE                 byIsFilterCarPic;/*??????????﹞???????0-????,1-??????*/
	BYTE                    byUploadDataType;//0-??????1-?“????2-???? (??FTP?㊣????????????????FTP?㊣?∫???“??????????????)
	NET_DVR_PICTURE_NAME     struPicNameRule;/* ?????邦?????辰 */
	BYTE                byTopDirMode; /*????????, 0x1 = ?????豕㊣???,
									  0x2 = ?????豕㊣???,0x3 =?????豕㊣?ip???﹞??
									  0x4=?????角????,0x5=?????㊣??(?那??),
									  0x6=?????㊣??(?那????),0x7=?????角??,0x8=﹞??辰,0x9=????,
									  0xa=?“????,0xb=?“????,0xc=??????0xff=℅??“??*/
	BYTE                bySubDirMode; /*????????, 0x1 =?????豕㊣???,
									  0x2 = ?????豕㊣???,0x3 =?????豕㊣?ip???﹞??
									  0x4=?????角????,0x5=?????㊣??(?那??),
									  0x6=?????㊣??(?那????),0x7=?????角??,0x8=﹞??辰,0x9=????,
									  0xa=?“????,0xb=?“????,0xc=??????0xff=℅??“??*/
	BYTE                byThreeDirMode; /*????????, 0x1 = ?????豕㊣???,
										0x2 = ?????豕㊣???,0x3 =?????豕㊣?ip???﹞??
										0x4=?????角????,0x5=?????㊣??(?那??),
										0x6=?????㊣??(?那????),0x7=?????角??,0x8=﹞??辰,0x9=????,
										0xa=?“????,0xb=?“????,0xc=??????0xff=℅??“??*/
	BYTE                byFourDirMode; /*????????, 0x1 =?????豕㊣???,
									   0x2 = ?????豕㊣???,0x3 =?????豕㊣?ip???﹞??
									   0x4=?????角????,0x5=?????㊣??(?那??),
									   0x6=?????㊣??(?那????),0x7=?????角??,0x8=﹞??辰,0x9=????,
									   0xa=?“????,0xb=?“????,0xc=??????0xff=℅??“??*/
									   /*?????邦??℅??“?? ?㊣PICNAME_ITEM_CUSTOM ?㊣ ?迆?∫*/
	BYTE                szPicNameCustom[MAX_CUSTOMDIR_LEN];// (3.7Ver ?迆?∫)
	BYTE                szTopCustomDir[MAX_CUSTOMDIR_LEN]; /*℅??“??????????*/
	BYTE                szSubCustomDir[MAX_CUSTOMDIR_LEN];/*℅??“??????????*/
	BYTE                szThreeCustomDir[MAX_CUSTOMDIR_LEN];    /*℅??“??????????*/
	BYTE                szFourCustomDir[MAX_CUSTOMDIR_LEN];    /*℅??“??????????*/
	BYTE                 byRes3[900]; //?迆℅?12???????∟?? ?∫??????
}NET_ITC_FTP_CFG, *LPNET_ITC_FTP_CFG;

typedef struct tagNET_DVR_LATITUDE_PARAM
{
	BYTE byDegree;//??[0,179]
	BYTE byMinute;//﹞?[0,59]
	BYTE bySec;//??[0,59]
	BYTE byRes;
}NET_DVR_LATITUDE_PARAM, *LPNET_DVR_LATITUDE_PARAM;

typedef struct tagNET_DVR_LONGITUDE_PARAM
{
	BYTE byDegree;//??[0,179]
	BYTE byMinute;//﹞?[0,59]
	BYTE bySec;//??[0,59]
	BYTE byRes;
}NET_DVR_LONGITUDE_PARAM, *LPNET_DVR_LONGITUDE_PARAM;

typedef struct tagNET_DVR_GPS_DATACFG
{
	DWORD     dwSize;
	BYTE byGpsDataMode;//GPS???????? 0-℅?????1-????
	BYTE byLongitudeType;//???? 0-??????1-?‾??
	BYTE byLatitudeType;//???? 0-??????1-㊣㊣??
	BYTE byRes;
	NET_DVR_LATITUDE_PARAM    struLatitude;     /*????*/
	NET_DVR_LONGITUDE_PARAM    struLongitude; /*????*/
	BYTE byRes1[128];
}NET_DVR_GPS_DATACFG, *LPNET_DVR_GPS_DATACFG;

typedef enum _VCA_DATABASE_TYPE_
{
	DATABASE_NULL = 0, //????
	DATABASE_SNAP,    //℅?????????
	DATABASE_FACE    //??????????
}VCA_DATABASE_TYPE;

typedef struct tagNET_VCA_DATABASE_PARAM
{
	DWORD dwSize;
	DWORD dwDataBaseID; //??????ID?“?豕㊣??迆?????赤???㊣???∫?????????????㊣???∫??
	DWORD dwDataBaseType; //???????角??????VCA_DATABASE_TYPE
	BYTE byDataBaseName[NAME_LEN]; //??????????
	BYTE byAttribute[64]; //??????????
	BYTE byRes[20];
}NET_VCA_DATABASE_PARAM, *LPNET_VCA_DATABASE_PARAM;

typedef struct tagNET_VCA_FIND_DATABASE_COND
{
	DWORD dwDataBaseType; //???????角?????那??VCA_DATABASE_TYPE
	BYTE byRes[12]; //㊣???
}NET_VCA_FIND_DATABASE_COND, *LPNET_VCA_FIND_DATABASE_COND;

typedef struct tagNET_VCA_DELETE_DATABASE_COND
{
	DWORD dwSize;
	DWORD dwDataBaseType; //???????角??????VCA_DATABASE_TYPE
	DWORD dwDataBaseID; //??????ID
	BYTE byRes[64]; //㊣???
}NET_VCA_DELETE_DATABASE_COND, *LPNET_VCA_DELETE_DATABASE_COND;

typedef struct tagNET_VCA_INQUIRE_SNAPDB_COND
{
	DWORD dwChannel;//?“????
	NET_DVR_TIME struStartTime;//?????㊣??
	NET_DVR_TIME struStopTime;//?芍???㊣??
	BYTE bySex; //??㊣???0-????????1-????2-??
	BYTE byRes1[3]; //㊣???
	BYTE byStartBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那????????201106
	BYTE byEndBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那??????201106
	BYTE byAttribute1[NAME_LEN]; //????1
	BYTE byAttribute2[NAME_LEN]; //????2
	BYTE byRes[12]; //㊣???
}NET_VCA_INQUIRE_SNAPDB_COND, *LPNET_VCA_INQUIRE_SNAPDB_COND;

typedef struct tagNET_VCA_INQUIRE_SNAPRECORD_RESULT
{
	DWORD dwSize; //?芍?????車??
	DWORD dwDataBaseID;  //??????ID
	DWORD dwRecordID; //????ID
	NET_DVR_TIME struSnapTime;  //℅????㊣??
	BYTE bySex; //??㊣???0-????????1-????2-??
	BYTE byRes1[3]; //㊣???
	BYTE byStartBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那????????201106
	BYTE byEndBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那??????201106
	BYTE byAttribute1[NAME_LEN]; //????1
	BYTE byAttribute2[NAME_LEN]; //????2
	DWORD dwFacePicID; //??????ID
	DWORD dwFacePicLen;  //???????????∟??
	BYTE byRes[80];  //㊣???
	BYTE *pFacePic;    //??????????
}NET_VCA_INQUIRE_SNAPRECORD_RESULT, *LPNET_VCA_INQUIRE_SNAPRECORD_RESULT;

typedef union tagNET_VCA_DELETE_SNAPRECORD_COND_UNION
{
	NET_VCA_INQUIRE_SNAPDB_COND struAttribute;  //???㊣?????“?迆????????
	DWORD dwRecordID; //????ID?“??????????
}NET_VCA_DELETE_SNAPRECORD_COND_UNION, *LPNET_VCA_DELETE_SNAPRECORD_COND_UNION;

typedef enum _VCA_DELETE_RECORD_TYPE_
{
	DELETE_RECORD_SINGLE = 0, //????????
	DELETE_RECORD_BATCH    //?迆??????
}VCA_DELETE_RECORD_TYPE;

typedef struct tagNET_VCA_DELETE_SNAPRECORD_COND
{
	VCA_DELETE_RECORD_TYPE dwDeleteType; //?????????角??
	NET_VCA_DELETE_SNAPRECORD_COND_UNION uDeleteCond;  //????????
	BYTE  byRes[40]; //㊣???
}NET_VCA_DELETE_SNAPRECORD_COND, *LPNET_VCA_DELETE_SNAPRECORD_COND;

typedef enum _VCA_SEARCH_DATABASE_TYPE_
{
	VCA_NORMAL_SEARCH_DATABASE = 0x00000000,   //???“?足?‾
	VCA_ADVANCE_SEARCH_DATABASE = 0x00000001  //?????足?‾
}VCA_SEARCH_DATABASE_TYPE;

typedef struct tagNET_VCA_ADVANCE_SEARCH_DATABASE_COND
{
	DWORD dwDataBaseType; //???????角?????那??VCA_DATABASE_TYPE
	DWORD dwDataBaseID; //??????ID
	DWORD dwFacePicID; //????????ID
	BYTE byRes[36];
}NET_VCA_ADVANCE_SEARCH_DATABASE_COND, *LPNET_VCA_ADVANCE_SEARCH_DATABASE_COND;

typedef union tagNET_VCA_SEARCH_DATABASE_COND_UNION
{
	DWORD uLen[25];
	NET_VCA_REGISTER_PIC struNormalFind; //???“?足?‾
	NET_VCA_ADVANCE_SEARCH_DATABASE_COND struAdvanceFind; //?????足?‾
}NET_VCA_SEARCH_DATABASE_COND_UNION, *LPNET_VCA_SEARCH_DATABASE_COND_UNION;

typedef struct tagNET_VCA_SEARCH_DATABASE_PARAM
{
	DWORD dwSearchType; //?足?‾?角?????那??VCA_SEARCH_DATABASE_TYPE
	NET_VCA_SEARCH_DATABASE_COND_UNION uSearchCond; //?足?‾????
	BYTE byRes[16];
}NET_VCA_SEARCH_DATABASE_PARAM, *LPNET_VCA_SEARCH_DATABASE_PARAM;

typedef struct tagNET_VCA_SEARCH_SNAPDB_COND
{
	DWORD dwChannel; //?“??
	DWORD dwDataBaseID; //??????ID
	NET_DVR_TIME struStartTime;//?????㊣??
	NET_DVR_TIME struStopTime;//?芍???㊣??
	BYTE bySex; //??㊣???0-????????1-????2-??
	BYTE byRes1[3]; //㊣???
	BYTE byStartBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那????????201106
	BYTE byEndBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那??????201106
	BYTE byAttribute1[NAME_LEN]; //????1
	BYTE byAttribute2[NAME_LEN]; //????2
	NET_VCA_SEARCH_DATABASE_PARAM struSearchParam;  //?足?‾????
	DWORD dwMaxSearchNum; //℅??車?足?‾????
	WORD wThreshold;  //??????0-100
	BYTE  byRes[78]; //㊣???
}NET_VCA_SEARCH_SNAPDB_COND, *LPNET_VCA_SEARCH_SNAPDB_COND;

typedef struct tagNET_VCA_SEARCH_SNAPRECORD_RESULT
{
	DWORD dwSize; //?芍?????車??
	DWORD dwDataBaseID;  //??????ID
	DWORD dwRecordID; //????ID
	NET_DVR_TIME struSnapTime;//℅????㊣??
	BYTE bySex; //??㊣???0-????????1-????2-??
	BYTE byRes1[3]; //㊣???
	BYTE byStartBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那????????201106
	BYTE byEndBirthDate[MAX_HUMAN_BIRTHDATE_LEN]; //???????迆?那??????201106
	BYTE byAttribute1[NAME_LEN]; //????1
	BYTE byAttribute2[NAME_LEN]; //????2
	float fSimilarity; //?角??????[0.001,1]
	DWORD dwFacePicID; //??????ID
	DWORD dwFacePicLen;  //???????????∟??
	BYTE byRes[80];  //㊣???
	BYTE *pFacePic;    //??????????
}NET_VCA_SEARCH_SNAPRECORD_RESULT, *LPNET_VCA_SEARCH_SNAPRECORD_RESULT;

typedef struct tagNET_VCA_DATARECORD_INFO
{
	DWORD dwSize; //?芍?????車??
	DWORD dwRecordID; //????ID???赤???㊣???∫???????㊣???∫
	NET_VCA_HUMAN_ATTRIBUTE struAttribute;  //???㊣????
	NET_VCA_REGISTER_PIC struRegisterPic;  //???㊣????????
	BYTE  byRemark1[NAME_LEN]; //㊣?℅?????1
	BYTE  byRemark2[64]; //㊣?℅?????2
	BYTE  byRes[32]; //㊣???
}NET_VCA_DATARECORD_INFO, *LPNET_VCA_DATARECORD_INFO;

typedef struct tagNET_VCA_FAST_DATARECORD_INFO
{
	DWORD dwSize; //?芍?????車??
	NET_VCA_HUMAN_ATTRIBUTE struAttribute;  //???㊣????
	BYTE  byRemark1[NAME_LEN]; //㊣?℅?????1
	BYTE  byRemark2[64]; //㊣?℅?????2
	DWORD dwImageLen;  //?????????∟??
	BYTE  byRes[80];  //㊣???
	BYTE *pImage;    //????????
}NET_VCA_FAST_DATARECORD_INFO, *LPNET_VCA_FAST_DATARECORD_INFO;

typedef struct tagNET_VCA_INQUIRE_DATARECORD_RESULT
{
	DWORD dwSize; //?芍?????車??
	DWORD dwDataBaseID;  //??????ID
	DWORD dwRecordID; //????ID
	NET_VCA_HUMAN_ATTRIBUTE struAttribute;  //???㊣????
	BYTE  byRemark1[NAME_LEN]; //㊣?℅?????1
	BYTE  byRemark2[64]; //㊣?℅?????2
	DWORD dwFacePicID; //??????ID
	DWORD dwFacePicLen;  //???????????∟??
	BYTE byRes[80];  //㊣???
	BYTE *pFacePic;    //??????????
}NET_VCA_INQUIRE_DATARECORD_RESULT, *LPNET_VCA_INQUIRE_DATARECORD_RESULT;

typedef struct tagNET_VCA_SEARCH_DATARECORD_RESULT
{
	DWORD dwSize; //?芍?????車??
	DWORD dwDataBaseID;  //??????ID
	DWORD dwRecordID; //????ID
	NET_VCA_HUMAN_ATTRIBUTE struAttribute;  //???㊣????
	BYTE  byRemark1[NAME_LEN]; //㊣?℅?????1
	BYTE  byRemark2[64]; //㊣?℅?????2
	float fSimilarity; //?角??????[0.001,1]
	DWORD dwFacePicID; //??????ID
	DWORD dwFacePicLen;  //???????????∟??
	BYTE byRes[80];  //㊣???
	BYTE *pFacePic;    //??????????
}NET_VCA_SEARCH_DATARECORD_RESULT, *LPNET_VCA_SEARCH_DATARECORD_RESULT;

typedef struct tagNET_VCA_DATARECORD_COND
{
	DWORD dwDataBaseID; //??????ID
	NET_VCA_HUMANATTRIBUTE_COND struAttribute;  //???㊣????
	BYTE byRes[80];  //㊣???
}NET_VCA_DATARECORD_COND, *LPNET_VCA_DATARECORD_COND;

typedef union tagNET_VCA_DELETE_RECORD_COND_UNION
{
	NET_VCA_HUMANATTRIBUTE_COND struAttribute;  //???㊣?????“?迆????????
	DWORD dwRecordID; //????ID?“??????????
}NET_VCA_DELETE_RECORD_COND_UNION, *LPNET_VCA_DELETE_RECORD_COND_UNION;

typedef struct tagNET_VCA_DELETE_RECORD_COND
{
	VCA_DELETE_RECORD_TYPE dwDeleteType; //?????????角??
	NET_VCA_DELETE_RECORD_COND_UNION uDeleteCond;  //????????
	BYTE  byRes[40]; //㊣???
}NET_VCA_DELETE_RECORD_COND, *LPNET_VCA_DELETE_RECORD_COND;

typedef struct tagNET_VCA_SEARCH_FACEDB_COND
{
	DWORD dwDataBaseID; //??????ID
	NET_VCA_HUMANATTRIBUTE_COND struAttribute;  //???㊣????
	NET_VCA_SEARCH_DATABASE_PARAM struSearchParam;  //?足?‾????
	DWORD dwMaxSearchNum; //℅??車?足?‾????
	WORD wThreshold;  //??????0-100
	BYTE  byRes[78]; //㊣???
}NET_VCA_SEARCH_FACEDB_COND, *LPNET_VCA_SEARCH_FACEDB_COND;

typedef struct tagNET_VCA_FIND_MATCHPIC_COND
{
	DWORD dwSize;
	DWORD dwDataBaseType; //???????角??????VCA_DATABASE_TYPE
	DWORD dwDataBaseID; //??????ID
	DWORD dwRecordID; //????ID
	BYTE byRes[64]; //㊣???
}NET_VCA_FIND_MATCHPIC_COND, *LPNET_VCA_FIND_MATCHPIC_COND;

typedef struct tagNET_VCA_FIND_MATCHPIC_RESULT
{
	DWORD dwSize;
	DWORD dwDataBaseType; //???????角??????VCA_DATABASE_TYPE
	DWORD dwDataBaseID; //??????ID
	DWORD dwRecordID; //????ID
	DWORD dwPicLen; //?????∟??
	BYTE byRes[64]; //㊣???
	BYTE *pPicBuffer; //????????????
}NET_VCA_FIND_MATCHPIC_RESULT, *LPNET_VCA_FIND_MATCHPIC_RESULT;

typedef struct tagNET_DVR_REMOTECONTROL_ALARM_PARAM
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	WORD wDealyTime; //?????㊣????????s
	BYTE  byRes[30];
}NET_DVR_REMOTECONTROL_ALARM_PARAM, *LPNET_DVR_REMOTECONTROL_ALARM_PARAM;

typedef struct tagNET_DVR_REMOTECONTROL_STUDY_PARAM
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	BYTE  byRes[16];
}NET_DVR_REMOTECONTROL_STUDY_PARAM, *LPNET_DVR_REMOTECONTROL_STUDY_PARAM;

typedef struct tagNET_DVR_WIRELESS_ALARM_STUDY_PARAM
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	BYTE  byIndex;  //????㊣“???辰????1-8
	BYTE  byRes[15];
}NET_DVR_WIRELESS_ALARM_STUDY_PARAM, *LPNET_DVR_WIRELESS_ALARM_STUDY_PARAM;

#define MAX_AUX_ALARM_NUM 8 //℅??車?“?迆㊣“??????
#define MAX_WIRELESS_ALARM_NUM 8 //℅??車????㊣“??????
typedef enum _IPC_AUX_ALARM_TYPE_
{
	IPC_AUXALARM_UNKNOW = 0, //????
	IPC_AUXALARM_PIR = 1, //PIR㊣“??
	IPC_AUXALARM_WIRELESS = 2,   //????㊣“??
	IPC_AUXALARM_CALLHELP = 3  //????㊣“??
}IPC_AUX_ALARM_TYPE;

typedef struct tagNET_DVR_AUDIO_LIMIT_ALARM_CFG
{
	DWORD    dwSize;
	BYTE    byEnable;//????
	BYTE    byRes1[3];
	DWORD    dwDecibelLimit; //﹞?㊣?????﹞∫??
	NET_DVR_HANDLEEXCEPTION_V30    struHandleException;  //?足?????赤﹞???
	BYTE    byRes2[24];
}NET_IPC_AUDIO_LIMIT_ALARM_CFG, *LPNET_IPC_AUDIO_LIMIT_ALARM_CFG;

typedef struct tagNET_DVR_BUTTON_DOWN_ALARM_CFG
{
	DWORD    dwSize;
	BYTE    byEnable;//????
	BYTE    byRes1[3];
	NET_DVR_HANDLEEXCEPTION_V30    struHandleException;  //?足?????赤﹞???
	BYTE    byRes2[24];
}NET_IPC_BUTTON_DOWN_ALARM_CFG, *LPNET_IPC_BUTTON_DOWN_ALARM_CFG;

typedef struct tagNET_IPC_PIR_ALARMCFG
{
	BYTE byAlarmName[NAME_LEN];    /* ㊣“?????? */
	BYTE byAlarmHandle;            /* ??﹞????赤 0-?????赤 1-???赤*/
	BYTE byRes1[3];
	NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType;    /* ???赤﹞??? */
	BYTE byRelRecordChan[MAX_CHANNUM_V30]; //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	BYTE byRes[64];
}NET_IPC_PIR_ALARMCFG, *LPNET_IPC_PIR_ALARMCFG;

typedef struct tagNET_IPC_PIR_ALARMCFG_EX
{
	BYTE byAlarmName[NAME_LEN];    /* ㊣“?????? */
	BYTE byAlarmHandle;            /* ??﹞????赤 0-?????赤 1-???赤*/
	BYTE byRes1[3];
	NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType;    /* ???赤﹞??? */
	BYTE byRelRecordChan[MAX_CHANNUM_V30]; //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	NET_DVR_SCHEDTIME   struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];
	BYTE byRes[1464];
}NET_IPC_PIR_ALARMCFG_EX, *LPNET_IPC_PIR_ALARMCFG_EX;

//????㊣“??
typedef struct tagNET_IPC_CALLHELP_ALARMCFG
{
	BYTE byAlarmHandle;            /* ??﹞????赤 0-?????赤 1-???赤*/
	BYTE byRes1[3];
	NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType;    /* ???赤﹞??? */
	BYTE byRelRecordChan[MAX_CHANNUM_V30]; //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??
	BYTE byRes[64];
}NET_IPC_CALLHELP_ALARMCFG, *LPNET_IPC_CALLHELP_ALARMCFG;

typedef struct tagNET_IPC_SINGLE_WIRELESS_ALARMCFG
{
	BYTE byAlarmName[NAME_LEN];    /* ㊣“?????? */
	BYTE byAlarmHandle;            /* ??﹞????赤 0-?????赤 1-???赤*/
	BYTE byID; //????㊣“??ID??1-8
	BYTE byRes1[2];
	NET_DVR_HANDLEEXCEPTION_V30 struAlarmHandleType;    /* ???赤﹞??? */
	BYTE byRelRecordChan[MAX_CHANNUM_V30]; //㊣“????﹞??????車?“??,??1㊣赤????﹞????“??    
	BYTE byRes[32];
}NET_IPC_SINGLE_WIRELESS_ALARMCFG, *LPNET_IPC_SINGLE_WIRELESS_ALARMCFG;

typedef struct tagNET_IPC_WIRELESS_ALARMCFG
{
	NET_IPC_SINGLE_WIRELESS_ALARMCFG struWirelessAlarm[MAX_WIRELESS_ALARM_NUM]; //????????㊣“??????
	BYTE byRes[32];
}NET_IPC_WIRELESS_ALARMCFG, *LPNET_IPC_WIRELESS_ALARMCFG;

typedef union tagNET_IPC_AUX_ALARMCFG_UNION
{
	DWORD uLen[472];
	NET_IPC_PIR_ALARMCFG_EX struPIRAlarm; //PIR㊣“??????
	NET_IPC_WIRELESS_ALARMCFG struWirelessAlarm; //????㊣“??????
	NET_IPC_CALLHELP_ALARMCFG struCallHelpAlarm; //????㊣“??????
}NET_IPC_AUX_ALARMCFG_UNION, *LPNET_IPC_AUX_ALARMCFG_UNION;

typedef struct tagNET_IPC_SINGLE_AUX_ALARMCFG
{
	BYTE byAlarmType;       //㊣“???‾?角?????那??IPC_AUX_ALARM_TYPE
	BYTE byRes1[3];
	NET_IPC_AUX_ALARMCFG_UNION uAlarm; //㊣“??????
	BYTE byRes[16];
}NET_IPC_SINGLE_AUX_ALARMCFG, *LPNET_IPC_SINGLE_AUX_ALARMCFG;

typedef struct tagNET_IPC_AUX_ALARMCFG
{
	DWORD dwSize;
	NET_IPC_SINGLE_AUX_ALARMCFG struAlarm[MAX_AUX_ALARM_NUM]; //㊣“??????
	BYTE byRes[64];
}NET_IPC_AUX_ALARMCFG, *LPNET_IPC_AUX_ALARMCFG;

typedef union tagNET_IPC_AUXALARM_UPLOAD_UNION
{
	DWORD uLen[66];
	NET_IPC_PIR_ALARMCFG struPIRAlarm; //PIR㊣“??????
	NET_IPC_SINGLE_WIRELESS_ALARMCFG struWirelessAlarm; //????㊣“??????
	NET_IPC_CALLHELP_ALARMCFG struCallHelpAlarm; //????㊣“??????
}NET_IPC_AUXALARM_UPLOAD_UNION, *LPNET_IPC_AUXALARM_UPLOAD_UNION;

typedef struct tagNET_IPC_AUXALARM_RESULT
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	BYTE byAlarmType;       //㊣“???‾?角?????那??IPC_AUX_ALARM_TYPE
	BYTE byRes1[3];
	NET_IPC_AUXALARM_UPLOAD_UNION struAuxAlarm; //㊣“???芍??????
	BYTE byDeviceID[NAME_LEN];/*?豕㊣???ID??*/
	BYTE byRes[32];
}NET_IPC_AUXALARM_RESULT, *LPNET_IPC_AUXALARM_RESULT;

typedef struct tagNET_DVR_PREVIEW_DISPLAYCFG
{
	DWORD  dwSize;         // ?芍?????車?? 
	BYTE   byCorrectMode;   //??????????0-?赤????????1-????????
	BYTE   byMountType;     //∼?℅∼?角????0-?邦????1-℅?????2-????
							/*
							0-????1??????+???∼+3PTZ (??????﹞????㊣????????)??
							1-????2??????+4PTZ(?????????㊣????????)??
							2-????3??????(?‾)+????(℅?)+3PTZ??
							3-????4?????∼????(?‾???‾+℅????‾)??
							4-????5??4PTZ??
							5-????6????????
							*/
	BYTE   byRealTimeOutput;  //???㊣??????0 -????????1- ????
	BYTE   byRes[61];
}NET_DVR_PREVIEW_DISPLAYCFG, *LPNET_DVR_PREVIEW_DISPLAYCFG;

typedef struct tagNET_DVR_REMOTECONTROL_PTZ_PARAM
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	DWORD dwPTZCommand; //PTZ?????邦?? 
	NET_VCA_POINT struVcaPoint; //?∟????????℅?㊣那
	DWORD dwSpeed; //????????????????﹞??∫[0,7]
	DWORD dwStop; //??????℅‾?辰??????℅‾??0-??????1-????
	BYTE  byRes[32];
}NET_DVR_REMOTECONTROL_PTZ_PARAM, *LPNET_DVR_REMOTECONTROL_PTZ_PARAM;

typedef struct tagNET_DVR_PRESET_POINT_PARAM
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	DWORD dwPTZPresetCmd; //?∟?????????邦?? 
	NET_VCA_POINT struVcaPoint; //?∟????????℅?㊣那
	DWORD dwPresetIndex; //?∟???????辰???“??1????????℅??角?∫??255???∟????
	WORD  wZoomCoordinate;///<?∟?????∼??Zoom??
	BYTE  byRes[30];
}NET_DVR_PRESET_POINT_PARAM, *LPNET_DVR_PRESET_POINT_PARAM;

typedef struct tagNET_DVR_PTZ_CRUISE_PARAM
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	DWORD dwPTZCruiseCmd; //?????????邦?? 
	NET_VCA_POINT struVcaPoint; //?∟????????℅?㊣那
	WORD wCruiseRoute; //?????﹞????℅??角?∫??32???﹞???“?辰????1??????
	WORD wCruisePoint; //????????℅??角?∫??32?????“?辰????1??????
	WORD wInput; //?????????邦???㊣???????????∟????(℅??車255)???㊣??(℅??車255)??????(℅??車40)
	WORD wZoomCoordinate;///<?∟?????∼??Zoom??
	BYTE  byRes[32];
}NET_DVR_PTZ_CRUISE_PARAM, *LPNET_DVR_PTZ_CRUISE_PARAM;

typedef struct tagNET_DVR_WPS_PARAM
{
	DWORD dwSize;
	BYTE byEnableWps; //????WPS??0-﹞???1-??
	BYTE byRes[31];
}NET_DVR_WPS_PARAM, *LPNET_DVR_WPS_PARAM;

typedef struct tagNET_DVR_PIN_PARAM
{
	DWORD dwSize;
	BYTE byPIN[8]; //PIN??
	BYTE byRes[32];
}NET_DVR_PIN_PARAM, *LPNET_DVR_PIN_PARAM;

typedef struct tagNET_DVR_WPS_CONNECT_PARAM_
{
	DWORD dwSize;
	BYTE byConnectType; //WPS????﹞?????0-PBC,1-AP PIN
	BYTE byRes1[3];
	BYTE byPIN[8]; //PIN??(WPS????﹞?????AP PIN?㊣???∫)
	BYTE byEssid[IW_ESSID_MAX_SIZE]; //essid(WPS????﹞?????AP PIN?㊣???∫)
	BYTE byRes[32];
}NET_DVR_WPS_CONNECT_PARAM, *LPNET_DVR_WPS_CONNECT_PARAM;

typedef struct tagNET_DVR_DECODER_JOINT_PARAM
{
	DWORD    dwSize;        // ?芍?????車??
	BYTE    byJointed;        //  0 ???????? 1 ????????
	BYTE    byRes1[3];        // ㊣???℅???
	NET_DVR_IPADDR    struIP;    // ㊣??????????‾??IP???﹞
	WORD    wPort;            // ㊣??????????‾????????
	WORD    wChannel;        // ㊣??????????‾???????“????
	BYTE    sDeviceName[NAME_LEN];    //㊣??????????‾???豕㊣?????
	BYTE    sChanName[NAME_LEN];    //㊣??????????‾???????“??????
	BYTE    byRes2[32];        // ㊣???℅???
}NET_DVR_DECODER_JOINT_PARAM, *LPNET_DVR_DECODER_JOINT_PARAM;

typedef struct tagNET_DVR_PIC_VIEW_PARAM
{
	DWORD    dwSize;
	NET_DVR_IPADDR    struCuIp; //CU??IP???﹞
	WORD    wPort;/*CU????*/
	BYTE    bySourceIndex;    //???????“????
	BYTE    byRes[29];
}NET_DVR_PIC_VIEW_PARAM, *LPNET_DVR_PIC_VIEW_PARAM;

#define DVCS_DEVICEID_LEN   16
//2012-03-13????????℅??芍???????‾
typedef struct tagNET_DVR_PICVIEW_CALLBACKPARAM
{
	DWORD    dwUserID;
	BYTE    sDeviceID[DVCS_DEVICEID_LEN];
	LONG    nPicViewHandle; //??????㊣迆
	WORD    wSignalIndex;    //???????‾??
	WORD    wHeadLen;        //?????﹞?∟?? ?????????‾?????﹞????40
	BYTE    byHeadBuf[100]; //?????﹞
	BYTE    byRes2[32];
}NET_DVR_PICVIEW_CALLBACKPARAM, *LPNET_DVR_PICVIEW_CALLBACKPARAM;

#define DEVICEID_LEN      32

typedef struct tagNET_DVR_DEVICEID_INFO
{
	DWORD        dwSize;
	DWORD        dwDeviceIndex;    //?豕㊣??辰??
	BYTE        byWallNo;     //????????1????
	BYTE        byRes1[27];
	DWORD        dwChan;        //?“????
	DWORD        dwInputSignalIndex; //???????‾???????????車???????‾????
	BYTE        byRes2[60];
}NET_DVR_DEVICEID_INFO, *LPNET_DVR_DEVICEID_INFO;


typedef struct tagNET_DVR_SINGLE_NETPARAM
{
	DWORD  dwSize;
	BYTE   byUseDhcp;                 //??﹞?????DHCP 0xff-???∫ 0-?????? 1-????
	BYTE   byRes1[3];
	NET_DVR_IPADDR  struDevIP;       // ?豕㊣?IP???﹞
	NET_DVR_IPADDR  struSubnetMask;  // ?豕㊣?℅???????
	NET_DVR_IPADDR  struGateway;     // ?豕㊣?????
	WORD    wDevPort;                 // ?豕㊣???????
	BYTE    byMACAddr[MACADDR_LEN];   // MAC ???﹞(????????)
	BYTE    byRes2[16];
} NET_DVR_SINGLE_NETPARAM, *LPNET_DVR_SINGLE_NETPARAM;

typedef struct tagNET_DVR_CHAN_INFO
{
	DWORD    dwSize;
	BYTE    byValid;                //0-???∫ 1-???∫
	BYTE    byRes1[3];
	BYTE    sChanName[NAME_LEN];    //?“??????
	NET_DVR_COLOR struVideoColor;   //??????????
	WORD    wResolutionX;        //?㊣?∼﹞?㊣???---?赤 
	WORD    wResolutionY;        //?㊣?∼﹞?㊣???---??
	BYTE   byRes2[40];
} NET_DVR_CHAN_INFO, *LPNET_DVR_CHAN_INFO;

//㊣角??℅??豕㊣?????
typedef struct tagNET_DVR_CODEDEV_INFO
{
	NET_DVR_CHAN_INFO struChanInfo[MAX_CHANNUM/*16*/];/*?豕㊣??“??????*/
} NET_DVR_CODEDEV_INFO, *LPNET_DVR_CODEDEV_INFO;

//????℅??豕㊣?????
typedef struct tagNET_DVR_DECODEDEV_INFO
{
	BYTE    byRes[1408];
} NET_DVR_DECODEDEV_INFO, *LPNET_DVR_DECODEDEV_INFO;

//??????????????
typedef struct tagNET_DVR_NETSIGNAL_INFO
{
	DWORD    dwSize;
	BYTE    byDevName[NAME_LEN/*32*/];//??????????????
	NET_DVR_PU_STREAM_CFG struPuStream;
	BYTE    byValid;            //??﹞????∫??0-???∫???????㊣?豕??0  1-???∫???赤?????????㊣?豕??1/
	BYTE     byRes1[3];    //㊣???
	BYTE    sGroupName[NAME_LEN/*32*/];//???????????迄??℅谷??℅谷???????????????迄??????℅谷????﹞??角
	WORD    wResolutionX;        //?㊣?∼﹞?㊣???---?赤 
	WORD    wResolutionY;        //?㊣?∼﹞?㊣???---??
	BYTE    byRes2[24];
}NET_DVR_NETSIGNAL_INFO, *LPNET_DVR_NETSIGNAL_INFO;

typedef struct tagNET_DVR_NETSIGNALDEV_INFO
{
	NET_DVR_NETSIGNAL_INFO struDevInfo;
	BYTE    byRes1[816];
}NET_DVR_NETSIGNALDEV_INFO, *LPNET_DVR_NETSIGNALDEV_INFO;

typedef union tagNET_DVR_DIFFDEV_INFO
{
	NET_DVR_CODEDEV_INFO struCodeDevInfo;        //㊣角???豕㊣?????
	NET_DVR_DECODEDEV_INFO struDecodeDevInfo;    //?????豕㊣?????
	NET_DVR_NETSIGNALDEV_INFO struNetSignalInfo;    //??????????????
} NET_DVR_DIFFDEV_INFO, *LPNET_DVR_DIFFDEV_INFO;

/*℅??芍?豕㊣?????*/
typedef enum tagNET_DVCS_DEVICE_TYPE
{
	NET_DVR_BNC_PROC = 1,                   /* BNC???赤?‾ */
	NET_DVR_RGB_PROC,                       /* RGB???赤?‾ */
	NET_DVR_STP_PROC,                       /* ℅??????赤?‾ */
	NET_DVR_DISP_PROC,                      /* ???????赤?‾ */
	NET_DVR_NETSIGNAL,                      //??????????
	NET_DVR_SDI_PROC,                       //SDI???赤?‾
	NET_DVR_BIW_PROC,                       //8?﹞BNC???赤?‾
	NET_DVR_DON_PROC,                       //???????赤?‾
	NET_DVR_TVI_PROC,                       //TVI???赤?‾
	NET_DVR_DI2_PROC,                       //2?﹞DVI???????赤?‾
	NET_DVR_DO2_PROC,                       //2?﹞DVI?????豕㊣?
	NET_DVR_UHDI_PROC,                      //DP/HDMI 1?﹞4K???????????豕㊣?
	NET_DVR_YI2_PROC,                        //???﹞YPbPr????∼?
	NET_DVR_HI2_PROC,                        // HDMI????????(2?﹞)
	NET_DVR_VI2_PROC,                        // VGA????????(2?﹞)
	NET_DVR_SI2_PROC,                        // SDI????????(2?﹞)
	NET_DVR_HO2_PROC,                        // HDMI????????(2?﹞)
	NET_DVR_S24G_PROC,                        // C20N℅“???∫?℅?????迆(24?﹞)
	NET_DVR_S24X_PROC                        // C20N℅“???辰?℅?????迆(24?﹞)
}NET_DVCS_DEVICE_TYPE;

typedef struct  tagNET_DVR_SINGLE_DEV_INFO
{
	DWORD    dwSize;
	DWORD    dwSoftVersion;            /*?豕㊣??赤??∼?㊣???(????????) ℅???8?????‾∼?㊣?????????8??????∼?㊣???????16????????∼?㊣???*/
	DWORD    dwSoftwareBuildDate;         //∼?㊣?㊣角??????Build, 0xYYYYMMDD
	BYTE    byUseInSys;                /*??﹞?????????????*/
	BYTE    byDevStatus;            /*?豕㊣??㊣?∼℅?????0-??????1-????(????????)*/
	BYTE    byDeviceType;            /*?豕㊣??角??(????????)  ??DEVICE_TYPE*/
	BYTE    byRes1[17];
	BYTE    sDevName[NAME_LEN];     /*?豕㊣?????*/
	NET_DVR_SINGLE_NETPARAM struEtherNet[MAX_ETHERNET]; /*?豕㊣?????????*/
	BYTE    sSerialNumber[SERIALNO_LEN];    /*?豕㊣??辰????*/
	NET_DVR_DIFFDEV_INFO  struSubDevInfo;        /*?豕㊣?????*/
	DWORD   dwDeviceIndex; //?豕㊣??辰?????角????C20N?辰Y10???豕㊣???????㊣角??
	DWORD   dwSubBoardNo; //﹞??????豕㊣??迄????℅?∼?㊣角?????角????C20N?辰Y10???豕㊣???????㊣角??????1????????0?㊣??℅??????∫??℅?∼?㊣角????????1
	BYTE    bySubSysNo; //﹞??????豕㊣??迄????℅?∼?????℅?????㊣角?????角????℅?∼?????????1????????0?㊣??℅??????∫??℅?????????????1
	BYTE    byRes3[3];
	WORD    wStartAudioTalkChanNo; //﹞??????豕㊣??????????????????“????
	WORD    wAudioTalkChanNum; //﹞??????豕㊣????????????“??????????
	BYTE    byRes2[36];
} NET_DVR_SINGLE_DEV_INFO, *LPNET_DVR_SINGLE_DEV_INFO;

typedef struct tagNET_DVR_DEVLIST
{
	DWORD        dwSize;
	DWORD        dwDevNums;//?豕㊣?﹞?????﹞?????℅??豕㊣?????
	BYTE          *pBuffer;
	BYTE        byRes1[3];
	DWORD         dwBufLen;//?迄﹞????????∟????????????
	BYTE        byRes2[64];
} NET_DVR_DEVLIST, *LPNET_DVR_DEVLIST;

typedef struct tagNET_DVR_DEV_BASE_INFO
{
	DWORD  dwSize;
	BYTE   byEnable;          /*??﹞?????????????*/
	BYTE   byDeviceType;      /*?豕㊣??角??(????????)*/
	BYTE   byRes1[2];
	BYTE   sDevName[NAME_LEN]; /*?豕㊣?????*/
	BYTE   byRes2[24];
} NET_DVR_DEV_BASE_INFO, *LPNET_DVR_DEV_BASE_INFO;

/*????????????*/
typedef  struct tagNET_DVR_NETPARAM
{
	DWORD dwSize;
	NET_DVR_SINGLE_NETPARAM struEtherNet[MAX_ETHERNET];//????????    
	BYTE   byRes[64];
} NET_DVR_NETPARAM, *LPNET_DVR_NETPARAM;

// ∼車?“???????豕㊣?????(16??℅???)
typedef struct tagNET_DVR_DISP_SCREEN
{
	DWORD    dwSize;
	WORD    wScreenID;        // ????ID??, ID????1????
	BYTE    byWallNo;        // ????????
	BYTE    byRes1;            // ㊣???1
	DWORD    dwDeviceIndex;    // ?????豕㊣??辰??
	BYTE    byRes2[16];        // ㊣???2
}NET_DVR_DISP_SCREEN, *LPNET_DVR_DISP_SCREEN;

// ????????
typedef struct tagNET_DVR_TEXTSHOW
{
	DWORD dwSize;
	BYTE  byShowText;//??﹞???????℅???1-??????℅???0-????????℅?
	BYTE  byRes[35];
}NET_DVR_TEXTSHOW, *LPNET_DVR_TEXTSHOW;

typedef struct tagNET_DVR_SCREENLIST
{
	DWORD        dwSize;
	BYTE        byWallNo;    //????????????1????
	BYTE        byRes[11];
	DWORD        dwScreenNums;//?豕㊣?﹞???????????????????
	BYTE          *pBuffer;
	DWORD         dwBufLen;//?迄﹞????????∟????????????
} NET_DVR_SCREENLIST, *LPNET_DVR_SCREENLIST;

typedef struct tagNET_DVR_OPERATE_DEVICE
{
	DWORD    dwSize;
	DWORD    dwSubCommand;    //?豕???豕㊣????邦????1-?豕㊣???????????2-????????
	DWORD    dwDeviceIndex;//?豕㊣??辰??
	BYTE    byRes[44];
}NET_DVR_OPERATE_DEVICE, *LPNET_DVR_OPERATE_DEVICE;

//?豕㊣?????
typedef struct tagNET_DVR_UPGRADE_STATE
{
	DWORD    dwProgress; // 0-100
	BYTE     byState;  //??????????1-?????那?? 2-???????? 3-?????∫∼?
	BYTE    byRes2[31];
}NET_DVR_UPGRADE_STATE, *LPNET_DVR_UPGRADE_STATE;
typedef void (CALLBACK *DVCS_UPGRADESTATE_CB)(LONG nUpgradeHandle, BYTE *pBuffer, DWORD dwBufSize, void* pUser);

typedef enum
{
	NET_DVR_DATA_BMP = 0,
	NET_DVR_START_CALLBACK,
	NET_DVR_STREAM_SYSHEAD,
	NET_DVR_STREAM_DATA
}PIC_PREVIEW_DATATYPE;

typedef struct tagNET_DVR_START_PIC_VIEW_INFO
{
	DWORD    dwSize;
	DWORD    dwSignalIndex;    //???????辰???????????????車???????‾???????豕㊣??????豕??0
	DWORD    dwDeviceIndex;//?豕㊣??辰??
	BYTE    byRes1[12];
	BYTE    byChanIndex;    //?“????
	BYTE    byRes2[3];
	//????℅??????“????????
	DWORD   dwScreenNum; //?車???辰????????????
	DWORD   dwLayer;     //????????????????
	DWORD   dwResolution;//????﹞?㊣???,1-QCIF,2-CIF,3-D1
	BYTE    byFrame;//??????????????/??
	BYTE    bySupportStreamView; //???∫????﹞??∫?????‾??????0-???∫????1-?∫??
	BYTE    byRes3[14];
}NET_DVR_START_PIC_VIEW_INFO, *LPNET_DVR_START_PIC_VIEW_INFO;

typedef struct tagNET_DVR_DVCS_STATE_ALARM
{
	DWORD    dwSize;
	BYTE    byAlarmType;        // ㊣“???角??,1-?豕㊣???????2-?豕㊣????? 3-﹞????‾???? 4-﹞????‾???? 5-???赤?㊣???? 6-?∟∼?????,7-?∟∼??芍????8-﹞?㊣???㊣?????9-?????????∫∼???10-?豕㊣?℅?????℅???11-?????足??  12-?∼???車??????????﹞?㊣?????﹞???*/
	BYTE    byDeviceType;        // ?豕㊣??角?? ???“??NET_DVCS_DEVICE_TYPE */ 
	BYTE    byWallNo;            // ????????1?????? 0㊣赤?????∫
	BYTE    byDeviceChanIndex;     // ?豕㊣??“??????0㊣赤?????∫????????㊣赤???“????
	DWORD    dwDeviceIndex;        // ?豕㊣??辰???? 0㊣赤?????∫
	WORD    wResolutionX;        // ﹞?㊣???-?赤  0㊣赤?????∫
	WORD    wResolutionY;        // ﹞?㊣???-??  0㊣赤?????∫
	WORD    wTemperature;       // ?豕㊣????? ????????????, 0㊣赤?????∫ 
	BYTE    byRes[86];
}NET_DVR_DVCS_STATE_ALARM, *LPNET_DVR_DVCS_STATE_ALARM;

typedef struct tagNET_DVR_PIC_ADJUST
{
	DWORD        dwSize;
	BYTE        bySubCommand;        //???那?“??DECODEPIC_LEFTADJUST??
	BYTE        byScale;            //?‾????????
	BYTE        byPictureProportion;    //??????﹞?㊣??? 0-???∫ 1-4:3, 2-16:9
	BYTE        byRes[29];
}NET_DVR_PIC_ADJUST, *LPNET_DVR_PIC_ADJUST;

typedef struct tagNET_DVR_PICTURE_PARAM
{
	DWORD    dwSize;
	BYTE    byControlCommand;    //?????邦????1-??????2-??????3-?????????“????GIF????    ??
	BYTE    byUseType;            //?????角????1-OSD 2-?℅????3-GIF
	BYTE    byWallNo;            //??????????????1????
	BYTE    byPictureNo;        //?????辰??
	BYTE    byRes[64];
}NET_DVR_PICTURE_PARAM, *LPNET_DVR_PICTURE_PARAM;

// 76SP?豕㊣?POE?“???赤??﹞???????
typedef struct tagNET_DVR_POE_CHANNEL_ADD_MODE
{
	DWORD        dwSize;                  //?芍?????車??
	BYTE         byAddMode;                 //?赤??﹞??? 0: ???????? 1: ?????赤??    
	BYTE          byRes1[127];              //㊣???
}NET_DVR_POE_CHANNEL_ADD_MODE, *LPNET_DVR_POE_CHANNEL_ADD_MODE;

#define MAX_ESATA_NUM 16
#define MAX_MINISAS_NUM 96

typedef struct tagNET_DVR_ESATA_MINISAS_USAGE
{
	DWORD        dwSize;
	BYTE        byESATAUsage[MAX_ESATA_NUM];        // ??℅谷?‾??㊣赤????????eSATA??0??????㊣?﹞? 1??????????
	BYTE        byMiniSASUsage[MAX_MINISAS_NUM];    // ??℅谷?‾??㊣赤????????miniSAS??0??????㊣?﹞? 1??????????
	BYTE         byRes[32];
}NET_DVR_ESATA_MINISAS_USAGE, *LPNET_DVR_ESATA_MINISAS_USAGE;

#define MAX_DISK_NUM 128

typedef struct tagNET_DVR_BACKUP_LOG_PARAM
{
	DWORD        dwSize;
	BYTE        byDiskDesc[DESC_LEN_32];        //㊣?﹞??????豕??
	BYTE        byHardDisk[MAX_DISK_NUM];        //?豕㊣?﹞???????????㊣?﹞????????∼???? 
	BYTE        byBackupHardDiskNum;              //?豕㊣?﹞???????????
	BYTE        byContinue;                        //??﹞?????㊣?﹞???0-????????1-????
	BYTE        byAllLogBackUp;        /*??﹞?????㊣?﹞???0-∼???????㊣?﹞???1-㊣?﹞??迄?????????㊣??1?㊣???豕㊣?﹞??????????????????????∫*/
	BYTE         byRes[29];
}NET_DVR_BACKUP_LOG_PARAM, *LPNET_DVR_BACKUP_LOG_PARAM;

typedef struct tagNET_DVR_DIGITAL_CHANNEL_STATE
{
	DWORD    dwSize;
	BYTE    byDigitalAudioChanTalkState[MAX_CHANNUM_V30];  //㊣赤????℅??????“????????℅??? 0-????????1-??????, 0xff???∫
	BYTE    byDigitalChanState[MAX_CHANNUM_V30];  /*??℅??“????????℅??? byDigitalChanErrState[0]
												  ㊣赤??????????℅??“??????????㊣赤??℅????????谷??NET_SDK_DIGITAL_CHANNEL_STATUS???????角????0㊣赤?????∫*/
	BYTE    byDigitalAudioChanTalkStateEx[MAX_CHANNUM_V30 * 3];  //㊣赤????℅??????“????????℅?????????MAX_CHANNUM_V30+1 ????MAX_CHANNUM_V30*4???? 0-????????1-??????, 0xff???∫
	BYTE    byDigitalChanStateEx[MAX_CHANNUM_V30 * 3];  /*??℅??“????????℅??? byDigitalChanErrStateEx[0]㊣赤????????MAX_CHANNUM_V30+1??????℅??“??????????㊣赤??℅????????谷??NET_SDK_DIGITAL_CHANNEL_STATUS???????角????0㊣赤?????∫*/
	BYTE    byAnalogChanState[MAX_ANALOG_CHANNUM];//㊣赤???????“????﹞?????,0-????,1-????
	BYTE    byRes[32];
}NET_DVR_DIGITAL_CHANNEL_STATE, *LPNET_DVR_DIGITAL_CHANNEL_STATE;

//??℅??“??℅???
typedef enum
{
	NET_SDK_DC_STATUS_CONNECTED = 1,                //??????
	NET_SDK_DC_STATUS_CONNECTING,                    //????????
	NET_SDK_DC_STATUS_BAND_WIDTH_EXCEED,        //???????????赤
	NET_SDK_DC_STATUS_DOMAIN_ERROR,                //?辰???赤?車
	NET_SDK_DC_STATUS_CHANNEL_ERROR,                //?“?????赤?車
	NET_SDK_DC_STATUS_ACCOUNT_ERROR,                //???∫???辰?????赤?車
	NET_SDK_DC_STATUS_STREAM_TYPE_NOT_SUPPORT,    //?‾?角?????∫??
	NET_SDK_DC_STATUS_CONFLICT_WITH_DVR,            //???豕㊣?IP???﹞????
	NET_SDK_DC_STATUS_CONFLICT_WITH_IPC,            //??IPC IP???﹞????
	NET_SDK_DC_STATUS_NETWORK_UNREACHBALE,    //??????????
	NET_SDK_DC_STATUS_IPC_NOT_EXIST,                //IP?“????????
	NET_SDK_DC_STATUS_IPC_EXCEPTION,                //IP?“???足??
	NET_SDK_DC_STATUS_OTHER_ERROR,                //?????赤?車
	NET_SDK_DC_STATUS_RESOLUTION_NOT_SUPPORT,    //IPC﹞?㊣??????∫??
	NET_SDK_DC_STATUS_IPC_LAN_ERR = 15,         //IPC??????NVR??????????
	NET_SDK_DC_STATUS_USER_LOCKED = 16,         //???∫㊣????“
	NET_SDK_DC_STATUS_NOT_ACTIVATED = 17,        //?豕㊣????∟??
	NET_SDK_DC_STATUS_USER_NOT_EXIST = 18,      //???∫??????
	NET_SDK_DC_STATUS_IPC_UNREGISTERED = 19,     //IP?“???????豕㊣???℅??芍(GB28181???谷????)
	NET_SDK_DC_STATUS_POE_PORT_DETECTING = 20,   //POE?“???足????
	NET_SDK_DC_STATUS_RESOURCE_EXCEED = 21,      /* IPC﹞?㊣?????????????????*/
	NET_SDK_DC_STATUS_NEED_TO_REPAIR = 22,       /* ℅????‾???????豕??????*/
	NET_SDK_DC_STATUS_ACTIVATING = 23,            /* IPC?????∟?? */
	NET_SDK_DC_STATUS_TOKEN_AUTHENTCATE_FAILED = 24            /* token???∟?∫∼? */
}NET_SDK_DIGITAL_CHANNEL_STATUS;

/*************************************ITS****************************/
#define VERSION_LEN                 32 //∼?㊣??∟??
#define    MAX_OVERLAP_ITEM_NUM        50 //℅??車℅?﹞?????????
#define    ITS_MAX_DEVICE_NUM            32 //℅??車?豕㊣?????

//?????迄㊣?????
typedef struct tagNET_ITS_BASEINFO
{
	DWORD   dwSize;
	BYTE    byMainVer[VERSION_LEN];    // ??﹞“?‾?‾??∼?㊣?
	BYTE    byMprVer[VERSION_LEN];    // ?角????㊣???∼?㊣?
	BYTE    byBvtVer[VERSION_LEN];    // ㊣??辰??????∼?㊣?
	BYTE    byLptVer[VERSION_LEN];    // ?????迆℅???∼?㊣?
	BYTE    byTvdVer[VERSION_LEN];    // ?????足????∼?㊣?
	BYTE    byTldVer[VERSION_LEN];    // ???????足????∼?㊣?
	BYTE    byRes[252];        // ?∟??℅???
}NET_ITS_BASEINFO, *LPNET_ITS_BASEINFO;

//????????????
typedef struct tagNET_ITS_IMGMERGE_CFG
{
	DWORD  dwSize;
	BYTE   byIsMerge;        //??﹞??豕???????“0??????????1????????
	BYTE   byCloseupProportion;//??????㊣??? 1-????﹞?㊣????車????2-?赤????????﹞?㊣?????㊣????????角??(1??8)
	BYTE   byRes1[2];
	DWORD  dwOneMergeType;    //℅?????????????﹞????“?????芍????????????
							  /************************************************************************/
							  /* 201 ????????????????????,?????車?????赤??????????1㊣?,????2㊣?         */
							  /* 202 ????????℅車??????????,?????車?????赤??????????2㊣?,????1㊣?         */
							  /* 203 ????????????????℅???㊣?.                                          */
							  /* 204 ????????????????℅???㊣?.                                        */
							  /* 205 ℅車??????????????℅???㊣???                                       */
							  /* 206 ℅車??????????????℅?℅車㊣?                                         */
							  /* 207 ?﹞℅?????????????????㊣?                                         */
							  /* 208 ???﹞℅?????????????????㊣?                                       */
							  /* 209 ??℅?????℅車㊣?1????????                                          */
							  /* 210 ﹞???℅???????㊣?1????????                                        */
							  /* 301 ????????????????????,?????車?????赤??????????1㊣?,????3㊣?         */
							  /* 302 ????????℅車??????????,?????車?????赤??????????3㊣?,????1㊣?          */
							  /* 303 ????????????????﹞迄???????????辰,℅谷??????????;????????"??"℅???????,
							  ??????????;?????車?????赤??????????2㊣?,????2㊣?                      */
							  /* 304 ????????????????﹞迄???????????辰,℅谷??????????;????????"??"℅???????,
							  ??????????;?????車?????赤??????????1㊣?,????1㊣?                      */
							  /* 305 ????????????????﹞迄???????????辰,℅谷??????????;????????"??"℅???????,
							  ??????℅車??;?????車?????赤??????????2㊣?,????2㊣?                      */
							  /* 306 ????????????????﹞迄???????????辰,℅谷??????????;????????"??"℅???????,
							  ??????℅車??;????????﹞?㊣???,?????車?????赤??????????1㊣?,????1㊣?      */
							  /* 307 ????????"?﹞"℅???????????                                          */
							  /* 308 ??????????"?﹞"℅???????????                                      */
							  /* 309 ????????????????﹞迄???????????辰,℅谷??????????;????????"??"℅???????,
							  ??????℅車??;?????車?????赤??????????2㊣?,????2㊣?                          */
							  /* 310 ????????????????﹞迄???????????辰,℅谷??????????;????????"??"℅???????,
							  ??????℅車??;?????車?????赤??????????1㊣?,????1㊣?                          */
							  /* 311 ????????????????﹞迄???????????辰,℅谷??????????;????????"??"℅???????,
							  ??????????;?????車?????赤??????????2㊣?,????2㊣?                          */
							  /* 312 ????????????????﹞迄???????????辰,℅谷??????????;????????"??"℅???????,
							  ??????????;????????﹞?㊣???,?????車?????赤??????????1㊣?,????1㊣?      */

							  /* 313 ????????????????﹞迄???????????辰??℅谷????????????
							  ?????????芍"??"℅?????????
							  ???辰???????????????∼???????∼???????∼??                         */
							  /* 314 ????????????????﹞迄???????????辰??℅谷????????????
							  ?????????芍"??"℅?????????
							  ???辰???????∼???????????????∼???????∼??                         */
							  /* 315 ????????????????﹞迄???????????辰??℅谷????????????
							  ?????????芍"??"℅?????????
							  ???辰???????∼???????∼???????????????∼??                         */
							  /* 316 ????????????????﹞迄???????????辰??℅谷????????????
							  ?????????芍"??"℅?????????
							  ???辰???????∼???????∼???????∼??????????                         */
							  /* 317 ????????????????﹞迄???????????辰??℅谷????????????
							  ?????????迆"1"℅?????????
							  ???辰???????????????∼???????∼???????∼??                         */
							  /* 318 ????????????????﹞迄???????????辰??℅谷????????????
							  ?????????迆"1"℅?????????
							  ???辰???????∼???????????????∼???????∼??                         */
							  /* 319 ????????????????﹞迄???????????辰??℅谷????????????
							  ?????????迆"1"℅?????????
							  ???辰???????∼???????∼???????????????∼??                         */
							  /* 320 ????????????????﹞迄???????????辰??℅谷????????????
							  ?????????迆"1"℅?????????
							  ???辰???????∼???????∼???????∼??????????                         */
							  /************************************************************************/
	DWORD  dwTwoMergeType;    //℅?????????????﹞???
	DWORD  dwThreeMergeType;    //℅?????????????﹞???
	DWORD  dwJpegQuality;      //?????????“0~100??
	DWORD  dwCloseupIndex;     //??????℅?????????
	DWORD  dwMerageMaxSize;   //?????????車????????,300-10240(????KB)
	WORD   wCloseupDeviation; // ????????????(50~????????)??????:????
	BYTE   byRes[30];
}NET_ITS_IMGMERGE_CFG, *LPNET_ITS_IMGMERGE_CFG;

//???“?????‾?迆
typedef    struct    tagNET_ITS_TRAFFIC_DATA_HOST
{
	NET_DVR_IPADDR    struHostAddr;    // ?????‾?迆IP
	WORD            wHostPort;    // ?????‾?迆Port
	BYTE            byRes1[2];
	DWORD            dwDataType;    // ?????????‾?迆???????角???“?“??????????∼???㊣赤??
	BYTE            bySuspendUpload;    // ??﹞???????????????0-??????????1-????????
	BYTE            byUploadStrategy;    // ??????????0-℅?????????????????1-∼????“???㊣??????
	WORD            wUploadInterval;    // ?????????㊣???“ms??1~2000???????????????迆?﹞???????∫
	DWORD            dwUploadTimeOut; //???????㊣?㊣??
	BYTE            byRes[24];
}NET_ITS_TRAFFIC_DATA_HOST, *LPNET_ITS_TRAFFIC_DATA_HOST;

//????????????
typedef  struct    tagNET_ITS_UPLOAD_CFG
{
	DWORD                  dwSize;
	NET_ITS_TRAFFIC_DATA_HOST    struRemoteDataHost1;       //???????“?????‾?迆1
	NET_ITS_TRAFFIC_DATA_HOST    struRemoteDataHost2;        //???????“?????‾?迆2 
}NET_ITS_UPLOAD_CFG, *LPNET_ITS_UPLOAD_CFG;

typedef struct tagNET_DVR_SYSTEM_TIME
{
	WORD  wYear;           //?那
	WORD  wMonth;          //??
	WORD  wDay;            //??
	WORD  wHour;           //?㊣
	WORD  wMinute;      //﹞?
	WORD  wSecond;      //??
	WORD  wMilliSec;    //????
	BYTE  byRes[2];
}NET_DVR_SYSTEM_TIME, *LPNET_DVR_SYSTEM_TIME;

//???“?????‾?迆℅???????
typedef    struct tagNET_ITS_TRAFFIC_DATA_INFO
{
	DWORD    dwDataQuantity;      //????℅???
	DWORD    dwDataRsendQuantity;     //??﹞????????“?豕?????????“?????‾?迆????
	NET_DVR_SYSTEM_TIME      struStartTime;        //??﹞?????????℅????㊣??
	NET_DVR_SYSTEM_TIME      struEndTime;        //??﹞?????????℅??赤?㊣??
	NET_DVR_IPADDR   struDataHost;    //???????“?????‾?迆
}NET_ITS_TRAFFIC_DATA_INFO, *LPNET_ITS_TRAFFIC_DATA_INFO;

//?????∟℅‾℅???
typedef  struct tagNET_ITS_WORKSTATE
{
	DWORD  dwSize;
	BYTE   byDevName[NAME_LEN];    // ?豕㊣?????
	DWORD  dwRunTime;        // ?????????㊣????????s
	NET_ITS_TRAFFIC_DATA_INFO    struTrafficDataInfo[2]; //?∫?????“?‾?迆?“???????????????‾?迆??
	DWORD  dwMemoryUsage;    // ???????????“????????????????30%????????30??
	DWORD  dwCpuUsage;        // cpu???????“????cpu????????30%????????30??
	DWORD  dwDevTemperature;    // ㊣??迆????
	DWORD  dwDeviceStatic;     // ?豕㊣???℅???,0-????,1-CPU??????????,????85%,2-?????赤?車,????????????
	NET_DVR_DISKSTATE  struHardDiskStatic[MAX_DISKNUM_V30];   //????℅???
	NET_DVR_CHANNELSTATE_V30 struChanStatic[MAX_CHANNUM_V30]; //?“????℅???
	BYTE  byAlarmInStatic[MAX_ALARMIN_V30];  //㊣“??????????℅???,0-????㊣“??,1-??㊣“??
	BYTE  byAlarmOutStatic[MAX_ALARMOUT_V30]; //㊣“????????????℅???,0-????????,1-??㊣“??????
	DWORD dwLocalDisplay;            //㊣???????℅???,0-????,1-??????
	BYTE  byAudioInChanStatus[8];      //㊣赤???????“????℅??? 0-????????1-??????????℅谷0㊣赤????1???????“??
	BYTE  byRes[36];             //㊣???
}NET_ITS_WORKSTATE, *LPNET_ITS_WORKSTATE;

//?????????“????????????
typedef  struct tagNET_ITS_ECT_WORKSTATE_COMMAND
{
	DWORD    dwSize;
	DWORD   dwChannel;
	BYTE    byRes[256];             //㊣???
}NET_ITS_ECT_WORKSTATE_COMMAND, *LPNET_ITS_ECT_WORKSTATE_COMMAND;

typedef struct tagNET_ITS_ECTWORKSTATE
{
	DWORD     dwSize;
	BYTE     byDevName[NAME_LEN];    // ?豕㊣?????
	DWORD    dwRunTime;        // ?????????㊣????????s
	NET_ITS_TRAFFIC_DATA_INFO    struTrafficDataInfo[2]; //?∫?????“?‾?迆?“???????????????‾?迆??
	DWORD    dwMemoryUsage;    // ???????????“????????????????30%????????30??
	DWORD    dwCpuUsage;        // cpu???????“????cpu????????30%????????30??
	DWORD    dwDevTemperature;    // ㊣??迆????
	DWORD    dwDeviceStatic;     // ?豕㊣???℅???,0-????,1-CPU??????????,????85%,2-?????赤?車,????????????
	NET_DVR_DISKSTATE  struHardDiskStatic[MAX_DISKNUM_V30];   //????℅???
	BYTE     byAlarmInStatic[MAX_ALARMIN_V30];  //㊣“??????????℅???,0-????㊣“??,1-??㊣“??
	BYTE     byAlarmOutStatic[MAX_ALARMOUT_V30]; //㊣“????????????℅???,0-????????,1-??㊣“??????
	DWORD    dwLocalDisplay;            //㊣???????℅???,0-????,1-??????
	BYTE     byRes[256];             //㊣???
}NET_ITS_ECTWORKSTATE, *LPNET_ITS_ECTWORKSTATE;

// ?????????“?車???芍???????‾??
typedef struct tagNET_ITS_PICTURE_INFO
{
	DWORD   dwDataLen;            //?????????∟??
	BYTE    byType;            // 0:??????;1:??????;2:??????; 3:??????;4:???㊣??;5:???‾;6:????℅???(?‾????);7:????℅???(?㊣????)????;8-﹞??迆????;9-????;10-??????????????;11-??㊣那??;12-?‾???????? ;13-?㊣????????;14-????????????
							   // 0-?????㊣??????; 1-??????﹞????‾URL(3.7Ver)??????????????㊣???URL???????????∟??㊣???URL?∟??
	BYTE    byDataType;
	BYTE    byCloseUpType;//???????角????0-㊣???,1-﹞??迆????,2-????
	BYTE    byPicRecogMode;  //????㊣??辰??㊣???0-???辰??????㊣???1-㊣??辰??㊣?(??????㊣?) ??
	DWORD   dwRedLightTime;        //???????足???㊣??  ?“s??
	BYTE    byAbsTime[32];        //?????㊣????,yyyymmddhhmmssxxx,e.g.20090810235959999  ℅??車????????????
	NET_VCA_RECT   struPlateRect;    //????????,?㊣byType??8-﹞??迆????;9-?????㊣??㊣赤??????℅?㊣那
	NET_VCA_RECT  struPlateRecgRect;   //???????辰℅?㊣那???㊣?????角????12-?‾????????13-?㊣??????????????℅?㊣那???????㊣℅?㊣那
	BYTE    *pBuffer;    //????????
	DWORD   dwUTCTime;//UTC?㊣???“??
	BYTE    byCompatibleAblity; //????????℅??? 0㊣赤?????∫??1㊣赤?????∫; bit0-㊣赤??dwUTCTime℅??????∫
	BYTE    byTimeDiffFlag;      /*?㊣??℅?????﹞????∫  0-?㊣?????∫?? 1-?㊣?????∫ */
	char    cTimeDifferenceH;         /*??UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????,??byTimeDiffFlag??1?㊣???∫*/
	char    cTimeDifferenceM;      	/*??UTC???㊣???“﹞???????-30, 30, 45?? +㊣赤????????byTimeDiffFlag??1?㊣???∫*/
	BYTE    byRes2[4];           //㊣???
}NET_ITS_PICTURE_INFO, *LPNET_ITS_PICTURE_INFO;


typedef struct tagNET_ITS_ILLEGAL_INFO
{
	BYTE  byIllegalInfo[MAX_ILLEGAL_LEN/*64*/];// ?????角???????“℅?﹞???????
	BYTE  byRes[256];
}NET_ITS_ILLEGAL_INFO, *LPNET_ITS_ILLEGAL_INFO;


// ?足???芍??
typedef struct tagNET_ITS_PLATE_RESULT
{
	DWORD   dwSize;        //?芍???∟??
	DWORD   dwMatchNo;        //?????辰??,??(?????辰??,?????角??,??????)℅谷????????
	BYTE    byGroupNum;    //????℅谷?????“?????????角?迆?角??℅????????????迆㊣赤??℅谷??????℅????????????㊣??????????
	BYTE    byPicNo;        //???????????辰???“??????????℅谷?????車??㊣赤???????那??;???????㊣??℅?????℅谷?????㊣???迄???豕??㊣????辰??????
	BYTE    bySecondCam;    //??﹞??????角?迆℅????“?????邦?∼℅????????∼?角?迆???辰?∼?車℅??????車?角?迆?????????????芍??????
	BYTE    byFeaturePicNo; //???足??????????????????℅‾????????,0xff-㊣赤??????
	BYTE    byDriveChan;        //??﹞???????
	BYTE    byVehicleType;     //?????角????????VTR_RESULT
	BYTE    byDetSceneID;//?足?????∼??[1,4], IPC??????0
						 //??????????∼???㊣赤????0- ??????????(???“??)??bit1- ??㊣那??(?角???那?足??㊣那??)??bit2- ?????﹞??????????0- ﹞???1- ??
						 //????????????????,??????????byYellowLabelCar??byDangerousVehicles??????﹞???㊣那?????????﹞??
	BYTE    byVehicleAttribute;
	WORD    wIllegalType;       //?????角???????迆㊣那?“??
	BYTE    byIllegalSubType[8];   //????℅??角??
	BYTE    byPostPicNo;    //?????㊣????????????℅‾???“????,0xff-㊣赤??????
							//?“????(???∫??㊣“???“???????迄???豕㊣?????㊣“???“?????????????車?????迄?????? ?“????????)
	BYTE    byChanIndex;
	WORD    wSpeedLimit;        //?????????“?????㊣???∫??
	BYTE    byChanIndexEx;      //byChanIndexEx*256+byChanIndex㊣赤???????“??????
	BYTE    byVehiclePositionControl;  /*????????????㊣那??,0~?????“??????㊣?㊣“??,1~????????????????﹞?㊣“??
									   (???“??PUT /ISAPI/Traffic/channels/<ID>/vehiclePositionControl?format=json??﹞?)*/
	NET_DVR_PLATE_INFO  struPlateInfo;     //?????????芍??
	NET_DVR_VEHICLE_INFO struVehicleInfo;    //????????
	BYTE    byMonitoringSiteID[48];        //?角????㊣角??
	BYTE    byDeviceID[48];                //?豕㊣?㊣角??
	BYTE    byDir;            //?角??﹞??辰??1-?????“﹞??辰????2-????(???辰)??3-???辰??4-?????辰?‾??5-?????辰㊣㊣,6-???‾?辰????7-??㊣㊣?辰????8-???邦
	BYTE    byDetectType;    //?足??﹞???,1-??????﹞???2-??????﹞???3-?角????㊣???4-?℅????﹞?
							 //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
							 //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE    byRelaLaneDirectionType;
	BYTE    byCarDirectionType; //??????????????﹞??辰??0㊣赤???????迄????1㊣赤???????迄???“?迄????????????????﹞??辰??????﹞???
								//?㊣wIllegalType?????????㊣????????????????wIllegalType???????????㊣????wIllegalType??????℅????????????∫??
	DWORD   dwCustomIllegalType; //?????角???“??(???∫℅??“??)
								 /*??0~??℅??????㊣?????????????角????wIllegalType??dwCustomIllegalType?????迆?∫???????迆㊣那??﹞“?迆????
								 ??1~℅?﹞??????㊣??pIllegalInfoBuf?????迆?∫???????????角????wIllegalType??dwCustomIllegalType?????????????迆㊣那??﹞“?迆??*/
	BYTE*   pIllegalInfoBuf;    //??﹞“?迆??℅?﹞??????芍?????????????辰NET_ITS_ILLEGAL_INFO 
	BYTE    byIllegalFromatType; //?????????????角???? 0~??℅??????? 1~℅?﹞?????
	BYTE    byPendant;// 0-㊣赤??????,1-???∼???邦??????2-???∼???邦????
	BYTE    byDataAnalysis;            //0-??????﹞???, 1-??????﹞???
	BYTE    byYellowLabelCar;        //0-㊣赤??????, 1-﹞???㊣那??,2-??㊣那??
	BYTE    byDangerousVehicles;    //0-㊣赤??????, 1-﹞??????﹞??,2-?????﹞??
									//????℅???∼邦??Pilot℅?﹞??迄???‾????????Copilot℅?﹞??迄???㊣????
	BYTE    byPilotSafebelt;//0-㊣赤??????,1-??∼?????,2-????∼?????
	BYTE    byCopilotSafebelt;//0-㊣赤??????,1-??∼?????,2-????∼?????
	BYTE    byPilotSunVisor;//0-㊣赤??????,1-???辰??????∼?,2-?辰??????∼?
	BYTE    byCopilotSunVisor;//0-㊣赤??????, 1-???辰??????∼?,2-?辰??????∼?
	BYTE    byPilotCall;// 0-㊣赤??????, 1-???辰???∼,2-?辰???∼
						//0-??????1-?????? (℅“?????迆?﹞???????角?迆?迄????∼℅?????????車????﹞???????????㊣那??)
	BYTE    byBarrierGateCtrlType;
	BYTE    byAlarmDataType;//0-???㊣??????1-?迆?﹞????
	NET_DVR_TIME_V30  struSnapFirstPicTime;//?????㊣??(ms)?“℅????????????????㊣????
	DWORD   dwIllegalTime;//??﹞“?????㊣???“ms?? = ℅???℅??車???????????㊣?? - ℅????????????????㊣??
	DWORD   dwPicNum;        //?????????“??picGroupNum???????迆㊣赤㊣?????????????????????????????????struVehicleInfoEx?“??    
	NET_ITS_PICTURE_INFO struPicInfo[6];         //????????,???????‾??℅??角6?????????辰????﹞?
}NET_ITS_PLATE_RESULT, *LPNET_ITS_PLATE_RESULT;

//??????????℅???????????
typedef struct tagNET_ITS_GATE_VEHICLE
{
	DWORD   dwSize;        //?芍???∟??
	DWORD   dwMatchNo;        //?????辰??,??(?????辰??,?????角??,??????)℅谷???????? ????0
	BYTE    byGroupNum;    //????℅谷?????“?????????角?迆?角??℅????????????迆㊣赤??℅谷??????℅????????????㊣?????????????? 1 ℅????角???????????? ?????車?????????㊣??℅‾
	BYTE    byPicNo;        //??????????℅谷?????????辰???“??????????℅谷?????車??㊣赤???????那????
							//???????㊣??℅?????℅谷?????㊣???迄???豕??㊣????辰??????
	BYTE    bySecondCam;    //??﹞??????角?迆℅????“?????邦?∼℅????????∼?角?迆???辰?∼?車℅??????車?角?迆?????????????芍??????㊣那???∼?車?角?迆℅???????
	BYTE    byRes; //㊣那?????∟??
	WORD    wLaneid;            //??????1??32?“?‾????????????????????
	BYTE    byCamLaneId;    //?????角?迆??????1??16?“?角?迆?????????????????????????????角????
	BYTE    byRes1;            //㊣???
	BYTE    byAlarmReason[MAX_ALARMREASON_LEN]; //℅??“??㊣“???角?? ??????????
	WORD    wBackList;    //㊣那??????﹞?㊣“?????? 0 ㊣赤???????????????? 1 ㊣赤????????
	WORD    wSpeedLimit;        //?????????“?????㊣???∫??km/h
	DWORD   dwChanIndex;        //?“????
	NET_DVR_PLATE_INFO    struPlateInfo;     //?????????芍??
	NET_DVR_VEHICLE_INFO  struVehicleInfo;    //????????  ??????
	BYTE    byMonitoringSiteID[MAX_ID_LEN];        //?角????㊣角??
	BYTE    byDeviceID[MAX_ID_LEN];                //?豕㊣?㊣角?? 
	BYTE    byDir;            //?角??﹞??辰??0-???邦 1 ??????2 ????
	BYTE    byDetectType;    //?足??﹞???, 0-???? 1-??????﹞???2-??????﹞???3-?角????㊣???4-?℅????﹞?
	BYTE    byRes2[2];
	BYTE    byCardNo[MAX_ID_LEN]; // ?“??
	DWORD   dwPicNum;        //?????????“??picGroupNum???????迆㊣赤㊣?????????????????????????????????struVehicleInfoEx?“??    
	NET_ITS_PICTURE_INFO struPicInfo[4];         //????????,???????‾??℅??角4?????????辰????﹞?
												 //2013-11-19 ??????????℅????????????“?角??﹞?????????????
	BYTE    bySwipeTime[MAX_TIME_LEN];//???????“?㊣??  ?㊣????????yyyymmddhh24missfff
	BYTE    byRes3[224];
}NET_ITS_GATE_VEHICLE, *LPNET_ITS_GATE_VEHICLE;

//????????????㊣?
typedef  struct  tagNET_ITS_GATE_FACE
{
	DWORD   dwSize;            //?芍?????∟??
	BYTE    byGroupNum;    //????℅谷?????“?????????角?迆?角??℅????????????迆㊣赤??℅谷??????℅????????????㊣??????????
	BYTE    byPicNo;        //???????????辰???“??????????℅谷?????車??㊣赤???????那????
							//???????㊣??℅?????℅谷?????㊣???迄???豕??㊣????辰??????
	BYTE    byFeaturePicNo; //??℅??㊣??????????℅‾????????,0xff-㊣赤??????
	BYTE    byRes;   //㊣???
	WORD    wLaneid;            //??????1??32?“?‾????????????????????
	BYTE    byCamLaneId;    //?????角?迆??????1??16?“?角?迆?????????????????????????????角????
	BYTE    byDir;        //?角??﹞??辰??0-???? 1 ?????? 2 ????
	DWORD   dwChanIndex;        //?“???? 
	BYTE    byMonitoringSiteID[MAX_ID_LEN];        //?角????㊣角??
	BYTE    byDeviceID[MAX_ID_LEN];                //?豕㊣?㊣角??
	NET_VCA_FACESNAP_RESULT     struFaceInfo;   //????℅???????    
	BYTE    byRes2[256];   //?∟??
}NET_ITS_GATE_FACE, *LPNET_ITS_GATE_FACE;

//??????????????
typedef struct _tagNET_ITS_PARK_VEHICLE_
{
	DWORD   dwSize; //?芍???∟??
	BYTE    byGroupNum; //????℅谷?????“????????℅???????????????
	BYTE    byPicNo; //??????????℅谷?????????辰???“??????????℅谷?????車??㊣赤???????那??
					 //???????㊣??℅?????℅谷?????㊣???迄???豕??㊣????辰??????
	BYTE    byLocationNum; //?????????迄???赤????????
	BYTE    byParkError; //?????足????0-???? 1 ?足??
	BYTE    byParkingNo[MAX_PARKNO_LEN];//????㊣角??
	BYTE    byLocationStatus; //????????℅?????0-??????1????
	BYTE    bylogicalLaneNum;//????????????0-3???????角?迆℅??車????4?????? ?“0?迆㊣赤℅?℅車㊣???3?迆㊣赤℅???㊣???
	WORD    wUpLoadType;//??????㊣赤????0~??????????1~㊣???????
	BYTE    byRes1[4]; //㊣???℅???
	DWORD   dwChanIndex; //?“??????℅??“??
	NET_DVR_PLATE_INFO   struPlateInfo;  //?????????芍??
	NET_DVR_VEHICLE_INFO struVehicleInfo; //????????
	BYTE    byMonitoringSiteID[MAX_ID_LEN]; //?角????㊣角??
	BYTE    byDeviceID[MAX_ID_LEN]; //?豕㊣?㊣角?? 
	DWORD   dwPicNum; //?????????“??picGroupNum???????迆㊣赤㊣?????????????????????
					  //????????????struVehicleInfoEx?“?? 
	NET_ITS_PICTURE_INFO struPicInfo[2];  //????????,???????‾??℅??角2?????????辰????﹞?
	BYTE   byRes2[256];
}NET_ITS_PARK_VEHICLE, *LPNET_ITS_PARK_VEHICLE;

//???“???∟㊣“??
typedef struct tagNET_DVR_TFS_ALARM
{
	DWORD                   dwSize;                //?芍?????車??
	DWORD                   dwRelativeTime;        //?角???㊣㊣那
	DWORD                   dwAbsTime;               //?????㊣㊣那
	DWORD                   dwIllegalType;         //?????角?????????迆㊣那?“?????㊣dwIllegalType????0xffffffff?㊣????byIllegalCode
	DWORD                   dwIllegalDuration;     //??﹞“?????㊣???“?????????? = ℅???℅??車???????????㊣?? - ℅????????????????㊣??
	BYTE                    byMonitoringSiteID[MONITORSITE_ID_LEN];//?角????㊣角???“?﹞??㊣角????????㊣角????
	BYTE                    byDeviceID[DEVICE_ID_LEN];             //?豕㊣?㊣角??
	NET_VCA_DEV_INFO        struDevInfo;           //?∼???豕㊣?????
	NET_DVR_SCENE_INFO      struSceneInfo;         //???∼????
	NET_DVR_TIME_EX         struBeginRecTime;      //?????????㊣?? 
	NET_DVR_TIME_EX         struEndRecTime;        //?????芍???㊣?? 
	NET_DVR_AID_INFO        struAIDInfo;           //???“????????
	NET_DVR_PLATE_INFO      struPlateInfo;         //????????
	NET_DVR_VEHICLE_INFO    struVehicleInfo;       //????????
	DWORD                   dwPicNum;              //????????
	NET_ITS_PICTURE_INFO    struPicInfo[8];        //??????????℅??角8?? 
	BYTE                    bySpecificVehicleType;     //???????????角  ??????㊣??芍???角??VTR_RESULT
	BYTE                    byLaneNo;  //??????????
	BYTE                    byRes1[2]; //㊣???
	NET_DVR_TIME_V30        struTime;//?????迆℅??“?????㊣?∼?㊣????
	DWORD                   dwSerialNo;//?辰????
	BYTE                    byVehicleAttribute;//??????????∼???㊣赤????0- ??????????(???“??)??bit1- ??㊣那??(?角???那?足??㊣那??)??bit2- ?????﹞??????????0- ﹞???1- ??
	BYTE                    byPilotSafebelt;//0-㊣赤??????,1-??∼?????,2-????∼?????
	BYTE                    byCopilotSafebelt;//0-㊣赤??????,1-??∼?????,2-????∼?????
	BYTE                    byPilotSunVisor;//0-㊣赤??????,1-???辰??????∼?,2-?辰??????∼?
	BYTE                    byCopilotSunVisor;//0-㊣赤??????, 1-???辰??????∼?,2-?辰??????∼?
	BYTE                    byPilotCall;// 0-㊣赤??????, 1-???辰???∼,2-?辰???∼
	BYTE                    byRes2[2]; //㊣???
	BYTE                    byIllegalCode[ILLEGAL_LEN/*32*/];//??﹞“?迆?????????㊣dwIllegalType????0xffffffff????????????
	WORD                    wCountry; // ?迆???‾????,????????COUNTRY_INDEX
	BYTE                    byRegion; //???辰?‾????,0-㊣?????1-?﹞??(Europe Region)??2-?赤?????辰(Russian Region)??3-?﹞??&?赤????(EU&CIS) , 4-?????“Middle East????0xff-?迄??
	BYTE                    byCrossLine;//??﹞??????????“?角﹞?????????0-㊣赤????????1-????????2-????
	BYTE                    byParkingSerialNO[SERIAL_NO_LEN/*16*/];//??????㊣角??
	BYTE                    byCrossSpaces;//??﹞??????????????“?角﹞?????????0-㊣赤????????1-????????????????2-????????????
	BYTE                    byAngledParking;//??﹞????㊣?????“?角﹞???????, 0-㊣赤????????1-?????㊣??????2-???㊣????
	BYTE                    byAlarmValidity;//㊣“????????????????????????????????????﹞??∫0-100????????????????????????????
	BYTE                    byDoorsStatus;//????℅??? 0-??????㊣? 1-????????
	BYTE                    byRes[44]; //㊣???
}NET_DVR_TFS_ALARM, *LPNET_DVR_TFS_ALARM;

typedef struct tagNET_DVR_SOFTWARE_SERVICE_CFG
{
	DWORD       dwSize;//?芍?????車??
	BYTE        byThirdStreamEnabled;  //??﹞??????????‾??????0-﹞???1-??
	BYTE        bySubStreamEnabled;  //??﹞?????℅????‾??????0-﹞???1-??
	BYTE        byRes[254];
}NET_DVR_SOFTWARE_SERVICE_CFG, *LPNET_DVR_SOFTWARE_SERVICE_CFG;

typedef struct _tagNET_ITS_ECT_BLACKLIST_
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	BYTE  bylogicalLaneNo;//??????????
	BYTE  byRes1[3];
	BYTE  byLaneName[NAME_LEN];//???????? 32
	NET_DVR_PLATE_INFO  struPlateInfo;  //?????????芍??  
	BYTE  byRes2[256];       // ㊣???℅???    
}NET_ITS_ECT_BLACKLIST, *LPNET_ITS_ECT_BLACKLIST;

//IPC?“??????????
typedef    struct     tagNET_ITS_IPC_CHAN_CFG
{
	DWORD        dwSize;
	BYTE        byCameraType;        //?角?迆???角??0-?角?????角?迆??1-??????﹞??角?迆??2-????﹞??????角?迆,3-?????迆
	BYTE        byRes1[3];           //㊣???
	BYTE        byMonitoringSiteID[48];        //?角????㊣角??
	BYTE        byDeviceID[48];                //?豕㊣?㊣角??
	BYTE        byDirectionNo;         //?角??﹞??辰㊣角??,0-??,1-????,2-????,3-???辰,4-?????辰?‾,5-?????辰㊣㊣,6-???‾?辰??,7-??㊣㊣?辰??,8-????
	BYTE        byMonitorInfo[48];      //?角?????????豕??
	BYTE        byRes2[15];        //㊣???
}NET_ITS_IPC_CHAN_CFG, *LPNET_ITS_IPC_CHAN_CFG;

//?????豕㊣?????
typedef struct tagNET_ITS_SINGLE_DEVICE_INFO
{
	DWORD  dwDeviceType;  //?豕㊣??角????0-??????1-?角?迆??2-????????3-???足?‾??4-????1??5-????2??6-????3??7-?足?????足???‾??8-?迆????
						  //9-?℅????10-??????11-???????????迆(?㊣??)??12-LED????????13-???角?????“?‾??14-?邦?角?????“?‾??15-?足???“?豕????
						  //16-?㊣???辰???迆??17-???????赤?‾(????﹞????‾?角??) , 18-?迆???足????
	DWORD  dwDirID;               //﹞??辰㊣角??
	DWORD  dwLaneID;             //????㊣角??
	DWORD  dwDeviceState;         //?豕㊣?℅???  0???? ﹞?0 ?足???“?????豕㊣??足???迆??㊣赤??
	BYTE   byDeviceName[32];     //?豕㊣?????
	BYTE   byDeviceID[48];           //?豕㊣?㊣角??????∼????辰?????????足?‾?????﹞
	NET_DVR_TIME_V30  struTriggerTime;//??﹞??㊣??
	BYTE   byRelateChan; //?????“?????“?????‾??1~8  AC??℅?1~4  AC??℅迄1~2??
	BYTE   byRes[3];
}NET_ITS_SINGLE_DEVICE_INFO, *LPNET_ITS_SINGLE_DEVICE_INFO;

//?﹞??????
typedef struct tagNET_ITS_ROADINFO
{
	DWORD     dwSize;
	DWORD     dwChannel;          //?“????,0xffffffff㊣赤???????????邦㊣赤?????????角?迆
	BYTE     byTriggerMode;    //  0:??????﹞?;  1:??????﹞?
	BYTE     byRes1[3];
	DWORD    dwDeviceNum;       //?????豕㊣????? 
	BYTE     byMonitoringSiteID[48];    //?角????㊣角??
	BYTE       byRoadInfo[48];       //?角????????
	NET_ITS_SINGLE_DEVICE_INFO        struSingleDevice[ITS_MAX_DEVICE_NUM];
	BYTE     byRes[16];
}NET_ITS_ROADINFO, *LPNET_ITS_ROADINFO;

//?????????﹞??????
typedef struct tagNET_ITS_TRAFFIC_DRIVE_CHAN
{
	BYTE   byDriveChan;        //??????
	BYTE   byRes1[3];            // ?∟??
	WORD   wCarFlux;            //?????‾????
	WORD   wPasserbyFlux;        //?????‾????
	WORD   wShayFlux;        //???????‾????
	float  fAverOccpancy;       //???迄??????????∼?﹞?㊣?
	WORD   wAverSpeed;         //???迄????(km/h)
	WORD   wAverCarDis;        //???迄???角(???????“)
	BYTE   byRes2[16];            // ?∟??
}NET_ITS_TRAFFIC_DRIVE_CHAN, *LPNET_ITS_TRAFFIC_DRIVE_CHAN;

typedef struct tagNET_ITS_TRAFFIC_COLLECT
{
	DWORD  dwSize;        //?芍???車??
	BYTE   byMonitoringSiteID[48];        //?角????㊣角??
	BYTE   byDeviceID[48];                //?豕㊣?㊣角??
	BYTE   byLaneNum;    //????℅???
	BYTE   byDir;        //?角??﹞??辰
	BYTE   byDetectType;    //?足??﹞???1-??????????2-??????﹞???3???角????㊣???4?℅????﹞?
	BYTE   byRes1;           //?∟??     
	DWORD  dwChannel; //?“????
	NET_DVR_SYSTEM_TIME     struStartTime;        //?????????㊣??
	DWORD  dwSamplePeriod;    //?????㊣??,??????
	NET_ITS_TRAFFIC_DRIVE_CHAN    struDriveChan[6];         //???“?‾??????,?????角?迆?∫??6??????
	BYTE   byRes2[24];     //?∟??
}NET_ITS_TRAFFIC_COLLECT, *LPNET_ITS_TRAFFIC_COLLECT;

typedef struct tagNET_ITS_OVERLAPCFG_COND
{
	DWORD dwSize;
	DWORD dwChannel;
	DWORD dwConfigMode; //??????????0-??????1-?∼??(?㊣???∼???辰???????∼??)
	BYTE  byPicModeType;//0-㊣赤??????(??????)??1-㊣赤???車??(??????)
						/*
						0㊣赤?????? ℅???MPR?????“?角????﹞?℅??? IPC??????
						1 ㊣赤?????? ℅??? HVT ?????“?足?“IPC??????
						*/
	BYTE  byRelateType;
	BYTE  byRes[14];
}NET_ITS_OVERLAPCFG_COND, *LPNET_ITS_OVERLAPCFG_COND;

typedef enum ITS_OVERLAP_ITEM_TYPE
{
	OVERLAP_ITEM_NULL = 0,          //0-????
	OVERLAP_ITEM_SITE,                //1-????
	OVERLAP_ITEM_ROADNUM,             //2-?﹞??㊣角??
	OVERLAP_ITEM_INSTRUMENTNUM,       //3-?豕㊣?㊣角??
	OVERLAP_ITEM_DIRECTION,           //4-﹞??辰㊣角??
	OVERLAP_ITEM_DIRECTIONDESC,       //5-﹞??辰
	OVERLAP_ITEM_LANENUM,             //6-??????
	OVERLAP_ITEM_LANEDES,             //7-????
	OVERLAP_ITEM_CAPTIME,             //8-℅????㊣??(????????)
	OVERLAP_ITEM_CAPTIME_MILLSECOND,  //9-℅????㊣??(??????)
	OVERLAP_ITEM_PLATENUM,            //10-??????
	OVERLAP_ITEM_CARCOLOR,            //11-???赤????
	OVERLAP_ITEM_CARTYPE,             //12-?????角??
	OVERLAP_ITEM_CARBRAND,            //13-?????﹞??
	OVERLAP_ITEM_CARSPEED,            //14-????????
	OVERLAP_ITEM_SPEEDLIMIT,          //15-????㊣那??
	OVERLAP_ITEM_CARLENGTH,           //16-?????∟??1~99m
	OVERLAP_ITEM_ILLEGALNUM,          //17-??﹞“?迆??(??﹞“?迆???????????????????????㊣????????﹞“??????㊣??????????????????????????????足??????????????????)
	OVERLAP_ITEM_MONITOR_INFO,      //18-?角????????
	OVERLAP_ITEM_ILLEGALDES,          //19-??﹞“????
	OVERLAP_ITEM_OVERSPEED_PERCENT,    //20-????㊣?
	OVERLAP_ITEM_RED_STARTTIME,           //21-?足???????㊣??
	OVERLAP_ITEM_RED_STOPTIME,        //22-?足???芍???㊣??
	OVERLAP_ITEM_RED_DURATION,        //23-?足???????㊣??
	OVERLAP_ITEM_SECUNITY_CODE,        //24-﹞??㊣??
	OVERLAP_ITEM_CAP_CODE,        //25-℅???㊣角??
	OVERLAP_ITEM_SEATBELT,      //26-∼?????  
	OVERLAP_ITEM_MONITOR_ID,    //27-?角????㊣角??
	OVERLAP_ITEM_SUN_VISOR,     //28-????∼? 
	OVERLAP_ITEM_LANE_DIRECTION,  //29-????????﹞??辰 
	OVERLAP_ITEM_LICENSE_PLATE_COLOR,  // 30-????????
	OVERLAP_ITEM_SCENE_NUMBER,  //31-???∼㊣角??
	OVERLAP_ITEM_SCENE_NAME,   //32-???∼????
	OVERLAP_ITEM_YELLOW_SIGN_CAR,  //33-??㊣那??
	OVERLAP_ITEM_DANGEROUS_CAR,    //34-?????﹞??
	OVERLAP_ITEM_CAR_SUBBRAND,  //35-????℅??﹞??
	OVERLAP_ITEM_CAR_DIRECTION,  //36-????﹞??辰
	OVERLAP_ITEM_PENDANT,  //37-???∼?邦????
	OVERLAP_ITEM_CALL,  //38-?辰???∼
	OVERLAP_ITEM_CAR_VALIDITY,  //39-??????
	OVERLAP_ITEM_CAR_COUNTRY,       //40-?迆??
	OVERLAP_ITEM_CAR_PLATE_TYPE,    //41-?????角?????????????角??????
	OVERLAP_ITEM_CAR_PLATE_SIZE,		//42-????????
	OVERLAP_ITEM_CAR_PLATE_COLOR,		//43-????????
	OVERLAP_ITEM_CAR_PLATE_CATEGORY,		//44-????????????
	OVERLAP_ITEM_ACCIDENT,  //45-???“????
	OVERLAP_ITEM_SMOKING,  //46-?邦??
	OVERLAP_ITEM_HELMET, //47-?‾?﹞??
	OVERLAP_ITEM_MANNED, //48-????
	OVERLAP_ITEM_HUMAN, //49-????????
	OVERLAP_ITEM_PLAYMOBILEPHONE, //50-?????迆

}ITS_OVERLAP_ITEM_TYPE;

//℅?﹞????????????????芍????
typedef struct tagNET_ITS_OVERLAP_SINGLE_ITEM_PARAM
{
	BYTE byRes1[2];                   // ㊣???
	BYTE byItemType;   //?角?????那??OVERLAP_ITEM_TYPE
	BYTE byChangeLineNum;           //???????車????????[0-10](????0)
	BYTE bySpaceNum;                   //???????車????????[0-255](????0)
	BYTE byRes2[2];
	BYTE byEnablePos;  //??﹞?????℅?㊣那????
	WORD wStartPosTop;    //??????℅?㊣那,???????????????????∫[0~2448](????0)
	WORD wStartPosLeft;    //????℅車℅?㊣那,???????????????????∫[0~2448](????0)
	BYTE byRes[8];
}NET_ITS_OVERLAP_SINGLE_ITEM_PARAM, *LPNET_ITS_OVERLAP_SINGLE_ITEM_PARAM;

typedef struct tagNET_ITS_OVERLAP_ITEM_PARAM
{
	NET_ITS_OVERLAP_SINGLE_ITEM_PARAM struSingleItem[MAX_OVERLAP_ITEM_NUM]; //????℅?﹞?????
	DWORD dwLinePercent;  //??????∼?﹞?㊣?(0-100),(????100)
	DWORD dwItemsStlye;   //????﹞?????0-?芍??,1-?迆??(?????芍??)
	WORD  wStartPosTop;    //??????℅?㊣那,???????????????????∫[0~2448](????0)
	WORD  wStartPosLeft;    //????℅車℅?㊣那,???????????????????∫[0~2448](????0)
	WORD  wCharStyle;    //℅????角??,0-????1-????(????)
	WORD  wCharSize;    //℅?﹞??車??,0--16x16,1--32x32,2-48x48,3--64x64 (????),8x128(Ver3.7)
	WORD  wCharInterval;    //℅?﹞????角??[0??16]?????豕??????????(????)
	BYTE  byRes1[2];
	DWORD dwForeClorRGB;      //?∼?∼????RGB??bit0-1:(B) bit2-3:(G) bit4-5:(G) (????x00FFFFFF-∼℅)
	DWORD dwBackClorRGB; //㊣??∼????RGB??,?????????????????∫bit0-1:(B) bit2-3:(G) bit4-5:(G) (????x00000000-??)
	BYTE  byColorAdapt;    //??????﹞?℅?????0-﹞?1-??
						   //(Ver3.7 ????)
						   // ???????????? 0-????, 1-???????“?那??℅?????????,?????? ??℅?3????0
	BYTE  byParamFillZeroEnble;
	BYTE  byPlateLeftCornerEnable;// ????????????℅車???????? 0-??????, 1-????
	BYTE  byRes2;
	WORD  wStartSPicPosTop; //??????℅?㊣那,???????????????????∫[0~2448](????0) 
	WORD  wStartSPicPosLeft; //????℅車℅?㊣那,???????????????????∫[0~2448](????0) 
							 //OSD????????  0-??????,1-??????㊣???,2-??????㊣????“??????℅“????????㊣????????“V3.7??
	BYTE       byOsdLocate;
	BYTE         byRes[23];
}NET_ITS_OVERLAP_ITEM_PARAM, *LPNET_ITS_OVERLAP_ITEM_PARAM;

//??????????????
typedef struct tagNET_ITS_OVERLAP_INFO_PARAM
{
	BYTE bySite[128];           //?????豕??
	BYTE byRoadNum[32];  //?﹞??㊣角??
	BYTE byInstrumentNum[32];                //?豕㊣?㊣角??
	BYTE byDirection[32];        //﹞??辰㊣角??
	BYTE byDirectionDesc[32];    //﹞??辰?豕??
	BYTE byLaneDes[32];        //?????豕??
	BYTE byRes1[32];     //㊣???
	BYTE byMonitoringSite1[44];        //?角????1????
	BYTE byMonitoringSite2[32];        //?角????2????
	BYTE byRes[64];        //㊣???
}NET_ITS_OVERLAP_INFO_PARAM, *LPNET_ITS_OVERLAP_INFO_PARAM;

typedef struct tagNET_ITS_OVERLAP_CFG
{
	DWORD dwSize;
	BYTE  byEnable; //??﹞???????0-????????1-????
	BYTE  byRes1[3];
	NET_ITS_OVERLAP_ITEM_PARAM        struOverLapItem; //℅?﹞???????
	NET_ITS_OVERLAP_INFO_PARAM     struOverLapInfo;  //℅?﹞???????????
	BYTE  byRes[32];
}NET_ITS_OVERLAP_CFG, *LPNET_ITS_OVERLAP_CFG;

//℅?﹞????????????????芍????
typedef struct tagNET_ITS_OVERLAP_SINGLE_ITEM_PARAM_V50
{
	BYTE byRes1[2];                   // ㊣???
	BYTE byItemType;   //?角?????那??OVERLAP_ITEM_TYPE
	BYTE byChangeLineNum;           //???????車????????[0-10](????0)
	BYTE bySpaceNum;                   //???????車????????[0-255](????0)
	BYTE byRes2[2];
	BYTE byEnablePos;  //??﹞?????℅?㊣那????
	WORD wStartPosTop;    //??????℅?㊣那,???????????????????∫[0~2448](????0)
	WORD wStartPosLeft;    //????℅車℅?㊣那,???????????????????∫[0~2448](????0)
						   //℅??“???角??????byItemType??????????????byItemType?????角??℅??“??????????℅??“????????????㊣???????byItemType?????????角???邦????
	BYTE byItemTypeCustom[32];
	BYTE byRes[8];
}NET_ITS_OVERLAP_SINGLE_ITEM_PARAM_V50, *LPNET_ITS_OVERLAP_SINGLE_ITEM_PARAM_V50;

typedef struct tagNET_ITS_OVERLAP_ITEM_PARAM_V50
{
	NET_ITS_OVERLAP_SINGLE_ITEM_PARAM_V50 struSingleItem[MAX_OVERLAP_ITEM_NUM]; //????℅?﹞?????
	DWORD dwLinePercent;  //??????∼?﹞?㊣?(0-100),(????100)
	DWORD dwItemsStlye;   //????﹞?????0-?芍??,1-?迆??(?????芍??)
	WORD  wStartPosTop;    //??????℅?㊣那,???????????????????∫[0~2448](????0)
	WORD  wStartPosLeft;    //????℅車℅?㊣那,???????????????????∫[0~2448](????0)
	WORD  wCharStyle;    //℅????角??,0-????1-????(????)
	WORD  wCharSize;    //℅?﹞??車??,0--16x16,1--32x32,2-48x48,3--64x64 (????),8x128(Ver3.7)
	WORD  wCharInterval;    //℅?﹞????角??[0??16]?????豕??????????(????)
	BYTE  byRes1[2];
	DWORD dwForeClorRGB;      //?∼?∼????RGB??bit0-1:(B) bit2-3:(G) bit4-5:(G) (????x00FFFFFF-∼℅)
	DWORD dwBackClorRGB; //㊣??∼????RGB??,?????????????????∫bit0-1:(B) bit2-3:(G) bit4-5:(G) (????x00000000-??)
	BYTE  byColorAdapt;    //??????﹞?℅?????0-﹞?1-??
						   //(Ver3.7 ????)
						   // ???????????? 0-????, 1-???????“?那??℅?????????,?????? ??℅?3????0
	BYTE  byParamFillZeroEnble;
	BYTE  byPlateLeftCornerEnable;// ????????????℅車???????? 0-??????, 1-????
	BYTE  byRes2;
	WORD  wStartSPicPosTop; //??????℅?㊣那,???????????????????∫[0~2448](????0) 
	WORD  wStartSPicPosLeft; //????℅車℅?㊣那,???????????????????∫[0~2448](????0) 
							 //OSD????????  0-??????,1-??????㊣???,2-??????㊣????“??????℅“????????㊣????????“V3.7??
	BYTE  byOsdLocate;
	BYTE  byRes[63];
}NET_ITS_OVERLAP_ITEM_PARAM_V50, *LPNET_ITS_OVERLAP_ITEM_PARAM_V50;

typedef struct tagNET_ITS_OVERLAP_CFG_V50
{
	DWORD dwSize;
	BYTE  byEnable; //??﹞???????0-????????1-????
	BYTE  byRes1[3];
	NET_ITS_OVERLAP_ITEM_PARAM_V50        struOverLapItemV50; //℅?﹞???????
	NET_ITS_OVERLAP_INFO_PARAM             struOverLapInfo;  //℅?﹞???????????
	BYTE  byRes[120];
}NET_ITS_OVERLAP_CFG_V50, *LPNET_ITS_OVERLAP_CFG_V50;

#define  MAX_PTZCRUISE_POINT_NUM   32   //℅??車?∫??32????????


//?∟????????
typedef struct tagNET_DVR_PRESET_INFO
{
	DWORD dwSize;
	DWORD dwPresetNum; //?∟????????
	DWORD dwGroupNum;  //℅谷??
	BYTE  byRes[8];
}NET_DVR_PRESET_INFO, *LPNET_DVR_PRESET_INFO;

//????????
typedef struct tagNET_DVR_PRESET_COND
{
	DWORD dwSize;
	DWORD dwChannel;
	DWORD dwGroupNO; //℅谷??
	BYTE byRes[8];
}NET_DVR_PRESET_COND, *LPNET_DVR_PRESET_COND;

//????????
typedef struct tagNET_DVR_PRESETCFG
{
	DWORD dwSize;
	DWORD dwPresetIndex; //?∟?????辰??
	NET_VCA_POINT struVcaPoint; //?∟????℅?㊣那
	WORD wZoomCoordinate; ///<?∟?????∼??Zoom??
	BYTE  byRes[30];
}NET_DVR_PRESETCFG, *LPNET_DVR_PRESETCFG;

//?????????﹞????????
typedef struct tagNET_DVR_PTZCRUISE_INFO
{
	DWORD dwSize;
	DWORD dwPtzCruiseNum; //?﹞??????
	DWORD dwGroupNum; //℅谷??
	BYTE byRes[8];
}NET_DVR_PTZCRUISE_INFO, *LPNET_DVR_PTZCRUISE_INFO;

//??????????
typedef struct tagNET_DVR_PTZCRUISE_COND
{
	DWORD dwSize;
	DWORD dwChannel;
	DWORD dwGroupNO; //℅谷??
	BYTE byRes[8];
}NET_DVR_PTZCRUISE_COND, *LPNET_DVR_PTZCRUISE_COND;

//????????
typedef struct tagNET_DVR_PTZCRUISE_POINTCFG
{
	DWORD dwSize;
	DWORD dwPresetIndex; //?∟?????辰??
	NET_VCA_POINT struVcaPoint; //?∟????℅?㊣那
	BYTE    byDwell;        //?????㊣??
	BYTE    bySpeed;        //????
	WORD  wZoomCoordinate;///<?∟?????∼??Zoom??
	BYTE   byRes[28];
}NET_DVR_PTZCRUISE_POINTCFG, *LPNET_DVR_PTZCRUISE_POINTCFG;

typedef struct tagNET_DVR_PTZCRUISECFG
{
	DWORD dwSize;
	DWORD dwCruiseRoute; //?????﹞???辰??
	NET_DVR_PTZCRUISE_POINTCFG struCruisePoint[MAX_PTZCRUISE_POINT_NUM]; //℅??車?∫??32????????
	BYTE  byRes[32];
}NET_DVR_PTZCRUISECFG, *LPNET_DVR_PTZCRUISECFG;

//?迆℅??????芍??
typedef struct tagNET_DVR_MOTION_TRACK_CFG
{
	DWORD dwSize;
	BYTE byEnableTrack;   //?????迆℅???0-﹞???1-??
	BYTE byRes[63];
}NET_DVR_MOTION_TRACK_CFG, *LPNET_DVR_MOTION_TRACK_CFG;

//???足???“?㊣????
typedef struct tagNET_DVR_DAY_SCHEDULE
{
	BYTE byWorkMode;            //0-???足????1-???足????2-?“?㊣
	BYTE byRes1[3];
	NET_DVR_SCHEDTIME struTime[MAX_TIMESEGMENT_V30/*8*/];  //?㊣????
	BYTE byRes2[8];                  //㊣???
}NET_DVR_DAY_SCHEDULE, *LPNET_DVR_DAY_SCHEDULE;

//?“?㊣?????迆℅??????芍??
typedef struct tagNET_DVR_SCHEDULE_AUTO_TRACK_CFG
{
	DWORD    dwSize;    //?芍???∟??
	BYTE     byEnableTrack;            //?????迆℅???0- ﹞???1- ??
	BYTE    byRes1[3];
	NET_DVR_DAY_SCHEDULE struSchedule[MAX_DAYS/*7*/];    //?“?㊣?????迆℅??㊣????????????8???㊣?????????㊣?????????“?㊣?????迆℅???㊣?
	BYTE    byRes2[128];
}NET_DVR_SCHEDULE_AUTO_TRACK_CFG, *LPNET_DVR_SCHEDULE_AUTO_TRACK_CFG;

typedef struct tagNET_DVR_I_FRAME
{
	DWORD    dwSize;                    //?芍???∟??
	BYTE    sStreamID[STREAM_ID_LEN/*32*/]; //?‾ID
	DWORD    dwChan;                     //㊣????“????
	BYTE    byStreamType;             //0-?‾???‾??1-℅????‾??2-???‾3??3-???‾4??4-???‾5     
	BYTE    byRes[63];
} NET_DVR_I_FRAME, *LPNET_DVR_I_FRAME;

typedef struct tagNET_DVR_REBOOT_TIME
{
	BYTE byDate;   //????????1-7?迆㊣赤??????????????
	BYTE byHour;   //?㊣
	BYTE byMinute; //﹞?    
	BYTE byRes1;
	BYTE byRebootMode; //0-∼?????????1-∼????????“?????????????????????豕????
	BYTE byRes[11]; //㊣???
}NET_DVR_REBOOT_TIME, *LPNET_DVR_REBOOT_TIME;

typedef struct tagNET_DVR_AUTO_REBOOT_CFG
{
	DWORD dwSize;
	NET_DVR_REBOOT_TIME struRebootTime;
}NET_DVR_AUTO_REBOOT_CFG, *LPNET_DVR_AUTO_REBOOT_CFG;

#define NET_DVR_GPS_FINDING       0   //?????谷??
#define NET_DVR_GPS_RECV          1   //????????
#define NET_DVR_GPS_OVER          2   //?谷???芍??
#define NET_DVR_GPS_EXCEPTION     3   //?????足??
typedef struct tagNET_DVR_MENU_OUTPUT_MODE
{
	DWORD        dwSize;
	BYTE        byMenuOutputMode; //﹞??????豕㊣???0-Auto 1-?‾CVBS 2-HDMI 3-VGA ?????豕㊣???0-Auto 1-?‾CVBS 2-HDMI/VGA
	BYTE        byRes[63];
}NET_DVR_MENU_OUTPUT_MODE, *LPNET_DVR_MENU_OUTPUT_MODE;

typedef struct tagNET_DVR_MB_IPADDR
{
	NET_DVR_IPADDR   struIP;  //IP???﹞
	WORD        wPort;   //??????
	BYTE        byRes[2];
}NET_DVR_MB_IPADDR, *LPNET_DVR_MB_IPADDR;

typedef struct tagNET_DVR_MB_WVSPARA
{
	NET_DVR_MB_IPADDR struWVSAddr;
	BYTE byPuid[NAME_LEN];    //?豕㊣?id
	BYTE byPassword[PASSWD_LEN];  //????
	BYTE byRes[8];
}NET_DVR_MB_WVSPARA, *LPNET_DVR_MB_WVSPARA;

typedef struct tagNET_DVR_MB_EHOMEPARA
{
	NET_DVR_MB_IPADDR struEHomeAddr;
	BYTE byPuid[NAME_LEN];   //?豕㊣?id
}NET_DVR_MB_EHOMEPARA, *LPNET_DVR_MB_EHOMEPARA;

typedef struct tagNET_DVR_MB_PLATFORMPARA
{
	DWORD dwSize;
	BYTE byNetEnvironment;/*?????﹞??,0-wireless,1-3G,2-wLan,3-lan*/
	BYTE byCurPlatForm;   /*< ?㊣?∼???“0 - WVS, 1 - E??, 2 - ?????? */
	BYTE byRes1[2];
	NET_DVR_MB_WVSPARA  struWVSPara; /*???????“(???“????)*/
	NET_DVR_MB_EHOMEPARA struMbEHpara;/*E?????“???????“???豕???豕㊣????????? */
	BYTE byRes2[64];
}NET_DVR_MB_PLATFORMPARA, *LPNET_DVR_MB_PLATFORMPARA;

typedef struct tagNET_DVR_MB_GPS_STATUS
{
	BYTE        byGPSModule;      /*gps???谷, 0: ??????, 1: ????*/
	BYTE        byPositionStatus;      /*gps?“??℅???, 0: ?“???∫∼?, 1: ?“??????*/
	BYTE        bySignalStrength;    /*????????, 0: ??, 1: ????, 2: ??*/
	BYTE        byres[5];
}NET_DVR_MB_GPS_STATUS, *LPNET_DVR_MB_GPS_STATUS;

typedef struct tagNET_DVR_MB_GSENSOR_STATUS
{
	BYTE        byGsensorModule;    /*g-sensor???谷, 0: not exist, 1: ????, 2: ????*/
	BYTE        byCurAccX[10];     /*?㊣?∼X?芍??????*/
	BYTE        byCurAccY[10];    /*?㊣?∼Y?芍??????*/
	BYTE        byCurAccZ[10];    /*?㊣?∼Z?芍??????*/
	BYTE        byRefAccX[10];    /* X?芍??????㊣那?“??*/
	BYTE        byRefAccY[10];    /* Y?芍??????㊣那?“??*/
	BYTE        byRefAccZ[10];    /* Z?芍??????㊣那?“??*/
	BYTE        byres[3];
}NET_DVR_MB_GSENSOR_STATUS, *LPNET_DVR_MB_GSENSOR_STATUS;

#define IP_ADDR_LEN         16
#define IW_ESSID_MAX_SIZE    32

typedef struct tagNET_DVR_MB_WIFI_STATUS
{
	BYTE        byEnableWiFi; /* ????, 0 ??, 1 ?? */
	BYTE         byWiFiConnectStatus;  /* WIFI℅???, 0: ?????∫∼?, 1: ???????? 2: ?????谷*/
	BYTE        bySignalStrength;             /* ????????, 0 ??, 1 ????, 2 ?? */
	BYTE        byIPaddress[IP_ADDR_LEN];   /*WIFI ?豕㊣? ip*/
	BYTE        byEssid[IW_ESSID_MAX_SIZE];  /*??????????essid*/
	BYTE        byres[5];
}NET_DVR_MB_WIFI_STATUS, *LPNET_DVR_MB_WIFI_STATUS;

typedef struct tagNET_DVR_MB_PLATFORM_STATUS
{
	BYTE        byCurPlat;      /*?㊣?∼???“, 0: wvs, 1: ivms, 2: ??????(net_3g_sdk)*/
	BYTE        byLoginStatus;     /*login ℅???, 0: login failed, 1: login success*/
	BYTE        byExceptionInfo;      /*?足??????*/
									  /*
									  WVS :exception info:
									  0: ????﹞????‾?∫∼?
									  1: ℅??芍??
									  2: ???∫???????赤?車
									  3: ℅??芍???㊣
									  4: ???????㊣
									  5: ℅??芍????
									  iVMS :exception info:
									  0??℅??芍
									  1℅??芍??
									  2℅??芍???????赤
									  3℅??芍???㊣
									  4?∟?㊣????????????????????
									  5????℅??芍
									  6 CMS??℅??芍?豕㊣????????????????“???“??
									  7 CMS??℅??芍?“?????????????????“?“????
									  8?豕㊣???WEB???赤??????????????
									  9CMS??WEB???赤?????“???∫∼?
									  10?????????赤?車
									  11℅??芍????
									  ?????? :exception info:
									  0??℅??芍
									  1: ℅??芍??
									  2: ????℅??芍
									  3: ℅??芍?????∫∼?
									  4: ﹞????‾IP㊣???
									  5: ℅??芍????
									  6: ???∫℅??迆
									  7: ???????㊣
									  */
	BYTE        byres[5];
}NET_DVR_MB_PLATFORM_STATUS, *LPNET_DVR_MB_PLATFORM_STATUS;


typedef struct tagNET_DVR_MB_MOBILEDEV_STATUS
{
	DWORD        dwSize;      /*?芍???車??*/
	union
	{
		NET_DVR_MB_GPS_STATUS struGPSStatus;
		NET_DVR_MB_GSENSOR_STATUS struGSensorStatus;
		NET_DVR_MB_WIFI_STATUS struWiFiStatus;
		NET_DVR_MB_PLATFORM_STATUS struPlatformStatus;
	}mobileStatus;
}NET_DVR_MB_MOBILEDEV_STATUS, *LPNET_DVR_MB_MOBILEDEV_STATUS;

#define NET_DVR_GPS_STATUS       0
#define NET_DVR_GSENSOR_STATUS   1
#define NET_DVR_WIFI_STATUS      2
#define NET_DVR_PLATFORM_STATUS  3

//GPS???????芍??
typedef struct tagNET_DVR_GPS_INFO
{
	/* ????????S*100 */
	BYTE    byDirection[2];        /*direction[0]0or1(????/?‾??), direction[1]:0or1(㊣㊣??/????)  */
	BYTE    bySvs;         /* satellite vehicles(????0)?????∫?“?????? */
	BYTE    byLocateMode;  /* ?“??????(????0)????NMEA0183 3.00∼?㊣???????0=℅??‾?“????1=??﹞???2=??????3=???????∫ */
	WORD    wHDOP;  /* ?????????辰℅???????GPS???﹞????0.5-99.9??6?????“??????????20?????豕???迆??????????????????10???車?????? */
	WORD    wHeight;             /* ???? */
	DWORD   dwLatitude;     /*????latitude = ??????*3600*100+????﹞?*60*100+??????*100 */
	DWORD   dwLongitude; /*????longitude =??????*3600*100+????﹞?*60*100+??????*100 */
	DWORD   dwVehicleSpeed;        /* mobile speed =????????*100000 ????????kph*/
	DWORD    dwVehicleDirection;    /* mobile direction= ????﹞??辰*100????????????﹞??辰??????㊣㊣??0???????㊣?? */
	BYTE    byRes[8];            // ㊣???
}NET_DVR_GPS_INFO, *LPNET_DVR_GPS_INFO; //32℅???

										//GPS℅???????
typedef  struct _NET_DVR_GPS_STATUS_ALARM_
{
	DWORD       dwSize;
	NET_DVR_TIME_V30   struGPSTime;      //GPS ???迄?㊣????????㊣????㊣??
	NET_DVR_GPS_INFO   struGPSInfo;      //GPS℅?㊣那??
	BYTE         byRetransFlag; //0-㊣??? GPS ?????㊣∼邦??1-㊣??? GPS ??????∼邦
	BYTE         byNeedsResponse; //????㊣那????0?????豕????∼邦??1???豕????∼邦
	BYTE         byType;//??㊣“?角?? 0-?????迆
	BYTE         byBatteryRemaining;//???角??????-1--100; -1㊣赤?????赤
	int        iRollAngle;//????????,﹞??∫-pi - +pi,??????*100
	int        iPitchAngle;//?迆?﹞???辰????,﹞??∫-pi - +pi,??????*100
	WORD        wRelativeHeight;//?角?????????????????℅  
	WORD        wVerticalSpeed;//???㊣???????????????℅/???㊣
	BYTE         byRes2[160];         //㊣???
}NET_DVR_GPS_STATUS_ALARM, *LPNET_DVR_GPS_STATUS_ALARM;

//GPS?????㊣??
typedef struct tagNTE_DVR_GPS_DATA
{
	NET_DVR_GPS_INFO  struGPSInfo;      //GPS℅?㊣那??
	NET_DVR_TIME      struTime;            //GPS℅?㊣那???????㊣??????UTC?㊣??
	BYTE        byRes[12];             // ㊣???
}NET_DVR_GPS_DATA, *LPNET_DVR_GPS_DATA;

//GPS?谷???????芍??
typedef struct tagNET_DVR_GET_GPS_DATA_PAPAM
{
	DWORD dwCmdType;              //0-∼??㊣?????谷??GPS????,1-∼??㊣?????谷??GPS????    
	union
	{
		struct
		{
			NET_DVR_TIME struBeginTime;               //GPS?????谷???????㊣??       
			NET_DVR_TIME struEndTime;                 //GPS?????谷???芍???㊣??
			DWORD dwInterval;                  //GPS???㊣??????????????
			BYTE  byRes[76];                    // ㊣???
		}TimeSeg;
		struct
		{
			NET_DVR_TIME struTimePoint;              //GPS?????谷???????㊣????????
			BYTE  byRes[104];              // ㊣???
		}TimePoint;
	}GpsDataParam;
}NET_DVR_GET_GPS_DATA_PARAM, *LPNET_DVR_GET_GPS_DATA_PARAM;

#define NET_SDK_MAX_CARD_LEN 32 //℅??車?“???∟??

//㊣那??????????
typedef  struct _NET_DVR_TAG_INFO_ALARM_
{
	DWORD        dwSize;
	BYTE         byCardNo[NET_SDK_MAX_CARD_LEN/*32*/]; //?“??
	int          iRssi;//????????????,﹞??∫-100 - +100
	BYTE         byIndexCode[64];//???“index code,?角?㊣???豕㊣?㊣角??
	NET_DVR_TIME_V30  struAcquisitionTime;//?????㊣??
	BYTE         byRFIDInfo[32]; //?“??ID
	BYTE         byRFIDInfoLen;  //?“??ID?∟??
	BYTE         byVoltageLow; //1㊣赤??????????0㊣赤??????
	BYTE         byAlarmFlag; ///(?“?????“﹞????‾)??﹞??豕??㊣“????1?豕????0???豕??
	BYTE         byRes[49];         //㊣???
}NET_DVR_TAG_INFO_ALARM, *LPNET_DVR_TAG_INFO_ALARM;


typedef struct tagNET_DVR_SDKLOCAL_CFG
{
	BYTE    byEnableAbilityParse;    //????????????????,0-??????,1-????,??????????
	BYTE    byVoiceComMode;          //??????????0-???????????“????????1-????windows api????    
	BYTE    byLoginWithSimXml;  //?????㊣????????????,0-??????,1-????,??????????
	BYTE    byCompatibleType;
	BYTE    byRes[380];
	BYTE    byProtectKey[128];    //?????豕????0
}NET_DVR_SDKLOCAL_CFG, *LPNET_DVR_SDKLOCAL_CFG;

typedef struct tagNET_DVR_LOCAL_ABILITY_PARSE_CFG
{
	BYTE    byEnableAbilityParse;    //????????????????,0-??????,1-????,??????????
	BYTE    byRes[127];
}NET_DVR_LOCAL_ABILITY_PARSE_CFG, *LPNET_DVR_LOCAL_ABILITY_PARSE_CFG;

typedef struct tagNET_DVR_LOCAL_TALK_MODE_CFG
{
	BYTE    byTalkMode;                //??????????0-???????????“????????1-????windows api????
	BYTE    byRes[127];
}NET_DVR_LOCAL_TALK_MODE_CFG, *LPNET_DVR_LOCAL_TALK_MODE_CFG;


typedef struct tagNET_DVR_LOCAL_PROTECT_KEY_CFG
{
	BYTE    byProtectKey[128];        //?????豕????0
	BYTE    byRes[128];
}NET_DVR_LOCAL_PROTECT_KEY_CFG, *LPNET_DVR_LOCAL_PROTECT_KEY_CFG;

typedef struct tagNET_DVR_SIMXML_LOGIN
{
	BYTE   byLoginWithSimXml;   //?????㊣?????????????????芍????????℅???,0-??????,1-????
	BYTE   byRes[127];
}NET_DVR_SIMXML_LOGIN, *LPNET_DVR_SIMXML_LOGIN;

//㊣“?????‾????????
typedef struct
{   /*????JSON????㊣“???“??COMM_VCA_ALARM????JSON??????
	0~??JSON??????????4.1.4;
	1~??JSON??????????4.1.5
	*/
	BYTE byVcaAlarmJsonType;
	BYTE byRes[63];
}NET_DVR_MESSAGE_CALLBACK_PARAM_V51, *LPNET_DVR_MESSAGE_CALLBACK_PARAM_V51;

typedef enum tagNET_SDK_LOCAL_CFG_TYPE
{
	NET_SDK_LOCAL_CFG_TYPE_TCP_PORT_BIND = 0,        //㊣???TCP????∼車?“???????????芍????NET_DVR_LOCAL_TCP_PORT_BIND_CFG
	NET_SDK_LOCAL_CFG_TYPE_UDP_PORT_BIND,            //㊣???UDP????∼車?“???????????芍????NET_DVR_LOCAL_UDP_PORT_BIND_CFG
	NET_SDK_LOCAL_CFG_TYPE_MEM_POOL,                //??????㊣??????????????芍????NET_DVR_LOCAL_MEM_POOL_CFG
	NET_SDK_LOCAL_CFG_TYPE_MODULE_RECV_TIMEOUT,        //∼????谷???????㊣?㊣?????????芍????NET_DVR_LOCAL_MODULE_RECV_TIMEOUT_CFG
	NET_SDK_LOCAL_CFG_TYPE_ABILITY_PARSE,            //??﹞????????????????????????芍????NET_DVR_LOCAL_ABILITY_PARSE_CFG
	NET_SDK_LOCAL_CFG_TYPE_TALK_MODE,                //???????????????芍????NET_DVR_LOCAL_TALK_MODE_CFG
	NET_SDK_LOCAL_CFG_TYPE_PROTECT_KEY,                //?????豕?????????芍????NET_DVR_LOCAL_PROTECT_KEY_CFG
	NET_SDK_LOCAL_CFG_TYPE_CFG_VERSION,             //????????∼?㊣??﹞???豕㊣????????谷NET_DVR_LOCAL_MEM_POOL_CFG??, ???????豕???????㊣????℅‾????
	NET_SDK_LOCAL_CFG_TYPE_RTSP_PARAMS,                //rtsp???????????????芍????NET_DVR_RTSP_PARAMS_CFG
	NET_SDK_LOCAL_CFG_TYPE_SIMXML_LOGIN,            //???????㊣????????????????support℅???, ?????芍??NET_DVR_SIMXML_LOGIN
	NET_SDK_LOCAL_CFG_TYPE_CHECK_DEV,                //?????????????㊣??
	NET_SDK_LOCAL_CFG_TYPE_SECURITY,                  //SDK㊣???∼?????????
	NET_SDK_LOCAL_CFG_TYPE_EZVIZLIB_PATH,            //???????????“???????﹞??
	NET_SDK_LOCAL_CFG_TYPE_CHAR_ENCODE,               //13.????℅?﹞?㊣角???角?????赤???‾
	NET_SDK_LOCAL_CFG_TYPE_PROXYS,                     //?豕???????迆
	NET_DVR_LOCAL_CFG_TYPE_LOG,                       //????????????  NET_DVR_LOCAL_LOG_CFG
	NET_DVR_LOCAL_CFG_TYPE_STREAM_CALLBACK,           //???‾???‾???????? NET_DVR_LOCAL_STREAM_CALLBACK_CFG
	NET_DVR_LOCAL_CFG_TYPE_GENERAL,                   //?“?????????? NET_DVR_LOCAL_GENERAL_CFG
	NET_DVR_LOCAL_CFG_TYPE_PTZ,                       //PTZ??﹞??????豕㊣?﹞???????
	NET_DVR_LOCAL_CFG_MESSAGE_CALLBACK_V51,           //㊣“??V51???‾?角??㊣???????,?????芍??????NET_DVR_MESSAGE_CALLBACK_PARAM_V51 ??(????NET_DVR_SetDVRMessageCallBack_V51????∼?㊣????∫)
	NET_SDK_LOCAL_CFG_CERTIFICATION,                  //???????∟?谷?角???????????????芍?????芍????NET_DVR_LOCAL_CERTIFICATION
}NET_SDK_LOCAL_CFG_TYPE;

typedef enum tagNET_SDK_EXCEPTION_CALLBACK_TYPE
{
	NET_SDK_EXCEPTION_CALLBACK_BY_POOL = 0,         //?“?????????足?????‾
	NET_SDK_EXCEPTION_CALLBACK_DIRECTLY = 1,        //?㊣???足?????‾??????
}NET_SDK_EXCEPTION_CALLBACK_TYPE;

typedef struct tagNET_DVR_LOCAL_GENERAL_CFG
{
	BYTE     byExceptionCbDirectly;    //0-?“?????????足?????‾??1-?㊣???足?????‾??????
	BYTE     byNotSplitRecordFile;     //??﹞????∟????㊣?????㊣????????????????? 0-??????????1-??????
	BYTE     byResumeUpgradeEnable;    //??????????????????0-??㊣??“????????1-????
	BYTE    byAlarmJsonPictureSeparate;   //????JSON????㊣“??????????????﹞?﹞?????0-??﹞?????1-﹞????“﹞????車℅?COMM_ISAPI_ALARM???‾﹞?????
	BYTE byRes[4];      //㊣???
	UINT64 i64FileSize;      //??????Byte
	DWORD dwResumeUpgradeTimeout;       //???????????????㊣?㊣????????????
	BYTE byAlarmReconnectMode;          //0-?????????????“?????? 1-??????????
	BYTE byStdXmlBufferSize; //?豕??ISAPI???????????????車????1-1M ????-????
	BYTE byRes1[234];    //?∟??
}NET_DVR_LOCAL_GENERAL_CFG, *LPNET_DVR_LOCAL_GENERAL_CFG;

typedef struct tagNET_DVR_LOCAL_STREAM_CALLBACK_CFG
{
	BYTE     byPlayBackEndFlag;      //0-?????‾??﹞??芍??㊣那????1-???‾??﹞??芍??㊣那??
	BYTE     byRes[255];      //㊣???
}NET_DVR_LOCAL_STREAM_CALLBACK_CFG, *LPNET_DVR_LOCAL_STREAM_CALLBACK_CFG;

typedef struct tagNET_DVR_LOCAL_LOG_CFG
{
	WORD    wSDKLogNum;      //sdk???????????????????迆???????? 0?????????“10????
	BYTE     byRes[254];      //㊣???
}NET_DVR_LOCAL_LOG_CFG, *LPNET_DVR_LOCAL_LOG_CFG;

typedef int(CALLBACK * CHAR_ENCODE_CONVERT)(char * pInput, DWORD dwInputLen, DWORD dwInEncodeType, char *pOutput, DWORD dwOutputLen, DWORD dwOutEncodeType);

typedef struct tagNET_DVR_LOCAL_BYTE_ENCODE_CONVERT
{
	CHAR_ENCODE_CONVERT  fnCharConvertCallBack;
	BYTE     byRes[256];
}NET_DVR_LOCAL_BYTE_ENCODE_CONVERT, *LPNET_DVR_LOCAL_BYTE_ENCODE_CONVERT;

typedef struct tagNET_DVR_LOCAL_SECURITY
{
	BYTE bySecurityLevel;//???????谷?“???????? //0-?????????“???????????赤?迄????SDK???????谷?“????1-∼????????“MD5??, ???赤RSA??MD5?????????????谷2-∼????????“RSA??RSA?????????????谷
	BYTE byRes[255];
}NET_DVR_LOCAL_SECURITY, *LPNET_DVR_LOCAL_SECURITY;

typedef struct tagNET_DVR_LOCAL_CHECK_DEV
{
	DWORD   dwCheckOnlineTimeout;     //???足?㊣????????????ms  ℅???????30s??℅??車??120s????0?㊣??㊣赤??????????(120s)
	DWORD   dwCheckOnlineNetFailMax;  //???????????辰?∫∼???℅??車??????????????????SDK?????‾???∫?足??????0?㊣??㊣赤????????????1
	BYTE    byRes[256];
}NET_DVR_LOCAL_CHECK_DEV, *LPNET_DVR_LOCAL_CHECK_DEV;

typedef struct tagNET_DVR_LOCAL_PTZ_CFG
{
	BYTE   byWithoutRecv;     //0-?????豕㊣?﹞?????1-???????豕㊣?﹞???
	BYTE   byRes[63];
}NET_DVR_LOCAL_PTZ_CFG, *LPNET_DVR_LOCAL_PTZ_CFG;

typedef struct tagNET_DVR_LOCAL_CFG_VERSION
{
	BYTE    byVersion;                        //∼?㊣?????
	BYTE    byRes[63];                        //㊣???
}NET_DVR_LOCAL_CFG_VERSION, *LPNET_DVR_LOCAL_CFG_VERSION;

typedef struct tagNET_DVR_LOCAL_TCP_PORT_BIND_CFG
{
	WORD    wLocalBindTcpMinPort;            //㊣???∼車?“Tcp℅???????
	WORD    wLocalBindTcpMaxPort;            //㊣???∼車?“Tcp℅??車????
	BYTE    byRes[60];                        //㊣???
}NET_DVR_LOCAL_TCP_PORT_BIND_CFG, *LPNET_DVR_LOCAL_TCP_PORT_BIND_CFG;


typedef struct tagNET_DVR_LOCAL_UDP_PORT_BIND_CFG
{
	WORD    wLocalBindUdpMinPort;            //㊣???∼車?“Udp℅???????
	WORD    wLocalBindUdpMaxPort;            //㊣???∼車?“Udp℅??車????
	BYTE    byRes[60];                        //㊣???
}NET_DVR_LOCAL_UDP_PORT_BIND_CFG, *LPNET_DVR_LOCAL_UDP_PORT_BIND_CFG;


typedef struct tagNET_DVR_LOCAL_MEM_POOL_CFG
{
	DWORD    dwAlarmMaxBlockNum;        //㊣“?????谷??????℅??角?辰?????那?????????谷?“block????????????block??64MB, ?????????????辰???辰?????那????0㊣赤????????
	DWORD    dwAlarmReleaseInterval;                //㊣“?????谷??????????﹞???????????????????0㊣赤??????﹞?
	DWORD   dwObjectReleaseInterval;   //???車?那?????谷??????????﹞???????????????????0㊣赤??????﹞?
	BYTE    byRes[508];                //㊣???
}NET_DVR_LOCAL_MEM_POOL_CFG, *LPNET_DVR_LOCAL_MEM_POOL_CFG;

typedef struct tagNET_DVR_LOCAL_MODULE_RECV_TIMEOUT_CFG
{
	DWORD        dwPreviewTime;        //?∟?????谷???㊣?㊣??
	DWORD        dwAlarmTime;        //㊣“?????谷???㊣?㊣??
	DWORD        dwVodTime;            //??﹞????谷???㊣?㊣??
	DWORD        dwElse;                //???????谷
	BYTE        byRes[512];                            //㊣???
}NET_DVR_LOCAL_MODULE_RECV_TIMEOUT_CFG, *LPNET_DVR_LOCAL_MODULE_RECV_TIMEOUT_CFG;

#define MAX_CERTIFICATE_ISSUER_LEN      64      //?∟?谷∼?﹞????∟??
#define MAX_CERTIFICATE_VALIDITY_LEN    128     //?∟?谷???∫?㊣???∟??
#define MAX_CERTIFICATE_SUBJECT_LEN     64      //?∟?谷???????∟??
typedef struct  tagNET_DVR_CETTIFICATE_INFO
{
	DWORD dwSize;
	char szIssuer[MAX_CERTIFICATE_ISSUER_LEN];               //?∟?谷∼?﹞???
	char szSubject[MAX_CERTIFICATE_SUBJECT_LEN];             //?∟?谷??????
	NET_DVR_TIME struStartTime;
	NET_DVR_TIME struEndTime;
	BYTE byRes1[1024];
}NET_DVR_CETTIFICATE_INFO, *LPNET_DVR_CETTIFICATE_INFO;

typedef BOOL(CALLBACK *fnCertVerifyResultCallBack) (DWORD uiResult, LPNET_DVR_CETTIFICATE_INFO lpCertificateInfo, char *pUserData);

#define MAX_FILE_PATH_LEN       256     //?????﹞???∟??
typedef struct tagNET_DVR_LOCAL_CERTIFICATION
{
	char szLoadPath[MAX_FILE_PATH_LEN];
	fnCertVerifyResultCallBack fnCB;
	void* pUserData;
	BYTE byRes[64];
}NET_DVR_LOCAL_CERTIFICATION, *LPNET_DVR_LOCAL_CERTIFICATION;

typedef struct tagNET_DVR_RTSP_PARAMS_CFG
{
	DWORD    dwMaxBuffRoomNum;    //rtp over udp???辰??㊣???℅??車????????????0?????∫????????????20
								  //????????????㊣???????10K?角???????????????????角?????赤???辰???????辰???????‾?????????????㊣?????車
	BYTE    byUseSort;    //??﹞?????rtp over udp???辰?? 0-??????  1-????
	BYTE    byRes[123];
}NET_DVR_RTSP_PARAMS_CFG, *LPNET_DVR_RTSP_PARAMS_CFG;

typedef  struct  tagNET_DVR_OPTICAL_CHANNEL_BIND
{
	WORD wChannelIndex;    //??????(0-7)
	WORD wSubChannel;      //????℅??“??????????﹞??∫????????????
	BYTE  byBind;      //0-??∼車?“?辰????∼車?“??1-∼車?“
	BYTE  byRes[3];
}NET_DVR_OPTICAL_CHANNEL_BIND, *LPNET_DVR_OPTICAL_CHANNEL_BIND;

typedef struct tagNET_DVR_OPTICAL_CHANNEL_CFG
{
	DWORD dwSize;
	NET_DVR_OPTICAL_CHANNEL_BIND struBindVideo;//????∼車?“
	NET_DVR_OPTICAL_CHANNEL_BIND struBindAudio;//????∼車?“
	BYTE  byRes[16];           //㊣???   
}NET_DVR_OPTICAL_CHANNEL_CFG, *LPNET_DVR_OPTICAL_CHANNEL_CFG;

typedef struct tagNET_DVR_OPTICAL_INFO
{
	DWORD dwSize;
	BYTE  bySlotNum;//㊣角??℅???????????
	BYTE  byChannel; //㊣角???“????
	BYTE  byRes[18];
}NET_DVR_OPTICAL_INFO, *LPNET_DVR_OPTICAL_INFO;

//????????
typedef struct tagNET_DVR_AUDIO_SURCHAN_CFG
{
	DWORD dwSize;
	BYTE  byStatus;       //??????﹞???????1-????0-??
	BYTE  byRes1[3];
	//?????????㊣byStatus == 1?㊣???∫
	DWORD dwSubWinNum; //??????℅??∼????
	DWORD dwSurChanNum;             /*?角???“????  */
	NET_DVR_IPADDR struIpaddr;            /*?角???“?????﹞ */
	WORD   wPort;                          /*?角???“?????? */
	BYTE   byRes2[14];
}NET_DVR_AUDIO_SURCHAN_CFG, *LPNET_DVR_AUDIO_SURCHAN_CFG;

//????????
#define MAX_ETHERNET_PORT_NUM       8//???????﹞℅??車??????
typedef struct tagNET_DVR_ETHERNET_CHANNEL_INFO
{
	DWORD dwSize;
	BYTE byConverge[MAX_ETHERNET_PORT_NUM];
	//byConverge[i] = j㊣赤??????i??????????????j?????﹞??j????????1-8,j=0㊣赤??????
	BYTE byRes[32];
}NET_DVR_ETHERNET_CHANNEL_INFO, *LPNET_DVR_ETHERNET_CHANNEL_INFO;

//????
typedef struct tagNET_DVR_SPARTAN_INFO
{
	DWORD  dwSize;
	BYTE   bySpartanStatus; //0-????????1-??????
	BYTE   byRes[31];
}NET_DVR_SPARTAN_INFO, *LPNET_DVR_SPARTAN_INFO;

typedef struct tagNET_DVR_IPADDR_FILTERCFG
{
	DWORD dwSize;
	BYTE byEnable; //????IP???﹞??????0-﹞???1-??
	BYTE byFilterType; //?????角????0-??????1-???赤
	BYTE byRes[18];
	BYTE byIPAddr[1024];    //IP???﹞??????????192.168.1.2;192.168.1.3
}NET_DVR_IPADDR_FILTERCFG, *LPNET_DVR_IPADDR_FILTERCFG;

typedef struct tagNET_DVR_LOGO_OVERLAYCFG
{
	DWORD dwSize;
	BYTE  byEnable; //??﹞???????0-﹞???1-??
	BYTE  byRes1[3];
	DWORD dwCoordinateX;    //???????????辰X℅?㊣那
	DWORD dwCoordinateY;    //???????????辰Y℅?㊣那
	WORD  wPicWidth; //?????赤
	WORD  wPicHeight; //??????
	BYTE  byLogoName[16];//Logo????
}NET_DVR_LOGO_OVERLAYCFG, *LPNET_DVR_LOGO_OVERLAYCFG;


typedef struct tagNET_DVR_INVALID_DISK_PARAM
{
	NET_DVR_STRUCTHEAD    struStructHead;
	DWORD                dwDiskNo;            // ??????
	BYTE                byDelAll;            // 0-????dwDiskNo  1-???????????∫????
	BYTE                 byres[31];
}NET_DVR_INVALID_DISK_PARAM, *LPNET_DVR_INVALID_DISK_PARAM;


typedef struct tagNET_DVR_INVALID_MOUNT_DISK_PARAM
{
	NET_DVR_STRUCTHEAD    struStructHead;
	DWORD                dwDiskNo;            // ??????
	BYTE                 byres[32];
}NET_DVR_MOUNT_DISK_PARAM, *LPNET_DVR_MOUNT_DISK_PARAM;

// ?∟???????‾?角??
typedef enum
{
	NET_SDK_CALLBACK_TYPE_STATUS = 0,        // ???‾℅?????
	NET_SDK_CALLBACK_TYPE_PROGRESS,            // ???‾??????
	NET_SDK_CALLBACK_TYPE_DATA                // ???‾????????
}NET_SDK_CALLBACK_TYPE;


// ???‾?角????NET_SDK_CALLBACK_TYPE_STATUS?㊣??℅?????
typedef enum
{
	NET_SDK_CALLBACK_STATUS_SUCCESS = 1000,        // ????
	NET_SDK_CALLBACK_STATUS_PROCESSING,            // ???赤??
	NET_SDK_CALLBACK_STATUS_FAILED,                // ?∫∼?
	NET_SDK_CALLBACK_STATUS_EXCEPTION,            // ?足??
	NET_SDK_CALLBACK_STATUS_LANGUAGE_MISMATCH,    //?“IPC????????????????????????
	NET_SDK_CALLBACK_STATUS_DEV_TYPE_MISMATCH,    //?“IPC???????????????豕㊣??角????????
	NET_DVR_CALLBACK_STATUS_SEND_WAIT,           // ﹞???????
}NET_SDK_CALLBACK_STATUS_NORMAL;


//???邦?????“??℅???
#define NET_SDK_OKC_STATUS_SUCCESS                1000  //???邦????????
#define NET_SDK_OKC_STATUS_FAILED                1002  //???邦?????∫∼?

//???邦????CVR℅???
#define NET_SDK_OKC_STATUS_START_CONFIG            1003  //????????
#define NET_SDK_OKC_CHECK_HD                    1004  //?足??????
#define NET_SDK_OKC_INIT_HD                        1005  //??????????
#define NET_SDK_OKC_CREATE_RAID_OR_SINGLE_DISK    1006  //???“?車???辰??????????
#define NET_SDK_OKC_INIT_CVR_SERVICE            1007  //??????CVR﹞???
#define NET_SDK_OKC_CREATE_RECORD_VOLUME        1008  //???“?????赤

//?????????邦?????∫∼???℅?????????part1
#define NET_SDK_OKC_ERR_LOAD_CONF_FAILED              1009 //?????????????∫∼?
#define NET_SDK_OKC_ERR_NOT_SUPPORT_RAID_LEVLE        1010 //???∫???????角????raid 
#define NET_SDK_OKC_ERR_CONFIGURATION_CONFLICT          1011 //????????????raid?辰??????
#define NET_SDK_OKC_ERR_GET_DISK_INFO_FAILED          1012 //?????????????∫∼?
#define NET_SDK_OKC_ERR_CHECK_DISK_FAILED             1013 //?足???????∫∼?
#define NET_SDK_OKC_ERR_INIT_DISK_FAILED              1014 //???????????∫∼?
#define NET_SDK_OKC_ERR_DISK_CAPACITY_SMALL           1015 //????℅???????℅?
#define NET_SDK_OKC_ERR_BOTH_SV_NS                    1016 //???㊣????SV????NS??
#define NET_SDK_OKC_ERR_CREATE_RAID_FAILED            1017 //???“raid?∫∼?
#define NET_SDK_OKC_ERR_GET_RAID_FAILED               1018 //????raid?∫∼?
#define NET_SDK_OKC_ERR_CREATE_SPARE_FAILED           1019 //???“??㊣????∫∼?
#define NET_SDK_OKC_ERR_CREATE_STORAGE_POOL_FAILED    1020 //???“???????∫∼?
#define NET_SDK_OKC_ERR_GET_POOL_INFO_FAILED          1021 //???????????????∫∼?
#define NET_SDK_OKC_ERR_CREATE_LUN_FAILED             1022 //???“lun?赤?∫∼?
#define NET_SDK_OKC_ERR_GET_LUN_INFO_FAILED           1023 //????lun?????∫∼?
#define NET_SDK_OKC_ERR_CREATE_BACKUP_FAILED          1024 //???“?∟???赤?∫∼?
#define NET_SDK_OKC_ERR_GET_BACKUP_FAILED                1025 //?????∟???赤?∫∼?
#define NET_SDK_OKC_ERR_CREATE_PRIVATE_LUN_FAILED        1026 //???“?????赤?∫∼?
#define NET_SDK_OKC_ERR_CREATE_RV_FAILED              1027 //???“?????赤?∫∼?
#define NET_SDK_OKC_ERR_CREATE_ARCH_RV_FAILED         1028 //???“?????赤?∫∼?
#define NET_SDK_OKC_ERR_START_CVR_SERVICE_FAILED      1029 //????CVR﹞????∫∼?

//???邦????SAN℅???
#define NET_SDK_OKC_CREATING_ARRAY                    1030  //???“?車???℅??
#define NET_SDK_OKC_CREATING_STORAGE_POOL            1031  //???“???????℅??
#define NET_SDK_OKC_CREATING_LUN_VOL                1032  //???“?????赤?℅??
#define NET_SDK_OKC_CREATING_ISCSI                    1033  //???“ISCSI?℅??
#define NET_SDK_OKC_ERR_HOT_SPARE_CONFICT            1034  //????????㊣???
#define NET_SDK_OKC_ERR_STORAGE_POOL_CONFICT        1035  //????????????
#define NET_SDK_OKC_ERR_RAID_CONFLICT               1036 //?????????????車?? 
#define NET_SDK_OKC_ERR_OPEN_ISCSI_FAILED           1037 //????ISCSI?∫∼?
#define NET_SDK_OKC_ERR_DEVICE_NOSUPPORT_SAN        1038 //?豕㊣????∫??san

//?????????邦?????∫∼???℅?????????part2
#define NET_SDK_OKC_ERR_SAPRE_NUM_EXCEED            1101    //??㊣??????????角
#define NET_SDK_OKC_ERR_CREATE_PIC_VOLUME_FAILED    1102    //???“?????赤?∫∼?

typedef enum
{
	NET_SDK_GET_NEXT_STATUS_SUCCESS = 1000,    // ???????????????????∫?????赤?那㊣????????車?豕???????‾??NET_DVR_RemoteConfigGetNext??????????????
	NET_SDK_GET_NETX_STATUS_NEED_WAIT,        // ?豕?????豕㊣?﹞??????????????‾??NET_DVR_RemoteConfigGetNext????
	NET_SDK_GET_NEXT_STATUS_FINISH,            // ???????????那?????㊣???∫?????‾??NET_DVR_StopRemoteConfig?芍???∟????
	NET_SDK_GET_NEXT_STATUS_FAILED,            // ?????足???????∫?????‾??NET_DVR_StopRemoteConfig?芍???∟????
}NET_SDK_GET_NEXT_STATUS;

//?????????????赤?車??
typedef enum tagNET_SDK_IPC_CFG_FILE_ERR_CODE
{
	NET_SDK_IPC_CFG_FILE_NO_ERR = 0,                                /* ?????赤 */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_CHANNEL_INVALID = 1,       /* ?“??ID﹞?﹞“ */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_CHANNEL_DUPLICATE,         /* ?“??ID???? */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_IP_INVALID,              /* ?“??IP?辰?辰??﹞?﹞“ */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_IP_DUPLICATE,           /* ?“??IP?辰?辰?????? */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_IP_CONFLICT_WITH_LOCAL, /* ?“??IP??㊣???IP???? */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_PROTOCOL_INVALID,         /* ???谷?赤?車 */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_PORT_INVALID,             /* ???赤?????赤?車 */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_DEVICE_CHANNEL_ERR,   /* ?豕㊣??“?????赤?車 */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_USER_NAME_ERR,       /* ???∫????﹞?﹞“℅?﹞? */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_PASSWD_ERR,             /* ??????﹞?﹞“℅?﹞? */
	NET_SDK_IPC_CFG_FILE_ERR_CODE_TRANSPORT_PROTOCOL_INVALID /*???????谷?赤?車*/
}NET_SDK_IPC_CFG_FILE_ERR_CODE;

//IPC?????赤?車??
typedef enum
{
	NET_SDK_UPGRADE_IPC_INVALID = 0,                //???∫?“???辰?????????“??????
	NET_SDK_UPGRADE_IPC_SUCCESS,                    //????????
	NET_SDK_UPGRADE_IPC_OFFLINE,                    //IPC??????
	NET_SDK_UPGRADE_IPC_NOT_SUPPORT,                //IPC???∫???????邦??
	NET_SDK_UPGRADE_IPC_LANGUAGE_MISMATCH,            //??????????
	NET_SDK_UPGRADE_IPC_WRITE_FLASH_FAILED,            //??flsh?∫∼?
	NET_SDK_UPGRADE_IPC_OTHER_ERROR                    //?????赤?車
}NET_SDK_UPGRADE_IPC_ERR_CODE;

typedef enum
{
	NET_SDK_REMOTE_CONFIG_STATUS_SUCCESS = 1001,//?????‾?迆???邦﹞???????
	NET_SDK_REMOTE_CONFIG_STATUS_FAILED,    //?????‾?迆???邦﹞????∫∼?
	NET_SDK_REMOTE_CONFIG_STATUS_PROCESSING    //?????‾?迆???邦﹞???????????
}NET_SDK_REMOTE_CONFIG_STATUS;

#define MAX_CODE_CARD_SUPPORTDISPNUMS 8//????㊣角???“℅??角?∫?????????“????
#define MAX_SUPPORT_RES 32

typedef enum _BOARD_TYPE
{
	DS4004HC_BOARD = 2,  //4004HC
	DS4008HC_BOARD = 3,  //4008HC
	DS4016HC_BOARD = 4,  //4016HC
	DS4001HF_BOARD = 5,  //4001HF
	DS4004HF_BOARD = 6,  //4004HF
	DS4002MD_BOARD = 7,  //4002MD
	DS4004MD_BOARD = 8,  //4004MD
	DS4016HCS_BOARD = 9,  //4016HCS
	DS4004HC_PLUS_BOARD = 13, //4004HC+
	DS4008HC_PLUS_BOARD = 14, //4008HC+
	DS4016HC_PLUS_BOARD = 15, //4016HC+
	DS4008HF_BOARD = 16, //4008HF
	DS4008MD_BOARD = 17, //4008MD
	DS4008HS_BOARD = 18, //4008HS
	DS4016HS_BOARD = 19, //4016HS

	DS4108HCV_BOARD = 20, //4108HCV
	DS4116HCV_BOARD = 21, //4116HCV
	DS5016HC_BOARD = 22, //5016HC

	DS4208HFV_BOARD = 23, //4208HFV
	DS4216HC_BOARD = 24, //4216HC
	DS4216HFV_BOARD = 25, //4216HFV

	DS5008HF_BOARD = 26, //5008HF
	DS5116HF_BOARD = 27, //5116HF

	DS5216HC_BOARD = 28, //5216HC
	DS5208HF_BOARD = 29, //5208HF
	DS5216HF_BOARD = 30, //5216HF

	DS4101HD_BOARD = 31, //4101HD
	DS4102HD_BOARD = 32, //4102HD
	DS4104HD_BOARD = 33, //4104HD

	DS4002MD_PLUS_BOARD = 34, //4002MD+  
	DS4004MD_PLUS_BOARD = 35, //4004MD+

	DS4204HFV_BOARD = 36, //4204HFV
	DS4308HCV_BOARD = 37, //4308HCV
	DS4308HFV_BOARD = 38, //4308HFV
	DS4316HCV_BOARD = 39, //4316HCV
	DS4316HFV_BOARD = 40, //4316HFV
	DS4304HD_BOARD = 41, //4304HD
	DS4304HFH_BOARD = 42, //4304HFH
	DS4304HFV_BOARD = 43, //4304HFV
	DS4302HFH_BOARD = 44, //4302HFH
	DS5316HF_BOARD = 45, //5316HF
	DS4308HW_BOARD = 46, //4308HW
	DS4316HW_BOARD = 47, //4316HW
	DS4308MD_BOARD = 48, //4308MD
	UNKNOWN_BOARD_TYPE = 0xffffffff,
}BOARD_TYPE;

typedef struct tagNET_DVR_CODECARD_ABILITY /*????㊣角???“??????*/
{
	BYTE byCardType;      //㊣角???“?角??(∼?BOARD_TYPE????????)
	BYTE byCodeNums;      //㊣角???“???? 
	BYTE byDispNums;      //?????“???? 
	BYTE byCodeStartIdx;     //?℅??㊣角???“?????迄??㊣角???“???????‾?? 
	BYTE byDispStartIdx;     //?℅???????“?????迄???????“???????‾??
	BYTE byRes1[3];
	DWORD dwVgaSupportResolution[MAX_SUPPORT_RES/*32*/];//?∫????﹞?㊣???
	DWORD dwHdmiSupportResolution[MAX_SUPPORT_RES/*32*/];//?∫????﹞?㊣???
	DWORD dwDviSupportResolution[MAX_SUPPORT_RES/*32*/];//?∫????﹞?㊣???
	DWORD dwYpbprSupportResolution[MAX_SUPPORT_RES/*32*/];//?∫????﹞?㊣???
	BYTE byDispFormat[MAX_CODE_CARD_SUPPORTDISPNUMS];   //?∫????????????(∼?HD_DISPLAY_FORMAT????????) 
	BYTE byWindowMode[MAX_CODE_CARD_SUPPORTDISPNUMS][12]; //?∫?????∼??????(㊣???1,2,4,9,16))
	BYTE byRes2[36];
}NET_DVR_CODECARD_ABILITY, *LPNET_DVR_CODECARD_ABILITY;

#define        MAX_CODE_CARD_NUM            8   //℅??角????㊣角???“??
typedef struct tagNET_DVR_CODESVR_ABILITY
{
	DWORD dwSize;      /* ?芍?????車?? */
	BYTE byCardNums;      /* ㊣角???“?? */
	BYTE byStartChan;     /* ?????“???? */
	BYTE byRes1[2];
	NET_DVR_CODECARD_ABILITY struCodeCardAbility[MAX_CODE_CARD_NUM];
	BYTE byRes2[64];
}NET_DVR_CODESVR_ABILITY, *LPNET_DVR_CODESVR_ABILITY;

typedef struct tagNET_DVR_CODER_SERVER_OUTPUT_CFG
{
	DWORD  dwSize;
	BYTE   byDispChanType;        /*?????“???角????0-BNC??1-VGA??2-HDMI??3-DVI*/ //??????????????
	BYTE   byVedioFormat;      /*1:NTSC,2:PAL??0-NULL*/
	BYTE   byRes1[2];
	DWORD  dwResolution;       //﹞?㊣???
	DWORD  dwWindowMode;        /*???????????∫??????????????????*/
	BYTE   byRes2[64];
}NET_DVR_CODER_SERVER_OUTPUT_CFG, *LPNET_DVR_CODER_SERVER_OUTPUT_CFG;

typedef struct tagNET_DVR_DISPLAY_START_INFO
{
	DWORD  dwSize;
	DWORD  dwDisplayChan; //?????“????
	DWORD  dwCodeChan; //㊣角???“????
	DWORD  dwWinNum;   //?∼????????1??
	BYTE   byEnableAudio; //??????????0-????1-??
	BYTE   byRes[31];
}NET_DVR_DISPLAY_START_INFO, *LPNET_DVR_DISPLAY_START_INFO;

typedef struct tagNET_DVR_CODER_WINDOW_INFO
{
	DWORD dwSize;
	DWORD dwDisplayChan;//?????“????
	DWORD dwWinNum;     //?∼????????1????
	BYTE  byRes[16];
}NET_DVR_CODER_WINDOW_INFO, *LPNET_DVR_CODER_WINDOW_INFO;

typedef struct tagNET_DVR_WINDOW_STATUS
{
	DWORD  dwSize;         //?芍???車??
	DWORD  dwCodeChan;      /*㊣角???“????*/
	BYTE   byDisplay;              /*??﹞???????0-﹞???1-??*/
	BYTE   byAudio;            /*??????﹞?????,0-﹞???1-??*/
	BYTE   byRes[30];
}NET_DVR_WINDOW_STATUS, *LPNET_DVR_WINDOW_STATUS;

typedef struct tagNET_DVR_RECORD_LOCK_PERCENTAGE
{
	DWORD     dwSize;              //?芍?????車??
	BYTE     byPercentage;        //∼?﹞?㊣???????﹞??∫[0,100]
	BYTE      byRes[31];          //㊣???
}NET_DVR_RECORD_LOCK_PERCENTAGE, *LPNET_DVR_RECORD_LOCK_PERCENTAGE;

typedef struct tagNET_DVR_UPDATE_RECORD_INFO
{
	DWORD             dwSize;             //?芍?????車??
	NET_DVR_STREAM_INFO struStreasmInfo;     //?‾ID
	DWORD              dwBeginTime;    //????℅????????㊣??
	DWORD             dwEndTime;        //????℅????芍???㊣??
	BYTE              byRes[32];       //㊣???
}NET_DVR_UPDATE_RECORD_INFO, *LPNET_DVR_UPDATE_RECORD_INFO;

typedef struct tagNET_DVR_CMD_TRIGGER_PERIOD_RECORD_PARA
{
	NET_DVR_STREAM_INFO        struStreamInfo;
	DWORD                    dwCmdType;                         //??????﹞??角?? 
	DWORD                    dwRecordTimeLen;                //?????????㊣????????????
	BYTE                    byEventID[MAX_EVENTID_LEN];        //????ID??℅‾??????????
	DWORD                    dwLockDuration;                //???“?????㊣??????????????0xffffffff- ???????“??0- ????
	BYTE                    byBackUp;                       //??﹞???????0-????????1-????
	BYTE                    byPreRecord;                    //??﹞??∟????0-???∟????1-?∟??
	BYTE                    byRes[122];
}NET_DVR_CMD_TRIGGER_PERIOD_RECORD_PARA, *LPNET_DVR_CMD_TRIGGER_PERIOD_RECORD_PARA;

typedef struct tagNET_DVR_LOCK_FILE_BY_NAME_PARA
{
	BYTE                byFileName[NAME_LEN];     // ?????????????????谷????32????????
	DWORD                dwLockDuration;            // ???“?????㊣??,????????0xffffffff㊣赤?????????“
	BYTE                byRes[512];
}NET_DVR_LOCK_FILE_BY_NAME_PARA, *LPNET_DVR_LOCK_FILE_BY_NAME_PARA;


typedef struct tagNET_DVR_MULTI_STREAM_COMPRESSIONCFG_COND
{
	DWORD                    dwSize;
	NET_DVR_STREAM_INFO        struStreamInfo;
	DWORD                    dwStreamType; //???‾?角????0-?‾???‾??1-℅????‾??2-?????角????3-???‾3???????“℅??“?????‾?角???豕?“??GET /ISAPI/Streaming/channels/<ID>/customStream?????㊣?∼?“???????赤?????迄??℅??“?????‾ID??℅??“?????‾??6~10?????‾????????6~10??
	BYTE                    byRes[32];
}NET_DVR_MULTI_STREAM_COMPRESSIONCFG_COND, *LPNET_DVR_MULTI_STREAM_COMPRESSIONCFG_COND;


typedef struct tagNET_DVR_MULTI_STREAM_COMPRESSIONCFG
{
	DWORD                            dwSize;
	DWORD                            dwStreamType;        //???‾?角????0-?‾???‾??1-℅????‾??2-?????角????3-???‾3??????
	NET_DVR_COMPRESSION_INFO_V30    struStreamPara;        //???‾????????
	BYTE                            byRes[80];
}NET_DVR_MULTI_STREAM_COMPRESSIONCFG, *LPNET_DVR_MULTI_STREAM_COMPRESSIONCFG;

typedef struct tagNET_DVR_PUSHALARMINFO_V40
{
	DWORD dwAlarmType; /*0-??????㊣“??,1-?????迆,2-???????∫,3???????足??,4??????????????,5-???????????赤,6-????㊣“??,7-??????????, 8-﹞?﹞“﹞???, 9-?????????足????10-?????足?? 11- ???????∼㊣???  12-?車???足?? */
	union
	{
		BYTE byRes[300];
		struct
		{
			DWORD dwAlarmInputNumber;    /*∼???,??0????????0??????????,dwAlarmType??0?㊣?豕???豕??*/
			BYTE  byAlarmOutputNumber[MAX_ALARMOUT_V30];   /*∼???,??0????????0??????????, */
			BYTE  byAlarmRelateChannel[MAX_CHANNUM_V30];  /*∼???,??0????????0???“??*/
			BYTE  byRes1[97];
			BYTE  byDeviceID[NAME_LEN]; /*?豕㊣???ID??*/
			BYTE  byRes2[7];
		}struIOAlarm;
		struct
		{
			BYTE byStreamID[STREAM_ID_LEN]; // ID????
			BYTE byRes1[132];
			BYTE byChannel[MAX_CHANNUM_V30];             /*∼???,0x2㊣赤????1?“??????1????????1???“??(???“??1????)??dwAlarmType??2?辰3, 6??9??10?㊣?豕???豕??, */
			BYTE byRes2[33];
			BYTE byDeviceID[NAME_LEN]; /*?豕㊣???ID??*/
			BYTE byRes3[7];
		}struStreamIDorChannel;
		struct
		{
			BYTE byRes1[228];
			BYTE byDiskNumber[MAX_DISKNUM_V30];  /*∼???,??0????????0??????,dwAlarmType??1,4,5?㊣?豕???豕??*/
			BYTE byDeviceID[NAME_LEN]; /*?豕㊣???ID??*/
			BYTE byRes2[7];
		}struDiskAlarm;
	}uAlarmInfo;
}NET_DVR_PUSHALARMINFO_V40, *LPNET_DVR_PUSHALARMINFO_V40;

typedef struct tagNET_DVR_RECORD_PACK
{
	NET_DVR_STRUCTHEAD     struStruceHead;
	DWORD             dwPackageInterval;    // ?辰∼邦?㊣?????? ???㊣????????﹞???
	BYTE              byRes[32];               // ㊣???
}NET_DVR_RECORD_PACK, *LPNET_DVR_RECORD_PACK;

#define NET_DVR_FIND_NAS_DIRECTORY     6161        //?谷??NAS????
#define NET_DVR_NAS_FINDING       0   //?????谷??
#define NET_DVR_NAS_RECV          1   //????????
#define NET_DVR_NAS_OVER          2   //?谷???芍??
#define NET_DVR_NAS_EXCEPTION     3   //?????足??
typedef struct tagNET_DVR_NET_DISK_SERACH_PARAM
{
	NET_DVR_IPADDR              struIP;         // IP???﹞
	WORD              wPort;      // IP????
	BYTE                byRes[10];  // ㊣???℅???
}NET_DVR_NET_DISK_SERACH_PARAM, *LPNET_DVR_NET_DISK_SERACH_PARAM;


typedef struct tagNET_DVR_NET_DISK_SERACH_RET
{
	BYTE byDirectory[128];  // ﹞?????????????
	BYTE byRes[20];
}NET_DVR_NET_DISK_SERACH_RET, *LPNET_DVR_NET_DISK_SERACH_RET;

typedef struct tagNET_DVR_WD1_CFG
{
	NET_DVR_STRUCTHEAD     struStruceHead;
	BYTE              byWD1Enable;         //WD1???????? 0 ??㊣? 1 ????    
	BYTE                 byRes[31];      //㊣???
}NET_DVR_WD1_CFG, *LPNET_DVR_WD1_CFG;

typedef struct tagNET_DVR_FTPCFG_V40
{
	NET_DVR_STRUCTHEAD     struStruceHead;
	BYTE                byEnableFTP;            /*??﹞?????ftp??????????0-﹞???1-??*/
	BYTE                byProtocolType;             /*???谷?角?? 0-FTP??1-SFTP*/
	WORD                wFTPPort;                /*????*/
	union
	{
		struct
		{
			BYTE            szDomain[64];        //﹞????‾???﹞????????IPv4 IPv6?辰???辰??
			BYTE            byRes1[80];
		}struDomain;
		struct
		{
			NET_DVR_IPADDR     struIp;             /*IP???﹞:IPv4 IPv6???﹞, 144℅???*/
		}struAddrIP;
	}unionServer;  //???????????芍????﹞???????IP???﹞?????辰?????谷??
	BYTE                szUserName[32];            /*???∫??*/
	BYTE                szPassWORD[16];            /*????*/
	BYTE                szTopCustomDir[64];        /*℅??“??????????*/
	BYTE                szSubCustomDir[64];        /*℅??“??????????*/
	BYTE                byDirLevel;                /*0 = ???????????芍?????㊣??㊣??????迄????,    1 = ????1??????,2=????2??????*/
	BYTE                 byTopDirMode;            /* ??????????0x1 = ?????豕㊣???,0x2 = ?????豕㊣???,0x3 = ?????豕㊣?ip???﹞??
												  0x4=?????角????,0x5=?????㊣??(?那??),0x6-????℅??“?? ,0x7=?????角??,0x8=﹞??辰,0x9=????*/
	BYTE                 bySubDirMode;           /*??????????0x1=?????“????,0x2=?????“???? 0x3=?????㊣??(?那????),
												 0x4=??????????,0x5-????℅??“??, 0x6=?????角??,0x7=﹞??辰,0x8=????,0x9 = ????㊣角??*/
	BYTE                byType;                    /* 0-?‾﹞????‾??1-㊣?﹞????‾*/
	BYTE                byEnableAnony;          /*???????? 0-﹞? 1??*/
	BYTE                byAddresType;           /*0 ????IPV4??IPV6  1- ?????辰??*/
	BYTE                byFTPPicType;           //0-㊣?????1-??????℅????????邦?????辰
	BYTE                 byPicArchivingInterval; //?????谷??????[1~30],0㊣赤????㊣?
	NET_DVR_PICTURE_NAME_EX     struPicNameRule;   /* ?????邦?????辰:
												   byFTPPicType ==1???㊣?辰,℅???℅谷?????邦?????辰????????℅????????邦?????辰*/
	BYTE                byPicNameRuleType;      //?????邦?????辰?角????0~?????角????1~?????∼℅????“??(????struPicNameRule????byPicNamePrefix℅???)
	BYTE                 byRes[203];             /*㊣???*/
}NET_DVR_FTPCFG_V40, *LPNET_DVR_FTPCFG_V40;

typedef struct tagNET_DVR_FTP_TYPE
{
	BYTE    byType;  // 0-?‾﹞????‾??1-㊣?﹞????‾
	BYTE    byRes[3];
}NET_DVR_FTP_TYPE, *LPNET_DVR_FTP_TYPE;

//FTP﹞????‾?????????芍????
typedef struct
{
	DWORD     dwSize;
	BYTE    byEnableFTP;            /*??﹞?????ftp??????????0-﹞???1-??*/
	BYTE    byProtocolType;             /*???谷?角?? 0-FTP??1-SFTP*/
	WORD    wFTPPort;                /*????*/
	union
	{
		BYTE    byRes[144];
		struct
		{
			BYTE    szDomain[MAX_DOMAIN_NAME];        //﹞????‾???﹞????????IPv4 IPv6?辰???辰??
			BYTE    byRes1[80];
		}struDomain;
		struct
		{
			NET_DVR_IPADDR     struIp;             /*IP???﹞:IPv4 IPv6???﹞, 144℅???*/
		}struAddrIP;
	}unionServer;  //???????????芍????﹞???????IP???﹞?????辰?????谷??

	BYTE    szUserName[NAME_LEN];            /*???∫??*/
	BYTE    szPassWORD[PASSWD_LEN];            /*????*/
	BYTE    szTopCustomDir[MAX_CUSTOM_DIR];        /*℅??“??????????*/
	BYTE    szSubCustomDir[MAX_CUSTOM_DIR];        /*℅??“??????????*/
	BYTE    byDirLevel;                /*0 = ???????????芍?????㊣??㊣??????迄????,    1 = ????1??????,2=????2??????*/
	BYTE    byTopDirMode;            /* ??????????0x1 = ?????豕㊣???,0x2 = ?????豕㊣???,0x3 = ?????豕㊣?ip???﹞??
									 0x4=?????角????,0x5=?????㊣??(?那??),0x6-????℅??“?? ,0x7=?????角??,
									 0x8=﹞??辰,0x9=????*/
	BYTE    bySubDirMode;           /*??????????0x1=?????“????,0x2=?????“???? 0x3=?????㊣??(?那????),
									0x4=??????????,0x5-????℅??“??, 0x6=?????角??,0x7=﹞??辰,0x8=????,
									0x9 = ????㊣角??*/
	BYTE    byType;                    /* 0-?‾﹞????‾??1-㊣?﹞????‾*/
	BYTE    byEnableAnony;          /*???????? 0-﹞? 1??*/
	BYTE    byAddresType;           /*0 ????IPV4??IPV6  1- ?????辰??*/

	BYTE    byRes2[198];
}NET_DVR_FTP_SERVER_TEST_PARA, *LPNET_DVR_FTP_SERVER_TEST_PARA;

#define NET_SDK_ACCESS_KEY_LEN 64   //﹞????????∟??
#define NET_SDK_SECRET_KEY_LEN 64  //?????????∟??

//﹞????‾?????芍????
typedef struct tagNET_DVR_SERVER_TEST_PARA
{
	DWORD    dwSize;
	union
	{
		BYTE byRes[740];
		struct
		{
			NET_DVR_NTPPARA    struNtpPara;                    /*NTP﹞????‾????????80℅???*/
			BYTE    byRes1[660];
		}struNtpPara;
		struct
		{
			NET_DVR_SINGLE_NET_DISK_INFO_V40    struNasPara;   /*NAS﹞????‾????????480℅???*/
			BYTE    byRes1[260];
		}struNasPara;
		struct
		{
			NET_DVR_FTP_SERVER_TEST_PARA    struFtpPara;   /*FTP﹞????‾????????528℅???*/
			BYTE    byRes1[212];
		}struFtpPara;
		struct
		{
			NET_DVR_EMAILCFG_V30    struEmailPara;            /*Email﹞????‾????????660℅???*/
			BYTE    byRes1[80];
		}struEmailPara;
		struct
		{
			NET_DVR_IPADDR    struIp;                            /*IP????????????24℅???*/
			BYTE    byRes1[716];
		}struIpPara;
		struct
		{
			NET_DVR_IPADDR  struIPAdder;
			WORD  wPort; //??????
			BYTE  byRes2[2];
			char  szUser[CLOUD_NAME_LEN/*48*/]; //???∫??
			char  szPassword[CLOUD_PASSWD_LEN/*48*/];     // ????
			NET_DVR_POOLPARAM  struPoolInfo[16];// ??℅谷0㊣赤???“????????????????℅谷1㊣赤????????????????????℅谷2㊣赤???????足?????????“IPC/D??
			BYTE   byProtocolType;//?????????谷∼?㊣???0- 1.0∼?㊣???1- 2.0∼?㊣?
			BYTE   byRes3[3];
			char  szAccessKey[NET_SDK_ACCESS_KEY_LEN/*64*/]; //﹞???????
			char  szSecretKey[NET_SDK_SECRET_KEY_LEN/*64*/]; //????????
			BYTE byRes1[354];
		}struCloudStoragePara;
		struct
		{
			BYTE byPhoneNum[MAX_PHONE_NUM/*32*/];
			BYTE byRes1[708];
		}struPhoneNumPara;//????????
	}unionServerPara;
	BYTE byRes2[800];
}NET_DVR_SERVER_TEST_PARA, *LPNET_DVR_SERVER_TEST_PARA;

typedef struct  tagNET_DVR_GOP_INFO  //????GOP?‾???????芍????,?“???????㊣????
{
	DWORD      dwSize;          //?芍?????車??
	LONG      lChannel;       //?“????
	NET_DVR_TIME_EX   struStartTime;    //?????㊣??
	NET_DVR_TIME_EX   struEndTime;     //?芍???㊣??
	BYTE                 byRes[256];      // ㊣???℅???  
}NET_DVR_GOP_INFO, *LPNET_DVR_GOP_INFO;

typedef struct  tagNET_DVR_GOP_INFO_RET
{
	NET_DVR_TIME_V30   struGopTime;    //Gop?????㊣????
	DWORD         dwDuration;    //?????????㊣??
	DWORD         dwDataSize;     //????pBuf?車??
	BYTE          byRes[128];
	char* pBuf;//Gop?????谷
}NET_DVR_GOP_INFO_RET, *LPNET_DVR_GOP_INFO_RET;

typedef struct tagNET_DVR_GOP_INFO_PASSBACK   //????????????????
{
	DWORD       dwSize;                 //?芍?????車??
	NET_DVR_TIME_V30  struTime;         //?????㊣??,?㊣?????角???????????????㊣??㊣赤?????????㊣?????㊣?????????㊣??㊣赤???????????㊣??
	DWORD       dwDuration;             //?????????㊣???????㊣?????角???????????????㊣???∫
	DWORD       dwMetaDataSize;         //?????????車??
	DWORD       dwPicDataSize;          //?????????車??
	char*        pMetaDataBuffer;        //????????????????
	char*       pPicDataBuf;            //??????????
	BYTE        byRes[32];
}NET_DVR_GOP_INFO_PASSBACK, *LPNET_DVR_GOP_INFO_PASSBACK;

typedef struct tagNET_DVR_SINGLEWALLPARAM
{
	DWORD  dwSize;
	BYTE   byEnable;
	BYTE   byRes1[3];
	DWORD  dwWallNum;//????????????
					 //℅?㊣那?????迄℅?℅?㊣那??????㊣??“128??128?????赤???????????????豕?????????迄℅???
	NET_DVR_RECTCFG struRectCfg;
	BYTE    byRes2[36];
}NET_DVR_SINGLEWALLPARAM, *LPNET_DVR_SINGLEWALLPARAM;

/*?∼??????*/
typedef struct tagNET_DVR_WALLWINCFG
{
	DWORD dwSize;
	BYTE  byEnable;
	BYTE  byRes1[7];
	DWORD dwWinNum;//?∼????
	DWORD dwLayerIndex;//?∼???角????????????
	NET_DVR_RECTCFG struWinPosition;//?????∼??(?角????????)
	DWORD dwDeviceIndex;//﹞??????車???????‾?豕㊣??辰??
	WORD wInputIndex;//??????????
	BYTE  byRes2[14];
}NET_DVR_WALLWINCFG, *LPNET_DVR_WALLWINCFG;

typedef struct tagNET_DVR_WALL_INDEX
{
	DWORD    dwSize;
	BYTE    byWallNo;    //???????辰??????1????
	BYTE    bySceneNo;    //???∼?辰??
	BYTE    byRes1[2];
	DWORD    dwDeviceID;    //﹞?????℅??豕㊣?ID
	DWORD    dwWindowNo;    //?∼???辰??/???????辰??
	BYTE    byRes2[32];
}NET_DVR_WALL_INDEX, *LPNET_DVR_WALL_INDEX;

typedef struct tagNET_DVR_WALLWINPARAM
{
	DWORD dwSize;
	BYTE  byTransparency; //???????‾????0-????﹞?0-??    
	BYTE  byWinMode;//?∼??﹞???????????????????
	BYTE  byEnableSpartan;//??????????0-????1-??
	BYTE  byDecResource;  //???∼??﹞?????????℅?????1-D1,2-720P,3-1080P
	BYTE  byWndShowMode; //?∼????????????0-??℅?????????1-℅??∼????????2-℅??∼??????????
	BYTE    byEnabledFeature; //??﹞????????∼??????0-????????!0-????
	BYTE    byFeatureMode; //?????????????????∼?????㊣???∫??0-???∫??1-?∼1+5?㊣????
	BYTE  byRes1;
	DWORD dwAmplifyingSubWndNo; //????℅??∼?????“1℅???????+1℅???℅??∼????+2℅????∼??????
								//?㊣byWndShowMode??2?㊣???∫??㊣赤???㊣?∼??????????℅??∼??
	BYTE  byWndTopKeep; //?∼??????㊣?????0-??㊣?????1-㊣???
	BYTE  byWndOpenKeep; //?∼???辰??㊣?????0-??㊣?????1-㊣???
	BYTE  byRes[22];
}NET_DVR_WALLWINPARAM, *LPNET_DVR_WALLWINPARAM;

typedef struct tagNET_DVR_WALLSCENECFG
{
	DWORD    dwSize;
	BYTE    sSceneName[NAME_LEN];    //???∼????
	BYTE    byEnable;                //???∼??﹞????∫??0-???∫??1-???∫
	BYTE    bySceneIndex;            //???∼???????????????????迄?????∼?㊣??????????
	BYTE    byRes[78];
}NET_DVR_WALLSCENECFG, *LPNET_DVR_WALLSCENECFG;

typedef struct tagNET_DVR_WALLWIN_INFO
{
	DWORD dwSize;
	DWORD dwWinNum;   //?∼????
	DWORD dwSubWinNum;//℅??∼????
	DWORD dwWallNo; //????
	BYTE  byRes[12];
}NET_DVR_WALLWIN_INFO, *LPNET_DVR_WALLWIN_INFO;

typedef struct tagNET_DVR_WALL_WIN_STATUS
{
	DWORD dwSize;
	BYTE  byDecodeStatus; /*?㊣?∼????℅???:0:??????,1 :??????*/
	BYTE  byStreamType;    /*???‾?角??*/
	BYTE  byPacketType;    /*?辰∼邦﹞???*/
	BYTE  byFpsDecV; /*????????????*/
	BYTE  byFpsDecA; /*????????????*/
	BYTE  byRes1[7];
	DWORD dwDecodedV; /*????????????*/
	DWORD dwDecodedA; /*????????????*/
	WORD  wImgW; /*?㊣?∼???‾?????????車??*/
	WORD  wImgH;
	BYTE  byStreamMode; //???‾??(????????????℅??????“???∫)??1-??????2-℅??????“????㊣角??℅???????3-????﹞????‾??0xff-???∫
	BYTE  byRes2[31];
}NET_DVR_WALL_WIN_STATUS, *LPNET_DVR_WALL_WIN_STATUS;

typedef struct tagNET_DVR_WININDEX_INFO
{
	DWORD dwWinIndex; //?∼????
	DWORD dwSubWinIndex;//℅??∼????
	BYTE  byType;//℅????角????1-??????2-????
	BYTE  byWallNo; //????
	BYTE  byRes[6];
}NET_DVR_WININDEX_INFO, *LPNET_DVR_WININDEX_INFO;

typedef struct tagNET_DVR_ASSOCIATEDDEV_CHAN_INFO
{
	DWORD  dwSize;
	BYTE   sAddress[MAX_DOMAIN_NAME];//ip???﹞???辰???辰??
	WORD   wDVRPort;                 /* ?????? */
	WORD   wChannel;                /* ?“???? */
	BYTE   sUserName[NAME_LEN];    /* ?角???‾?迆???????? */
	BYTE   sPassword[PASSWD_LEN];    /* ?角???‾?迆???? */
	BYTE   byRes[24];
}NET_DVR_ASSOCIATEDDEV_CHAN_INFO, *LPNET_DVR_ASSOCIATEDDEV_CHAN_INFO;

typedef struct tagNET_DVR_WALLOUTPUTPARAM
{
	DWORD dwSize;
	DWORD dwResolution; //﹞?㊣???    
	NET_DVR_VIDEOEFFECT struRes;
	BYTE  byVideoFormat; //????????????VIDEO_STANDARD
	BYTE  byDisplayMode;/*????????????,1-BNC??2-VGA??3-HDMI??4-DVI??5-SDI, 6-FIBER, 7-RGB, 8-YPrPb, 9-VGA/HDMI/DVI℅???????0xff-???∫*/
	BYTE  byBackgroundColor; //㊣??∼????0-???∫?????∫??㊣??∼????1-?足??2-????3-????4-????5-℅???6-?角??7-????8-∼℅??0xff-℅??“??
	BYTE  byUseEDIDResolution; //??﹞?????EDID﹞?㊣?????0-????????1-????
	WORD  wLEDWidth;     //LED??????﹞?㊣????赤
	WORD  wLEDHeight;    //LED??????﹞?㊣?????
	NET_DVR_RGB_COLOR struBackColor;//㊣??∼????byBackgroundColor??0xff?㊣???∫
	BYTE    byLinkStatus;//??????????℅?????0-???∫,1-?????????‾,2-???????????‾
	BYTE    byRes2[51];
}NET_DVR_WALLOUTPUTPARAM, *LPNET_DVR_WALLOUTPUTPARAM;

#define     MAX_UNITEDMATRIX_NUM        8  //??????℅??角????℅??????“????

typedef struct NET_DVR_SUBMATRIXSYSTEMINFO
{
	//???“????0㊣赤?????????“
	DWORD        dwSequence;
	BYTE        sAddress[MAX_DOMAIN_NAME];//ip???﹞???辰???辰??
	WORD        wSubMatrixPort;        /*℅???????????*/
	BYTE        byRes1[6];
	BYTE        sUserName[NAME_LEN];    /*???∫??*/
	BYTE        sPassword[PASSWD_LEN];    /*???? */
	BYTE        byRes2[36];
}NET_DVR_SUBMATRIXSYSTEMINFO, *LPNET_DVR_SUBMATRIXSYSTEMINFO;

typedef struct tagNET_DVR_UNITEDMATRIXSYSTEMINFO
{
	DWORD dwSize;
	//????℅??????“????
	NET_DVR_SUBMATRIXSYSTEMINFO struMatrixInfo[MAX_UNITEDMATRIX_NUM];
	BYTE  byRes[32];
}NET_DVR_UNITEDMATRIXSYSTEMINFO, *LPNET_DVR_UNITEDMATRIXSYSTEMINFO;

typedef struct tagNET_DVR_SUBSTREAM_SWITCH_CFG
{
	BYTE  byAutoSwitchEnable; //℅????‾℅?????????0 - ????????1 - ????
	BYTE     byRes1[3];
	WORD  wSubWndWidth; //℅??∼???赤???豕?“????byAutoSwitchEnable??1?㊣???∫
	WORD  wSubWndHeight; //℅??∼???????豕?“????byAutoSwitchEnable??1?㊣???∫
}NET_DVR_SUBSTREAM_SWITCH_CFG, *LPNET_DVR_SUBSTREAM_SWITCH_CFG;

typedef struct tagNET_DVR_WALL_CFG
{
	DWORD  dwSize;
	BYTE  byTransparency;//???‾??,0-100,0???????‾
	BYTE  byWinStaticMode; //?∼????????????????????1-??????2-????℅??車????????
	BYTE  byStreamFailedMode; //???‾?∫∼???????????1-?∼???????????????㊣??2-????℅??車??????????3-?????足????4-????
	BYTE    byEnabledOverlayLogo; //??????????℅??㊣??﹞?????LOGO???芍?????∫??0-????????!0-????
	NET_DVR_SUBSTREAM_SWITCH_CFG  struSubStreamSwitch; //℅????‾????
	BYTE  byLEDShowMode; //LED?∼????????????0-???“??????1-????????
	BYTE  byLowLatencyMode; //?????㊣??????0-???“??????1-?????㊣????
	BYTE  byRes[50];
}NET_DVR_WALL_CFG, *LPNET_DVR_WALL_CFG;

typedef    struct tagNET_DVR_LEDDISPLAYINFO
{
	DWORD            dwSize;
	BYTE              byAddressType;   //0-????ipv4 ipv6???﹞ 1-?辰??
	BYTE        byRes1[3];
	// ????unionServer?????????????﹞?????辰??
	union
	{
		struct
		{
			BYTE            szDomain[MAX_DOMAIN_NAME/*64*/];//﹞????‾???﹞???辰?? 
			BYTE            byRes1[80];
		}struDomain;
		struct
		{
			NET_DVR_IPADDR     struIp;/*IP???﹞*/        //IPv4 IPv6???﹞, 144℅???
		} struAddrIP;
	}unionServer;  //???????????芍?????“??byAddressType℅???㊣赤????IP???﹞?????辰?? 64    
	char        szDisplayInfo[MAX_LEDDISPLAYINFO_LEN/*1024*/];
	BYTE        byRes[128];
}NET_DVR_LEDDISPLAYINFO, *LPNET_DVR_LEDDISPLAYINFO;


typedef struct tagNET_DVR_LOW_LIGHT_CFG
{
	DWORD dwSize;
	BYTE  byLowLightLimt; /* ????????℅??足??: 0-????1-?? */
	BYTE  byLowLightLimtLevel;
	/*?辰?迆0-????1-???足??*2??2-???足??*3??3-???足??*4??4-???足??*6??5-???足??*8??6-???足??*12??7-???足??*16??
	8-???足??*24??9-???足??*32??10-???足??*48??11-???足??*64??12-???足??*96??13-???足??*128??14-???足??*256??
	15-???足??*512, 16-???足??*1.25, 17-???足??*1.5 */
	BYTE  byRes[66];
}NET_DVR_LOW_LIGHT_CFG, *LPNET_DVR_LOW_LIGHT_CFG;

typedef struct tagNET_DVR_FOCUSMODE_CFG
{
	DWORD dwSize;
	BYTE  byFocusMode;  /* ??????????0-℅?????1-??????2-∼?℅??? */
	BYTE  byAutoFocusMode; /* ℅?????????????0-????1-????A??2-????B??3-????AB??4-????C ℅??????????????豕??????????????℅????㊣??????*/
	WORD  wMinFocusDistance; /* ℅????????角????????CM,  0-℅?????0xffff-?????? */
	BYTE  byZoomSpeedLevel;  /* ㊣?㊣???????????????????1-3 */
	BYTE  byFocusSpeedLevel; /* ??????????????????????1-3 */
	BYTE  byOpticalZoom;        /* ???∫㊣?㊣???0-255 */
	BYTE  byDigtitalZoom;        /* ??℅?㊣?㊣???0-255 */
	float fOpticalZoomLevel; /* ???∫㊣?㊣?(㊣?????) [1,32], ℅???????0.5 ???????豕㊣????????㊣?辰*1000 */
	DWORD dwFocusPos;/* dwFocusPos ??focus???“??????????﹞??∫??[0x1000,0xC000]??????????sony℅?㊣那??????????????????????????????㊣??∟?????????﹞????focus????℅?????????﹞??∫?? (????????????????????)*/
	BYTE   byFocusDefinitionDisplay;// ???????迆????????0~????????1~????, ?????芍?????‾???????㊣?∼???﹞??㊣那?????迆??????????∼??迆???∫?‾?????角?迆℅???????????℅????迆???∫?????????迆?????車?迆㊣赤℅??????迆?????迆??﹞??∫????0~100.0000
	BYTE   byFocusSensitivity; //?????谷??????﹞??∫[0,2]????????????℅?????∼?℅????㊣?迆?∫
	BYTE   byRes1[2];
	DWORD  dwRelativeFocusPos;//?角??focus????????16??㊣赤??????????0~4000????16???迆㊣赤?㊣?∼???????????㊣????????
	BYTE   byRes[48];
}NET_DVR_FOCUSMODE_CFG, *LPNET_DVR_FOCUSMODE_CFG;

typedef struct tagNET_DVR_INFRARE_CFG
{
	DWORD  dwSize;
	BYTE  byIrControlMode;  /* ?足???辰?迆????-??????????0-℅?????1-???? */
	BYTE  byIrBrightness;    /* ?足???辰?迆????-?足????????0-100 */
	BYTE  byIrSensitivity;    /* ?足???辰?迆????-?足?????谷??????0-100 */
	BYTE  byIrTrigMode; /* ??﹞????? 0-?迆????﹞???1-??????﹞? ℅??????????迆?∫*/
	BYTE  byIrBrightnessLimit;/* ???????? ??????????80??㊣赤???????????㊣?∼?足?????????????????迄??℅???????????????????????80% ℅??????????迆?∫*/
	BYTE  byRes[63];
}NET_DVR_INFRARE_CFG, *LPNET_DVR_INFRARE_CFG;

typedef struct tagNET_DVR_AEMODECFG
{
	DWORD  dwSize;
	int   iIrisSet;    /* ????????????????*100??????0-?? */
	int   iGainSet;    /* ?足?辰??????????????????????????*100?????????????????? */
	int   iGainLimit;/* ??????????????????????????????*100?????????????????? */
	int   iExposureCompensate; /* ????????????????????*100??????㊣???1050?迆㊣赤10.5dB, -750?迆㊣赤-7.5dB */
	BYTE  byExposureModeSet;    /* ?辰?迆??????????,0-??????????1-℅?????????2-??????????3-?足????????4-???????? */
	BYTE  byShutterSet;         /* ?足????0-????1-℅???x1??2-℅???x2??3-℅???x4??4-℅???x8??5-℅???x16??6-℅???x32??7-℅???x64??8-℅???x128??9-1/1??10-1/2??
								11-1/3??12-1/4??13-1/6??14-1/8??15-1/12??16-1/15??17-1/25??18-1/30??19-1/50??20-1/60??21-1/75??
								22-1/90??23-1/100??24-1/120??25-1/125??26-1/150??27-1/180??28-1/200??29-1/215??30-1/250??31-1/300??
								32-1/350??33-1/425??34-1/500??35-1/600??36-1/725??37-1/1000??38-1/1250??39-1500,40-1/1750??41-1/2000??
								42-1/2500??43-3000,44-1/3500??45-1/4000??46-1/6000??47-1/10000??48-1/30000??49-1/100000,50-1/175??
								51-1/195??52-1/225??53-1/230 */
	BYTE  byImageStabilizeLevel;  /* ﹞?????????: 0-3 */
	BYTE  byCameraIrCorrect; /* ?足??????: 0-℅?????1-????2,?? */
	BYTE  byHighSensitivity; /* ???谷?????豕??: 0-????1-?? */
	BYTE  byInitializeLens;  /* ?????????﹞: 0-????1-?? */
	BYTE  byChromaSuppress; /* ???????? :0-255*/
	BYTE  byMaxShutterSet;     //℅??車?足????;?‾??????byShutterSet?角??(??℅????????????????????????迆?∫)
	BYTE  byMinShutterSet;     //℅????足????;?‾??????byShutterSet?角??(??℅????????????????????????迆?∫)
	BYTE  byMaxIrisSet; //℅??車??????????(℅??????????足??????????) [0,100] ;
	BYTE  byMinIrisSet;    //℅?????????????(℅??????????足??????????) [0,100] ;
	BYTE  byExposureLevel;//?????????“??????????℅????????????????足???????谷?????∫????????1-5 ????4????????∼?㊣?SDK???????豕㊣??㊣??㊣???℅?????0???谷?????迄??????℅?????0?㊣????????????????????1
	BYTE  byRes[60];
}NET_DVR_AEMODECFG, *LPNET_DVR_AEMODECFG;

typedef struct tagNET_DVR_FLASH_CFG
{
	DWORD      dwSize;
	DWORD    dwChan;//?“????
	DWORD    dwInNumbers;//????????
	DWORD    dwOutNumbers;//????????
	DWORD    dwStartTime;//?????㊣??????
	DWORD    dwEndTime;//?芍???㊣??????
	DWORD    dwEhomeFlag;//
	DWORD    dwAlarmFlag;//
	BYTE       byRes[1024];
}NET_DVR_FLASH_CFG, *LPNET_DVR_FLASH_CFG;

typedef struct tagNET_DVR_EXTERNAL_MATRIX_CFG
{
	DWORD        dwSize;
	BYTE        byValid;            // ???∫?㊣???豕???????∫?㊣??????
	BYTE        byRes1[3];
	BYTE        sMatrixName[NAME_LEN/*32*/];       // ???車??????
	DWORD          dwMatrixID;        // ???車??ID????????????
	WORD        wMatrixInputChanNum;                // ???車???????“??????
	WORD        wMatrixOutputChanNum;            // ???車???????“??????
	WORD           wMatrixOutputChanRef[MAX_CAM_COUNT];   //// ?豕㊣??????????車??????∼車?“????????℅谷??㊣那㊣赤???????‾?豕㊣??????“??????????????㊣赤?????車???????“??????
														  //???????車??0 ㊣赤??∼車?“???車?????“????????????0?㊣㊣赤????∼車?“??????﹞????‾???????‾?????????車??????∼車?“????
	BYTE        byMatrixChanType;// ???車???“???角??1-BNC??2-VGA??3-RGB??4-DVI
	BYTE        byMatrixProtocol;    // ???車?迄?????谷1??ZT1.0??2.ZT2.0??3.Extron??4.Creator
	BYTE        byMatrixType;        //1-???????車??2-??℅????車
	BYTE        byRes2;
	NET_MATRIX_UNION struMatrixUnion;
	BYTE        byRes3[128];
}NET_DVR_EXTERNAL_MATRIX_CFG, *LPNET_DVR_EXTERNAL_MATRIX_CFG;

typedef struct tagNET_DVR_EXTERNAL_MATRIX_CFG_V50
{
	DWORD       dwSize;
	BYTE        byValid;            // ???∫?㊣???豕???????∫?㊣??????
	BYTE        byRes1[3];
	BYTE        sMatrixName[NAME_LEN/*32*/];       // ???車??????
	DWORD       dwMatrixID;        // ???車??ID????????????
	WORD        wMatrixInputChanNum;                // ???車???????“??????
	WORD        wMatrixOutputChanNum;            // ???車???????“??????
	WORD        wMatrixOutputChanRef[MAX_CAM_COUNT_V50];   //// ?豕㊣??????????車??????∼車?“????????℅谷??㊣那㊣赤???????‾?豕㊣??????“??????????????㊣赤?????車???????“??????
														   //???????車??0 ㊣赤??∼車?“???車?????“????????????0?㊣㊣赤????∼車?“??????﹞????‾???????‾?????????車??????∼車?“????
	BYTE        byMatrixChanType;// ???車???“???角??1-BNC??2-VGA??3-RGB??4-DVI
	BYTE        byMatrixProtocol;    // ???車?迄?????谷1??ZT1.0??2.ZT2.0??3.Extron??4.Creator
	BYTE        byMatrixType;        //1-???????車??2-??℅????車
	BYTE        byRes2;
	NET_MATRIX_UNION struMatrixUnion;
	BYTE        byRes3[128];
}NET_DVR_EXTERNAL_MATRIX_CFG_V50, *LPNET_DVR_EXTERNAL_MATRIX_CFG_V50;


#define MAX_INPUTNUMS 1024
#define MAX_OUTPUTNUMS 256
typedef struct tagNET_DVR_ASSOCIATE_INPUT_PARAM
{
	BYTE byEnable;
	BYTE byRes1[3];
	DWORD dwDeviceIndex;//﹞??????車???????‾?豕㊣??辰??
	WORD wInputIndex;//??????????
	BYTE  byRes2[18];
}NET_DVR_ASSOCIATE_INPUT_PARAM, *LPNET_DVR_ASSOCIATE_INPUT_PARAM;

typedef struct tagNET_DVR_ASSOCIATE_OUTPUT_PARAM
{
	BYTE    byEnable;
	BYTE    byWallNo;        //????????1????
	BYTE    byRes1[2];
	DWORD    dwOutputIndex;    //?????????????辰??    
	BYTE    byRes2[20];
}NET_DVR_ASSOCIATE_OUTPUT_PARAM, *LPNET_DVR_ASSOCIATE_OUTPUT_PARAM;

typedef struct tagNET_DVR_VCS_USER_INFO
{
	DWORD   dwSize;
	BYTE    sUserName[NAME_LEN];            // ???∫????℅??車16℅???
	BYTE    sPassWord[PASSWD_LEN];        // ????
	NET_DVR_IPADDR    struUserIP;    // ???∫IP???﹞(??0?㊣㊣赤?????赤???????﹞)
	BYTE    byMacAddr[MACADDR_LEN];            // ???赤???﹞
	BYTE    byPriority;        // ????????1-???赤?㊣??2-??℅‾?㊣ ?????赤?㊣?????????“??????℅‾?㊣????"???赤???∫"???“??
	BYTE    byRes1;
	DWORD    dwRight;/*??????℅‾?“????∼???㊣赤????0-???∫????1-?∫?????‾32???迆㊣赤???“???角??*/
					 //bit0-?????豕???迄㊣?????
					 //bit1-?????????赤
					 //bit2-?∼?????赤
					 //bit3-?????????赤
					 //bit4-???????赤
					 //bit5-?∟∼????赤
					 //bit6-?℅?????赤
					 //bit7-OSD???赤
					 //bit8-?????“??
					 //bit9-㊣“????﹞?
					 //bit10-????????
					 //bit11-?????????豕??
					 //bit12-????????????????????
					 //bit13-?????谷??
					 //bit14-????????
					 //bit15-???????辰???赤
	NET_DVR_ASSOCIATE_INPUT_PARAM struInputParam[MAX_INPUTNUMS/*1024*/];
	NET_DVR_ASSOCIATE_OUTPUT_PARAM struOutputParam[MAX_OUTPUTNUMS/*256*/];
	NET_DVR_RECTCFG_EX struManageRegion;   //???????赤???辰
	BYTE   byWallNo;    //???????????赤???辰?????????????∫?????????豕㊣?????℅??????∫
	BYTE   byRes[107];                /* ㊣??? */
} NET_DVR_VCS_USER_INFO, *LPNET_DVR_VCS_USER_INFO;

typedef struct tagNET_DVR_STREAM_MEDIA_SERVER_CFG_V41
{
	BYTE    byValid; //??﹞???????0-﹞???1-??
	BYTE    byRes1[3];
	BYTE    byAddress[MAX_DOMAIN_NAME];   //IP?辰???辰??   
	WORD    wDevPort;            /*?‾????﹞????‾????*/
	BYTE    byTransmitType;        /*???????谷?角?? 0-TCP??1-UDP*/
	BYTE    byRes2[69];
}NET_DVR_STREAM_MEDIA_SERVER_CFG_V41, *LPNET_DVR_STREAM_MEDIA_SERVER_CFG_V41;

//?豕㊣??“??????
typedef struct tagNET_DVR_DEV_CHAN_INFO_V41
{
	BYTE    byAddress[MAX_DOMAIN_NAME];    //?豕㊣??辰??
	WORD     wDVRPort;                 //??????
	BYTE     byChannel;                //?“????
	BYTE    byTransProtocol;        //???????谷?角??0-TCP??1-UDP
	BYTE    byTransMode;            //???????‾???? 0???‾???‾ 1??℅????‾
	BYTE    byFactoryType;            /*?∼???豕㊣??∫???角??,?“??????????*/
	BYTE    byDeviceType; //?豕㊣??角??(????℅??????“????∼?????)??1-?????‾?“???㊣?迄??????℅??????“????????byVcaSupportChanMode℅????????“???????????“???????????“??????2-㊣角???‾
	BYTE    byDispChan;//?????“????,????????????
	BYTE    bySubDispChan;//?????“??℅??“???????????????㊣????
	BYTE    byResolution;    //; 1-CIF 2-4CIF 3-720P 4-1080P 5-500w?車???????‾???????車???????‾?芍?迄????????﹞???????℅???
	BYTE    byUseZeroChan; //??﹞????????“????0-﹞???1-??
	BYTE    byRes;
	BYTE    sUserName[NAME_LEN];    //?角???‾?迆????????
	BYTE    sPassword[PASSWD_LEN];    //?角???‾?迆????
}NET_DVR_DEV_CHAN_INFO_V41, *LPNET_DVR_DEV_CHAN_INFO_V41;

typedef struct tagNET_DVR_DEV_CHAN_INFO_EX
{
	BYTE   byChanType;              //?“???角????0-???“?“??,1-???“??,2-?‾ID??3-㊣???????????4-?谷????﹞????‾?“????5-?????“????6-????﹞????‾??7-﹞?????????????8-?角?角?迆?????“????9-??????????
	BYTE    byStreamId[STREAM_ID_LEN]; //?‾ID???㊣byChanType=2??9?㊣????℅??????????“?‾?辰??????ipc??ID??
	BYTE    byRes1[3];
	DWORD   dwChannel;  //?“???????“???角???????“?“???????“????㊣????????????谷????﹞????‾?“?????????“????????﹞????‾??﹞????????????㊣????℅???
	BYTE    byRes2[24];
	BYTE    byAddress[MAX_DOMAIN_NAME];    //?豕㊣??辰??
	WORD     wDVRPort;                 //??????
	BYTE     byChannel;                //?“????,dwChannel????0?㊣??℅??????∫
	BYTE    byTransProtocol;        //???????谷?角??0-TCP??1-UDP
	BYTE    byTransMode;            //???????‾???? 0???‾???‾ 1??℅????‾
	BYTE    byFactoryType;            /*?∼???豕㊣??∫???角??,?“??????????*/
	BYTE    byDeviceType; //?豕㊣??角??(????℅??????“????∼?????)??1-?????‾?“???㊣?迄??????℅??????“????????byVcaSupportChanMode℅????????“???????????“???????????“??????2-㊣角???‾
	BYTE    byDispChan;//?????“????,????????????
	BYTE    bySubDispChan;//?????“??℅??“???????????????㊣????
	BYTE    byResolution;    //; 1-CIF 2-4CIF 3-720P 4-1080P 5-500w?車???????‾???????車???????‾?芍?迄????????﹞???????℅???
	BYTE    byRes[2];
	BYTE    sUserName[NAME_LEN];    //?角???‾?迆????????
	BYTE    sPassword[PASSWD_LEN];    //?角???‾?迆????
}NET_DVR_DEV_CHAN_INFO_EX, *LPNET_DVR_DEV_CHAN_INFO_EX;

typedef struct tagNET_DVR_STREAM_MEDIA_SERVER
{
	BYTE   byValid; //??﹞???????0-﹞???1-??
	BYTE   byRes1[3];
	BYTE   byAddress[MAX_DOMAIN_NAME];   //IP?辰???辰?? 
	WORD   wDevPort;            /*?‾????﹞????‾????*/
	BYTE   byTransmitType;        /*???????谷?角?? 0-TCP??1-UDP*/
	BYTE   byRes2[5];
}NET_DVR_STREAM_MEDIA_SERVER, *LPNET_DVR_STREAM_MEDIA_SERVER;

typedef struct tagNET_DVR_DEV_DDNS_INFO
{
	BYTE   byDevAddress[MAX_DOMAIN_NAME];    //?辰??(IPServer?辰hiDDNS?㊣?????辰?????辰??㊣???)
	BYTE   byTransProtocol;        //???????谷?角??0-TCP??1-UDP, 2-MCAST
	BYTE   byTransMode;            //???????‾???? 0???‾???‾ 1??℅????‾
	BYTE   byDdnsType;         //?辰??﹞????‾?角????0-IPServer 1??Dyndns 2??PeanutHull(?“?迆??)??3- NO-IP, 4- hiDDNS
	BYTE   byRes1;
	BYTE   byDdnsAddress[MAX_DOMAIN_NAME];  //DDNS﹞????‾???﹞
	WORD   wDdnsPort;                 //DDNS﹞????‾??????
	BYTE   byChanType;              //0-???“?“??,1-???“??,2-?‾ID
	BYTE   byFactoryType;            //?∼???豕㊣??∫???角??,?“??????????
	DWORD  dwChannel; //?“????
	BYTE   byStreamId[STREAM_ID_LEN]; //?‾ID
	BYTE   sUserName[NAME_LEN];    //?角???‾?迆????????
	BYTE   sPassword[PASSWD_LEN];    //?角???‾?迆????
	WORD   wDevPort;                //?∼???豕㊣??“??????
	BYTE   byRes2[2];
}NET_DVR_DEV_DDNS_INFO, *LPNET_DVR_DEV_DDNS_INFO;

typedef struct tagNET_DVR_DEC_STREAM_DEV_EX
{
	NET_DVR_STREAM_MEDIA_SERVER    struStreamMediaSvrCfg;
	NET_DVR_DEV_CHAN_INFO_EX                struDevChanInfo;
}NET_DVR_DEC_STREAM_DEV_EX, *LPNET_DVR_DEC_STREAM_DEV_EX;


//DDNS﹞??????‾
typedef struct tagNET_DVR_DEC_DDNS_DEV
{
	NET_DVR_DEV_DDNS_INFO struDdnsInfo;
	NET_DVR_STREAM_MEDIA_SERVER struMediaServer;
}NET_DVR_DEC_DDNS_DEV, *LPNET_DVR_DEC_DDNS_DEV;

typedef union tagNET_DVR_DEC_STREAM_MODE
{
	NET_DVR_DEC_STREAM_DEV_EX struDecStreamDev;
	NET_DVR_PU_STREAM_URL struUrlInfo;
	NET_DVR_DEC_DDNS_DEV struDdnsDecInfo;
	BYTE byRes[300];
}NET_DVR_DEC_STREAM_MODE, *LPNET_DVR_DEC_STREAM_MODE;

typedef struct tagNET_DVR_PU_STREAM_CFG_V41
{
	DWORD dwSize;
	BYTE byStreamMode;/*???‾??????0-???∫??1-?“??IP?辰?辰?????‾??2-?“??URL???‾,3-?“???????辰???????辰?豕㊣????‾*/
	BYTE byStreamEncrypt;  //??﹞????????‾???????赤,0-???∫??,1-?∫??
	BYTE byRes1[2];
	NET_DVR_DEC_STREAM_MODE uDecStreamMode;//???‾????
	DWORD  dwDecDelayTime;//???????㊣?㊣??????????????
	BYTE   sStreamPassword[STREAM_PASSWD_LEN];  //???‾????????,?豕????????????
	BYTE  byRes2[48];
}NET_DVR_PU_STREAM_CFG_V41, *LPNET_DVR_PU_STREAM_CFG_V41;

typedef struct  tagNET_DVR_MATRIX_CHAN_INFO_V41
{
	BYTE byEnable; //??﹞???????0-﹞???1-??
	BYTE byStreamMode;/*???‾??????0-???∫??1-?“??IP?辰?辰?????‾??2-?“??URL???‾,3-?“???????辰???????辰?豕㊣????‾*/
	BYTE byRes[2];
	NET_DVR_DEC_STREAM_MODE uDecStreamMode;//???‾????
}NET_DVR_MATRIX_CHAN_INFO_V41, *LPNET_DVR_MATRIX_CHAN_INFO_V41;

typedef struct  tagNET_DVR_MATRIX_LOOP_DECINFO_V41
{
	DWORD                            dwSize;
	DWORD                            dwPoolTime;        /*????????*/
	NET_DVR_MATRIX_CHAN_INFO_V41    struchanConInfo[MAX_CYCLE_CHAN_V30];
	BYTE                            byStreamEncrypt;  //??﹞????????‾???????赤,0-???∫??,1-?∫??
	BYTE	                        byRes[3];
	BYTE                            sStreamPassword[STREAM_PASSWD_LEN];  //???‾????????,?豕????????????
}NET_DVR_MATRIX_LOOP_DECINFO_V41, *LPNET_DVR_MATRIX_LOOP_DECINFO_V41;

typedef struct tagNET_DVR_MATRIX_DEC_CHAN_INFO_V41
{
	DWORD    dwSize;
	BYTE byStreamMode;/*???‾??????0-???∫??1-?“??IP?辰?辰?????‾??2-?“??URL???‾,3-?“???????辰???????辰?豕㊣????‾*/
	BYTE byRes1[3];
	NET_DVR_DEC_STREAM_MODE uDecStreamMode;//???‾????
	DWORD    dwPlayMode;        /* 0-???????? 1?????﹞???? 2??∼??㊣????﹞? 3??∼???????﹞? */
	NET_DVR_TIME StartTime;        /* ∼??㊣????﹞??????㊣?? */
	NET_DVR_TIME StopTime;        /* ∼??㊣????﹞??????㊣?? */
	BYTE    sFileName[128];        /* ∼???????﹞??????? */
	DWORD   dwGetStreamMode;    /*???‾????:1-?‾????2-㊣???*/
	NET_DVR_MATRIX_PASSIVEMODE    struPassiveMode;
	BYTE    byRes2[32];
}NET_DVR_MATRIX_DEC_CHAN_INFO_V41, *LPNET_DVR_MATRIX_DEC_CHAN_INFO_V41;

typedef struct tagNet_DVR_IP_ADDRESS
{
	BYTE    byDevAddress[MAX_DOMAIN_NAME];    /*?豕㊣?IP???﹞*/
	WORD    wDevPort;       //?豕㊣?????
	BYTE     byres[134];
}NET_DVR_IP_ADDRESS, *LPNET_DVR_IP_ADDRESS;

typedef struct tagNet_DVR_DDNS_ADDRESS
{
	BYTE byDevAddress[MAX_DOMAIN_NAME];    /*DDNS?辰??*/
	BYTE byDevDdns[MAX_DOMAIN_NAME];    /*?豕㊣????﹞*/
	BYTE byDdnsType; //?辰??﹞????‾?角????0-IPServer 1??Dyndns 2??PeanutHull(?“?迆??)??//3- NO-IP, 4- hiDDNS
	BYTE byRes1[3];
	WORD wDevPort;       //?豕㊣?????
	WORD wDdnsPort; //?辰??﹞????‾????
	BYTE byres[64];
}NET_DVR_DDNS_ADDRESS, *LPNET_DVR_DDNS_ADDRESS;

typedef struct tagNet_DVR_PLAY_BACK_BY_TIME
{
	NET_DVR_TIME StartTime;
	NET_DVR_TIME StopTime;
}NET_DVR_PLAY_BACK_BY_TIME, *LPNET_DVR_PLAY_BACK_BY_TIME;

typedef struct tagNet_DVR_MATRIX_DEC_REMOTE_PLAY_EX
{
	DWORD    dwSize;
	DWORD    dwDecChannel;  //?????“????
	BYTE    byAddressType;  //?豕㊣????﹞?角????0-IP??1-DDNS
	BYTE    byChannelType;  //?“???角????0-???“?“????1-???“????2-?‾ID
	BYTE    byres[2];
	BYTE    sUserName[NAME_LEN];        /* ???∫?? */
	BYTE    sPassword[PASSWD_LEN];        /* ???? */
	DWORD    dwChannel;            /* ?豕㊣??“???? */
	BYTE    byStreamId[STREAM_ID_LEN];  //?‾ID,?????????“???角?????‾ID?㊣???∫
	DWORD    dwPlayMode;       /* 0??∼????? 1??∼??㊣??*/
	union
	{
		BYTE byRes[200];
		NET_DVR_IP_ADDRESS struIpAddr;
		NET_DVR_DDNS_ADDRESS struDdnsAddr;
	}unionAddr;

	union
	{
		BYTE byRes[128];
		NET_DVR_PLAY_BACK_BY_TIME struPlayBackByTime; //∼??㊣????﹞??㊣????????
		char sFileName[128];    //∼?????????﹞??㊣????????
	}unionPlayBackInfo;
}NET_DVR_MATRIX_DEC_REMOTE_PLAY_EX, *LPNET_DVR_MATRIX_DEC_REMOTE_PLAY_EX;

typedef struct tagNET_DVR_MATRIX_DEC_REMOTE_PLAY_V50
{
	DWORD   dwSize;
	DWORD   dwDecChannel;   //?????“????
	BYTE    byAddressType;  //?豕㊣????﹞?角????0-IP??1-DDNS??2-URL
	BYTE    byChannelType;  //?“???角????0-???“?“????1-???“????2-?‾ID
	BYTE    byStreamEncrypt;  //??﹞????????‾???????赤,0-???∫??,1-?∫??
	BYTE	byRes1[1];
	BYTE    sUserName[NAME_LEN];    /* ???∫?? */
	BYTE    sPassword[PASSWD_LEN];  /* ???? */
	DWORD   dwChannel;              /* ?豕㊣??“???? */
	BYTE    byStreamId[STREAM_ID_LEN];  //?‾ID,?????????“???角?????‾ID?㊣???∫
	DWORD   dwPlayMode;             /* 0??∼????? 1??∼??㊣??*/
	union
	{
		BYTE byRes[200];
		NET_DVR_IP_ADDRESS struIpAddr;	 //IP???﹞??byAddressType??0?㊣???∫
		NET_DVR_DDNS_ADDRESS struDdnsAddr;	//DDNS???﹞??byAddressType??1?㊣???∫
	}unionAddr;
	union
	{
		BYTE byRes[128];
		NET_DVR_PLAY_BACK_BY_TIME struPlayBackByTime; //∼??㊣????﹞??㊣????????
		BYTE sFileName[128];    //∼?????????﹞??㊣????????
	}unionPlayBackInfo;
	NET_DVR_PU_STREAM_URL struURL;	//???‾URL??byAddressType??2?㊣???∫
	BYTE    sStreamPassword[STREAM_PASSWD_LEN];  //???‾????????,?豕????????????
	BYTE    byRes2[116];
}NET_DVR_MATRIX_DEC_REMOTE_PLAY_V50, *LPNET_DVR_MATRIX_DEC_REMOTE_PLAY_V50;

typedef struct tagNET_DVR_DISPLAY_EFFECT_CFG
{
	DWORD dwSize;
	NET_DVR_COLOR  struColor;      //?????角??????/
	BYTE byRes[32];
}NET_DVR_DISPLAY_EFFECT_CFG, *LPNET_DVR_DISPLAY_EFFECT_CFG;

//????????℅???
typedef struct tagNET_DVR_TRUNK_USE_STATE
{
	DWORD        dwSize;
	DWORD        dwTrunkID;    //????ID
	WORD        wReserveUserID;    //?∟???????∫ID?? 1~256 ??0㊣赤????﹞??∟??
	BYTE        byStatus;  //1-??????2-??????3-???? */
	BYTE        byRes1;
	BYTE          byUserId[256];  //??℅谷??㊣那㊣赤?????∫ID??????℅谷????????㊣赤????﹞???????????????byUserID[0] ??????1??㊣赤?????∫ID??0?????∫??????????byUserID[0] ??????0㊣赤?????∫ID??0?????∫????????????????
	BYTE           byRes2[64];
}NET_DVR_TRUNK_USE_STATE, *LPNET_DVR_TRUNK_USE_STATE;


//PTZ????????
typedef struct tagNET_DVR_PTZ_CTRL_INFO
{
	DWORD    dwSize;
	DWORD    dwCtrlDelayTime;        //PTZ?????????㊣??????PTZ?????車??dwCtrlDelayTime?㊣??????????????㊣??辰????㊣????∫??????℅‾???∫??????????
	BYTE    byRes[64];
}NET_DVR_PTZ_CTRL_INFO, *LPNET_DVR_PTZ_CTRL_INFO;

//?????﹞??
#define        MAX_MATRIX_CASCADE        32
typedef struct tagNET_DVR_MATRIX_ROUTE_INFO
{
	DWORD        dwSize;
	DWORD           dwCamNo;
	DWORD       dwMonNo;
	DWORD        dwSubWin;
	DWORD        dwUserId;
	DWORD       dwTrunkId[MAX_MATRIX_CASCADE/*32*/];//trunkId???㊣??????????????1??32????CAM????????trunkId[0]㊣赤??????????????trunkId[1]㊣赤????????????, trunkId[i] = 0 ㊣赤????????
	BYTE        byRes[64];      /* ?∟?? */
}NET_DVR_MATRIX_ROUTE_INFO, *LPNET_DVR_MATRIX_ROUTE_INFO;


//????PTZ℅???
typedef struct tagNET_DVR_PTZ_STATUS
{
	DWORD        dwSize;
	DWORD        dwUserID;    //1~256??0 ㊣赤???????∫
	DWORD       dwStatus;      // PTZ????℅???0-??????1-????
	DWORD        dwRestTime;  //???角?㊣??
	BYTE        byRes[64];
}NET_DVR_PTZ_STATUS, *LPNET_DVR_PTZ_STATUS;

typedef struct tagNET_DVR_SAFETYCABIN_WORK_MODE
{
	DWORD dwSize;
	BYTE  byWorkMode; //?∟℅‾??????0-????????????1-??????????
	BYTE  byFaintToUnlock; //????㊣“?????“?㊣???車??????????????0-﹞???1-??
	BYTE  byOvertimeToUnlock;  //???????㊣?車????∼?????﹞???????????0-﹞???1-??
	BYTE  byRes[13];
}NET_DVR_SAFETYCABIN_WORK_MODE, *LPNET_DVR_SAFETYCABIN_WORK_MODE;

typedef struct tagNET_DVR_SAFETYCABIN_PERSON_SIGNAL_CFG
{
	DWORD dwSize;
	BYTE  bySensorType; //?????‾?角????0-?足??????????1-???㊣?????‾
	BYTE  bySensitivity; //?????‾????????﹞??∫??0-100%
	BYTE  byDevUseTimeout; //﹞??∟?????????㊣?㊣??????????﹞?,﹞??∫??5-30?????????㊣15min,???㊣?車?“????﹞??“??????㊣“??
	BYTE  byRes1;
	WORD  wCurtainDelayTime; //???㊣?????‾???????㊣?㊣??????????????﹞??∫??0-10
	WORD  wCurtainResponseTime; //???㊣??℅???㊣????????‾?足???㊣??????????????﹞??∫??0-300
	WORD  wFaintToEmergencyTime; //?????????迆?∫?㊣??????????????﹞??∫??10-300
	BYTE  byFollowDetectorSensitivity;  //?????足???谷??????﹞??∫??0-100%
	BYTE  byManyPersonSensitivity;    //?角???足???谷??????﹞??∫??0-100%
	BYTE  byRes2[28];  //㊣???
}NET_DVR_SAFETYCABIN_PERSON_SIGNAL_CFG, *LPNET_DVR_SAFETYCABIN_PERSON_SIGNAL_CFG;

typedef struct tagNET_DVR_ETHERNET_IPV6_COND
{
	DWORD        dwSize;
	BYTE  byMACAddr[MACADDR_LEN]; //???“?????赤???﹞
	BYTE  byRes[64];      //㊣???
}NET_DVR_ETHERNET_IPV6_COND, *LPNET_DVR_ETHERNET_IPV6_COND;

typedef struct tagNET_DVR_ETHERNET_IPV6_CFG
{
	DWORD        dwSize;
	BYTE  byState; //IPv6℅?????0-?﹞??﹞?????1-℅????豕??
	BYTE  byRes1[3];
	BYTE  byIPv6[MAX_IPV6_LEN]; //IPv6???﹞
	BYTE  byRes[64];      //㊣???
}NET_DVR_ETHERNET_IPV6_CFG, *LPNET_DVR_ETHERNET_IPV6_CFG;

typedef struct
{
	BYTE byHour;//0~24
	BYTE byMinute;//0~60
	BYTE bySecond;//0~60
	BYTE byRes;
	WORD wMilliSecond; //0~1000
	BYTE byRes1[2];
}NET_DVR_DAYTIME, *LPNET_DVR_DAYTIME;

typedef struct
{
	NET_DVR_DAYTIME  struStartTime; //?????㊣??
	NET_DVR_DAYTIME  struStopTime; //?芍???㊣??
}NET_DVR_SCHEDULE_DAYTIME, *LPNET_DVR_SCHEDULE_DAYTIME;

typedef struct
{
	BYTE byObjectSize;//??㊣?????(0~100)
	BYTE byMotionSensitive; /*?????足???谷????, 0 - 5,???????谷??,0xff??㊣?*/
	BYTE byRes[6];
}NET_DVR_DNMODE, *LPNET_DVR_DNMODE;

typedef struct
{
	BYTE byAreaNo;//???辰㊣角??(IPC- 1~8)
	BYTE byRes[3];
	NET_VCA_RECT struRect;//???????辰??℅?㊣那????(????) size = 16;
	NET_DVR_DNMODE  struDayNightDisable;//??㊣?????
	NET_DVR_DNMODE  struDayModeParam;//∼℅?足????
	NET_DVR_DNMODE  struNightModeParam;//???赤????
	BYTE byRes1[8];
}NET_DVR_MOTION_MULTI_AREAPARAM, *LPNET_DVR_MOTION_MULTI_AREAPARAM;

typedef struct
{
	BYTE byDayNightCtrl;//???????? 0~??㊣?,1~℅???????,2~?“?㊣????(??????㊣?)
	BYTE byAllMotionSensitive; /*?????足???谷????, 0 - 5,???????谷??,0xff??㊣??????????辰???谷????﹞??∫*/
	BYTE byRes[2];//
	NET_DVR_SCHEDULE_DAYTIME struScheduleTime;//?????㊣??  16
	NET_DVR_MOTION_MULTI_AREAPARAM struMotionMultiAreaParam[MAX_MULTI_AREA_NUM];//℅??車?∫??24?????辰
	BYTE byRes1[60];
}NET_DVR_MOTION_MULTI_AREA, *LPNET_DVR_MOTION_MULTI_AREA; //1328

typedef struct
{
	BYTE byMotionScope[64][96];        /*?足?????辰,0-96??,㊣赤??64??,????96*64?????那?谷,???∼???∫????22*18,??1㊣赤?????????足?????辰,0-㊣赤??????*/
	BYTE byMotionSensitive;            /*?????足???谷????, 0 - 5,???????谷??,0xff??㊣?*/
	BYTE byRes[3];
}NET_DVR_MOTION_SINGLE_AREA, *LPNET_DVR_MOTION_SINGLE_AREA;

typedef struct
{
	NET_DVR_MOTION_SINGLE_AREA  struMotionSingleArea; //???“?????????????辰?豕
	NET_DVR_MOTION_MULTI_AREA struMotionMultiArea; //℅“???????????角???辰?豕??    
}NET_DVR_MOTION_MODE_PARAM, *LPNET_DVR_MOTION_MODE_PARAM;

typedef struct
{
	NET_DVR_MOTION_MODE_PARAM  struMotionMode; //(5.1.0????)
	BYTE byEnableHandleMotion;        /* ??﹞????赤?????足?? 0??﹞? 1????*/
	BYTE byEnableDisplay;    /*?????????足????????????0-﹞???1-??*/
	BYTE byConfigurationMode; //0~???“,1~℅“??(5.1.0????)
	BYTE byKeyingEnable; //?????邦???????足?? 0-????????1-????
						 /* ?足?????赤﹞??? */
	DWORD   dwHandleType;        //?足?????赤,?足?????赤﹞?????"?辰"?芍??   
								 /*0x00: ???足??*/
								 /*0x01: ?角???‾??????*/
								 /*0x02: ?迄??????*/
								 /*0x04: ????????*/
								 /*0x08: ??﹞?㊣“??????*/
								 /*0x10: ??﹞?JPRG℅?????????Email*/
								 /*0x20: ?????迄??㊣“???‾????*/
								 /*0x40: ??????℅?????(???∼????PCNVR?∫??)*/
								 /*0x200: ℅?????????FTP*/
								 /*0x1000: ℅???????????*/
	DWORD   dwMaxRelAlarmOutChanNum; //??﹞???㊣“???????“?????“??????℅??車?∫??????
	DWORD   dwRelAlarmOut[MAX_ALARMOUT_V40]; //??????﹞???㊣“??????????∼???㊣赤??,????????????????????㊣那0 - dwRelAlarmOut -1???∫??????????????0xffffffff,?辰?車?????∫
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30]; /*??﹞??㊣??*/
																	/*??﹞????????“??*/
	DWORD     dwMaxRecordChanNum;   //?豕㊣??∫????℅??車?????????“????-????
	DWORD     dwRelRecordChan[MAX_CHANNUM_V40];     /* ??????﹞??????“????∼???㊣赤??,????????????????????㊣那0 - dwRelRecordChan -1???∫??????????????0xffffffff,?辰?車?????∫*/
	BYTE  byDiscardFalseAlarm; //???????車㊣“ 0-???∫??1-????????2-????
	BYTE  byRes[127]; //㊣???℅???
}NET_DVR_MOTION_V40, *LPNET_DVR_MOTION_V40;

typedef struct
{
	DWORD dwEnableHideAlarm;                /* ??﹞?????????㊣“????0-﹞???1-???谷??????2-???谷??????3-???谷????*/
	WORD wHideAlarmAreaTopLeftX;            /* ???????辰??x℅?㊣那 */
	WORD wHideAlarmAreaTopLeftY;            /* ???????辰??y℅?㊣那 */
	WORD wHideAlarmAreaWidth;                /* ???????辰???赤 */
	WORD wHideAlarmAreaHeight;                /*???????辰????*/
											  /* ???????∫??﹞?㊣“?????? */
	DWORD   dwHandleType;        //?足?????赤,?足?????赤﹞?????"?辰"?芍??   
								 /*0x00: ???足??*/
								 /*0x01: ?角???‾??????*/
								 /*0x02: ?迄??????*/
								 /*0x04: ????????*/
								 /*0x08: ??﹞?㊣“??????*/
								 /*0x10: ??﹞?JPRG℅?????????Email*/
								 /*0x20: ?????迄??㊣“???‾????*/
								 /*0x40: ??????℅?????(???∼????PCNVR?∫??)*/
								 /*0x200: ℅?????????FTP*/
								 /*0x1000:℅???????????*/
	DWORD   dwMaxRelAlarmOutChanNum; //??﹞???㊣“???????“?????“??????℅??車?∫??????
	DWORD   dwRelAlarmOut[MAX_ALARMOUT_V40]; /*??﹞?㊣“??????????∼???㊣赤??,????????????????????㊣那0 - dwRelAlarmOut -1???∫??????????????0xffffffff,?辰?車?????∫*/
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30]; /*??﹞??㊣??*/
	BYTE  byRes[64]; //㊣???
}NET_DVR_HIDEALARM_V40, *LPNET_DVR_HIDEALARM_V40; //????㊣“??

typedef struct
{
	DWORD dwEnableVILostAlarm;                /* ??﹞????????????∫㊣“?? ,0-﹞?,1-??*/
											  /* ???????∫??﹞?㊣“?????? */
	DWORD   dwHandleType;        //?足?????赤,?足?????赤﹞?????"?辰"?芍??   
								 /*0x00: ???足??*/
								 /*0x01: ?角???‾??????*/
								 /*0x02: ?迄??????*/
								 /*0x04: ????????*/
								 /*0x08: ??﹞?㊣“??????*/
								 /*0x10: ??﹞?JPRG℅?????????Email*/
								 /*0x20: ?????迄??㊣“???‾????*/
								 /*0x40: ??????℅?????(???∼????PCNVR?∫??)*/
								 /*0x200: ℅?????????FTP*/
								 /*0x1000:℅???????????*/
	DWORD   dwMaxRelAlarmOutChanNum; //??﹞???㊣“???????“?????“??????℅??車?∫??????
	DWORD   dwRelAlarmOut[MAX_ALARMOUT_V40]; /*??﹞?㊣“??????????∼???㊣赤??,????????????????????㊣那0 - dwRelAlarmOut -1???∫??????????????0xffffffff,?辰?車?????∫*/
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30]; /*??﹞??㊣??*/
	BYTE    byVILostAlarmThreshold;    /*???????∫㊣“?????????㊣???????????????????????∫??????0-99*/
	BYTE    byRes[63]; //㊣???
}NET_DVR_VILOST_V40, *LPNET_DVR_VILOST_V40;    //???????∫㊣“??

typedef struct
{
	NET_DVR_COLOR      struColor[MAX_TIMESEGMENT_V30];/*???車????(?????????∫??????????㊣???)*/
	NET_DVR_SCHEDTIME  struHandleTime[MAX_TIMESEGMENT_V30];/*???赤?㊣????(㊣???)*/
}NET_DVR_VICOLOR, *LPNET_DVR_VICOLOR;

typedef struct
{
	DWORD  dwSize;
	BYTE  sChanName[NAME_LEN];
	DWORD  dwVideoFormat;    /* ???? ???????? 1-NTSC 2-PAL  */
	NET_DVR_VICOLOR struViColor;//    ????????∼??㊣?????豕??
								//?????“????
	DWORD  dwShowChanName; // ?∟???????車????﹞??????“??????,0-??????,1-????
	WORD    wShowNameTopLeftX;                /* ?“????????????????x℅?㊣那 */
	WORD    wShowNameTopLeftY;                /* ?“????????????????y℅?㊣那 */
											  //????????
	DWORD  dwEnableHide;        /* ??﹞????????? ,0-﹞?,1-??*/
	NET_DVR_SHELTER struShelter[MAX_SHELTERNUM];
	//OSD
	DWORD  dwShowOsd;// ?∟???????車????﹞?????OSD,0-??????,1-????
	WORD   wOSDTopLeftX;                /* OSD??x℅?㊣那 */
	WORD   wOSDTopLeftY;                /* OSD??y℅?㊣那 */
	BYTE    byOSDType;                    /* OSD?角??(?‾?????那????????) */
										  /* 0: XXXX-XX-XX ?那???? */
										  /* 1: XX-XX-XXXX ?????那 */
										  /* 2: XXXX?那XX??XX?? */
										  /* 3: XX??XX??XXXX?那 */
										  /* 4: XX-XX-XXXX ?????那*/
										  /* 5: XX??XX??XXXX?那 */
										  /*6: xx/xx/xxxx(??/??/?那) */
										  /*7: xxxx/xx/xx(?那/??/??) */
										  /*8: xx/xx/xxxx(??/??/?那)*/
	BYTE    byDispWeek;                /* ??﹞????????? */
	BYTE    byOSDAttrib;                /* OSD????:???‾?????? */
										/* 0: ??????OSD */
										/* 1: ???‾?????? */
										/* 2: ???‾???????? */
										/* 3: ?????‾?????? */
										/* 4: ?????‾???????? */
	BYTE    byHourOSDType;                /* OSD???㊣??:0-24???㊣??,1-12???㊣?? */
	BYTE    byFontSize;      //16*16(??)/8*16(??)??1-32*32(??)/16*32(??)??2-64*64(??)/32*64(??)  3-48*48(??)/24*48(??) 4-24*24(??)/12*24(??) 5-96*96(??)/48*96(??) 6-128*128(??)/64*128(??) 7-80*80(??)/40*80(??) 8-112*112(??)/56*112(??) 0xff-℅?????(adaptive)
	BYTE    byOSDColorType;     //0-?????“??∼℅????1-℅??“??
								/*?㊣????﹞????????迆㊣那?????㊣??????﹞?㊣???????????℅車???????????辰℅?℅?﹞???????
								?????????辰??
								???∫??6??℅?﹞????????????“??NET_DVR_SET_SHOWSTRING_V30/ NET_DVR_GET_SHOWSTRING_V30℅?﹞???????????????NET_DVR_SHOWSTRINGINFO?芍??????℅谷??????0????5????㊣那??????????℅?﹞???﹞???????????????﹞?????
								℅車???????辰??
								???∫??2??℅?﹞????????????“??NET_DVR_SET_SHOWSTRING_V3/ NET_DVR_GET_SHOWSTRING_V30℅?﹞???????????????NET_DVR_SHOWSTRINGINFO?芍??????℅谷??????6????7????㊣那??????????℅?﹞???﹞???????????????﹞?????
								*/
	BYTE    byAlignment;//????﹞??? 0-℅???????1-??????, 2-℅車??????3-?迆㊣那??????4-??????????(∼邦??????℅?﹞????㊣?????∼㊣那?????迄??OSD℅?﹞?)??5-????℅車????(∼邦??????℅?﹞????㊣?????∼㊣那?????迄??OSD℅?﹞?)
	BYTE    byOSDMilliSecondEnable;//?????????㊣???∫????????0~??????, 1-????
	NET_DVR_VILOST_V40 struVILost;  //???????????∫㊣“???“?∫??℅谷??
	NET_DVR_VILOST_V40 struAULost;  /*???????????∫㊣“???“?∫??℅谷??*/
	NET_DVR_MOTION_V40 struMotion;  //?????足??㊣“???“?∫??℅谷??
	NET_DVR_HIDEALARM_V40 struHideAlarm;  //????㊣“???“?∫??℅谷??
	NET_DVR_RGB_COLOR    struOsdColor;//OSD????
	DWORD dwBoundary; //㊣???????℅車???????????????∼?迆㊣那??????㊣???????0-㊣赤????????????????????;???迆㊣那??????????????????℅?﹞??????“﹞??∫????0,1,2??
	NET_DVR_RGB_COLOR struOsdBkColor; //℅??“??OSD㊣??∼??
	BYTE    byOSDBkColorMode; //OSD㊣??∼????????0-??????1-℅??“??OSD㊣??∼??
	BYTE    byUpDownBoundary; //????℅???㊣?????????????????℅?﹞??????“﹞??∫????0,1,2??,?迆㊣那?????????∫??byAlignment=3??℅??????∫???“??dwBoundary????㊣?????????.byAlignment??????3???谷?????? byUpDownBoundary/byLeftRightBoundary?????????車??dwBoundary???????迆?∫
	BYTE    byLeftRightBoundary; //℅車??℅???㊣?????????????????℅?﹞??????“﹞??∫????0,1,2??, ?迆㊣那?????????∫??byAlignment=3??℅??????∫???“??dwBoundary????㊣?????????.byAlignment??????3???谷?????? byUpDownBoundary/byLeftRightBoundary?????????車??dwBoundary???????迆?∫
	BYTE    byRes[113];
}NET_DVR_PICCFG_V40, *LPNET_DVR_PICCFG_V40;

typedef struct  //
{
	DWORD                   dwSize;
	BYTE   byWorkType;// 0-℅?????, 1-?“?㊣????
	BYTE   byRes[3];
	//?“?㊣????????
	NET_DVR_SCHEDULE_DAYTIME  struDayNightScheduleTime;//?????“?㊣????????(∼℅?足?㊣??)
	NET_DVR_CAMERAPARAMCFG_EX   struSelfAdaptiveParam; //℅?????????
	NET_DVR_CAMERAPARAMCFG_EX   struDayIspAdvanceParam;//∼℅?足????
	NET_DVR_CAMERAPARAMCFG_EX   struNightIspAdvanceParam;//???赤????
	BYTE   byRes1[512];
}NET_DVR_ISP_CAMERAPARAMCFG, *LPNET_DVR_ISP_CAMERAPARAMCFG;

typedef struct
{
	DWORD       dwSize;
	BYTE        byIrLampServer;//?足?????豕?? 0????????1??????
	BYTE        bytelnetServer;//telnet?豕?? 0????????1??????
	BYTE        byABFServer;//ABF?豕?? 0????????1??????
	BYTE        byEnableLEDStatus;//℅????????????? 0????????1??????
	BYTE        byEnableAutoDefog;//℅??????赤???? 0????????1??????
	BYTE        byEnableSupplementLight;//??????????0-??????1-????
	BYTE        byEnableDeicing;//??㊣迄???? 0-??㊣???1-????
	BYTE        byEnableVisibleMovementPower;// ???????迆?????????? 0-??㊣???1-????
	BYTE        byEnableThermalMovementPower;// ???????迆?????????? 0-??㊣???1-????
	BYTE        byEnablePtzPower;// ???“???????? 0-??㊣???1-????
	BYTE        byPowerSavingControl;// ?????????? 0-㊣??? 1-???????? 2-?????????? ???????????? ???????迆???????????????迆???????????“?????????迆?∫
	BYTE        byRes[245];
}NET_DVR_DEVSERVER_CFG, *LPNET_DVR_DEVSERVER_CFG;

typedef struct tagNET_DVR_GBT28181_ACCESS_CFG
{
	DWORD       dwSize;
	BYTE       byEnable;//28181???谷???? 0-??㊣? 1-????
	BYTE       byTransProtocol;//???????谷:0-UDP??1-TCP??????0-UDP
	WORD       wLocalSipPort;//1024-65535(IPC?豕㊣???)
	char       szServerID[MAX_SERVERID_LEN];//﹞????‾ID??64℅???℅?﹞???????????℅?
	char       szServerDomain[MAX_SIPSERVER_ADDRESS_LEN];// ﹞????‾?辰
	char       szSipServerAddress[MAX_SIPSERVER_ADDRESS_LEN];// SIP﹞????‾???﹞?∫???辰????IP???﹞
	WORD       wServerSipPort;//﹞????‾SIP??????1024-65535
	BYTE       byProtocolVersion;//???谷∼?㊣? 0-GB/T28181-2011(???∫??UDP),1-GB/T28181-2015(?∫??TCP,UDP),2-GB/T28181-2016
	BYTE        byTCPConnectMod; //TCP??????????????TCP???????谷?㊣???∫??0-???∫??1-?‾????????2-㊣???????
	char       szSipUserName[MAX_SERVERNAME_LEN];//SIP???∫??????64℅???℅?﹞???(????﹞?SIP???????車IPC﹞????㊣????)
	char       szSipAuthenticateID[MAX_AUTHENTICATEID_LEN];//SIP???∫???∟ID??64℅???℅?﹞???
	char       szSipAuthenticatePasswd[MAX_AUTHENTICATEPASSWD_LEN];//SIP???∫???∟??????32℅???℅?﹞???(IPC?豕㊣?℅??芍??SIP﹞????‾?㊣????)
	DWORD      dwRegisterValid;//℅??芍???∫????????????????3600??
	BYTE       byHeartbeatInterval;//??????????????????????10????
	BYTE       byMaxHeartbeatTimeOut;//℅??車???????㊣??????????3????
	BYTE       byStreamType;// ???‾?角??0???‾???‾??1??℅????‾??2??3???‾
	BYTE          byDeviceStatus; //?豕㊣???﹞?????℅?????0-㊣?????1-??????2-????
	DWORD      dwRegisterInterval;//℅??芍????:℅??芍?∫∼??車????℅??芍???㊣??????,﹞??∫60-600s??????60s
	DWORD      dwAutoAllocChannelID; //??﹞?℅???﹞????“??ID,∼???㊣赤????0????????????1??℅???﹞?????bit1-℅???﹞???㊣角???“??ID,bit2-℅???﹞???㊣“???????“??,bit3-℅???﹞????????“??ID 
	char       szDeviceDomain[MAX_SIPSERVER_ADDRESS_LEN];// ?豕㊣??辰
	BYTE       byRes4[116];
}NET_DVR_GBT28181_ACCESS_CFG, *LPNET_DVR_GBT28181_ACCESS_CFG;

//GBT28181???谷???豕㊣?㊣角???“??????
typedef struct tagNET_DVR_GBT28181_CHANINFO_CFG
{
	DWORD                   dwSize;
	char    szVideoChannelNumID[MAX_COMPRESSIONID_LEN];//?豕㊣??????“??㊣角??ID??64℅???℅?﹞???????????℅?
	BYTE             byRes[256];
}NET_DVR_GBT28181_CHANINFO_CFG, *LPNET_DVR_GBT28181_CHANINFO_CFG;

//GBT28181???谷??㊣“???????“?????? ?????芍??
typedef struct tagNET_DVR_ALARMIN_INFO
{
	NET_DVR_STREAM_INFO struStreamInfo;
	DWORD  dwAlarmInChannel;//㊣“???????“????
	BYTE  byRes[32]; //㊣???
}NET_DVR_ALARMIN_INFO, *LPNET_DVR_ALARMIN_INFO;

//GBT28181???谷??㊣“???????“?????? ?????芍??
typedef struct tagNET_DVR_GBT28181_ALARMINCFG
{
	DWORD                   dwSize;
	char    szAlarmInNumID[MAX_COMPRESSIONID_LEN];//?豕㊣?㊣“??????㊣角??ID?“?????﹞㊣“??????????????20℅???℅?﹞???????????℅?
	BYTE             byRes[256];
}NET_DVR_GBT28181_ALARMINCFG, *LPNET_DVR_GBT28181_ALARMINCFG;

typedef struct tagNET_DVR_CAMERA_SETUPCFG
{
	DWORD dwSize;
	WORD  wSetupHeight; //???豕????[0,20]?????????℅
	BYTE  byLensType; //???﹞???角?角????0-????,1-8mm,2-12mm,3-16mm,4-25mm,5-35mm,6-50mm,7-4mm,8-6mm
	BYTE  bySetupHeightUnit;// ???豕????????0??M,1~CM
	DWORD dwSceneDis; //??????㊣??????????角?迆???????????角?????????????℅
	float fPitchAngle;//?角?迆????????[-180??, 180??],
	float fInclineAngle;//?角?迆???㊣????[-180??,180??]
	float fRotateAngle;//?角?迆??℅?????[-180??,180??]
	WORD  wVideoDetCoefficient; //????????????[0,300](3.6????)
	BYTE  byErectMethod; //???豕﹞???0-??℅∼??1-?角℅∼(3.6????)
	BYTE  byCameraViewAngle;//?????迆∼?℅∼???∼????(0-???㊣??1-???㊣??????0-???㊣)
	DWORD dwHorizontalDistance;//?????迆?????????????角????﹞??∫1-1000??????30??????cm??℅????????迆?????????㊣?㊣???????∫
	BYTE  byDetailLensType;//﹞??∫1-100??????28??????0.1mm
	BYTE  byRes[3];
	float fHorFieldAngle; //?角?迆??????????????[0??, 360??]?“℅????迆??
	float fVerFieldAngle; //?角?迆???㊣??????????[0??, 360??]?“℅????迆??,????﹞??∫-90??-90??
	float fLableSetupHeight; //㊣那???????豕?角?迆??????[0,100]?????????℅
	float fMaxViewRadius;//℅??車????∼???,0~10000.00?℅??????5000?℅.
	BYTE  byRes1[16];
}NET_DVR_CAMERA_SETUPCFG, *LPNET_DVR_CAMERA_SETUPCFG;

//???????????????芍????
typedef struct tagNET_DVR_SCHEDDATE
{
	BYTE   byStartMonth;   //?????“????
	BYTE   byStartDay;     //?????“????
	BYTE   byStopMonth;    //?芍???“????
	BYTE   byStopDay;      //?芍???“????
}NET_DVR_SCHEDDATE, *LPNET_DVR_SCHEDDATE;

//?㊣??????????
typedef struct tagNET_DVR_OUTPUT_SCHEDULE
{
	NET_DVR_SCHEDTIME struTime;  //?㊣????
	BYTE byState;                //0“C??㊣?, 1“C????
	BYTE byRes[11];              //㊣???
} NET_DVR_OUTPUT_SCHEDULE, *LPNET_DVR_OUTPUT_SCHEDULE;

//?????㊣?????????辰????
typedef struct tagNET_DVR_ONE_OUTPUT_SCHEDULE_RULE
{
	BYTE                     byEnable;    //??﹞????????辰,0-﹞?,1-??
	BYTE                     byRes1[3];   //㊣???
	NET_DVR_SCHEDDATE        struDate;    //????????
	NET_DVR_OUTPUT_SCHEDULE  struOutputSchedule[MAX_TIMESEGMENT_V30];  //℅??角?∫??8???㊣???????㊣??????
	BYTE                     byRes2[16];  //㊣???
}NET_DVR_ONE_OUTPUT_SCHEDULE_RULE, *LPNET_DVR_ONE_OUTPUT_SCHEDULE_RULE;

//?㊣?????????辰????
typedef struct tagNET_DVR_OUTPUT_SCHEDULE_RULECFG
{
	DWORD  dwSize; //?芍?????車??
	NET_DVR_ONE_OUTPUT_SCHEDULE_RULE struOutputRule[MAX_RULE_NUM]; //℅??角?∫??8???????????????辰????
	BYTE   byRes[64];  //㊣???
}NET_DVR_OUTPUT_SCHEDULE_RULECFG, *LPNET_DVR_OUTPUT_SCHEDULE_RULECFG;

//???“????㊣“??????
typedef struct tagNET_DVR_TPS_ALARMCFG
{
	DWORD dwSize;
	BYTE byEnable; //??﹞????????“????㊣“??????
	BYTE byRes1[3];    //
	DWORD dwInterval;//?????????㊣???“??????﹞?????
	BYTE  byRes[248];
}NET_DVR_TPS_ALARMCFG, *LPNET_DVR_TPS_ALARMCFG;

typedef struct tagNET_DVR_DOWNLOAD_ALARM_RECORD_COND
{
	DWORD dwSize;
	WORD  wAlarmRecordID;    //㊣“??????ID(?????谷???????????㊣byResultType??2?㊣???∫)
	BYTE  byRes[130];
}NET_DVR_DOWNLOAD_ALARM_RECORD_COND, *LPNET_DVR_DOWNLOAD_ALARM_RECORD_COND;

typedef struct tagNET_DVR_CABINET_AlARM_PARAMCFG
{
	char  sCabinetName[NAME_LEN];
	BYTE  byAssociateIO;//1-4??0xff?? ????1-4㊣赤????????IO?“??????0xff㊣赤????????
	BYTE  byCabinetState;//0~??????,1~??????
	BYTE  byAlarmIntervalTime;//????﹞??∫1-60??????????
	BYTE  byRes1[25];
}NET_DVR_CABINET_AlARM_PARAMCFG, *LPNET_DVR_CABINET_AlARM_PARAMCFG;

typedef struct tagNET_DVR_CABINET_CFG
{
	DWORD dwSize;
	BYTE  byEnable;//0~????????1??????
	BYTE  byRes[3];
	NET_DVR_CABINET_AlARM_PARAMCFG struCabinetCfg[MAX_CABINET_COUNT];
	BYTE  byRes1[84];
} NET_DVR_CABINET_CFG, *LPNET_DVR_CABINET_CFG;

typedef  struct  tagNET_ITS_GATE_LANE_CFG
{
	BYTE      byGateSiteID[MAX_ID_LEN];    //??????㊣角??
	BYTE      byGateInfo[MAX_ID_LEN];      //???????????豕??
	BYTE      byLaneName[NAME_LEN];     //????????
	BYTE      byValid;              //??﹞????? 0 ㊣赤??????????1㊣赤??????
	BYTE      byCamLaneId;     //?????角?迆??????1??16?“?角?迆?????????????????????????????角????
	WORD      wLaneid;            //??????1??32?“?‾?????????????????? ??????????
	BYTE      byRelativeIoNum;         //??????????????????????㊣角??      
	BYTE      byDirection;          //﹞??辰㊣角??;  0 -???? 1 ????  2 ???? 3 ???辰
	BYTE      byLprMode; //????﹞???????0 ??????1 ??????????2 ∼℅??????
	BYTE       byCardMode; //?“??﹞???????0 ??????1 ??????????2 ∼℅?????? 
	BYTE       byGateLaneMode;//??????﹞??????????? 0-?????? 1-????????????﹞???2 ???????“????﹞?//?? 3-?????辰?“?????????????辰﹞??? 4-???????“?????㊣?????辰﹞??? 5-??????
							  //2013-11-19 ????????
	BYTE      byCharge;//??﹞???﹞? 0-????﹞???1-??﹞?
	BYTE      byChargeMode;//??﹞??角?? 0-??????﹞???1-?“????﹞?
	BYTE      byRes1;
	BYTE      byLedRelativeIndex[MAX_INDEX_LED];//LED ?‾?? (1~255) ??????????0㊣赤?????∫?????????車????????
	BYTE      byGateRelativeIndex;//???????????迆?角???‾??
	BYTE      byFarRrRelativeIndex;// ???角?????“?‾?角???‾??
	BYTE      byRes[82]; //?∟??
}NET_ITS_GATE_LANE_CFG, *LPNET_ITS_GATE_LANE_CFG;

typedef    struct  tagNET_ITS_IPC_CHAN_LANE_CFG
{
	DWORD     dwSize;
	BYTE      byIpcType;  //0-????1-????℅?????2-????℅?????3-?角???角?迆
	BYTE      byRes[135];
	NET_ITS_GATE_LANE_CFG  struGateLane[4]; //?????????芍????
}NET_ITS_IPC_CHAN_LANE_CFG, *LPNET_ITS_IPC_CHAN_LANE_CFG;

//?豕㊣?????????
typedef    struct    tagNET_ITS_REMOTE_COMMAND
{
	WORD            wLaneid; //??????1??32?“?‾????????????????????
	BYTE             byCamLaneId;    //?????角?迆??????1??16?“?角?迆?????????????????????????????角????
	BYTE            byRes;     //?∟??
	DWORD           dwCode;       //?邦???? 0x0 ???? 0x1 ?????????邦??????
	BYTE            byRes1[128];
}NET_ITS_REMOTE_COMMAND, *LPNET_ITS_REMOTE_COMMAND;

typedef  struct    tagNET_ITS_REMOTE_CONTROL_
{
	DWORD          dwSize;
	NET_ITS_REMOTE_COMMAND    struRemoteCommand;   //?????邦???芍??
}NET_ITS_REMOTE_CONTROL, *LPNET_ITS_REMOTE_CONTROL;

//?∟?????????“??℅???
typedef struct tagNET_ITS_ECT_CHANNELSTATE
{
	DWORD dwSize;
	BYTE  byRecordStatic; //?“????﹞???????,0-??????,1-????
	BYTE  bySignalStatic; //??????????℅???,0-????,1-???????∫
	BYTE  byHardwareStatic;//?“??????℅???,0-????,1-?足??,????DSP????
	BYTE  byChannelArmState; //????IPC????﹞?℅???
	DWORD dwChannel; //?“????
	DWORD dwBitRate;//????????
	DWORD dwLinkNum;//???∫????????????
	NET_DVR_IPADDR struClientIP[MAX_LINK];//???∫????IP???﹞
	DWORD dwIPLinkNum;//???????“????IP??????????㊣赤??IP?????㊣?∼????????
	BYTE  byExceedMaxLink;    // ??﹞???????128?﹞?????? 0 - ??????, 1-????     
	BYTE  byRes[139];       // ㊣???℅???    
}NET_ITS_ECT_CHANNELSTATE, *LPNET_ITS_ECT_CHANNELSTATE;

//??????
typedef struct tagNET_DVR_PARK_EXTERNAL_SUBINFO
{
	BYTE   byEnable; //0 ?? ?????? 1 ?? ????
	BYTE   byFlicker;//0 ?? ?????? 1 ?? ????
	BYTE   byIOState;//0 ?? ?????? 1 ?? ?????? (?????????∫)
	BYTE   byLampColor;// 0- ?? 1-?足   2-??  3-??  4-?? 5-?﹞?足  6-?角  7-∼℅?? (?????????∫)
	BYTE   byRes[4];
}NET_DVR_PARK_EXTERNAL_SUBINFO, *LPNET_DVR_PARK_EXTERNAL_SUBINFO;

typedef struct tagNET_DVR_PARK_INLAY_SUBINFO
{
	BYTE   byEnable; //0???????? 1 ??????
	BYTE   byFlicker;//0???????? 1 ??????
	BYTE   byLampColor;//0-?? 1-?足 2-?? 3-?? 4-?? 5-?﹞?足 6-?角 7-∼℅?? (?????????∫) 
	BYTE   byRes[21];
}NET_DVR_PARK_INLAY_SUBINFO, *LPNET_DVR_PARK_INLAY_SUBINFO;

typedef struct tagNET_DVR_PARKINFO
{
	NET_DVR_PARK_EXTERNAL_SUBINFO   struNormalParkIOState;//????io????℅???
	NET_DVR_PARK_EXTERNAL_SUBINFO   struNormalNoParkIOState;//????io????℅???
	NET_DVR_PARK_EXTERNAL_SUBINFO   struSpecialParkIOState;//????????????io????℅???
	NET_DVR_PARK_EXTERNAL_SUBINFO   struSpecialNoParkIOState;//????????????io????℅???
	BYTE   byRes[32];
}NET_DVR_PARKINFO, *LPNET_DVR_PARKINFO;

typedef struct tagNET_DVR_EXTERNAL_LAMP_CTRL_MODE
{
	NET_DVR_PARKINFO  struParkInfo[MAX_PARKING_NUM];/*?????????谷???????????????????“??℅??車4?????? (??℅車???????? ??℅谷0??3)*/
	BYTE   byRes[32];
}NET_DVR_EXTERNAL_LAMP_CTRL_MODE, *LPNET_DVR_EXTERNAL_LAMP_CTRL_MODE;

typedef struct tagNET_DVR_INLAY_LAMP_CTRL_MODE
{
	NET_DVR_PARK_INLAY_SUBINFO  struLampStateCtrl[MAX_PARKING_STATUS];
	BYTE   byRes[96];
}NET_DVR_INLAY_LAMP_CTRL_MODE, *LPNET_DVR_INLAY_LAMP_CTRL_MODE;

typedef struct tagNET_DVR_LAMP_INFO //8
{
	BYTE   byEnable; //0???????? 1 ??????
	BYTE   byFlicker;//0~?????? 1 ??????(??????????????)
	BYTE   byLampColor;//0- ?? 1-?足 2-?? 3-?? 4-?? 5-?﹞?足 6-?角 7-∼℅?? (??????????????)
	BYTE   byRes[5];
}NET_DVR_LAMP_INFO, *LPNET_DVR_LAMP_INFO;

//??????????????
typedef struct tagNET_DVR_PARKLAMP_CTRL_MODE//size == 72
{
	//????℅??? 0?迆㊣赤??????1?迆㊣赤??????2?迆㊣赤????(??????℅???), 3????????
	NET_DVR_LAMP_INFO  struLampInfo[MAX_PARKING_STATUS/*8*/];
	//???????????“0-??????, 1-??????1, 2-??????2, 3-??????3??
	BYTE   byLampType;
	BYTE   byRes[7];
}NET_DVR_PARKLAMP_CTRL_MODE, *LPNET_DVR_PARKLAMP_CTRL_MODE;

typedef struct tagNET_DVR_LAMP_PARAM //4
{
	BYTE   byEnable; //0???????? 1 ??????
	BYTE   byFlicker;//0~?????? 1 ??????
	BYTE   byLampColor;//0- ?? 1-?足   2-??  3-??  4-?? 5-?﹞?足  6-?角  7-∼℅?? 
	BYTE   byRes[3];
}NET_DVR_LAMP_PARAM, *LPNET_DVR_LAMP_PARAM;

//??????????????
typedef struct tagNET_DVR_EXTERNAL_PARKLAMP //size == 56
{
	//????℅??? 0?迆㊣赤??????1?迆㊣赤??????2?迆㊣赤????(??????℅???), 3????????
	NET_DVR_LAMP_PARAM  struLampParam[MAX_PARKING_STATUS/*8*/];
	//???????????“0-??????, 1-??????1, 2-??????2, 3-??????3??
	BYTE   byLampType;
	BYTE   byRes[7];
}NET_DVR_EXTERNAL_PARKLAMP, *LPNET_DVR_EXTERNAL_PARKLAMP;

/*???????????????????? ???????????芍??℅????? */
typedef struct tagNET_DVR_BUILTIN_PARKLAMP
{
	BYTE   byEnable;     //0???????? 1 ??????
	BYTE   byFlicker;    //0~?????? 1 ??????
	BYTE   byLampColor;  //0- ?? 1-?足 2-?? 3-?? 4-?? 5-?﹞?足 6-?角 7-∼℅?? (?????????∫)  
	BYTE   byRes[5];
}NET_DVR_BUILTIN_PARKLAMP, *LPNET_DVR_BUILTIN_PARKLAMP;

/* ?足???????????芍?? */
typedef struct tagNET_DVR_MIXLAMP_CTRL_MODE
{
	NET_DVR_EXTERNAL_PARKLAMP  struExternalParkLamp[MAX_PARKING_NUM/*4*/];//?????? ∼???????????????﹞????????“??℅??車4?????? (??℅車???????? ??℅谷0??3) 
	NET_DVR_BUILTIN_PARKLAMP  struBuiltInParkLamp[MAX_PARKING_STATUS/*8*/];//?????? ∼???????℅?????﹞???????℅??? 0?迆㊣赤??????1?迆㊣赤??????2?迆㊣赤????(??????℅???), 3????????
}NET_DVR_MIXLAMP_CTRL_MODE, *LPNET_DVR_MIXLAMP_CTRL_MODE;

/* ???????????????????芍?? */
typedef struct tagNET_DVR_SINGLELAMP_CTRL_MODE //??????????????????﹞????????????????㊣?∼????℅???????????℅?????℅????“????>????????>??????℅?????
{
	NET_DVR_PARK_EXTERNAL_SUBINFO   struExternLampStateCtrl[MAX_PARKING_STATUS/*4*/];//?????? ∼???????????????﹞????????“??℅??車4?????? (??℅車???????? ??℅谷0??3)
	BYTE byLampType; /* 1-??????1??2-??????2??3-??????3*/
	BYTE byRes[23];
}NET_DVR_SINGLELAMP_CTRL_MODE, *LPNET_DVR_SINGLELAMP_CTRL_MODE;

typedef union tagNET_DVR_LAMP_CTRL_MODE_UNION
{
	BYTE uLen[288];
	NET_DVR_INLAY_LAMP_CTRL_MODE struInlayLampCtrlMode;/*???????????????芍??*/
	NET_DVR_EXTERNAL_LAMP_CTRL_MODE struExternalLampCtrlMode;/*???????????????芍??*/
	NET_DVR_PARKLAMP_CTRL_MODE struParkLampCtrlMode[MAX_PARKING_NUM/*4*/];/*?????????????????????“??℅??車4?????? (??℅車???????? ??℅谷0??3)  ?㊣?????????????????㊣?辰?迆?∫*/
																		  //?????足???角?迆???????????足???????????“??﹞?????????????????????????????????????℅‾?????????????“????????????????????????℅‾??????????????????
																		  //?足?????????????????????????㊣?∼?角??????℅?????????????℅?????????℅???(????>????????>??????℅???)????????℅???
	NET_DVR_MIXLAMP_CTRL_MODE  struMixLampCtrlMode;
	//??????????????????﹞????????????????㊣?∼????℅???????????℅?????℅????“????>????????>??????℅?????
	NET_DVR_SINGLELAMP_CTRL_MODE struSingleExternalLampCtrlMode;
}NET_DVR_LAMP_CTRL_MODE_UNION, *LPNET_DVR_LAMP_CTRL_MODE_UNION;/*????????????????*/

typedef struct tagNET_DVR_LAMP_CTRL_INFO
{
	DWORD     dwSize;
	BYTE      byLampCtrlMode;/*??????????1?迆㊣赤??????,2?迆㊣赤??????,3?迆㊣赤????????,4?迆㊣赤?足?????????“????????℅???????????????),5-?迆㊣赤????????????*/
	BYTE      byCtrlChannelIndex;/*?????????“????(33~48)*/
	BYTE      byRes[2];
	NET_DVR_LAMP_CTRL_MODE_UNION  uLampCtrlMode;/*????????????????*/
	BYTE      byRes2[32];
}NET_DVR_LAMP_CTRL_INFO, *LPNET_DVR_LAMP_CTRL_INFO;

//?????????????“????????normal??
typedef struct tagNET_DVR_PARKSPACE_INFO
{
	BYTE      byParkSpaceAttribute; //0~???“???? 1??????????
	BYTE      byRes[23];
}NET_DVR_PARKSPACE_INFO, *LPNET_DVR_PARKSPACE_INFO;

typedef struct tagNET_DVR_PARKSPACE_ATTRIBUTE
{
	DWORD     dwSize;
	NET_DVR_PARKSPACE_INFO  struParkSpaceInfo[MAX_PARKING_NUM];//?????“??℅??車4?????? (??℅車???????? ??℅谷0??3)
	BYTE      byRes[64];
}NET_DVR_PARKSPACE_ATTRIBUTE, *LPNET_DVR_PARKSPACE_ATTRIBUTE;

//??????????
typedef struct tagNET_DVR_LAMP_STATE
{
	BYTE      byFlicker;//0~?????? 1 ??????
	BYTE      byParkingIndex;//??????1??3
	BYTE      byRes1[2];
	DWORD     dwIONo;//1~IO1;2~IO2;4~IO3;
	BYTE      byRes2[8];
}NET_DVR_LAMP_STATE, *LPNET_DVR_LAMP_STATE;

typedef struct tagNET_DVR_LAMP_EXTERNAL_CFG
{
	DWORD     dwSize;
	BYTE      byEnable; //???????? 0???????? 1??????
	BYTE      byRes1[3];
	NET_DVR_LAMP_STATE     struLampStateCtrl;//??????????
	BYTE      byRes2[32];
}NET_DVR_LAMP_EXTERNAL_CFG, *LPNET_DVR_LAMP_EXTERNAL_CFG;

//????????℅??? ?????“??℅??角??????
typedef struct tagNET_DVR_COMPEL_CAPTURE
{
	DWORD      dwSize;
	BYTE       byParkIndex;/*?????辰????℅車???? ?“0-㊣赤???㊣?∼????????????????????????????1,2,3,4*/
	BYTE       byRes[63];
}NET_DVR_COMPEL_CAPTURE, *LPNET_DVR_COMPEL_CAPTURE;

//????㊣“???芍??
typedef struct tagNET_DVR_EXTERNAL_CONTROL_ALARM
{
	DWORD     dwSize;
	DWORD      dwChannelNo;
	NET_DVR_LAMP_STATE      struLampStateCtrl;//??????????℅???
	NET_DVR_TIME      struExternalBeginTime;/*?????????㊣??*/
	BYTE      byRes1[64];
}NET_DVR_EXTERNAL_CONTROL_ALARM, *LPNET_DVR_EXTERNAL_CONTROL_ALARM;

/* ?豕㊣??角?? */
typedef enum tagEXTERNAL_DEVICES_TYPE
{
	DEVICES_TYPE_RES1 = 0,                //㊣???1    
	DEVICES_TYPE_FAR_SCR = 1,            //???角?????“?‾
	DEVICES_TYPE_ENTRANCE_CONTROL = 2,    //???????????迆
	DEVICES_TYPE_WJ_LED_DEV = 3,        //????LED
	DEVICES_TYPE_NJ_LED_DEV = 4,        //????LED
	DEVICES_TYPE_VEH_DETECT_DEV = 5,    //???足?‾?豕㊣?
	DEVICES_TYPE_DZ_DEV = 6,            //????
	DEVICES_TYPE_PX_SCR_DEV = 7,         //?㊣?????“?‾
	DEVICES_TYPE_KJ_SCR_DEV = 8,         //?“?迆???“?‾
	DEVICES_TYPE_FKJ_DEV = 9,            //﹞??“?迆
	DEVICES_TYPE_SKJ_DEV = 10,            //???“?迆
	DEVICES_TYPE_HDD_DEV = 11,            //????(???? 1G)
	DEVICES_TYPE_DZ_LOCK = 12,            //????????℅?????0㊣赤??????????1㊣赤??????
	DEVICES_TYPE_PAPER_PRINTER = 13,    //???㊣?辰???迆 
	DEVICES_TYPE_PAPER_SCANNERS = 14,   //???㊣?“?豕??
	DEVICES_TYPE_IPC_ALARM = 15         //IPC??﹞?℅???
}EXTERNAL_DEVICES_TYPE;

/* ?豕㊣?℅??? */
typedef enum tagEXTERNAL_DEVICES_STATUS
{
	/* ?“???豕㊣?℅????? 0~19*/
	DEVICES_STATUS_NORMAL = 0,            //℅???????
	DEVICES_STATUS_ABNORMAL = 1,        //℅????足??

										/* ﹞??“?迆?豕㊣?℅????? 20~39*/
										DEVICES_STATUS_TOO_LESS_CARD = 20,         //﹞??“?迆???“
										DEVICES_STATUS_NO_CARD = 21,             //﹞??“?迆???“
										DEVICES_STATUS_SENDCARD_ERROR = 22,     //?∟﹞??“?赤?車
										DEVICES_STATUS_CARD_BLOCKED = 23,         //???“
										DEVICES_STATUS_CARD_FULL = 24,             //???????“?迆


																				   /* ?????豕㊣?℅????? 40~60*/
																				   DEVICES_STATUS_OPENING = 40,             //??????????
																				   DEVICES_STATUS_CLOSING = 41,             //??????????
																				   DEVICES_STATUS_OPENED = 42,             //??????????
																				   DEVICES_STATUS_CLOSED = 43,             //??????????    
																				   DEVICES_STATUS_NOSIGNAL = 44,             //??????????
																				   DEVICES_STATUS_LOCK = 45,                 //????

																															 /* ???㊣?辰???迆℅??? 61~90*/
																															 PP_STATUS_OFFLINE = 61,                   //???迆
																															 PP_STATUS_PRINT_HEADER_UP,           // ?辰???﹞?∫??       
																															 PP_STATUS_FEED_BUTTON_FEEDING,       //???????????邦????                      
																															 PP_STATUS_ONLINE_WAITING,            //???迆????               
																															 PP_STATUS_FEED_BUTTON_ENABLE,        //∼??邦????????????           
																															 PP_STATUS_JAMR_PAPER_ERROR,          //?“???赤?車
																															 PP_STATUS_CUT_PAPER_ERROR,           //?????赤?車
																															 PP_STATUS_AUTO_FEED_ERROR,           //℅????????赤?車
																															 PP_STATUS_EXIT_RECOVERY_ERROR,       //?????????赤?車
																															 PP_STATUS_EXIT_AUTO_RECOVERY_ERROR,  //????℅????????赤?車
																															 PP_STATUS_PULL_PAPER_ERROR,          //?????赤?車
																															 PP_STATUS_LESS_PAPER,               //??????
																															 PP_STATUS_NO_PAPER,                  //????
																															 PP_STATUS_PRINT_FAIL,                //?辰???∫∼?
																															 PP_STATUS_PRINTING,                  //?????辰??  
}EXTERNAL_DEVICES_STATUS;

typedef struct  tagNET_DVR_GATE_ALARMINFO
{
	DWORD  dwSize;
	//0x1????﹞?﹞“????㊣“??
	//0x2???????㊣????㊣“??
	//0x3?????????????㊣㊣“??
	//0x4﹞??“㊣“???“???“??
	//0x5﹞??“㊣“???“???“??
	//0x6﹞??“㊣“???“﹞??“?足????
	BYTE  byAlarmType;
	BYTE  byExternalDevType;//?????豕㊣??角??(EXTERNAL_DEVICES_TYPE)
	BYTE  byExternalDevStatus;//?????豕㊣??角??(EXTERNAL_DEVICES_STATUS)
	BYTE  byRes;
	NET_DVR_TIME_V30  struAlarmTime;//㊣“???㊣??        
	union
	{
		BYTE  uLen[128];
		struct
		{
			char  sLicense[MAX_LICENSE_LEN/*16*/];//????????
												  /*?????角??0-㊣??? 1-???“????2-???㊣????3-?∟??????4-???足????5-???“??*/
			BYTE  byVehicleType;
			BYTE  byRes1[111];
		}struVehicleInfo;//?㊣struAlarmType??(0x1????﹞?﹞“????㊣“??)
	}uAlarmInfo;
	BYTE  byRes2[64]; //?∟??
}NET_DVR_GATE_ALARMINFO, *LPNET_DVR_GATE_ALARMINFO;

typedef struct tagNET_DVR_ALARMWIRELESSINFO
{
	BYTE     byDeviceID[NAME_LEN];   //?豕㊣?ID
	float       fDataTraffic;    /* ?????‾??,??????MB,???????車????*/
	BYTE      bySignalIntensity;  /* ??????????0~100*/
	BYTE      byRes[127];
}NET_DVR_ALARMWIRELESSINFO, *LPNET_DVR_ALARMWIRELESSINFO;

typedef struct tagNET_DVR_VOLTAGE
{
	int iPhaseAVol;            //A?角????
	int iPhaseBVol;            //B?角????
	int iPhaseCVol;            //C?角????
	int iAveragePhaseVol;    //?角???????迄??
}NET_DVR_VOLTAGE, *LPNET_DVR_VOLTAGE;

typedef struct _tagNET_DVR_LINE_VOLTAGE
{
	int iLineVolAB;            //AB??????
	int iLineVolBC;            //BC??????
	int iLineVolCA;            //CA??????
	int iAverageLineVol;    //?????????迄??
} NET_DVR_LINE_VOLTAGE, *LPNET_DVR_LINE_VOLTAGE;


//???‾
typedef struct tagNET_DVR_CURRENT
{
	int iPhaseACurrent;            //A?角???‾
	int iPhaseBCurrent;            //B?角???‾
	int iPhaseCCurrent;            //C?角???‾
	BYTE byRes[4];
}NET_DVR_CURRENT, *LPNET_DVR_CURRENT;

//????
typedef struct tagNET_DVR_POWER
{
	int iPhaseAPower;            //A?角????
	int iPhaseBPower;            //B?角????
	int iPhaseCPower;            //C?角????
	int iSysTotalPower;            //????℅?????
}NET_DVR_POWER, *LPNET_DVR_POWER;

//?????辰??
typedef struct tagNET_DVR_POWER_FACTOR
{
	int iPhaseAPowerFactor;     //A?角?????辰??
	int iPhaseBPowerFactor;     //B?角?????辰??
	int iPhaseCPowerFactor;     //C?角?????辰??
	int iTotalPowerFactor;      //℅??????辰??
}NET_DVR_POWER_FACTOR, *LPNET_DVR_POWER_FACTOR;

//????
typedef struct tagNET_DVR_FREQUENCY
{
	int iPhaseAFrequency;        //A?角????
	int iPhaseBFrequency;        //B?角????
	int iPhaseCFrequency;        //C?角????
	BYTE byRes[4];
}NET_DVR_FREQUENCY, *LPNET_DVR_FREQUENCY;

//??????
typedef struct tagNET_DVR_LOAD_FACTOR
{
	int iPhaseALoadFactor;        //A?角??????
	int iPhaseBLoadFactor;        //B?角??????
	int iPhaseCLoadFactor;        //C?角??????
	BYTE    byRes[4];
} NET_DVR_LOAD_FACTOR, *LPNET_DVR_LOAD_FACTOR;

//UPS℅???
typedef struct tagNET_DVR_ALARMHOST_UPS_STATE
{
	NET_DVR_VOLTAGE        struInputVoltage;    //????????
	NET_DVR_VOLTAGE        struBypassVoltage;    //???﹞????
	NET_DVR_VOLTAGE        struOutputVoltage;    //????????
	int iRectifierVol;            //???‾?‾????
	int iInverterVol;            //??㊣??‾????

	NET_DVR_CURRENT    struInputCurrent;    //???????‾
	NET_DVR_CURRENT    struBypassCurrent;    //???﹞???‾
	NET_DVR_CURRENT    struOutputCurrent;    //???????‾
	int iInverterCurrent;        //??㊣??‾???‾

	NET_DVR_FREQUENCY    struInputFrequency;    //????????
	NET_DVR_FREQUENCY    struBypassFrequency;    //???﹞????
	NET_DVR_FREQUENCY    struOutputFrequency;    //????????
	int iInverterFre;            //??㊣??‾????

	NET_DVR_POWER         struInputPower;    //????????
	NET_DVR_POWER        struBypassPower;    //???﹞????
	NET_DVR_POWER        struOutputPower;    //????????
	NET_DVR_POWER        struComplexPower;    //??????

	int iNormalPower;            //㊣那??????
	int iPowerFacter;            //?????辰??

	NET_DVR_LOAD_FACTOR    struBatteryLoadFactor;    //??????????
	int iBatteryEstimated;        //????㊣?﹞??㊣??(min)
	int iBatteryTemperature;        //????????
	int iBatteryVoltage;            //????????


	BYTE    byRectifierState;        //???‾?‾????℅???/*1???? 2?足??*/
	BYTE    byInverterState;        //??㊣??‾????℅???/*1???? 2?足??*/
	BYTE    byChargeState;        //?????‾????℅???/*1???? 2?足??*/
	BYTE    byBatteryState;        //????????℅???/*1???? 2?足??*/
	BYTE    byAutoBypassState;    //℅??????﹞℅???/*1???? 2?足??*/
	BYTE    byRes2[247];
} NET_DVR_ALARMHOST_UPS_STATE, *LPNET_DVR_ALARMHOST_UPS_STATE;

//????????℅???
typedef struct tagNET_DVR_ALARMHOST_SWITCH_POWER_STATE
{
	NET_DVR_VOLTAGE        struACVoltage;    //???‾????
	int     iDCConvertVoltage;    //DC℅????‾????
	NET_DVR_CURRENT        struACCurrent;    //???‾???‾
	int     iTotalCurrent;            //????℅????‾
	int     iBattery1Temperature;    //????1????
	int     iBattery2Temperature;    //????2????
	int     iBattery1Current;        //????1???‾
	int     iBattery2Current;        //????2???‾
	int     iBattery3Current;        //????3???‾
	int     iBattery4Current;        //????4???‾
	int     iBatteryTestVoltage;    //????????????
	int     iRectifierOutputVoltage;    //???‾???谷????????
	int     iRectifierOutputCurrent;    //???‾???谷???????‾
	int     iDCOutputVoltage;        //?㊣?‾????????
	BYTE    byRes[432];
} NET_DVR_ALARMHOST_SWITCH_POWER_SUPPLY_STATE,
*LPNET_DVR_ALARMHOST_SWITCH_POWER_SUPPLY_STATE;

//?????????‾℅???
typedef struct tagNET_DVR_ALARMHOST_GAS_DETECTOR_STATE
{
	int        iSF6;            //SF6??????ppm
	int      iFlow;           //?‾????ml/min       
	int        iTemperature;        //????????????????
	int        iO2;            //??????????%
	int        iHumidity;        //??????????%
	BYTE    byRes[492];
} NET_DVR_ALARMHOST_GAS_DETECTOR_STATE,
*LPNET_DVR_ALARMHOST_GAS_DETECTOR_STATE;

//???????????‾℅???
typedef struct tagNET_DVR_ALARMHOST_TEMP_HUMI_SENSOR_STATE
{
	int        iTemperature;    //????????????????
	int        iHumidity;        //??????????%
	BYTE    byRes[504];
} NET_DVR_ALARMHOST_TEMP_HUMI_SENSOR_STATE, *LPNET_DVR_ALARMHOST_TEMP_HUMI_SENSOR_STATE;

//???‾℅???
typedef struct tagNET_DVR_ALARMHOST_AIRCONDITION_STATE
{
	int        iTemperature;    //????????????????
	int        iHumidity;        //??????????%
	BYTE   byRunState;        //????℅??? 1-??????2-???迆
	BYTE    byRes[503];
} NET_DVR_ALARMHOST_AIRCONDITION_STATE, *LPNET_DVR_ALARMHOST_AIRCONDITION_STATE;


//????㊣赤℅???
typedef struct tagNET_DVR_ALARMHOST_ELECTRICITY_STATE
{
	int        iDCVoltage;        //?㊣?‾????
	int        iDCCurrent;        //?㊣?‾???‾
	NET_DVR_VOLTAGE        struPhaseVoltage;    //?角????
	NET_DVR_LINE_VOLTAGE struLineVoltage;    //??????
	NET_DVR_CURRENT    struCurrent[4];        //???‾??struCurrent[0]㊣赤????1?﹞, ?????角?? 
	int iAverageCurrent;    //???迄???‾
	int iNeutralCurrent;        //???????‾
	NET_DVR_POWER    struActivePower[4];    //???????? struActivePower[0]㊣赤???????﹞???????????????角??
	NET_DVR_POWER    struReactivePower[4];    //???????? struReactivePower[0]㊣赤???????﹞???????????????角??
	NET_DVR_POWER    struApparentPower[4];    //???????? struApprentPower[0]㊣赤???????﹞???????????????角??
	NET_DVR_POWER_FACTOR    struPowerFactor[4];    //?????辰????struPowerFactor[0]㊣赤???????﹞?????辰?????????角??
	NET_DVR_FREQUENCY        struFrequency;            //????
	BYTE byRes[128];
}NET_DVR_ALARMHOST_ELECTRICITY_STATE, *LPNET_DVR_ALARMHOST_ELECTRICITY_STATE;

//㊣????‾????㊣赤℅???
typedef struct  tagNET_DVR_ALARMHOST_TRANSFORMER_TEMP_STATE
{
	int        iPhaseATemperature;        //A?角????
	int        iPhaseBTemperature;        //B?角????
	int        iPhaseCTemperature;        //C?角????
	int        iPhaseDTemperature;        //D?角????
	BYTE     byRes[496];
}NET_DVR_ALARMHOST_TRANSFORMER_TEMP_STATE, *LPNET_DVR_ALARMHOST_TRANSFORMER_TEMP_STATE;

//?????????‾
typedef struct tagNET_DVR_ALARMHOST_WATERLEVEL_SENSOR
{
	LONG        iWaterLevel;        //????
	BYTE        byRes[508];
}NET_DVR_ALARMHOST_WATERLEVEL_SENSOR, *LPNET_DVR_ALARMHOST_WATERLEVEL_SENSOR;

//???????迄?????‾
typedef struct tagNET_DVR_ALARMHOST_DUSTNOISE_SENSOR
{
	LONG        iDust;        //????
	LONG        iNoise;       //???迄
	LONG        iPM25;        //PM2.5
	BYTE        byRes[500];
}NET_DVR_ALARMHOST_DUSTNOISE_SENSOR, *LPNET_DVR_ALARMHOST_DUSTNOISE_SENSOR;

//?﹞????????
typedef struct tagNET_DVR_ALARMHOST_ENVIRONMENTAL_LOGGER
{
	LONG        iAmmoniaNitrogen;    //∼㊣??
	LONG        iCOD;                //COD
	LONG        iPH;                //PH
	LONG        iOxygen;            //????
	LONG        iSulfurDioxide;    //???????辰
	LONG        iSoot;            //????
	LONG        iFluoride;        //﹞迆????
	LONG        iPollutedWater;    //????
	LONG        iTotalPhosphorus;    //℅??℅
	LONG        iExhaust;            //﹞???
	LONG        iNitrogenOxides;    //????????
	LONG        iFlueGasTemperature;//????????
	LONG        iFlueGasPressure;    //????????
	LONG 		iDustThickness; /*﹞????“??*/
	LONG 		iAirCleanLevel; /*?????角????????*/
	LONG 		iPm10Thickness; /*PM10?“??*/
	BYTE	    byRes[448];
}NET_DVR_ALARMHOST_ENVIRONMENTAL_LOGGER, *LPNET_DVR_ALARMHOST_ENVIRONMENTAL_LOGGER;

//﹞????????‾℅???
typedef struct
{
	int  iWindSpeed; /*﹞???*/
	BYTE   byRes[508];
}NET_DVR_WIND_SPEED_STATE, *LPNET_DVR_WIND_SPEED_STATE;

//?“?????????????谷℅????“48?﹞??????㊣赤??1?﹞??0㊣赤??????1㊣赤??????
typedef struct
{
	BYTE byOutPutState1; /*output1-8*/
	BYTE byOutPutState2; /*output9-16*/
	BYTE byOutPutState3; /*output17-24*/
	BYTE byOutPutState4; /*output25-32*/
	BYTE byOutPutState5; /*output33-40*/
	BYTE byOutPutState6; /*output41-48*/
	BYTE Res[506];
}NET_DVR_GENERATE_OUTPUT_STATE, *LPNET_DVR_GENERATE_OUTPUT_STATE;

//?????????‾℅???
typedef struct
{
	int  iWaterLogVal;      /* ??????????100㊣?*/
	int  iLeakResist1;      /*?????﹞??????℅豕*/
	int  iTotolResist1;     /*?????﹞℅???℅豕*/
	int  iLeakResist2;      /*?????﹞??????℅豕*/
	int  iTotolResist2;     /*?????﹞℅???℅豕*/
	BYTE   byWaterLogAlarm;    /* ????㊣“??1????????2??????*/
	BYTE   byLeakAlarm1;       /*?????﹞????????1????????2??????*/
	BYTE   byFaultAlarm1;      /*?????﹞????????1????????2??????*/
	BYTE   byLeakAlarm2;       /*?????﹞????????1????????2??????*/
	BYTE   byFaultAlarm2;      /*?????﹞????????1????????2??????*/
	BYTE   byRes[487];
}NET_DVR_SOAK_STATE, *LPNET_DVR_SOAK_STATE;

//???????????‾℅???
typedef struct
{
	int  iChangerVolInput;          /*?????豕㊣?????????*/
	int  iChangerCurInput;          /*?????豕㊣????????‾*/
	int  iChangerPwInput;           /*?????豕㊣?????????*/
	int  iChangerVolOutput;         /*?????豕㊣?????????*/
	int  iChangerCurOutput;         /*?????豕㊣????????‾*/
	int  iChangerPwOutput;          /*?????豕㊣?????????*/
	int  iDischangerVolOutput;      /*﹞????豕㊣?????????*/
	int  iDischangerCurOutput;      /*﹞????豕㊣????????‾*/
	int  iDischangerPwOutput;       /*﹞????豕㊣?????????*/
	int  iDevTemperatrue;           /*?豕㊣???????*/
	BYTE   byBatteryVolState;          /*??????????℅???1????????2???足??*/
	BYTE   byBatteryTmpState;          /*??????????℅???1????????2???足??*/
	BYTE   byChangerVolInputState;     /*?????豕㊣?????????℅???1????????2???足??*/
	BYTE   byChangerRunState;          /*?????豕㊣?????℅???1????????2?????迆*/
	BYTE   byChangerChgState;          /*?????豕㊣?????℅???1????????2???足??*/
	BYTE   byBatteryVolFlt;            /*??????????????1????????2??????*/
	BYTE   byBatteryTmpFlt;            /*???????????足??1????????2??????*/
	BYTE   byBatteryResistanceFlt;     /*????????℅豕?足??1????????2??????*/
	BYTE   byVolRcgFlt;                /*???“??????㊣??赤?車1????????2??????*/
	BYTE   byChangerVolInputFlt;       /*?????豕㊣??????????足??1????????2??????*/
	BYTE   byChangerMosShort;          /*????MOS?????﹞1????????2??????*/
	BYTE   byChangerAntiOrMosShort;    /*?????辰﹞?﹞?MOS?????﹞1????????2??????*/
	BYTE   byChangerAntiShort;         /*﹞?﹞?MOS?????﹞1????????2??????*/
	BYTE   byInputOverCur;             /*???????‾1????????2??????*/
	BYTE   byLoadOverCur;              /*???????‾1????????2??????*/
	BYTE   byLoadShort;                /*???????﹞1????????2??????*/
	BYTE   byLoadMosShort;             /*????MOS?????﹞1????????2??????*/
	BYTE   byChangerFlt;               /*?????豕㊣?????1????????2??????*/
	BYTE   byRes[454];
}NET_DVR_SOLAR_POWER_STATE, *LPNET_DVR_SOLAR_POWER_STATE;

//SF6㊣“???‾?迆℅???
typedef struct
{
	int  iSf6Thick1;    /*??????SF6?“??*/
	int  iO2Thick1;     /*???????????“??*/
	int  iTemprature1;  /*??????????*/
	int  iHumidity1;    /*??????????*/
	int  iSf6Thick2;    /*??????SF6?“??*/
	int  iO2Thick2;     /*???????????“??*/
	int  iTemprature2;  /*??????????*/
	int  iHumidity2;    /*??????????*/
	int  iSf6Thick3;    /*??????SF6?“??*/
	int  iO2Thick3;     /*???????????“??*/
	int  iTemprature3;  /*??????????*/
	int  iHumidity3;    /*??????????*/
	int  iSf6Thick4;    /*??????SF6?“??*/
	int  iO2Thick4;     /*???????????“??*/
	int  iTemprature4;  /*??????????*/
	int  iHumidity4;    /*??????????*/
	int  iSf6Thick5;    /*??????SF6?“??*/
	int  iO2Thick5;     /*???????????“??*/
	int  iTemprature5;  /*??????????*/
	int  iHumidity5;    /*??????????*/
	int  iSf6Thick6;    /*???迄??SF6?“??*/
	int  iO2Thick6;     /*???迄???????“??*/
	int  iTemprature6;  /*???迄??????*/
	int  iHumidity6;    /*???迄??????*/
	int  iSf6Thick7;    /*??????SF6?“??*/
	int  iO2Thick7;     /*???????????“??*/
	int  iTemprature7;  /*??????????*/
	int  iHumidity7;    /*??????????*/
	int  iSf6Thick8;    /*??∼???SF6?“??*/
	int  iO2Thick8;     /*??∼????????“??*/
	int  iTemprature8;  /*??∼???????*/
	int  iHumidity8;    /*??∼???????*/
	int  iSf6Thick9;    /*??????SF6?“??*/
	int  iO2Thick9;     /*???????????“??*/
	int  iTemprature9;  /*??????????*/
	int  iHumidity9;    /*??????????*/
	int  iSf6Thick10;   /*??????SF6?“??*/
	int  iO2Thick10;    /*???????????“??*/
	int  iTemprature10; /*??????????*/
	int  iHumidity10;   /*??????????*/
	int  iSf6Thick11;   /*????????SF6?“??*/
	int  iO2Thick11;    /*?????????????“??*/
	int  iTemprature11; /*????????????*/
	int  iHumidity11;   /*????????????*/
	int  iSf6Thick12;   /*????????SF6?“??*/
	int  iO2Thick12;    /*?????????????“??*/
	int  iTemprature12; /*????????????*/
	int  iHumidity12;   /*????????????*/
	BYTE   byFanState1;    /*﹞??迆℅???1 1????????2??????*/
	BYTE   byFanState2;    /*﹞??迆℅???2 1????????2??????*/
	BYTE   byFanState3;    /*﹞??迆℅???3 1????????2??????*/
	BYTE   byFanState4;    /*﹞??迆℅???4 1????????2??????*/
	BYTE   byFanState5;    /*﹞??迆℅???5 1????????2??????*/
	BYTE   byFanState6;    /*﹞??迆℅???6 1????????2??????*/
	BYTE   byFanState7;    /*﹞??迆℅???7 1????????2??????*/
	BYTE   byFanState8;    /*﹞??迆℅???8 1????????2??????*/
	BYTE   byFanState9;    /*﹞??迆℅???9 1????????2??????*/
	BYTE   byFanState10;   /*﹞??迆℅???10 1????????2??????*/
	BYTE   byFanState11;   /*﹞??迆℅???11 1????????2??????*/
	BYTE   byFanState12;   /*﹞??迆℅???12 1????????2??????*/
	BYTE   byRes[308];
}NET_DVR_SF6_ALARMHOST_STATE, *LPNET_DVR_SF6_ALARMHOST_STATE;

//??????℅???
typedef struct
{
	int  iWeight;   /*??????,1000㊣?*/
	BYTE   byRes[508];
}NET_DVR_WEIGHT_STATE, *LPNET_DVR_WEIGHT_STATE;

//???車????????℅???
typedef struct
{
	int  iAirTemperature;              /* ????????*/
	DWORD  dwAirHumidity;              /* ????????*/
	DWORD  dwWindSpeed;                /* ﹞???*/
	DWORD  dwWindDirection;            /* ﹞??辰*/
	DWORD  dwIlluminationIntensity;    /* ????????*/
	DWORD  dwCO2;                      /* co2?“??*/
	DWORD  dwPM25;                     /* PM2.5?“??*/
	DWORD  dwAirPressure;              /* ?車??????*/
	int  iSoilTemperature;             /* ????????*/
	DWORD  dwSoilHumidity;             /* ????????*/
	DWORD  dwRainFall;                 /*???那??*/
	BYTE   byIsRainSnow;               /* ?那???谷????1-???那????2-???那??*/
	BYTE   byRes[467];
}NET_DVR_WEATHER_STATION_STATE, *LPNET_DVR_WEATHER_STATION_STATE;

//?????角????℅???
typedef struct
{
	DWORD  dwTurbidity;    /* ℅?????*/
	DWORD  dwChlorine;     /* ?角????*/
	DWORD  dwPH;           /* PH ??*/
	BYTE   byRes[500];
}NET_DVR_WATER_QLT_STATE, *LPNET_DVR_WATER_QLT_STATE;

//?????角??????℅???
typedef struct
{
	int  iNatrualGasThick;  /* ?足?????“??*/
	BYTE   byRes[508];
}NET_DVR_FUEL_GAS_DETE_STATE, *LPNET_DVR_FUEL_GAS_DETE_STATE;

//??﹞??‾?迆?豕㊣?
typedef struct tagNET_DVR_FIRE_ALARM_STATUS
{
	BYTE  byFireAlarm[MAX_FIRE_ALARM_ZONE][MAX_FIRE_ALARM_POINT_ZONE];           //????℅???????????1-??????2-????
	BYTE  byRes[128];   //㊣?????
}NET_DVR_FIRE_ALARM_STATUS, *LPNET_DVR_FIRE_ALARM_STATUS;

typedef union tagNET_DVR_EXTERNAL_DEVICE_STATE_UNION
{
	NET_DVR_ALARMHOST_UPS_STATE struUpsState;        //UPS℅???
	NET_DVR_ALARMHOST_SWITCH_POWER_SUPPLY_STATE struSwitchPowerState;//????????℅???
	NET_DVR_ALARMHOST_GAS_DETECTOR_STATE struGasDetectorState;//?????足??????℅???
	NET_DVR_ALARMHOST_TEMP_HUMI_SENSOR_STATE struTempHumiSensorState;//???????????‾℅???
	NET_DVR_ALARMHOST_AIRCONDITION_STATE struAirConditionState;//???‾℅???
	NET_DVR_ALARMHOST_ELECTRICITY_STATE struElectricityState;//????㊣赤℅???
	NET_DVR_ALARMHOST_TRANSFORMER_TEMP_STATE struTransformerTempState;    //㊣????‾℅???
	NET_DVR_ALARMHOST_WATERLEVEL_SENSOR struWaterLevelSensor;//?????????‾
	NET_DVR_ALARMHOST_DUSTNOISE_SENSOR struDustNoiseSensor;//???????迄?????‾
	NET_DVR_ALARMHOST_ENVIRONMENTAL_LOGGER struEnvironmentLogger;//?﹞????????
	NET_DVR_WIND_SPEED_STATE struWindSpeedState; //﹞????????‾℅???
	NET_DVR_GENERATE_OUTPUT_STATE struGenerateOutputState; //?“?????????????谷℅????“48?﹞??????㊣赤??1?﹞??
	NET_DVR_SOAK_STATE struSoakState; //?????????‾℅???
	NET_DVR_SOLAR_POWER_STATE struSolarPowerState; //???????????‾℅???
	NET_DVR_SF6_ALARMHOST_STATE struSF6AlarmHostState; //SF6㊣“???‾?迆℅???
	NET_DVR_WEIGHT_STATE struWeightState; //??????℅???
	NET_DVR_WEATHER_STATION_STATE struWeatherStationState; //???車????????℅???
	NET_DVR_WATER_QLT_STATE struWaterQltState; //?????角????℅???
	NET_DVR_FUEL_GAS_DETE_STATE struFuelGasDeteState; //?????角??????℅???
	NET_DVR_FIRE_ALARM_STATUS struFireAlarmStatus; //??﹞??‾?迆?豕㊣?℅???
	BYTE    byRes[512];
} NET_DVR_EXTERNAL_DEVICE_STATE_UNION, *LPNET_DVR_EXTERNAL_DEVICE_STATE_UNION;

typedef struct tagNET_DVR_ALARMHOST_EXTERNAL_DEVICE_STATE
{
	DWORD dwSize;
	BYTE    byDevType;    //1-UPS??2-??????????3-?????足????????4-???????????‾??5-???‾??6-????㊣赤??7-㊣????‾℅???, 8-?????????‾??9-???????迄?????‾??10-?﹞??????????11-﹞????????‾℅?????12-?“?????????????谷℅?????13-?????????‾℅?????14-???????????‾℅?????15-SF6㊣“???‾?迆℅?????16-??????℅?????17-???車????????℅?????18-?????足????℅?????19-?????角??????℅?????20-??﹞??‾?迆℅???
	BYTE    byRes1[3];
	NET_DVR_EXTERNAL_DEVICE_STATE_UNION struDevState;
	BYTE    byRes2[32];
} NET_DVR_ALARMHOST_EXTERNAL_DEVICE_STATE, *LPNET_DVR_ALARMHOST_EXTERNAL_DEVICE_STATE;

//?“?????????????谷?????“48?﹞??????㊣赤??1?﹞??
typedef struct
{
	DWORD dwSize;
	BYTE byOutPutState1; /*output1-8*/
	BYTE byOutPutState2; /*output9-16*/
	BYTE byOutPutState3; /*output17-24*/
	BYTE byOutPutState4; /*output25-32*/
	BYTE byOutPutState5; /*output33-40*/
	BYTE byOutPutState6; /*output41-48*/
	BYTE byOperateType; //??℅‾?角????0-???∫??1-????2-??
	BYTE Res[65];
}NET_DVR_GENERATE_OUTPUT_CTRL, *LPNET_DVR_GENERATE_OUTPUT_CTRL;

//UPS㊣“??????
typedef struct tagNET_DVR_ALARMHOST_UPS_LIMIT_VALUE
{
	int iInputVolHigh;        //??????????????(????)
	int iInputVolLow;        //??????????????(????)
	int iInputFreHigh;        //??????????????(????)
	int iInputFreLow;        //??????????????(????)
	int iOutputVolHigh;    //??????????????(????)
	int iOutputVolLow;        //??????????????(????)
	int iBatteryVoltageLow;    //??????????????
	int iBatterySurplus;        //?????車㊣??㊣???? ????
	int iBatteryTemperatureHigh;//??????????????
	BYTE    byRes[64];            //㊣???
}NET_DVR_ALARMHOST_UPS_LIMIT_VALUE, *LPNET_DVR_ALARMHOST_UPS_LIMIT_VALUE;

//???????????‾????
typedef struct tagNET_DVR_ALARMHOST_TEMP_HUMIDITY_SENSOR_LIMIT_VALUE
{
	int iTemperatureHighLimit;    //??????????????????????
	int iTemperatureLowLimit;    //??????????????????????
	int iHumidityHighLimit;        //????????????????%
	int iHumidityLowLimit;        //????????????????%
	BYTE    byRes[84];
} NET_DVR_ALARMHOST_TEMP_HUMIDITY_SENSOR_LIMIT_VALUE, *LPNET_DVR_ALARMHOST_TEMP_HUMIDITY_SENSOR_LIMIT_VALUE;

typedef union tagNET_DVR_EXTERNAL_DEVICE_LIMIT_VALUE_UNION
{
	NET_DVR_ALARMHOST_UPS_LIMIT_VALUE struUpsLimitValue;
	NET_DVR_ALARMHOST_TEMP_HUMIDITY_SENSOR_LIMIT_VALUE struTempHumidityLimitValue;
}NET_DVR_EXTERNAL_DEVICE_LIMIT_VALUE_UNION, *LPNET_DVR_EXTERNAL_DEVICE_LIMIT_VALUE_UNION;

typedef struct tagNET_DVR_ALARMHOST_EXTERNAL_DEVICE_LIMIT_VALUE
{
	DWORD dwSize;
	BYTE    byDevType;    //1-UPS??2-???????????‾
	BYTE    byRes1[3];
	NET_DVR_EXTERNAL_DEVICE_LIMIT_VALUE_UNION struAlarmValue;
	BYTE    byRes2[32];
}NET_DVR_ALARMHOST_EXTERNAL_DEVICE_LIMIT_VALUE, *LPNET_DVR_ALARMHOST_EXTERNAL_DEVICE_LIMIT_VALUE;

#define    ALARMHOST_ALARMOUT_NUM    64  //??﹞??‾????
#define  MAX_OSD_UNIT_LEN   8    //OSD?????∟??
typedef struct  tagNET_DVR_ALARMHOST_SENSOR_JOINT_CFG
{
	DWORD         dwSize;
	BYTE        bySensorJointAlarmOut[MAX_ALARMHOST_ALARMOUT_NUM/*512*/];//????????????﹞??‾??0-????????1-????
	BYTE        bySensorJointSiren[ALARMHOST_MAX_SIREN_NUM/*8*/];//??????????????
	BYTE        bySensorAlarmTypeJointAlarmOut[ALARMHOST_ALARMOUT_NUM/*64*/];//??????∼??角????????﹞??‾????℅?????bySensorJointAlarmOut??????????℅谷??㊣那㊣赤????﹞??‾??????℅谷????????∼???㊣赤??㊣“???角?????‾???角??????"?辰"?????????角?????“????1bit0-??1??bit1-??2??bit2-??3??bit3-??4??bit4-????
	BYTE        bySesorAlarmTypeJointSiren[ALARMHOST_MAX_SIREN_NUM]; //??????∼??角??????????????℅?????bySensorJointSiren??????????℅谷??㊣那㊣赤???????辰??????℅谷????????∼???㊣赤??㊣“???角?????‾???角??????"?辰"?????????角?????“????bit0-??1??bit1-??2??bit2-??3??bit3-??4??bit4-????
	BYTE        byChan;        //?“????
	BYTE        byRes[55];
}NET_DVR_ALARMHOST_SENSOR_JOINT_CFG, *LPNET_DVR_ALARMHOST_SENSOR_JOINT_CFG;

//UPS㊣“??????????
typedef struct tagNET_DVR_ALARMHOST_UPS_ALARMINFO
{
	BYTE    byAlarmType;/*㊣“???角????1.A?角???????????? 2.B?角???????????? 3.C?角???????????? 4.A?角????????????5.B?角???????????? 6.C?角????????????7.A?角???????????? 8.B?角????????????9.C?角????????????10.???‾?‾????????㊣“?? 11.????㊣“?? 12.??????????㊣“?? 13.?????車㊣??㊣??????㊣“?? 14.????????????㊣“?? 15.??㊣??‾??㊣?㊣“?? 16.℅??????﹞??㊣“?? 17.???‾?‾????㊣“?? 18.??㊣??‾????㊣“?? 19.?????‾????㊣“??    20.????????㊣“??     21.℅??????﹞????㊣“?? */
	BYTE    byChanNo;    //485?“????????1????
	BYTE    bySlotNo;    //485?谷????????
	BYTE    byRes1;        //㊣???
	int        iAlarmValue;//㊣“????
	BYTE    byRes2[64];        //㊣???
}NET_DVR_ALARMHOST_UPS_ALARMINFO, *LPNET_DVR_ALARMHOST_UPS_ALARMINFO;

//????????㊣“??????
typedef struct tagNET_DVR_ALARMHOST_SWITCH_POWER_SUPPLY_ALARMINFO
{
	BYTE    byAlarmType;    /*㊣“???角????1-?????????∫∼? 2-AC-DC℅????‾??????3-??????/?角????AB/A??????4-??????/?角????BC/B??????5-??????/?角????CA/C??????6-???????‾A??????7-???????‾B??????8-???????‾C??????9???‾???谷??????10-﹞?????????11-?㊣?‾????????*/
	BYTE    byChanNo;        //485?“????????1????
	BYTE    bySlotNo;        //485?谷????????
	BYTE    byRes1;
	int     iAlarmValue;        //㊣“????
	BYTE    byRes2[64];
}NET_DVR_ALARMHOST_SWITCH_POWER_SUPPLY_ALARMINFO,
*LPNET_DVR_ALARMHOST_SWITCH_POWER_SUPPLY_ALARMINFO;

//?????足??????㊣“??
typedef struct tagNET_DVR_ALARMHOST_GAS_DETECT_SYS_ALARMINFO
{
	BYTE    byAlarmType;    /*㊣“???角????1- SF6?????????足????2-?????????足????3-???????足????4-???????足????5-?‾??*/
	BYTE    byChanNo;    //485?“????????1????
	BYTE    bySlotNo;    //485?谷????????
	BYTE    byRes1;
	int     iAlarmValue;        //㊣“????
	BYTE    byRes2[64];
}NET_DVR_ALARMHOST_GAS_DETECT_SYS_ALARMINFO,
*LPNET_DVR_ALARMHOST_GAS_DETECT_SYS_ALARMINFO;


//???????????‾㊣“??
typedef struct tagNET_DVR_ALARMHOST_TEMP_HUMIDITY_SENSOR_ALARMINFO
{
	BYTE    byAlarmType;    //1-?????足????2-?????足??
	BYTE    byChanNo;        //485?“????
	BYTE    bySlotNo;        //485??????
	BYTE    byRes1;
	int         iAlarmValue;    //㊣“????
	BYTE    byRes2[64];
} NET_DVR_ALARMHOST_TEMP_HUMIDITY_SENSOR_ALARMINFO, *LPNET_DVR_ALARMHOST_TEMP_HUMIDITY_SENSOR_ALARMINFO;

typedef union  tagNET_DVR_485_DEVICE_ALARM_UNION
{
	NET_DVR_ALARMHOST_UPS_ALARMINFO struUPSAlarm; //UPS㊣“??
	NET_DVR_ALARMHOST_SWITCH_POWER_SUPPLY_ALARMINFO struSwitchPowerAlarm; //????????㊣“??
	NET_DVR_ALARMHOST_GAS_DETECT_SYS_ALARMINFO struGasDetectSystemAlarm; //?????足??????㊣“??
	NET_DVR_ALARMHOST_TEMP_HUMIDITY_SENSOR_ALARMINFO struTempHumiditySensorAlarm; //???????????‾㊣“??
	BYTE    byRes[72];
} NET_DVR_485_DEVICE_ALARM_UNION, *LPNET_DVR_485_DEVICE_ALARM_UNION;

//485?????豕㊣?㊣“??????
typedef struct  tagNET_DVR_485_EXTERNAL_DEVICE_ALARMINFO
{
	DWORD dwSize;
	BYTE    byAlarmType;    //1-UPS㊣“????2-????????㊣“????3-?????足??????㊣“????4-???????????‾㊣“??
	BYTE    byRes1[3];
	NET_DVR_485_DEVICE_ALARM_UNION struAlarmInfo;
	BYTE    byRes2[16];
} NET_DVR_485_EXTERNAL_DEVICE_ALARMINFO, *LPNET_DVR_485_EXTERNAL_DEVICE_ALARMINFO;

typedef struct tagNET_DVR_ALARMHOST_RS485_SLOT_CFG
{
	DWORD       dwSize;              // ?芍?????車??
	BYTE        sDeviceName[NAME_LEN];      // ?∼???豕㊣????? 
	WORD        wDeviceType;            // ?∼???豕㊣??角??ALARM_FRONT_DEVICE _TYPE
	WORD        wDeviceProtocol;     // ?∼???豕㊣????谷 ?“?????????谷??㊣赤????
	WORD        wAddress;            //?豕㊣????﹞    
	BYTE        byChannel;          //485?“????
	BYTE        bySlotChan;         //??????
	BYTE        byRes[60];          // ㊣???℅???
}NET_DVR_ALARMHOST_RS485_SLOT_CFG, *LPNET_DVR_ALARMHOST_RS485_SLOT_CFG;

//℅???????
typedef struct tagNET_DVR_CORRIDOR_MODE
{
	DWORD        dwSize;
	BYTE        byEnableCorridorMode; //??﹞?????℅??????? 0?????????? 1??????
	BYTE        byMirrorMode;            //????﹞?????0 ??㊣?;1 ℅車??;2 ????;3 ???? 
	BYTE        byRes[126];
}NET_DVR_CORRIDOR_MODE, *LPNET_DVR_CORRIDOR_MODE;

//?????足??
typedef struct tagNET_DVR_DETECT_FACE
{
	DWORD     dwSize;
	BYTE     byEnableDetectFace; //??﹞????? 0?????????? 1??????
	BYTE     byDetectSensitive; //?谷???? 10?????? 1??10
	BYTE     byEnableDisplay;    /*?????????足????????????0-﹞???1-??*/
	BYTE     byRes;
	NET_DVR_HANDLEEXCEPTION_V40  struAlarmHandleType; /*???赤﹞???*/
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30]; /*??﹞??㊣?? */
	DWORD    dwMaxRelRecordChanNum;     //㊣“????﹞??????車?“?? ???“??????℅??車?∫??????
	DWORD    dwRelRecordChanNum;     //㊣“????﹞??????車?“???? ?????∫????
	DWORD    dwRelRecordChan[MAX_CHANNUM_V30];    /* ㊣“????﹞??????車?“??*/
	NET_DVR_SCHEDTIME struHolidayTime[MAX_TIMESEGMENT_V30]; //??????﹞??㊣??
	WORD     wDuration;  //㊣“???????㊣?? 5s ??????
	BYTE     byRes1[30];
}NET_DVR_DETECT_FACE, *LPNET_DVR_DETECT_FACE;

typedef struct tagNET_DVR_MUL_STREAM_CHANNEL_GROUP
{
	DWORD        dwSize;                 // ?芍?????車??
	DWORD       dwGroup;             //℅谷??
	NET_DVR_MULTI_STREAM_COMPRESSIONCFG_COND  struMultiStreamCfg; //?角???‾????
	BYTE         byRes[64];
}NET_DVR_MUL_STREAM_CHANNEL_GROUP, *LPNET_DVR_MUL_STREAM_CHANNEL_GROUP;

typedef struct tagNET_DVR_CHANNEL_GROUP
{
	DWORD        dwSize;       // ?芍?????車??
	DWORD       dwChannel; //?“????
	DWORD       dwGroup;   //℅谷?? 
	BYTE        byID;      //?豕㊣????辰?豕??ID
	BYTE        byRes1[3];
	DWORD       dwPositionNo; //???∼?????‾????,IPC??0??IPD????1????
	BYTE        byRes[56];
}NET_DVR_CHANNEL_GROUP, *LPNET_DVR_CHANNEL_GROUP;


typedef struct tagNET_DVR_TIME_DETECTION
{
	NET_DVR_SCHEDTIME  struSchedTime; //?㊣??
	BYTE   byDetSceneID;//?足?????∼??[1,4],IPC??????0
	BYTE   byRes[15];
}NET_DVR_TIME_DETECTION, *LPNET_DVR_TIME_DETECTION;

//℅?????﹞??????∫????????﹞??㊣??????????????????
typedef struct tagNET_DVR_GUARD_COND
{
	DWORD  dwSize;
	DWORD  dwChannel; //?“????
					  /*
					  0㊣赤?????∫??
					  1㊣赤?????? ℅???VIA?????“??????﹞?℅??? IPC??????;
					  2 ㊣赤?????? ℅??? HVT ???? ?“?足?“IPC??????
					  */
	BYTE   byRelateType;
	BYTE   byGroupNo;  //℅谷??
	BYTE   byRes[62];
}NET_DVR_GUARD_COND, *LPNET_DVR_GUARD_COND;

//℅?????﹞??????∫????????﹞??㊣??????????????
typedef struct tagNET_DVR_GUARD_CFG
{
	DWORD  dwSize;
	//??﹞??㊣??
	NET_DVR_TIME_DETECTION    struAlarmSched[MAX_DAYS/*7*/][MAX_TIMESEGMENT_V30/*8*/];
	NET_DVR_HANDLEEXCEPTION_V40 struHandleException;  //?足?????赤﹞???
	DWORD  dwMaxRelRecordChanNum;  //㊣“????﹞??????車?“?? ???“??????℅??車?∫??????
	DWORD  dwRelRecordChanNum;     //㊣?℅谷????????﹞??????車?“????
	DWORD  dwRelRecordChan[MAX_CHANNUM_V30];    //㊣“????﹞??????車?“??(0xffff ffff㊣赤???車?????∫??
	NET_DVR_TIME_DETECTION  struHolidayTime[MAX_TIMESEGMENT_V30]; //??????﹞??㊣?? 
	BYTE   byDirection;//??﹞?﹞??辰??0-㊣?????1-??????2-???辰??3-﹞??辰
	BYTE   byRes[87];
}NET_DVR_GUARD_CFG, *LPNET_DVR_GUARD_CFG;

//℅????????????????????????芍??
typedef    struct  tagNET_DVR_SNAPINFO_COND_
{
	DWORD    dwSize;
	DWORD    dwChan;
	/*
	0 ㊣赤?????? ℅???MPR?????“?角????﹞?℅??? IPC??????
	1 ㊣赤?????? ℅??? HVT ?????“?足?“IPC??????
	*/
	BYTE     byRelateType;
	BYTE     byRes[63];        //㊣???
}NET_DVR_SNAPINFO_COND, *LPNET_DVR_SNAPINFO_COND;


//℅???????????????
typedef struct tagNET_DVR_SNAPINFOCFG
{
	DWORD dwSize;
	BYTE  byCurPicType;//0-㊣赤??????????????1-㊣赤???????車??
	BYTE  byPicQuality;//????????[1,100]
	BYTE  byRes1[2];
	DWORD dwPicSize;//?????車??[64k,2048k]
	BYTE  byRes2[128];
}NET_DVR_SNAPINFOCFG, *LPNET_DVR_SNAPINFOCFG;

//ptz?迆℅?﹞???
typedef enum _PTZ_TRACK_MODE_
{
	PTZ_TRACK_MODE_ALWAYS = 1,   //???㊣?迆℅?
	PTZ_TRACK_MODE_BYTIME = 2,   //?迆℅????“?㊣??
	PTZ_TRACK_MODE_NEXT = 3,   //?迆℅???????㊣那
}PTZ_TRACK_MODE;

//ptz?迆℅?????
typedef struct _NET_DVR_PTZ_TRACK_PARAM_
{
	DWORD dwSize;     //?芍?????車??
	BYTE  byTrackMode; //?迆℅?﹞???,????PTZ_TRACK_MODE
	BYTE  byLinkageTarget; //??????㊣那0-????,1-?辰?迆1,2-?辰?迆2??..?????角??
	BYTE  byAutoTrackEnable;//?迆℅????? 0-℅????迆℅???????1-℅????迆℅???㊣??“???辰?豕㊣????∫??℅????迆℅???㊣???????????????????????
	BYTE  byRes1; //㊣???
	DWORD dwTrackTime; //?迆℅??㊣????
					   //?㊣?迆℅???????PTZ_TRACK_MODE_ALWAYS????℅??????∫
					   //?㊣?迆℅???????PTZ_TRACK MODE_BYTIME?㊣??﹞??∫[1,60]??????10??
					   //?㊣?迆℅???????PTZ_TRACK MODE_NEXT?㊣??﹞??∫[1,10]??????2??
	BYTE  byRes2[256]; //㊣???
}NET_DVR_PTZ_TRACK_PARAM, *LPNET_DVR_PTZ_TRACK_PARAM;

typedef struct tagNET_VCA_TRAVERSE_PLANEPARAM
{
	DWORD dwSize;
	BYTE    byEnable;//????
	BYTE    byEnableDualVca;// ?????∫???????車?足?‾ 0-????????1-????
	BYTE    byEnableHumanMisinfoFilter;// ???????????車㊣“ 0-????????1-????
	BYTE    byEnableVehicleMisinfoFilter;// ???????????車㊣“ 0-????????1-????
	NET_VCA_TRAVERSE_PLANE struAlertParam[MAX_ALERTLINE_NUM];  //??????????
	NET_DVR_SCHEDTIME    struAlarmSched[MAX_DAYS][MAX_TIMESEGMENT_V30];
	NET_DVR_HANDLEEXCEPTION_V40 struHandleException;  //?足?????赤﹞???
	DWORD  dwMaxRelRecordChanNum;  //㊣“????﹞??????車?“?? ???“??????℅??車?∫??????
	DWORD  dwRelRecordChanNum;     //㊣“????﹞??????車?“?? ?? ?????∫????????
	DWORD  byRelRecordChan[MAX_CHANNUM_V30];//??﹞????????“????
	NET_DVR_SCHEDTIME struHolidayTime[MAX_TIMESEGMENT_V30]; //??????﹞??㊣??
	BYTE byRes2[100];
}NET_VCA_TRAVERSE_PLANE_DETECTION, *LPNET_VCA_TRAVERSE_PLANE_DETECTION;


typedef struct tagNET_VCA_FIELDDETECION
{
	DWORD dwSize;
	BYTE byEnable; //????????﹞?????
	BYTE byEnableDualVca;// ?????∫???????車?足?‾ 0-????????1-????
	BYTE byEnableHumanMisinfoFilter;// ???????????車㊣“ 0-????????1-????
	BYTE byEnableVehicleMisinfoFilter;// ???????????車㊣“ 0-????????1-????
	NET_VCA_INTRUSION struIntrusion[MAX_INTRUSIONREGION_NUM];//???????辰???????豕??
	NET_DVR_SCHEDTIME struAlarmSched[MAX_DAYS][MAX_TIMESEGMENT_V30]; //??﹞??㊣??
	NET_DVR_HANDLEEXCEPTION_V40 struHandleException;  //?足?????赤﹞???
	DWORD  dwMaxRelRecordChanNum;  //㊣“????﹞??????車?“?? ???“??????℅??車?∫??????
	DWORD  dwRelRecordChanNum;     //㊣“????﹞??????車?“?? ?? ?????∫????????
	DWORD  byRelRecordChan[MAX_CHANNUM_V30];//??﹞??????“??
	NET_DVR_SCHEDTIME struHolidayTime[MAX_TIMESEGMENT_V30/*8*/]; //??????﹞??㊣??
	BYTE byRes2[100];
}NET_VCA_FIELDDETECION, *LPNET_VCA_FIELDDETECION;

typedef struct tagNET_DVR_ROI_DETECT_NUM
{
	DWORD   dwSize;
	DWORD   dwGroup;
	DWORD   dwStreamType;    //???‾?角????0-?‾???‾??1-℅????‾??2-?????角????3-???‾3??????
	DWORD   dwRoiFixNum; //???“???辰℅??????﹞?“?車????????????℅谷??
	DWORD   dwRoiFixID[MAX_ROIDETECT_NUM];//IPC?????∫??4?????辰?迆?????∫??24??
	BYTE    szFixRoiName[MAX_ROIDETECT_NUM][NAME_LEN];//???“ROI???辰????
	DWORD   dwRoiTrackNum; //℅????迆℅????辰℅??????﹞?“?車????????????℅谷??
	DWORD   dwRoiTrackID[MAX_ROIDETECT_NUM];//IPC?????∫??4?????辰?迆?????∫??24??
	BYTE    byRes[320];
}NET_DVR_ROI_DETECT_NUM, *LPNET_DVR_ROI_DETECT_NUM;

typedef  enum  _DETECT_ROI_TYPE_
{
	DETECT_FIX_ROI = 0, //?足??ROI???“???辰
	DETECT_TRACK_ROI = 1 //?足??ROI ℅????迆℅????辰
}DETECT_ROI_TYPE;
//????????
typedef struct tagNET_DVR_ROI_DETECT_COND
{
	DWORD   dwSize;
	DWORD   dwRoiID; //???辰?足???? ????PTZ?∫??4?? 
	NET_DVR_MULTI_STREAM_COMPRESSIONCFG_COND  struMultiStreamCfg; //?角???‾????
	BYTE    byRoiDetectType; // DECTECT_ROI_TYPE ????
	BYTE    byRoiDetectTrackType;//???“???辰?㊣????℅??????∫???迆℅????辰?㊣??1???????足???“IPC??,2???????????迆℅?,3-?????迆℅?
	BYTE    byRes[30];
}NET_DVR_ROI_DETECT_COND, *LPNET_DVR_ROI_DETECT_COND;

//????????
//ROI???“???辰???? ???辰㊣角??????
typedef struct tagNET_DVR_ROI_FIX_RECT_CFG
{
	BYTE  byEnableFixRoi; // ROI???“???辰???? ??﹞????? 0?????????? 1??????
	BYTE  byImageQualityLevel; //?????????芍?????? 1??6
	BYTE  byRes[2];
	BYTE  szFixRoiName[NAME_LEN];
	NET_VCA_RECT  struRoiRect;  //ROI???辰
	BYTE  byRes1[468];
}NET_DVR_ROI_FIX_RECT_CFG, *LPNET_DVR_ROI_FIX_RECT_CFG;

//ROI℅????迆℅????? ???辰㊣角??????  
typedef struct tagNET_DVR_ROI_TRACK_RECT_CFG
{
	BYTE  byEnableTrackRoi; // ROI℅????迆℅????? ??﹞????? 0?????????? 1??????
	BYTE  byImageQualityLevel; //?????????芍?????? 1??6
	BYTE  byModeType;// 0 ~ ??, 1??????????(????????????????), 2~?????????迆℅?(??????????), 3-?????迆℅?
	BYTE  byRes[509];
}NET_DVR_ROI_TRACK_RECT_CFG, *LPNET_DVR_ROI_TRACK_RECT_CFG;

typedef union tagNET_DVR_ROI_DETECT_UNION
{
	DWORD                        uLen[128];
	NET_DVR_ROI_FIX_RECT_CFG    strRoiFixRectCfg;//???“???辰????
	NET_DVR_ROI_TRACK_RECT_CFG  strRoiTrackRectCfg;//℅????迆℅?????
}NET_DVR_ROI_DETECT_UNION, *LPNET_DVR_ROI_DETECT_UNION;

typedef struct tagNET_DVR_ROI_DETECT_CFG
{
	DWORD      dwSize;  //560
	DWORD       dwStreamType;    //???‾?角????0-?‾???‾??1-℅????‾??2-?????角????3-???‾3??????
	BYTE       byRoiDetectType; // DECTECT_ROI_TYPE ???? 
	BYTE       byRes[3];
	NET_DVR_ROI_DETECT_UNION  uRoiDetectInfo; //ROI?足?????辰
	BYTE       byRes1[36];
}NET_DVR_ROI_DETECT_CFG, *LPNET_DVR_ROI_DETECT_CFG;

//?谷???足??
typedef struct tagNET_VCA_DEFOCUSPARAM
{
	DWORD dwSize;
	BYTE byEnable;//????
	BYTE  bySensitiveLevel;// 1-100??????50???谷???????????????℅㊣“??
	BYTE  byRes1[2];
	NET_DVR_HANDLEEXCEPTION_V40 struHandleException;  //?足?????赤﹞???
	BYTE byRes2[24];
}NET_VCA_DEFOCUSPARAM, *LPNET_VCA_DEFOCUSPARAM;

typedef struct tagNET_PTZ_INFO_EX
{
	float fPan;//P?? ???﹞?????????車3?? ﹞??∫[0,360.000]
	float fTilt; //Z?? ???﹞?????????車3?? ﹞??∫[-90.000,90.000]
	float fVisibleZoom;//??????zoom ???﹞?????????車1?? ???芍????[0??10000.0]
	DWORD dwVisibleFocus;//??????focus[0,65535]
	float fThermalZoom;//??????zoom ???﹞?????????車1?? ???芍????[0??10000.0]
	DWORD dwThermalFocus;//??????focus[0,65535]
}NET_PTZ_INFO_EX, *LPNET_PTZ_INFO_EX;

//IPC5.1.0  
typedef struct tagNET_DVR_PRESET_NAME
{
	DWORD dwSize;
	WORD wPresetNum; //?∟????㊣角??
	BYTE byRes1[2]; //℅??????? 
	char byName[NAME_LEN];
	WORD wPanPos;//???????? ?????????????????車??360????????360
	WORD wTiltPos;//???㊣???? ?????????????????車??360????????360
	WORD wZoomPos;//㊣?㊣??????????????????????車??360????????360
	BYTE byRes2;
	BYTE byPTZPosExEnable; /*??﹞?????PTZ℅?㊣那??????0~????????PTZ℅?㊣那????wPanPos??wTiltPos??wZoomPos??℅???1~??????PTZ℅?㊣那????struPtzPosEx??℅?*/
	NET_PTZ_INFO_EX struPtzPosEx;// ptz℅?㊣那????(?∫????????PTZ??)
	BYTE byRes[32];
}NET_DVR_PRESET_NAME, *LPNET_DVR_PRESET_NAME;

typedef struct
{
	NET_DVR_SCHEDTIME struSchedTime; //?㊣??
	WORD  wAction;  ///< ?“?㊣??℅‾??????℅‾
	WORD  wActionNum; ///< ??????℅‾℅?㊣角???????∟?????????????“?迄??㊣“??????????????????
	BYTE byres[12];
}NET_DVR_SCHEDTASK, *LPNET_DVR_SCHEDTASK;

//?“?㊣????
typedef struct tagNET_DVR_TIME_TASK
{
	DWORD dwSize;
	BYTE byTaskEnable;   ///< ???? 1-????0-??
	BYTE byRes[3];    ///< ℅???????
	NET_DVR_SCHEDTASK struTask[MAX_DAYS][MAX_SCH_TASKS_NUM];    ///< 7?足?????足10?㊣????
	DWORD dwParkTime;   ///< ?????㊣?? 5s-720s
	BYTE byRes1[64];
}NET_DVR_TIME_TASK, *LPNET_DVR_TIME_TASK;

//?????芍????
typedef struct tagNET_DVR_CHANNEL_INDEX
{
	DWORD dwSize;                 // ?芍?????車??
	DWORD dwChannel;           //?“????
	DWORD dwIndex;             //?‾????
	BYTE  byRes[64];
}NET_DVR_CHANNEL_INDEX, *LPNET_DVR_CHANNEL_INDEX;

typedef struct tagNET_DVR_AUDIO_NAME
{
	DWORD dwSize;                 // ?芍?????車??
	char  cName[NAME_LEN];          //????
	BYTE  byRes[64];
}NET_DVR_AUDIO_NAME, *LPNET_DVR_AUDIO_NAME;

//?????豕㊣?????
typedef struct tagNET_DVR_LOGIN_DEVICE_PARAM_
{
	DWORD  dwSize;       //?芍?????車??
	BYTE   byMobileDev;  //?豕㊣????角, 0- ﹞??????豕㊣?, 1 - ?????豕㊣?
	BYTE   byRes[63];    //㊣???                    
}NET_DVR_LOGIN_DEVICE_PARAM, *LPNET_DVR_LOGIN_DEVICE_PARAM;

typedef enum RECV_DATA_TYPE
{
	ENUM_RECV_ERRCODE = 0x0, //﹞????赤?車??
} RECV_DATA_TYPE;

//???‾????????
typedef enum tagFISHEYE_STREAM_OUTPUT_MODE_
{
	FISHEYE_STREAM_MODE_FISHEYE = 1,   //????????
	FISHEYE_STREAM_MODE_PTZ = 2,   //PTZ????
	FISHEYE_STREAM_MODE_PANORAMA = 3    //???∼????
}FISHEYE_STREAM_OUTPUT_MODE;

//???‾?????角??????
typedef enum _CALLBACK_TYPE_DATA_ENUM_
{
	ENUM_FISHEYE_STREAM_STATUS = 1,  //???????‾????℅???
	ENUM_FISHEYE_PTZPOS = 2,  //ptz?“???㊣?∼?迄??????????????℅?㊣那
	ENUM_FISHEYE_REALTIME_OUTPUT = 3   //???㊣????????
}CALLBACK_TYPE_DATA_ENUM;

//???????‾℅???
typedef struct tagNET_DVR_FISHEYE_STREAM_STATUS_
{
	DWORD  dwSize;        //?芍?????車?? 
	BYTE   byStreamMode;  //???‾??????????????FISHEYE_STREAM_OUTPUT_MODE
	BYTE   byRes[63];     //㊣???
}NET_DVR_FISHEYE_STREAM_STATUS, *LPNET_DVR_FISHEYE_STREAM_STATUS;

//?∟???????‾?????芍????
typedef struct tagNET_DVR_CALLBACK_TYPE_DATA
{
	DWORD  dwChannel;      //?“????
	DWORD  dwDataType;     //????CALLBACK_TYPE_DATA_ENUM
	DWORD  dwDataLen;      //?????∟??
	BYTE*  pData;          //???????㊣dwTypeData?? ENUM_FISHEYE_STREAM_STATUS??????????NET_DVR_FISHEYE_STREAM_STATUS
	BYTE   byRes[64];      //㊣???    
}NET_DVR_CALLBACK_TYPE_DATA, *LPNET_DVR_CALLBACK_TYPE_DATA;

//????ptz????????
typedef struct tagNET_DVR_DRAG_POS_PARAM
{
	DWORD          dwChannel;      //?“????
	DWORD          dwPtzChannel;   //?㊣dwChannel?迄???“????????FISHEYE_STREAM_MODE_FISHEYE?“?????????㊣?????????????????迄??????ptz?“?????㊣dwChannel?“????????﹞??????㊣??????0????
	NET_VCA_POINT  struToPoint;    //????????????℅???????㊣那??????㊣那???????角?????∟????????℅車????
	NET_VCA_POINT  struOriPoint;   //??????℅‾??????,???????㊣????????℅‾?????㊣???車㊣那?????角?????∟??????℅車??????????
	BYTE           byRes[56];      //㊣???
}NET_DVR_DRAG_POS_PARAM, *LPNET_DVR_DRAG_POS_PARAM;

//???“?谷??????﹞????‾??℅???
typedef struct tagNET_DVR_QUERY_STATUS
{
	DWORD      dwSize;
	BYTE       byCpuLoad;       //CPU℅????????谷??, ????﹞??∫??0-100
	BYTE       byMemLoad;      //Memory℅????????谷????????﹞??∫??0-100
	WORD       wAbility;      //????﹞????‾?????????車??0
	WORD       wRemainAbility;//????﹞????‾???角??????????﹞??∫???車?? 0  ???角?角??????????
	WORD       wTotalPlanNum; //℅??角64??????>
	WORD       wCurPlanNum;   //?㊣?∼??????  ℅??角64??????>
	BYTE       byRes[62];     //㊣???
}NET_DVR_QUERY_STATUS, *LPNET_DVR_QUERY_STATUS;

typedef struct tagNET_DVR_MONITOR_VQDCFG
{
	DWORD   dwSize;
	BYTE   byEnable;            //??﹞?????     
	BYTE   byDevType;             //?豕㊣??角????0-﹞????“?豕㊣???1-?????“?豕㊣?
	BYTE   bySignalPoint;       //???????∫﹞∫????0-100
	BYTE   byBlurPoint;         //????????﹞∫????0-100
	BYTE   byLumaPoint;         //????????﹞∫????0-100
	BYTE   byChromaPoint;       //????????﹞∫????0-100
	BYTE   bySnowPoint;         //???迄????﹞∫????0-100
	BYTE   byStreakPoint;       //????????﹞∫????0-100
	BYTE   byFreezePoint;       //???????芍﹞∫????0-100
	BYTE   byPTZPoint;          //???“?∫??﹞∫????0-100
	BYTE   byMonitorDel;        //?角???????? 0-???????? 1-????
	BYTE   byContrastThreshold; //??㊣????足????????0-100
	BYTE   byMonoThreshold;     //??∼℅??????????0-100
	BYTE   byShakeThreshold;    //??????????????0-100
	BYTE   byFlashThreshold;    //??????㊣???????0-100
	BYTE   byCoverThreshold;    //??????????????0-100
	BYTE   bySceneThreshold;    //???∼㊣??邦??????0-100
	BYTE   byDarkThreshold;     //??????∼???????0-100
	BYTE   byRes[46];
}NET_DVR_MONITOR_VQDCFG, *LPNET_DVR_MONITOR_VQDCFG;

//?????芍??
typedef struct tagNET_DVR_DIAGNOSIS_UPLOAD
{
	DWORD  dwSize;
	char   sStreamID[STREAM_ID_LEN];    ///< ?‾ID???∟??????32??℅???
	char  sMonitorIP[64];  ///< ?角????ip
	DWORD  dwChanIndex;  ///< ?角?????“????  
	DWORD  dwWidth;  ///< ?????赤??
	DWORD  dwHeight;  ///< ????????
	NET_DVR_TIME  struCheckTime;  ///< ?足???㊣??(???????????㊣??℅???)????????2012-08-06 13:00:00
	BYTE  byResult;  ///0-???足?? 1-???? 2-?足?? 3-?????∫∼? 4-???‾?足??
	BYTE  bySignalResult; ///< ???????∫?足???芍?? 0-???足?? 1-???? 2-?足??
	BYTE  byBlurResult;  ///< ?????????足???芍????0-???足?? 1-???? 2-?足??
	BYTE  byLumaResult;  ///< ?????????足???芍????0-???足?? 1-???? 2-?足??
	BYTE  byChromaResult;  ///< ?????足???芍????0-???足?? 1-???? 2-?足??
	BYTE  bySnowResult;  ///< ???迄?????足???芍????0-???足?? 1-???? 2-?足??
	BYTE  byStreakResult;  ///< ?????????足???芍????0-???足?? 1-???? 2-?足??
	BYTE  byFreezeResult;  ///< ???????芍?足???芍????0-???足?? 1-???? 2-?足??
	BYTE  byPTZResult;  ///< ???“?足???芍????0-???足?? 1-???? 2-?足??
	BYTE  byContrastResult;     //??㊣????足???足???芍????0-???足????1-??????2-?足??
	BYTE  byMonoResult;         //??∼℅?????足???芍????0-???足????1-??????2-?足??
	BYTE  byShakeResult;        //?????????足???芍????0-???足????1-??????2-?足??
	char  sSNapShotURL[256];    ///<????URL???﹞
	BYTE  byFlashResult;        //??????㊣??足???芍????0-???足????1-??????2-?足??
	BYTE  byCoverResult;        //?????????足???芍????0-???足????1-??????2-?足??
	BYTE  bySceneResult;        //???∼㊣??邦?足???芍????0-???足????1-??????2-?足??
	BYTE  byDarkResult;         //??????∼??足???芍????0-???足????1-??????2-?足??
	BYTE  byStreamType;        //???‾?角????0-???∫??1-??????2-?迆㊣那?角????3-﹞??迆㊣那?角??
	BYTE  byRes2[59];
}NET_DVR_DIAGNOSIS_UPLOAD, *LPNET_DVR_DIAGNOSIS_UPLOAD;

typedef struct tagNET_DVR_DOWN_LOAD_REQUEST   ///< ?????????芍???????“﹞?????????﹞????‾??
{
	NET_DVR_STREAM_INFO  struStreamInfo;
	char   sSnapShotURL[256];  ///< ????℅???URL???∟??????256??℅???    
	BYTE   byRes[32];
}NET_DVR_DOWN_LOAD_REQUEST, *LPNET_DVR_DOWN_LOAD_REQUEST;

typedef struct tagNET_DVR_VQD_RESULT_INFO  ///< ?????????芍????????﹞????‾﹞????????“??
{
	DWORD  dwSize;
	char   sStreamID[32];     ///<?‾ID(?角????ID)???∟??????32??℅???
	DWORD  dwPicLength;  ///?????∟??
	BYTE   byStatus;     ///< ?豕???芍??:0-????,1-???????車??2-????????????3-?????????∫∼?
	BYTE   byRes[31];
	char   *pSnapShot;      ///< ????℅??????????谷????????????(700k)
}NET_DVR_VQD_RESULT_INFO, *LPNET_DVR_VQD_RESULT_INFO;

typedef struct tagNET_DVR_PLAN_VQD_CFG
{
	DWORD   dwSize;
	BYTE    sPlanID[PLAN_ID_LEN];    ///< ????id???∟??????32??℅???
	NET_DVR_SCHEDTIME  struDetectTime[MAX_DAYS][MAX_TIMESEGMENT_V30];    ///< ?足???㊣?? 
	BYTE    byPlanMode;  ///0:???㊣??????1:????????
	BYTE    byRes1;//     
	BYTE    byCheckFlag;  ///< ??﹞??足????0-???足????1-?足??
	BYTE    bySignal;  ///<???????∫ ??﹞??足????0-???足????1-?足??
	BYTE    byBlur;  ///< ???????? ??﹞??足????0-???足????1-?足??
	BYTE    byLuma;  ///< ??????????﹞??足????0-???足????1-?足??
	BYTE    byChroma;  ///< ?????足?? ??﹞??足????0-???足????1-?足??
	BYTE    bySnow;  ///<???迄???? ??﹞??足????0-???足????1-?足??
	BYTE    byStreak;  ///<???????? ??﹞??足????0-???足????1-?足??
	BYTE    byFreeze;  ///<???????芍??﹞??足????0-???足????1-?足??
	BYTE    byPTZ;  ///<???“??﹞??足????0-???足????1-?足??
	BYTE    byEnablePlanRound;  ///???????﹞??﹞?????
	BYTE    byContrast;  //??㊣????足????﹞??足????0-???足????1-?足??
	BYTE    byMono;      //??∼℅??????﹞??足????0-???足????1-?足??
	BYTE    byShake;     //??????????﹞??足????0-???足????1-?足??
	BYTE    byFlash;     //??????㊣???﹞??足????0-???足????1-?足??
	BYTE    byCover;     //??????????﹞??足????0-???足????1-?足??
	BYTE    byScene;     //???∼㊣??邦??﹞??足????0-???足????1-?足??
	BYTE    byDark;      //??????∼???﹞??足????0-???足????1-?足??
	BYTE    byRes[13];
}NET_DVR_PLAN_VQD_CFG, *LPNET_DVR_PLAN_VQD_CFG;


typedef struct tagNET_DVR_TEST_SPOTCFG
{
	DWORD dwSize;
	BYTE  byStepCount;                //℅?????
	BYTE  byStepIndex;                //?㊣?∼??????
	BYTE  byRes[14];
}NET_DVR_TEST_SPOTCFG, *LPNET_DVR_TEST_SPOTCFG;

//????﹞?IPC??㊣赤
typedef enum tagNET_DVR_IPC_ENUM
{
	ENUM_BUSINESS_INVALID = -1,

	ENUM_BUSINESS_HIKVISION = 0,
	ENUM_BUSINESS_PANASONIC,
	ENUM_BUSINESS_SONY,
	ENUM_BUSINESS_AXIS,
	ENUM_BUSINESS_SANYO,
	ENUM_BUSINESS_BOSCH,
	ENUM_BUSINESS_ZAVIO,
	ENUM_BUSINESS_GRANDEYE,
	ENUM_BUSINESS_PROVIDEO,
	ENUM_BUSINESS_ARECONT, // 9 
	ENUM_BUSINESS_ACTI,
	ENUM_BUSINESS_PELCO,
	ENUM_BUSINESS_VIVOTEK,
	ENUM_BUSINESS_INFINOVA,
	ENUM_BUSINESS_DAHUA,    //14

	ENUM_BUSINESS_HIK_STD_H264 = 0x20,
	ENUM_BUSINESS_HIK_STD_MPEG4,
	ENUM_BUSINESS_SUNELL,    //?∼??
	ENUM_BUSINESS_ATEME,
	ENUM_BUSINESS_LAUNCH,    //????
	ENUM_BUSINESS_YAAN,    //??∼?
	ENUM_BUSINESS_BLUESKY,    //????????
	ENUM_BUSINESS_BLUESKYLIMIT,//????????LIMIT
	ENUM_BUSINESS_TDWY,            //?足???∼??
	ENUM_BUSINESS_HBGK,            //??∼?????
	ENUM_BUSINESS_SANTACHI,        //??????
	ENUM_BUSINESS_HIGHEASY,        //????
	ENUM_BUSINESS_SAMSUNG,

	ENUM_BUSINESS_URL_RTSP = 0x40,    /* url?角?????‾ */
	ENUM_BUSINESS_ONVIF,

	ENUM_MAX_BUSINESS_TYPE,    //℅??車?∫???角??
} NET_DVR_IPC_ENUM, *LPNET_DVR_IPC_ENUM;

//?車???????????車????﹞?IPC??㊣赤
typedef enum tagNET_DVR_IPC_ENUM_UNIFY
{
	ENUM_IPC_PROTOCOL_INVALID = -1,
	ENUM_IPC_PROTOCOL_HIKVISION = 0,  //????????
	ENUM_IPC_PROTOCOL_PANASONIC,     //????
	ENUM_IPC_PROTOCOL_SONY,          //?‾?芍

	ENUM_IPC_PROTOCOL_AXIS = 4,       //∼?????
	ENUM_IPC_PROTOCOL_SANYO,         //???車
	ENUM_IPC_PROTOCOL_BOSCH,         //????  
	ENUM_IPC_PROTOCOL_ZAVIO,         //ZAVIO  
	ENUM_IPC_PROTOCOL_GRANDEYE,      //GRANDEYE
	ENUM_IPC_PROTOCOL_PROVIDEO,      //????
	ENUM_IPC_PROTOCOL_ARECONT,       //∼???????
	ENUM_IPC_PROTOCOL_ACTI,          //?車???“
	ENUM_IPC_PROTOCOL_PELCO,         //?????? 
	ENUM_IPC_PROTOCOL_VIVOTEK,       //?∫???“??
	ENUM_IPC_PROTOCOL_DAHUA,         //?車??
	ENUM_IPC_PROTOCOL_SAMSUNG,       //????

	ENUM_IPC_PROTOCOL_PSIA = 17,      //PSIA
	ENUM_IPC_PROTOCOL_ONVIF,         //ONVIF
	ENUM_IPC_PROTOCOL_BRICKCOM,      //??℅??“??
	ENUM_IPC_PROTOCOL_GB28181,       //GB28181

	ENUM_IPC_PROTOCOL_CANON = 23,    //????

	ENUM_IPC_PROTOCOL_HUINT = 32,      //HUINT
	ENUM_IPC_PROTOCOL_INFINOVA,       //??﹞???
	ENUM_IPC_PROTOCOL_HIK_STD_H264,    //????㊣那℅?264
	ENUM_IPC_PROTOCOL_HIK_STD_MPEG4,  //????㊣那℅?MPEG4
	ENUM_IPC_PROTOCOL_SUNELL,         //?∼??
	ENUM_IPC_PROTOCOL_ATEME,          //∼????﹞
	ENUM_IPC_PROTOCOL_LAUNCH,         //????
	ENUM_IPC_PROTOCOL_YAAN,                //??∼?
	ENUM_IPC_PROTOCOL_BLUESKY,            //????????
	ENUM_IPC_PROTOCOL_BLUESKYLIMIT,    //????????LIMIT
	ENUM_IPC_PROTOCOL_TDWY,           //?足???∼??
	ENUM_IPC_PROTOCOL_HBGK,            //??∼?????
	ENUM_IPC_PROTOCOL_SANTACHI,            //??????
	ENUM_IPC_PROTOCOL_HIGHEASY,            //????
	ENUM_IPC_PROTOCOL_HANBANG,         //??∼?????
	ENUM_IPC_PROTOCOL_SAMSUNG_3120,    //????3120
	ENUM_IPC_PROTOCOL_SAMSUNG_3080,    //????3080
	ENUM_IPC_PROTOCOL_SAMSUNG_2000,     //????2000
	ENUM_IPC_PROTOCOL_SAMSUNG_5200,    //????5200
	ENUM_IPC_PROTOCOL_JINGYUAN,        //????
	ENUM_IPC_PROTOCOL_VIDEOTREC,       //????????
	ENUM_IPC_PROTOCOL_CHENOVA,            //??????﹞芍
	ENUM_IPC_PROTOCOL_FENGHUO,         //﹞谷??
	ENUM_IPC_PROTOCOL_ZB_5301,         //????㊣???5301
	ENUM_IPC_PROTOCOL_ZB_5401,         //????㊣???5401
	ENUM_IPC_PROTOCOL_HAIXIN,            //????
	ENUM_IPC_PROTOCOL_ZHONGYINGXIN,    //??????
	ENUM_IPC_PROTOCOL_AVUN,            //????∼???
	ENUM_IPC_PROTOCOL_GOVTY,           //????????
	ENUM_IPC_PROTOCOL_SAE,                //∼?????
	ENUM_IPC_PROTOCOL_DONGFANGWANGLI,   //??﹞?????
	ENUM_IPC_PROTOCOL_CHANGHONG,        //?∟??
	ENUM_IPC_PROTOCOL_H3C,                //????
	ENUM_IPC_PROTOCOL_BAIAN,           //∼?∼?
	ENUM_IPC_PROTOCOL_HAT,                //??∼???
	ENUM_IPC_PROTOCOL_YUANYE,            //????
	ENUM_IPC_PROTOCOL_HIKCARD,            //????∼??“
	ENUM_IPC_PROTOCOL_HAIXINCAP,       //????℅????迆
	ENUM_IPC_PROTOCOL_WENANCAP,        //??∼?℅????迆
	ENUM_IPC_PROTOCOL_XUNMEI,            //????
	ENUM_IPC_PROTOCOL_BAIWO,            //∼???
	ENUM_IPC_PROTOCOL_APD,                //∼?????
	ENUM_IPC_PROTOCOL_REACHDEV,        //????
	ENUM_IPC_PROTOCOL_XUNMEI_DAHUA,    //?????車??OEM
	ENUM_IPC_PROTOCOL_HUANGHE,            //?????豕㊣?
	ENUM_IPC_PROTOCOL_LIANCHEN,        //???﹞
	ENUM_IPC_PROTOCOL_CHENGYE,            //????
	ENUM_IPC_PROTOCOL_VISIONDIGI,      //????
	ENUM_IPC_PROTOCOL_HENGHE,          //????
	ENUM_IPC_PROTOCOL_KODAK,           //????
	ENUM_IPC_PROTOCOL_AIRONIX,          //∼??芍????
	ENUM_IPC_PROTOCOL_LG,               //????
	ENUM_IPC_PROTOCOL_HASEE,          //????
	ENUM_IPC_PROTOCOL_8000ME,          //8000ME
	ENUM_IPC_PROTOCOL_POVITEL,         //???足????
	ENUM_IPC_PROTOCOL_YIVIEW,           //????
	ENUM_IPC_PROTOCOL_TIANYUE,         //?足??
	ENUM_IPC_PROTOCOL_HOWELL,          //????
	ENUM_IPC_PROTOCOL_WAPA,             //?“??
	ENUM_IPC_PROTOCOL_SANLE,           //????
	ENUM_IPC_PROTOCOL_HIKCARD_ENCRYPTION,      //????????∼??“
	ENUM_IPC_PROTOCOL_JUNSDA,          //??????
	ENUM_IPC_PROTOCOL_LIYUAN,          //????
	ENUM_IPC_PROTOCOL_XINCHAN,         //???迆
	ENUM_IPC_PROTOCOL_BITE,            //㊣???
	ENUM_IPC_PROTOCOL_MEIAN,            //??∼?
	ENUM_IPC_PROTOCOL_ROSEEK,           //????
	ENUM_IPC_PROTOCOL_AEBELL,          //????㊣???
	ENUM_IPC_PROTOCOL_JSL_ST,          //??????ST
	ENUM_IPC_PROTOCOL_VIMICRO,          //????????℅?
	ENUM_IPC_PROTOCOL_UNIVIEW,          //????

	ENUM_IPC_PROTOCOL_TYPE,    //℅??車?∫???角??
}NET_DVR_IPC_ENUM_UNIFY, *LPNET_DVR_IPC_ENUM_UNIFY;



typedef struct tagNET_DVR_MRD_SEARCH_PARAM
{
	DWORD                dwSize;            // ?芍?????車??
	NET_DVR_STREAM_INFO    struStreamInfo;    // ?角????
	WORD                 wYear;              // ?那 
	BYTE                 byMonth;            // ??
	BYTE                byDrawFrame;    // 0-???谷?? 1-?谷??
	BYTE                byStreamType;   //0-?‾???‾ 1-℅????‾
	BYTE				byLocalOrUTC;  	//0-?豕㊣?㊣????㊣??  1-UTC
	BYTE                byRes[30];
}NET_DVR_MRD_SEARCH_PARAM, *LPNET_DVR_MRD_SEARCH_PARAM;

typedef struct tagNET_DVR_MRD_SEARCH_RESULT
{
	DWORD            dwSize;            // ?芍?????車??
	BYTE            byRecordDistribution[LEN_32];   // ????﹞?????byRecordDistribution[0]=1㊣赤??1????????????byRecordDistribution[0]=0㊣赤????????????
													//byRecordDistribution[1]㊣赤??2?????????角??
	BYTE            byHasEventRecode[LEN_31];            //???????? 0-????????????1-??????????
	BYTE            byRes;                        //㊣???
}NET_DVR_MRD_SEARCH_RESULT, *LPNET_DVR_MRD_SEARCH_RESULT;


typedef struct tagNET_DVR_ACCESS_DEVICE_INFO
{
	DWORD    dwSize;                        // ?芍?????車??
	BYTE     byGroup;                    // ℅谷??????℅谷?????? 64???“??????0????, 0㊣赤????1℅谷???????角??
	BYTE    byProType;                    //???谷?角????0-???????谷??1-???????谷??2-?‾?芍
	BYTE    byAccessMode;                //??????????0-IP???﹞??1-?辰??
	BYTE    byRes1;                        //㊣???℅???????0
	char    szUserName[NAME_LEN];        //???∫??
	char    szPassword[PASSWD_LEN];        //????
	char    szDomain[MAX_DOMAIN_NAME];    //?豕㊣??辰??
	NET_DVR_IPADDR struIP;                //IP???﹞
	WORD    wPort;                         // ??????
	BYTE    szGB28181DevID[DEV_ID_LEN]; //GB28181???谷?????㊣???豕㊣?﹞????‾ID
	BYTE    byRes2[2];                    //㊣???℅???????0
}NET_DVR_ACCESS_DEVICE_INFO, *LPNET_DVR_ACCESS_DEVICE_INFO;

typedef struct tagNET_DVR_ACCESS_DEVICE_CHANNEL_INFO
{
	DWORD    dwSize;    // ?芍?????車??
	DWORD    dwTotalChannelNum;      //?豕㊣?℅??“?????????豕㊣????????㊣﹞???0??byChannel???∫
	BYTE     byChannel[MAX_CHANNUM_V30];    /*byChannel[i]??0㊣赤?????“byGroup+1??*?“i-1???“??????????NVR??
											??1㊣赤?????“??????????NVR byGroup??NET_DVR_ACCESS_DEVICE_INFO??*/
	BYTE  byRes[32];           //㊣???
}NET_DVR_ACCESS_DEVICE_CHANNEL_INFO, *LPNET_DVR_ACCESS_DEVICE_CHANNEL_INFO;

typedef struct tagNET_DVR_PREVIEW_SWITCH_COND
{
	DWORD    dwSize; //℅谷??
	BYTE    byGroup; //℅谷??????℅谷??????64??????
	BYTE    byVideoOutType; /*?????????????角??,0-?‾CVBS,1-HDMI 2-VGA 3-?“?迆??????
							4-?“?迆?????? 5-?“?迆?????? 6-?“?迆??????, 7-?“?迆HDMI, 8-????HDMI1,
							9-????HDMI2, 10-????HDMI3, 11-????HDMI4, 12-﹞?????VGA1??
							13-﹞?????VGA2??14-﹞?????VGA3??15-﹞?????VGA4??16-????VGA, 17-?‾LCD,18-?“?迆VGA,19-?“?迆LCD*/
	BYTE    byGetDefaultPreviewSet;//??﹞??????∟?豕??0-﹞???1-???????????㊣??byPreviewNumber℅??????∫
	BYTE    byPreviewNumber;//?∟??????,0-1????,1-4????,2-9????,3-16????, 4-6????, 5-8????6-25????,7-32????, 8-36???? 0xfb-℅??“??﹞???4, 0xfc-℅??“??﹞???3, 0xfd-℅??“??﹞???2, 0xfe-℅??“??﹞???1,0xff:℅??車????
}NET_DVR_PREVIEW_SWITCH_COND, *LPNET_DVR_PREVIEW_SWITCH_COND;

typedef struct tagNET_DVR_PREVIEW_SWITCH_CFG
{
	DWORD    dwSize;    // ∼?㊣????赤?∼?芍?????車??
	WORD    wSwitchSeq[MAX_WINDOW_V40];/*bySwitchSeq [i]=6??㊣赤?????“℅谷??*64+i+1?????∼??
									   ???????迄?“??????0xff㊣赤?????∼????????*/
	BYTE    byPreviewNumber;/*?∟??????,0-1????,1-4????,2-9????,3-16????, 4-6????, 5-8??????6-25????,7-32????, 8-36????, 9-64????
							0xff:℅??車????*/
	BYTE    byEnableAudio;//??﹞??迄???∟??,0-???∟??,1-?∟??
	BYTE    bySwitchTime;//?????㊣??,0-??????,1-5s,2-10s,3-20s,4-30s, 5-60s 6-120s,7-300s
	BYTE    bySameSource; //??﹞????????㊣???????????角????﹞?????VGA1-﹞?????VGA4?㊣???∫ 
	BYTE    byRes[32];        //㊣???
}NET_DVR_PREVIEW_SWITCH_CFG, *LPNET_DVR_PREVIEW_SWITCH_CFG;

typedef struct tagNET_DVR_USER_COND
{
	char        szUserName[NAME_LEN];
	BYTE        byRes[48];
}NET_DVR_USER_COND, *LPNET_DVR_USER_COND;

typedef struct tagNET_DVR_USER_RIGHT_CFG
{
	DWORD            dwSize;
	BYTE            byAddMonitoringPointRight; // ?赤???角?????“?∼???豕㊣????“??0-?? 1-??
	BYTE            byModMonitoringPointRight; // ?????角?????“?∼???豕㊣????“??0-?? 1-??
	BYTE            byDelMonitoringPointRight; // ?赤???角?????“?∼???豕㊣????“??0-?? 1-??
	BYTE            bySetRecordPlanRight; // ???“?????????“??0-?? 1-??
	BYTE            byDelRecordPlanRight; // ?????????????“??0-?? 1-??
	BYTE            byEnableOrDisableRecordPlanRight; // ???????????????????“??0-?? 1-??
	BYTE            byManualRecordRight; // ???????????????????“??0-?? 1-??
	BYTE            bySetAlarmRecordRight; // ㊣“???????豕?“?“??0-?? 1-??
	BYTE            byRecordBackupRight; // ?????????“??0-?? 1-??
	BYTE            byRecordDownloadRight; // ?????????“??0-?? 1-??
	BYTE            byRecordDeleteRight; // ?????????“??0-?? 1-???“㊣?????
	BYTE            byDelBackupRecordRight; // ?????????????“??0-?? 1-???“㊣?????
	BYTE            bySetBackupVolumeRight; // ?豕???????赤?“??0-?? 1-??
	BYTE            byRecordPlayBackRight; // ??????﹞??“??0-?? 1-??
	BYTE            byLogDeleteRight; // ?????????“??0-?? 1-???“㊣?????
	BYTE            byLogDownloadRight; // ?????????“??0-?? 1-???“㊣?????
	BYTE            byAddUserRight; // ?赤?????∫?“??0-?? 1-??
	BYTE            byDelUserRight; // ???????∫?“??0-?? 1-??
	BYTE            byModUserRight; // ???????∫?“??0-?? 1-??
	BYTE            byAllocUserRight; // ???∫?“??﹞????“??0-?? 1-??
	BYTE            byRes[128];
}NET_DVR_USER_RIGHT_CFG, *LPNET_DVR_USER_RIGHT_CFG;

typedef struct tagNET_DVR_MACHINE_MAX_NUM_CFG
{
	DWORD                dwSize;
	DWORD               dwMaxNum;         // ℅??車㊣??迆????
	BYTE                   byRes[32];
}NET_DVR_MACHINE_MAX_NUM_CFG, *LPNETDVR_MACHINE_MAX_NUM_CFG;

//????N+1?豕㊣??∟℅‾?迆??????NVR?豕????????CVR???豕??
typedef struct tagNET_DVR_N_PLUS_ONE_WORK_MODE_CFG
{
	DWORD    dwSize;
	BYTE    byWorkMode;        //0-?∟℅‾?迆 1-㊣??迆
	BYTE    byRes[127];       //㊣???
}NET_DVR_N_PLUS_ONE_WORK_MODE_CFG, *LPNET_DVR_N_PLUS_ONE_WORK_MODE_CFG;

typedef struct tagNET_DVR_ADD_PARAM
{
	NET_DVR_IPADDR    struIP;        // ?豕㊣?IP
	char            szPassword[PASSWD_LEN];    //㊣??迆???????豕?辰?℅????
	BYTE             byAddType;         // 0-?“?∟℅‾?迆?????赤??㊣??迆??1-?“㊣??迆?????赤???∟℅‾?迆
	BYTE             byDisableBackup; //㊣?﹞????????????? 0-????1-??㊣? CVR????????
}NET_DVR_ADD_PARAM, *LPNET_DVR_ADD_PARAM;

typedef struct tagNET_DVR_DEL_PARAM
{
	NET_DVR_IPADDR    struIP;        // ?豕㊣?IP
	BYTE             byDelType;     // 0-???????“???迆?‾?“㊣??迆?辰?∟℅‾?迆??1-????
}NET_DVR_DEL_PARAM, *LPNET_DVR_DEL_PARAM;

typedef union tagNET_DVR_NPO_PARAM_UNION
{
	NET_DVR_ADD_PARAM    struAddParam;        //?赤??????
	NET_DVR_DEL_PARAM     struDelParam;        //????????
}NET_DVR_NPO_PARAM_UNION, *LPNET_DVR_NPO_PARAM_UNION;

// N+1?????豕㊣?????
typedef struct tagNET_DVR_N_PLUS_ONE_DEVICE_PARAM
{
	DWORD                    dwSize;
	NET_DVR_NPO_PARAM_UNION unionParam;
	BYTE                     byType;     /* 0-?赤????????unionParam????struAddParam 1-??????????unionParam????struDelParam  2-?赤???????∫???迆?∫??????unionParam????struAddParam ??szUserName*/
	BYTE                      byRes[3];
	char                        szUserName[NAME_LEN];    //???∫??
	BYTE                      byRes2[220];          // ㊣???
}NET_DVR_N_PLUS_ONE_DEVICE_PARAM, *LPNET_DVR_N_PLUS_ONE_DEVICE_PARAM;

// ???????“
typedef struct tagNET_DVR_DATA_CALLBACK_CFG
{
	DWORD                dwSize;
	BYTE                   byEnable;     // 0-?????????????“ 1-???????????“
	BYTE                   byDelData;     // ?㊣byEnable??1?????∫ 0-??????㊣??迆???????? 1-????㊣??迆????????
	BYTE                   byRes[30];
}NET_DVR_DATA_CALLBACK_CFG, *LPNET_DVR_DATA_CALLBACK_CFG;

typedef struct tagNET_DVR_HD_STATUS
{
	DWORD     dwSize;
	BYTE     bySleepStatus;/*????℅???0-?????? 1-????*/
	BYTE      byRes[127];
}NET_DVR_HD_STATUS, *LPNET_DVR_HD_STATUS;

typedef struct tagNET_DVR_RAID_BTS_CFG
{
	DWORD     dwSize;
	BYTE     bySpeed;    /*0-???? 1-???? 2-????*/
	BYTE      byRes[127];
}NET_DVR_RAID_BTS_CFG, *LPNET_DVR_RAID_BTS_CFG;

typedef struct tagNET_DVR_LUN_CLONE
{
	DWORD                dwSize;
	DWORD                dwSrcLunID;        // ??LUN ID
	DWORD               dwDstLunID;     // ????LUN ID
	BYTE                   byRes[32];
}NET_DVR_LUN_CLONE, *LPNET_DVR_LUN_CLONE;

typedef struct tagNET_DVR_LUN_EXPAND
{
	DWORD                dwSize;
	DWORD                dwLunID;                    // LUN ID
	DWORD                dwHSize;                    // ???????車????32??
	DWORD                dwLSize;                    // ???????車????32??
	char                szArrayIDGroup[NAME_LEN];    // ???????車??ID℅谷???????????????????辰??????
	char                   szNewLunName[MAX_NAMELEN];     // ??LUN??
	BYTE                   byRes[32];
}NET_DVR_LUN_EXPAND, *LPNET_DVR_LUN_EXPAND;


typedef struct tagNET_DVR_DVR_NET_DISK_MODIFY
{
	DWORD                dwSize;
	char                szOldDvrNetDiskName[MAX_NAMELEN];        // ??DVR???????赤??
	char                   szNewDvrNetDiskName[MAX_NAMELEN];     // ??DVR???????赤??
	NET_DVR_IPADDR        struWarrantIP;                        // ?????“??DVR????IP
	BYTE                   byRes[32];
}NET_DVR_DVR_NET_DISK_MODIFY, *LPNET_DVR_DVR_NET_DISK_MODIFY;


typedef struct tagNET_DVR_NAS_PARAM
{
	DWORD                dwSize;
	DWORD                dwLunID;        // LUN ID
	BYTE                   byRes[32];
}NET_DVR_NAS_PARAM, *LPNET_DVR_NAS_PARAM;

typedef struct tagNET_DVR_ISCSI_PARAM
{
	DWORD                dwSize;
	DWORD                dwTargetID;        // iSCSI﹞?????Target ID
	DWORD                dwLunID;        // LUN ID
	DWORD                dwAccessMode;    //????﹞??? 0-???? 1-???????? 2-???? 3-????????;
	NET_DVR_IPADDR        struClientIP;        // ???∫??IP??0.0.0.0???迄??IP
	BYTE                   byRes[32];
}NET_DVR_ISCSI_PARAM, *LPNET_DVR_ISCSI_PARAM;

typedef struct tagNET_DVR_FC_PARAM
{
	DWORD                dwSize;
	DWORD                dwStoreLunID;                    // ????LUN ID
	DWORD                dwLogicLunID;                    // ????LUN ID??-1㊣赤??℅????迆??
	DWORD                dwHbaID;                        // ?????“????
	DWORD                dwAccessMode;                    //????﹞??? 0-???? 1-???????? 2-???? 3-????????;
	char                szClientWWWPN[NAME_LEN];         // ???∫?????“
	BYTE                   byRes[32];
}NET_DVR_FC_PARAM, *LPNET_DVR_FC_PARAM;


// ?????赤 60℅???
typedef struct tagNET_DVR_LUN_PARAM
{
	DWORD        dwHCapacity;    // ?????赤?車????32??
	DWORD        dwLCapacity;    // ?????赤?車????32??
	char        szName[MAX_NAMELEN];     // ?????赤????
	DWORD        dwBlockSize;        // ?????赤??℅????????????谷?車??
	char        szArrayIDGroup[NAME_LEN];     //???????車??ID℅谷???????????????????辰?????????車??
}NET_DVR_LUN_PARAM, *LPNET_DVR_LUN_PARAM;

typedef struct tagNET_DVR_DVR_PARAM_
{
	DWORD            dwHCapacity;    // DVR?????車????32??
	DWORD            dwLCapacity;    // DVR?????車????32??
	char                szName[MAX_NAMELEN];     // DVR????????
	DWORD            dwBlockSize;        // ?????赤??℅????????????谷?車??
	NET_DVR_IPADDR    struWarrantIP;        // ???“??DVR????IP
	char            szArrayIDGroup[NAME_LEN];     //???????車??ID℅谷???????????????????辰?????????車??
}NET_DVR_DVR_PARAM, *LPNET_DVR_DVR_PARAM;

typedef union tagNET_DVR_VD_UNION
{
	BYTE                        byUnionLen[256];      // ???????車??
	NET_DVR_OPERATE_VD_PARAM    struHikVDParam;        // ?谷??????
	NET_DVR_LUN_PARAM            struLunParam;            // ?????赤
	NET_DVR_DVR_PARAM            struDvrParam;            // DVR????
}NET_DVR_VD_UNION, *LPNET_DVR_VD_UNION;

typedef struct tagNET_DVR_OPERATE_VD_PARAM_EX
{
	BYTE                byVDType;    //?谷???????角????0-?????谷?????? 1-?????赤 2-DVR????
	BYTE                byRes1[3];
	NET_DVR_VD_UNION     uVDParam;
	BYTE                byRes2[32];
}NET_DVR_OPERATE_VD_PARAM_EX, *LPNET_DVR_OPERATE_VD_PARAM_EX;

typedef struct tagNET_DVR_CVR_ALARM
{
	char            szFirstType[NAME_LEN];  //?‾?角????????????
	char            szFirstIndex[NAME_LEN];    //?‾?角??㊣角??
	char            szSecondType[NAME_LEN];    //???角????????????
	NET_DVR_TIME    struTime;        //㊣“???㊣??
	BYTE             byStatus;       //℅??? 0-???? ﹞?0-?????????????角????㊣赤????????????????㊣赤
	BYTE            byAlarmLevel;         //㊣“????㊣?
	BYTE            byRes1[2];
	char               szSecondIndex[NAME_LEN];  //???角??㊣角????????????
	char            szThirdType[NAME_LEN];  //?????角????????????
	char            szThirdIndex[NAME_LEN];    //?????角??㊣角??
	char            szFourthType[NAME_LEN];  //?????角????????????
	char            szFourthIndex[NAME_LEN];    //?????角??㊣角??
	BYTE              byRes2[92];  //㊣???
}NET_DVR_CVR_ALARM, *LPNET_DVR_CVR_ALARM;

typedef struct tagNET_DVR_WORKING_DEVICE_INFO
{
	NET_DVR_IPADDR    struIP;            //?豕㊣?IP
	BYTE             byLinkStatus; //????℅??? 0-?????∫∼?1-????????
	BYTE             byWorkStatus; //?∟℅‾℅??? 0-????1-?足??
	BYTE             byBacupStatus; //㊣?﹞?℅???0-????㊣?﹞?1-????㊣?﹞?
	BYTE             bySyncProgress; //??????????????0㊣赤??????????100㊣赤???????那??
	NET_DVR_TIME_EX    struSyncBeginTime;    //?????????㊣??
	NET_DVR_TIME_EX    struSyncEndTime;        //?????芍???㊣
	char            szSerialNumber[SERIALNO_LEN]; //?豕㊣??辰????
	DWORD            dwSoftwareVersion;        //?豕㊣??赤??∼?㊣?
	BYTE              byWorkingDeviceGUID[GUID_LEN]; //?∟℅‾?迆GUID??﹞?℅?﹞?????????㊣??迆?????‾?∟℅‾?迆????
	char            szDevTypeName[DEV_TYPE_NAME_LEN];        //?豕㊣??角??????
	WORD            wDevType;        //?豕㊣??角????
}NET_DVR_WORKING_DEVICE_INFO, *LPNET_DVR_WORKING_DEVICE_INFO;

typedef struct tagNET_DVR_REDUNDANT_DEVICE_INFO
{
	NET_DVR_IPADDR    struIP;            //?豕㊣?IP
	BYTE             byWorkStatus;     //?∟℅‾℅??? 0-????1-?足??
	BYTE             byBackupStatus; //㊣?﹞?℅???0-?????角?? 1-?????角??2-????㊣?﹞???2-????????
	WORD            wBackupPort;    //㊣?﹞?????
}NET_DVR_REDUNDANT_DEVICE_INFO, *LPNET_DVR_REDUNDANT_DEVICE_INFO;

typedef struct tagNET_DVR_WORKING_DEVICE_INFO_V50
{
	NET_DVR_WORKING_DEVICE_INFO        struWorkingDeviceInfo;        //?∟℅‾?迆????
	char            szUserName[NAME_LEN];    //???∫??
	BYTE           byRes[32];
}NET_DVR_WORKING_DEVICE_INFO_V50, *LPNET_DVR_WORKING_DEVICE_INFO_V50;

typedef struct tagNET_DVR_REDUNDANT_DEVICE_INFO_V50
{
	NET_DVR_REDUNDANT_DEVICE_INFO    struRedundantDeviceInfo;     //㊣??迆????
	char            szUserName[NAME_LEN];    //???∫??
	BYTE           byRes[32];
}NET_DVR_REDUNDANT_DEVICE_INFO_V50, *LPNET_DVR_REDUNDANT_DEVICE_INFO_V50;

typedef union tagNET_DVR_NPO_DEV_INFO_UNION
{
	BYTE                             byUnionLen[512];            //???????∟??
	NET_DVR_WORKING_DEVICE_INFO        struWorkingDeviceInfo;        //?∟℅‾?迆????
	NET_DVR_REDUNDANT_DEVICE_INFO    struRedundantDeviceInfo;     //㊣??迆????
	NET_DVR_WORKING_DEVICE_INFO_V50      struWorkingDeviceInfoV50;        //?∟℅‾?迆????V50
	NET_DVR_REDUNDANT_DEVICE_INFO_V50    struRedundantDeviceInfoV50;     //㊣??迆????V50
}NET_DVR_NPO_DEV_INFO_UNION, *LPNET_DVR_NPO_DEV_INFO_UNION;


typedef struct tagNET_DVR_N_PLUS_ONE_DEVICE_INFO
{
	DWORD                        dwSize;
	NET_DVR_NPO_DEV_INFO_UNION    unionDevInfo;
	BYTE                        byType;    /*?角?? 0-?∟℅‾?迆??????unionDevInfo????struWorkingDeviceInfo     1-㊣??迆??????unionDevInfo????struRedundantDeviceInfo
										   2-?∟℅‾?迆V50??????unionDevInfo????struWorkingDeviceInfoV50     3-㊣??迆V50??????unionDevInfo????struRedundantDeviceInfoV50*/
	BYTE                           byRes[127];
}NET_DVR_N_PLUS_ONE_DEVICE_INFO, *LPNET_DVR_N_PLUS_ONE_DEVICE_INFO;

//ipc????????
typedef struct tagNET_DVR_UPGRADE_IPC_PARAM
{
	NET_DVR_STREAM_INFO    struStreamInfo[MAX_CHANNUM_V30];    // 64???角????
	char                  szFileName[260];                    // ??????????
}NET_DVR_UPGRADE_IPC_PARAM, *LPNET_DVR_UPGRADE_IPC_PARAM;


typedef struct tagNET_DVR_UPGRADE_IPC_ERR_INFO_SINGLE
{
	NET_DVR_STREAM_INFO    struStreamInfo;     //?角????
	WORD                wErrCode;            //?????赤?車??
	BYTE                byRes[30];          //㊣???
}NET_DVR_UPGRADE_IPC_ERR_INFO_SINGLE, *LPNET_DVR_UPGRADE_IPC_ERR_INFO_SINGLE;

typedef struct tagNET_DVR_UPGRADE_IPC_ERR_INFO
{
	NET_DVR_UPGRADE_IPC_ERR_INFO_SINGLE struErrInfoSingle[MAX_CHANNUM_V30];
}NET_DVR_UPGRADE_IPC_ERR_INFO, *LPNET_DVR_UPGRADE_IPC_ERR_INFO;

//IPC????????????
typedef struct tagNET_DVR_IPC_CFG_FILE_PARAM
{
	char          szFileName[260];                    // ??????????
	BYTE        byRes[32];
}NET_DVR_IPC_CFG_FILE_PARAM, *LPNET_DVR_IPC_CFG_FILE_PARAM;

typedef struct tagNET_DVR_IPC_CFG_FILE_ERR_INFO_SINGLE
{
	WORD     wRow;       //???赤??????0㊣赤???????赤??1㊣赤????1?????赤???????角??
	WORD    wErrCode;    //?赤?車??
	BYTE    byRes[32];
}NET_DVR_IPC_CFG_FILE_ERR_INFO_SINGLE, *LPNET_DVR_IPC_CFG_FILE_ERR_INFO_SINGLE;

typedef struct tagNET_DVR_IPC_CFG_FILE_ERR_INFO
{
	NET_DVR_IPC_CFG_FILE_ERR_INFO_SINGLE     struErrInfoSingle[MAX_CHANNUM_V30];
}NET_DVR_IPC_CFG_FILE_ERR_INFO, *LPNET_DVR_IPC_CFG_FILE_ERR_INFO;

typedef struct tagNET_DVR_TRANSFER_SWITCH
{
	DWORD dwEnable;
	BYTE  byRes[64];
}NET_DVR_TRANSFER_SWITCH, *LPNET_DVR_TRANSFER_SWITCH;

typedef struct tagNET_DVR_PTZ_PATTERN
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	DWORD dwPatternCmd; //???“?足????℅‾?邦????,?那???????“??
	DWORD dwPatternID; //???“?足??ID?“?????迄???足???㊣???∫??
	BYTE  byRes[64];
}NET_DVR_PTZ_PATTERN, *LPNET_DVR_PTZ_PATTERN;

typedef struct tagNET_DVR_PTZ_PARKACTION_CFG
{
	DWORD dwSize;
	BYTE  byEnable; //??﹞???????0-????????1-????
	BYTE  byOneTouchSwitch;//???邦????, 0-????????1-???? (??wActionType℅谷??????)
	BYTE  byRes1[2];
	DWORD dwParkTime; //?????????㊣????????s 
	WORD  wActionType; //??????℅‾?角????0-℅????“?豕??1-???“?豕??2-???迆?“?豕??3-?????“?豕??4-?“?迄?“?豕??5-?∟??????6-???∼?“?豕??7-???㊣?“?豕, 8-???辰?“?豕
	WORD  wID; //ID???“?????“?豕???∟???????“?迄?“?豕??ID??
	BYTE  byRes[128];
}NET_DVR_PTZ_PARKACTION_CFG, *LPNET_DVR_PTZ_PARKACTION_CFG;

typedef struct tagNET_DVR_PTZ_MANUALTRACE
{
	DWORD  dwSize;
	DWORD  dwChannel; //?“????
	NET_VCA_POINT struPoint; //?“??℅?㊣那
	BYTE byTrackType; //?迆℅??角??0??﹞?℅??????∟(???“???∟) 1?????????﹞?迆℅? 2?????????﹞?迆℅??“?????迆℅????∟??3?????????∟
	BYTE byLinkageType;//??????℅‾: 0-?????迆℅? 1-???????迆℅?
	BYTE byRes[2];
	NET_VCA_POINT struPointEnd;/*?“??℅?㊣那????*/
	NET_DVR_TIME_V30 struTime;//?????迆℅??“?????㊣?∼?㊣????
	DWORD  dwSerialNo;//?辰????
	BYTE   byRes1[36];
}NET_DVR_PTZ_MANUALTRACE, *LPNET_DVR_PTZ_MANUALTRACE;

typedef enum tagVQD_TYPE
{
	VQD_BLUR_FLAG = 0x00000001,    //????????
	VQD_LUMA_FLAG = 0x00000002,//?????足??
	VQD_CHROMA_FLAG = 0x00000004,//????????
	VQD_SNOW_FLAG = 0x00000008,//???“????
	VQD_STREAK_FLAG = 0x00000010,//????????
	VQD_FREEZE_FLAG = 0x00000020,//???????芍
	VQD_SIGLOSE_FLAG = 0x00000040,//???????∫
	VQD_PTZ_FLAG = 0x00000080//???“?∫??
}VQD_TYPE;

typedef struct tagNET_DVR_VQD_LOOP_DIAGNOSE_CFG
{
	DWORD  dwSize;        //?芍?????車??
	BYTE    byEnable;        // ???????? 0 :??㊣??????? 1:????
	BYTE     byRes1[3];     //㊣???
	BYTE    byVQDTypeEnable[32];     //VQD??????????0 --?????? 1--????  ?????????角?????????谷???????谷????????㊣那???????角??????㊣那????
									 /*??℅谷0 ????????     ??℅谷1 ?????足?? ??℅谷2 ????????*/
									 /*??℅谷3 ???“????     ??℅谷4 ???????? ??℅谷5 ???????芍*/
									 /*??℅谷6 ???????∫     ??℅谷7 ???“?∫??*/
	BYTE byThresholdValue[32];       //????0~100?????????????????‾℅???????????
	NET_DVR_HANDLEEXCEPTION_V40      struAlarmHandleType;   //㊣“?????赤﹞???
	NET_DVR_SCHEDTIME   struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];
	NET_DVR_SCHEDTIME   struHolidayAlarmTime[MAX_TIMESEGMENT_V30];  //??????﹞??㊣???? 
	BYTE    byRes[324];      //㊣???
}NET_DVR_VQD_LOOP_DIAGNOSE_CFG, *LPNET_DVR_VQD_LOOP_DIAGNOSE_CFG;


typedef struct tagNET_DVR_VQD_DIAGNOSE_EXCEPTION_INFO
{
	DWORD  dwChannelNO;   //?“????
	DWORD  dwVQDType;     // VQD?????角??    
	NET_DVR_TIME struDiagnoseTime;    //?????㊣??
	BYTE     byScoreValue;       //﹞????? ??∼?﹞???
	BYTE     byRes[27];
}NET_DVR_VQD_DIAGNOSE_EXCEPTION_INFO, *LPNET_DVR_VQD_DIAGNOSE_EXCEPTION_INFO;


typedef struct tagNET_DVR_VQD_DIAGNOSE_INFO
{
	DWORD  dwSize;        //?芍?????車??
	NET_DVR_VQD_DIAGNOSE_EXCEPTION_INFO  struVQDDiagnoseExceptionInfo; //?????足???????芍????
}NET_DVR_VQD_DIAGNOSE_INFO, *LPNET_DVR_VQD_DIAGNOSE_INFO;

typedef struct tagNET_DVR_DEC_RESOURCE_LIST
{
	DWORD dwSize;
	BYTE  byDecStatus[MAX_SUBSYSTEM_NUM_V40/*120*/];
	//????℅???℅?????㊣赤??byDecStatus[i]㊣赤????????i??℅?????℅?????0-???∫??1-??????2-???“????(∼邦?“???“???????????車???‾????)??3-????????
	BYTE  byRes[32];
}NET_DVR_DEC_RESOURCE_LIST, *LPNET_DVR_DEC_RESOURCE_LIST;

typedef struct tagNET_DVR_DEC_APPLICANT_INFO
{
	DWORD dwSize;
	DWORD dwDecResource; /*?那????????℅???????﹞?㊣?????????0-DCIF 1-CIF, 2-QCIF, 3-4CIF, 4-2CIF 5?“㊣?????,
						 6-QVGA(320*240), 7-QQVGA(160*120), 16-VGA?“640*480??, 17-UXGA?“1600*1200??, 18-SVGA ?“800*600??,
						 19-HD720p?“1280*720??,20-XVGA,  21-HD900p, 27-HD1080i, 28-2560*1920, 29-1600*304, 30-2048*1536,
						 31-2448*2048,32-2448*1200,33-2448*800,34-XGA?“1024*768????35-SXGA?“1280*1024??,36-WD1(960*576/960*480),
						 37-1080i,38-WXGA(1440*900),39-HD_F(1920*1080/1280*720),40-HD_H(1920*540/1280*360),41-HD_Q(960*540/630*360)*/
	DWORD  dwChannel; //?????“????
	NET_DVR_IPADDR  struIP;   //?那????IP
	WORD  wPort;         //?那??????????(????﹞??????“??????)
	BYTE  byRes[18];
}NET_DVR_DEC_APPLICANT_INFO, *LPNET_DVR_DEC_APPLICANT_INFO;

typedef struct tagNET_DVR_DEC_RESOURCE_INFO
{
	DWORD dwSize;
	DWORD dwSlotNum;  //??????????????℅???﹞?????℅?????????????℅????????谷??
	NET_DVR_IPADDR struIP; //????℅?????IP???﹞
	WORD  wPort;      //??????
	BYTE  byRes1[2];
	DWORD dwDecChan;  //?????“????
	BYTE  sUserName[NAME_LEN];    /* ????℅????????????? */
	BYTE  sPassword[PASSWD_LEN];    /* ????℅????????????? */
	BYTE  byRes2[32];
}NET_DVR_DEC_RESOURCE_INFO, *LPNET_DVR_DEC_RESOURCE_INFO;

typedef struct tagNET_DVR_DEC_CHAN_COND
{
	DWORD dwSize;
	DWORD dwSlotNum; //??????,???那??????℅????㊣﹞???????????
	DWORD dwDecChan; //?????“????
	BYTE  byRes[16];
}NET_DVR_DEC_CHAN_COND, *LPNET_DVR_DEC_CHAN_COND;

typedef struct tagNET_DVR_DEC_YUV_CFG
{
	DWORD dwSize;
	BYTE  byEnable;     //??????????0-????????1-????
	BYTE  byRes1[3];
	//byEnable = 1?㊣???????????∫
	DWORD dwYUVAddress[3]; //YUV???????﹞
	WORD  wWidth;       //YUV?????赤
	WORD  wHeight;      //YUV??????
	BYTE  byEnableAudio;  //??????????0-????????1-????
	BYTE  byRes2[3];
	DWORD dwAudioAddr;  //???????????﹞
	BYTE  byRes3[16];
}NET_DVR_DEC_YUV_CFG, *LPNET_DVR_DEC_YUV_CFG;

typedef struct tagNET_DVR_INPUT_INFO
{
	DWORD        dwSize;
	BYTE        byChanType;        //?????角????1-㊣??????????“????2-㊣??????????“????3-485?“????4-?????“??
	BYTE        byRes1[3];
	DWORD        dwChanNo;        //?“???????豕㊣??“???????∫??byChanType?迄???角??
	DWORD        dwSubChanNo;    //????????485??????????byChanType??3-485?“???㊣???∫??㊣赤???“????????℅??“????
	DWORD        dwVariableNo;    //㊣???㊣角?????㊣byChanType??2-㊣??????????“???㊣(1-??????2-????)
	BYTE        byRemoteType;    //????㊣????角????0-?????角????1-??????2-????
	BYTE        byLinkageIPCType;   //????IPC?????角????0-??????1-∼?㊣???????????2-∼??“????????
	BYTE        byLinkageTriggerType;   //??????﹞??‾?????角????0-??????1-∼?㊣???????????2-∼??“????????
	BYTE        byRes2[57];
}NET_DVR_INPUT_INFO, *LPNET_DVR_INPUT_INFO;

typedef struct tagNET_DVR_ALARM_VARIABLE_CFG
{
	DWORD        dwSize;
	WORD        wVariableIndex;        //㊣???㊣角????????????
	WORD        wVariableType;        //㊣????角?? 1-?????? 2-????????????????
	BYTE        sDescribe[NAME_LEN];//㊣????豕??
	BYTE        byLimitLineType;    //㊣“???????????角????0-???∫??㊣“????????????1-???????????“????????????????2-??????????
	BYTE        byRemoteType;       //㊣????????????角????0-?????角????1-??????2????
	BYTE        byOsdEnabled;       //㊣?????﹞??∫??OSD????:0-??????1-?∫????2-???∫??
	BYTE        byRes[29];            //㊣???
}NET_DVR_ALARM_VARIABLE_CFG, *LPNET_DVR_ALARM_VARIABLE_CFG;


//???????????角??????
typedef struct tagNET_DVR_ALARM_SENSOR_POINT_CFG
{
	int           nMeasureHigh;            // ???????? ??????*1000???? ??????????
	int           nMeasureLow;            // ???????? ??????*1000????
	BYTE        byAlarmMode;            // ㊣“??????????????-HHHH??-HHHL??-HHLL??HLLL??-LLLL??
										// ????1111?“????????????1110?“????????????1100?“????????????1000(????????)??0000(????????)
	BYTE         byRes1[3];
	int            nAlarmValue[4];            // ㊣“????
	DWORD          dwOsdCfg;                // ??????℅?﹞???????∼???㊣赤??0-15?????????“??1-16
	DWORD        dwSensitive;            // ?谷????﹞??∫10~1000?????? float*1000?? ?谷????㊣赤???㊣???㊣????㊣????????谷??????﹞??∫?㊣???辰㊣赤?????㊣??﹞??迆??㊣?????﹞??辰????????﹞??迆㊣??????????谷??????0.1???辰㊣赤???∼?車?足???????????????車??0.1?㊣???辰????????﹞??迆㊣??????豕??????????????1???辰㊣赤??㊣???????1?㊣??㊣“??
	DWORD        dwIPChanOsd;            // ??℅??“????????????℅?﹞???∼???㊣赤????0~31??????℅??“??1-32
	char         szOSDUnit[MAX_OSD_UNIT_LEN];   //OSD????????
	BYTE        byRes[16];
}NET_DVR_ALARM_SENSOR_POINT_CFG, *LPNET_DVR_ALARM_SENSOR_POINT_CFG;

//???????????角???????辰485????????
typedef struct tagNET_DVR_ALARM_SWITCH_POINT_CFG
{
	DWORD     dwIPCChanOsd;//?∫??osd????????????IPC?“????????∼???㊣赤????0~31??????℅??“??1-32
	BYTE        byRes[60];
}NET_DVR_ALARM_SWITCH_POINT_CFG, *LPNET_DVR_ALARM_SWITCH_POINT_CFG;

//???????????角???????辰485????????
typedef union tagNET_DVR_ALARM_POINT_PARAM_UNION
{
	BYTE    byLength[64]; //???????∟????64
	NET_DVR_ALARM_SENSOR_POINT_CFG struSensor;    //???????“?辰485???????????角??????
	NET_DVR_ALARM_SWITCH_POINT_CFG struSwitch;    //???????“?辰485???????????角??????
}NET_DVR_ALARM_POINT_PARAM_UNION, *LPNET_DVR_ALARM_POINT_PARAM_UNION;

//????????
typedef struct tagNET_DVR_ALARM_POINT_CFG
{
	DWORD        dwSize;
	DWORD        dwPointNo;            //????
	BYTE        sPointDescribe[NAME_LEN];        //?????豕??
	NET_DVR_ALARM_POINT_PARAM_UNION struPointParam; //?㊣㊣????角???????????辰485?????????㊣???????芍????struSensor???㊣㊣????角???????????辰485?????????㊣???????芍????struSwitch
	BYTE        byPointType;        //?????角????1-????????2-??????
	BYTE        byChanType;        //?????角????1-㊣??????????“????2-㊣??????????“????3-485?“????4-?????“??
	BYTE        byRes1[2];
	DWORD        dwChanNo;        //?“????
	DWORD        dwSubChanNo;    //??????
	DWORD        dwVariableNo;    //㊣???㊣角?????㊣byChanType?????????㊣(1-??????????2-????????)
	BYTE        byRes[16];            //㊣???
}NET_DVR_ALARM_POINT_CFG, *LPNET_DVR_ALARM_POINT_CFG;

//?迆?﹞?????谷??
typedef struct _NET_DVR_SEARCH_CONDITION
{
	DWORD        dwSize;
	BYTE        byMajorType;    //?谷??﹞?????1-??????2-∼??㊣???? 3-∼??角????4-?㊣??+?角??
	BYTE        byMinorType;    //1-??????2-?“??+????+㊣?????
	BYTE        byRes1[2];
	NET_DVR_TIME struStartTime;    //?????㊣??
	NET_DVR_TIME struStopTime;    //?芍???㊣??
	BYTE        byChanType;        //?“???角????1-????????2-????????3-485?“????0xff㊣赤?????∫
	BYTE        byRes2[3];
	DWORD        dwChanNo;        //?“????????1??????0xffffffff㊣赤?????∫
	DWORD        dwSubChanNo;    //??????????1??????0xffffffff㊣赤?????∫
	DWORD        dwVariableNo;    //㊣?????????1??????0xffffffff㊣赤?????∫
	DWORD        dwPointNo;    //??????0xffffffff㊣赤?????∫
	BYTE          byRes3[32];        //㊣???
}NET_DVR_SEARCH_CONDITION, *LPNET_DVR_SEARCH_CONDITION;

typedef struct _NET_DVR_HISTORY_DATA
{
	DWORD        dwSize;
	NET_DVR_TIME struTime;    //?㊣????
	BYTE        byChanType;        //?“???角????1-????????2-????????3-485?“????0xff㊣赤?????∫
	BYTE        byRes1[3];
	DWORD        dwChanNo;        //?“????????1??????0xffffffff㊣赤?????∫
	DWORD        dwSubChanNo;    //??????????1??????0xffffffff㊣赤?????∫
	DWORD        dwVariableNo;    //㊣?????????1??????0xffffffff㊣赤?????∫
	DWORD        dwPointNo;        //??????0xffffffff㊣赤?????∫
	int            iData;            //?迆?﹞????
	BYTE        byDataType;        //0-??????????1-????????????2-??????????
	BYTE        byRes2[31];
}NET_DVR_HISTORY_DATA, *LPNET_DVR_HISTORY_DATA;

typedef struct tagNET_DVR_ALARMHOST_ALARM_MODE_CFG
{
	DWORD    dwSize;
	BYTE    byDataUploadMode;    //1-∼??“????????2-∼??角????????
	BYTE    byRes[31];
}NET_DVR_ALARMHOST_ALARM_MODE_CFG, *LPNET_DVR_ALARMHOST_ALARM_MODE_CFG;


typedef struct tagNET_DVR_ALARMHOST_POINT_VALUE
{
	BYTE    byChanType;        //?????角????1-㊣??????????“????2-㊣??????????“????3-485?“????4-?????“??
	BYTE    byPointType;    //???角????1-?????“??????????2-?????“????????
	BYTE    byRes1[2];        //㊣???
	DWORD     dwChanNo;        //485?“??????0xffffffff㊣赤?????∫???“???角????1?㊣??㊣赤??㊣??????????“???????“???角????2?㊣㊣赤??㊣??????????“???????“???角????3?㊣㊣赤??485?“??????
	DWORD    dwSubChanNo;    //???????? 0xffffffff㊣赤?????∫???“???角????3?㊣????
	DWORD    dwVariableNo;    //㊣???㊣角????0xffffffff㊣赤?????∫
	DWORD     dwPointNo;        //104??????0xffffffff㊣赤?????∫
	int        iValue;            //?角????????
	BYTE    byRes[16];
}NET_DVR_ALARMHOST_POINT_VALUE, *LPNET_DVR_ALARMHOST_POINT_VALUE;

typedef union tagNET_DVR_ALARMHOST_DATA_UNION
{
	BYTE    byLength[40];
	NET_DVR_ALARMHOST_POINT_VALUE struPointValue;    //?角???????㊣????
}NET_DVR_ALARMHOST_DATA_UNION, *LPNET_DVR_ALARMHOST_DATA_UNION;

typedef struct tagNET_DVR_ALARMHOST_DATA_UPLOAD
{
	DWORD        dwSize;
	BYTE        byDataType;        //?????角????1-?角???????㊣????????
	BYTE        byRes1[3];
	NET_DVR_ALARMHOST_DATA_UNION struAlarmData;
	BYTE        byRes2[32];
}NET_DVR_ALARMHOST_DATA_UPLOAD, *LPNET_DVR_ALARMHOST_DATA_UPLOAD;

typedef struct  tagNET_DVR_INPUTVOLUME
{
	DWORD  dwSize;     /*?芍???∟??*/
	BYTE   byAudioInputChan;//?????????“???? 
	BYTE   byRes[63];        // ㊣???℅???
}NET_DVR_INPUTVOLUME, *LPNET_DVR_INPUTVOLUME;

typedef struct tagNET_DVR_AUDIOOUT_VOLUME
{
	DWORD  dwSize;
	BYTE byAudioOutVolume;// ???????????????谷??????0-100??
	BYTE byRes[63];
}NET_DVR_AUDIOOUT_VOLUME, *LPNET_DVR_AUDIOOUT_VOLUME;

typedef struct tagNET_DVR_FUZZY_UPGRADE
{
	DWORD  dwSize;
	char  sUpgradeInfo[MAX_UPGRADE_INFO_LEN];
	BYTE  byRes[64];
}NET_DVR_FUZZY_UPGRADE, *LPNET_DVR_FUZZY_UPGRADE;

typedef struct tagNET_DVR_RS485_WORK_MODE
{
	DWORD dwSize;
	BYTE  byWorkMode; //?∟℅‾??????0-?????“??1-???????‾?“????2-???‾?“??
	BYTE  byRes[31];
}NET_DVR_RS485_WORK_MODE, *LPNET_DVR_RS485_WORK_MODE;

typedef struct tagNET_DVR_TRANSPARENT_CLIENT_SINGLE
{
	BYTE byEnable; //???????‾?“????0-????????1-????
	BYTE byRes1[3];
	NET_DVR_IPADDR struIP; //?????豕㊣?IP???﹞
	WORD wPort; //?????豕㊣?????
	BYTE byRes2[18];
}NET_DVR_TRANSPARENT_CLIENT_SINGLE, *LPNET_DVR_TRANSPARENT_CLIENT_SINGLE;

typedef struct tagNET_DVR_TRANSPARENT_SERVER_SINGLE
{
	BYTE byEnable; //???????‾?“????0-????????1-????
	BYTE byRes1[3];
	NET_DVR_IPADDR struIP; //???赤???????????豕㊣?IP    
	BYTE byRes2[16];
}NET_DVR_TRANSPARENT_SERVER_SINGLE, *LPNET_DVR_TRANSPARENT_SERVER_SINGLE;

typedef struct tagNET_DVR_TRANSPARENT_CLIENT_MODE
{
	NET_DVR_TRANSPARENT_CLIENT_SINGLE struClientSingle[MAX_TRANSPARENT_CHAN_NUM];
	BYTE byRes[320];
}NET_DVR_TRANSPARENT_CLIENT_MODE, *LPNET_DVR_TRANSPARENT_CLIENT_MODE;

typedef struct tagNET_DVR_TRANSPARENT_SERVER_MODE
{
	WORD wPort; //㊣????角??????????????RS485??????????
	BYTE byRes1[2];
	NET_DVR_TRANSPARENT_SERVER_SINGLE struServerSingle[MAX_TRANSPARENT_ACCESS_NUM];
	BYTE byRes2[332];
}NET_DVR_TRANSPARENT_SERVER_MODE, *LPNET_DVR_TRANSPARENT_SERVER_MODE;

typedef union tagNET_DVR_TRANSPARENT_CHAN_WORK_MODE_UNION
{
	BYTE byRes[512];
	NET_DVR_TRANSPARENT_CLIENT_MODE struClientMode;  //???∫??????????
	NET_DVR_TRANSPARENT_SERVER_MODE struServerMode; //﹞????‾????????
}NET_DVR_TRANSPARENT_CHAN_WORK_MODE_UNION, *LPNET_DVR_TRANSPARENT_CHAN_WORK_MODE_UNION;

typedef struct tagNET_DVR_TRANSPARENT_CHAN_CFG
{
	DWORD dwSize;
	BYTE  byWorkMode; //?∟℅‾??????1-???∫????????2-﹞????‾????
	BYTE  byRes[3];
	NET_DVR_TRANSPARENT_CHAN_WORK_MODE_UNION struTransparentPara;
}NET_DVR_TRANSPARENT_CHAN_CFG, *LPNET_DVR_TRANSPARENT_CHAN_CFG;

typedef struct tagNET_DVR_NAKED_DATA_INFO
{
	char   sSocketIP[128];
	WORD   wSocktPort;
	BYTE   byRes[258];
}NET_DVR_NAKED_DATA_INFO, *LPNET_DVR_NAKED_DATA_INFO;

typedef enum tagNAKED_DATA_TYPE
{
	NAKED_DATA_TYPE_NOT_DEFINED = 0, //???“??
	NAKED_DATA_TYPE_POS_INFO    //????????Pos????
}NAKED_DATA_TYPE;


typedef struct tagNET_DVR_NAKED_DATA_PARAM
{
	WORD  wPort;           //IP????????????Pos????????????????0???辰????????????7050
	BYTE  byRes[130];      //㊣???℅???
}NET_DVR_NAKED_DATA_PARAM, *LPNET_DVR_NAKED_DATA_PARAM;

#define UPLOAD_POS_INFO     1001  //????Pos????

typedef struct tagNET_DVR_POS_INFO
{
	NET_DVR_STRUCTHEAD     struVerHead;  //∼?㊣??﹞
	DWORD dwChannelNum;          //?“????
	BYTE  byRes[60];
}NET_DVR_POS_INFO, *LPNET_DVR_POS_INFO;


#define MAX_IGNORE_STRING_NUM        4
#define FILTERRULE_NUM              4
#define MAX_POS_FILTER_DATA_LEN     128

typedef struct tagNET_DVR_POS_OSD_REGION
{
	NET_VCA_POINT   struStart;   //????℅?㊣那
	NET_VCA_POINT   struEnd;    //????℅?㊣那
}NET_DVR_POS_OSD_REGION, *LPNET_DVR_POS_OSD_REGION;


typedef struct
{
	DWORD dwDelayTime;                /*delay time(5-3600s)*/
	BYTE  byPrevOsd;                   /*overlay osd on preview*/
	BYTE  byRes1[3];                    /*preserve*/
	NET_DVR_POS_OSD_REGION  struOsdPosInfo;          /*overlay osd rect info*/
	BYTE  byRes[64];                   /*preserve*/
}NET_DVR_POS_ACTION, *LPNET_DVR_POS_ACTION;

typedef struct
{
	BYTE sData[MAX_POS_FILTER_DATA_LEN];/*???℅????㊣那???????∼℅??車??32??????anyCharacter??﹞??㊣???迆?∫*/
	BYTE byExclusive;    //??﹞?∼邦??㊣那??㊣??赤 0-∼邦?? 1-??∼邦??
	BYTE byFlagType;    //㊣那???角????0-℅?﹞?????1-???迄????
	BYTE byRes[2];        /*㊣???*/
}NET_DVR_GENERIC_START, *LPNET_DVR_GENERIC_START;

typedef struct
{
	BYTE  sData[MAX_POS_FILTER_DATA_LEN];/*???℅?芍??㊣那???????∼℅??車??32*/
	BYTE  byExclusive;    //??﹞?∼邦??㊣那??㊣??赤 0-∼邦?? 1-??∼邦??
	BYTE  byFlagType;    //㊣那???角????0-℅?﹞?????1-???迄????
	BYTE  byRes[6];
} NET_DVR_GENERIC_END, *LPNET_DVR_GENERIC_END;

typedef struct
{
	BYTE  sData[MAX_POS_FILTER_DATA_LEN];/*????㊣那???????∼℅??車??32*/
	BYTE  byFlagType;    //㊣那???角????0-℅?﹞?????1-???迄????
	BYTE  byRes[3];
}NET_DVR_GENERIC_DATA_CFG, *LPNET_DVR_GENERIC_DATA_CFG;

typedef struct
{
	BYTE sData[MAX_POS_FILTER_DATA_LEN];/*??????℅?﹞??????∼℅??車??32*/
}NET_DVR_IGNORE_STRING, *LPNET_DVR_IGNORE_STRING;

typedef struct
{
	BYTE  byCaseSensitive;/*??﹞???﹞??車??????0->????﹞???1->??﹞?*/
	BYTE  byRes1[7];
	NET_DVR_GENERIC_START struTransactionStart;/*???℅????*/
	NET_DVR_GENERIC_END struTransactionEnd;/*???℅?芍??*/
	NET_DVR_GENERIC_DATA_CFG struLineDeli;/*??????﹞?*/
	NET_DVR_IGNORE_STRING struIgnoreString[MAX_IGNORE_STRING_NUM];/*????℅?﹞????????∼??4??*/
	BYTE byRes[40];    //㊣???
}NET_DVR_POS_GENERIC, *LPNET_DVR_GENERIC;

typedef struct
{
	DWORD    dwPosAddr;        //pos???﹞㊣角??
	BYTE    byRes[948];
}NET_DVR_POS_AVE, *LPNET_DVR_AVE;

#define SERIAL_NUM_LEN 8
typedef struct tagNET_DVR_POS_NUCLEUS/*size 952byte*/
{
	char   szEmployeeNo[SERIAL_NUM_LEN];//?㊣?∟㊣角??????1?“㊣?℅???㊣那??e<employee#>??
	char   szTerminalNo[SERIAL_NUM_LEN];// Pos?迆㊣角??????1?“㊣?℅???㊣那??t<terminal#>??
	char   szShiftNo[SERIAL_NUM_LEN]; //??∼角?“㊣?℅???㊣那??s<shift#>??
	BYTE      byRes[928];
}NET_DVR_POS_NUCLEUS, *LPNET_DVR_POS_NUCLEUS;
typedef  union _NET_DVR_POS_PROTOCOL_UNION
{
	BYTE byLenth[952];   //????㊣赤?????????∟??????????????
	NET_DVR_POS_GENERIC struGeneric;
	NET_DVR_POS_AVE struAve;
	NET_DVR_POS_NUCLEUS struNUCLEUS;
}NET_DVR_POS_PROTOCOL_UNION, *LPNET_DVR_POS_PROTOCOL_UNION;

typedef enum tagNET_DVR_CHARSET_ENUM  //㊣角??﹞???
{
	ENUM_UTF8 = 0,
	ENUM_GB2312,
	ENUM_LATIN1,
	ENUM_LATIN2,
	ENUM_LATIN3,
	ENUM_LATIN4,
	ENUM_CYRILLIC,
	ENUM_ARABIC,
	ENUM_GREEK,
	ENUM_HEBREW,
	ENUM_TURKISH,
	ENUM_NORDIC,
	ENUM_THAI,
	ENUM_LATIN7,
	ENUM_LATIN8,
	ENUM_LATIN9,
	ENUM_LATIN10,
	ENUM_CENTRAL_EUROPEAN,
	ENUM_CYRILLIC_SCRIPT,
	ENUM_HEBREW_DOS862
}NET_DVR_CHARSET_ENUM, *LPNET_DVR_CHARSET_ENUM;


typedef struct
{
	DWORD   dwSize;
	BYTE     byEnable;            //???辰????
	BYTE     byCharSetType;      //㊣角??﹞???0-UTF-8,1-GB2312
	BYTE    byRes1;   //㊣???
	BYTE    byProtocolType;//???谷?角????1->generic text???谷(universal Protocol), 2->AVE VSI-ADD     3->AVE Vnet,4-EPSON(???角?????豕???赤pos???谷????), 5-NUCLEUS
						   //6- Gilbarco?“?????????芍????NET_DVR_POS_GENERIC??,7- NCR?“?????????芍????NET_DVR_POS_GENERIC??
	NET_DVR_POS_PROTOCOL_UNION uPosProtocol;   //POS???谷 
	BYTE    byRes[32];    //㊣???
}NET_DVR_POS_FILTER_CFG, *LPNET_DVR_POS_FILTER_CFG;

typedef struct  tagNET_DVR_NET_SNIFF /*?????足???芍???? 312byte*/
{
	BYTE       byEnableSourcePort;       //??﹞?????????????????????  0-????????1-????
	BYTE       byEnableDestAddr;        //??﹞?????????㊣那IP???﹞???????? 0-????????1-????
	BYTE       byEnableDestPort;         //??﹞?????????㊣那???﹞????????????????
	BYTE       byRes1;                 //㊣???
	BYTE       bySourceIpAddr[MAX_DOMAIN_NAME];                //?????????﹞ 
	BYTE       byDestinationIpAddr[MAX_DOMAIN_NAME];        //????﹞?????㊣那???﹞ 
	WORD          wSourcePort;               //????????????
	WORD          wDestinationPort;           //????﹞?????㊣那??????
	BYTE       byRes[16];                 //㊣???
}NET_DVR_NET_SNIFF, *LPNET_DVR_NET_SNIFF;

typedef struct
{
	WORD  wNetPort;  /*device net port*/
	BYTE  byRes[2];
}NET_DVR_NET_RECEIVE, *LPNET_DVR_NET_RECEIVE;

typedef struct tagNET_DVR_MONITOR_INFO  /*?角??*/
{
	WORD  wPort;       //?角????????
	BYTE   byRes1[2];
	NET_DVR_IPADDR  struRestrictRemoteIP;//㊣???????????﹞???IP
	BYTE   byRes[164];
}NET_DVR_MONITOR_INFO, *LPNET_DVR_MONITOR_INFO;

typedef union tagNET_DVR_POS_CONNECTMODE_UNION
{
	BYTE                       byLen[312];      //???????∟??????????????
	NET_DVR_NET_RECEIVE     struNetRecv;     //????????????
	NET_DVR_MONITOR_INFO     struTcpMonitor;    //?????角??????
	NET_DVR_SINGLE_RS232     struRS232;        //????﹞???
	NET_DVR_MONITOR_INFO     struUdpMonitor;     //?????角??-UDP????
	NET_DVR_NET_SNIFF          struSniff;          //?????足??????
	NET_DVR_ADDRESS            struMcast;          //?角??????
	NET_DVR_USB_RS232         struUSBRS232;    //USB℅?????﹞???
}NET_DVR_POS_CONNECTMODE_UNION, *LPNET_DVR_POS_CONNECTMODE_UNION;


//DVR??POS????﹞????????芍????
typedef struct tagNET_DVR_CONNECT_POS_CFG
{
	DWORD   dwSize;               //?芍?????車??
	BYTE     byConnectMode;    //????????:0->?????角??(TCP),1->????????,2->????????3-?????角???“UDP??,4-?????足??,5-?角??
	BYTE     byRes1[3];         //㊣???
	NET_DVR_POS_CONNECTMODE_UNION uPosConnMode;    //????????????
	BYTE  byRes[64];
}NET_DVR_CONNECT_POS_CFG, *LPNET_DVR_CONNECT_POS_CFG;

typedef struct  tagNET_DVR_CHAN_FILTER_CFG
{
	DWORD                  dwSize;              //?芍?????車??
	BYTE                  byFilterID;           //POS???????辰ID
	BYTE                 byFontSize;         //℅????車????0-- 8*16  1--16*32  2--32*64 
	BYTE                  byShowPosInfo;        //???‾????﹞?????pos????
	BYTE                byOverlayMode;      //????﹞?????0-??????1-﹞???
	DWORD                 dwDelayTime;        /*delay time(5-3600s)*/
	NET_DVR_POS_OSD_REGION  struOsdPosInfo;          /*overlay osd rect info*/
	NET_DVR_RGB_COLOR        struOsdColor;           //OSD????
	NET_DVR_SCHEDTIME        struAlarmSched[MAX_DAYS][MAX_TIMESEGMENT_V30];
	NET_DVR_HANDLEEXCEPTION_V40 struHandleException;  //?足?????赤﹞???
													  //?足?????赤﹞?????㊣“??????????℅谷??∼車?“????℅谷????0?㊣??㊣赤????????㊣“????????﹞??∫??1-64???㊣℅谷????1?㊣??㊣赤????????㊣“????????﹞??∫??65-128?? ????℅谷????????????????????0xffffffff㊣赤??㊣?℅谷 ?㊣?∼???∼℅谷???車????㊣“?????????∫
	DWORD                  dwMaxRelRecordChanNum;  //㊣“????﹞??????車?“?????“??????℅??車?∫??????
	DWORD                  dwRelRecordChanNum;     //㊣?℅谷???????????車?“???? 
	DWORD                  dwRelRecordChan[MAX_CHANNUM_V30];//??﹞??????“??
															//???????????“??????℅谷??∼車?“????℅谷????0?㊣??㊣赤?????????“????﹞??∫??1-64???㊣℅谷????1?㊣??㊣赤?????????“????﹞??∫??65-128?? ????℅谷????????????????????0xffffffff㊣赤??㊣?℅谷???車?????????“???????∫
	DWORD                 dwTimeOut;        /*time Out(5-3600s)*/ //???????㊣?????角?∟?㊣??????????POS?????????“????????∼邦???芍????
	BYTE              byRes[60];    //㊣???
}NET_DVR_CHAN_FILTER_CFG, *LPNET_DVR_CHAN_FILTER_CFG;

#define        MAX_LAN_ENCODE_LEN        32    //????㊣角??????℅??車?∟??
typedef struct    tagNET_DVR_DEVICE_LAN_ENCODE
{
	DWORD        dwSize;
	BYTE        byLanEncode[MAX_LAN_ENCODE_LEN];    //?豕㊣?????㊣角??????
	BYTE        byRes[28];
}NET_DVR_DEVICE_LAN_ENCODE, *LPNET_DVR_DEVICE_LAN_ENCODE;

typedef struct tagNET_DVR_SCENECHANGE_DETECTION
{
	DWORD    dwSize;
	BYTE    byEnable; //????????﹞????? 0~??????,1~????
	BYTE    bySensitiveLevel;// 1-100??????50???谷???????????????℅㊣“??
	BYTE    byRes1[2];
	NET_DVR_SCHEDTIME struAlarmSched[MAX_DAYS][MAX_TIMESEGMENT_V30];
	NET_DVR_HANDLEEXCEPTION_V40 struHandleException;  //?足?????赤﹞???
	DWORD    dwMaxRelRecordChanNum;  //㊣“????﹞??????車?“?? ???“??????℅??車?∫??????
	DWORD    dwRelRecordChanNum;     //㊣“????﹞??????車?“?? ?? ?????∫????????
	DWORD    dwRelRecordChan[MAX_CHANNUM_V30];//??﹞??????“??
											  //㊣“????﹞??????車?“???“??℅??????“?????????????? 0xffffffff??
	BYTE    byRes2[128];
}NET_DVR_SCENECHANGE_DETECTION, *LPNET_DVR_SCENECHANGE_DETECTION;

typedef struct tagNET_DVR_SCENECHANGE_DETECTION_RESULT
{
	DWORD            dwSize;          // ?芍???車??
	NET_VCA_DEV_INFO struDevInfo;    //?∼???豕㊣?????
	WORD      wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE             byRes[126];      // ㊣???℅???
}NET_DVR_SCENECHANGE_DETECTION_RESULT, *LPNET_DVR_SCENECHANGE_DETECTION_RESULT;

typedef enum
{
	PREVIEW_MOD = 0,
	ALARM_MOD,
	PLAYBACK_MOD,
	MAX_TYPE
}MODULE_TYPE;

//????????
typedef struct tagNET_DVR_PARK_INFO
{
	char          sPlateNo[MAX_PlATE_NO_LEN];             //???????? 
	char          sParkIndex[MAX_PlATE_NO_LEN];        //????㊣角??
	BYTE          byRes[64];
}NET_DVR_PARK_INFO, *LPNET_DVR_PARK_INFO;


typedef struct tagNET_DVR_CROSSLINE_ALARM
{
	DWORD                 dwSize;
	NET_VCA_DEV_INFO     struDevInfo;
	NET_DVR_TIME_EX      struTriggerTime;/*??﹞??㊣??*/
	NET_DVR_PARK_INFO    struParkInfo; //????????
	BYTE                 byRes1[128];
}NET_DVR_CROSSLINE_ALARM, *LPNET_DVR_CROSSLINE_ALARM;

typedef struct tagNET_DVR_STREAM_SRC_CFG
{
	DWORD dwSize;
	NET_DVR_STREAM_INFO struStreamID; //?‾????
	NET_DVR_STREAM_SRC_INFO struStreamSrcInfo; //?‾??????
}NET_DVR_STREAM_SRC_CFG, *LPNET_DVR_STREAM_SRC_CFG;

typedef struct tagNET_DVR_ENCODEINFO
{
	BYTE  byFormatType; //﹞?℅∼?角????1-???‾??2-RTP﹞?℅∼??3-PS﹞?℅∼??4-TS﹞?℅∼??5-??????6-FLV??7-ASF??8-3GP, 9-RTP+PS?“?迆㊣那??GB28181????0xff-???∫
	BYTE  byVideoEncType;//????㊣角???角????0-????264??1-㊣那℅?h264??2-㊣那℅?mpeg4??7-M-JPEG??0xff-???∫
	WORD  wWidth; //?????赤??
	WORD  wHeight; //????????
	BYTE  byRes1[2];
	DWORD dwVideoBitrate;     //????????,????Kbps
	DWORD dwVideoFrameRate;    //??????200??㊣赤??????1??/????℅????????角??㊣赤????????????,200-1/2,201-1/4,202-1/8,203-1/16
	BYTE  byAudioEncType;//????㊣角???角????0-G722??1-G711_U??2-G711_A??5-MPEG2,6-G726??7-AAC,0xff-???∫    
	BYTE  byRes2[15];
}NET_DVR_ENCODEINFO, *LPNET_DVR_ENCODEINFO;


typedef struct tagNET_DVR_TRANSSTATUS
{
	DWORD dwSize;
	NET_DVR_STREAM_INFO struStreamInfo;//?‾ID??℅????“??????    
	BYTE  byMode;//℅?????????1-?‾??℅?????2-㊣???℅???
	BYTE  byLinkNums;//??????
	BYTE  byPassiveTransMode; //㊣???℅?????????0-???∫??1-???㊣?‾??2-?????‾
	BYTE  byRes;
	NET_DVR_ADDRESS struDstIPInfo[MAX_LINK];//??㊣那℅???ip???﹞
	BYTE  byTransResource;//?迄??????℅???℅???????∼?D1????
	BYTE  byRes1[15];
	NET_DVR_ENCODEINFO struSrcEncodeInfo;//??㊣角??????
	NET_DVR_ENCODEINFO struDstEncodeInfo[MAX_LINK /*6*/];//??㊣那㊣角??????
	BYTE  byRes2[36];
}NET_DVR_TRANSSTATUS, *LPNET_DVR_TRANSSTATUS;

typedef struct tagNET_DVR_TRANSDEVICE_STATUS
{
	DWORD dwSize;
	DWORD dwTotalResource;//????℅???℅???????D1??????????
	DWORD dwIdleResource;//???角℅???℅???????D1??????????
	BYTE  byCpuLoad;//CPU??????
	BYTE  byRes[67];
}NET_DVR_TRANSDEVICE_STATUS, *LPNET_DVR_TRANSDEVICE_STATUS;

typedef struct tagNET_DVR_DEV_WORK_MODE
{
	DWORD dwSize;
	BYTE  byWorkMode; //1-?“????????2-?‾ID????
	BYTE  byDisplayMode; //0-???“??1-????
	BYTE  byEnableVcaDec; //??﹞???????????????0-????????﹞?0-????
	BYTE  byRes[61];
}NET_DVR_DEV_WORK_MODE, *LPNET_DVR_DEV_WORK_MODE;


typedef struct tagNET_DVR_PASSIVETRANSINFO
{
	DWORD dwSize;
	BYTE byStreamType;// ???‾?角????0-?‾???‾??1-℅????‾
	BYTE byLinkMode;// 0??TCP﹞???,1??UDP﹞????“㊣?????
	BYTE byPassiveTransMode; //㊣???℅?????????1-???㊣?‾??2-?????‾
	BYTE byRes1[5];
	BYTE byDataType;//???????角????1-SDP??2-???‾?﹞
	BYTE byRes2;
	WORD wDataLength;//?????∟??
	char *pBuffer;//??????
	BYTE byRes3[32]; // ㊣???
}NET_DVR_PASSIVETRANSINFO, *LPNET_DVR_PASSIVETRANSINFO;

typedef struct tagNET_DVR_BASEMAP_CONTROL_CFG
{
	DWORD dwSize;
	BYTE  byEnable;          //??﹞???????1-??????0-????    
	BYTE  byBaseMapType;     //?℅???角????1-?????℅????2-???????????℅????3-?℅??????
	BYTE  byBaseMapCircleNo; //?℅??????????㊣角????byBaseMapType??3?㊣???∫
	BYTE  byRes1;
	DWORD dwBaseMapNo;     //?℅???????℅???角????1?㊣???????????????辰?????℅???角????2?㊣??????????????????℅??????????????“1℅??????車??+1℅???℅?∼???+1℅???????????+1℅???㊣?????
	BYTE  byRes2[64];
}NET_DVR_BASEMAP_CONTROL_CFG, *LPNET_DVR_BASEMAP_CONTROL_CFG;

typedef struct tagNET_DVR_VIRTUAL_SCREEN_CFG
{
	DWORD dwSize;
	DWORD dwResolution; //﹞?㊣?????MAKE_RESOLUTION?那?“?????????????????????????∫????﹞?㊣?????
	BYTE byRes[64];
}NET_DVR_VIRTUAL_SCREEN_CFG, *LPNET_DVR_VIRTUAL_SCREEN_CFG;

typedef struct tagNET_DVR_BASEMAP_WINCFG
{
	DWORD dwSize;
	BYTE  byEnable;
	BYTE  byWndOperateMode;  //?∼????℅‾??????0-????℅?㊣那??1-﹞?㊣???℅?㊣那
	BYTE  byRes1[6];
	NET_DVR_RECTCFG_EX struWinPosition;//?????∼??(?角????????),?℅???∼????????℅?㊣那???車??㊣??????迄℅?℅?㊣那??????㊣?
	NET_DVR_RECTCFG_EX struResolution; //?????∼??﹞?㊣???℅?㊣那???????辰∼?﹞?㊣???℅?㊣那?豕?????∫
	DWORD dwXCoordinate; //LED???辰℅車????X℅?㊣那?“????℅?㊣那?????????辰∼?﹞?㊣???℅?㊣那?豕?????∫
	DWORD dwYCoordinate; //LED???辰℅車????Y℅?㊣那?“????℅?㊣那?????????辰∼?﹞?㊣???℅?㊣那?豕?????∫
	BYTE  byRes2[36];
}NET_DVR_BASEMAP_WINCFG, *LPNET_DVR_BASEMAP_WINCFG;

typedef struct tagNET_DVR_BASEMAP_PIC_INFO
{
	DWORD  dwSize;
	BYTE   sPicName[NAME_LEN];//????????
	BYTE   byUsed; //??﹞?????????0-????????1-????
	BYTE   byRes[31];
}NET_DVR_BASEMAP_PIC_INFO, *LPNET_DVR_BASEMAP_PIC_INFO;

typedef struct tagNET_DVR_MATRIX_LOGO_INFO
{
	DWORD  dwSize;
	DWORD  dwLogoSize;//LOGO?車????∼邦?“BMP???????﹞???????車??????????100K???????赤????32??㊣???
	BYTE   byRes[32];
}NET_DVR_MATRIX_LOGO_INFO, *LPNET_DVR_MATRIX_LOGO_INFO;

typedef struct tagNET_DVR_MATRIX_LOGO_CFG
{
	DWORD  dwSize;
	BYTE   byExist;  //logo??﹞???????0-????????1-?????“????????????????
	BYTE   byRes1[3];
	DWORD  dwLogoSize;//LOGO?車????∼邦?“BMP???????﹞(??????????????)
	BYTE   byLogoName[NAME_LEN];  //logo????
	DWORD  dwLogoNo;    //logo㊣角???“?????迄??logo?????㊣???∫??
	BYTE   byRes2[28];
}NET_DVR_MATRIX_LOGO_CFG, *LPNET_DVR_MATRIX_LOGO_CFG;

typedef struct tagNET_DVR_WIN_LOGO_CFG
{
	DWORD  dwSize;
	DWORD  dwLogoNo; //logo??
	BYTE   byEnable; //logo??﹞???????1-??????0-????
	BYTE   byRes1[3];
	DWORD  dwCoordinateX;    //???????????辰X℅?㊣那
	DWORD  dwCoordinateY;    //???????????辰Y℅?㊣那    
	BYTE   byFlash;  //??﹞?????1-??????0-??????
	BYTE   byTranslucent; //??﹞?∼????‾1-∼????‾??0-??∼????‾
	BYTE   byRes2[34];                //㊣???    
}NET_DVR_WIN_LOGO_CFG, *LPNET_DVR_WIN_LOGO_CFG;


typedef struct tagNET_DVR_BIG_SCREEN_AUDIO_CFG
{
	DWORD dwSize;
	DWORD dwWinIndex; //?∼????????1??????0㊣赤???℅??
	BYTE  byEnable; //??﹞??辰????????1-?辰????????0-??㊣?????
	BYTE  byRes[31];
}NET_DVR_BIG_SCREEN_AUDIO_CFG, *LPNET_DVR_BIG_SCREEN_AUDIO_CFG;

typedef struct tagNET_DVR_WIN_ZOOM_STATUS
{
	DWORD dwSize;
	BYTE  byZoomStatus;  //0-????℅?????1-﹞??車℅???
	BYTE  byRes1[3];
	NET_DVR_POINT_FRAME struPointFrame; //﹞??車???辰???㊣byZoomStatus??1?㊣???∫
	BYTE  byRes2[32];
}NET_DVR_WIN_ZOOM_STATUS, NET_DVR_WIN_ZOOM_STATUS;

typedef struct tagNET_DVR_RESUME_INITRACKPOS_CFG
{
	DWORD           dwSize;          // ?芍???車??
	DWORD           dwChannel;;     // ?“????
	BYTE            byRes[16];      // ㊣???℅???
}NET_DVR_RESUME_INITRACKPOS_CFG, *LPNET_DVR_RESUME_INITRACKPOS_CFG;

typedef  struct tagNet_DVR_TEST_SELFCHECK_RESULT
{
	DWORD   dwSize;
	DWORD   dwChannel;      //?“????            
	BYTE    bySelfCheckStatus;   //℅??足℅????? 0-????????1-??????2-?∫∼???3-℅??足??
	BYTE    byRes[23];   //㊣???℅???
}NET_DVR_TEST_SELFCHECK_RESULT, *LPNET_DVR_TEST_SELECHECK_RESULT;


typedef struct  tagNET_DVR_TEST_COMMAND
{
	DWORD   dwSize;
	DWORD   dwChannel;       //?“????
	BYTE    byTestCommand[MAX_TEST_COMMAND_NUM];
	//0-㊣赤?????????????? 1-㊣赤??????????
	//??℅谷??㊣那0 ???????????????辰                               
	//??℅谷??㊣那1 ?足????????????????
	//??℅谷??㊣那2 ICR??????????0㊣赤????㊣???1㊣赤??????????????bit0 ℅谷??????0000_0001(??????????????)??0000_0101?“???㊣??????????ICR????????0000_0100?“??????ICR?????? 
	//??℅谷??㊣那3 -?辰?迆pt℅?????????℅?????0㊣赤???辰?迆℅?????????????????1㊣赤???辰?迆℅???????????????
	//??℅谷??㊣那4 ?“?迄?“?豕???????辰??0㊣赤????㊣???1㊣赤??????
	//??℅谷??㊣那5 ??℅????????????辰??0㊣赤????㊣???1㊣赤??????
	WORD    wICRIntervalTime;//icr?????㊣???“byTestCommand ??℅谷??㊣赤2????????1?㊣??ICR?????????㊣????????????
	BYTE    byElectronicCompassState;//????℅???﹞????? 0-?????? 1-??????
	BYTE    byRes1[1];
	float   fDeviceTem; //?豕㊣??迆???????????﹞??0.001
	BYTE    byTemp[9];  //?????角???????豕㊣??? ??㊣那0-???∼???????? ㊣那1-4?????∼1??4??sensor???????? ㊣那5-8?????∼2??4??sensor??????,???∼???????????∼
	BYTE    byRes[3];      //㊣???℅??? 
}NET_DVR_TEST_COMMAND, *LPNET_DVR_TEST_COMMAND;

typedef struct  tagNET_DVR_AGING_TRICK_SCAN
{
	DWORD   dwSize;
	DWORD   dwChannel;       //?“????
	BYTE     byAging; // ㊣赤???豕???????? ???????∼?∟???????????車?∟???? 0-?????∼??1-?????車 
	BYTE     byWriteReadEnalbe; //??????????????0-?豕?????????? 1-?豕????????
	BYTE     byRes[126];      //㊣???℅???
}NET_DVR_AGING_TRICK_SCAN, *LPNET_DVR_AGING_TRICK_SCAN;

#define IPC_PARAM_AGING_TRICK_SCAN        0x00000001 //?????“?迄?“?豕?????豕??
typedef struct tagNET_DVR_IPC_PARAM_TYPE
{
	DWORD dwSize;
	DWORD dwParamType; //?????角????∼???㊣赤??    
					   // #define IPC_PARAM_AGING_TRICK_SCAN       0x00000001 //?????“?迄?“?豕?????豕??
	BYTE byRes[32];
}NET_DVR_IPC_PARAM_TYPE, *LPNET_DVR_IPC_PARAM_TYPE;

typedef struct  tagNET_DVR_ECCENTRIC_CORRECT_STATE
{
	DWORD   dwSize;
	DWORD   dwChannel;       //?“????
	BYTE     byEccentricCorrectState; // ????????℅?????0-?????∫∼???1-??????????2-??????
	BYTE     byRes[127];      //㊣???℅???
}NET_DVR_ECCENTRIC_CORRECT_STATE, *LPNET_DVR_ECCENTRIC_CORRECT_STATE;



#define MAX_DEVMODULE_NUM 8
typedef struct tagNET_DVR_TEST_DEVMODULE_CFG
{
	DWORD   dwSize;
	DWORD   dwChannel;      //?“????
	BYTE    byDevFanModuleType[MAX_DEVMODULE_NUM]; //???????豕㊣??角??
												   // 0-??????????,1-????????
												   // bit0-????﹞???1
												   // bit1-????﹞???2
	BYTE    byDevHeaterModuleType[MAX_DEVMODULE_NUM]; //???????豕㊣??角??
													  // 0-??????????,1-????????
													  // bit0-?????????‾1
													  // bit1-?????????‾2
	BYTE    byRes[22];      //㊣???℅???
}NET_DVR_TEST_DEVMODULE_CFG, *LPNET_DVR_TEST_DEVMODULE_CFG;

//??????????
typedef struct tagNET_DVR_BARRIERGATE_COND
{
	BYTE  byLaneNo;//???????“0-㊣赤?????∫??(?豕㊣??豕??℅????∫??????),1-????1??
	BYTE  byRes[3];
}NET_DVR_BARRIERGATE_COND, *LPNET_DVR_BARRIERGATE_COND;

typedef struct tagNET_DVR_VEHICLE_CONTROL
{
	BYTE   byGateOperateType;//0-????℅‾,1-??????
	BYTE   byRes1;
	WORD   wAlarmOperateType;//0-????℅‾,bit0-?????‾????㊣“?? bit1-??﹞?????㊣“?? bit3-?????‾?迆?????“????????(0-㊣赤??????1-㊣赤????)
	BYTE   byRes2[8];
}NET_DVR_VEHICLE_CONTROL, *LPNET_DVR_VEHICLE_CONTROL;

typedef struct tagNET_DVR_RELAY_PARAM
{
	BYTE   byAccessDevInfo;//0-???????豕㊣???1-????????2-????????3-????????4-㊣“????????5-??????
	BYTE   byRes[3];
}NET_DVR_RELAY_PARAM, *LPNET_DVR_RELAY_PARAM;

//??????????
typedef struct tagNET_DVR_ENTRANCE_CFG
{
	DWORD   dwSize;
	BYTE    byEnable;// ????0-㊣赤????㊣???1-㊣赤???辰??
	BYTE    byBarrierGateCtrlMode;//0-?角?迆℅?????????1-???“????????
	BYTE    byRes1[2];
	DWORD   dwRelateTriggerMode;//??????﹞????? ????ITC_TRIGGERMODE_TYPE
								/*0x00: ??℅?????*/
								/*0x01: ?????????“????????????*/
								/*0x02: ?????????“??????????????*/
								/*0x04: ?“??????*/
	DWORD  dwMatchContent;  //?足?????赤,?足?????赤﹞?????"?辰"?芍??
	NET_DVR_RELAY_PARAM  struRelayRelateInfo[MAX_RELAY_NUM/*12*/];//?????‾????????????(?????????‾?????????????????豕㊣?) ??℅谷0㊣赤???????‾1 ??℅谷1㊣赤???????‾2 ?????角?? 12
	BYTE byGateSingleIO[MAX_IOIN_NUM/*8*/]; //????IO??﹞???????????IO??﹞?????????℅谷0㊣赤??IO1????℅谷1㊣赤??IO2???????角?? ; ??????℅谷?????????“0-????1-????????????2-????????????3-??﹞?㊣“????
											//????????????  
											//??℅谷0㊣赤?????㊣??????????????
											//??℅谷1-????????????????, 
											//??℅谷2-∼℅??????????????
	NET_DVR_VEHICLE_CONTROL struVehicleCtrl[MAX_VEHICLE_TYPE_NUM/*8*/];//????????????  
	BYTE    byNotCloseCarFollow;//?????迆??????????????0~??????????1~????
	BYTE    byRes2[63];
}NET_DVR_ENTRANCE_CFG, *LPNET_DVR_ENTRANCE_CFG;
////////////////////////////?????????????? end///////////////////////////////

// ????????
typedef struct tagNET_DVR_BARRIERGATE_CFG
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	BYTE  byLaneNo;  //???????“0-㊣赤?????∫??(?豕㊣??豕??℅????∫??????),1-????1??
					 /*
					 ?????????“???∫??byUnlock℅???????℅???????????0???“???∼0-??㊣?????,1-????????,2-?????????㊣??????????????℅‾??????????????
					 ???????“?∫??byUnlock℅??????豕byUnlock℅?????????1?????芍??4~????????????????????byUnlock℅?????????1?車???∼0-??㊣?????,1-????????,2-?????????㊣??℅‾????????????????
					 */
	BYTE  byBarrierGateCtrl;//0-??㊣?????,1-????????,2-???????? 3-???“????,4~????????
	BYTE  byEntranceNo;//??????㊣角?? [1,8]
	BYTE  byUnlock;//??????????????0~??????????1~????
	BYTE  byRes[12];
}NET_DVR_BARRIERGATE_CFG, *LPNET_DVR_BARRIERGATE_CFG;

//????????∼℅??????????????
typedef struct  tagNET_DVR_VEHICLE_CONTROL_LIST_INFO
{
	DWORD  dwSize;
	DWORD  dwChannel;//?“????0xff - ?????“???“ITC ??????1??
	DWORD  dwDataIndex;//?????‾?????“???“???∟???????“?????????∫????℅‾???㊣?辰?????????芍???∫???????‾????????????????????
	char   sLicense[MAX_LICENSE_LEN]; //????????
	BYTE   byListType;//?????????“??∼℅??????0-∼℅??????1-??????
	BYTE   byPlateType;    //?????角??
	BYTE   byPlateColor;    //????????
	BYTE   byRes[21];
	char   sCardNo[MAX_CARDNO_LEN]; // ?“??
	NET_DVR_TIME_V30  struStartTime;//???∫?????㊣??
	NET_DVR_TIME_V30  struStopTime;//???∫?芍???㊣??
								   //??℅‾???“???“????㊣赤?‾???????芍???????????????邦?????迆㊣赤??????????㊣赤?????????????????????角?迆???????????車?芍??0??2014-03-03
	char        sOperateIndex[MAX_OPERATE_INDEX_LEN];
	BYTE  byRes1[224]; // ㊣???℅???
} NET_DVR_VEHICLE_CONTROL_LIST_INFO, *LPNET_DVR_VEHICLE_CONTROL_LIST_INFO;

//???????????????? ?“?∟??????????
typedef struct tagNET_DVR_VEHICLE_CONTROL_COND
{
	DWORD  dwChannel;//?“????0xffffffff - ?????“???“ITC ??????1??
	DWORD  dwOperateType;//??℅‾?角????????VCA_OPERATE _TYPE???“????????
	char   sLicense[MAX_LICENSE_LEN];//????????
	char   sCardNo[MAX_CARDNO_LEN]; // ?“??
	BYTE   byListType;//?????????“??∼℅??????0-∼℅??????1-????????0xff-????
					  //2014-02-25
	BYTE   byRes1[3];
	DWORD  dwDataIndex;//?????‾????     
	BYTE   byRes[116];
}NET_DVR_VEHICLE_CONTROL_COND, *LPNET_DVR_VEHICLE_CONTROL_COND;

//??∼℅?????????豕??????㊣“??
typedef struct
{
	DWORD    dwSize;
	DWORD    dwDataIndex;//?????‾?????“??????﹞????豕㊣??㊣?∼??????????????℅??車?????????‾????,???“???????㊣?辰?????????‾??????????????
	char     sOperateIndex[MAX_OPERATE_INDEX_LEN];  //??℅‾???“???“????㊣赤?‾???????芍???????????????邦?????迆㊣赤??????????㊣赤?????????????????????角?迆???????????車?芍??0?? 2014-03-03
	BYTE     byRes[32];
}NET_DVR_VEHICLE_CONTROL_LIST_DSALARM, *LPNET_DVR_VEHICLE_CONTROL_LIST_DSALARM;

//????㊣“???“??∼℅??????
typedef struct tagNET_DVR_VEHICLE_CONTROL_ALARM
{
	DWORD dwSize;
	BYTE  byListType;   //?????????“??∼℅??????0-∼℅??????1-????????2-???㊣????
	BYTE  byPlateType;  //?????角??
	BYTE  byPlateColor;    //????????
	BYTE  byRes1;
	char  sLicense[MAX_LICENSE_LEN];//????????
	char  sCardNo[MAX_CARDNO_LEN];  // ?“??
	NET_DVR_TIME_V30 struAlarmTime; //㊣“???㊣??
	DWORD dwChannel;          //?豕㊣??“???????????㊣??????IPC???辰??ipc?“??????????????DVR\nvr,?辰??DVR\NVR???“????
	DWORD dwPicDataLen;   //?????????車????0㊣赤??????????????0??㊣赤???車????????????
	BYTE  byPicType;    //?????角????0-JPEG
	BYTE  byPicTransType;        //????????????﹞???: 0-????????1-url
	BYTE  byRes3[2];
	char    *pPicData;
	BYTE  byRes2[48];
}NET_DVR_VEHICLE_CONTROL_ALARM, *LPNET_DVR_VEHICLE_CONTROL_ALARM;

//??﹞?㊣“??
typedef struct tagNET_DVR_FIRE_ALARM
{
	DWORD            dwSize;
	NET_DVR_TIME_V30 struAlarmTime;//㊣“???㊣??
	BYTE             byRes[128];
}NET_DVR_FIRE_ALARM, *LPNET_DVR_FIRE_ALARM;

//?????豕㊣?????????????????????
typedef struct
{
	DWORD dwSize;
	DWORD dwDelType;//?????????角?????????????角????????VCA_OPERATE _TYPE???“????????
	char  sLicense[16]; //????????
	char  sCardNo[48]; // ?“?? 
	BYTE  byPlateType;    //?????角??
	BYTE  byPlateColor;    //????????
	BYTE  byOperateType;    //??????℅‾?角??(0-????????,0xff-????????)
							//2014-02-25
	BYTE  byListType;//?????????“??∼℅??????0-∼℅??????1-?????? 2014-03-03
	DWORD dwDataIndex;//?????‾????     
					  //??℅‾???“???“????㊣赤?‾???????芍???????????????邦?????迆㊣赤??????????㊣赤?????????????????????角?迆???????????車?芍??0??2014-03-03
	char  sOperateIndex[MAX_OPERATE_INDEX_LEN];
	BYTE  byRes[24];
} NET_DVR_VEHICLE_CONTROL_DELINFO, *LPNET_DVR_VEHICLE_CONTROL_DELINFO;

//??????????
typedef struct tagNET_DVR_GATELAMP_INFO
{
	DWORD dwSize;
	DWORD dwChannel; //?“????
	BYTE  byLaneNo; //???????“0-㊣赤?????∫??(?豕㊣??豕??℅????∫??????),1-????1??
	BYTE  byBrightlampCtrl;//0-??㊣?????????1-??????????
	BYTE  byRes[14];
}NET_DVR_GATELAMP_INFO, *LPNET_DVR_GATELAMP_INFO;


//SDI???車1.0
#define  MATRIX_MAX_OUTPUT_NUM      256              //???車℅??車?????“??????
typedef struct tagNET_DVR_MATRIX_BASE_CFG
{
	DWORD dwSize;
	DWORD dwValidInputNum;     //???∫???????“????
	DWORD dwValidOutputNum;    //???∫???????“????
	BYTE  byRes[64];
}NET_DVR_MATRIX_BASE_CFG, *LPNET_DVR_MATRIX_BASE_CFG;

typedef struct tagNET_DVR_MATRIX_SWITCH_INFO
{
	DWORD   dwSize;
	DWORD   dwInputChan;        //?????“????????0㊣赤???????????“??????????????
	DWORD   dwOutputChan;       //???????????????“????, (????﹞????‾???????‾????(1℅????豕㊣???+1℅???㊣???+2℅????????‾????)), 0xffffffff㊣赤?????????迄??????
	DWORD   dwMatrixID; //???車ID??
	BYTE    byRes[28];
}NET_DVR_MATRIX_SWITCH_INFO, *LPNET_DVR_MATRIX_SWITCH_INFO;

typedef struct tagNET_DVR_IO_RELATION_INFO
{
	DWORD   dwSize;
	DWORD   dwIORelation[MATRIX_MAX_OUTPUT_NUM];  //?????“?????????????“??, dwIORelation[i] = j㊣赤???????“??(i + 1)???????“??j????,
												  //dwIORelation[i] = 0㊣赤???????“??i + 1???????????“??                                                                
	BYTE    byRes[256];
}NET_DVR_IO_RELATION_INFO, *LPNET_DVR_IO_RELATION_INFO;


//?迆??????????
typedef struct tagNET_DVR_EXTERNAL_DEVCOND
{
	DWORD  dwSize;
	BYTE   byExternalDevTpye;//0-????(㊣???)??1-???角?????﹞?豕㊣???2-???????????迆??3-led??  0xff-?????????“?∟?????????㊣??????
	BYTE   byRelativeIndex;//0-????(㊣???)???‾??(?角?????????角??) ﹞??∫ 1~8 Led???角???‾??﹞??∫???“1??255??   0xff-?????????“?∟?????????㊣??????
						   //    BYTE   byLaneID;// ??????????    
	BYTE   byRes[30];
}NET_DVR_EXTERNAL_DEVCOND, *LPNET_DVR_EXTERNAL_DEVCOND;

typedef struct tagNET_DVR_EXTERNAL_DEVCFG
{
	DWORD         dwSize;
	BYTE          byExternalDevTpye;//0-??????1-???角?????﹞?豕㊣???2-???????????迆??3-led?? 
	BYTE          byRes2[3];
	char          sDevName[MAX_DEVNAME_LEN];
	union
	{
		BYTE    byUnionLen[656];
		struct
		{
			NET_DVR_IPADDR  struDevIP;//DEV IP???﹞ 144
			WORD     wDevPort;//?豕㊣?????
			BYTE     byRes[510];
		}struRrReader;//???角?????﹞?豕㊣?
		struct
		{
			BYTE byRs485No; //RS485㊣角??(?????豕㊣??角?????迄????㊣角?????????????角???????迄????㊣角??????)
			BYTE byDevCtrlCode;//???????﹞????????﹞??豕㊣?(1-255)
			BYTE byAutoIssuedData;//??﹞?℅?????﹞??“?????? 0-??℅?????﹞???1-℅?????﹞?
			BYTE byOfflineDetEnable;//?????足?? 0-??㊣???1-????
			BYTE byDetCycle;//?足???????“0??60 ???? s??
			BYTE byRes[651];
		}struGateway;//???????????迆
		struct
		{
			BYTE byExternalMode;//0-RS485,1-????
			BYTE byRes[3];
			NET_DVR_IPADDR  struDevIP;//DEV IP???﹞ 144 (??byExternalMode == 1 ?㊣?迆?∫)
			WORD wDevPort;//?豕㊣?????(??byExternalMode == 1 ?㊣?迆?∫)
			BYTE byRs485No; //RS485㊣角??(?????豕㊣??角?????迄????㊣角?????????????角???????迄????㊣角??????)
			BYTE byDevCtrlCode;//???????﹞????????﹞??豕㊣?(1-255)
							   //led???“???????“???????????????????????“?角???∫????????﹞???????
			BYTE byCtrlCardType;//?????“?角?? 0-㊣???(???∫??) 1- EQ2013
			BYTE byLedScreenType;//???角?? 0-?????? 1-??????
			BYTE byLedScreenUse;//??????0-???邦 1-?????? 2-?芍???? 3-??﹞???
			BYTE byLedDisplayMode;//????℅???????﹞???: 1 "????????",    2 "℅車??" ,3 "????" ,4 "????",     5 "????"
			char sLedCustomInfo[MAX_LED_INFO];//????℅???????????
											  //led???????????“????????led???????迄???????????????邦???車???????㊣?豕???????“???????“???∼?????????赤??????
			DWORD dwLedScreenH;//??????℅谷?????????豕????LED????
			DWORD dwLedScreenW;//??????℅谷???赤?????豕????LED????
			BYTE byRes1[236];
		}struLed;//led??
	}uExternalDevInfo; //??byExternalMode ???????“???????∫
	BYTE byRes[128];
}NET_DVR_EXTERNAL_DEVCFG, *LPNET_DVR_EXTERNAL_DEVCFG;

//?∟????????????
typedef struct tagNET_DVR_EXTERNAL_DEVSTATUS//???角?????﹞?豕㊣?
{
	DWORD  dwSize;
	char   sDevName[MAX_DEVNAME_LEN];//?豕㊣?????
	BYTE   byExternalDevTpye;//0-????(㊣???)??1-???角?????﹞?豕㊣???2-???????????迆??3-led??  0xff-?????????“?∟?????????㊣??????
	BYTE   byRelativeIndex;//0-????(㊣???)???角???‾??(?角?????????角????) ﹞??∫ 1~8  0xff-?????????“?∟?????????㊣??????
	BYTE   byOnline;//0-????????1-????
	BYTE   byRes[125];
}NET_DVR_EXTERNAL_DEVSTATUS, *LPNET_DVR_EXTERNAL_DEVSTATUS;

//???????????足??????
typedef struct tagNET_DVR_ENTRANCEDET_CFG
{
	DWORD   dwSize;        //?芍???∟??
						   //?????足???????㊣???????足?????豕㊣????????辰???????????“??????????﹞????????????????????????????迆??﹞??辰?????????????迆℅??赤????????????
	BYTE   byOfflineDetEnable;//?????足?? 0-??㊣???1-????
	BYTE   byDetCycle;//?足???????“0??60 ???? s??
	BYTE   byDevCtrlCode;//???????????迆???????﹞????????﹞??豕㊣?(1-255)
	BYTE   byRes[61];
}NET_DVR_ENTRANCEDET_CFG, *LPNET_DVR_ENTRANCEDET_CFG;

//??????????????(???????? ??﹞??“??????)
typedef struct tagNET_DVR_ENTRANCEDEV_COMMAND
{
	DWORD  dwSize; //?芍???∟??
	BYTE   byDevCtrlCode;//???????????迆???????﹞????????﹞??豕㊣?(1-255)
	BYTE   byManualIssuedData;//??????????﹞? 0-??㊣???1-???? 
	BYTE   byRes[62];
}NET_DVR_ENTRANCEDEV_COMMAND, *LPNET_DVR_ENTRANCEDEV_COMMAND;

//??????????????(???????? ??????﹞??“??????)
typedef struct tagNET_DVR_ENISSUED_DATADEL
{
	DWORD   dwSize; //?芍???∟??
	BYTE   byDevCtrlCode;//???????????迆???????﹞????????﹞??豕㊣?(1-255)
	BYTE   byRes[27];
}NET_DVR_ENISSUED_DATADEL, *LPNET_DVR_ENISSUED_DATADEL;

//????????????﹞??‾???“?角??﹞?????
typedef  struct  _tagNET_ITS_PASSVEHICLE_COST_ITEM
{
	DWORD   dwSize;        //?芍???∟??
	DWORD   dwPassVehicleID; //?????辰?????????????????????辰???角????
	BYTE    byIntime[MAX_TIME_LEN]; //?????㊣????????yyyymmddhh24missfff
	BYTE    byOuttime[MAX_TIME_LEN]; //?????㊣????????yyyymmddhh24missfff
	BYTE    byCardNo[MAX_CARD_LEN];   //?“??
	BYTE    byPlateInfo[MAX_LICENSE_LEN]; //????????
	float   fPayCost;       //??﹞?????(??????)
	BYTE    byOperatorName[MAX_OPERATORNAME_LEN]; //??℅‾???㊣????
	BYTE    byVehicleType; //?????角??  0-?????? 2 ?車????
	BYTE    byRes1[3]; //?∟??℅???1
	DWORD   dwPayRuleID; // ??﹞????辰?‾????
	DWORD   dwFreeRuleID; // ???????辰?‾????
	BYTE    byRes2[256]; // ?∟??℅???2
}NET_ITS_PASSVEHICLE_COST_ITEM, *LPNET_ITS_PASSVEHICLE_COST_ITEM;

//??????????∼角?????“?角??﹞?????
typedef struct  _tagNET_ITS_HANDOVER_INFO
{
	DWORD   dwSize;        //?芍???∟??
	BYTE    byOperatorName[MAX_OPERATORNAME_LEN]; //??℅‾???㊣????
	BYTE    byOperatorCard[MAX_CARD_LEN]; //??℅‾???㊣?“??
	BYTE    byStartTime[MAX_TIME_LEN];//??∼角?㊣??????????yyyymmddhh24miss
	BYTE    byEndTime[MAX_TIME_LEN]; //??∼角?㊣??????????yyyymmddhh24miss
	float   fTotal_Pay;    //㊣?????∼角????℅?????﹞?????(??????)
	DWORD   dwTotal_Records;   //㊣?????∼角????℅?????????﹞???????????
	BYTE    byRes[64]; //?∟??
}NET_ITS_HANDOVER_INFO, *LPNET_ITS_HANDOVER_INFO;


typedef struct tagNET_DVR_CURTRIGGERMODE //(3.7Ver)
{
	DWORD  dwSize;
	DWORD  dwTriggerType; //??﹞??角?????那??ITC_TRIGGERMODE_TYPE 
	BYTE   byRes[24];
}NET_DVR_CURTRIGGERMODE, *LPNET_DVR_CURTRIGGERMODE;



typedef struct tagNET_DVR_TEMP_HUMI
{
	DWORD    dwSize;            // ?????∟?? && ∼?㊣??“?????車????????
	DWORD       dwChannel;         // ?“??????????1
	int      iHumidity;         // ????????????﹞???val/1000????????﹞???val%1000
	int      iTemp;             // ????????????﹞???val/1000????????﹞???val%100
	BYTE     byRes[8];          // ㊣???℅???    
}NET_DVR_TEMP_HUMI, *LPNET_DVR_TEMP_HUMI;


typedef struct tagNET_DVR_ALARMSOUNDMODE_CFG
{
	DWORD    dwSize;      // ?????∟?? && ∼?㊣??“?????車????????
	DWORD    dwChannel;     // ?“??????????1
	DWORD    dwSoundMode;   // ㊣“??????: 0?芍????????1??㊣“??????2????????
	BYTE     byRes[12];     // ㊣???℅???
}NET_DVR_ALARMSOUNDMODE_CFG, *LPNET_DVR_ALARMSOUNDMODE_CFG;

typedef struct tagNET_DVR_SECURITYMODE
{
	DWORD    dwSize;// ?????∟?? && ∼?㊣??“?????車????????
	DWORD    dwChannel;         // ?“??????????1
	DWORD    dwMode;        // ∼???????: 1?????????‾??????2???????????‾??????
	char     szRandCode[6];   //?豕㊣????∫??"???迆?谷?∟??"
	BYTE     byRes[6];         // ㊣???℅???
}NET_DVR_SECURITYMODE, *LPNET_DVR_SECURITYMODE;

typedef struct tagNET_DVR_MOBILE_CAPTUREPIC_CFG
{
	DWORD dwSize;
	BYTE  byPreviewFpsAdjMode;   /* ?∟???????‾??????:0-???‾????㊣那℅??????∟??,1-㊣那℅????????∟??,2-?迄??GPS?????????????‾?? */
	BYTE  bySelPeccType;           /* ??﹞??????????角?? */
	BYTE  byOptHabit;             /* ???∟??℅‾?∼??, 0:?∟∼????∟;1:??∼????????∟ */
	BYTE  byEnablePeccRec;      /* 1: ????????????℅???, 0: ????????????℅??? */
	BYTE  byPicSize;                /*0=CIF,1=QCIF,2=D1,3=UXGA(1600x1200), 4=SVGA(800x600), 5=HD720p(1280x720),6-VGA??7-XVGA??8-HD900p??9-HD1080??10-2560*1920??11-1600*304??12-2048*1536??13-2448*2048,14-2448*1200??15-2448*800??16-XGA(1024*768)??17-SXGA(1280*1024),18-WD1(960*576/960*480),19-1080i */
	BYTE  byPicQuality;            /* ???????????? 0-℅??? 1-???? 2-??∼? */
	BYTE  byRes[62];
}NET_DVR_MOBILE_CAPTUREPIC_CFG, *LPNET_DVR_MOBILE_CAPTUREPIC_CFG;

typedef struct tagNET_DVR_CMS_PARAM
{
	DWORD         dwSize;
	NET_DVR_IPADDR    struAddr;                    // ???“﹞????‾IP
	WORD            wServerPort;                   // ???“﹞????‾?足????????
	BYTE         bySeverProtocolType;            //???“???谷?角?? 1-??????2-Ehome
	BYTE            byStatus;                         //?豕㊣?℅??芍???????“??℅?????1-??℅??芍??2-??℅??芍
	BYTE         sDeviceId[NAME_LEN/*32*/];     //?豕㊣?ID???????“?芍??
	char         sPassWord[PASSWD_LEN];  //????
										 /********* IPC5.1.7 ???????? Begin 2014-03-21***********/
	BYTE         sPlatformEhomeVersion[NAME_LEN];//???“EHOME???谷∼?㊣?
												 /********* IPC5.1.7 ???????? end 2014-03-21***********/
	BYTE         byNetWork;                //?????角????0- ????????1-℅?????2-??????????????3-??????????4-3G????
	BYTE         byAddressType;            //0 - ??????, 1 - ipv4/ipv6???﹞??2 - ?辰??
	BYTE         byProtocolVersion;            //???谷∼?㊣? 0 - ??????, 1 “C v2.0??2 “C v4.0,3-v2.6
	BYTE            byRes1;
	BYTE         sDomainName[MAX_DOMAIN_NAME/*64*/]; //???“﹞????‾?辰????byAddressType??2?㊣???∫
	BYTE        byEnable;      //0-??㊣???1-????
	BYTE            byRes[139];          // ㊣???℅???
}NET_DVR_CMS_PARAM, *LPNET_DVR_CMS_PARAM;

//?????芍??
typedef struct tagNET_DVR_HEATMAP_COND
{
	DWORD   dwSize;
	DWORD   dwChannel; //?“????
	BYTE    byDetSceneID;//?足?????∼??[1],?辰?迆?㊣?∼?∫??1?????∼, IPC??????0
	BYTE    byRes[63];
}NET_DVR_HEATMAP_COND, *LPNET_DVR_HEATMAP_COND;

typedef struct tagNET_DVR_HEATMAP_PARAM
{
	BYTE byTargetTrackEnable;//??㊣那?迆℅???0-??㊣???1-??????????0-??㊣?
	BYTE bySensitivity;  //?谷??????????﹞??∫1-100??????50
	BYTE byBackgroundUpdateRate;//㊣??∼?邦????????﹞??∫1-100??????50
	BYTE bySceneChangeLevel;//???∼㊣?????????﹞??∫1-100??????50
	BYTE byMinTargetSize;//℅?????㊣那??????﹞??∫1-100??????50
						 /*
						 0-	?????????角????COMM_UPLOAD_HEATMAP_RESULT??
						 1-	?????角????COMM_UPLOAD_HEATMAP_RESULT_PDC ?? COMM_UPLOAD_HEATMAP_RESULT_DURATION??
						 */
	BYTE byUploadHeatMapResultType;
	BYTE byRes[2];
	float fConfidence;//??????[0.00,100.00]
	BYTE byRes1[8];
}NET_DVR_HEATMAP_PARAM, *LPNET_DVR_HEATMAP_PARAM;

#define MAX_HEATMAPREGION_NUM 8

//???????足???????芍??
typedef struct tagNET_DVR_HEATMAP_CFG
{
	DWORD dwSize;
	BYTE  byEnable; //????????﹞?????
	BYTE  byRes[3];
	NET_VCA_POLYGON struRegion[MAX_HEATMAPREGION_NUM/*8*/];//???辰﹞??∫
	NET_DVR_HEATMAP_PARAM  struHeatMap;
	NET_DVR_HANDLEEXCEPTION_V40 struHandleException;  //?足?????赤﹞???
													  //??﹞??㊣??
	NET_DVR_SCHEDTIME struAlarmSched[MAX_DAYS/*7*/][MAX_TIMESEGMENT_V30/*8*/];
	BYTE  byRes1[512];
}NET_DVR_HEATMAP_CFG, *LPNET_DVR_HEATMAP_CFG;

//??????㊣“??????
typedef struct tagNET_DVR_HEATMAP_RESULT
{
	DWORD  dwSize;
	NET_VCA_DEV_INFO  struDevInfo;/*?豕㊣?????*/
	NET_DVR_TIME_EX   struStartTime;/*?????㊣??*/
	NET_DVR_TIME_EX   struEndTime;/*?芍???㊣??*/
	DWORD  dwMaxHeatMapValue;//℅??車??????
	DWORD  dwMinHeatMapValue;//℅?????????
	DWORD  dwTimeHeatMapValue;// (?㊣????????)???迄??????
	WORD   wArrayLine;//?????????????? 
	WORD   wArrayColumn;//?????????????? ?“?㊣????????0???㊣?辰??????????????????????????
	BYTE*  pBuffer;  //??????????????????????
	BYTE   byDetSceneID;//?足?????∼??[1],?辰?迆?㊣?∼?∫??1?????∼, IPC??????0
	BYTE   byBrokenNetHttp;     //????????㊣那??????0-??????????????1-????????
	WORD   wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE   byTimeDiffFlag;      /*?㊣??℅?????﹞????∫  0-?㊣?????∫?? 1-?㊣?????∫ */
	char   cStartTimeDifferenceH;      /*?????㊣????UTC???㊣???“???㊣????-12 ... +14??+㊣赤??????*/
	char   cStartTimeDifferenceM;      /*?????㊣????UTC???㊣???“﹞???????-30, 30, 45??+㊣赤??????*/
	char   cStopTimeDifferenceH;        /*?芍???㊣????UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????*/
	char   cStopTimeDifferenceM;       /*?芍???㊣????UTC???㊣???“﹞???????-30, 30, 45??+㊣赤??????*/
	BYTE   byArrayUnitType; //???車?????????角???“???車???????????????????????????角??????1-byte??2-short,4-int
	BYTE   byRes1[2];
	DWORD  dwTotalTime;//?????㊣??℅?????????????∼????㊣?????㊣??㊣“???㊣????
	BYTE   byRes[112];
}NET_DVR_HEATMAP_RESULT, *LPNET_DVR_HEATMAP_RESULT;

//??????㊣“???谷?? ?????芍????
typedef struct tagNET_DVR_HEATMAP_QUERY_COND
{
	DWORD   dwSize;
	DWORD   dwChannel;//?“????
	NET_DVR_TIME_EX   struStartTime;/*?????㊣??*/
	NET_DVR_TIME_EX   struEndTime;/*?芍???㊣??*/
	BYTE    byReportType;//0-???∫????1-??㊣“㊣赤??2-??㊣“㊣赤??3-??㊣“㊣赤??4-?那㊣“㊣赤
	BYTE    byDetSceneID;//?足?????∼??[1],?辰?迆?㊣?∼?∫??1?????∼, IPC??????0
	BYTE    byHeatMapInfoType;//0~????????????????﹞?????1~???????????????車????﹞?????2~?????????????????????????????車????
	BYTE    byStatisticalModel;//????????  0s-㊣????“????????1-?????㊣????2-∼???????????
	BYTE    byRes[124];
}NET_DVR_HEATMAP_QUERY_COND, *LPNET_DVR_HEATMAP_QUERY_COND;

//??????㊣“???谷?? 
typedef struct tagNET_DVR_HEATMAP_INFO
{
	DWORD  dwSize;
	NET_DVR_TIME_EX   struStartTime;/*?????????㊣??*/
	NET_DVR_TIME_EX   struEndTime;  /*?????芍???㊣??*/
	DWORD  dwHeatMapPicLen;         /*?????????????∟??(?㊣???????????㊣?辰????℅?????﹞?0?????????????㊣?辰????℅?????0)*/
	BYTE*  pBuffer;                 //????????????????
	DWORD  dwTimeHeatMapValue;     //?㊣????????(???????????????㊣?辰,??℅??????豕??????)
	DWORD  dwHeatMapMaxValue;//?足?????辰℅????????????㊣?????㊣??(s)(???????????㊣???∫)
	DWORD  dwHeatMapMinValue;//?足?????辰℅????????????㊣?????㊣??(s) (???????????㊣???∫)
	WORD   wArrayLine;//?????????????? ?“???????????車?????㊣?迆?∫??
	WORD   wArrayColumn;//?????????????? ?“?㊣????????0???㊣?辰???????????????????????????“???????????車?????㊣?迆?∫??
	BYTE*  pArrayBuffer;//???????車?????????“???車?????????????????∟????wArrayLine* wArrayColumn*?????????角???∟???“????byArrayUnitType??1㊣赤????int????????????????4??℅???????
	BYTE   byArrayUnitType;//???車?????????角???“???車???????????????????????????角??????0~byte??1~int??(?㊣?豕㊣???﹞??????車?????㊣?迆?∫)
	BYTE   byRes[107];
}NET_DVR_HEATMAP_INFO, *LPNET_DVR_HEATMAP_INFO;

typedef struct tagNET_DVR_PDC_QUERY_COND
{
	DWORD   dwSize;
	DWORD   dwChannel; //?“????
	NET_DVR_TIME_EX   struStartTime; //?????㊣??
	NET_DVR_TIME_EX   struEndTime; //?芍???㊣??
	BYTE    byReportType; //0-???∫????1-??㊣“㊣赤??2-??㊣“㊣赤??3-??㊣“㊣赤??4-?那㊣“㊣赤
	BYTE    byEnableProgramStatistics; //??﹞?∼???????????0-﹞???1-??
	BYTE    byTriggerPeopleCountingData;//??﹞????‾??????????????, 0-﹞???1-??
	BYTE    byMultiChannelSearch;//?角?“???谷??????, 0-﹞???1-???“pSearchChannel ??dwSearchChannelNum???∫??
	DWORD   dwPlayScheduleNo; //∼??????????㊣????????????
	BYTE    byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char cStartTimeDifferenceH;   //?????㊣????UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣??
	char cStartTimeDifferenceM;   //?????㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	char cStopTimeDifferenceH;    //?芍???㊣????UTC???㊣???“???㊣????-12 ... +14??????㊣赤?????㊣??
	char cStopTimeDifferenceM;    //?芍???㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	BYTE    byRes1[3];
	DWORD dwSearchChannelNum; //?谷???“??????
	char*    pSearchChannel;     //?谷???“???????車????sizeof(DWORD)* dwSearchChannelNum
	BYTE    byRes[104];
}NET_DVR_PDC_QUERY_COND, *LPNET_DVR_PDC_QUERY_COND;

typedef struct tagNET_DVR_PROGRAM_INFO
{
	DWORD   dwProgramNo; //????㊣角??
	BYTE    sProgramName[NAME_LEN]; //????????
	BYTE    byRes[16];
}NET_DVR_PROGRAM_INFO, *LPNET_DVR_PROGRAM_INFO;
typedef struct tagNET_DVR_POSINFO_OVERLAY
{
	DWORD   dwSize;
	BYTE    byEnable;// Pos??????????0-????????1-????
	BYTE    byBackpackEnanble;//??﹞?????㊣?∼邦??????﹞???????0-????????1-????
	BYTE    bySexEnanble;//??﹞???????㊣???????﹞???????0-????????1-????
	BYTE    byCarryEnanble;//??﹞??????角???‾??????﹞???????0-????????1-????
	BYTE    byRideEnanble;//??﹞???????????????﹞???????0-????????1-????
	BYTE    byMaskEnanble;//??﹞?????????????????﹞???????0-????????1-????
	BYTE    byHatEnanble;//??﹞??????‾?㊣℅???????﹞???????0-????????1-????
	BYTE    bySleeveEnanble;//??﹞??????∟?????谷????0-????????1-????
	BYTE    byPantsTypeEnanble;//??﹞???????℅???????????﹞???????0-????????1-????
	BYTE    byHairEnanble;//??﹞??????∟??﹞???????﹞???????0-????????1-????
	BYTE    byGlassesEnanble;//??﹞??????‾??????????﹞???????0-????????1-????
	BYTE    byAgeEnanble;//??﹞??????那????????﹞???????0-????????1-????
	BYTE    byHeightEnanble;//??﹞??????赤????????﹞???????0-????????1-????
	BYTE    byRes[511];
}NET_DVR_POSINFO_OVERLAY, *LPNET_DVR_POSINFO_OVERLAY;
typedef struct tagNET_DVR_PDC_RESULT
{
	DWORD   dwSize;
	NET_DVR_TIME_EX   struStartTime;/*?????㊣??*/
	NET_DVR_TIME_EX   struEndTime;/*?芍???㊣??*/
	DWORD   dwEnterNum;   //????????
	DWORD   dwLeaveNum;  //????????
	NET_DVR_PROGRAM_INFO struProgramInfo;        //????????
	DWORD  dwPeoplePassing;        //????????
	BYTE    byRes1[8];    //㊣???℅???
	BYTE    byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char cStartTimeDifferenceH;   //?????㊣????UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣??
	char cStartTimeDifferenceM;   //?????㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	char cStopTimeDifferenceH;    //?芍???㊣????UTC???㊣???“???㊣????-12 ... +14??????㊣赤?????㊣??
	char cStopTimeDifferenceM;    //?芍???㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	BYTE    byRes[187];    //㊣???℅???
}NET_DVR_PDC_RESULT, *LPNET_DVR_PDC_RESULT;


typedef struct tagNET_DVR_MOBILE_PLATE_RECOGCFG
{
	DWORD dwSize;
	BYTE  byDefaultCHN[MAX_CHJC_NUM]; /*?豕㊣???????﹞?????℅??辰??  3 */
	BYTE  byTimeOsd;// ?㊣?????????? 0 - ???????? 1- ????
	BYTE  byRecogResultOsd;//??㊣??芍??????  0 - ???????? 1- ????
	BYTE  byRecogHint;//??㊣??????芍?? 0 - ???芍???? 1- ?芍??
	BYTE  byRecogDir;//??㊣?﹞??辰 0: ???辰, 1: ㊣??辰
	BYTE  byRecogEnv;//??㊣??﹞?? 0: ∼℅?足, 1: ?赤??
	BYTE  byRecogPlateType;//0-????????㊣???1-?車??????㊣?
	BYTE  byUploadPlate;//??﹞????????? 0 -???????? 1-????
	BYTE  byRes[62];
}NET_DVR_MOBILE_PLATE_RECOGCFG, *LPNET_DVR_MOBILE_PLATE_RECOGCFG;

typedef struct tagNET_DVR_MOBILE_RADAR_CFG
{
	DWORD  dwSize;
	BYTE   byEnableRadar;   /* 0:???????℅??  1:?????℅?? */
	BYTE   byEnableAlarm;   /* 0:??????㊣“??  1:????㊣“?? */
	WORD   wOverSpeed;    /* ﹞??∫??20~250 */
	BYTE   bySpeedUnits;  /* 0:????/???㊣   1:????/???㊣ */
	BYTE   bydirection;     /* 0:﹞??辰?“?℅???????角?辰?? 1:???辰?“?℅??????﹞??辰?? */
	BYTE   byMeasureMode;   /* 0:???? (?℅??℅???)       1:???? (?℅??℅???)*/
	BYTE   byTargetType;    /* 0:℅??足(?℅??????????℅??足)  1:℅??邦(?℅??????????℅??邦)*/
	BYTE   bySensitivity;  /* ?谷????[0,100] */
	BYTE   byCaptureNum;   /* ℅???????[0,255] */
	BYTE   byUploadPlate;  /*??﹞?????????℅??????? 0-????????1-????*/
	BYTE   byRes[61];
}NET_DVR_MOBILE_RADAR_CFG, *LPNET_DVR_MOBILE_RADAR_CFG;

typedef struct tagNET_DVR_MOBILE_LOCALPLATECHK_CFG
{
	DWORD       dwSize;
	BYTE  byCheck;  /* ?邦?谷??????﹞????????????邦?谷 0-?邦?谷??1-???邦?谷*/
	BYTE  byCheckAlarm;/* ?邦?谷????㊣“?? 0-??㊣“????1-㊣“??*/
	BYTE  byCheckHint; /* ?邦?谷?????芍?? (?赤???芍??) 0-???芍????1-?芍??*/
	BYTE  byUploadBlackCar; /*??﹞????????????? 0-????????1-????*/
	BYTE  byRes[64];
}NET_DVR_MOBILE_LOCALPLATECHK_CFG, *LPNET_DVR_MOBILE_LOCALPLATECHK_CFG;

typedef struct tagNET_DVR_VEHICLE_CHECK
{
	DWORD dwSize;
	DWORD  dwChannel;//?“????0xff - ?????“???“??????1,?迆㊣赤?????“????
	NET_DVR_PLATE_INFO  struPlateInfo; //????????
	WORD  wIllegalType; //?????角???????迆㊣那?“?? ?“??????????
	BYTE  byRes[2];
	char sIllegalTypeInfo[128];// ?????角???????“128??
	NET_DVR_TIME_V30  struIllegalTime;//?????㊣??
	BYTE  byIllegalVehicleNum;//??????﹞“????
	BYTE  byRes1[3];
	char sCustomInfo[64];//℅??“??????
	BYTE  byRes2[128]; // ㊣???℅???
}NET_DVR_VEHICLE_CHECK, *LPNET_DVR_VEHICLE_CHECK;

typedef enum _LONG_CFG_SEND_DATA_TYPE_ENUM_
{
	ENUM_DVR_VEHICLE_CHECK = 1, //???????????????邦?谷?角??
	ENUM_MSC_SEND_DATA = 2, //?????????‾?????角??
	ENUM_ACS_SEND_DATA = 3, //?????‾?迆?????角??
	ENUM_TME_CARD_SEND_DATA = 4, //??????(???????????迆)?“???????角??
	ENUM_TME_VEHICLE_SEND_DATA = 5, //??????(???????????迆)?????????角??
	ENUM_DVR_DEBUG_CMD = 6, //?‾???邦??????
	ENUM_DVR_SCREEN_CTRL_CMD = 7, //?????????邦???角??
	ENUM_CVR_PASSBACK_SEND_DATA = 8, //CVR?????角????????????????????
	ENUM_ACS_INTELLIGENT_IDENTITY_DATA = 9,  //?????赤﹞???㊣??????????角??
	ENUM_VIDEO_INTERCOM_SEND_DATA = 10,  //?????????????角??
	ENUM_SEND_JSON_DATA = 11    //????JSON????
}LONG_CFG_SEND_DATA_TYPE_ENUM;

typedef enum _LONG_CFG_RECV_DATA_TYPE_ENUM_
{
	ENUM_DVR_ERROR_CODE = 1, //?赤?車??
	ENUM_MSC_RECV_DATA = 2, //?????????‾?????角??
	ENUM_ACS_RECV_DATA = 3 //?????‾?迆?????角??
}LONG_CFG_RECV_DATA_TYPE_ENUM;

typedef struct tagNET_DVR_WIPER_CONTINUEWORK_PARAM
{
	BYTE  byWorkTimeInterval;//?∟℅‾?㊣???????“??????????[2s~60s]
	BYTE  byRes[3];
	DWORD dwContinueWorkTime;//?????∟℅‾?㊣???“??????????[2min~24h]????????∼?﹞???????
	BYTE  byRes1[8];
}NET_DVR_WIPER_CONTINUEWORK_PARAM, *LPNET_DVR_WIPER_CONTINUEWORK_PARAM;

typedef union tagNET_DVR_WIPERMODE_PARAM_UNION
{
	BYTE uLen[16];
	//?㊣byWiperWorkMode = 1?㊣?迆?∫
	NET_DVR_WIPER_CONTINUEWORK_PARAM struWiperContinueWorkParam;
}NET_DVR_WIPERMODE_PARAM_UNION, *LPNET_DVR_WIPERMODE_PARAM_UNION;

typedef struct tagNET_DVR_WIPERINFO_CFG
{
	DWORD dwSize;
	//?那???∟℅‾????
	//0-??????????1-?????????“?????????芍??NET_DVR_ROTATE_OPERATE_PARAM????2-??????????0xff-??㊣?
	BYTE  byWiperWorkMode;
	BYTE  byRes1;
	WORD  wSensitivity;//???那?谷????
	BYTE  byRes[20];
	NET_DVR_WIPERMODE_PARAM_UNION ustruWiperModeParam;
}NET_DVR_WIPERINFO_CFG, *LPNET_DVR_WIPERINFO_CFG;

//㊣???℅??????????? 
typedef struct tagNET_DVR_AUTOFOCUS_TESTCFG
{
	DWORD     dwSize;
	DWORD     dwChannel;            //?“????
	BYTE      byRes[24];            // ㊣???℅???
}NET_DVR_AUTOFOCUS_TESTCFG, *LPNET_DVR_AUTOFOCUS_TESTCFG;


typedef struct tagNET_DVR_VIDEO_OUT_CFG
{
	BYTE    byDisplayMode;        //??????????1-㊣那℅???2-??????3-??????0xff-℅??“??
	BYTE     byBrightnessLevel;     // ??????0-100
	BYTE    byContrastLevel;     // ??㊣???0-100
	BYTE     bySharpnessLevel;     // ????0-100
	BYTE     bySaturationLevel;     // ㊣?????0-100
	BYTE     byHueLevel;         // ???‾0-100
	BYTE    byImageMode;        // ??????????0-??????????1-??????1??2-??????2??3-??????3??4-????????1??5-????????2??6-????????3
	BYTE    byRes[5];            // ㊣???
}NET_DVR_VIDEO_OUT_CFG, *LPNET_DVR_VIDEO_OUT_CFG;
//????
typedef struct tagNET_DVR_COLOR_TEMPERATURE_CFG
{
	BYTE    byRed;                //?足???? 0-100
	BYTE    byGreen;            //?????? 0-100
	BYTE    byBlue;                //??????0-100
	BYTE    byRedOffset;        //?足????????0-100
	BYTE    byGreenOffset;        //??????????0-100
	BYTE    byBlueOffset;        //??????????0-100
	BYTE    byRes[6];
}NET_DVR_COLOR_TEMPERATURE_CFG, *LPNET_DVR_COLOR_TEMPERATURE_CFG;

typedef struct tagNET_DVR_ADC_CFG
{
	BYTE    byGainR;            //????R?? 0-100
	BYTE    byGainG;            //????G??0-100
	BYTE    byGainB;            //????B??0-100
	BYTE    byOffsetR;            //??????R??0-100
	BYTE    byOffsetG;            //??????G??0-100
	BYTE    byOffsetB;            //??????B??0-100
	BYTE    byRes[6];
}NET_DVR_ADC_CFG, *LPNET_DVR_ADC_CFG;

typedef struct tagNET_DVR_SCREEN_EDGE_CFG
{
	BYTE    byEnable;            //??﹞?????????㊣??? 0-?????? 1-????
	BYTE    byLeftEdge;            //℅車㊣?????0-100
	BYTE    byRightEdge;        //??㊣?????0-100
	BYTE    byTopEdge;            //??㊣?????0-100
	BYTE    byLowerEdge;        //??㊣?????0-100
	BYTE    byRes[7];
}NET_DVR_SCREEN_EDGE_CFG, *LPNET_DVR_SCREEN_EDGE_CFG;

typedef struct tagNET_DVR_SCREEN_DISPLAY_CFG
{
	DWORD   dwSize;
	BYTE    byCfgType;       /*?豕?????????角?????????㊣?????????∫??0-???∫??1-㊣?????????2-??????????3-??????????4-ADC??????5-????㊣???????*/
	BYTE    byBackLight;    //㊣??? 0~100
	BYTE    byRes1[2];
	NET_DVR_VIDEO_OUT_CFG           struVideoOutCfg;     //?????????“??????????
	NET_DVR_COLOR_TEMPERATURE_CFG struColorTempCfg;  //????????
	NET_DVR_ADC_CFG               struAdcCfg;        //ADC????
	NET_DVR_SCREEN_EDGE_CFG       struScreenEdgeCfg; //????㊣???????
	BYTE byRes[32];
}NET_DVR_SCREEN_DISPLAY_CFG, *LPNET_DVR_SCREEN_DISPLAY_CFG;
//?????????角??
typedef enum tagNET_DVR_SCREEN_REMOTE_CTRL_TYPE
{
	REMOTE_CTRL_POWERSUPPLY_OPEN = 1,//1-??????
	REMOTE_CTRL_POWERSUPPLY_CLOSE = 2,//2-??????
	REMOTE_CTRL_SIGNALSOURCE,//3-??????
	REMOTE_CTRL_MENU,//4-????
	REMOTE_CTRL_DETERMINATION,//5-?﹞?“
	REMOTE_CTRL_ON,//6-??
	REMOTE_CTRL_UNDER,//7-??
	REMOTE_CTRL_LEFT,//8-℅車
	REMOTE_CTRL_RIGHT,//9-??
	REMOTE_CTRL_INFO,//10-INFO
	REMOTE_CTRL_RETURN,// 11-﹞?????????    
	REMOTE_CTRL_NUM, //12-??℅??邦??
}SCREEN_REMOTE_CTRL_TYPE;

//????????∼??邦
typedef struct tagNET_DVR_SIMULATE_SCREEN_REMOTE_CTRL
{
	DWORD       dwSize;
	BYTE        byControlType;    //1-????????2-????????3-????????4-??????5-?﹞?“??6-????7-????8-℅車??9-??,  10-INFO, 11-﹞?????????,12-??℅?∼??邦,13-????????∼??邦
	BYTE       byControlParam; //??℅‾????????℅‾?角????12?㊣??㊣赤??∼??邦???“0-9??????????℅‾?㊣?????????∫
	BYTE        byRes[14];
}NET_DVR_SIMULATE_SCREEN_REMOTE_CTRL, *LPNET_DVR_SIMULATE_SCREEN_REMOTE_CTRL;

//??????????????
typedef struct tagNET_DVR_SCREEN_SIGNAL_CFG
{
	DWORD    dwSize;
	BYTE     bySignalSourceType;    //???????‾?????????? NET_DVR_CAM_MODE
	BYTE     byNoSignalPic;            //????????????????1-??????2-??????3-LOGO????
	BYTE     byRes[14];
}NET_DVR_SCREEN_SIGNAL_CFG, *LPNET_DVR_SCREEN_SIGNAL_CFG;

//????????????
typedef struct tagNET_DVRSCREEN_SPLICE_CFG
{
	DWORD   dwSize;
	BYTE    bySpliceIndex;            //℅???????????0????????????????????㊣赤??℅???????????????????????0101~0202??4?谷?????辰??4?谷????bySpliceIndex㊣????角??????﹞?0.
	BYTE    bySpliceX;                //??????℅?????????????????
	BYTE    bySpliceY;                //??????℅?????????????????
	BYTE    byWidth;                //?????????赤??????????????
	BYTE    byHeight;               //????????????????????????
	BYTE    byRes[11];
}NET_DVR_SCREEN_SPLICE_CFG, *LPNET_DVR_SCREEN_SPLICE_CFG;

//﹞????∟℅‾﹞???????
typedef struct tagNET_DVR_SCREEN_FAN_WORK_MODE_CFG
{
	DWORD       dwSize;
	BYTE        byWorkMode;                 //1-??????2-℅???
	BYTE        byTemperatureLimitValue; //﹞?????????????﹞∫?????∟℅‾??????℅????㊣?????????∫??
	BYTE        byRes[14];
}NET_DVR_SCREEN_FAN_WORK_MODE_CFG, *LPNET_DVR_SCREEN_FAN_WORK_MODE_CFG;

//VGA????????
typedef struct tagNET_DVR_SCREEN_VGA_CFG
{
	DWORD       dwSize;
	BYTE        byEnableAutoAdjust;      //??﹞?℅????‾????0-﹞???1-?????㊣℅????‾???????㊣???????????∫
	BYTE        byHorizontalPosition;   //???????? 0-100
	BYTE        byVerticalPosition;      //???㊣???? 0-100
	BYTE        byClock;                //?㊣?? ??0-100
	BYTE        byPhase;                //?角????0-100
	BYTE        byRes[11];
}NET_DVR_SCREEN_VGA_CFG, *LPNET_DVR_SCREEN_VGA_CFG;

//????????????
typedef struct tagNET_DVR_SCREEN_MENU_CFG
{
	DWORD       dwSize;
	BYTE        byMenuLanguage; //??????1-??????2-????
	BYTE        byTransparency; //???‾?? 0-?????‾??1-????2-????3-??
	BYTE        byDuration;        //?????㊣????0-??????1-5????2-15????3-30??
	BYTE        byRes[13];
}NET_DVR_SCREEN_MENU_CFG, *LPNET_DVR_SCREEN_MENU_CFG;

//??????
typedef struct tagNET_DVR_PIP_CFG
{
	DWORD   dwSize;
	BYTE    byEnable;    //??﹞??????????? 0-?????? 1-????
	BYTE    bySubWindowSource;    //℅?????????????????????NET_DVR_CAM_MODE
	BYTE    bySubWindowBorderColor;    //℅?????㊣??辰?????? 1-??????2-????
	BYTE    byRes1;
	NET_DVR_RECTCFG  struPosition;    //℅???????????????℅??車????100*100
	BYTE    byRes2[12];
}NET_DVR_PIP_CFG, *LPNET_DVR_PIP_CFG;

//???赤????
typedef struct tagNET_DVR_DEFOG_LCD
{
	DWORD   dwSize;
	BYTE    byDefogEnable;    //???????赤??????0~??㊣???1~????
	BYTE    byDefogModel;     //???赤??????0~℅??????赤??1~???????赤
	BYTE    byDefogLevel;     //???赤??????????1-7??????????????????4??????1??0.5??????2??0.55??????3??0.60??????4??0.65??????5??0.70??????6??0.75??????7??0.80???“???赤?????????????赤?㊣???????????赤??????????
	BYTE    byRes[33];
}NET_DVR_DEFOG_LCD, *LPNET_DVR_DEFOG_LCD;

//????????
typedef struct tagNET_DVR_SCREEN_WALL_CFG
{
	DWORD    dwSize;
	BYTE    byEnable; //℅?????????0-????㊣???1-??????
	BYTE    byRes[35];
}NET_DVR_SCREEN_WALL_CFG, *LPNET_DVR_SCREEN_WALL_CFG;

//????????
typedef struct tagNET_DVR_SCREEN_POS_CFG
{
	DWORD     dwSize;
	BYTE     byScreenRowNum;//??????????
	BYTE     byScreenColNum;//??????????
	BYTE     byRes[34];
}NET_DVR_SCREEN_POS_CFG, *LPNET_DVR_SCREEN_POS_CFG;

typedef struct tagNET_DVR_VIDEO_AUDIOIN_CFG
{
	DWORD     dwSize;     //?芍???????∟??
	DWORD     dwChanNo;   //???????“?????? ∼車?“???????車??㊣?∼車?“???????????“???辰℅‾?????“??????????
	BYTE      byEnable;   //??﹞?????????????℅‾???????????? 0-?????? 1-????
	BYTE      byRes[31];          //㊣???
}NET_DVR_VIDEO_AUDIOIN_CFG, *LPNET_DVR_VIDEO_AUDIOIN_CFG;

typedef struct _NET_DVR_VCA_DETION_CFG
{
	DWORD   dwSize;
	BYTE    byEnable;//????
	BYTE    byRes1[3];
	NET_DVR_SCHEDTIME    struAlarmSched[MAX_DAYS][MAX_TIMESEGMENT_V30];
	NET_DVR_HANDLEEXCEPTION_V40 struHandleException;  //?足?????赤﹞???
	DWORD    dwMaxRelRecordChanNum;  //㊣“????﹞??????車?“?? ???“??????℅??車?∫??????
	DWORD    dwRelRecordChanNum;     //㊣“????﹞??????車?“?? ?? ?????∫????????
	DWORD    dwRelRecordChan[MAX_CHANNUM_V30/*64*/];//??﹞??????“????
	BYTE    byEnablePreset[MAX_CHANNUM_V30];
	BYTE    byPresetNo[MAX_CHANNUM_V30];
	BYTE    byEnableCruise[MAX_CHANNUM_V30];
	BYTE    byCruiseNo[MAX_CHANNUM_V30];
	BYTE    byEnablePtzTrack[MAX_CHANNUM_V30];
	BYTE    byPTZTrack[MAX_CHANNUM_V30];
	NET_DVR_SCHEDTIME struHolidayTime[MAX_TIMESEGMENT_V30/*8*/]; //??????﹞??㊣??
	BYTE  byRes[224];;
}NET_DVR_VCA_DETION_CFG, *LPNET_DVR_VCA_DETION_CFG;

typedef struct tagNET_DVR_VCA_DETECTION_CFG_V40
{
	DWORD dwSize;  //?芍?????車??
	BYTE    byEnable;//????
	BYTE   byRes1[3];
	NET_DVR_SCHEDTIME    struAlarmSched[MAX_DAYS][MAX_TIMESEGMENT_V30];
	DWORD   dwHandleType;        //?足?????赤,?足?????赤﹞?????"?辰"?芍??   
								 /*0x00: ???足??*/
								 /*0x01: ?角???‾??????*/
								 /*0x02: ?迄??????*/
								 /*0x04: ????????*/
								 /*0x08: ??﹞?㊣“??????*/
								 /*0x10: ??﹞?JPRG℅?????????Email*/
								 /*0x20: ?????迄??㊣“???‾????*/
								 /*0x40: ??????℅?????(???∼????PCNVR?∫??)*/
								 /*0x200: ℅?????????FTP*/
	DWORD   dwMaxRelAlarmOutChanNum; //??﹞???㊣“???????“?????“??????℅??車?∫??????
	DWORD   dwRelAlarmOut[MAX_ALARMOUT_V40/*4128*/]; //* ??????﹞???㊣“??????????∼???㊣赤??,????????????????????㊣那0???????辰??????????????0xffffffff?辰?車?????∫*/ 
													 /*??﹞????????“??*/
	DWORD     dwMaxRecordChanNum;   //?豕㊣??∫????℅??車?????????“????-????
	DWORD     dwRelRecordChan[MAX_CHANNUM_V40/*512*/];     /* ??????﹞??????“????∼???㊣赤??,????????????????????㊣那0???????辰??????????????0xffffffff,?辰?車?????∫*/
	DWORD dwEnablePresetChanNum;  //?㊣?∼???????∟??????????
	NET_DVR_PRESETCHAN_INFO struPresetChanInfo[MAX_CHANNUM_V40/*512*/]; //???????∟???????????㊣dwEnablePresetChanNum????0?㊣????℅谷??㊣那0-(dwEnablePresetChanNum -1)???∫???㊣??0?㊣??㊣赤?????????∟????
	BYTE byRes2[516];                    /*㊣???*/
	DWORD dwEnableCruiseChanNum;  //?㊣?∼?????????????“??????
	NET_DVR_CRUISECHAN_INFO struCruiseChanInfo[MAX_CHANNUM_V40/*512*/]; //?????????????“???????????㊣dwEnableCruiseChanNum????0?㊣????℅谷??㊣那0-( dwEnableCruiseChanNum -1)???∫???㊣??0?㊣??㊣赤????????????
	DWORD dwEnablePtzTrackChanNum;  //?㊣?∼???????“?足???“??????
	NET_DVR_PTZTRACKCHAN_INFO struPtzTrackInfo[MAX_CHANNUM_V40/*512*/]; //?‾?????“?足?????“?????????㊣dwEnablePtzTrackChanNum????0?㊣????℅谷??㊣那0-(dwEnablePresetChanNum -1)???∫???㊣??0?㊣??㊣赤???????????“?足??
	NET_DVR_SCHEDTIME struHolidayTime[MAX_TIMESEGMENT_V30]; //??????﹞??㊣??
	BYTE    byRes[224];
}NET_DVR_VCA_DETECTION_CFG_V40, *LPNET_DVR_VCA_DETECTION_CFG_V40;

typedef struct tagNET_DVR_CLOUD_STORAGE_CFG
{
	DWORD    dwSize;  //?芍?????車??;
	BYTE     byEnableCS;  //??????????﹞???  0-??㊣? 1-????
	BYTE     byRes[511];     //㊣???
} NET_DVR_CLOUD_STORAGE_CFG, *LPNET_DVR_CLOUD_STORAGE_CFG;


typedef struct tagNET_DVR_CHANS_RECORD_STATUS_CFG
{
	DWORD dwSize; //?芍?????車??
	BYTE    byValid;       //??﹞????∫
						   /*(????)?????角????0: ??????????1???????? 2-????
						   3-?????? 4-?????????? 5-?????? 6-?????? 7-??????
						   8-???∫???辰?????赤 9-???谷?∟,10-?????????????? 11-??????????????????*/
	BYTE    byRecord;
	DWORD   dwRelatedHD;  //????????
	BYTE    byOffLineRecord;  //???????????? 0-??㊣? 1-????
	BYTE     byRes[63];        //㊣???℅???
}NET_DVR_CHAN_RECORD_STATUS_CFG, *LPNET_DVR_CHAN_RECORD_STATUS_CFG;

#define  MAX_CAMERAID_LEN    64
typedef struct  tagNET_DVR_UPLOAD_RECORD_INFO
{
	DWORD             dwSize;
	DWORD             dwRecordType; //?????角??  0- ?“?㊣??????1- ?????足????????2- ㊣“????????3- ㊣“???辰?????足????????4- ㊣“?????????足???????? 5- ?邦????﹞???6- ??????????7- ????㊣“????8- ?﹞????﹞?㊣“????9- ????㊣“????10- ????????
	BYTE              sCameraID[MAX_CAMERAID_LEN]; //camera id;
	NET_DVR_TIME_EX   struStartTime;  //?????????㊣??
	NET_DVR_TIME_EX   struStopTime;  //?????芍???㊣?? 
	DWORD             dwStoragePoolID; //??????ID
	BYTE              byFormatType;     //﹞?℅∼?角????1-???‾??2-RTP﹞?℅∼??3-PS﹞?℅∼??4-TS﹞?℅∼??5-??????6-FLV??7-ASF??8-3GP??9-RTP+PS?“?迆㊣那??GB28181????0xff-???∫
	BYTE              byVideoEncType;       //????㊣角???角????0-????264??1-㊣那℅?h264??2-㊣那℅?mpeg4??7-M-JPEG??8-MPEG2??0xfe- ℅????“????????????0xff-???∫ 
	BYTE              byAudioEncType;  //????㊣角???角????0-G722??1-G711_U??2-G711_A??5-MP2L2??6-G726??7-AAC??0xfe- ℅????“????????????0xff-???∫ 
	BYTE   	          byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char       cStartTimeDifferenceH;   //?????㊣????UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣??
	char       cStartTimeDifferenceM;   //?????㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	char       cStopTimeDifferenceH;    //?芍???㊣????UTC???㊣???“???㊣????-12 ... +14??????㊣赤?????㊣??
	char       cStopTimeDifferenceM;    //?芍???㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	BYTE              byRes[120];
}NET_DVR_UPLOAD_RECORD_INFO, *LPNET_DVR_UPLOAD_RECORD_INFO;

//??????????????  ?????芍????
typedef struct tagNET_DVR_IOOUT_COND
{
	DWORD dwSize;
	BYTE  bySyncOutputNo;//??????????(0-F1,1-F2,2-F3)
	BYTE  byRes[63];
}NET_DVR_IOOUT_COND, *LPNET_DVR_IOOUT_COND;

//??????????????
typedef struct tagNET_DVR_IOOUT_CFG
{
	DWORD  dwSize;
	BYTE   byWorkMode;// 0-㊣“??????,1-??????(????)
	BYTE   byRes1[3];
	union
	{
		BYTE    byUnionLen[128];
		struct
		{
			BYTE   byDefaultState;//????℅??? 0-??????(????)??1-??????
			BYTE   byWorkState;//?迆?∫℅??? 0-??????(????),1-??????,2-????
			BYTE   byFreqMulti;//㊣?????????﹞??∫[1,15]
			BYTE   byDutyRatio;//????㊣???[0,40%]
			BYTE   byRes[3];
			BYTE   byFlashLightEnable;    //?豕?????????㊣??????:0-??;1-??
			NET_DVR_SCHEDTIME  struFlashLightTime;//???????????㊣??
			BYTE   byRes1[116];
		}struStrobeLamp;    // ?????? ?㊣???∫
	}uWorkModeInfo;
	BYTE   byRes2[128];
}NET_DVR_IOOUT_CFG, *LPNET_DVR_IOOUT_CFG;

//??????????????
typedef struct tagNET_DVR_SIGNAL_SYNCCFG
{
	DWORD  dwSize;
	WORD   wPhase;//?角??(0~360)
	BYTE   byLineLock;//???????? 0-﹞???1-??
	BYTE   byRes[125];
}NET_DVR_SIGNAL_SYNCCFG, *LPNET_DVR_SIGNAL_SYNCCFG;

// ????EZVIZ?????????芍????
typedef struct
{
	DWORD    dwSize;
	BYTE    byEnable;// ????EZVIZ???? 0????????1??????
					 /********* IPC5.1.7 ???????? Begin 2014-03-21***********/
	BYTE    byDeviceStatus; //?豕㊣???﹞?????℅?????0-㊣?????1-??????2-????
	BYTE    byAllowRedirect;    //??﹞????赤???“?辰,0-㊣???,1-??,2-﹞?,0㊣赤??㊣?????㊣?,??????SDK?????豕㊣????谷??
	BYTE    byDomainName[MAX_DOMAIN_NAME];    //?辰??﹞????‾???﹞
	BYTE    byRes1;
	BYTE    byVerificationCode[NET_SDK_MAX_VERIFICATION_CODE_LEN/*32*/];//???????谷?∟??
	BYTE    byNetMode;  //??????????0-????????1-℅?????2-??????????????3-????????(????)??4-????????
	BYTE    byOfflineStatus;    //?豕㊣?????????℅???: 0-㊣?????1-????℅??芍?谷?∟?????∫????℅??????????????㊣DeviceStatus??2?㊣?迆?∫??
	BYTE    byEnableTiming;// ????EZVIZ???㊣ 0????????1??????
	BYTE    byRes2;
	BYTE    byOperateCode[NET_SDK_MAX_OPERATE_CODE_LEN];  //??℅‾???????∫∼車?“?豕㊣??㊣????
	BYTE    byRes[344];
}NET_DVR_EZVIZ_ACCESS_CFG, *LPNET_DVR_EZVIZ_ACCESS_CFG;

typedef struct tagNET_DVR_ALARM_RELATE_COND
{
	DWORD  dwSize;
	/*
	0㊣赤???????足????
	1㊣赤????????????
	2㊣赤?????????∫??
	3㊣赤??PIR㊣“????
	4㊣赤??????㊣“????
	5㊣赤??????㊣“????
	6㊣赤??????℅?????
	7㊣赤???????足????
	8㊣赤???????足???足????
	9㊣赤?????辰?????足????
	10㊣赤?????∼㊣??邦?足????
	11 ㊣赤???足???足????
	0xff ㊣赤??㊣“??????
	*/
	BYTE  byAlarmType;
	//??????℅‾ 0-???∫,1-℅???????FTP,2-Jpeg℅???????Email
	BYTE  byRelateActType;
	BYTE  byRes[2];
	//㊣“?????????辰???“?????辰??????㊣角??
	//(?㊣byAlarmType ==0xff?㊣,dwChannel㊣赤??????㊣“????????)
	//(?㊣byAlarmType ==4?㊣,dwChannel㊣赤??????????㊣角??)
	DWORD  dwChannel;
	BYTE  byRes1[64];
}NET_DVR_ALARM_RELATE_COND, *LPNET_DVR_ALARM_RELATE_COND;

typedef struct tagNET_DVR_ALARM_RELATE_CFG
{
	DWORD   dwSize;
	DWORD   dwMaxRelateChanNum; //??﹞???㊣“???????“?????“??????℅??車?∫??????
								//dwRelateChan??????????0xffffffff;??℅谷???????????????“????;
	DWORD   dwRelateChan[MAX_CHANNUM_V40/*512*/];
	BYTE    byRes1[256];
}NET_DVR_ALARM_RELATE_CFG, *LPNET_DVR_ALARM_RELATE_CFG;

typedef struct tagNET_DVR_PTZ_BASICPARAMCFG
{
	DWORD  dwSize;
	BYTE   byProportionalPan; //????㊣???㊣?㊣????? 0-﹞???1-??
	BYTE   byPresetFreezing; //?????∟???????????芍 0-﹞???1-??
	BYTE   byPresetSpeed;//?∟???????????? 1--8??????4
	BYTE   byKeyboardCtrlSpeed;//????????????0-??,1-??,2-??
	BYTE   byAutoScanSpeed;//?“?豕??????????1--40??????28
	BYTE   byZoomingSpeed;//㊣?㊣???????1--3??????3
	BYTE   byManualControlSpeed;//??????????????0-??????1-??????2-﹞??迆??????3-?迆??????4-℅?????
	BYTE   byPTZMotionTrack;//?????????迆℅??“???“???“??℅‾?? 0-?????“????????1-??㊣?
	BYTE   byRes[124];
}NET_DVR_PTZ_BASICPARAMCFG, *LPNET_DVR_PTZ_BASICPARAMCFG;

typedef struct tagNET_DVR_PTZ_OSDCFG
{
	DWORD  dwSize;
	BYTE   byZoomStatus; //???﹞㊣?????????1-2????2-5????3-10????0xff-??????0-??????????2??
	BYTE   byPtStatus;    //﹞???????????1-2????2-5????3-10????0xff-??????0-??????????2??
	BYTE   byPresetStatus;//?∟????㊣那????????1-2????2-5????3-10????0xff-??????0-??????????2??
	BYTE   byPositionDisplayFormat;//﹞????????????? 0-∼???PT????(?? P179|T-02)??1-∼???﹞???????(SE123|T-02)
	BYTE   byRes[124];
}NET_DVR_PTZ_OSDCFG, *LPNET_DVR_PTZ_OSDCFG;

typedef struct tagNET_DVR_PTZ_POWEROFFMEMCFG
{
	DWORD  dwSize;
	BYTE   byResumeTimePoint; //??????????????Oxff-??????1-30????2-60????3-300????4-600????????30??
	BYTE   byRes[127];
}NET_DVR_PTZ_POWEROFFMEMCFG, *LPNET_DVR_PTZ_POWEROFFMEMCFG;

typedef struct tagNET_DVR_PTZ_LIMITCOND
{
	DWORD  dwSize;
	DWORD  dwChan; //?“????
	BYTE   byLimitMode; //???????? 0-㊣?????1-?邦????????2-?“?豕????
	BYTE   byRes[63];
}NET_DVR_PTZ_LIMITCOND, *LPNET_DVR_PTZ_LIMITCOND;

typedef struct tagNET_DVR_PTZ_LIMITCFG
{
	DWORD  dwSize;
	BYTE   byEnable;//??????????0-﹞???1-??
	BYTE   byLimitStatus; //????℅??? 0-????????1-???????“????㊣角???? 
	BYTE   byRes[122];
}NET_DVR_PTZ_LIMITCFG, *LPNET_DVR_PTZ_LIMITCFG;

typedef struct tagNET_DVR_PTZ_LIMITCTRL
{
	DWORD  dwSize;
	DWORD  dwChan;//?“????
	BYTE   byLimitMode; //???????? 0-㊣?????1-?邦????????2-?“?豕????
	BYTE   byWorkMode;//0-?豕????1-????
	BYTE   byRes[122];
}NET_DVR_PTZ_LIMITCTRL, *LPNET_DVR_PTZ_LIMITCTRL;

typedef struct tagNET_DVR_PTZ_LOCKCFG
{
	DWORD   dwSize;
	BYTE   byWorkMode;//???“???“???? 0-??????1-???“
	BYTE   byRes[123];
}NET_DVR_PTZ_LOCKCFG, *LPNET_DVR_PTZ_LOCKCFG;

typedef struct tagNET_DVR_PTZLOCKINFO_COND
{
	DWORD   dwSize;
	DWORD   dwChannel;//?“????
	BYTE    byRes[64];
}NET_DVR_PTZLOCKINFO_COND, *LPNET_DVR_PTZLOCKINFO_COND;

typedef struct tagNET_DVR_PTZLOCKINFO
{
	DWORD   dwSize;
	DWORD   dwRemainingSec;//???角????
	BYTE    byRes[128];    //㊣???℅???
}NET_DVR_PTZLOCKINFO, *LPNET_DVR_PTZLOCKINFO;

typedef struct tagNET_DVR_CRUISEPOINT_COND
{
	DWORD  dwSize;
	DWORD  dwChan;//?“????
	WORD   wRouteNo;//?????﹞????
	BYTE   byRes[30];
}NET_DVR_CRUISEPOINT_COND, *LPNET_DVR_CRUISEPOINT_COND;

typedef struct
{
	WORD    wPresetNo;    //?∟????
	WORD    wDwell;    //?????㊣??
	BYTE    bySpeed;    //????
	BYTE    bySupport256PresetNo;//???????∼?? ??256???∟??????﹞??迆?∫
	BYTE    byRes[6];
}NET_DVR_CRUISEPOINT_PARAM, *LPNET_DVR_CRUISEPOINT_PARAM;

typedef struct
{
	DWORD  dwSize;
	// ℅??車?∫??128????????
	NET_DVR_CRUISEPOINT_PARAM struCruisePoint[MAX_CRUISE_POINT_NUM];
	BYTE     Res[64]; //㊣???
}NET_DVR_CRUISEPOINT_V40, *LPNET_DVR_CRUISEPOINT_V40;

typedef struct
{
	DWORD  dwSize;
	// ℅??車?∫??256????????
	NET_DVR_CRUISEPOINT_PARAM struCruisePoint[MAX_CRUISEPOINT_NUM_V50];
	BYTE     Res[64]; //㊣???
}NET_DVR_CRUISEPOINT_V50, *LPNET_DVR_CRUISEPOINT_V50;


typedef struct tagNET_DVR_TEST_VERSION_HEAD
{
	DWORD        dwSize;
	DWORD        dwParam1;
	BYTE         byParam2;
	BYTE         byRes[31];
}NET_DVR_TEST_VERSION_HEAD, *LPNET_DVR_TEST_VERSION_HEAD;

typedef struct tagNET_DVR_TEST_VERSION_HEAD_V1
{
	DWORD        dwSize;
	DWORD        dwParam1;
	BYTE         byParam2;
	BYTE         byRes[31];
	DWORD        dwParam1_1;
	BYTE         byParam1_2;
	BYTE         byRes1[31];
}NET_DVR_TEST_VERSION_HEAD_V1, *LPNET_DVR_TEST_VERSION_HEAD_V1;

typedef struct tagNET_DVR_TEST_VERSION_HEAD_V2
{
	DWORD        dwSize;
	DWORD        dwParam1;
	BYTE         byParam2;
	BYTE         byRes[31];
	DWORD        dwParam1_1;
	BYTE         byParam1_2;
	BYTE         byRes1[31];
	DWORD        dwParam2_1;
	BYTE         byParam2_2;
	BYTE         byRes2[31];
}NET_DVR_TEST_VERSION_HEAD_V2, *LPNET_DVR_TEST_VERSION_HEAD_V2;

#define MAX_DISPLAY_NUM         512  //℅??車????????????
#define MAX_LEDCONTENT_NUM      512  //?谷??LED℅?﹞???℅??車?∟??
#define MAX_PPT_CHAN            128     //PPT?∟??

typedef struct tagNET_DVR_VIDEOWALLDISPLAYMODE
{
	DWORD dwSize;
	BYTE  byEnable;//????
	BYTE  byRes1[3];
	NET_DVR_RECTCFG_EX struRect;//℅?㊣那﹞??∫???????迄℅?℅?㊣那???????∫????????????
	BYTE  sName[NAME_LEN]; //??????????
	BYTE  byRes2[100];
}NET_DVR_VIDEOWALLDISPLAYMODE, *LPNET_DVR_VIDEOWALLDISPLAYMODE;

typedef struct tagNET_DVR_DISPLAYPARAM
{
	DWORD dwDisplayNo;//??????????
	BYTE  byDispChanType;/*????????????,1-BNC??2-VGA??3-HDMI??4-DVI??5-SDI, 6-FIBER, \
						 7-RGB, 8-YPrPb, 9-VGA/HDMI/DVI℅???????10-3GSDI,11-VGA/DVI℅???????12-HDBaseT,13-HDTVI, 14-TVI??0xff-???∫*/

	BYTE  byRes[11];
}NET_DVR_DISPLAYPARAM, *LPNET_DVR_DISPLAYPARAM;

typedef struct tagNET_DVR_DISPLAYCFG
{
	DWORD  dwSize;
	NET_DVR_DISPLAYPARAM struDisplayParam[MAX_DISPLAY_NUM/*512*/];
	BYTE  byRes[128];
}NET_DVR_DISPLAYCFG, *LPNET_DVR_DISPLAYCFG;

typedef struct tagNET_DVR_VIDEOWALLDISPLAYPOSITION
{
	DWORD   dwSize;
	BYTE    byEnable;
	BYTE    byCoordinateType;//℅?㊣那?角????0-?迄℅?℅?㊣那??1-????℅?㊣那
	BYTE    byRes1[2];
	//????,1℅???????+3℅???㊣???
	DWORD    dwVideoWallNo;
	DWORD   dwDisplayNo;//??????????
						//℅?㊣那?????迄℅?℅?㊣那??????㊣??“1920*1920?????赤???????????????豕?????????迄℅???
	NET_DVR_RECTCFG_EX struRectCfg;
	BYTE    byRes2[64];
}NET_DVR_VIDEOWALLDISPLAYPOSITION, *LPNET_DVR_VIDEOWALLDISPLAYPOSITION;

/*?∼??????*/
typedef struct tagNET_DVR_VIDEOWALLWINDOWPOSITION
{
	DWORD dwSize;
	BYTE  byEnable;  //?∼??????,0-????????1-???? 
	BYTE  byWndOperateMode;  //?∼????℅‾??????0-????℅?㊣那??1-﹞?㊣???℅?㊣那
	BYTE  byRes1[6];
	DWORD dwWindowNo;//?∼????
	DWORD dwLayerIndex;//?∼???角??????????????????????℅??車??????????????℅‾
	NET_DVR_RECTCFG_EX struRect; //?????∼??????℅?㊣那(?角????????)???????辰∼?????℅?㊣那?豕???㊣???∫
	NET_DVR_RECTCFG_EX struResolution; //?????∼??﹞?㊣???℅?㊣那???????辰∼?﹞?㊣???℅?㊣那?豕?????∫
	DWORD dwXCoordinate; //LED???辰℅車????X℅?㊣那?“????℅?㊣那?????????辰∼?﹞?㊣???℅?㊣那?豕?????∫
	DWORD dwYCoordinate; //LED???辰℅車????Y℅?㊣那?“????℅?㊣那?????????辰∼?﹞?㊣???℅?㊣那?豕?????∫
	BYTE  byRes2[36];
}NET_DVR_VIDEOWALLWINDOWPOSITION, *LPNET_DVR_VIDEOWALLWINDOWPOSITION;

typedef struct tagNET_DVR_VIDEO_WALL_INFO
{
	DWORD dwSize;
	//?∼??????1℅???????+1℅???㊣???+2℅????∼????
	DWORD    dwWindowNo;
	DWORD   dwSceneNo;//???∼??
	DWORD   dwDestWallNo; //????????
	DWORD   dwDestSceneNo;//???????∼??
	BYTE    byRes[12];
}NET_DVR_VIDEO_WALL_INFO, *LPNET_DVR_VIDEO_WALL_INFO;

typedef struct tagNET_DVR_VIRTUALLED_PARAM
{
	DWORD   dwSize;
	BYTE    byEnable; //????
	BYTE    byDispMode; //??????????1-???‾??2-∼????‾??3-????
	BYTE    byWndOperateMode; //?∼????℅‾??????0-????℅?㊣那??1-﹞?㊣???℅?㊣那
	BYTE    byType; //?谷??LED?角????0-??㊣???1-?㊣??
	BYTE    byDirection; //?谷??LED﹞??辰??0-????﹞??辰??1-???㊣﹞??辰
	BYTE    byTimeType; //?㊣???角????byType??1?㊣???∫??0-???∫??1-???????㊣????2-???????????㊣??
	BYTE    byDateFormat; //??????????????byTimeType??2?㊣???∫
						  //0-???∫??1-XXXX-XX-XX(?那????)??2-XX-XX-XXXX(?????那)??3-XX-XX-XXXX(?????那)??4-XXXX?那XX??XX????5-XX??XX??XXXX?那??6-XX??XX??XXXX?那
	BYTE    byTimeFormat; //?㊣????????????byTimeType???????㊣???∫
						  //0-???∫??1-H:MM:SS??2-HH:MM:SS
	NET_DVR_RGB_COLOR   struContentColor; //℅???????
	NET_DVR_RGB_COLOR   struBackColor; //㊣??∼????
	NET_DVR_RECTCFG_EX  struRect;
	DWORD   dwContentNum; //??㊣??????∟????byType??0?㊣???∫
	BYTE    byLedContent[MAX_LEDCONTENT_NUM/*512*/]; //??㊣???????byType??0?㊣???∫
	BYTE    byMoveMode; //??????????1-???“??2-??????3-????
	BYTE    byFontSize; //℅????車????1-1㊣???2-2㊣???3-4㊣?
	BYTE    byMoveDirection; //????﹞??辰??0-?????“??℅車????????1-??℅車??????2-??????℅車??3-??????????4-???????????????谷??LED?㊣???∫
	BYTE    byMoveSpeed; //??????????1-????1??2-????2???????谷??LED?㊣???∫
	NET_DVR_RECTCFG_EX struResolution; //?????∼??﹞?㊣???℅?㊣那???????辰∼?﹞?㊣???℅?㊣那?豕?????∫
	DWORD   dwXCoordinate; //LED???辰℅車????X℅?㊣那?“????℅?㊣那?????????辰∼?﹞?㊣???℅?㊣那?豕?????∫
	DWORD   dwYCoordinate; //LED???辰℅車????Y℅?㊣那?“????℅?㊣那?????????辰∼?﹞?㊣???℅?㊣那?豕?????∫
	BYTE    byHourFormat; //?㊣????????byTimeType???????㊣???∫??0-???∫??1-12???㊣????2-24???㊣??
	BYTE    byAMFormat; //AM??????byHourFormat??1?㊣???∫??0-???∫??1-AM??2-????
	BYTE    byPMFormat; //PM??????byHourFormat??1?㊣???∫??0-???∫??1-PM??2-????
	BYTE    byAlignmentX; //????????﹞?????byDirection??0?㊣???∫??0-???∫??1-℅車??????2-??????????3-??????
	BYTE    byAlignmentY; //???㊣????﹞?????byDirection??1?㊣???∫??0-???∫??1-??????????2-??????????3-?℅??????
	BYTE    byFontType; //℅????角????0-??????1-??????2-??????3-????
	BYTE    byRes2[90];
}NET_DVR_VIRTUALLED_PARAM, *LPNET_DVR_VIRTUALLED_PARAM;

typedef struct tagNET_DVR_IMAGE_CUT_MODE
{
	DWORD dwSize;
	BYTE  byCutMode;  //??????????????1-4:3,2-16:9
	BYTE  byRes[31];
}NET_DVR_IMAGE_CUT_MODE, *LPNET_DVR_IMAGE_CUT_MODE;

typedef struct tagNET_DVR_USING_SERIALPORT
{
	DWORD  dwSize;
	DWORD  dwSerialPort; //?㊣?∼??????????
	BYTE byProtocolType; //???????谷?角????1-LCD-S1 , 2-LCD-S2 , 3-LCD-L1 ?? 4-LCD-DLP?? 5-LCD-S3 , 6-LCD-D20??7-LCD-L2,8-LCD-Z1??9-LCD-D20/D,10-LCD-D20/S,11-LCD-D20/P,12-LCD-D20/T,13-LCD-D20/F,14-LCD-D20/DF,15-LCD-D20/FS,16-LCD-D20/FP,17-LCD-D20/FT,18-LCD-D5022,19-LCD-D5032,20-LCD-D5042+ 
	BYTE byRes[31];
}NET_DVR_USING_SERIALPORT, *LPNET_DVR_USING_SERIALPORT;

typedef struct tagNET_DVR_VIDEOWALLSCENECFG
{
	DWORD dwSize;
	BYTE  sSceneName[NAME_LEN];//???∼????
	BYTE  byEnable;//???∼??﹞????∫ 1-???∫??0-???∫
	BYTE  bySceneIndex;     //???∼???????????????????迄?????∼?㊣??????????
	BYTE  byRes[78];
}NET_DVR_VIDEOWALLSCENECFG, *LPNET_DVR_VIDEOWALLSCENECFG;

typedef struct tagNET_DVR_SCENE_CONTROL_INFO
{
	DWORD dwSize;
	NET_DVR_VIDEO_WALL_INFO struVideoWallInfo; //??????????
	DWORD dwCmd; //???∼?????邦????1-???∼?????????“???????????????㊣?∼???∼???辰??????????????2-?????????∼?“???????∼???????????????????㊣?∼???∼???辰???㊣???㊣?∼???∼??????????℅‾????3-?????????“??????﹞????㊣?∼???∼??????????????4-㊣????㊣?∼???????????∼ 5-???????∼ ,6-???∼????
	BYTE  byRes[4];
}NET_DVR_SCENE_CONTROL_INFO, *LPNET_DVR_SCENE_CONTROL_INFO;

typedef struct tagNET_DVR_SHOW_CONTROL_INFO
{
	DWORD dwSize;
	DWORD dwDisplayNo;  //??????????????0xffffffff㊣赤?????迄??????????????℅‾
	BYTE  byEnable;     //??????????0-????????1-????
	BYTE  byChanType;   //???????“???角????1-?????“??????2-?谷??????
	BYTE  byRes1[2];
	DWORD dwWallNo; //??????1℅????????“??????+3℅???㊣??????????????辰???㊣???∫
	BYTE byRes2[56];
}NET_DVR_SHOW_CONTROL_INFO, *LPNET_DVR_SHOW_CONTROL_INFO;

typedef struct tagNET_DVR_BUF_INFO
{
	void*   pBuf;    //??????????
	DWORD   nLen;    //???????∟??
}NET_DVR_BUF_INFO, *LPNET_DVR_BUF_INFO;

typedef struct tagNET_DVR_IN_PARAM
{
	NET_DVR_BUF_INFO struCondBuf;            //??????????
	NET_DVR_BUF_INFO struInParamBuf;         //??????????
	DWORD  dwRecvTimeout;      //???????????㊣?㊣??????????ms,??0???????????????㊣
	BYTE   byRes[32];
}NET_DVR_IN_PARAM, LPNET_DVR_IN_PARAM;

typedef struct tagNET_DVR_OUT_PARAM
{
	NET_DVR_BUF_INFO struOutBuf;            //??????????????
	void*  lpStatusList;       //℅?????????    
	BYTE   byRes[32];
}NET_DVR_OUT_PARAM, LPNET_DVR_OUT_PARAM;

typedef struct tagNET_DVR_AUDIO_CHAN_INFO
{
	DWORD dwSize;
	DWORD dwChannel;   //?????“????℅谷???“1℅????豕㊣???+1℅???℅?∼???+2℅????????“??????
	BYTE  byRes[48];
}NET_DVR_AUDIO_CHAN_INFO, *LPNET_DVR_AUDIO_CHAN_INFO;

typedef struct tagNET_DVR_AUDIO_CHAN_CFG
{
	DWORD         dwSize;
	BYTE          sChanName[NAME_LEN]; //?????“??????
	BYTE          byEnable; //??????﹞??????? 0-???? 1-??
	BYTE          byAudioSwitchType; //????????﹞?????1-∼??∼????﹞?????2-∼??∼????????﹞??? 
	BYTE          byRes[2];
	NET_DVR_PU_STREAM_CFG_V41 struAudioSrcInfo;  //?????????? byAudioSwitchType??1?㊣???∫
	DWORD         dwWindowNo; //℅??∼?????“1℅???????+1℅???℅??∼????+2℅????∼????????byAudioSwitchType??2?㊣???∫
	BYTE          byRes2[28];
}NET_DVR_AUDIO_CHAN_CFG, *LPNET_DVR_AUDIO_CHAN_CFG;

#define MAX_SUBBOARD_NUM        42        //???????車???豕㊣?∼?????
#define MAX_SINGLE_BOARD_EXCEPTION_NUM 16 //??∼?℅??車??﹞??足????
typedef struct tagNET_DVR_MAINBOARD_SERIAL_CFG
{
	DWORD dwSize;
	BYTE bySerialWorkMode; //?????∟℅‾??????1-RS484,2-RS232
	BYTE byFunType; //??????????1-?邦????????2-??????????3-???‾?“?????? 4-PTZ????  5-???車???? 6-?????“
	BYTE byDataBit;// ?????????? 0??5????1??6????2??7????3??8??;
	BYTE byStopBit;// ?????? 0??1????1??2??;
	DWORD dwBaudRate;//?“????0??50??1??75??2??110??3??150??4??300??5??600??6??1200??7??2400??8??4800??9??9600??10??19200?? 11??38400??12??57600??13??76800??14??115.2k;
	BYTE byParity;// ???谷 0???????谷??1???????谷??2???????谷;
	BYTE byFlowcontrol;// 0??????1???赤?‾??,2-???‾??
	WORD wProtocol;//???????谷?????????????????????????谷?????迄
	BYTE byVariable;  //??????﹞???㊣???1-????㊣?  2-??㊣? ?“????????
	BYTE byGateWayEnable; //??﹞???????????0-????????????!0????????
	BYTE byRes[30];
}NET_DVR_MAINBOARD_SERIAL_CFG, *LPNET_DVR_MAINBOARD_SERIAL_CFG;

typedef struct tagNET_DVR_SUBBOARD_INFO
{
	DWORD      dwSize;
	BYTE       byBoardType;    //?角????0-?‾∼???1-DVI-I??????2-YPbPr??????3-BNC??????4-SDI?????? 5-DVI?????﹞?????? 6-???“????∼??????? 7-DVI-I?????? 8-SDI????, 9-??????????∼???????10-DP??????11-HDTVI??????12-HDBaseT??????13-HDMI??????14-HDBaseT??15-DVI-T??????16-HDMI??????0xff-?????角??
	BYTE       byInterfaceNum;  //??????
	BYTE       byStatus;        //℅?????0-?足???? 1-????
	BYTE       byRes[1];
	DWORD      dwSlotNo;       //?迄???????? 
	BYTE       byRes2[32];
}NET_DVR_SUBBOARD_INFO, *LPNET_DVR_SUBBOARD_INFO;

typedef struct tagNET_DVR_DEVICE_SUBBOARD_INFO
{
	DWORD     dwSize;
	BYTE      byBackBoardType;  //㊣?∼??角???? 1-4U?? 2-8U?? 3-13U, 0xff-?????角??
	BYTE      bySoltNum;        //????????
	BYTE      byBoardNum;   //???∫????
	BYTE      byRes1[1];
	NET_DVR_SUBBOARD_INFO struSubBoadInfo[MAX_SUBBOARD_NUM]; //?∼byBoardNum?????∫ 
	BYTE       byRes2[32];
}NET_DVR_DEVICE_SUBBOARD_INFO, *LPNET_DVR_DEVICE_SUBBOARD_INFO;

typedef struct tagNET_DVR_DEVICE_BOARD_EXCEPINFO
{
	DWORD       dwSize;
	BYTE         byExceptNum;         //?足??????
	BYTE        byRes1[3];
	BYTE        byMajor[MAX_SINGLE_BOARD_EXCEPTION_NUM];    //?‾?角??
	WORD        wMinor[MAX_SINGLE_BOARD_EXCEPTION_NUM];    //???角??
	BYTE        byRes2[32];
}NET_DVR_DEVICE_BOARD_EXCEPINFO, *LPNET_DVR_DEVICE_BOARD_EXCEPINFO;


typedef struct tagNET_DVR_LINEARSCAN
{
	DWORD   dwSize;
	DWORD   dwChan;           //?“????
	BYTE    byLinearScanType; //?????角????0-㊣???,1-℅車㊣????豕??,2-??㊣????豕??
	BYTE    byRes[63];
}NET_DVR_LINEARSCAN, *LPNET_DVR_LINEARSCAN;

//???‾????????
typedef struct tagNET_DVR_STREAM_ATTACHINFO_CFG
{
	DWORD dwSize;          //?芍?????車??
	BYTE  byStreamWithVca; //???‾?????????????????????????車?足?‾??0-??????,1-????
	BYTE  byRes[127];      //㊣???
}NET_DVR_STREAM_ATTACHINFO_CFG, *LPNET_DVR_STREAM_ATTACHINFO_CFG;

typedef struct tagNET_DVR_SUBSYSTEM_NETCFG
{
	DWORD  dwSize;
	BYTE   byDefaultRoute;  //?????﹞????0㊣赤??struEtherNet[0]??1㊣赤??struEtherNet[1]
	BYTE   byNetworkCardNum;      //?豕㊣????????????????“????
	BYTE   byRes1[2]; //㊣???
	NET_DVR_ETHERNET_MULTI struEtherNet[MAX_NETWORK_CARD]; //????????
	BYTE   byRes2[128];
}NET_DVR_SUBSYSTEM_NETCFG, *LPNET_DVR_SUBSYSTEM_NETCFG;

//????????
typedef struct tagNET_DVR_CLEARCTRL
{
	DWORD  dwSize;
	DWORD  dwChan;//?“????
	BYTE   byAllPreset; //?????迄?????∟??????0-﹞?,1-??
	BYTE   byAllPatrols; //?????迄?????????﹞????0-﹞?,1-??
	BYTE   byAllPatterms; //?????迄?????“?迄?“?豕??0-﹞?,1-??
	BYTE   byAllPrivacyMasks; //?????迄?????????谷??0-﹞?,1-??
	BYTE   byAllPTZLimited; //?????迄?????????豕????0-﹞?,1-??
	BYTE   byAllScheduledTasks; //?????迄?????“?㊣??????0-﹞?,1-??
	BYTE   byAllParkAction; //?????迄??????????0-﹞?,1-??
	BYTE   byRes[125];
}NET_DVR_CLEARCTRL, *LPNET_DVR_CLEARCTRL;

//???“????????????
typedef struct tagNET_DVR_PTZ_PRIORITIZECFG
{
	DWORD  dwSize;
	BYTE   byPTZPrioritize; //???“??????0-Rs485??1-??????????????
	BYTE   byRes[3];
	DWORD   dwDelay; //???㊣??2---200??
	BYTE   byRes1[124];
}NET_DVR_PTZ_PRIORITIZECFG, *LPNET_DVR_PTZ_PRIORITIZECFG;

//??﹞?????????
typedef struct tagNET_DVR_INITIALPOSITIONCTRL
{
	DWORD  dwSize;
	DWORD  dwChan;//?“????
	BYTE   byWorkMode;//0-?豕????1-????
	BYTE   byRes[127];
}NET_DVR_INITIALPOSITIONCTRL, *LPNET_DVR_INITIALPOSITIONCTRL;

//??????㊣?????
typedef struct tagNET_DVR_PRIVACY_MASKS_COND
{
	DWORD  dwSize;
	DWORD  dwChan; //?“????
	BYTE   byRegionalID; //???辰ID?? 1??24
						 //?????㊣?∼ID????????????㊣????? 0-㊣?????1-???? ?“WriteOnly??
	BYTE   byDelPrivacyMaskCfg;
	BYTE   byRes[62];
}NET_DVR_PRIVACY_MASKS_COND, *LPNET_DVR_PRIVACY_MASKS_COND;

typedef struct tagNET_DVR_PRIVACY_MASKS_CFG
{
	DWORD  dwSize;
	BYTE   byEnable;//??﹞????? 0-﹞???1-??
					//??????㊣????辰??????????﹞?????  0-﹞???1-?? ?“ReadOnly??
	BYTE   byPrivacyMaskCfgEnable;
	BYTE   byColorType; //0-㊣???,1-????2-?足??3-????4-????5-????6-????0xff-?赤?邦??
	BYTE   byActiveZoomRatio;//??㊣?㊣?????1--100
	char  sPrivacyMaskName[NAME_LEN/*32*/];//???????辰????????????16??℅???
	NET_VCA_POLYGON  struRegion;//???辰﹞??∫
								//?㊣?∼???辰℅?㊣那??﹞????∫ 0-﹞???1-?? ?“???????????辰?豕?????辰℅?㊣那?????????????∼?????角???辰?豕?????辰℅?㊣那??????
	BYTE   byCurrentRegionEnable;
	//?㊣?∼㊣???????℅??? 0- byActiveZoomRatio ;1- fActiveZoomRatio(?∫??????????curActiveZoomRatioType)
	BYTE   byCurZoomRatio;
	BYTE   byRes[2];
	float  fActiveZoomRatio; //??㊣?㊣???(???﹞????????1??)??[1.0-100.0]
	BYTE   byRes1[120];
}NET_DVR_PRIVACY_MASKS_CFG, *LPNET_DVR_PRIVACY_MASKS_CFG;

//????????    
typedef struct tagNET_DVR_PRIVACY_MASKS_ENABLECFG
{
	DWORD  dwSize;
	BYTE   byEnable;//??????????0-﹞???1-??
	BYTE   byRes[127];
}NET_DVR_PRIVACY_MASKS_ENABLECFG, *LPNET_DVR_PRIVACY_MASKS_ENABLECFG;

//?????????迆℅?????????
typedef struct tagNET_DVR_SMARTTRACKCFG
{
	DWORD dwSize;
	BYTE  byEnable;//???????? 0-﹞???1-??
	BYTE  byRes[3];
	DWORD dwDuration;//?????㊣????0--300????????300??
	BYTE  byRes1[124];
}NET_DVR_SMARTTRACKCFG, *LPNET_DVR_SMARTTRACKCFG;

//?迆℅?㊣???
typedef struct tagNET_DVR_ZOOMRATIOCTRL
{
	DWORD  dwSize;
	DWORD  dwChan;//?“????
	BYTE   byRes[128];
}NET_DVR_ZOOMRATIOCTRL, *LPNET_DVR_ZOOMRATIOCTRL;


//????????????
typedef struct tagNET_DVR_DIAL_SWITCH_CFG
{
	DWORD  dwSize;
	DWORD  dwSwitchState;//????????℅???
	BYTE   byRes[28];
}NET_DVR_DIAL_SWITCH_CFG, *LPNET_DVR_DIAL_SWITCH_CFG;

typedef struct tagNET_ALARM_RECORDFILE_LOSS //???????∫㊣“??℅??芍?? 
{
	NET_DVR_TIME_EX struInspectStart; //???足?????㊣??
	NET_DVR_TIME_EX struInspectEnd;   //???足?芍???㊣??
	NET_DVR_IPADDR  struIP;           //???????∫?????“????IP???﹞ 
	DWORD  dwChanNo;                //?“????
	DWORD  dwIDIndex;                //㊣角???‾ID
	BYTE   sName[STREAM_ID_LEN];       //㊣角???‾???? 
	NET_DVR_TIME_EX struLossStartTime; //???????∫?????㊣??
	NET_DVR_TIME_EX struLossEndTime;   //???????∫?芍???㊣??
	DWORD  dwLostNum;                 //???????∫???? 0xffffffff㊣赤?????????∫
	BYTE   byRes[240];
} NET_ALARM_RECORDFILE_LOSS, *LPNET_ALARM_RECORDFILE_LOSS;

typedef struct tagNET_ALARM_STREAM_EXCEPTION //???‾?足??㊣“??  ℅??芍?? 
{
	NET_DVR_IPADDR  struIP;           //﹞??迆?????足???“????IP???﹞ 
	DWORD  dwChanNo;                //?“????
	DWORD  dwIDIndex;                //㊣角???‾ID
	BYTE   sName[STREAM_ID_LEN];       //㊣角???‾???? 
	BYTE   byExceptionCase;           //?足?????辰??0-?????????足?? 1-?????????足??
	BYTE   byRes[307];                //㊣???
} NET_ALARM_STREAM_EXCEPTION, *LPNET_ALARM_STREAM_EXCEPTION;


typedef struct tagNET_ALARM_RESOURCE_USAGE  //℅???????㊣“?? ℅??芍??
{
	BYTE   byLevel;    //?????谷?????????????????? 0-??????1-???????????? 2-???????????? 3-????????????  
	BYTE   byRes[491]; //㊣???
}NET_ALARM_RESOURCE_USAGE, *LPNET_ALARM_RESOURCE_USAGE;

typedef struct tagNET_ALARM_RECORD_EXCEPTION //?????足??㊣“?? ℅??芍??
{
	BYTE    byReason;    //?足?????辰 0-?????赤?迆 1-?????赤?足?? 2-??????lun?赤
	BYTE    byRes1[3];   //㊣???
	BYTE    sVolumeName[MAX_VOLUMENAME_LEN];
	DWORD  dwVolumeID;  //?????赤ID?“????????
	BYTE    byRes[452];  //㊣???
}NET_ALARM_RECORD_EXCEPTION, *LPNET_ALARM_RECORD_EXCEPTION;

typedef union tagNET_ALARM_CVR_SUBINFO_UNION  //CVR㊣“??℅??芍??
{
	BYTE byLen[492];   //???????∟??
	NET_ALARM_RECORDFILE_LOSS     struRecordLost; //???????∫
	NET_ALARM_STREAM_EXCEPTION     struStreamException; //???‾?足??
	NET_ALARM_RESOURCE_USAGE     struResourceUsage;  //℅???????
	NET_ALARM_RECORD_EXCEPTION   struRecordException; //?????足??
}NET_ALARM_CVR_SUBINFO_UNION, *LPNET_ALARM_CVR_SUBINFO_UNION;

#define  MAX_VARIABLE_DATA_NUM    65535  //℅??車??㊣?????????

typedef struct tagNET_DVR_ALARMINFO_DEV_V40
{
	DWORD            dwAlarmType; //㊣“??℅??角?? 0-㊣角???‾(?“??)??????㊣“????1-?????赤????????2- NVR﹞?????????3-㊣角???‾℅????足????4-?????㊣???足????5-?????赤???角??????????6-㊣角???‾(?“??)?????足??㊣“????
								  //7-㊣角???‾(?“??)????㊣“??; 8-???????∫㊣“??; 9-???????㊣?角??㊣“??; 10-℅?????????????; 11- CVR℅????????足???? 12-?????足??
	NET_DVR_TIME     struTime;
	NET_ALARM_CVR_SUBINFO_UNION  uSubAlarmInfo; //㊣“??????℅??芍?? ㊣“???角????8,9,10,11,12?㊣???????????∫
	BYTE             byRes[256];
	DWORD            dwNumber; //??㊣?????????
	WORD             *pNO; //?㊣?角????0??3??6??7?㊣???????芍???“???????㊣?角????5?㊣???????芍????????????㊣赤??????﹞??∫??0~65535    
}NET_DVR_ALARMINFO_DEV_V40, *LPNET_DVR_ALARMINFO_DEV_V40;

typedef struct tagNET_DVR_CONTROL_START_CFG //???邦????????????
{
	BYTE    byUseDefine; //????℅??“???? 0-??????????1-????℅??“??
	BYTE    byRes1;
	WORD    wCourseIndex; //?????‾??
	BYTE    byRes[128];
}NET_DVR_CONTROL_START_CFG, *LPNET_DVR_CONTROL_START_CFG;

typedef struct tagNET_DVR_CONTROL_DELAY_CFG//???邦???∟????????????
{
	BYTE    byUseDefine; //????℅??“???? 0-??????????1-????℅??“??
	BYTE    byRes1;
	WORD    wDelayTime; //???????∟?㊣??<?????????㊣????????℅?>??????s
	BYTE    byRes[128];
}NET_DVR_CONTROL_DELAY_CFG, *LPNET_DVR_CONTROL_DELAY_CFG;

typedef union tagNET_DVR_CONTROL_INFO_UNION  //??????????????
{
	BYTE    byLen[132]; //???????∟??
	NET_DVR_CONTROL_START_CFG  struStartCfg;   //???邦????
	NET_DVR_CONTROL_DELAY_CFG  struDelayCfg;  //???邦????
}NET_DVR_CONTROL_INFO_UNION, *LPNET_DVR_CONTROL_INFO_UNION;

typedef struct  tagNET_DVR_RECORDING_CONTROL_CFG_
{
	DWORD    dwSize;        //?芍?????車??
	WORD    wCmdType;    //?????邦???角????0-???邦??????1-???邦?芍????2-???邦??????3-???邦??????4-???邦???∟,5-???邦??????㊣? 6-???邦??????㊣?
	BYTE    byRes1[2]; //㊣???
	NET_DVR_CONTROL_INFO_UNION struControlInfo; //???????????????????芍???????邦???角??
	BYTE    byRes[256]; //㊣???
}NET_DVR_RECORDING_CONTROL_CFG, *LPNET_DVR_RECORDING_CONTROL_CFG;

typedef struct tagNET_DVR_RECORDING_HOST_CFG
{
	DWORD     dwSize;  //?芍?????車??
	DWORD    dwOneKeyDelayTime; //???邦㊣????????㊣??  ?????????????㊣?? ???? S
	BYTE     byDirectedMode; //??????????0-℅?????????1??????????2-∼?℅???????
	BYTE     byClassroomType;    //?????角????0-???∫??1-?‾??????2-??????
	BYTE     byCourseDataStorageEnabled;//??????????????﹞???????????, 0-????????1-????
	BYTE     byElectronicEnlargeMode;//??﹞???????℅?﹞??車????, 0-????????1-????
	BYTE     byRes[124];     //㊣???
}NET_DVR_RECORDING_HOST_CFG, *LPNET_DVR_RECORDING_HOST_CFG;

typedef struct tagNET_DVR_STATISTIC_DATA_COND
{
	DWORD        dwSize;
	DWORD        dwTypeTarget; //???????車?角?????那??TARGET_TYPE
	NET_DVR_TIME   struStartTime;//?????????㊣??
	NET_DVR_TIME   struStopTime;//?芍???????㊣??
	BYTE        byRes[280];
}NET_DVR_STATISTIC_DATA_COND, *LPNET_DVR_STATISTIC_DATA_COND;

typedef struct tagNET_DVR_STATISTIC_DATA_CFG
{
	DWORD        dwSize;
	DWORD        dwTypeTarget; //???????車?角?????那??TARGET_TYPE
	NET_DVR_TIME   struStartTime;//?????????㊣??
	NET_DVR_TIME   struStopTime;//?????芍???㊣??
	BYTE        byRes[300];
}NET_DVR_STATISTIC_DATA_CFG, *LPNET_DVR_STATISTIC_DATA_CFG;

//typedef enum
//{
//    NET_SDK_ALL_TARGET = 0,          //?????迄?????車
//    NET_SDK_PPT_TARGET_ALARM,     //PPT㊣“??
//    NET_SDK_PPT_TARGET_VIEW,       //PPT????
//    NET_SDK_STU_SINGLE_ALARM,     //?????∫?迆㊣“??
//    NET_SDK_STU_SINGLE_VIEW,       //?????∫?迆????
//    NET_SDK_SUT_MULT_ALARM,       //?角???∫?迆㊣“??
//    NET_SDK_STU_MULT_VIEW,         //?角???∫?迆????
//    NET_SDK_STU_TEACHER_VIEW,     //???迆????????
//    NET_SDK_TEA_UP_DOWN_ALARM,  //???????????“
//    NET_SDK_TEA_START_VIEW,        //????????????
//    NET_SDK_BLA_WRITE_ALARM,      //?谷??∼??谷㊣“??
//    NET_SDK_BLA_WRITE_VIEW,       //?谷??∼??谷????
//    NET_SDK_TEA_FULL_VIEW,         //???????∼????
//    NET_SDK_TEA_START_ALARM,      //????????????㊣“??
//    NET_SDK_TEA_WALK_ALARM,      //????℅???㊣“??
//    NET_SDK_TEA_LEFT_ALARM,       //????????㊣“??
//    NET_SDK_TEA_RUN_ALARM,        //????㊣???㊣“??
//    NET_SDK_TEA_MULT_ALARM       //?????角??㊣“??
//}TARGET_TYPE;

typedef struct tagNET_DVR_AUTO_TRACK_CFG
{
	DWORD  dwSize;   //?芍?????車??
	NET_DVR_DIRECT_CONNECT_CHAN_INFO struSDIInfo[MAX_CHANNUM_V30];
	//SDI?“?????豕㊣??????????‾﹞??????????????“???????????∼??????IP?“????
	BYTE   byCameraType[MAX_CHANNUM_V30];     //?“?????????角?迆?角???????? 0-????????1-?????迆℅???2-?∫?迆?迆℅???3-???????∼??4-?∫?迆???∼??5-?角??????6-?????“??,7-?∫?迆?“??,8-∼??谷?“??,9-∼??谷?角?迆, 0xff-??????
	BYTE   byRes[64];     //㊣???
}NET_DVR_AUTO_TRACK_CFG, *LPNET_DVR_AUTO_TRACK_CFG;

typedef struct tagNET_DVR_PUBLISH_FTP_CFG
{
	BYTE                byProtocolType;    //???谷?角?? 0-FTP??1-SFTP
	BYTE                byRes1;     //㊣???
	WORD                wFTPPort;  //????
	BYTE                   byAddress[MAX_DOMAIN_NAME];  //IP?辰???辰??,?豕???豕㊣?????
														//????﹞???????℅???????????'.'?辰???????辰??,﹞??辰??IP???﹞
	BYTE                szUserName[NAME_LEN/*32*/];        //???∫??<????>
	BYTE                szPassWord[PASSWD_LEN/*16*/];        //????<????>
	BYTE                szCustomDir[128];    //﹞???????,?∫???????芍??
	BYTE                byRes[12]; //㊣???
} NET_DVR_PUBLISH_FTP_CFG, *LPNET_DVR_PUBLISH_FTP_CFG;

typedef struct tagNET_DVR_PUBLISH_HTTP_CFG
{
	BYTE   strUrl[256]; //﹞?????URL???﹞????
}NET_DVR_PUBLISH_HTTP_CFG, *LPNET_DVR_PUBLISH_HTTP_CFG;

typedef struct tagNET_DVR_PUBLISH_FTP_CFG_DIR
{
	BYTE                byProtocolType;    //???谷?角?? 0-FTP??1-SFTP
	BYTE                byRes1;     //㊣???
	WORD                wFTPPort;  //????
	BYTE               byAddress[MAX_DOMAIN_NAME];  //IP?辰???辰??,?豕???豕㊣?????
													//????﹞???????℅???????????'.'?辰???????辰??,﹞??辰??IP???﹞
	BYTE                szUserName[NAME_LEN/*32*/];        //???∫??<????>
	BYTE                szPassWord[PASSWD_LEN/*16*/];        //????<????>
	BYTE                  byDirLevel;                     /*0 = ???????????芍?????㊣??㊣??????迄????,1 = ????1??????,2=????2??????*/
	BYTE                byTopDirMode;         /* ??????????0x1 = ?????豕㊣???,0x2 = ?????豕㊣???,0x3 = ?????豕㊣?ip???﹞                     0xff=????℅??“??*/
	BYTE                bySubDirMode;         /*??????????0x1=?????“??????,0x2=?????“??????0x3=??????????????0x4-??????????????0xff-????℅??“??*/
	BYTE              byRes2;
	BYTE               byTopCustomDir[MAX_CUSTOMDIR_LEN/*32*/];/*℅??“??????????*/
	BYTE               bySubCustomDir[MAX_CUSTOMDIR_LEN/*32*/];/*℅??“??????????*/
	BYTE                byRes[72]; //㊣???
}NET_DVR_PUBLISH_FTP_CFG_DIR, *LPNET_DVR_PUBLISH_FTP_CFG_DIR;


typedef  union tagNET_DVR_PUBLISH_ADD_UNION
{
	BYTE    byLen[256]; //???????∟??
	NET_DVR_PUBLISH_HTTP_CFG struHttpCfg; //http???﹞????
	NET_DVR_PUBLISH_FTP_CFG  struFtpCfg;  //ftp???﹞????
	NET_DVR_PUBLISH_FTP_CFG_DIR struDirFtpCfg;  //∼?????﹞?????FTP
}NET_DVR_PUBLISH_ADD_UNION, *LPNET_DVR_PUBLISH_ADD_UNION;

typedef struct  tagNET_DVR_CHAN_RECORD_PUBLISH_INFO //?“??????﹞???????
{
	BYTE    byPublish; //??﹞?﹞?????0-??﹞????? 1-﹞???
	BYTE    byRes1[3];
	DWORD  dwStreamType;   //???邦﹞??????‾?角????∼???㊣赤??
						   //&0x1-㊣赤???‾???‾ 
						   //&0x2-㊣赤??℅????‾
						   //&0x4-㊣赤?????‾??
	BYTE    byRes[12];     //㊣???
}NET_DVR_RECORD_PUBLISH_INFO, *LPNET_DVR_RECORD_PUBLISH_INFO;


typedef struct tagNET_DVR_PUBLISH_CFG
{
	DWORD  dwSize;  //?芍?????車??
	BYTE   byPublishType;    //﹞???﹞?????0-http,1-ftp,2-Dir FTP
	BYTE   byRes1[3]; //㊣???
	NET_DVR_PUBLISH_ADD_UNION struPublishAddr;  //???邦﹞??????﹞????
	NET_DVR_RECORD_PUBLISH_INFO  struChanPublish[MAX_CHANNUM_V30]; //?“??????﹞??????? struChanPublis[0]㊣赤???“??1????????﹞???????
	NET_DVR_RECORD_PUBLISH_INFO struDirectChanPublish; //?????“??????﹞???????
	BYTE                  byUploadTime;      //??﹞??????“?㊣ftp???????? 0-????????1-????????2-????
	BYTE                byTimerMode;      //0-????????1-∼???㊣赤?“?㊣????℅??邦??????????????2-∼??㊣????﹞????????∼24???㊣????
	BYTE                  byUploadStartHour;    //∼??㊣???“?㊣?????????㊣??  ?㊣
	BYTE                byUoploadStartMin;    //∼??㊣???“?㊣???? ?????㊣?? ﹞?
	BYTE                byRes[1020]; //㊣???
}NET_DVR_PUBLISH_CFG, *LPNET_DVR_PUBLISH_CFG;

typedef struct tagNET_DVR_ONEKEY_PUBLISH_CFG
{
	DWORD  dwSize;  //?芍?????車??
	BYTE  byUseDefine;  //????℅??“??  0-????????﹞?????????????1-????℅??“??﹞???????????
	BYTE  byRes1[3];
	NET_DVR_RECORD_PUBLISH_INFO struChanPublish[MAX_CHANNUM_V30]; //?“??????﹞??????? struChanPublis[0]㊣赤???“??1????????﹞???????
	NET_DVR_RECORD_PUBLISH_INFO struDirectChanPublish; //?????“??????﹞???????
	NET_DVR_TIME_EX  struStartTime;  //?????????㊣??
	NET_DVR_TIME_EX  struEndTime;   //?????芍???㊣??
	BYTE    bySchedulePublish;  //??﹞?∼???㊣赤﹞?????0??∼???㊣赤﹞???1∼???㊣赤﹞???
	BYTE    sFileName[COURSE_NAME_LEN/*32*/];  //﹞???????????
	BYTE    byRes[31];
}NET_DVR_ONEKEY_PUBLISH_CFG, *LPNET_DVR_ONEKEY_PUBLISH_CFG;

typedef struct  tagNET_DVR_COURSE_RECORDING_INFO
{
	DWORD    dwSize;
	char    sCourseName[COURSE_NAME_LEN/*32*/];
	char    sInstructorName[INSTRUCTOR_NAME_LEN/*16*/];
	char    sCourseDescription[COURSE_DESCRIPTION_LEN /*256*/];
	BYTE    byIndex;        //?????‾??
	BYTE    byRes[15];
}NET_DVR_COURSE_RECORDING_INFO, *LPNET_DVR_COURSE_RECORDING_INFO;

typedef struct tagNET_DVR_EACH_LESSON_INFO_
{
	NET_DVR_SCHEDTIME struSchedTime;   //?????????㊣??
	WORD  wCourseIndex;        //?????‾??
	WORD  wSessionIndex;        //????
	BYTE   byRes[4];            //㊣???
}NET_DVR_EACH_LESSON_INFO, *LPNET_DVR_EACH_LESSON_INFO;
// ?‾????℅???
typedef struct tagNET_DVR_CURRICULUM_CFG  //??㊣赤???? ∼??那????????
{
	DWORD  dwSize;         //?芍?????車??
	NET_DVR_EACH_LESSON_INFO struLessonInfo[MAX_TIMESEGMENT_V40/*16*/]; //??????????
	BYTE   byRes[256]; //㊣???
}NET_DVR_CURRICULUM_CFG, *LPNET_DVR_CURRICULUM_CFG;

typedef  struct  tagNET_DVR_DATE_
{
	WORD         wYear;        //?那
	BYTE        byMonth;        //??    
	BYTE         byDay;        //??                        
}NET_DVR_DATE, *LPNET_DVR_DATE;

typedef struct _NET_DVR_PPT_DETECT_CFG_
{
	DWORD    dwSize;
	BYTE    byEnablePPTDetect; //??﹞?????PPT?足??
	BYTE    byPptDetLevel; //?谷????
	BYTE    byEnablePartScreen; //??﹞???????﹞????辰
	BYTE    byRes1;
	WORD    wX; //???辰℅?㊣那
	WORD    wY;
	WORD    wWidth;
	WORD    wHeight;
	DWORD   dwChangePixelNum;//???????足??????[0,1000](ps : ??﹞迄???????角????????㊣???)
	BYTE    byRes[28];
}NET_DVR_PPT_DETECT_CFG, *LPNET_DVR_PPT_DETECT_CFG;

typedef struct _NET_DVR_SCREEN_SWITCH_
{
	DWORD dwSize;
	BYTE  byRes[64];     //㊣???
}NET_DVR_SCREEN_SWITCH, *LPNET_DVR_SCREEN_SWITCH;

typedef struct _NET_DVR_PPT_CHANNEL_CFG_
{
	DWORD    dwSize;
	BYTE    byChan[MAX_PPT_CHAN];
	BYTE    byRes[32];
}NET_DVR_PPT_CHANNEL_CFG, *LPNET_DVR_PPT_CHANNEL_CFG;

typedef struct tagNET_DVR_BACKUP_RECORD_INFO
{
	BYTE   byEnable;   //??﹞?????
	BYTE   byRes[11];
	//㊣?﹞????‾?角????∼???㊣赤??
	//&0x1-㊣赤???‾???‾ 
	//&0x2-㊣赤??℅????‾
	//&0x4-㊣赤?????‾??
	DWORD  dwStreamType;
}NET_DVR_BACKUP_RECORD_INFO, *LPNET_DVR_BACKUP_RECORD_INFO;

typedef struct tagNET_DVR_BACKUP_RECORD_PARAM
{
	DWORD     dwSize;
	NET_DVR_BACKUP_RECORD_INFO   struChanBackUp[MAX_CHANNUM_V30/*64*/];  //?豕??㊣?﹞????“??,??℅谷??㊣那?????角?????“????
	NET_DVR_BACKUP_RECORD_INFO   struDirectedChanBackUp;  //?????“??㊣?﹞?????
	BYTE    byRes[256];      // ㊣???℅??? 
}NET_DVR_BACKUP_RECORD_PARAM, *LPNET_DVR_BACKUP_RECORD_PARAM;

//?????迆㊣角??
typedef struct tagNET_DVR_INDOOR_UNIT_DEVICEID
{
	SHORT wFloorNumber;   //????
	WORD  wRoomNumber;    //﹞?????
	WORD  wDevIndex;      //?????迆㊣角????0-10
	BYTE  byRes[122];     //㊣???
}NET_DVR_INDOOR_UNIT_DEVICEID, *LPNET_DVR_INDOOR_UNIT_DEVICEID;

//?????迆㊣角??
typedef struct tagNET_DVR_OUTDOOR_UNIT_DEVICEID
{
	WORD wPeriod;  //????, ﹞??∫[0,9]
	WORD wBuildingNumber; //????
	WORD wUnitNumber;  //??????
	SHORT wFloorNumber;  //????
	WORD wDevIndex;  //?????迆?辰?????????????????迆???辰???“??????0????
	BYTE byRes[118]; //㊣???
}NET_DVR_OUTDOOR_UNIT_DEVICEID, *LPNET_DVR_OUTDOOR_UNIT_DEVICEID;

//?∫???迆㊣角??
typedef struct tagNET_DVR_OUTDOOR_FENCE_DEVICEID
{
	WORD wPeriod;  //????, ﹞??∫[0,9]
	WORD wDevIndex;  //?∫???迆?辰?????????????????迆???辰???“??????0????
	BYTE byRes[124]; //㊣???
}NET_DVR_OUTDOOR_FENCE_DEVICEID, *LPNET_DVR_OUTDOOR_FENCE_DEVICEID;

//???赤?迆㊣角??
typedef struct tagNET_DVR_MANAGE_UNIT_DEVICEID
{
	WORD wPeriod; //??????﹞??∫[0,9]
	WORD wDevIndex;  //???赤?迆?辰???????????????赤?迆???辰???“??,??0????
	BYTE byRes[124]; //㊣???
}NET_DVR_MANAGE_UNIT_DEVICEID, *LPNET_DVR_MANAGE_UNIT_DEVICEID;

//?????????豕㊣?㊣角????????
typedef union tagNET_DVR_VIDEO_INTERCOM_UNIT_DEVICEID_UNION
{
	BYTE byLen[128]; //???????車??
	NET_DVR_INDOOR_UNIT_DEVICEID struIndoorUnit;   //?????迆
	NET_DVR_OUTDOOR_UNIT_DEVICEID struOutdoorUnit; //?????迆/?????????豕㊣?
	NET_DVR_MANAGE_UNIT_DEVICEID struManageUnit; //???赤?迆
	NET_DVR_OUTDOOR_FENCE_DEVICEID struFenceUnit; //?∫???迆
	NET_DVR_OUTDOOR_UNIT_DEVICEID  struVillaOutdoorUnit;  //㊣????????迆
	NET_DVR_OUTDOOR_UNIT_DEVICEID  struAgainConfirmUnit;  //?????﹞???迆
}NET_DVR_VIDEO_INTERCOM_UNIT_DEVICEID_UNION, *LPNET_DVR_VIDEO_INTERCOM_UNIT_DEVICEID_UNION;

//?豕㊣?㊣角???????芍????
typedef struct tagNET_DVR_VIDEO_INTERCOM_DEVICEID_CFG
{
	DWORD dwSize; //?芍?????車??
	BYTE byUnitType;   //?豕㊣??角????1-?????迆??2-???赤?迆 4-?∫???迆,5-㊣????????迆??6-?????﹞???迆??7-?????????豕㊣?
	BYTE byIsAutoReg;  //??﹞?℅???℅??芍??0-﹞???1-??
	BYTE byRes1[2];  //㊣???
	NET_DVR_VIDEO_INTERCOM_UNIT_DEVICEID_UNION uVideoIntercomUnit; //????????byUnitType
	BYTE byRes2[128]; //㊣???
}NET_DVR_VIDEO_INTERCOM_DEVICEID_CFG, *LPNET_DVR_VIDEO_INTERCOM_DEVICEID_CFG;

//?“???????角??
typedef enum tagPRIVILEGE_PASSWORD_TYPE_ENUM
{
	ENUM_PRIVILEGE_PASSWORD_ENGINEERING = 1, //?∟??????
	ENUM_PRIVILEGE_PASSWORD_SETUPALARM = 2, //??/?﹞﹞?????
	ENUM_PRIVILEGE_PASSWORD_HOUSEHOLDER_UNLOCK = 3, //?∫?‾????????
	ENUM_PRIVILEGE_PASSWORD_ANTI_HIJACKING = 4, //﹞?????????
	ENUM_PRIVILEGE_PASSWORD_PUBLIC1 = 5, //????????1
	ENUM_PRIVILEGE_PASSWORD_PUBLIC2 = 6, //????????2
	ENUM_PRIVILEGE_PASSWORD_PUBLIC3 = 7, //????????3
	ENUM_PRIVILEGE_PASSWORD_SENDCARD = 8//﹞??“????
}PRIVILEGE_PASSWORD_TYPE_ENUM;

//?“??????????
typedef struct tagNET_DVR_PRIVILEGE_PASSWORD_CFG
{
	DWORD  dwSize; //?芍?????車??
	BYTE   byPwdType; //?????角????????PRIVILEGE_PASSWORD_TYPE_ENUM
	BYTE   byRes1[3];  //㊣???
	BYTE   byOldPassword[PASSWD_LEN];  //??????
	BYTE   byNewPassword[PASSWD_LEN]; //??????
	BYTE   byRes2[128]; //㊣???
}NET_DVR_PRIVILEGE_PASSWORD_CFG, *LPNET_DVR_PRIVILEGE_PASSWORD_CFG;


//?????迆??℅‾?㊣??????
typedef struct tagNET_DVR_INDOOR_UNIT_OPERATION_TIME_CFG
{
	DWORD dwMaxMonitoringTime; //℅??車?角???㊣????﹞??∫[10,60]??
	DWORD dwMaxRingTime; //℅??車?????㊣????﹞??∫[15,60]??
	DWORD dwCallForwardingTime; //????℅??????㊣?㊣????﹞??∫[0,20]??
	BYTE  byRes[116];//㊣???
}NET_DVR_INDOOR_UNIT_OPERATION_TIME_CFG, *LPNET_DVR_INDOOR_UNIT_OPERATION_TIME_CFG;

//?????迆??℅‾?㊣??????
typedef struct tagNET_DVR_OUTDOOR_UNIT_OPERATION_TIME_CFG
{
	DWORD dwMaxMessageTime; //℅??車?????㊣????﹞??∫[30,60]??
	DWORD dwMaxTalkTime; //℅??車?“?∼?㊣????﹞??∫[90,120]??
	BYTE   byRes[120]; //㊣???
}NET_DVR_OUTDOOR_UNIT_OPERATION_TIME_CFG, *LPNET_DVR_OUTDOOR_UNIT_OPERATION_TIME_CFG;

//???赤?迆??℅‾?㊣??????
typedef struct tagNET_DVR_MANAGE_UNIT_OPERATION_TIME_CFG
{
	DWORD dwMaxMonitoringTime;  //℅??車?角???㊣????﹞??∫[10,60]??
	DWORD dwMaxRingTime;        //℅??車?????㊣????﹞??∫[15,60]??
	DWORD dwMaxTalkTime;        //℅??車?“?∼?㊣????????s
	BYTE  byRes[116];           //㊣???
}NET_DVR_MANAGE_UNIT_OPERATION_TIME_CFG, *LPNET_DVR_MANAGE_UNIT_OPERATION_TIME_CFG;

//??????????℅‾?㊣????????
typedef union tagNET_DVR_VIDEO_INTERCOM_OPERATION_TIME_UNION
{
	BYTE byLen[128]; //???????車??
	NET_DVR_INDOOR_UNIT_OPERATION_TIME_CFG struIndoorUnit; //?????迆
	NET_DVR_OUTDOOR_UNIT_OPERATION_TIME_CFG struOutdoorUnit; //?????迆/?∫???迆/㊣????????迆/?????﹞???迆
	NET_DVR_MANAGE_UNIT_OPERATION_TIME_CFG struManageUnit; //???赤?迆
}NET_DVR_VIDEO_INTERCOM_OPERATION_TIME_UNION, *LPNET_DVR_VIDEO_INTERCOM_OPERATION_TIME_UNION;

//??????????℅‾?㊣??????
typedef struct tagNET_DVR_VIDEO_INTERCOM_OPERATION_TIME_CFG
{
	DWORD dwSize; //?芍?????車??
	BYTE byUnitType; //?豕㊣??角????1-?????迆??2-???赤?迆??3-?????迆??4-?∫???迆??5-㊣????????迆??6-?????﹞???迆
	BYTE byRes1[3];  //㊣???
	NET_DVR_VIDEO_INTERCOM_OPERATION_TIME_UNION uVideoIntercomUnit; //????????byUnitType
	BYTE byRes2[128]; //㊣???
}NET_DVR_VIDEO_INTERCOM_OPERATION_TIME_CFG, *LPNET_DVR_VIDEO_INTERCOM_OPERATION_TIME_CFG;

//?????迆???????????豕㊣?
typedef struct tagNET_DVR_INDOOR_UNIT_RELATEDEV
{
	NET_DVR_IPADDR struOutdoorUnit; //?‾?????迆IP
	NET_DVR_IPADDR struManageUnit;  //???赤?迆IP
	NET_DVR_IPADDR struSIPServer;    //SIP﹞????‾IP
	NET_DVR_IPADDR struAgainUnit;   //?????﹞???迆IP
	BYTE             byOutDoorType;  //?‾?????迆?角????0㊣?????1-?‾?????????迆??2-?‾㊣????????迆
	BYTE             byOutInConnectMode;  //?????迆??????﹞??迆℅谷????????1-?????迆??????﹞??迆???????辰??,2-?????迆??????﹞??迆???????辰????
	BYTE             byIndoorConnectMode;  //?????‾?迆??????﹞??迆℅谷????????1-?“?????????“??2-?“?????????“??
	BYTE           byRes1;
	NET_DVR_IPADDR struIndoorUnit; //?????‾?迆IP
	BYTE  byManageCenterID[32];  //㊣那℅?sip???????????????赤????ID???∫????℅???℅?????@??.
	BYTE           byRes[268];       //㊣???
}NET_DVR_INDOOR_UNIT_RELATEDEV, *LPNET_DVR_INDOOR_UNIT_RELATEDEV;

//?????迆?角???????????豕㊣?
typedef struct tagNET_DVR_OUTDOOR_UNIT_RELATEDEV
{
	NET_DVR_IPADDR struMainOutdoorUnit; //?‾?????迆IP???㊣?????迆?㊣???∫
	NET_DVR_IPADDR struManageUnit;   //???赤?迆IP
	NET_DVR_IPADDR struSIPServer;     //SIP﹞????‾IP???㊣?????迆?㊣???∫
	BYTE           byManageCenterID[32];   //㊣那℅?sip???????????????赤????ID???∫????℅???℅?????@??.
	BYTE           byRes[560];       //㊣???
}NET_DVR_OUTDOOR_UNIT_RELATEDEV, *LPNET_DVR_OUTDOOR_UNIT_RELATEDEV;

//?????﹞???迆?角???????????豕㊣?
typedef struct tagNET_DVR_AGAIN_RELATEDEV
{
	NET_DVR_IPADDR   struSIPServer;       //SIP﹞????‾IP
	NET_DVR_IPADDR   struCenterAddr;      //???????“IP
	WORD             wCenterPort;         //???????“????
	BYTE             byRes1[2];
	NET_DVR_IPADDR   struIndoorUnit; //?????‾?迆IP
	NET_DVR_IPADDR struAgainAddr; //?‾?????﹞???迆IP?“?㊣?????﹞???迆??????℅?????
	BYTE             byRes[444];//㊣???
}NET_DVR_AGAIN_RELATEDEV, *LPNET_DVR_AGAIN_RELATEDEV;


//???赤?迆?角???????????豕㊣?
typedef struct tagNET_DVR_MANAGE_UNIT_RELATEDEV
{
	NET_DVR_IPADDR  struSIPServer;     //SIP﹞????‾IP
	BYTE   byRes[880];       //㊣???
}NET_DVR_MANAGE_UNIT_RELATEDEV, *LPNET_DVR_MANAGE_UNIT_RELATEDEV;


//?????????????????豕㊣??????芍????
typedef union tagNET_DVR_VIDEO_INTERCOM_UNIT_RELATEDEV_UNION
{
	DWORD dwRes[256]; //???????車??
	NET_DVR_INDOOR_UNIT_RELATEDEV struIndoorUnit;   //?????迆
	NET_DVR_OUTDOOR_UNIT_RELATEDEV struMainOutdoorUnit; //?????迆/?∫???迆/?????????豕㊣?
	NET_DVR_MANAGE_UNIT_RELATEDEV struManageUnit; //???赤?迆
	NET_DVR_OUTDOOR_UNIT_RELATEDEV  struVillaUnit;      //㊣????????迆
	NET_DVR_AGAIN_RELATEDEV           struAgainUnit;      //?????﹞???迆
}NET_DVR_VIDEO_INTERCOM_UNIT_RELATEDEV_UNION, *LPNET_DVR_VIDEO_INTERCOM_UNIT_RELATEDEV_UNION;

//?????????豕㊣??????芍????
typedef struct tagNET_DVR_VIDEO_INTERCOM_RELATEDEV_CFG
{
	DWORD dwSize; //?芍?????車??
	BYTE byUnitType; //?豕㊣??角????1-?????迆??2-???赤?迆??3-?????迆??4-?∫???迆??5-㊣????????迆??6-?????﹞???迆??7-?????????豕㊣?
	BYTE byRes1[3];  //㊣???
	NET_DVR_VIDEO_INTERCOM_UNIT_RELATEDEV_UNION uVideoIntercomUnit; //????????byUnitType
	BYTE byRes2[128]; //㊣???
}NET_DVR_VIDEO_INTERCOM_RELATEDEV_CFG, *LPNET_DVR_VIDEO_INTERCOM_RELATEDEV_CFG;

typedef struct tagNET_DVR_CONTROL_GATEWAY
{
	DWORD dwSize; //?芍?????車??
	DWORD dwGatewayIndex; //?????辰??????1????
	BYTE   byCommand; //??℅‾?邦????0-??㊣???1-?辰????2-?????“?“??℅???????3-?????“???“℅?????
	BYTE   byLockType; //???角????0-???“?“???∼????????0??,1-??????
	WORD    wLockID; //??ID????1?????“???????????迆???㊣??0㊣赤???????迆㊣??迆?????‾??????????1㊣赤???????????‾??????????
	BYTE   byControlSrc[NAME_LEN]; //??℅‾﹞?????????
	BYTE   byControlType; //?????角????1-?角????2-?“?∼
	BYTE  byRes3[3];
	BYTE  byPassword[PASSWD_LEN];       //?????????㊣byLockType?????????㊣???∫
	BYTE  byRes2[108]; //㊣???
}NET_DVR_CONTROL_GATEWAY, *LPNET_DVR_CONTROL_GATEWAY;


//?????????????芍????
typedef struct tagNET_DVR_NOTICE_PIC
{
	BYTE*  pPicData; //????????
	DWORD dwPicDataLen; //?????????∟??
	BYTE   byRes[32]; //㊣???
}NET_DVR_NOTICE_PIC, *LPNET_DVR_NOTICE_PIC;

//????????
typedef struct tagNET_DVR_NOTICE_DATA
{
	DWORD dwSize; //?芍?????車??
	NET_DVR_TIME_EX struTime; //?????㊣??
	BYTE   byNoticeNumber[MAX_NOTICE_NUMBER_LEN]; //????㊣角??
	BYTE   byNoticeTheme[MAX_NOTICE_THEME_LEN];//?????‾??
	BYTE   byNoticeDetail[MAX_NOTICE_DETAIL_LEN]; //?????那?谷
	BYTE   byLevel; //??????????1-?????角??????2-??????????3-㊣“???角????;4-?“???角????
	BYTE   byPicNum; //????????????
	BYTE   byRes1[2]; //㊣???    
	NET_DVR_NOTICE_PIC struNoticePic[MAX_NOTICE_PIC_NUM]; //????????
	BYTE   byRes2[128]; //㊣???
}NET_DVR_NOTICE_DATA, *LPNET_DVR_NOTICE_DATA;

//??℅‾?“???谷?∟????
typedef struct tagNET_DVR_OPERATION_AUTH
{
	DWORD dwSize; //?芍?????車??
	BYTE   byPassword[PASSWD_LEN]; //?谷?∟????
	BYTE   byRes[128]; //㊣???
}NET_DVR_OPERATION_AUTH, *LPNET_DVR_OPERATION_AUTH;

//?????角??
typedef enum tagUNLOCK_TYPE_ENUM
{
	ENUM_UNLOCK_PASSWORD = 1, //????????
	ENUM_UNLOCK_HIJACKING = 2, //????????
	ENUM_UNLOCK_CARD = 3, //???“????
	ENUM_UNLOCK_HOUSEHOLDER = 4, //?∫?‾????
	ENUM_UNLOCK_CENTER_PLATFORM = 5, //???????“????
	ENUM_UNLOCK_BLUETOOTH = 6, //????????
	ENUM_UNLOCK_QR_CODE = 7,   //??????????
	ENUM_UNLOCK_FACE = 8,           //????????
	ENUM_UNLOCK_FINGERPRINT = 9     //????????
}UNLOCK_TYPE_ENUM;


//﹞????角???????迆?﹞???﹞???????“????????????????????DETECTOR_TYPE
// typedef enum tagALARM_ZONE_TYPE_ENUM
// {    
//     ENUM_ALARM_ZONE_SMOKE = 1, //????
//         ENUM_ALARM_ZONE_GAS  = 2,  //????
//         ENUM_ALARM_ZONE_INFRARED = 3, //?足??
//         ENUM_ALARM_ZONE_MAGNETIC  = 4, //????
//         ENUM_ALARM_ZONE_MANUAL = 5 //????
// }ALARM_ZONE_TYPE_ENUM;

//????????
typedef struct tagNET_DVR_UNLOCK_RECORD_INFO
{
	BYTE   byUnlockType; //????﹞?????????UNLOCK_TYPE_ENUM
	BYTE   byRes1[3]; //㊣???
	BYTE   byControlSrc[NAME_LEN]; //??℅‾﹞??????????????“?????㊣???“?????????????㊣????????APP?????????????????㊣??﹞????????迆???????角?谷???????豕㊣?㊣角??
	DWORD  dwPicDataLen; //?????????∟??
	BYTE*  pImage; //????????
	DWORD  dwCardUserID; //???“??ID
	SHORT  nFloorNumber;//???“?????㊣???∫??????????
	WORD   wRoomNumber; //??℅‾﹞??????????????????“?????㊣???∫????﹞???????
	WORD   wLockID; //?“?????????迆??0-㊣赤??㊣??迆?????‾??????????1-㊣赤???????????‾??????????
	BYTE   byRes2[2];
	BYTE   byLockName[LOCK_NAME_LEN]; //???“?????㊣???∫????????????????????????????????
	BYTE   byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID??
	BYTE   byRes[136]; //㊣???
}NET_DVR_UNLOCK_RECORD_INFO, *LPNET_DVR_UNLOCK_RECORD_INFO;

//????????????????
typedef struct tagNET_DVR_NOTICEDATA_RECEIPT_INFO
{
	BYTE   byNoticeNumber[MAX_NOTICE_NUMBER_LEN]; //????㊣角??
	BYTE   byRes[224];  //㊣???
}NET_DVR_NOTICEDATA_RECEIPT_INFO, *LPNET_DVR_NOTICEDATA_RECEIPT_INFO;

//???∟?????“?豕㊣?????????
typedef struct tagNET_DVR_AUTH_INFO
{
	BYTE   byAuthResult; //???∟?芍????0-???∫??1-???∟??????2-???∟?∫∼?
	BYTE   byAuthType; //???∟﹞?????0-???∫??1-??????2-????
	BYTE   byRes1[2]; //㊣???
	BYTE   byCardNo[ACS_CARD_NO_LEN/*32*/]; //?“??
	DWORD dwPicDataLen; //?????????∟???“?㊣???∟﹞???byAuthType???????㊣???∫??
	BYTE*  pImage; //?????????“?㊣???∟﹞???byAuthType???????㊣???∫??
	BYTE   byRes[212];  //㊣???
}NET_DVR_AUTH_INFO, *LPNET_DVR_AUTH_INFO;

//????????????
typedef struct tagNET_DVR_UPLOAD_PLATE_INFO
{
	char sLicense[MAX_LICENSE_LEN];        //????????
	BYTE   byColor;                      //???????????????芍??VCA_PLATE_COLOR
	BYTE   byRes[239];  //㊣???
}NET_DVR_UPLOAD_PLATE_INFO, *LPNET_DVR_UPLOAD_PLATE_INFO;

typedef struct tagNET_DVR_SEND_CARD_INFO
{
	BYTE   byCardNo[ACS_CARD_NO_LEN/*32*/]; //?“??
	BYTE   byRes[224];  //㊣???
}NET_DVR_SEND_CARD_INFO, *LPNET_DVR_SEND_CARD_INFO;

//??????????????????????????
typedef union tagNET_DVR_VIDEO_INTERCOM_EVENT_INFO_UINON
{
	BYTE byLen[256]; //???????車??
	NET_DVR_UNLOCK_RECORD_INFO struUnlockRecord; //????????
	NET_DVR_NOTICEDATA_RECEIPT_INFO struNoticedataReceipt; //????????????????
	NET_DVR_AUTH_INFO struAuthInfo; //???∟?????“?豕㊣?????????
	NET_DVR_UPLOAD_PLATE_INFO struUploadPlateInfo; //????????????
	NET_DVR_SEND_CARD_INFO struSendCardInfo; //?????迆﹞??“,?????豕㊣?????﹞??“℅????????“?㊣??????????
}NET_DVR_VIDEO_INTERCOM_EVENT_INFO_UINON, *LPNET_DVR_VIDEO_INTERCOM_EVENT_INFO_UINON;


//????????????????
typedef struct tagNET_DVR_VIDEO_INTERCOM_EVENT
{
	DWORD dwSize; //?芍?????車??
	NET_DVR_TIME_EX struTime; //?㊣??
	BYTE   byDevNumber[MAX_DEV_NUMBER_LEN]; //?豕㊣?㊣角??
	BYTE   byEventType; //?????????角????1-??????????2-??????????????????3-???∟??????4-??????????????5﹞?﹞“?“???“??????6-?????迆﹞??“????(?豕???????????迆﹞??“?????????“?㊣???芍??????????)
	BYTE   byPicTransType;        //????????????﹞???: 0-????????1-url
	BYTE   byRes1[2]; //㊣???
	NET_DVR_VIDEO_INTERCOM_EVENT_INFO_UINON uEventInfo; //??????????????????????byEventType????
	DWORD dwIOTChannelNo;    //IOT?“????
	BYTE  byRes2[252]; //㊣???
}NET_DVR_VIDEO_INTERCOM_EVENT, *LPNET_DVR_VIDEO_INTERCOM_EVENT;


//﹞???㊣“??????
typedef struct tagNET_DVR_ZONE_ALARM_INFO
{
	BYTE   byZoneName[NAME_LEN]; //﹞???????
	DWORD  dwZonendex; //﹞?????
	BYTE   byZoneType; //﹞????角????????DETECTOR_TYPE
	BYTE   byRes[219];  //㊣???
}NET_DVR_ZONE_ALARM_INFO, *LPNET_DVR_ZONE_ALARM_INFO;

//??㊣“??????
typedef struct tagNET_DVR_LOCK_ALARM_INFO
{
	DWORD   dwLockID;   //??ID????0????
	BYTE    byRes[252]; //㊣???℅???
}NET_DVR_LOCK_ALARM_INFO, *LPNET_DVR_LOCK_ALARM_INFO;

typedef union tagNET_DVR_VIDEO_INTERCOM_ALARM_INFO_UNION
{
	BYTE byLen[256]; //???????車??
	NET_DVR_ZONE_ALARM_INFO struZoneAlarm; //﹞???㊣“??
	NET_DVR_LOCK_ALARM_INFO struLockAlarm;  //??㊣“??????
}NET_DVR_VIDEO_INTERCOM_ALARM_INFO_UNION, *LPNET_DVR_VIDEO_INTERCOM_ALARM_INFO_UNION;


//????????㊣“????????????
typedef struct tagNET_DVR_VIDEO_INTERCOM_ALARM
{
	DWORD dwSize;  //?芍?????車??
	NET_DVR_TIME_EX struTime; //㊣“???㊣??
	BYTE  byDevNumber[MAX_DEV_NUMBER_LEN]; //?豕㊣?㊣角??
	BYTE  byAlarmType; //㊣“???角????1-﹞???㊣“????2-﹞???㊣“????3-????㊣“????4-?角???????????∫∼?㊣“??,5-????????6-?????? 7-SOS ??8-?“?∼??????9-??????????????㊣“???? 10-??????????????㊣“????11-??????????㊣“????12-?????????????“㊣“????13-????????????℅?㊣“?? ,14-??????㊣“??,15-??????????
					   //??16-????∼??????谷﹞???㊣“????17-?豕㊣???????????18-?豕㊣?????????
	BYTE  byRes1[3]; //㊣???
	NET_DVR_VIDEO_INTERCOM_ALARM_INFO_UNION uAlarmInfo; //㊣“????????????????????℅???byAlarmType????
	WORD  wLockID; //?“0-㊣赤???????迆㊣??迆?????‾??????????1-㊣赤???????????‾???????????“㊣“???角????5??6?㊣???∫??
	BYTE  byRes3[2]; //㊣???
	DWORD dwIOTChannelNo;    //IOT?“????
	BYTE  byRes2[248]; //㊣???
}NET_DVR_VIDEO_INTERCOM_ALARM, *LPNET_DVR_VIDEO_INTERCOM_ALARM;

typedef struct tagNET_DVR_PEOPLE_REGION
{
	BYTE byID;//???辰ID
	BYTE byNumber;//???辰???????㊣???? 0-㊣赤?????辰?????????㊣
	BYTE byDressType;//℅?℅∼?角?? 0-??????1-﹞“????2-??????3-??﹞?
	BYTE byRes;
	NET_VCA_RECT  struRegion;
	DWORD  dwPicLen;//?足???????∟?? (0㊣赤???????∟??)
	char*  pPicBuffer;//??????????????
	BYTE byRes1[24];//㊣???(?∟???車?????????辰????)
}NET_DVR_PEOPLE_REGION, *LPNET_DVR_PEOPLE_REGION;

typedef struct tagNET_DVR_PEOPLE_DETECTION_RESULT
{
	DWORD     dwSize;
	DWORD     dwRelativeTime; //?角???㊣㊣那
	DWORD    dwAbsTime; //?????㊣㊣那
	NET_VCA_DEV_INFO  struDevInfo;//?∼???豕㊣?????
	NET_DVR_PEOPLE_REGION  struPeopleRegion[MAX_PEOPLE_DETECTION_NUM/*8*/];
	/*???㊣?足??㊣“???角??
	?“0-    ??????
	?“1-    ?車???????辰???﹞??㊣“??
	?“2-    ?車?????㊣?∫???足??㊣“??
	?“3-    ㊣??車?????㊣???赤?足??㊣“??
	?“4-    ?車?????㊣?足????
	*/
	BYTE  byPeopleAlarmType;
	BYTE  byRes[255];
}NET_DVR_PEOPLE_DETECTION_RESULT, *LPNET_DVR_PEOPLE_DETECTION_RESULT;

typedef    struct tagNET_DVR_SUPPLEMENTLIGHT
{
	BYTE        byEnable;//???? 0-????1-??
	BYTE          byMode;//?????????? 0-℅?????1-?“?㊣
	BYTE        byHighBeamBrightness;//??????????[0,10]
	BYTE        byLowBeamBrightness;//?邦????????[0,10]
	NET_DVR_SCHEDULE_DAYTIME  struSchedTime;//?“?㊣?㊣????    
	WORD        wFilteringTime;//?????㊣??(s)[0,120]
	BYTE        byBrightness;//??????????[0,10]?“?㊣?∫?????????㊣?? byHighBeamBrightness??byLowBeamBrightness???迆?∫??
	BYTE        bySensitivity;//???????谷????[0,7],????4?“?㊣byMode??℅????㊣?迆?∫??
	BYTE        byBrightnessRegulatMode;// ?????‾????????0-??????1-℅????“?㊣??℅????㊣byBrightness???迆?∫??
	BYTE        byMaxBrightness;//??????℅??車?????“???????‾????????℅????㊣?迆?∫????[0,100]??????50
	BYTE        byRes[58];
}NET_DVR_SUPPLEMENTLIGHT, *LPNET_DVR_SUPPLEMENTLIGHT;

typedef    struct tagNET_DVR_EXTERNALDEVICE
{
	DWORD        dwSize;//?芍?????車??
	NET_DVR_SUPPLEMENTLIGHT struSupplementLight;//???????芍??????        
	BYTE        byRes[512];
}NET_DVR_EXTERNALDEVICE, *LPNET_DVR_EXTERNALDEVICE;
typedef    struct tagNET_DVR_TEMPERATURE_TRIGGER_COND
{
	DWORD     dwSize;//?芍?????車??
	DWORD     dwChan;//?“????
	DWORD     dwPreset;//?∟??????
	BYTE      byRes[256];
}NET_DVR_TEMPERATURE_TRIGGER_COND, *LPNET_DVR_TEMPERATURE_TRIGGER_COND;
//(?辰?迆?∫?????赤?????????????????豕?????豕㊣???????)
typedef    struct tagNET_DVR_BUILTIN_SUPPLEMENTLIGHT
{
	DWORD        dwSize;//?芍?????車??
	BYTE          byMode;//?????????? 0-?“?㊣??1-??????2-??㊣???3-℅????“﹞?????????﹞“??????㊣???
	BYTE        byBrightnessLimit;//????????[0,100]
	BYTE        bySupplementLightMode;//???????角??,0~∼℅??????,1~?足??????
	BYTE        byMixedLightRegulatMode;//?足?????????????‾??????,0~℅???,1~????,?㊣bySupplementLightMode = 1?㊣?迆?∫
	BYTE        byLrLightBrightness;//?足??????????[0,100],?㊣byMixedLightRegulatMode = 1?㊣?迆?∫??
	BYTE        byHighLrLightBrightness;// ?????足????????????[0,100],?㊣byMixedLightRegulatMode = 1?㊣?迆?∫
	BYTE        byHighBrightnessLimit;// ????∼℅??????????[0,100],?㊣byMixedLightRegulatMode = 1?㊣?迆?∫
	BYTE        byLowLrLightBrightness;// ?邦???足????????????[0,100],?㊣byMixedLightRegulatMode = 1?㊣?迆?∫
	NET_DVR_SCHEDULE_DAYTIME  struSchedTime;//?“?㊣?㊣????    
	BYTE        byLowBrightnessLimit;//?邦??∼℅??????????[0,100],?㊣byMixedLightRegulatMode = 1?㊣?迆?∫
	BYTE        byWhiteLightBrightness;// ∼℅????????
	BYTE        byRes1[254];
}NET_DVR_BUILTIN_SUPPLEMENTLIGHT, *LPNET_DVR_BUILTIN_SUPPLEMENTLIGHT;
typedef struct tagNET_DVR_OIS_CFG
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byMode;  //??﹞????∫﹞?????0-??㊣???1-???“??2-℅“?? 
	BYTE      byOISLevel; //???∫﹞?????????0-????1-????2-??
	BYTE      byOISSensitivity;//???∫﹞????谷??????0-????1-????2-??
	BYTE        byRes[125];
}NET_DVR_OIS_CFG, *LPNET_DVR_OIS_CFG;

typedef struct tagNET_DVR_MACFILTER_CFG
{
	DWORD    dwSize;//?芍?????車??
	BYTE     byEnabled;  //??﹞?????MAC???﹞??????0-﹞???1-??
	BYTE     byPermissionType; //MAC???﹞?????角????0-??????1-???赤
	BYTE     byRes1[2];
	BYTE     szMacAddress[MAC_ADDRESS_NUM][MACADDR_LEN];
	BYTE     byRes[128];
}NET_DVR_MACFILTER_CFG, *LPNET_DVR_MACFILTER_CFG;

typedef    struct tagNET_DVR_EAGLEFOCUSING_SENCE
{
	BYTE    byRuleType;//???辰?角????0-??
	BYTE    bySceneID;//???∼ID??0-㊣????? 1??㊣赤?????∼1,2㊣赤?????∼2?????角?????角?? 
	WORD    wRate;//㊣?????50-100  
	NET_VCA_POLYGON struRegion;// ???辰﹞??∫
	BYTE    bySpotNum;//??㊣那?“???????角??????????㊣那?“??3-5??????3
	BYTE    byRes[127];
}NET_DVR_EAGLEFOCUSING_SENCE, *LPNET_DVR_EAGLEFOCUSING_SENCE;

typedef struct tagNET_DVR_EAGLEFOCUSING_CALCFG
{
	DWORD   dwSize;
	BYTE    byEnabled;//??﹞?????㊣那?“??0-????㊣那?“??1-????㊣那?“?“???????豕???㊣???∫???????㊣???∫??
	BYTE    byRes1[3];
	NET_DVR_EAGLEFOCUSING_SENCE struEagleFoucsing[MAX_SENCE_NUM/*16*/];
	BYTE   byRes[512];
}NET_DVR_EAGLEFOCUSING_CALCFG, *LPNET_DVR_EAGLEFOCUSING_CALCFG;

typedef struct tagNET_DVR_EAGLEFOCUSING_CTRL
{
	DWORD    dwSize;
	BYTE     byEnable;//??????0-??㊣???????????1-????????????
	BYTE     byHeightCompensationEnable;//????????????
	BYTE     byHeightCompensationValue;//??????????, ﹞??∫1-5,????3,???????迆㊣赤0.5?℅
	BYTE     byRes[509];
}NET_DVR_EAGLEFOCUSING_CTRL, *LPNET_DVR_EAGLEFOCUSING_CTRL;

typedef struct tagNET_DVR_SMARTCALIBRATION_REGION
{
	BYTE        byRuleID;//???辰㊣角??
	BYTE        byMode;//0-default Mode,1-pix Mode,2-actual Mode
	BYTE        byStrategy;//???????? 0-area(????),1-widthHeight(?赤??) (<!---,if mode == pix Mode -->)
	BYTE        byPriority;//?????? 0-??????, 1-????2-????3-??
	NET_VCA_POLYGON struMaxTargetSize;//℅??車??㊣那????
	NET_VCA_POLYGON struMinTargetSize;//℅?????㊣那????
}NET_DVR_SMARTCALIBRATION_REGION, *LPNET_DVR_SMARTCALIBRATION_REGION;

#define RULE_REGION_MAX 128
typedef struct tagNET_DVR_SMARTCALIBRATION_CFG
{
	DWORD        dwSize;//?芍?????車??
						/* SmartType:
						0-linedetection,
						1-fielddetection,
						2-regionEntrance,
						3-regionExiting,
						4-loitering,
						5-rapidMove,
						6-parking,
						7-unattendedBaggage,
						8-attendedBaggage
						*/
	BYTE        bySmartType;//?????角??
	BYTE        byRes[3];
	NET_DVR_SMARTCALIBRATION_REGION strRegion[RULE_REGION_MAX/*128*/];
	BYTE        byRes1[128];
}NET_DVR_SMARTCALIBRATION_CFG, *LPNET_DVR_SMARTCALIBRATION_CFG;

typedef struct tagNET_DVR_SMARTCALIBRATION_COND
{
	DWORD        dwSize;//?芍?????車??
						/* SmartType:
						0-linedetection,
						1-fielddetection,
						2-regionEntrance,
						3-regionExiting,
						4-loitering,
						5-rapidMove,
						6-parking,
						7-unattendedBaggage,
						8-attendedBaggage
						*/
	BYTE        bySmartType;//?????角??
	BYTE        byRes[3];
	DWORD        dwChannel;//?“????
	BYTE        byRes1[128];
}NET_DVR_SMARTCALIBRATION_COND, *LPNET_DVR_SMARTCALIBRATION_COND;

typedef struct tagNET_DVR_SMARTCALIBRATION_REGION_CFG
{
	DWORD        dwSize;//?芍?????車??
	NET_DVR_SMARTCALIBRATION_REGION strRegion[RULE_REGION_MAX/*128*/];
	BYTE        byRes1[128];
}NET_DVR_SMARTCALIBRATION_REGION_CFG, *LPNET_DVR_SMARTCALIBRATION_REGION_CFG;


typedef    struct tagNET_DVR_OSD_BATTERY_POWER_CFG
{
	DWORD dwSize;
	NET_VCA_POINT  struOSDBatteryPower;//???‾????????OSD????℅車????℅?㊣那
	BYTE   byOSDBatteryPower;//????????OSD????????????,  0-﹞???1-??
	BYTE    byRes[63];
}NET_DVR_OSD_BATTERY_POWER_CFG, *LPNET_DVR_OSD_BATTERY_POWER_CFG;

#define CARD_PARAM_CARD_VALID       0x00000001  //?“??﹞????∫????
#define CARD_PARAM_VALID            0x00000002  //???∫??????
#define CARD_PARAM_CARD_TYPE        0x00000004  //?“?角??????
#define CARD_PARAM_DOOR_RIGHT       0x00000008  //???“??????
#define CARD_PARAM_LEADER_CARD      0x00000010  //?℅?“????
#define CARD_PARAM_SWIPE_NUM        0x00000020  //℅??車???“????????
#define CARD_PARAM_GROUP            0x00000040  //?迄????℅谷????
#define CARD_PARAM_PASSWORD         0x00000080  //?“????????
#define CARD_PARAM_RIGHT_PLAN       0x00000100  //?“?“??????????
#define CARD_PARAM_SWIPED_NUM       0x00000200  //?????“????

typedef struct tagNET_DVR_VALID_PERIOD_CFG
{
	BYTE byEnable; //???????∫????0-????????1????
	BYTE byBeginTimeFlag;      //??﹞??????????㊣????㊣那????0-????????1-????
	BYTE byEnableTimeFlag;     //??﹞??????????㊣????㊣那????0-????????1-????
	BYTE byTimeDurationNo;     //???∫???‾??,??0?????“?㊣?????“??SDK?豕?????????車???????“?㊣?????豕?????????∫???‾??????????????????????
	NET_DVR_TIME_EX struBeginTime; //???∫???????㊣??
	NET_DVR_TIME_EX struEndTime; //???∫???芍???㊣??
	BYTE byTimeType; //?㊣???角????0-?豕㊣?㊣????㊣???“????????1-UTC?㊣???“????struBeginTime??struEndTime℅??????∫??
	BYTE byRes2[31];
}NET_DVR_VALID_PERIOD_CFG, *LPNET_DVR_VALID_PERIOD_CFG;

typedef struct tagNET_DVR_CARD_CFG
{
	DWORD dwSize;
	DWORD dwModifyParamType;
	// ?豕?????????“???????豕???“?????㊣???∫??∼???㊣赤?????????迆㊣赤??????????1???豕????????0????????
	// #define CARD_PARAM_CARD_VALID       0x00000001 //?“??﹞????∫????
	// #define CARD_PARAM_VALID            0x00000002  //???∫??????
	// #define CARD_PARAM_CARD_TYPE        0x00000004  //?“?角??????
	// #define CARD_PARAM_DOOR_RIGHT       0x00000008  //???“??????
	// #define CARD_PARAM_LEADER_CARD      0x00000010  //?℅?“????
	// #define CARD_PARAM_SWIPE_NUM        0x00000020  //℅??車???“????????
	// #define CARD_PARAM_GROUP            0x00000040  //?迄????℅谷????
	// #define CARD_PARAM_PASSWORD         0x00000080  //?“????????
	// #define CARD_PARAM_RIGHT_PLAN       0x00000100  //?“?“??????????
	// #define CARD_PARAM_SWIPED_NUM       0x00000200  //?????“????
	BYTE byCardNo[ACS_CARD_NO_LEN]; //?“??
	BYTE byCardValid; //?“??﹞????∫??0-???∫??1-???∫?“?????????“???豕???㊣????0???????????????㊣??℅?????????1??
	BYTE byCardType; //?“?角????1-???“?“??2-???????“??3-???????“??4-???邦?“??5-?????“??6-?????“??7-??㊣??“??8-?????“?????????“?“
	BYTE byLeaderCard; //??﹞????℅?“??1-????0-﹞?
	BYTE byRes1;
	DWORD dwDoorRight; //???“????∼???㊣赤????1?????“????0?????“????????????????㊣赤??????1-N??﹞????“??
	NET_DVR_VALID_PERIOD_CFG struValid; //???∫??????
	DWORD dwBelongGroup; //?迄????℅谷??∼???㊣赤????1-??????0-????????????????????㊣赤????﹞???????℅谷1-N
	BYTE byCardPassword[CARD_PASSWORD_LEN]; //?“????
	BYTE byCardRightPlan[MAX_DOOR_NUM][MAX_CARD_RIGHT_PLAN_NUM]; //?“?“????????????????????∼?㊣角????????????????????∼??????“???辰??﹞??????赤
	DWORD dwMaxSwipeTime; //℅??車???“??????0????????????
	DWORD dwSwipeTime; //?????“????
	WORD wRoomNumber;  //﹞?????
	SHORT wFloorNumber;   //????
	BYTE byRes2[20];
}NET_DVR_CARD_CFG, *LPNET_DVR_CARD_CFG;

typedef struct _NET_DVR_CARD_CFG_COND
{
	DWORD dwSize;
	DWORD dwCardNum; //?豕???辰?????“???????????㊣????0xffffffff㊣赤???????迄???“????
	BYTE  byCheckCardNo; //?豕㊣???﹞??????“?????谷??0-?????谷??1-???谷
	BYTE           byRes1[3];
	WORD wLocalControllerID; //?????????‾?辰????㊣赤???迄?????????‾??﹞??????“??????0?迆㊣赤???????‾?迆
	BYTE  byRes2[2];
	DWORD dwLockID;  //??ID
	BYTE  byRes3[20];
}NET_DVR_CARD_CFG_COND, *LPNET_DVR_CARD_CFG_COND;

typedef struct _NET_DVR_CARD_CFG_SEND_DATA
{
	DWORD dwSize;
	BYTE byCardNo[ACS_CARD_NO_LEN]; //?“??
	DWORD dwCardUserId;    //???“??ID
	BYTE byRes[12];
}NET_DVR_CARD_CFG_SEND_DATA, *LPNET_DVR_CARD_CFG_SEND_DATA;

typedef struct tagNET_DVR_CARD_USER_INFO_CFG  /*?????????芍????*/
{
	DWORD dwSize;
	BYTE sUsername[NAME_LEN];                /* ???∫??*/
	BYTE byRes2[256];                       //byRes2[0]--????㊣“???‾?迆??℅‾???∫??
}NET_DVR_CARD_USER_INFO_CFG, *LPNET_DVR_CARD_USER_INFO_CFG;

#define ACS_PARAM_DOOR_STATUS_WEEK_PLAN        0x00000001 //??℅?????????????
#define ACS_PARAM_VERIFY_WEEK_PALN             0x00000002 //???“?‾??????????
#define ACS_PARAM_CARD_RIGHT_WEEK_PLAN         0x00000004 //?“?“????????????
#define ACS_PARAM_DOOR_STATUS_HOLIDAY_PLAN     0x00000008 //??℅???????????????
#define ACS_PARAM_VERIFY_HOLIDAY_PALN          0x00000010 //???“?‾????????????
#define ACS_PARAM_CARD_RIGHT_HOLIDAY_PLAN      0x00000020 //?“?“??????????????
#define ACS_PARAM_DOOR_STATUS_HOLIDAY_GROUP    0x00000040 //??℅???????℅谷????
#define ACS_PARAM_VERIFY_HOLIDAY_GROUP         0x00000080 //???“?‾?谷?∟﹞???????℅谷????
#define ACS_PARAM_CARD_RIGHT_HOLIDAY_GROUP     0x00000100 //?“?“??????℅谷????
#define ACS_PARAM_DOOR_STATUS_PLAN_TEMPLATE    0x00000200 //??℅?????????∼?????
#define ACS_PARAM_VERIFY_PALN_TEMPLATE         0x00000400 //???“?‾?谷?∟﹞?????????∼?????
#define ACS_PARAM_CARD_RIGHT_PALN_TEMPLATE     0x00000800 //?“?“????????∼?????
#define ACS_PARAM_CARD                         0x00001000 //?“????
#define ACS_PARAM_GROUP                        0x00002000 //??℅谷????
#define ACS_PARAM_ANTI_SNEAK_CFG               0x00004000 //﹞??㊣??????
#define ACS_PAPAM_EVENT_CARD_LINKAGE           0x00008000 //?????∼?“??????????
#define ACS_PAPAM_CARD_PASSWD_CFG              0x00010000 //????????????????
#define ACS_PARAM_PERSON_STATISTICS_CFG        0x00020000 //????????????
#define ACS_PARAM_BLACK_LIST_PICTURE           0x00040000 //??????????????
#define ACS_PARAM_ID_BLACK_LIST                0x00080000 //?赤﹞??∟??????????
#define ACS_PARAM_EXAM_INFO                    0x00100000 //????????????
#define ACS_PARAM_EXAMINEE_INFO                0x00200000 //???迆????????
#define ACS_PARAM_FAILED_FACE_INFO             0x00400000 //?????豕㊣??????“???∫∼?????

typedef struct tagNET_DVR_ACS_PARAM_TYPE
{
	DWORD dwSize;
	DWORD dwParamType; //?????角????∼???㊣赤??    
					   //#define ACS_PARAM_DOOR_STATUS_WEEK_PLAN        0x00000001 //??℅?????????????
					   //#define ACS_PARAM_VERIFY_WEEK_PALN             0x00000002 //???“?‾??????????
					   //#define ACS_PARAM_CARD_RIGHT_WEEK_PLAN         0x00000004 //?“?“????????????
					   //#define ACS_PARAM_DOOR_STATUS_HOLIDAY_PLAN     0x00000008 //??℅???????????????
					   //#define ACS_PARAM_VERIFY_HOLIDAY_PALN          0x00000010 //???“?‾????????????
					   //#define ACS_PARAM_CARD_RIGHT_HOLIDAY_PLAN      0x00000020 //?“?“??????????????
					   //#define ACS_PARAM_DOOR_STATUS_HOLIDAY_GROUP    0x00000040 //??℅???????℅谷????
					   //#define ACS_PARAM_VERIFY_HOLIDAY_GROUP         0x00000080 //???“?‾?谷?∟﹞???????℅谷????
					   //#define ACS_PARAM_CARD_RIGHT_HOLIDAY_GROUP     0x00000100 //?“?“??????℅谷????
					   //#define ACS_PARAM_DOOR_STATUS_PLAN_TEMPLATE    0x00000200 //??℅?????????∼?????
					   //#define ACS_PARAM_VERIFY_PALN_TEMPLATE         0x00000400 //???“?‾?谷?∟﹞?????????∼?????
					   //#define ACS_PARAM_CARD_RIGHT_PALN_TEMPLATE     0x00000800 //?“?“????????∼?????
					   //#define ACS_PARAM_CARD                         0x00001000 //?“????
					   //#define ACS_PARAM_GROUP                        0x00002000 //??℅谷????
					   //#define ACS_PARAM_ANTI_SNEAK_CFG               0x00004000 //﹞??㊣??????
					   //#define ACS_PAPAM_EVENT_CARD_LINKAGE          0x00008000 //?????∼?“??????????
					   //#define ACS_PAPAM_CARD_PASSWD_CFG             0x00010000 //????????????????
					   //#define ACS_PARAM_PERSON_STATISTICS_CFG       0x00020000 //????????????
					   //#define ACS_PARAM_BLACK_LIST_PICTURE          0x00040000 //??????????????
					   //#define ACS_PARAM_ID_BLACK_LIST               0x00080000 //?赤﹞??∟??????????
					   //#define ACS_PARAM_EXAM_INFO                   0x00100000 //????????????
					   //#define ACS_PARAM_EXAMINEE_INFO               0x00200000 //???迆????????
					   //#define ACS_PARAM_FAILED_FACE_INFO             0x00400000 //?????豕㊣??????“???∫∼?????
	WORD wLocalControllerID; //?????????‾?辰??[1,64],0?迆㊣赤?????‾?迆
	BYTE byRes[30];
}NET_DVR_ACS_PARAM_TYPE, *LPNET_DVR_ACS_PARAM_TYPE;

typedef struct tagNET_DVR_VIDEO_INTERCOM_IOIN_CFG
{
	DWORD   dwSize;                 // ?芍?????車??
	BYTE    byIOUseType;     //??????0-??????1-????∼?????2-??℅?????0xff-℅??“??
	BYTE    byRes[63];              // ㊣???℅???
}NET_DVR_VIDEO_INTERCOM_IOIN_CFG, *LPNET_DVR_VIDEO_INTERCOM_IOIN_CFG;

typedef struct tagNET_DVR_VIDEO_INTERCOM_IOOUT_CFG
{
	DWORD   dwSize;                 // ?芍?????車??
	BYTE    byIOUseType;     //??????0-??????1-??????0xff-℅??“??
	BYTE    byRes[63];              // ㊣???℅???
}NET_DVR_VIDEO_INTERCOM_IOOUT_CFG, *LPNET_DVR_VIDEO_INTERCOM_IOOUT_CFG;

typedef struct tagNET_DVR_ELEVATORCONTROL_CFG
{
	DWORD   dwSize;                 // ?芍?????車??
	BYTE    byEnable;   //??﹞???????????0-﹞???1-??
	BYTE    byRes1;     //㊣???
	BYTE    byInterfaceType; //?????角????0-????1-RS485,2-????
	BYTE    byRS485Protocol; //RS485???谷?角????0-??????1-??????0xff-℅??“?????㊣byInterfaceType??????1?㊣???∫
	BYTE    byNetworkType;  //???????谷?角????0-??????1-??????0xff-℅??“?????㊣byInterfaceType??????2?㊣???∫
	BYTE    byRes[63];              // ㊣???℅???
}NET_DVR_ELEVATORCONTROL_CFG, *LPNET_DVR_ELEVATORCONTROL_CFG;

typedef struct tagNET_DVR_ELEVATORCONTROL_CFG_V40
{
	DWORD   dwSize;                 // ?芍?????車??
	BYTE    byEnable;               //??﹞???????????0-﹞???1-??
	BYTE    byRes1;                 //㊣???
	BYTE    byInterfaceType;        //?????角????0-????1-RS485,2-????
	BYTE    byRS485Protocol;        //RS485???谷?角????0-??????1-??????0xff-℅??“?????㊣byInterfaceType??????1?㊣???∫
	BYTE    byNetworkType;          //???????谷?角????0-??????1-??????0xff-℅??“?????㊣byInterfaceType??????2?㊣???∫
	BYTE    byRes2;                 //㊣???
	WORD    wServerPort;            //????﹞????‾?????????㊣???“???谷?角????1-???? ?㊣???∫
	NET_DVR_IPADDR    struServerIP; //????﹞????‾IP???㊣???“???谷?角????1-???? ?㊣???∫
	BYTE    byRes[256];              // ㊣???℅???
}NET_DVR_ELEVATORCONTROL_CFG_V40, *LPNET_DVR_ELEVATORCONTROL_CFG_V40;

typedef struct tagNET_DVR_ELEVATORCONTROL_CFG_V50
{
	DWORD   dwSize;                 //?芍?????車??
	BYTE    byEnable;                 //??﹞???????????0-﹞???1-??
	BYTE    byNegativeFloor;           //??????????
	BYTE    byInterfaceType;           //?????角????0-????1-RS485,2-????
	BYTE    byRS485Protocol;        //RS485???谷?角????0-??????1-??????0xff-℅??“?????㊣byInterfaceType??????1?㊣???∫
	BYTE    byNetworkType;         //???????谷?角????0-??????1-??????0xff-℅??“?????㊣byInterfaceType??????2?㊣???∫
	BYTE    byElevatorControlType;      //?????‾?角????0-???∫??1-DS-K2201??2-DS-K2210
	WORD    wServerPort;            //????﹞????‾?????????㊣???“???谷?角????1-???? ?㊣???∫
	NET_DVR_IPADDR    struServerIP; //????﹞????‾IP???㊣???“???谷?角????1-???? ?㊣???∫
	BYTE    sUserName[NET_DVR_LOGIN_USERNAME_MAX_LEN]; //???∫?????㊣???“???谷?角????1-???? ?㊣???∫?“?????豕??????????????
	BYTE    sPassword[NET_DVR_LOGIN_PASSWD_MAX_LEN]; //???????㊣???“???谷?角????1-???? ?㊣???∫?“?????豕??????????????
	BYTE    byRes[256];              //㊣???℅???
}NET_DVR_ELEVATORCONTROL_CFG_V50, *LPNET_DVR_ELEVATORCONTROL_CFG_V50;

typedef struct tagNET_DVR_ROOM_CUSTOM_COND
{
	DWORD   dwSize;
	DWORD   dwRoomNumber; //﹞????????“?豕???㊣???∫??
	BYTE    byRes[128];
}NET_DVR_ROOM_CUSTOM_COND, *LPNET_DVR_ROOM_CUSTOM_COND;

typedef struct tagNET_DVR_ROOM_CUSTOM_CFG
{
	DWORD   dwSize;
	DWORD   dwFormerRoomNo; //??﹞?????
	DWORD   dwCustomRoomNo; //℅??“???辰??
	BYTE    byRes[128];
}NET_DVR_ROOM_CUSTOM_CFG, *LPNET_DVR_ROOM_CUSTOM_CFG;

typedef struct tagNET_DVR_ROOM_CUSTOM_STATUS
{
	DWORD   dwSize;
	DWORD   dwFormerRoomNo; //??﹞?????
	BYTE    byStatus;  //??﹞?℅?????0-???∫??1-?∫∼???2-???赤????3-????
	BYTE    byRes[127];
}NET_DVR_ROOM_CUSTOM_STATUS, *LPNET_DVR_ROOM_CUSTOM_STATUS;

typedef struct tagNET_DVR_VIDEOINTERCOM_STREAM
{
	DWORD dwSize;
	BYTE  byVisDevID[MAX_NAMELEN]; // ?????????豕㊣?㊣角???????∟?????豕㊣??角????IPC?㊣??????0
	BYTE  byDeviceName[NAME_LEN];  //?豕㊣?????
	BYTE  bySourceType;            //???????角????0????????1-IPC??2-DVR/DVS/NVR??3-?????迆??4-?∫???迆??5-?????﹞???迆
	BYTE  byRes[255];              //㊣???
}NET_DVR_VIDEOINTERCOM_STREAM, LPNET_DVR_VIDEOINTERCOM_STREAM;

#define UNLOCK_PASSWORD_LEN                        8 //?????????∟??
#define LOCAL_CONTROLLER_NAME_LEN                  32//?????????‾?????∟??
typedef struct tagNET_DVR_DOOR_CFG
{
	DWORD dwSize;
	BYTE byDoorName[DOOR_NAME_LEN]; //??????
	BYTE byMagneticType; //?????角????0-??㊣???1-????
	BYTE byOpenButtonType; //????∼????角????0-??㊣???1-????
	BYTE byOpenDuration; //?????????㊣????1-255s?“?????????‾??℅‾?㊣????
	BYTE byDisabledOpenDuration; //???????“?????????㊣????1-255s
	BYTE byMagneticAlarmTimeout; //?????足?????㊣㊣“???㊣????0-255s??0㊣赤????㊣“??
	BYTE byEnableDoorLock; //??﹞?????㊣?????????0-﹞???1-??
	BYTE byEnableLeaderCard; //??﹞??????℅?“??????????0-﹞???1-??
	BYTE byLeaderCardMode; //?℅?“??????0-???????℅?“??????1-?℅?“??????????2-?℅?“???“?????“????????℅??????辰byEnableLeaderCard???∫??
	DWORD dwLeaderCardOpenDuration; //?℅?“?????????㊣????1-1440min
	BYTE byStressPassword[STRESS_PASSWORD_LEN]; //????????
	BYTE bySuperPassword[SUPER_PASSWORD_LEN]; //????????
	BYTE byUnlockPassword[UNLOCK_PASSWORD_LEN];         //??????NET_DVR_LOCAL_CONTROLLER_STATUS
	BYTE byUseLocalController; //????????﹞????????????????‾????0-﹞???1-??
	BYTE byRes1;
	WORD wLocalControllerID; //???????????????‾?辰????1-64,0?迆㊣赤??℅??芍
	WORD wLocalControllerDoorNumber; //???????????????‾????㊣角????1-4,0?迆㊣赤??℅??芍
	WORD wLocalControllerStatus; //???????????????‾????℅?????0-??????1-??????????2-?﹞?﹞1????RS485????1??3-?﹞?﹞1????RS485????2??4-?﹞?﹞2????RS485????1??5-?﹞?﹞2????RS485????2??6-?﹞?﹞3????RS485????1??7-?﹞?﹞3????RS485????2??8-?﹞?﹞4????RS485????1??9-?﹞?﹞4????RS485????2?“??????
	BYTE byLockInputCheck; //??﹞??????????????足??(1℅?????0????????1????????????????)
	BYTE byLockInputType; //?????????角??(1℅?????0??㊣???1????????????㊣?)
	BYTE byDoorTerminalMode; //???角????℅??∟℅‾????(1℅?????0﹞???﹞?????1???“??????﹞???﹞???)
	BYTE byOpenButton; //??﹞?????????∼???(1℅?????0????1﹞?????????)
	BYTE byLadderControlDelayTime; //????﹞????????㊣????1-255min
	BYTE byRes2[43];
}NET_DVR_DOOR_CFG, *LPNET_DVR_DOOR_CFG;

typedef struct tagNET_DVR_VIS_DEV_INFO
{
	DWORD   dwSize;
	BYTE    szDevNumber[MAX_DEV_NUMBER_LEN];    //?豕㊣?㊣角??
	BYTE    byRes[64];                          //㊣???
}NET_DVR_VIS_DEV_INFO, *LPNET_DVR_VIS_DEV_INFO;

typedef struct tagNET_DVR_VIS_REGISTER_INFO
{
	DWORD       dwSize;
	DWORD       dwID;                                  //ID
	BYTE        szDevNumber[MAX_DEV_NUMBER_LEN];    //?豕㊣?㊣角??
	BYTE        byMACAddr[MACADDR_LEN];             //mac???﹞
	BYTE        byRes1[2];                           //㊣???
	BYTE        sSerialNumber[SERIALNO_LEN];        //?豕㊣??辰????
	NET_DVR_IPADDR   struDevIP;                     //?豕㊣?IP???﹞
	NET_DVR_TIME_EX struRegisterTime;                 //℅??芍?㊣??
	BYTE        byRegisterType;                     //℅??芍?角????0-㊣?????1-?????迆??2-???赤?迆??3-?????迆??4-?∫???迆??5-㊣????????迆??6-?????﹞???迆??7-8700???∫????8-4200???∫??
	BYTE        byRes[127];                         //㊣???
}NET_DVR_VIS_REGISTER_INFO, *LPNET_DVR_VIS_REGISTER_INFO;

typedef struct tagNET_DVR_CALLER_INFO
{
	DWORD dwSize;          //?芍?????車??
	WORD   wBuildingNo;    //????
	SHORT   wFloorNo;    //????
	BYTE   byZoneNo;        //????
	BYTE   byUnitNo;    //??????
	BYTE   byDevNo;    //?豕㊣?㊣角??
	BYTE    byDevType;   //?豕㊣??角????1-?????迆??2-???赤?迆??3-?????迆??4-?∫???迆??5-㊣????????迆??6-?????﹞???迆??7-8700???∫????8-4200???∫????9-APP, 10- ?????迆??11-VOIP???∫????12-?角????IPC?豕㊣?
	BYTE    byLockNum;//??????0-∼???????????℅?????????-?迆㊣赤????????????
	BYTE   byHighDevNo;    // ?豕㊣?㊣角????8??,?????∫??1-9999??﹞??∫
	BYTE   byRes1[2];     // ㊣???
	BYTE   byVoipNo[16];   // VOIP???∫?????? byDevType????11?㊣???∫
	BYTE   byRes[80];     // ㊣???
}NET_DVR_CALLER_INFO, *LPNET_DVR_CALLER_INFO;

typedef struct tagNET_DVR_CALL_STATUS
{
	DWORD dwSize;          //?芍?????車??
	BYTE   byCallStatus; //?????“?∼℅?????1-????????2-?足????3-?????“?∼
	BYTE   byRes[127];
}NET_DVR_CALL_STATUS, *LPNET_DVR_CALL_STATUS;

#define MAX_SERVER_DEVICE_NUMBER                  16  //℅??車?豕㊣?????

typedef struct tagNET_DVR_SERVER_DEVICE_CFG
{
	BYTE    byDeviceName[NAME_LEN];   //?豕㊣?????
	BYTE       byDeviceType; ////?豕㊣??角????1-?????迆??2-???赤?迆??3-?????迆
	BYTE       byDeviceID; //?????迆㊣角??
	BYTE    byLockNum; //??????0-∼???????????℅?????????-?迆㊣赤????????????
	BYTE    byRes[5]; 	   //㊣???
}NET_DVR_SERVER_DEVICE_CFG, *LPNET_DVR_SERVER_DEVICE_CFG;

typedef struct tagNET_DVR_SERVER_DEVICE_INFO
{
	DWORD   dwSize;  //?芍?????車??
	DWORD     dwDeviceNum; //?豕㊣???
	NET_DVR_SERVER_DEVICE_CFG    struDeviceCfg[MAX_SERVER_DEVICE_NUMBER];   //?豕㊣?????
	BYTE    byRes[200];        //㊣???
}NET_DVR_SERVER_DEVICE_INFO, *LPNET_DVR_SERVER_DEVICE_INFO;

typedef struct tagNET_DVR_VIDEO_CALL_PARAM
{
	DWORD    dwSize;
	DWORD   dwCmdType;      //?????角??  0-???車??????1-????㊣?????????2-????㊣??????? 3-????㊣??????????? 4-㊣????足?????㊣ 5-?芍??㊣????“?∼??6-?豕㊣??????“?∼????7-???∫???????“?∼????8?????迆??????
	WORD wPeriod;  //????, ﹞??∫[0,9]
	WORD wBuildingNumber; //????
	WORD wUnitNumber;  //??????
	SHORT wFloorNumber;  //????
	WORD  wRoomNumber;    //﹞?????
	WORD  wDevIndex; //?豕㊣?㊣角??
	BYTE    byUnitType; //?豕㊣??角????1-?????迆??2-???赤?迆??3-?????迆??4-?∫???迆??5-㊣????????迆??6-?????﹞???迆??7-8700???∫????8-4200???∫????9-APP
	BYTE    byRes[115];     //㊣???
}NET_DVR_VIDEO_CALL_PARAM, *LPNET_DVR_VIDEO_CALL_PARAM;

#define MAX_SCREEN_ADDRESS_LEN 16 //???‾??℅??車?∟??
#define MAX_DAY_TIME_POINT 8   //???足℅??車?㊣????????
#define MAX_TIME_POINT     16  //???那℅??車?㊣????????

typedef struct tagNET_DVR_DEV_IP_INFO
{
	BYTE byUserName[NAME_LEN]; //???∫??
	BYTE byPassWord[PASSWD_LEN]; //????
	NET_DVR_IPADDR struIPAddr; //IP???﹞
	WORD wPort; //??????
	BYTE byRes[24];
}NET_DVR_DEV_IP_INFO, *LPNET_DVR_DEV_IP_INFO;

typedef union tagNET_DVR_SCREEN_BASE_INFO
{
	BYTE byScreenAddress[MAX_SCREEN_ADDRESS_LEN]; //???????‾?????豕㊣??赤??﹞?????0?㊣???∫
	NET_DVR_DEV_IP_INFO struIPInfo; //????ip???﹞????
	BYTE byRes[100];
}NET_DVR_SCREEN_BASE_INFO, *LPNET_DVR_SCREEN_BASE_INFO;

typedef struct tagNET_DVR_SCREEN_INDEX_CFG
{
	DWORD dwSize;
	BYTE byEnbale; //??????0-????????1-????
	BYTE byDevAddType; //?豕㊣??赤??﹞?????0-∼????‾??(﹞????‾???????????????“??)??1-∼?IP???﹞(﹞????‾???????????????“??)
	BYTE byRes1[2];
	NET_DVR_SCREEN_BASE_INFO struScreenBaseInfo; //?????豕㊣??迄㊣?????
	BYTE byRes[32];
}NET_DVR_SCREEN_INDEX_CFG, *LPNET_DVR_SCREEN_INDEX_CFG;

//?????????‾????
typedef struct tagNET_DVR_SIMULATE_REMOTE_CTRL
{
	BYTE        byControlType;    //1-????????2-????????3-????????4-??????5-?﹞?“??6-????7-????8-℅車??9-??,  10-INFO, 11-﹞?????????,12-??℅?∼??邦
	BYTE        byControlParam; //??℅‾????????℅‾?角????12?㊣??㊣赤??∼??邦??(0-9)????????℅‾?㊣?????????∫
	BYTE        byRes[14];
}NET_DVR_SIMULATE_REMOTE_CTRL, *LPNET_DVR_SIMULATE_REMOTE_CTRL;

//????????????
typedef struct tagNET_DVR_SCREEN_WALL_CTRL
{
	BYTE byEnable; //℅?????????0-????㊣???1-??????
	BYTE byRes[15];
}NET_DVR_SCREEN_WALL_CTRL, *LPNET_DVR_SCREEN_WALL_CTRL;

//???辰﹞??車????????
typedef struct tagNET_DVR_AREA_ZOOM_CFG
{
	BYTE byCmd;    //???辰﹞??車??????????1-﹞??車??2-????
	BYTE byRes[3];
	NET_DVR_RECTCFG struArea; //?豕??﹞??車?????辰????1920*1920℅‾??????℅??車?????????㊣?????????∫
}NET_DVR_AREA_ZOOM_CFG, *LPNET_DVR_AREA_ZOOM_CFG;

typedef  union tagNET_DVR_SCREEN_CONTROL_PARAM
{
	NET_DVR_INPUT_INTERFACE_CTRL    struInputCtrl;
	NET_DVR_DISPLAY_COLOR_CTRL         struDisplayCtrl;
	NET_DVR_DISPLAY_POSITION_CTRL     struPositionCtrl;
	NET_DVR_SIMULATE_REMOTE_CTRL struSimulateRemoteCrtl; //????????∼??邦
	NET_DVR_SCREEN_WALL_CTRL struScreenWallCtrl; //????????????  
	NET_DVR_AREA_ZOOM_CFG struZoomArea;  //???辰﹞??車????????
	BYTE        byRes[16];
}NET_DVR_SCREEN_CONTROL_PARAM, *LPNET_DVR_SCREEN_CONTROL_PARAM;

typedef struct tagNET_DVR_SCREEN_CONTROL
{
	DWORD     dwSize;
	DWORD      dwCommand;      /* ????﹞?﹞“ 1-?? 2-?? 3-?????????????? 4-???????????????? 5-????????????????*/
	BYTE       byProtocol;      //???????谷?角??,1:LCD-S1,2:LCD-S2
	BYTE    byRes1[3];
	NET_DVR_SCREEN_CONTROL_PARAM    struControlParam;
	BYTE       byRes2[52];
}NET_DVR_SCREEN_CONTROL, *LPNET_DVR_SCREEN_CONTROL;

typedef struct tagNET_DVR_SCREEN_CONTROL_V41
{
	DWORD   dwSize;
	BYTE    bySerialNo;        //??????
	BYTE    byRes[2];
	BYTE       byProtocol;    // ???????谷?角?? 1-LCD-S1,2-LCD-S2,3-LCD-L1,4-LCD-DLP,5-LCD-S3,6-LCD-D20??7-LCD-L2,8-LCD-Z1??
							  //9-LCD-D20/D,10-LCD-D20/S,11-LCD-D20/P,12-LCD-D20/T,13-LCD-D20/F,14-LCD-D20/DF,15-LCD-D20/FS,
							  //16-LCD-D20/FP,17-LCD-D20/FT,18-LCD-D5022,19-LCD-D5032,20-LCD-D5042+,21-LCD-D20/Z  0xff-???∫???????∟??∼車?“?????谷?角?? 
	DWORD      dwCommand;      /* ????﹞?﹞“ 1-?? 2-?? 3-?????????????? 4-???????????????? 5-??????????????????6-????????∼??邦,7-????????℅???,
							   8-???????????‾???“???邦?????????辰????℅?㊣那?豕???“0,0?????赤???迄?豕??0xffffffff??, 9-????????,10-??????????????????11-????IP?“???邦?????????辰????℅?㊣那?豕???“0,0?????赤???迄?豕??0xffffffff??,12-????USB???? 13-???辰﹞??車????*/
	NET_DVR_SCREEN_CONTROL_PARAM    struControlParam;
	BYTE    byWallNo;        // ????????
	BYTE    byDevNo;         //?豕㊣???
	BYTE    bySubboardNo;    //℅?∼???
	BYTE    byRes1;
	NET_DVR_RECTCFG_EX struRect;//?迄??℅?㊣那???????????迄℅?℅?㊣那
	BYTE   byRes2[28];
}NET_DVR_SCREEN_CONTROL_V41, *LPNET_DVR_SCREEN_CONTROL_V41;

typedef struct tagNET_DVR_MSC_SPLICE_CFG
{
	DWORD dwSize;
	BYTE bySpliceNo; //????????
	BYTE byWallNo; //????????
	BYTE byEnable; //??﹞???????0-﹞???1-??
	BYTE byRes1[1];
	NET_DVR_RECTCFG_EX struRectCfg; //?豕???????????????辰?????????㊣?辰????????0
	BYTE byRes2[32];
}NET_DVR_MSC_SPLICE_CFG, *LPNET_DVR_MSC_SPLICE_CFG;

typedef struct tagNET_DVR_MSC_SCREEN_INTERFACE_CFG
{
	DWORD dwSize;
	BYTE  byInterfaceType;    //???????‾?????????? INPUT_INTERFACE_TYPE
	BYTE  byNoSignalPic;        //????????????????1-??????2-??????3-LOGO????
	BYTE  byRes[30];
}NET_DVR_MSC_SCREEN_INTERFACE_CFG, *LPNET_DVR_MSC_SCREEN_INTERFACE_CFG;

//㊣???????
typedef struct tagNET_DVR_MSC_SCREEN_BACKLIGHT_CFG
{
	DWORD dwSize;
	BYTE byBacklight; //㊣?????0-100
	BYTE byRes[15];
}NET_DVR_MSC_SCREEN_BACKLIGHT_CFG, *LPNET_DVR_MSC_SCREEN_BACKLIGHT_CFG;

//??????????
typedef struct tagNET_DVR_MSC_SCREEN_PIP_CFG
{
	DWORD dwSize;
	BYTE    byEnable;    //??﹞??????????? 0-?????? 1-????
	BYTE    bySubWindowSource;    //℅?????????????????????INPUT_INTERFACE_TYPE
	BYTE    bySubWindowBorderColor;    //℅?????㊣??辰?????? 1-??????2-????
	BYTE    byRes1;
	NET_DVR_RECTCFG_EX  struPosition;    //℅???????????????℅??車????1920*1920
	BYTE    byRes2[16];
}NET_DVR_MSC_SCREEN_PIP_CFG, *LPNET_DVR_MSC_SCREEN_PIP_CFG;

typedef struct tagNET_DVR_SCREEN_WORK_STATE
{
	DWORD dwSize;
	BYTE           byFanStatus;//﹞???℅?????0-????1-??
	BYTE           byFanExceptionStatus;    //﹞????足??℅?????0-???∫????1-??????2-?足??
	BYTE           byRes1[2];
	DWORD          dwWorkingHours; //?????∟℅‾?㊣?∟???????????㊣
	BYTE           byVersion[VERSION_LEN];//?赤??∼?㊣???
	int            iTemperature; //∼??“?????????﹞????????????????????
	BYTE             byTempState;     //∼??“????℅?????0-???∫????1-??????2-?足??
	BYTE           byRes[31];
}NET_DVR_SCREEN_WORK_STATE, *LPNET_DVR_SCREEN_WORK_STATE;

//???迆logo????
typedef struct tagNET_DVR_BOOT_LOGO_CFG
{
	DWORD dwSize;
	BYTE byEnable; //???迆??﹞?????logo,0-????????1-????
	BYTE byRes[31];
}NET_DVR_BOOT_LOGO_CFG, *LPNET_DVR_BOOT_LOGO_CFG;
//????????
typedef struct tagNET_DVR_LCD_AUDIO_CFG
{
	DWORD   dwSize;
	BYTE    byMute; //??﹞???????0-﹞???1-??
	BYTE    byVolume; //?????車????0-100
	char    byBalance; //?迄????????-50-+50
	BYTE    byRes[33];
}NET_DVR_LCD_AUDIO_CFG, *LPNET_DVR_LCD_AUDIO_CFG;

//??????????????
typedef union tagNET_DVR_MSC_SCREEN_PARAM
{
	NET_DVR_MSC_SCREEN_INTERFACE_CFG struInterfaceCfg; //??????????
	NET_DVR_SCREEN_FAN_WORK_MODE_CFG struFanWorkMode; //﹞????∟℅‾????????
	NET_DVR_SCREEN_VGA_CFG struVgaCfg; //VGA????????
	NET_DVR_SCREEN_MENU_CFG struMenuCfg; //????????????
	NET_DVR_VIDEO_OUT_CFG struOutEffectCfg; //?????∫??????
	NET_DVR_COLOR_TEMPERATURE_CFG struColorTemperatureCfg; //????????
	NET_DVR_ADC_CFG struAdcCfg; //ADC????
	NET_DVR_SCREEN_EDGE_CFG struScreenEdgeCfg; //????㊣???????
	NET_DVR_MSC_SCREEN_BACKLIGHT_CFG struBacklight; //㊣???????
	NET_DVR_MSC_SCREEN_PIP_CFG struPicInPicCfg; //??????????
	NET_DVR_DEFOG_LCD struDefog; //???赤????
	NET_DVR_SCREEN_WORK_STATE struWorkState; //?????∟℅‾℅???
	NET_DVR_BOOT_LOGO_CFG struBootLogoCfg; //????????logo????
	NET_DVR_LCD_AUDIO_CFG struAudioCfg; //????????
	BYTE byRes[256];
}NET_DVR_MSC_SCREEN_PARAM, *LPNET_DVR_MSC_SCREEN_PARAM;

typedef struct tagNET_DVR_MSC_SCREEN_PARAM_CFG
{
	DWORD dwSize;
	BYTE byParamType; //?????角????1-????????????2-﹞????∟℅‾??????????3-VGA??????????4-??????????????5-?????∫????????6-??????????7-ADC??????8-????㊣?????????9-㊣?????????10-????????????11-???赤??????12-?????∟℅‾℅????“????????????13-???迆LOGO??﹞?????????  14-????????
	BYTE byRes1[3];
	NET_DVR_MSC_SCREEN_PARAM struParam; //????????
	BYTE byRes2[32];
}NET_DVR_MSC_SCREEN_PARAM_CFG, *LPNET_DVR_MSC_SCREEN_PARAM_CFG;

typedef struct tagNET_DVR_MSC_SCREEN_REMOTE_CFG
{
	DWORD dwSize;
	BYTE byWallNo; //????????
	BYTE byRes1[3];
	NET_DVR_RECTCFG_EX struRectCfg; //???????辰
	NET_DVR_MSC_SCREEN_PARAM_CFG struScreenParam; //??????????????
	BYTE byRes2[32];
}NET_DVR_MSC_SCREEN_REMOTE_CFG, *LPNET_DVR_MSC_SCREEN_REMOTE_CFG;

typedef struct tagNET_DVR_MSC_SCREEN_PARAM_COND
{
	DWORD dwSize;
	BYTE byWallNo; //????????
	BYTE byParamType; //?????角????1-????????????2-﹞????∟℅‾??????????3-VGA??????????4-??????????????5-?????∫????????6-??????????7-ADC??????8-????㊣?????????9-㊣?????????10-????????????11-???赤??????12-?????∟℅‾℅????“????????????13-???迆LOGO??﹞????????? 14-????????
	BYTE byRes1[2];
	NET_DVR_RECTCFG_EX struRectCfg; //???????辰
	BYTE byRes2[32];
}NET_DVR_MSC_SCREEN_PARAM_COND, *LPNET_DVR_MSC_SCREEN_PARAM_COND;

typedef struct tagNET_DVR_SWITCH_DAY_TIME
{
	BYTE byEnable; //??﹞????????㊣????,0-????????1-????
	BYTE bySwitchType; //?????迆?角????0-???迆??1-???迆
	BYTE byRes1[2];
	NET_DVR_DAYTIME struTimePoint; //?????迆?㊣????
	BYTE byRes2[8];
}NET_DVR_SWITCH_DAY_TIME, *LPNET_DVR_SWITCH_DAY_TIME;

typedef struct tagNET_DVR_SWITCH_TIME_POINT
{
	BYTE byEnable; //??﹞????????㊣????,0-????????1-????
	BYTE bySwitchType; //?????迆?角????0-???迆??1-???迆
	BYTE byRes1[2];
	NET_DVR_SYSTEM_TIME struTimePoint; //?????迆?㊣????
	BYTE byRes2[16];
}NET_DVR_SWITCH_TIME_POINT, *LPNET_DVR_SWITCH_TIME_POINT;

typedef struct tagNET_DVR_TIME_SWITCH_CFG
{
	DWORD dwSize;
	NET_DVR_SWITCH_DAY_TIME struSwitchDayTime[MAX_DAYS][MAX_DAY_TIME_POINT]; //???????迆????
	NET_DVR_SWITCH_TIME_POINT struSwitchTimePoint[MAX_TIME_POINT]; //∼??㊣?????????迆????
	BYTE byRes[64];
}NET_DVR_TIME_SWITCH_CFG, *LPNET_DVR_TIME_SWITCH_CFG;

typedef struct tagNET_DVR_VIDEO_WALL_AREA
{
	DWORD dwSize;
	BYTE byWallNo; //????????
	BYTE byRes1[3];
	NET_DVR_RECTCFG_EX struRect; //????﹞??∫
	BYTE byRes2[32];
}NET_DVR_VIDEO_WALL_AREA, *LPNET_DVR_VIDEO_WALL_AREA;

typedef struct tagNET_DVR_DELAY_TIME
{
	DWORD dwSize;
	DWORD dwDelayTime; //???㊣?㊣????0-3000????????ms
	BYTE byRes[32];
}NET_DVR_DELAY_TIME, *LPNET_DVR_DELAY_TIME;

//????㊣那?“?角??
typedef enum _BV_CALIBRATION_TYPE_ENUM_
{
	ENUM_BV_CALIBRATION_NONE = 0, //??㊣那?“
	ENUM_BV_CALIBRATION_DIRECT = 1, //?????㊣??㊣那?“
	ENUM_BV_CALIBRATION_SAMPLE = 2, //?????迄㊣?㊣那?“
} BV_CALIBRATION_TYPE_ENUM;


//?迄㊣?㊣那?“??
typedef struct tagNET_DVR_BV_SAMPLE_CALIB_POINT
{
	BYTE  byCalibPtID;   //㊣那?“??ID??﹞??∫[1,5]??㊣赤????????????㊣那?“?????????辰??
	BYTE  byRes1[3];     //㊣???
	NET_VCA_POINT struPoint;  //㊣那?“??℅?㊣那
	BYTE  byRes2[16];    //㊣???
}NET_DVR_BV_SAMPLE_CALIB_POINT, *LPET_DVR_BV_SAMPLE_CALIB_POINT;

//?????迄㊣?㊣那?“????????
typedef struct tagNET_DVR_BV_SAMPLE_CALIB_BEGIN_PARAM
{
	DWORD  dwCameraHeight;  //?????迆??????????cm
	DWORD  dwHumanHeight;  //?????赤????????cm
	BYTE    byRes[248];      //㊣???
}NET_DVR_BV_SAMPLE_CALIB_BEGIN_PARAM, *LPNET_DVR_BV_SAMPLE_CALIB_BEGIN_PARAM;

//?豕???迄㊣?㊣那?“????????
typedef struct tagNET_DVR_BV_SAMPLE_CALIB_SET_PARAM
{
	NET_DVR_BV_SAMPLE_CALIB_POINT struCalibPoint; //㊣那?“???????㊣???㊣㊣????㊣????℅????????????????“???????辰???㊣??????㊣赤?????車????????????????
	BYTE byRes[228]; //㊣???
}NET_DVR_BV_SAMPLE_CALIB_SET_PARAM, *LPNET_DVR_BV_SAMPLE_CALIB_SET_PARAM;

//?芍???迄㊣?㊣那?“????????
typedef struct tagNET_DVR_BV_SAMPLE_CALIB_END_PARAM
{
	BYTE byRes[256]; //㊣???
}NET_DVR_BV_SAMPLE_CALIB_END_PARAM, *LPNET_DVR_BV_SAMPLE_CALIB_END_PARAM;

//?迄㊣?㊣那?“??????????????
typedef union tagNET_DVR_BV_SAMPLE_CALIB_PARAM_UNION
{
	BYTE byRes[256]; //㊣???
	NET_DVR_BV_SAMPLE_CALIB_BEGIN_PARAM struCalibBegin; //????㊣那?“????????
	NET_DVR_BV_SAMPLE_CALIB_SET_PARAM struCalibSet; //?豕??㊣那?“????????
	NET_DVR_BV_SAMPLE_CALIB_END_PARAM struCalibEnd; //?芍??㊣那?“????????
}NET_DVR_BV_SAMPLE_CALIB_PARAM_UNION, *LPNET_DVR_BV_SAMPLE_CALIB_PARAM_UNION;

//?迄㊣?㊣那?“?邦??????
typedef enum _BV_SAMPLE_CALIB_CMD_ENUM
{
	ENUM_BV_SAMPLE_CALIB_BEGIN = 1,   //????㊣那?“
	ENUM_BV_SAMPLE_CALIB_SETTING = 2,   //?豕??????
	ENUM_BV_SAMPLE_CALIB_END = 3    //?芍??㊣那?“
}BV_SAMPLE_CALIB_CMD_ENUM;

//?迄㊣?㊣那?“?芍????
typedef struct tagNET_DVR_BV_SAMPLE_CALIBRATION
{
	DWORD   dwSize;     //?芍?????車??
	DWORD   dwChannel;  //?“????
	BYTE    byCommand; //㊣那?“?邦????????BV_SAMPLE_CALIB_CMD _ENUM
	BYTE    byRes1[3];    //㊣???
	NET_DVR_BV_SAMPLE_CALIB_PARAM_UNION uCalibParam; //㊣那?“????????????????????℅???byCommand
	BYTE    byRes2[256];  //㊣???
}NET_DVR_BV_SAMPLE_CALIBRATION, *LPNET_DVR_BV_SAMPLE_CALIBRATION;


//?????迄㊣?㊣那?“????
typedef struct tagNET_DVR_BV_SAMPLE_CALIB_CFG
{
	DWORD  dwSize;             //?芍?????車??
	DWORD  dwCameraHeight;    //?????迆??????????cm
	float  fPitchAngle;   //?????迆????????[0??, 60??],
	float  fInclineAngle; //?????迆???㊣????[-20??,20??]
	NET_DVR_BV_SAMPLE_CALIB_POINT struCalibPoint[MAX_SAMPLE_NUM]; //㊣那?“??℅谷
	NET_DVR_BV_SAMPLE_CALIB_POINT struCalibPointEx[MAX_SAMPLE_NUM_EX/*7*/]; //㊣那?“??℅谷????
	BYTE  byRes[60]; //㊣???
}NET_DVR_BV_SAMPLE_CALIB_CFG, *LPNET_DVR_BV_SAMPLE_CALIB_CFG;

//?????????????????芍????
typedef struct tagNET_DVR_BINOC_RECTIFY_PARAM
{
	float   fCamInternalMatrix[3][3];  //?角?迆???????車??∼邦?“???角?∼?‾??℅?㊣那
	float   fDistCoeffs[8];            //???﹞??㊣?????
	float   fRotateMatrix[3][3];       //?????車????℅????車
	float   fProjectMatrix[3][4];      //?????車?????∼???車
	BYTE    byRes[64];              //㊣???
}NET_DVR_BINOC_RECTIFY_PARAM, *LPNET_DVR_BINOC_RECTIFY_PARAM;

//℅車???角?迆????????
typedef struct _tagNET_DVR_BV_CORRECT_PARAM
{
	DWORD  dwSize;                       //?芍???車??
	float      fReprojectMatrix[4][4];   //?????∼???車
	NET_DVR_BINOC_RECTIFY_PARAM  struLCamParam; //℅車?角?迆????????
	NET_DVR_BINOC_RECTIFY_PARAM  struRCamParam; //???角?迆????????
	BYTE    byLensType;             //???﹞???角?角????0-????,1-8mm,2-12mm,3-16mm,4-25mm,5-35mm,6-50mm,7-4mm,8-6mm,9-2.0mm,10-2.8mm
	BYTE    byRes1[3]; //㊣???
					   /*RotateMatrix ??????㊣那?“?車℅車?角?迆?角???????角?迆????℅????車,
					   TransMatrix?????????車,
					   RotateMatrix??TransMatrix?????????豕??????℅車?角?迆?角???????角?迆??????????*/
	float   fRotateMatrix[3][3]; //??℅????車
	float   fTransMatrix[3]; //???????車
	DWORD dwOriImgWidth; //????㊣那?“???????赤?“??????1920*1080﹞?㊣????????????辰??1920??
	DWORD dwOriImgHeight; //????㊣那?“?????????“??????1920*1080﹞?㊣????????????辰??1080??
	BYTE    byRes[196]; //㊣???
} NET_DVR_BV_CORRECT_PARAM, *LPNET_DVR_BV_CORRECT_PARAM;

//?????????角??
typedef struct tagNET_DVR_OUTPUT_VIDEO_TYPE
{
	DWORD  dwSize;     //?芍???車??
	BYTE   byType;     //?????????角????1-????????2-??????
	BYTE   byRes[63];  //㊣???
}NET_DVR_OUTPUT_VIDEO_TYPE, *LPNET_DVR_OUTPUT_VIDEO_TYPE;

#define MAX_CHECK_485CHAN        64    //485℅??足?豕㊣??“????????

typedef struct tagNET_DVR_DEVICE_SELF_CHECK_STATE
{
	DWORD        dwSize;
	DWORD        dwRS485Chan[MAX_CHECK_485CHAN];//RS485?“???谷???????????“????????㊣赤???“????????㊣赤????????
	DWORD        dwSensorChan[4];//?????????∫???“??????∼???㊣赤??
	BYTE         byRes[32];      // ㊣???℅??? 
}NET_DVR_DEVICE_SELF_CHECK_STATE, *LPNET_DVR_DEVICE_SELF_CHECK_STATE;

//?豕???那?????????∫??
typedef struct tagNET_DVR_COMPLETE_RESTORE_INFO_
{
	DWORD   dwSize; //?芍?????∟??
	DWORD   dwChannel; //?“????
	BYTE    byRes[64];
}NET_DVR_COMPLETE_RESTORE_INFO, *LPNET_DVR_COMPLETE_RESTORE_INFO;

typedef struct  tagNET_DVR_UPLOAD_PICTURE_INFO
{
	DWORD       dwSize;
	DWORD        dwChannel;   //???????????“????
	BYTE        byPictureType;//????????,0-bmp??1-jpeg??2-PNG 3-SWF 4-GIF 
	BYTE    byRes1[3];
	NET_DVR_TIME_V30 struTime;  //?????迆???㊣??
	char*        sPictureBuffer;//??????????
	DWORD        dwPictureLength;//?????∟??
	DWORD        dwPicMangeNo;  //???????赤??
	BYTE        sPicName[NAME_LEN];  //????????
	BYTE        byRes[92];
}NET_DVR_UPLOAD_PICTURE_INFO, *LPNET_DVR_UPLOAD_PICTURE_INFO;

#define  MAX_UPLOADFILE_URL_LEN      240

typedef struct  tagNET_DVR_UPLOAD_FILE_RET
{
	BYTE  sUrl[MAX_UPLOADFILE_URL_LEN];   //url
	BYTE byRes[260];
} NET_DVR_UPLOAD_FILE_RET, *LPNET_DVR_UPLOAD_FILE_RET;

typedef struct tagNET_DVR_FACE_EXTRA_INFO
{
	NET_VCA_RECT struVcaRect[MAX_FACE_PIC_NUM];  //????℅???℅?㊣那????
	BYTE     byRes[64];
}NET_DVR_FACE_EXTRA_INFO, *LPNET_DVR_FACE_EXTRA_INFO;
typedef union tagNET_DVR_PIC_EXTRA_INFO_UNION
{
	BYTE   byUnionLen[544];   //???????∟??????????????
	NET_DVR_FACE_EXTRA_INFO struFaceExtraInfo;   //?????足??????
}NET_DVR_PIC_EXTRA_INFO_UNION, *LPNET_DVR_PIC_EXTRA_INFO_UNION;

typedef struct    tagNET_DVR_FIND_PICTURE_V40   //?谷???芍???芍????
{
	char    sFileName[PICTURE_NAME_LEN];//??????
	NET_DVR_TIME struTime;//???????㊣??
	DWORD dwFileSize;//???????車??
	char    sCardNum[CARDNUM_LEN_V30];    //?“??
	BYTE   byPlateColor;//?????芍?? VCA_PLATE_COLOR
	BYTE   byVehicleLogo;//?????芍?? VLR_VEHICLE_CLASS
	BYTE   byFileType;  //?????角???? :0?“?㊣℅???1 ?????足??℅??? 2 ㊣“??℅???3  ㊣“?? | ?????足??℅??? 4 ㊣“?? & ?????足??℅???     6 ????℅??? ,9-????????,10- PIR㊣“????11- ????㊣“????12- ????㊣“??,    0xa ?∟???㊣??????0xd ?????足??, 0xe ?????足????0xf ???????辰?足????0x10 ???∼㊣??邦?足??, 0x11-?豕㊣?㊣?????﹞??㊣????, 0x12-?????足??, 0x32-﹞???㊣“??, 0x33-???㊣?車?迆, 0x34-????℅???
	BYTE   byRecogResult;//??㊣??芍???????芍??VTR_RESULT
	char   sLicense[MAX_LICENSE_LEN/*16*/];    //????????
	BYTE   byEventSearchStatus; //????????㊣赤???????谷???芍?????㊣?辰??0-㊣赤???車????????????????1-㊣赤???車????????????????℅???????????∼邦?“℅??車????℅?????0????????
	BYTE   byRes[75];        //  ㊣???℅???
	NET_DVR_PIC_EXTRA_INFO_UNION  uPicExtraInfo; //????????????
}NET_DVR_FIND_PICTURE_V40, *LPNET_DVR_FIND_PICTURE_V40;

typedef struct    tagNET_DVR_FIND_PICTURE_V50   //?谷???芍???芍????
{
	char        sFileName[PICTURE_NAME_LEN];//??????
	NET_DVR_TIME struTime;//???????㊣??
	DWORD    dwFileSize;//???????車??
	char        sCardNum[CARDNUM_LEN_V30];    //?“??
	BYTE   byPlateColor;//?????芍?? VCA_PLATE_COLOR
	BYTE   byVehicleLogo;//?????芍?? VLR_VEHICLE_CLASS
	BYTE   byFileType;  //?????角???? :0?“?㊣℅???1 ?????足??℅??? 2 ㊣“??℅???3  ㊣“?? | ?????足??℅??? 4 ㊣“?? & ?????足??℅???     6 ????℅??? ,9-????????,10- PIR㊣“????11- ????㊣“????12- ????㊣“??,    0xa ?∟???㊣??????0xd ?????足??, 0xe ?????足????0xf ???????辰?足????0x10 ???∼㊣??邦?足??, 0x11-?豕㊣?㊣?????﹞??㊣????, 0x12-?????足??
	BYTE   byRecogResult;//??㊣??芍???????芍??VTR_RESULT
	char   sLicense[MAX_LICENSE_LEN/*16*/];    //????????
	BYTE   byEventSearchStatus; //????????㊣赤???????谷???芍?????㊣?辰??0-㊣赤???車????????????????1-㊣赤???車????????????????℅???????????∼邦?“℅??車????℅?????0????????
	NET_DVR_ADDRESS	struAddr;		//?????迄???????﹞???????????????㊣????
	BYTE   	        byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char     cTimeDifferenceH;   //??UTC???㊣???“???㊣????-12 ... +14
	char     cTimeDifferenceM;   //??UTC???㊣???“﹞???????-30,0, 30, 45
	BYTE            byRes[253];        //  ㊣???℅???
	NET_DVR_PIC_EXTRA_INFO_UNION  uPicExtraInfo; //????????????
}NET_DVR_FIND_PICTURE_V50, *LPNET_DVR_FIND_PICTURE_V50;


typedef struct tagNET_DVR_THUMBNAILS_COND
{
	DWORD  dwSize;             // ?芍?????車?? 
	NET_DVR_STREAM_INFO   struStreamInfo;     //?‾????
	BYTE   bySearchDataType;   // ?谷???????角?? 0-I???????“CVR ???﹞???谷??????1s℅??角28??I??????1-????????
	BYTE   byRes[3];          // ㊣???℅???
	NET_DVR_TIME_V30  struStartTime;      //?谷???????㊣??
	NET_DVR_TIME_V30  struStopTime;       // ?谷???芍???㊣??
	DWORD  dwIntervalTime;  //?????㊣????????????﹞??∫??0~24*60*60?????谷???芍???㊣???????谷???????㊣?????辰??0?????????????∫
	BYTE   byRes1[512];        // ㊣???℅???
}NET_DVR_THUMBNAILS_COND, *LPNET_DVR_THUMBNAILS_COND;

typedef struct    tagNET_DVR_THUMBNAILS_RESULT   //?谷???芍???芍????
{
	BYTE     byResultDataType;      // ?谷???芍???????角??0-I???????“CVR ???﹞???谷??????1s℅??角28??I??????1-?????﹞?????? 2-????????
	BYTE     byIFrameType;          // I???角????0-????????1-???????“㊣????????豕??????﹞????????????豕??℅?????????????
	BYTE     byRes1[2];                // ㊣???℅???
	NET_DVR_TIME_SEARCH struTime;        //?????㊣??
	BYTE     byRes[252];            // ㊣???℅???
	DWORD   dwFileSize;            //?????車??
	char*     pBuffer;                //????????(?????角?????????芍??????NET_DVR_THUMBNAILS_RESULT ??℅??? byResultDataType ???角??)
}NET_DVR_THUMBNAILS_RESULT, *LPNET_DVR_THUMBNAILS_RESULT;

typedef struct tagNET_DVR_REGIONENTRANCE_REGION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;        //?谷??????????﹞??∫[1-100]
							   /*
							   ?足????㊣那?????∫???角?????????“??????
							   0~?迄????㊣那?“㊣赤???????“?足????㊣那???迄????㊣那?????????足????
							   0x01 ~ ????
							   0x02 ~ ????
							   0x04 ~ ????
							   */
	BYTE byDetectionTarget;
	BYTE byRes[62];             //㊣???
}NET_DVR_REGIONENTRANCE_REGION, *LPNET_DVR_REGIONENTRANCE_REGION;

typedef    struct tagNET_DVR_REGION_ENTRANCE_DETECTION
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byEnableHumanMisinfoFilter;// ???????????車㊣“ 0-????????1-????
	BYTE        byEnableVehicleMisinfoFilter;// ???????????車㊣“ 0-????????1-????
	BYTE        byRes1[1];
	NET_DVR_REGIONENTRANCE_REGION    struRegion[MAX_REGION_NUM];
	BYTE        byRes2[128];
}NET_DVR_REGION_ENTRANCE_DETECTION, *LPNET_DVR_REGION_ENTRANCE_DETECTION;

typedef struct tagNET_DVR_SMART_REGION_COND
{
	DWORD dwSize;
	DWORD dwChannel;        //?“???? 
	DWORD dwRegion;         //???辰ID??
}NET_DVR_SMART_REGION_COND, *LPNET_DVR_SMART_REGION_COND;

typedef struct tagNET_DVR_ENTRANCE_REGION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;        //?谷??????????﹞??∫[1-100]
	BYTE byRes[63];             //㊣???
}NET_DVR_ENTRANCE_REGION, *LPNET_DVR_ENTRANCE_REGION;

typedef struct tagNET_DVR_DENSEFOGDETECTION_CFG
{
	DWORD dwSize;
	BYTE    byEnable;//????
	BYTE   bySensitivity;  //?谷??????????﹞??∫[0,100]
	BYTE   byRes[258];
}NET_DVR_DENSEFOGDETECTION_CFG, *LPNET_DVR_DENSEFOGDETECTION_CFG;

typedef    struct tagNET_DVR_EVENT_TRIGGER
{
	DWORD        dwSize;//?芍?????車??
	NET_DVR_HANDLEEXCEPTION_V41 struHandleException;     //?足?????赤﹞???
	DWORD      dwRelRecordChan[MAX_CHANNUM_V40]; //??????﹞??????“????∼???㊣赤????????????????????????㊣那0???????辰??????????????0xffffffff?辰?車?????∫?? 
	NET_DVR_PRESETCHAN_INFO struPresetChanInfo[MAX_CHANNUM_V40]; //???????∟????????
	NET_DVR_CRUISECHAN_INFO struCruiseChanInfo[MAX_CHANNUM_V40]; //?????????????“????????
	NET_DVR_PTZTRACKCHAN_INFO struPtzTrackInfo[MAX_CHANNUM_V40]; //?‾?????“?足?????“??????
	BYTE        byDirection;//??﹞?﹞??辰??0-㊣?????1-??????2-???辰??3-﹞??辰
	BYTE        byRes2[255];
}NET_DVR_EVENT_TRIGGER, *LPNET_DVR_EVENT_TRIGGER;

typedef    struct tagNET_DVR_EVENT_SCHEDULE
{
	DWORD        dwSize;//?芍?????車??
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30]; /*??﹞??㊣??*/
	NET_DVR_SCHEDTIME struHolidayAlarmTime[MAX_TIMESEGMENT_V30]; /*??????﹞??㊣??*/
	BYTE         bySceneID[MAX_DAYS][MAX_TIMESEGMENT_V30];//???∼??,???∼?∫??1~4???∼??0?????∫???????∼??????﹞??㊣?????????㊣??????????????
	BYTE         byRes[72];
}NET_DVR_EVENT_SCHEDULE, *LPNET_DVR_EVENT_SCHEDULE;

typedef struct  tagNET_DVR_ANR_ARMING_HOST
{
	DWORD   dwSize;//sizeof(NET_DVR_ANR_ ARMING_HOST)
	NET_DVR_IPADDR struANRArmingHostIpAddr; //???????????‾?迆IP???﹞
	WORD    wANRAlarmHostPort; //???????????‾?迆??﹞???????
	BYTE     byANRAlarmType;//?????????????角???? 0-SDK??????????????????1-ehome????????????
	BYTE     byConfirmMechanismEnabled;// ??﹞??????﹞???迆??﹞?????﹞???????0-㊣?????1-???????? 2-????
	BYTE     byRes[512];      //㊣???℅???
}NET_DVR_ANR_ARMING_HOST, *LPNET_DVR_ANR_ARMING_HOST;

typedef struct tagNET_DVR_REGIONEXITING_REGION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;        //?谷??????????﹞??∫[1-100]
							   /*
							   ?足????㊣那?????∫???角?????????“??????
							   0~?迄????㊣那?“㊣赤???????“?足????㊣那???迄????㊣那?????????足????
							   0x01 ~ ????
							   0x02 ~ ????
							   0x04 ~ ????
							   */
	BYTE byDetectionTarget;
	BYTE byRes[62];             //㊣???
}NET_DVR_REGIONEXITING_REGION, *LPNET_DVR_REGIONEXITING_REGION;

typedef    struct tagNET_DVR_REGION_EXITING_DETECTION
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byEnableHumanMisinfoFilter;// ???????????車㊣“ 0-????????1-????
	BYTE        byEnableVehicleMisinfoFilter;// ???????????車㊣“ 0-????????1-????
	BYTE        byRes1[1];
	NET_DVR_REGIONEXITING_REGION    struRegion[MAX_REGION_NUM];
	BYTE        byRes2[128];
}NET_DVR_REGION_EXITING_DETECTION, *LPNET_DVR_REGION_EXITING_DETECTION;

typedef struct tagNET_DVR_LOITERING_REGION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;        //?谷??????????﹞??∫[1-100]
	BYTE byTimeThreshold; //?㊣????????﹞??∫[0-10]????????s
	BYTE byRes[62];             //㊣???
}NET_DVR_LOITERING_REGION, *LPNET_DVR_LOITERING_REGION;

typedef    struct tagNET_DVR_LOITERING_DETECTION
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byRes1[3];
	NET_DVR_LOITERING_REGION    struRegion[MAX_REGION_NUM];
	BYTE        byRes2[128];
}NET_DVR_LOITERING_DETECTION, *LPNET_DVR_LOITERING_DETECTION;

typedef struct tagNET_DVR_GROUPDETECTION_REGION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE byObjectOccup; //??㊣???﹞??∫[1-100]
	BYTE bySensitivityLevel; //?谷??????﹞??∫1-100??????65
	BYTE byDurationTime; //?????㊣????﹞??∫1-600????????3??
	BYTE byFilterTime; //?????㊣????﹞??∫1-10﹞????“㊣赤??????﹞?㊣“???車???????㊣??????????﹞?㊣“????
	BYTE byMinTriggerNumber; //℅?????﹞???????﹞??∫2-50????????5??
	BYTE byLinkageTime; //?????辰?迆?足???㊣????﹞??∫5-30????????5???“???迆??﹞??車???????辰?迆℅?????﹞?㊣“?????????車???????㊣??????????????﹞????迆?辰?迆??﹞??????????∫????????????????
	BYTE byRes[58];             //㊣???
}NET_DVR_GROUPDETECTION_REGION, *LPNET_DVR_GROUPDETECTION_REGION;
typedef struct tagNET_DVR_POS_HIDDEN_INFORMATION
{
	char szKeyWord[KEY_WORD_NUM/*3*/][KEY_WORD_LEN/*128*/];
	BYTE    byRes[128];
}NET_DVR_POS_HIDDEN_INFORMATION, *LPNET_DVR_POS_HIDDEN_INFORMATION;

typedef struct tagNET_DVR_HIDDEN_INFORMATION_CFG
{
	DWORD  dwSize;
	BYTE   byFuncType;//0-Pos????
	BYTE   Res1[3];
	NET_DVR_POS_HIDDEN_INFORMATION struPosInfo;
	BYTE    byRes[1024];
}NET_DVR_HIDDEN_INFORMATION_CFG, *LPNET_DVR_HIDDEN_INFORMATION_CFG;

typedef    struct tagNET_DVR_GROUP_DETECTION
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byRes1[3];
	NET_DVR_GROUPDETECTION_REGION    struRegion[MAX_REGION_NUM];
	BYTE        byRes2[128];
}NET_DVR_GROUP_DETECTION, *LPNET_DVR_GROUP_DETECTION;

typedef struct tagNET_DVR_RAPIDMOVE_REGION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;        //?谷??????????﹞??∫[1-100]
							   /*
							   ?足????㊣那?????∫???角?????????“??????
							   0~?迄????㊣那?“㊣赤???????“?足????㊣那???迄????㊣那?????????足????
							   0x01 ~ ????
							   0x02 ~ ????
							   */
	BYTE byDetectionTarget;
	BYTE byRes[62];             //㊣???
}NET_DVR_RAPIDMOVE_REGION, *LPNET_DVR_RAPIDMOVE_REGION;

typedef    struct tagNET_DVR_RAPIDMOVE_DETECTION
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byRes1[3];
	NET_DVR_RAPIDMOVE_REGION    struRegion[MAX_REGION_NUM];
	BYTE        byRes2[128];
}NET_DVR_RAPIDMOVE_DETECTION, *LPNET_DVR_RAPIDMOVE_DETECTION;

typedef struct tagNET_DVR_PARKING_REGION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;        //?谷??????????﹞??∫[1-100]
	BYTE byTimeThreshold; //?㊣????????﹞??∫[0-10]????????s
	BYTE byRes[62];             //㊣???
}NET_DVR_PARKING_REGION, *LPNET_DVR_PARKING_REGION;

typedef    struct tagNET_DVR_PARKING_DETECTION
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byRes1[3];
	NET_DVR_PARKING_REGION    struRegion[MAX_REGION_NUM];
	BYTE        byRes2[128];
}NET_DVR_PARKING_DETECTION, *LPNET_DVR_PARKING_DETECTION;

typedef struct tagNET_DVR_UNATTENDED_BAGGAGE_REGION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;        //?谷??????????﹞??∫[1-100]
	BYTE byTimeThreshold; //?㊣????????﹞??∫[0-10]????????s
	WORD wTimeThreshold;//?㊣????????﹞??∫[5-3600], ??????s
	BYTE byTimeThresholdMode;//(????℅????????????????辰)0-℅???byTimeThreshold?迆?∫??1-℅???wTimeThreshold?迆?∫
	BYTE byRes[59];             //㊣?????
}NET_DVR_UNATTENDED_BAGGAGE_REGION, *LPNET_DVR_UNATTENDED_BAGGAGE_REGION;

typedef    struct tagNET_DVR_UNATTENDED_BAGGAGE_DETECTION
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byRes1[3];
	NET_DVR_UNATTENDED_BAGGAGE_REGION    struRegion[MAX_REGION_NUM];
	BYTE        byRes2[128];
}NET_DVR_UNATTENDED_BAGGAGE_DETECTION, *LPNET_DVR_UNATTENDED_BAGGAGE_DETECTION;

typedef struct tagNET_DVR_ATTENDED_BAGGAGE_REGION
{
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE bySensitivity;        //?谷??????????﹞??∫[1-100]
	BYTE byTimeThreshold; //?㊣????????﹞??∫[0-10]????????s
	WORD wTimeThreshold;//?㊣????????﹞??∫[5-3600], ??????s
	BYTE byTimeThresholdMode;//(????℅????????????????辰)0-℅???byTimeThreshold?迆?∫??1-℅???wTimeThreshold?迆?∫
	BYTE byRes[59];             //㊣???
}NET_DVR_ATTENDED_BAGGAGE_REGION, *LPNET_DVR_ATTENDED_BAGGAGE_REGION;

typedef    struct tagNET_DVR_ATTENDED_BAGGAGE_DETECTION
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byRes1[3];
	NET_DVR_ATTENDED_BAGGAGE_REGION    struRegion[MAX_REGION_NUM];
	BYTE        byRes2[128];
}NET_DVR_ATTENDED_BAGGAGE_DETECTION, *LPNET_DVR_ATTENDED_BAGGAGE_DETECTION;

typedef struct tagNET_DVR_REGION_CLIP_COND
{
	DWORD dwSize;
	DWORD dwChannel;        //?“???? 
	DWORD dwStreamType;     //???‾?角????0- ?‾???‾??1- ℅????‾??2- ???????‾
	BYTE   byRes[8];
}NET_DVR_REGION_CLIP_COND, *LPNET_DVR_REGION_CLIP_COND;

typedef struct tagNET_DVR_REGION_CLIP_CFG
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byRes1[3];
	WORD      wResolutionWidth; //﹞?㊣??????∟
	WORD      wResolutionHeight; //﹞?㊣??????赤
	NET_VCA_POLYGON    struRegion[MAX_REGION_NUM];
	BYTE        byRes2[64];
}NET_DVR_REGION_CLIP_CFG, *LPNET_DVR_REGION_CLIP_CFG;

#define MAX_DIALNUM_LENGTH  32
typedef struct tagNET_DVR_WIRELESSDIAL_CFG
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????????????0-﹞???1- ??
	BYTE       byDialMode; // 0-℅????“Auto????1-?????“Manual????????℅??????????????????豕?????????????????㊣????????????
	BYTE       byNetworkMode; //0-℅?????1-4G??????2-3G??????3-????????2G??4-????????3G??5-????????4G??6-????????
	BYTE        byRes1;
	BYTE       byDialNum[MAX_DIALNUM_LENGTH]; //????????
	BYTE       byUserName[NAME_LEN]; //???∫??
	BYTE       byPassword[NAME_LEN]; //????
	BYTE       byAPNName[NAME_LEN];  //APN
	BYTE       byUIMCardNum[NAME_LEN];  //???迆????
	BYTE       byVerifProtocol;  // 0-℅????“Auto????1-CHAP??2-PAP
	BYTE       byRes2;
	WORD      wMTU; //MTU
	DWORD      dwOffineTime;  //?????㊣????30-65535???????????????????????∫
	BYTE       byNetAPN[NAME_LEN];  //????℅“??APN℅???????
	BYTE       byEnabled4G;  //??﹞?????4G??????0-﹞???1- ??
	BYTE       byEnabledDNS;  //??﹞?????DNS??????0-﹞???1- ??
	BYTE       byRes3[30];
}NET_DVR_WIRELESSDIAL_CFG, *LPNET_DVR_WIRELESSDIAL_CFG;

typedef    struct tagNET_DVR_WIRELESSDIAL_SCHEDULE
{
	DWORD        dwSize;//?芍?????車??
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30]; /*??﹞??㊣??*/
	NET_DVR_SCHEDTIME   struHolidayAlarmTime[MAX_TIMESEGMENT_V30];  //??????﹞??㊣????
	BYTE        byRes[128];
}NET_DVR_WIRELESSDIAL_SCHEDULE, *LPNET_DVR_WIRELESSDIAL_SCHEDULE;

#define MAX_LENGTH_32   32
typedef    struct tagNET_DVR_WIRELESSDIAL_STATUS
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byRealtimeMode[MAX_LENGTH_32]; //???㊣????(CDMA 1x??EVDO??HYBRID??GSM??GPRS??EDGE??WCDMA??HSDPA??HSUPA??HSPA??TDSCDMA??TD-LTE??FDD-LTE)
	BYTE        byUIMStatus[MAX_LENGTH_32]; /*UIM℅???(UNKNOWN-????,VALID-???∫,NOVALID-???∫,ROAM-????,NOEXIST-??????,
											WRONGPINCODE-PIN???赤?車,NONETWORKSERVICE-??????﹞???,
											ONLYSUPPORTEMERGENCYCALL-???????∫?????㊣????)*/
	DWORD       dwSignalQuality; //??????????1-5
	BYTE        byDialStatus[MAX_LENGTH_32]; /*????℅?????(disconnect-????????,dialing-????????,success-????????,shmError-?????足??,
											 certificationFailure-???∟?∫∼?,invalidDialingCharacters-????℅?﹞????∫,
											 networkTimeout “C???????㊣)*/
	NET_DVR_IPADDR    struIpAddr;  //IP???﹞
	NET_DVR_IPADDR    struIPMask;  //???????﹞
	NET_DVR_IPADDR    struGatewayIPMask;  //???????﹞
	NET_DVR_IPADDR    struDnsServerIpAddr; //DNS???﹞
	BYTE        byRes[256];
}NET_DVR_WIRELESSDIAL_STATUS, *LPNET_DVR_WIRELESSDIAL_STATUS;

typedef    struct tagNET_DVR_WIRELESSDIAL_CONNECT
{
	DWORD        dwSize;//?芍?????車??
	DWORD       dwInterface; //???“㊣角????1,2????
	BYTE        byEnableConnect; //??﹞???????0-??????1-????
	BYTE        byRes[255];
}NET_DVR_WIRELESSDIAL_CONNECT_PARAM, *LPNET_DVR_WIRELESSDIAL_CONNECT_PARAM;


typedef    struct tagNET_DVR_LITESTORAGE
{
	DWORD        dwSize;//?芍?????車??
	BYTE       byEnable; /*???? 0-??????,1-????*/
	BYTE       byStorageTime;/*?????㊣?? 1-30 ????7?足*/
	BYTE       byLevel; //??????????0-???∫???“㊣???????1-????2-??(????)??3-????
	BYTE        byRes;
	float           fCapacity;//????SD?“??????????????
	BYTE        byDefLowStorageTime;// ?????????????足?? ????
	BYTE        byDefMediumStorageTime; // ?????????????足?? ????
	BYTE        byDefHighStorageTime; // ?????????????足?? ????
	BYTE       byRes1[61];
}NET_DVR_LITESTORAGE, *LPNET_DVR_LITESTORAGE;

typedef struct tagNET_DVR_CALIBRATION
{
	DWORD            dwSize;//?芍?????車??
	NET_VCA_POLYGON  struRegion;//㊣那?“???辰
	BYTE        byRes[64];
}NET_DVR_CALIBRATION, *LPNET_DVR_CALIBRATION;

typedef    struct    tagNET_DVR_STD_CONFIG
{
	void*        lpCondBuffer;        //[in]????????(?芍????????),?????“??????.??????NULL
	DWORD        dwCondSize;            //[in] lpCondBuffer???辰???????車??
	void*        lpInBuffer;            //[in]????????(?芍????????),?豕???㊣????NULL???????㊣??NULL
	DWORD        dwInSize;            //[in] lpInBuffer???辰???????車??
	void*        lpOutBuffer;        //[out]????????(?芍????????),?????㊣????NULL,?豕???㊣??NULL
	DWORD        dwOutSize;            //[in] lpOutBuffer???辰???????車??
	void*        lpStatusBuffer;        //[out]﹞?????℅???????(XML????),?????????㊣???芍????,???????豕??,??????NULL
	DWORD        dwStatusSize;        //[in] lpStatusBuffer???辰???????車??
	void*       lpXmlBuffer;    //[in/out]byDataType = 1?㊣???∫,xml????????
	DWORD       dwXmlSize;      //[in/out]lpXmlBuffer???辰???????車??,?????㊣???㊣℅‾???????????????????????????車?芍?????芍?????∟?????豕???㊣㊣赤???????∟???????????????????車??
	BYTE        byDataType;     //[in]????/?????????角??,0-?????芍?????角??lpInBuffer/lpOutBuffer???∫,1-????XML?角??lpXmlBuffer???∫
	BYTE        byRes[23];
}NET_DVR_STD_CONFIG, *LPNET_DVR_STD_CONFIG;

typedef    struct    DWORDtagNET_DVR_STD_ABILITY
{
	void*        lpCondBuffer;    //[in]????????(??℅?????),?????“??????.??????NULL
	DWORD        dwCondSize;        //[in] dwCondSize???辰???????車??
	void*        lpOutBuffer;    //[out]????????(XML????),????NULL
	DWORD        dwOutSize;        //[in] lpOutBuffer???辰???????車??
	void*        lpStatusBuffer;    //[out]﹞?????℅???????(XML????),?????????㊣???芍????,???????豕??,??????NULL
	DWORD        dwStatusSize;    //[in] lpStatusBuffer???辰???????車??
	DWORD        dwRetSize;        //[out]?????????????∟??(lpOutBuffer?辰??lpStatusBuffer???辰???????????∟??)
	BYTE        byRes[32];        //㊣???℅???
}NET_DVR_STD_ABILITY, *LPNET_DVR_STD_ABILITY;

typedef struct tagNET_DVR_STD_CONTROL
{
	void*        lpCondBuffer;    //[in]????????(??℅?????),?????“??????.??????NULL
	DWORD        dwCondSize;        //[in] dwCondSize???辰???????車??
	void*        lpStatusBuffer;    //[out]﹞?????℅???????(XML????),?????????㊣???芍????,???????豕??,??????NULL
	DWORD        dwStatusSize;    //[in] lpStatusBuffer???辰???????車??
	void*       lpXmlBuffer;    //[in/out]byDataType = 1?㊣???∫,xml????????
	DWORD       dwXmlSize;      //[in/out]lpXmlBuffer???辰???????車??,?????㊣???㊣℅‾???????????????????????????車?芍?????芍?????∟?????豕???㊣㊣赤???????∟???????????????????車??
	BYTE        byDataType;     //[in]????/?????????角??,0-?????芍?????角??lpCondBuffer???∫,1-????XML?角??lpXmlBuffer???∫
	BYTE        byRes[55];
}NET_DVR_STD_CONTROL, *LPNET_DVR_STD_CONTROL;

#define MAX_FILE_PATH_LEN       256     //?????﹞???∟??
typedef struct tagNET_DVR_MIME_UNIT
{
	//????????
	//Content-Disposition: form-data; name="upload"; filename="C:\Users\test\Desktop\11.txt"
	//Content-Type: text/plain
	char szContentType[32];               //????Content-Type
	char szName[MAX_FILE_PATH_LEN];       //????name℅???
	char szFilename[MAX_FILE_PATH_LEN];   //????filename℅???
	DWORD dwContentLen;                   //Content???∟??
	char* pContent;                       //????????
	BYTE bySelfRead;                 // 0-???????????? 1-?????????????“?“??szFilename?????那???﹞????
	BYTE byRes[15];
}NET_DVR_MIME_UNIT, *LPNET_DVR_MIME_UNIT;

typedef struct tagNET_DVR_XML_CONFIG_INPUT
{
	DWORD   dwSize;                     //?芍?????車??
	void*   lpRequestUrl;               //???車??????℅?﹞???????
	DWORD   dwRequestUrlLen;            //???車?????∟????℅?﹞????∟??
	void*   lpInBuffer;                 //????????????????XML????
	DWORD   dwInBufferSize;             //???????????????車??
	DWORD   dwRecvTimeOut;              //???????㊣?㊣??????????ms????0?辰???????????㊣5s
	BYTE    byForceEncrpt;              //??﹞???????????0-﹞???1-??
	BYTE    byNumOfMultiPart;           //0-???∫????????㊣赤??㊣“??﹞?????????﹞????㊣lpInBuffer????????NET_DVR_MIME_UNIT?芍??????℅谷???????????????迆㊣赤?芍????????
	BYTE    byRes[30];
}NET_DVR_XML_CONFIG_INPUT, *LPNET_DVR_XML_CONFIG_INPUT;

typedef struct tagNET_DVR_XML_CONFIG_OUTPUT
{
	DWORD   dwSize;                        //?芍?????車??
	void*    lpOutBuffer;                //????????????????XML????
	DWORD    dwOutBufferSize;            //???????????????車??(?????車??)
	DWORD   dwReturnedXMLSize;            //??????????XML?????車??
	void*    lpStatusBuffer;                //﹞?????℅???????(XML????),?????邦???????㊣???芍????,???????豕??,??????NULL
	DWORD    dwStatusSize;                //℅??????????車??(?????車??)
	BYTE    byRes[32];
}NET_DVR_XML_CONFIG_OUTPUT, *LPNET_DVR_XML_CONFIG_OUTPUT;

typedef struct tagNET_DVR_JSON_DATA_CFG
{
	DWORD  dwSize;  //?芍?????車??
	void  *lpJsonData;  //JSON㊣“??
	DWORD  dwJsonDataSize;  //JSON㊣“???車??
	void  *lpPicData;  //????????
	DWORD  dwPicDataSize;  //?????????車??
	BYTE   byRes[256];  //㊣???
}NET_DVR_JSON_DATA_CFG, *LPNET_DVR_JSON_DATA_CFG;

typedef struct tagNET_DVR_SIMPLE_DAYTIME
{
	BYTE byHour; //?㊣
	BYTE byMinute; //﹞?
	BYTE bySecond; //??
	BYTE byRes;
}NET_DVR_SIMPLE_DAYTIME, *LPNET_DVR_SIMPLE_DAYTIME;

typedef struct tagNET_DVR_TIME_SEGMENT
{
	NET_DVR_SIMPLE_DAYTIME struBeginTime; //?????㊣????
	NET_DVR_SIMPLE_DAYTIME struEndTime;   //?芍???㊣????
}NET_DVR_TIME_SEGMENT, *LPNET_DVR_TIME_SEGMENT;

typedef struct tagNET_DVR_SINGLE_PLAN_SEGMENT
{
	BYTE byEnable; //??﹞???????1-??????0-??????
	BYTE byDoorStatus; //??℅????????“????????????0-???∫??1-??????2-????℅????“℅???????3-??㊣?℅????“????????4-???“℅????“??℅?????????????
	BYTE byVerifyMode; //?谷?∟﹞?????0-???∫??1-???“??2-???“+????(???“?‾?谷?∟﹞???????????)??3-???“,4-???“?辰????(???“?‾?谷?∟﹞???????????), 5-??????6-????+??????7-?????辰???“??8-????+???“??9-????+???“+?????“?????車???辰????10-?????辰?????辰???“?辰??????11-????+??????12-????+??????
					   //13-????+???“??14-??????15-?∟??+??????16-?????辰??????17-?∟??+??????18-?∟??+????+??????19-????+????+???“??20-????+????+??????21-?∟??+??????22-?????辰????+???“,23-?????辰??????24-???“?辰?????辰??????25-???“?辰??????26-???“?辰?????辰??????27-???“?辰?????辰????
	BYTE byRes[5];
	NET_DVR_TIME_SEGMENT struTimeSegment; //?㊣????????
}NET_DVR_SINGLE_PLAN_SEGMENT, *LPNET_DVR_SINGLE_PLAN_SEGMENT;

typedef struct tagNET_DVR_WEEK_PLAN_CFG
{
	DWORD dwSize;
	BYTE byEnable;  //??﹞???????1-??????0-??????
	BYTE byRes1[3];
	NET_DVR_SINGLE_PLAN_SEGMENT struPlanCfg[MAX_DAYS][MAX_TIMESEGMENT_V30]; //??????????
	BYTE byRes2[16];
}NET_DVR_WEEK_PLAN_CFG, *LPNET_DVR_WEEK_PLAN_CFG;

typedef struct tagNET_DVR_HOLIDAY_PLAN_CFG
{
	DWORD dwSize;
	BYTE byEnable; //??﹞???????1-??????0-??????
	BYTE byRes1[3];
	NET_DVR_DATE struBeginDate; //????????????
	NET_DVR_DATE struEndDate; //?????芍??????
	NET_DVR_SINGLE_PLAN_SEGMENT struPlanCfg[MAX_TIMESEGMENT_V30]; //?㊣????????
	BYTE byRes2[16];
}NET_DVR_HOLIDAY_PLAN_CFG, *LPNET_DVR_HOLIDAY_PLAN_CFG;

typedef struct tagNET_DVR_HOLIDAY_PLAN_COND
{
	DWORD dwSize;
	DWORD dwHolidayPlanNumber; //????????㊣角??
	WORD wLocalControllerID; //?????????‾?辰??[1,64]
	BYTE byRes[106];
}NET_DVR_HOLIDAY_PLAN_COND, *LPNET_DVR_HOLIDAY_PLAN_COND;

typedef struct tagNET_DVR_WEEK_PLAN_COND
{
	DWORD dwSize;
	DWORD dwWeekPlanNumber; //??????㊣角??
	WORD wLocalControllerID; //?????????‾?辰??[1,64]
	BYTE byRes[106];
}NET_DVR_WEEK_PLAN_COND, *LPNET_DVR_WEEK_PLAN_COND;

typedef struct tagNET_DVR_HOLIDAY_GROUP_CFG
{
	DWORD dwSize;
	BYTE byEnable; //??﹞???????1-??????0-??????
	BYTE byRes1[3];
	BYTE byGroupName[HOLIDAY_GROUP_NAME_LEN]; //????℅谷????
	DWORD dwHolidayPlanNo[MAX_HOLIDAY_PLAN_NUM]; //????????㊣角???????∼????????0???∫
	BYTE byRes2[32];
}NET_DVR_HOLIDAY_GROUP_CFG, *LPNET_DVR_HOLIDAY_GROUP_CFG;

typedef struct tagNET_DVR_HOLIDAY_GROUP_COND
{
	DWORD dwSize;
	DWORD dwHolidayGroupNumber; //????℅谷㊣角??
	WORD wLocalControllerID; //?????????‾?辰??[1,64]
	BYTE byRes[106];
}NET_DVR_HOLIDAY_GROUP_COND, *LPNET_DVR_HOLIDAY_GROUP_COND;

typedef struct tagNET_DVR_PLAN_TEMPLATE
{
	DWORD dwSize;
	BYTE byEnable; //??﹞???????1-??????0-??????
	BYTE byRes1[3];
	BYTE byTemplateName[TEMPLATE_NAME_LEN]; //??∼?????
	DWORD dwWeekPlanNo; //??????㊣角????0?????∫
	DWORD dwHolidayGroupNo[MAX_HOLIDAY_GROUP_NUM]; //????℅谷㊣角???????∼????????0???∫
	BYTE byRes2[32];
}NET_DVR_PLAN_TEMPLATE, *LPNET_DVR_PLAN_TEMPLATE;

typedef struct tagNET_DVR_PLAN_TEMPLATE_COND
{
	DWORD dwSize;
	DWORD dwPlanTemplateNumber; //??????∼?㊣角??????1??????℅??車??????????????????
	WORD wLocalControllerID; //?????????‾?辰??[1,64]??0???∫
	BYTE byRes[106];
}NET_DVR_PLAN_TEMPLATE_COND, *LPNET_DVR_PLAN_TEMPLATE_COND;

typedef struct tagNET_DVR_DOOR_STATUS_PLAN
{
	DWORD dwSize;
	DWORD dwTemplateNo; //??????∼?㊣角??????0㊣赤????????????????????℅????“???“℅?????
	BYTE byRes[64];
}NET_DVR_DOOR_STATUS_PLAN, *LPNET_DVR_DOOR_STATUS_PLAN;

typedef struct tagNET_DVR_CARD_READER_PLAN
{
	DWORD dwSize;
	DWORD dwTemplateNo; //??????∼?㊣角??????0㊣赤????????????????????℅????“???“??????
	BYTE byRes[64];
}NET_DVR_CARD_READER_PLAN, *LPNET_DVR_CARD_READER_PLAN;

typedef struct _tagNET_DVR_GROUP_CFG
{
	DWORD dwSize;
	BYTE byEnable; //??﹞???????0-????????1-????    
	BYTE byRes1[3];
	NET_DVR_VALID_PERIOD_CFG struValidPeriodCfg; //??℅谷???∫??????
	BYTE byGroupName[GROUP_NAME_LEN]; //??℅谷????
	BYTE byRes2[32];
}NET_DVR_GROUP_CFG, *LPNET_DVR_GROUP_CFG;

typedef struct tagNET_DVR_GROUP_COMBINATION_INFO
{
	BYTE byEnable; //??﹞?????????℅谷℅谷??    
	BYTE byMemberNum; //???“???㊣????
	BYTE bySequenceNo; //??℅谷???“???辰??
	BYTE byRes;
	DWORD dwGroupNo;  //??℅谷㊣角??,0xffffffff㊣赤????????????0xfffffffe㊣赤??????????
}NET_DVR_GROUP_COMBINATION_INFO, *LPNET_DVR_GROUP_COMBINATION_INFO;

typedef struct tagNET_DVR_MULTI_CARD_GROUP_CFG
{
	BYTE byEnable; //??﹞????????角???“℅谷??????0-????????1-????
	BYTE byEnableOfflineVerifyMode; //??﹞??????‾?迆?????㊣?谷?∟﹞????“?????????迆????????????
	BYTE byRes1[2];
	DWORD dwTemplateNo; //?????角???“????????????∼?㊣角??
	NET_DVR_GROUP_COMBINATION_INFO struGroupCombination[GROUP_COMBINATION_NUM]; //??℅谷℅谷??????
}NET_DVR_MULTI_CARD_GROUP_CFG, *LPNET_DVR_MULTI_CARD_GROUP_CFG;

typedef struct tagNET_DVR_MULTI_CARD_CFG
{
	DWORD dwSize;
	BYTE byEnable; //??﹞??????角???“??????0-????????1-????
	BYTE bySwipeIntervalTimeout; //???“???????㊣?㊣????1-255s??????10s    
	BYTE byRes1[2];
	NET_DVR_MULTI_CARD_GROUP_CFG struGroupCfg[MULTI_CARD_GROUP_NUM]; //??℅谷???“????
	BYTE byRes2[32];
}NET_DVR_MULTI_CARD_CFG, *LPNET_DVR_MULTI_CARD_CFG;

typedef struct tagNET_DVR_GROUP_COMBINATION_INFO_V50
{
	BYTE byEnable; //??﹞?????????℅谷℅谷??
	BYTE byMemberNum; //???“???㊣????
	BYTE bySequenceNo; //??℅谷???“???辰??
	BYTE byRes;
	DWORD dwGroupNo;  //??℅谷㊣角??,0xffffffff㊣赤????????????0xfffffffe㊣赤??????????
}NET_DVR_GROUP_COMBINATION_INFO_V50, *LPNET_DVR_GROUP_COMBINATION_INFO_V50;

typedef struct tagNET_DVR_MULTI_CARD_GROUP_CFG_V50
{
	BYTE byEnable; //??﹞????????角???“℅谷??????0-????????1-????
	BYTE byEnableOfflineVerifyMode; //??﹞??????‾?迆?????㊣?谷?∟﹞????“?????????迆??????????????1-??????0-??????
	BYTE byRes1[2];
	DWORD dwTemplateNo; //?????角???“????????????∼?㊣角??
	NET_DVR_GROUP_COMBINATION_INFO_V50 struGroupCombination[GROUP_COMBINATION_NUM]; //??℅谷℅谷??????
}NET_DVR_MULTI_CARD_GROUP_CFG_V50, *LPNET_DVR_MULTI_CARD_GROUP_CFG_V50;

typedef struct tagNET_DVR_MULTI_CARD_CFG_V50
{
	DWORD dwSize;
	BYTE byEnable; //??﹞??????角???“??????0-????????1-????
	BYTE bySwipeIntervalTimeout; //???“???????㊣?㊣????1-255s??????10s
	BYTE byRes1[2];
	NET_DVR_MULTI_CARD_GROUP_CFG_V50 struGroupCfg[NET_SDK_MULTI_CARD_GROUP_NUM_20]; //??℅谷???“????
	BYTE byRes2[32];
}NET_DVR_MULTI_CARD_CFG_V50, *LPNET_DVR_MULTI_CARD_CFG_V50;

//2014-12-03  T1????℅????芍????
typedef struct
{
	DWORD  dwSize;//?芍?????車??
	WORD   wPort;  //??????
				   //(?豕㊣??“???????????“???????豕㊣??????“????????℅?????????????????socket??????????????T1??????????℅?XML????)
				   //0- ??㊣?(??㊣??豕㊣???????????????﹞?????)??1- ????(?豕㊣???????????????????)
	BYTE   byPortState;
	BYTE   byRes[61];     //㊣???
}NET_DVR_T1TEST_PARAMCFG, *LPNET_DVR_T1TEST_PARAMCFG;

#define CARD_PARAM_CARD_VALID       0x00000001 //?“??﹞????∫????
#define CARD_PARAM_VALID            0x00000002  //???∫??????
#define CARD_PARAM_CARD_TYPE        0x00000004  //?“?角??????
#define CARD_PARAM_DOOR_RIGHT       0x00000008  //???“??????
#define CARD_PARAM_LEADER_CARD      0x00000010  //?℅?“????
#define CARD_PARAM_SWIPE_NUM        0x00000020  //℅??車???“????????
#define CARD_PARAM_GROUP            0x00000040  //?迄????℅谷????
#define CARD_PARAM_PASSWORD         0x00000080  //?“????????
#define CARD_PARAM_RIGHT_PLAN       0x00000100  //?“?“??????????
#define CARD_PARAM_SWIPED_NUM       0x00000200  //?????“????
#define CARD_PARAM_EMPLOYEE_NO      0x00000400  //?∟??
#define CARD_PARAM_NAME             0x00000800  //????
#define CARD_PARAM_DEPARTMENT_NO    0x00001000  //????㊣角??
#define CARD_SCHEDULE_PLAN_NO       0x00002000  //??∼角????㊣角??
#define CARD_SCHEDULE_PLAN_TYPE     0x00004000  //??∼角?????角??
#define CARD_ROOM_NUMBER            0x00008000  //﹞?????
#define CARD_SIM_NO                 0x00010000  //SIM?“???“???迆????
#define CARD_FLOOR_NUMBER           0x00020000  //??????
#define CARD_USER_TYPE              0x00040000  //???∫?角??

typedef struct tagNET_DVR_ANTI_SNEAK_CFG
{
	DWORD dwSize;
	BYTE byEnable; //????﹞??㊣????????1-??????0-??????
	BYTE byRes1[3];
	DWORD dwStartCardReaderNo; //﹞??㊣?????????“?‾㊣角??    
	BYTE byRes2[64];
}NET_DVR_ANTI_SNEAK_CFG, *LPNET_DVR_ANTI_SNEAK_CFG;

typedef struct tagNET_DVR_CARD_READER_ANTI_SNEAK_CFG
{
	DWORD dwSize;
	BYTE byEnable;  //??﹞?????﹞??㊣???﹞????1-??????0-??????
	BYTE byRes1[3];
	DWORD dwFollowUpCardReader[MAX_SNEAK_PATH_NODE]; //?車?????“?‾㊣角??????0㊣赤??????℅????????“?‾㊣角??
	BYTE byRes2[32];
}NET_DVR_CARD_READER_ANTI_SNEAK_CFG, *LPNET_DVR_CARD_READER_ANTI_SNEAK_CFG;

typedef struct tagNET_DVR_PHONE_DOOR_RIGHT_CFG
{
	DWORD   dwSize;
	BYTE    byOpenRight[MAX_DOOR_NUM_256];         //∼???℅谷㊣赤??,??﹞????????“????-???“????-???“??
	BYTE    byCloseRight[MAX_DOOR_NUM_256];        //∼???℅谷㊣赤??,??﹞????????“????-???“????-???“??
	BYTE    byNormalOpenRight[MAX_DOOR_NUM_256];   //∼???℅谷㊣赤??,??﹞????????“????-???“????-???“??
	BYTE    byNormalCloseRight[MAX_DOOR_NUM_256];  //∼???℅谷㊣赤??,??﹞?????㊣??“????-???“????-???“??
	BYTE    byArmRight[MAX_ALARMHOST_ALARMIN_NUM]; //∼???℅谷㊣赤??,??﹞?????﹞??“????-???“????-???“??
	BYTE    byDisarmRight[MAX_ALARMHOST_ALARMIN_NUM];  //∼???℅谷㊣赤??,??﹞????﹞﹞??“????-???“????-???“??
	BYTE    byRes[256];                              //㊣???
}NET_DVR_PHONE_DOOR_RIGHT_CFG, *LPNET_DVR_PHONE_DOOR_RIGHT_CFG;

typedef struct tagNET_DVR_MULTI_DOOR_INTERLOCK_CFG
{
	DWORD dwSize;
	BYTE byEnable; //??﹞??????角????????????1-??????0-??????
	BYTE byRes1[3];
	DWORD dwMultiDoorGroup[MAX_MULTI_DOOR_INTERLOCK_GROUP][MAX_INTER_LOCK_DOOR_NUM]; //?角??????℅谷??????????????㊣角??
	BYTE byRes2[64];
}NET_DVR_MULTI_DOOR_INTERLOCK_CFG, *LPNET_DVR_MULTI_DOOR_INTERLOCK_CFG;

typedef struct tagNET_DVR_CARD_READER_CFG
{
	DWORD dwSize;
	BYTE byEnable; //??﹞???????1-??????0-??????
	BYTE byCardReaderType; //???“?‾?角????1-DS-K110XM/MK/C/CK??2-DS-K192AM/AMP??3-DS-K192BM/BMP??4-DS-K182AM/AMP??5-DS-K182BM/BMP??6-DS-K182AMF/ACF??7-?∟?迄?辰485??????,8- DS-K1101M/MK??9- DS-K1101C/CK??10- DS-K1102M/MK/M-A
						   //11- DS-K1102C/CK??12- DS-K1103M/MK??13- DS-K1103C/CK??14- DS-K1104M/MK??15- DS-K1104C/CK??16- DS-K1102S/SK/S-A??17- DS-K1102G/GK??18- DS-K1100S-B??19- DS-K1102EM/EMK??20- DS-K1102E/EK??
						   //21- DS-K1200EF??22- DS-K1200MF??23- DS-K1200CF??24- DS-K1300EF??25- DS-K1300MF??26- DS-K1300CF??27- DS-K1105E??28- DS-K1105M??29- DS-K1105C??30- DS-K182AMF??31- DS-K196AMF??32-DS-K194AMP
						   //33-DS-K1T200EF/EF-C/MF/MF-C/CF/CF-C,34-DS-K1T300EF/EF-C/MF/MF-C/CF/CF-C??35-DS-K1T105E/E-C/M/M-C/C/C-C??36-DS-K1T803F/MF/SF/EF??37-DS-K1A801F/MF/SF/EF,38-DS-K1107M/MK,39-DS-K1107E/EK,
						   //40-DS-K1107S/SK,41-DS-K1108M/MK,42-DS-K1108E/EK,43-DS-K1108S/SK,44-DS-K1200F,45-DS-K1S110-I,46-DS-K1T200M-PG/PGC,47-DS-K1T200M-PZ/PZC,48-DS-K1109H
	BYTE byOkLedPolarity; //OK LED??????0-??????1-????
	BYTE byErrorLedPolarity; //Error LED??????0-??????1-????
	BYTE byBuzzerPolarity; //﹞??迄?‾??????0-??????1-????
	BYTE bySwipeInterval; //???????“?????㊣????????????
	BYTE byPressTimeout;  //∼??邦???㊣?㊣????????????
	BYTE byEnableFailAlarm; //??﹞????????“?∫∼?????㊣“????0-????????1-????
	BYTE byMaxReadCardFailNum; //℅??車???“?∫∼?????
	BYTE byEnableTamperCheck;  //??﹞??∫??﹞????足????0-disable ??1-enable
	BYTE byOfflineCheckTime;  //?????足???㊣?? ??????
	BYTE byFingerPrintCheckLevel;   //??????㊣???????1-1/10?車??????2-1/100?車??????3-1/1000?車??????4-1/10000?車??????5-1/100000?車??????6-1/1000000?車??????7-1/10000000?車??????8-1/100000000?車??????9-3/100?車??????10-3/1000?車??????11-3/10000?車??????12-3/100000?車??????13-3/1000000?車??????14-3/10000000?車??????15-3/100000000?車??????16-Automatic Normal,17-Automatic Secure,18-Automatic More Secure
	BYTE byUseLocalController; //????????﹞????????????????‾????0-﹞???1-??
	BYTE byRes1;
	WORD wLocalControllerID; //???????????????‾?辰????1-64,0?迆㊣赤??℅??芍
	WORD wLocalControllerReaderID; //???????????????‾?????“?‾ID??0?迆㊣赤??℅??芍
	WORD wCardReaderChannel; //?????????“?‾?“???“??????0?∟?迄?辰??????1-RS485A,2-RS485B
	BYTE byRes[16];
}NET_DVR_CARD_READER_CFG, *LPNET_DVR_CARD_READER_CFG;

typedef struct tagNET_DVR_CARD_READER_CFG_V50
{
	DWORD dwSize;
	BYTE byEnable; //??﹞???????1-??????0-??????
	BYTE byCardReaderType; //???“?‾?角????1-DS-K110XM/MK/C/CK??2-DS-K192AM/AMP??3-DS-K192BM/BMP??4-DS-K182AM/AMP??5-DS-K182BM/BMP??6-DS-K182AMF/ACF??7-?∟?迄?辰485????????8- DS-K1101M/MK??9- DS-K1101C/CK??10- DS-K1102M/MK/M-A??11- DS-K1102C/CK??12- DS-K1103M/MK??13- DS-K1103C/CK??14- DS-K1104M/MK??15- DS-K1104C/CK??16- DS-K1102S/SK/S-A??17- DS-K1102G/GK??18- DS-K1100S-B??19- DS-K1102EM/EMK??20- DS-K1102E/EK??21- DS-K1200EF??22- DS-K1200MF??23- DS-K1200CF??24- DS-K1300EF??25- DS-K1300MF??26- DS-K1300CF??27- DS-K1105E??28- DS-K1105M??29- DS-K1105C??30- DS-K182AMF??31- DS-K196AMF??32-DS-K194AMP??33-DS-K1T200EF/EF-C/MF/MF-C/CF/CF-C,34-DS-K1T300EF/EF-C/MF/MF-C/CF/CF-C??35-DS-K1T105E/E-C/M/M-C/C/C-C,36-DS-K1T803F/F-M/F-S/F-E,37-DS-K1A801F/F-M/F-S/F-E,38-DS-K1107M/MK,39-DS-K1107E/EK,40-DS-K1107S/SK,41-DS-K1108M/MK,42-DS-K1108E/EK,43-DS-K1108S/SK,44-DS-K1200F,45-DS-K1S110-I,46-DS-K1T200M-PG/PGC,47-DS-K1T200M-PZ/PZC,48-DS-K1109H
	BYTE byOkLedPolarity; //OK LED??????0-??????1-????
	BYTE byErrorLedPolarity; //Error LED??????0-??????1-????
	BYTE byBuzzerPolarity; //﹞??迄?‾??????0-??????1-????
	BYTE bySwipeInterval; //???????“?????㊣????????????
	BYTE byPressTimeout;  //∼??邦???㊣?㊣????????????
	BYTE byEnableFailAlarm; //??﹞????????“?∫∼?????㊣“????0-????????1-????
	BYTE byMaxReadCardFailNum; //℅??車???“?∫∼?????
	BYTE byEnableTamperCheck;  //??﹞??∫??﹞????足????0-disable ??1-enable
	BYTE byOfflineCheckTime;  //?????足???㊣?? ??????
	BYTE byFingerPrintCheckLevel; //??????㊣???????1-1/10?車??????2-1/100?車??????3-1/1000?車??????4-1/10000?車??????5-1/100000?車??????6-1/1000000?車??????7-1/10000000?車??????8-1/100000000?車??????9-3/100?車??????10-3/1000?車??????11-3/10000?車??????12-3/100000?車??????13-3/1000000?車??????14-3/10000000?車??????15-3/100000000?車??????16-Automatic Normal,17-Automatic Secure,18-Automatic More Secure?“???∼???????∫????
	BYTE byUseLocalController; //????????﹞????????????????‾????0-﹞???1-??
	BYTE  byRes1;
	WORD wLocalControllerID; //???????????????‾?辰??, byUseLocalController=1?㊣???∫??1-64,0?迆㊣赤??℅??芍
	WORD wLocalControllerReaderID; //???????????????‾?????“?‾ID??byUseLocalController=1?㊣???∫??0?迆㊣赤??℅??芍
	WORD wCardReaderChannel; //?????????“?‾?“???“??????byUseLocalController=1?㊣???∫??0?∟?迄?辰??????1-RS485A,2-RS485B
	BYTE byFingerPrintImageQuality; //??????????????0-???∫??1-??????(V1)??2-????????(V1)??3-??????(V1)??4-℅???????(V1)??5-??????(V2)??6-????????(V2)??7-??????(V2)??8-℅???????(V2)
	BYTE byFingerPrintContrastTimeOut; //??????㊣????㊣?㊣????0-???∫??﹞??∫1-20?迆㊣赤:1s-20s??0xff-?????車
	BYTE byFingerPrintRecogizeInterval; //??????????㊣???????0-???∫??﹞??∫1-10?迆㊣赤:1s-10s??0xff-??????
	BYTE byFingerPrintMatchFastMode; //?????????足????????0-???∫??﹞??∫1-5?迆㊣赤:?足??????1-?足??????5??0xff-℅???
	BYTE byFingerPrintModuleSensitive; //??????℅谷?谷??????0-???∫??﹞??∫1-8?迆㊣赤???谷??????㊣?1-?谷??????㊣?8
	BYTE byFingerPrintModuleLightCondition; //??????℅谷??????????0-???∫??1-??????2-????
	BYTE byFaceMatchThresholdN; //????㊣???﹞∫????﹞??∫0-100
	BYTE byFaceQuality; //??????????﹞??∫0-100
	BYTE byFaceRecogizeTimeOut; //??????㊣????㊣?㊣????﹞??∫1-20?迆㊣赤??1s-20s??0xff-?????車
	BYTE byFaceRecogizeInterval; //??????????㊣???????0-???∫??﹞??∫1-10?迆㊣赤??1s-10s??0xff-??????
	WORD wCardReaderFunction; //?????????“?‾???角??∼???㊣赤??????1??-????????????-????????????-??????
	BYTE byCardReaderDescription[CARD_READER_DESCRIPTION]; //???“?‾?豕??
	WORD wFaceImageSensitometry; //??????????????????????﹞??∫0-65535
	BYTE byLivingBodyDetect; //?????足????0-???∫??1-????????2-????
	BYTE byFaceMatchThreshold1; //????1:1????﹞∫????﹞??∫0-100
	WORD wBuzzerTime; //﹞??迄?㊣????﹞??∫0s-5999s?“0-?迆㊣赤?∟?迄??
	BYTE byFaceMatch1SecurityLevel; //????1:1??㊣?∼?????????0-???∫??1-??∼???2-??????3-????
	BYTE byFaceMatchNSecurityLevel; //????1:N??㊣?∼?????????0-???∫??1-??∼???2-??????3-????
	BYTE byEnvirMode;//??????㊣??﹞????????0-???∫??1-??????2-??????
	BYTE byLiveDetLevelSet;//?????足???????????豕????0-???∫??1-????2-????3-????
	BYTE byLiveDetAntiAttackCntLimit;//?????足??﹞????‾?????? 0-???∫??1-255???“???∫?????豕㊣????????????????迄????????????????
	BYTE byEnableLiveDetAntiAttack;//?????足??﹞????‾??????0-???∫??1-????????2-????
	BYTE bySupportDelFPByID;//?????????“?‾??﹞??∫??∼?????ID??????????0-???∫??1-???∫????2-?∫??
	BYTE byFaceContrastMotionDetLevel;//????㊣????㊣?????足????㊣???0-???∫??1-????2-????3-????0xff-????
	BYTE byDayFaceMatchThresholdN; //∼℅?足????1:N????﹞∫????﹞??∫0-100
	BYTE byNightFaceMatchThresholdN; //???赤????1:N????﹞∫????﹞??∫0-100
	BYTE byFaceRecogizeEnable; //??????㊣???????0-???∫??1-??????2-??㊣?
	BYTE byBlackFaceMatchThreshold; //??????????﹞∫????﹞??∫0-100
	BYTE byRes3;
	BYTE byDefaultVerifyMode; //?????????“?‾?????谷?∟﹞????“???∫????????1-??????2-???“+??????3-???“??4-???“?辰??????5-??????6-????+??????7-?????辰???“??8-????+???“??9-????+???“+??????10-?????辰?????辰???“?辰??????11-????+??????12-????+??????13-????+???“??14-??????15-?∟??+??????16-?????辰??????17-?∟??+??????18-?∟??+????+??????19-????+????+???“??20-????+????+??????21-?∟??+??????22-?????辰????+???“??23-?????辰??????24-???“?辰?????辰??????25-???“?辰??????26-???“?辰?????辰??????27-???“?辰?????辰????
	DWORD dwFingerPrintCapacity;//??????????????
	DWORD dwFingerPrintNum;//????????????????????
	BYTE byEnableFingerPrintNum;//????????????????????0-????????1-?????“?????㊣??℅?????1-?????㊣??dwFingerPrintCapacity??dwFingerPrintNum?????∫??
	BYTE byRes[231];
}NET_DVR_CARD_READER_CFG_V50, *LPNET_DVR_CARD_READER_CFG_V50;

typedef struct tagNET_DVR_FAILED_FACE_COND
{
	DWORD       dwSize;
	BYTE  byRes[128];          //㊣???
}NET_DVR_FAILED_FACE_COND, *LPNET_DVR_FAILED_FACE_COND;

typedef struct tagNET_DVR_FAILED_FACE_INFO
{
	DWORD  dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“?? 
	BYTE  byErrorCode;  //?“???∫∼??那???赤?車,0-???∫??1-?????????∫∼???2-?辰???????∫∼???3-??????℅???4-℅??芍?????∫∼???5-?????角??????6-?“?“????????
	BYTE  byRes[127];
}NET_DVR_FAILED_FACE_INFO, *LPNET_DVR_FAILED_FACE_INFO;

typedef struct tagNET_DVR_FACE_PARAM_COND
{
	DWORD dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN];    //???????????“???“?豕???㊣???????????豕????
	BYTE  byEnableCardReader[MAX_CARD_READER_NUM_512];  //?????????“?‾??﹞????∫??0-???∫??1-???∫?“?豕???㊣???????????豕????
	DWORD dwFaceNum;    //?豕???辰???????????????????㊣????0xffffffff㊣赤???????迄??????????
	BYTE  byFaceID;     //????㊣角???????∫??﹞??∫??1-2   0xff㊣赤?????“?迄???????“?豕???㊣???????????豕????
	BYTE  byRes[127];   //㊣???
}NET_DVR_FACE_PARAM_COND, *LPNET_DVR_FACE_PARAM_COND;

typedef struct tagNET_DVR_FACE_PARAM_CFG
{
	DWORD dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN];    //???????????“?? 
	DWORD dwFaceLen;    //?????????∟??<DES???????赤>???豕㊣???﹞????????????車??????
	char* pFaceBuffer;  //????????????
	BYTE  byEnableCardReader[MAX_CARD_READER_NUM_512];  //?豕????﹞??????????“?‾??∼???℅谷㊣赤????????????????㊣赤????0-????﹞??????“?‾??1-??﹞????????“?‾
	BYTE  byFaceID;     //????㊣角???????∫??﹞??∫??1-2
	BYTE  byFaceDataType;   //?????????角????0-??∼??“????????1-????
	BYTE  byRes[126];
}NET_DVR_FACE_PARAM_CFG, *LPNET_DVR_FACE_PARAM_CFG;

typedef struct tagNET_DVR_FACE_PARAM_STATUS
{
	DWORD dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“??
	BYTE  byCardReaderRecvStatus[MAX_CARD_READER_NUM_512];  //???????“?‾℅?????∼?℅???㊣赤????0-?∫∼???1-??????2-?????辰????????????3-???????迆(?????????迆)??4-??????????????5-﹞?﹞“????ID
															//,6-??﹞“?“???∫∼???7-????﹞??“?“????8-???“???“㊣???????9-???????角???角????10-?????????∟??????1KB??11-??????????﹞??“png/jpg/bmp??,12-??????????????????????13-??????????????????????14-???????????谷?∫∼???15-?????????∫∼???16-?????足???∫∼???17-??????﹞??∫∼?
	BYTE  byErrorMsg[ERROR_MSG_LEN]; //??﹞??赤?車???????㊣byCardReaderRecvStatus??4?㊣??㊣赤???????????????????“??
	DWORD dwCardReaderNo;  //?????“?‾㊣角????????????﹞??赤?車﹞???
	BYTE  byTotalStatus;  //??﹞?℅???℅?????0-?㊣?∼?????????那?迄?????“?‾??1-?????那?迄?????“?‾(???????迄?????????????‾?迆?迄?迄???????“?‾??﹞???????????????﹞?)
	BYTE  byFaceID;     //????㊣角???????∫??﹞??∫??1-2
	BYTE  byRes[130];
}NET_DVR_FACE_PARAM_STATUS, *LPNET_DVR_FACE_PARAM_STATUS;

typedef struct tagNET_DVR_FACE_PARAM_BYCARD
{
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“?? 
	BYTE  byEnableCardReader[MAX_CARD_READER_NUM_512];  //?????????“?‾??????∼???℅谷㊣赤??
	BYTE  byFaceID[MAX_FACE_NUM];        //?豕????????????㊣角????∼???℅谷??㊣那????㊣赤??0-????????1-??????????
	BYTE  byRes1[42];          //㊣???
}NET_DVR_FACE_PARAM_BYCARD, *LPNET_DVR_FACE_PARAM_BYCARD;

typedef struct tagNET_DVR_FACE_PARAM_BYREADER
{
	DWORD dwCardReaderNo;  //∼???㊣赤???????????“?‾㊣角??
	BYTE  byClearAllCard;  //??﹞??????迄???“????????????0-∼??“????????????????1-?????迄???“??????????
	BYTE  byRes1[3];       //㊣???
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“?? 
	BYTE  byRes[548];          //㊣???
}NET_DVR_FACE_PARAM_BYREADER, *LPNET_DVR_FACE_PARAM_BYREADER;

typedef union tagNET_DVR_DEL_FACE_PARAM_MODE
{
	BYTE   uLen[588];   //???????∟??
	NET_DVR_FACE_PARAM_BYCARD       struByCard;     //∼??“????﹞???????
	NET_DVR_FACE_PARAM_BYREADER     struByReader;   //∼????“?‾??﹞???????
}NET_DVR_DEL_FACE_PARAM_MODE, *LPNET_DVR_DEL_FACE_PARAM_MODE;

typedef struct tagNET_DVR_FACE_PARAM_CTRL
{
	DWORD       dwSize;
	BYTE  byMode;          //????﹞?????0-∼??“??﹞?????????1-∼????“?‾????
	BYTE  byRes1[3];        //㊣???
	NET_DVR_DEL_FACE_PARAM_MODE struProcessMode;  //???赤﹞???
	BYTE  byRes[64];          //㊣???
}NET_DVR_FACE_PARAM_CTRL, *LPNET_DVR_FACE_PARAM_CTRL;

typedef    struct tagNET_DVR_LOCAL_CONTROLLER_STATUS_COND
{
	DWORD            dwSize;
	WORD wLocalControllerID; //?????????‾?辰??(﹞????‾?辰??),??0㊣赤???迄??
	BYTE                    byRes[306];
}NET_DVR_LOCAL_CONTROLLER_STATUS_COND, *LPNET_DVR_LOCAL_CONTROLLER_STATUS_COND;

typedef struct tagNET_DVR_LOCAL_CONTROLLER_STATUS
{
	DWORD            dwSize;
	WORD wLocalControllerID; //?????????‾?辰??(﹞????‾?辰??)
	BYTE byLocalAntiDismantleStatus; //?????????‾﹞???℅?????0-??㊣???1-????
	BYTE byPowerSupplyStatus; //?豕㊣?????℅?????1-???‾????????2-??????????
	WORD wBatteryVoltage; //??????????????????????10????????﹞邦??
	BYTE byBatteryLowVoltage; //????????﹞?????????℅?????0-﹞???1-??
	BYTE byFireAlarm; //??﹞?㊣“????0-??????1-????㊣“????2-????㊣“??
	BYTE bySerialNumber[SERIALNO_LEN];  //?豕㊣??辰????
	BYTE byMagneticStatus[MAX_DOOR_NUM];// ????℅?????0??????㊣???1??????????2???????﹞㊣“????3???????﹞㊣“????4?足??㊣“??
	BYTE byDoorLockStatus[MAX_DOOR_NUM]; //????℅?????0??????㊣???1??????????2???????﹞㊣“????3???????﹞㊣“????4?足??㊣“??  
	BYTE byCardReaderOnlineStatus[MAX_CARD_READER_NUM]; //???“?‾????℅?????0-????????1-????
	WORD wLocalControllerStatus; //???????????????‾????℅???(﹞????‾????℅???)??0-??????1-??????????2-?﹞?﹞1????RS485????1??3-?﹞?﹞1????RS485????2??4-?﹞?﹞2????RS485????1??5-?﹞?﹞2????RS485????2??6-?﹞?﹞3????RS485????1??7-?﹞?﹞3????RS485????2??8-?﹞?﹞4????RS485????1??9-?﹞?﹞4????RS485????2?“??????
	BYTE byRes2[122];
}NET_DVR_LOCAL_CONTROLLER_STATUS, *LPNET_DVR_LOCAL_CONTROLLER_STATUS;

typedef struct tagNET_DVR_ONLINE_LOCAL_CONTROLLER_CFG
{
	DWORD            dwSize;
	BYTE byLocalControllerName[LOCAL_CONTROLLER_NAME_LEN]; //?????????‾????
	WORD wLocalControllerID; //?????????‾?辰??
	WORD    wDevPort;                 // ?豕㊣???????
	NET_DVR_IPADDR    struDevIP;       // ?豕㊣?IP???﹞
	NET_DVR_IPADDR    struSubnetMask;  // ?豕㊣?℅???????
	NET_DVR_IPADDR    struGateway;     // ?豕㊣?????
	BYTE         bySearchProgress; //???‾??????0㊣赤??????????100㊣赤???????那??
	BYTE         byEffectData;//??﹞??????∫????,0㊣赤?????∫??1㊣赤???豕㊣???﹞??????‾??????℅‾??????∼邦
	BYTE byRes[302];
}NET_DVR_ONLINE_LOCAL_CONTROLLER_CFG, *LPNET_DVR_ONLINE_LOCAL_CONTROLLER_CFG;

typedef struct tagNET_DVR_ACS_WORK_STATUS
{
	DWORD dwSize;
	BYTE byDoorLockStatus[MAX_DOOR_NUM]; //????℅?????0-????1-??
	BYTE byDoorStatus[MAX_DOOR_NUM]; //??℅?????1-??????2-????℅?????3-??㊣?℅?????4-???“℅???
	BYTE byMagneticStatus[MAX_DOOR_NUM]; //????℅?????0-㊣?????1-????
	BYTE byCaseStatus[MAX_CASE_SENSOR_NUM]; ////??????﹞??‾℅?????0-????????1-??????
	WORD wBatteryVoltage; //??????????????????????10????????﹞邦??
	BYTE byBatteryLowVoltage; //????????﹞?????????℅?????0-﹞???1-??
	BYTE byPowerSupplyStatus; //?豕㊣?????℅?????1-???‾????????2-??????????
	BYTE byMultiDoorInterlockStatus; //?角??????℅?????0-??㊣???1-????
	BYTE byAntiSneakStatus; //﹞??㊣??℅?????0-??㊣???1-????
	BYTE byHostAntiDismantleStatus; //?‾?迆﹞???℅?????0-??㊣???1-????
	BYTE byIndicatorLightStatus; //??????℅?????0-??????1-????
	BYTE byCardReaderOnlineStatus[MAX_CARD_READER_NUM]; //???“?‾????℅?????0-????????1-????
	BYTE byCardReaderAntiDismantleStatus[MAX_CARD_READER_NUM]; //???“?‾﹞???℅?????0-??㊣???1-????
	BYTE byCardReaderVerifyMode[MAX_CARD_READER_NUM]; //???“?‾?㊣?∼?谷?∟﹞?????1-???“??2-???“+??????3-???“??4-???“?辰????
	BYTE bySetupAlarmStatus[MAX_ALARMHOST_ALARMIN_NUM];//㊣“??????????﹞?℅?????0-????㊣“?????????????﹞﹞?℅?????1-????㊣“??????????????﹞?℅???
	BYTE byAlarmInStatus[MAX_ALARMHOST_ALARMIN_NUM]; //㊣“????????㊣“??℅?????0-????㊣“?????????㊣?∼??㊣“????1-????㊣“?????????㊣?∼??㊣“??
	BYTE byAlarmOutStatus[MAX_ALARMHOST_ALARMOUT_NUM]; //㊣“????????℅?????0-????㊣“??????????㊣“????1-????㊣“??????????㊣“??
	DWORD dwCardNum; //???赤?????“????
	BYTE byRes2[32];
}NET_DVR_ACS_WORK_STATUS, *LPNET_DVR_ACS_WORK_STATUS;

typedef struct tagNET_DVR_ACS_WORK_STATUS_V50
{
	DWORD dwSize;
	BYTE byDoorLockStatus[MAX_DOOR_NUM_256]; //????℅???(?????‾????℅???)??0-????????1-????????2-???﹞㊣“????3-???﹞㊣“????4-?足??㊣“??
	BYTE byDoorStatus[MAX_DOOR_NUM_256]; //??℅???(????℅???)??1-??????2-????℅???(℅???)??3-??㊣?℅???(????)??4-???“℅???(????)
	BYTE byMagneticStatus[MAX_DOOR_NUM_256]; //????℅?????0-????????1-????????2-???﹞㊣“????3-???﹞㊣“????4-?足??㊣“??
	BYTE byCaseStatus[MAX_CASE_SENSOR_NUM]; //??????﹞??‾℅?????0-????????1-??????    
	WORD wBatteryVoltage; //??????????????????????10????????﹞邦??
	BYTE byBatteryLowVoltage; //????????﹞?????????℅?????0-﹞???1-??
	BYTE byPowerSupplyStatus; //?豕㊣?????℅?????1-???‾????????2-??????????
	BYTE byMultiDoorInterlockStatus; //?角??????℅?????0-??㊣???1-????
	BYTE byAntiSneakStatus; //﹞??㊣??℅?????0-??㊣???1-????
	BYTE byHostAntiDismantleStatus; //?‾?迆﹞???℅?????0-??㊣???1-????
	BYTE byIndicatorLightStatus; //??????℅?????0-??????1-????
	BYTE byCardReaderOnlineStatus[MAX_CARD_READER_NUM_512]; //???“?‾????℅?????0-????????1-????
	BYTE byCardReaderAntiDismantleStatus[MAX_CARD_READER_NUM_512]; //???“?‾﹞???℅?????0-??㊣???1-????
	BYTE byCardReaderVerifyMode[MAX_CARD_READER_NUM_512]; //???“?‾?㊣?∼?谷?∟﹞?????1-??????2-???“+??????3-???“??4-???“?辰????
	BYTE  bySetupAlarmStatus[MAX_ALARMHOST_ALARMIN_NUM];//㊣“??????????﹞?℅?????0-????㊣“?????????????﹞﹞?℅?????1-????㊣“??????????????﹞?℅???
	BYTE byAlarmInStatus[MAX_ALARMHOST_ALARMIN_NUM]; //∼???㊣赤??㊣“????????㊣“??℅?????0-????㊣“?????????㊣?∼??㊣“????1-????㊣“?????????㊣?∼??㊣“??
	BYTE byAlarmOutStatus[MAX_ALARMHOST_ALARMOUT_NUM]; //∼???㊣赤??㊣“????????℅?????0-????㊣“??????????㊣“????1-????㊣“??????????㊣“??
	DWORD dwCardNum; //???赤?????“????
	BYTE byFireAlarmStatus; //??﹞?㊣“??℅?????????0-??????1-???﹞㊣“????2-????㊣“??
	BYTE byBatteryChargeStatus; //????????℅?????0-???∫??1-????????2-??????
	BYTE byMasterChannelControllerStatus; //?‾?“???????‾????℅?????0-???∫??1-????????2-????
	BYTE bySlaveChannelControllerStatus; //???“???????‾????℅?????0-???∫??1-????????2-????
	BYTE byAntiSneakServerStatus; //﹞??㊣??﹞????‾℅?????0-???∫??1-????????2-??????3-????
	BYTE byRes3[3];
	DWORD dwWhiteFaceNum; //???赤????∼℅?????????????“?“??????????????
	DWORD dwBlackFaceNum; //???赤???????????????????“?“??????????????
	BYTE byRes2[108];
}NET_DVR_ACS_WORK_STATUS_V50, *LPNET_DVR_ACS_WORK_STATUS_V50;

typedef struct tagNET_DVR_CASE_SENSOR_CFG
{
	DWORD dwSize;
	BYTE  byHostBuzzer;  //??﹞??‾?迆﹞??迄?‾??0-????﹞???1-??﹞?
	BYTE  byRes1[3];
	BYTE  byCardReaderBuzzer[MAX_CARD_READER_NUM]; //??﹞????“?‾﹞??迄?‾??1-??﹞???0-????﹞?
	BYTE  byAssociateAlarmOut[MAX_ALARMHOST_ALARMOUT_NUM];  //??????﹞???㊣“????????1-??????0-??????
	BYTE  byDoorOpen[MAX_DOOR_NUM]; //????1-N???????辰????0-????????1-?????“???辰????
	BYTE  byDoorClose[MAX_DOOR_NUM]; //????1-N????????㊣???0-????????1-?????“????㊣???
	BYTE  byRes2[64];
}NET_DVR_CASE_SENSOR_CFG, *LPNET_DVR_CASE_SENSOR_CFG;

typedef enum _ENUM_UPGRADE_TYPE
{
	ENUM_UPGRADE_DVR = 0, //???“?豕㊣?????
	ENUM_UPGRADE_ADAPTER = 1, //DVR?????‾????
	ENUM_UPGRADE_VCALIB = 2,  //??????????
	ENUM_UPGRADE_OPTICAL = 3, //?????迆????
	ENUM_UPGRADE_ACS = 4, //????????????
	ENUM_UPGRADE_AUXILIARY_DEV = 5,//?“?迆?豕㊣?????
	ENUM_UPGRADE_LED = 6, //LED﹞????“???????“????
	ENUM_UPGRADE_INTELLIGENT = 7 //?????????豕㊣?????
}ENUM_UPGRADE_TYPE;

typedef struct tagNET_DVR_ACS_EVENT_INFO
{
	DWORD dwSize;
	BYTE byCardNo[ACS_CARD_NO_LEN]; //?“??????0???∫
	BYTE byCardType; //?“?角????1-???“?“??2-???????“??3-???????“??4-???邦?“??5-?????“??6-?????“??7-??㊣??“??8-?????“????0???∫
	BYTE byWhiteListNo; //∼℅????????,1-8????0???∫
	BYTE byReportChannel; //㊣“???????“????1-??﹞???????2-????℅谷1??????3-????℅谷2????????0???∫
	BYTE byCardReaderKind; //???“?‾?????????角??0-???∫??1-IC???“?‾??2-?赤﹞??∟???“?‾??3-?????????“?‾,4-?????﹞
	DWORD dwCardReaderNo; //???“?‾㊣角??????0???∫
	DWORD dwDoorNo; //??㊣角??(????㊣角??)????0???∫?“?㊣?????豕㊣??????㊣?“???豕㊣??㊣????1????﹞??辰????2????﹞??辰??
	DWORD dwVerifyNo; //?角???“???∟?辰??????0???∫
	DWORD dwAlarmInNo;  //㊣“????????????0???∫
	DWORD dwAlarmOutNo; //㊣“????????????0???∫
	DWORD dwCaseSensorNo; //??????﹞??‾㊣角??
	DWORD dwRs485No;    //RS485?“????????0???∫
	DWORD dwMultiCardGroupNo; //??℅谷㊣角??
	WORD wAccessChannel;    //???㊣?“????
	BYTE  byDeviceNo;    //?豕㊣?㊣角??????0???∫
	BYTE  byDistractControlNo;//﹞????‾㊣角??????0???∫
	DWORD dwEmployeeNo; //?∟??????0???∫
	WORD wLocalControllerID; //?????????‾㊣角????0-?????‾?迆??1-64?迆㊣赤?????????‾
	BYTE  byInternetAccess; //????ID???“1-????????1,2-????????2,3-????????1??
	BYTE    byType;     //﹞????角????0:???㊣﹞???,1-24???㊣﹞???,2-???㊣﹞??? ,3-????﹞?????4-???℅﹞??? 5-????﹞??? 6-????﹞??? 7-24???㊣???迄﹞???  8-24???㊣?“?迆﹞?????9-24???㊣????﹞???,10-???????㊣????﹞?????11-???????㊣????﹞??? 0xff-??
	BYTE  byMACAddr[MACADDR_LEN]; //???赤???﹞????0???∫
	BYTE  bySwipeCardType;//???“?角????0-???∫??1-??????
	BYTE  byRes2;
	DWORD dwSerialNo; //?????‾????????0???∫
	BYTE  byChannelControllerID; //?“???????‾ID????0???∫??1-?‾?“???????‾??2-???“???????‾
	BYTE  byChannelControllerLampID; //?“???????‾??∼?ID????0???∫?“???∫﹞??∫1-255??
	BYTE  byChannelControllerIRAdaptorID; //?“???????‾?足??℅???∼?ID????0???∫?“???∫﹞??∫1-255??
	BYTE  byChannelControllerIREmitterID; //?“???????‾?足??????ID????0???∫?“???∫﹞??∫1-255??
	BYTE  byRes[4];
}NET_DVR_ACS_EVENT_INFO, *LPNET_DVR_ACS_EVENT_INFO;

typedef struct tagNET_DVR_ACS_EVENT_INFO_EXTEND
{
	DWORD dwFrontSerialNo; //?????‾????????0???∫?“????℅?????0?????“?迄??dwSerialNo??????﹞????∫??????????℅???????0?????“?迄????℅?????dwSerialNo℅?????????????﹞????∫???????“?‾??????????㊣“???????車????dwSerialNo?????????谷????
	BYTE  byUserType; //???㊣?角????0-???∫??1-???“???“?‾??????2-??㊣??“﹞???????3-??????????4-???赤?㊣
	BYTE  byCurrentVerifyMode; //???“?‾?㊣?∼?谷?∟﹞?????0-???∫??1-??????2-???“+??????3-???“??4-???“?辰??????5-??????6-????+??????7-?????辰???“??8-????+???“??9-????+???“+??????10-?????辰?????辰???“?辰??????11-????+??????12-????+??????13-????+???“??14-??????15-?∟??+??????16-?????辰??????17-?∟??+??????18-?∟??+????+??????19-????+????+???“??20-????+????+??????21-?∟??+??????22-?????辰????+???“??23-?????辰??????24-???“?辰?????辰??????25-???“?辰??????26-???“?辰?????辰??????27-???“?辰?????辰????
	BYTE  byCurrentEvent; //??﹞??????㊣??????0-???∫??1-???“???㊣????????2-﹞??“??????????
	BYTE  byRes1;
	BYTE  byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID???“?????豕㊣??????????????????∟???“???㊣ID??℅?????byEmployeeNo???“????????????byEmployeeNo??℅?????dwEmployeeNo????????℅????????????????????????“?辰???∫????????????????byEmployeeNo℅?????????℅???????????????????dwEmployeeNo℅?????
	BYTE  byAttendanceStatus; //????℅?????0-???“??,1-??∼角??2-??∼角??3-??????????4-?芍????????5-??????∼角??6-?芍????∼角
	BYTE  byStatusValue; //????℅?????
	BYTE  byRes2[2];
	BYTE  byUUID[NET_SDK_UUID_LEN/*36*/]; //UUID?“??℅??????????????????“?????????芍??????
	BYTE  byRes[88];
}NET_DVR_ACS_EVENT_INFO_EXTEND, *LPNET_DVR_ACS_EVENT_INFO_EXTEND;

typedef struct tagNET_DVR_ACS_ALARM_INFO
{
	DWORD dwSize;
	DWORD dwMajor; //㊣“???‾?角?????????那?“??
	DWORD dwMinor; //㊣“?????角?????????那?“??
	NET_DVR_TIME struTime; //?㊣??
	BYTE    sNetUser[MAX_NAMELEN];//??????℅‾?????∫??
	NET_DVR_IPADDR    struRemoteHostAddr;//?????‾?迆???﹞
	NET_DVR_ACS_EVENT_INFO struAcsEventInfo; //?那??????
	DWORD dwPicDataLen;   //?????????車????????0??㊣赤???車????????
	char    *pPicData;
	WORD  wInductiveEventType; //?谷???????角????0-???∫?????∫????????????﹞?0???車??㊣“???角???“???谷???????角????﹞???﹞??辰?“??????㊣“???‾???角???“dwMajor??dwMinor????﹞?
	BYTE    byPicTransType;        //????????????﹞???: 0-????????1-url
	BYTE    byRes1;             //㊣???℅???
	DWORD dwIOTChannelNo;    //IOT?“????
	char    *pAcsEventInfoExtend;    //byAcsEventInfoExtend??1?㊣??㊣赤?????辰????NET_DVR_ACS_EVENT_INFO_EXTEND?芍????
	BYTE    byAcsEventInfoExtend;    //pAcsEventInfoExtend??﹞????∫??0-???∫??1-???∫
	BYTE    byTimeType; //?㊣???角????0-?豕㊣?㊣????㊣????1-UTC?㊣???“struTime???㊣????
	BYTE byRes[10];
}NET_DVR_ACS_ALARM_INFO, *LPNET_DVR_ACS_ALARM_INFO;

#define JUDGE_MAX_VIDEOOUT_NUM 9

typedef struct tagNET_DVR_AUDIO_ACTIVATION_CFG
{
	DWORD   dwSize;
	BYTE    byEnable;    //??﹞?????
	BYTE    byRes1[3];
	DWORD   dwChanNo;    //?????∟?????????“???? 
	BYTE    bySensitivity; //?谷???? 1-100???谷??????????㊣赤???????????????????????????????∟?????????谷??????????㊣赤???豕?????????????????????????????????∟??????
	BYTE    byPriority;     //??????  0-??????0??1-??????1?? ?????車??㊣?????
	WORD    wDelayTime;  //?????∟???芍???????????????㊣????????s, ???㊣?車℅????????∟????1??????????
	BYTE    byRes2;      //㊣???
	BYTE    byEnablePreset; //??﹞??????∟????
	WORD    wPreset;    //?∟????
	WORD    wBase;           /*?迄℅???㊣角??*/
	BYTE    byRes3[2];
	BYTE    byVoChanNo[JUDGE_MAX_VIDEOOUT_NUM];          //?????∟????﹞?????????????????????0㊣赤??????????1-㊣赤??????????㊣那㊣赤???“?????辰??????0-VGA1,1-VGA2, 2-VGA3,3-VGA4,4-VGA5~10,5-HDMI1,6-HDMI2
	BYTE    byRes[255]; //㊣???
}NET_DVR_AUDIO_ACTIVATION_CFG, *LPNET_DVR_AUDIO_ACTIVATION_CFG;

typedef struct tagNET_DVR_INFRARED_OUTPUT_CTRL_CFG
{
	DWORD  dwSize;       //?芍?????車??
	BYTE   byIROutPort;   //?足???????‾????1-?足????????1??2-?足????????2
	BYTE   byIRCmdIndex; //?足???∫???邦?????????‾????
	BYTE   byRes[254]; //㊣???
}NET_DVR_INFRARED_OUTPUT_CTRL_CFG, *LPNET_DVR_INFRARED_OUTPUT_CTRL_CFG;

#define  MAX_IR_CMD_NAME_LEN    32   //?足???????邦???????∟??
#define  MAX_IR_CMD_NUM         32   //?足???邦??????

typedef struct tagNET_DVR_INFRARED_CMD_INFO   //?足???邦??????????
{
	char   sCmdName[MAX_IR_CMD_NAME_LEN];  //?足???邦??????
	BYTE   byRes[8];         //㊣???
} NET_DVR_INFRARED_CMD_INFO, *LPNET_DVR_INFRARED_CMD_INFO;


typedef struct tagNET_DVR_INFRARED_LEARN_CODE_CFG_
{
	DWORD  dwSize;  //?芍?????車??
	BYTE      sIROutName[MAX_IR_CMD_NAME_LEN];  //?足????????????
	NET_DVR_INFRARED_CMD_INFO  struIRCmdInfo[MAX_IR_CMD_NUM];  //?足???邦??℅?????
	BYTE   byRes[256];
} NET_DVR_INFRARED_CMD_NAME_CFG, *LPNET_DVR_INFRARED_CMD_NAME_CFG;

typedef enum tagIR_LEARN_SEND_DATA_TYPE_ENUM
{
	ENUM_SENDDATA = 0x0, //﹞???????
	ENUM_SEND_LEARN_IR_CMD_START,  //﹞????足???∫??
	ENUM_SEND_LEARN_IR_CMD_END = 0x2  //?足???∫???芍?? 
}IR_LEARN_SEND_DATA_TYPE_ENUM;


typedef struct tagNET_DVR_INFRARED_LEARN_INFO
{
	DWORD dwSize;       //?芍?????車??
	BYTE  byIROutPort;  //?足???????‾????1-?足????????1??2-?足????????2
	BYTE  byIRCmdIndex; //?足???∫???邦?????????‾?? 
	BYTE  byRes[30];    //㊣???   
} NET_DVR_INFRARED_LEARN_INFO, *LPNET_DVR_INFRARED_LEARN_INFO;

typedef struct tagNET_DVR_INFRARED_LEARN_END
{
	DWORD  dwSize;       //?芍?????車??
	BYTE   bySaveLearnInfo;      //㊣????∫????????0-㊣?????1-??㊣???
	BYTE   byRes[255];
} NET_DVR_INFRARED_LEARN_END, *LPNET_DVR_INFRARED_LEARN_END;

#define MAX_VIDEOIN_TYPE_NUM  10    //℅??車?∫???????????????角??

typedef struct tagNET_DVR_VIDEOIN_TYPE_INFO
{
	WORD  wInType;   //???????角??  0-SDI,1-VGA, 2-HDMI,3-IP,4-PIP
	WORD  wInNum;  //?∫????????????
	WORD  wStartNo;  //???????????????? 
	BYTE   byRes[6];
}NET_DVR_VIDEOIN_TYPE_INFO, *LPNET_DVR_VIDEOIN_TYPE_INFO;

typedef  struct tagNET_DVR_TRIAL_SYSTEM_INFO
{
	DWORD dwSize;    //?芍?????車??
	BYTE   byVideoInTypeNum;   //???????????角??????
	BYTE   byRes1[3];
	NET_DVR_VIDEOIN_TYPE_INFO struVideoIn[MAX_VIDEOIN_TYPE_NUM];  //??????????
	BYTE   byRes[512];  //㊣???
} NET_DVR_TRIAL_SYSTEM_INFO, *LPNET_DVR_TRIAL_SYSTEM_INFO;

typedef struct tagNET_DVR_CASE_INFO
{
	DWORD   dwSize;       //?芍?????車??
	BYTE    byCaseNo[CASE_NO_LEN];  //∼???㊣角??
	BYTE    byCaseName[CASE_NAME_LEN]; //∼?????????
	BYTE    byLitigant1[LITIGANT_LEN]; //?㊣????1??
	BYTE    byLitigant2[LITIGANT_LEN]; //?㊣????2??
	BYTE    byChiefJudge[CHIEF_JUDGE_LEN];//?車???∟
	BYTE    byCaseType; //∼????角????1-????∼?????2-????∼?????3- sCaseTypeCustom?迆?∫
	BYTE    byShowCaseInfoTime; /* ∼????????????㊣??,??????, ????﹞??∫1~30*/
	BYTE    byRes1[2]; //㊣???
	char    sCaseTypeCustom[NET_SDK_CASETYPE_LEN/*32*/];//℅??“??∼????角??
	BYTE    byRes[220]; //㊣???
}NET_DVR_CASE_INFO, *LPNET_DVR_CASE_INFO;

#define     MICROPHONE_NUM            16
#define     FAN_NUM                8
#define     FPGA_NUM                8
#define     MAIN_BOARD                8
#define  LOCAL_INPUT_NUM        24
#define  LAMP_STATE_NAME        32
#define  LAMP_NAME                32
#define FILE_NAME_LEN            32
typedef  struct _NET_DVR_REMOTE_PLAY_
{
	DWORD    dwSize;
	BYTE    byFileName[FILE_NAME_LEN];   //?豕????﹞???????????
	BYTE    byVideoOut[7];    //??﹞???????
	BYTE    byRes1[5];
	BYTE    byType;  // 0-????????1-??????﹞???2-??????﹞?
	BYTE      byRes[31];  //㊣???
}NET_DVR_REMOTE_PLAY, *LPNET_DVR_REMOTE_PLAY;

typedef  struct _NET_DVR_TRIAL_MICROPHONE_STATUS
{
	DWORD     dwSize;
	BYTE    byMicrophoneStatus[MICROPHONE_NUM];//?車??﹞?℅?????㊣那㊣赤???車??﹞???0-??????1-??????
	BYTE    byRes[32];  //㊣???
}NET_DVR_TRIAL_MICROPHONE_STATUS, *LPNET_DVR_TRIAL_MICROPHONE_STATUS;

typedef  struct _NET_DVR_TRIAL_HOST_STATUS
{
	DWORD  dwSize;
	DWORD  dwFanSpeed[FAN_NUM];//﹞???℅???
	WORD   wMainBoardTemp[MAIN_BOARD]; //?‾∼?????
	BYTE   byFpgaTempWarn[FPGA_NUM];     //??℅谷0-?‾∼?????????㊣“??℅???????℅谷1-FPGA????㊣“??℅???????1-????㊣“??℅???   0-??????㊣“??℅???
	BYTE   byRes[32];  //㊣???
}NET_DVR_TRIAL_HOST_STATUS, *LPNET_DVR_TRIAL_HOST_STATUS;

typedef  struct _NET_DVR_LOCAL_INPUT_INFO_
{
	DWORD      dwSize;
	BYTE      byChannelName[NAME_LEN];        //?“??????
	BYTE      byRes[32];  //㊣???
}NET_DVR_LOCAL_INPUT_INFO, *LPNET_DVR_LOCAL_INPUT_INFO;

typedef struct tagNET_DVR_LAMP_STATUS
{
	BYTE     byEnable;  //??﹞?????
	BYTE     byRes1[3];
	BYTE     byLampName[LAMP_NAME];   //Lamp ??????㊣“??????3??4????Lamp1??㊣“??5??6????????lamp2??
	BYTE     byLampState1[LAMP_STATE_NAME];   //℅???1?????????? 
	BYTE     byLampState2[LAMP_STATE_NAME];   //℅???2????????
	BYTE     byLampState3[LAMP_STATE_NAME];   //℅???3????????
	BYTE     byRes[32];
}NET_DVR_LAMP_STATUS, *LPNET_DVR_LAMP_STATUS;

typedef  struct _NET_DVR_LAMP_OUT
{
	DWORD        dwSize;
	NET_DVR_LAMP_STATUS  struLampInfo[2]; //??℅谷0-㊣赤??lamp1,??℅谷1㊣赤??lamp2
	BYTE  byRes[256];  //㊣???
}NET_DVR_LAMP_OUT, *LPNET_DVR_LAMP_OUT;

typedef  struct _NET_DVR_LAMP_CONTROL
{
	DWORD     dwSize;
	BYTE  byLampNo; //Lamp㊣角????????????Lamp??℅谷??㊣那
	BYTE  byLampStateNo; //Lamp℅???㊣角?? 0-????????1-℅???1, 2-℅???2?? 3-℅???3  ????LAMP??????????℅???
	BYTE  byRes[14];  //㊣???
}NET_DVR_LAMP_CONTROL, *LPNET_DVR_LAMP_CONTROL;


//???㊣????
typedef struct tagNET_DVR_TPS_PARAM
{
	BYTE                byStart;          // ??????
	BYTE                byCMD;         // ?邦??????01-??????????02-??????????03-????℅???????(??03?㊣??????byLaneState??byQueueLen???∫)??04-?角????℅????“??04?㊣??wLoopState??wStateMask???∫??㊣赤??byLane???????角????????????℅?????
	WORD                wSpaceHeadway;        //???﹞???角?????℅??????
	WORD                wDeviceID;      // ?豕㊣?ID
	WORD                wDataLen;       // ?????∟??
	BYTE                byLane;         // ??????????
	BYTE                bySpeed;        // ?????????“KM/H??
	BYTE                  byLaneState;     // ????℅?????0-??℅?????1-???“??2-???﹞??3-????
	BYTE                  byQueueLen;       // ????℅??????????∟???“㊣???50?℅??
	WORD                wLoopState;         //????℅???????????㊣赤??????????℅?????????㊣角???????﹞???邦???????????車??℅???1-??????0-????
	WORD                wStateMask;         //????℅?????????????????1????wLoopState℅????????∫????0㊣赤?????∫
	DWORD               dwDownwardFlow;     //?㊣?∼???? ???????????‾??
	DWORD               dwUpwardFlow;       //?㊣?∼???? ???????????‾??
	BYTE                byJamLevel;         //???????????㊣byLaneState??3?㊣???∫??1-?芍????2-??????3-????
	BYTE               byVehicleDirection; //0-??????1-??????????2-????????
	BYTE               byJamFlow;          //?????????‾????????????????????㊣“??????????????????
	BYTE               byRes1[7];        //㊣???
	WORD                wTimeHeadway;        // ???﹞?㊣?角??????????
}NET_DVR_TPS_PARAM, *LPNET_DVR_TPS_PARAM;

//TPS???㊣????????????
typedef struct tagNET_DVR_TPS_REAL_TIME_INFO
{
	DWORD                 dwSize;          // ?芍?????車??
	DWORD                 dwChan;//?“????
	NET_DVR_TIME_V30      struTime;    //?足???㊣??
	NET_DVR_TPS_PARAM     struTPSRealTimeInfo;// ???“????????????
#if (defined(OS_WINDOWS64) || defined(OS_POSIX64))//win64?∼linux64????????8℅???
	BYTE*                 pAddInfoBuffer;
#else
											  /*????????????,???辰NET_DVR_TPS_ADDINFO?芍????*/
	BYTE*                 pAddInfoBuffer;
	BYTE                  byRes2[4];
#endif  
	/*????????㊣那???“????﹞???NET_DVR_TPS_ADDINFO?芍??????,0-??????????, 1-????????????*/
	BYTE                  byAddInfoFlag;
	BYTE                  byRes[15];      // ㊣???
}NET_DVR_TPS_REAL_TIME_INFO, *LPNET_DVR_TPS_REAL_TIME_INFO;

//????????
typedef struct tagNET_DVR_TPS_LANE_PARAM
{
	BYTE                  byLane;             // ??????????
	BYTE                  bySpeed;             // ???????????迄????
	WORD                  wArrivalFlow;        //?????‾??
	DWORD               dwLightVehicle;      // ??????????
	DWORD               dwMidVehicle;        // ??????????
	DWORD               dwHeavyVehicle;      // ??????????
	DWORD               dwTimeHeadway;      // ???﹞?㊣?角??????????
	DWORD               dwSpaceHeadway;     // ???﹞???角?????℅??????
	float               fSpaceOccupyRation; // ????????????∼?﹞?㊣?????,??????*1000
	float               fTimeOccupyRation;  // ?㊣??????????∼?﹞?㊣?????,??????*1000
	BYTE                  byStoppingTimes; //???迄????????
	BYTE               byQueueLen;       // ????℅??????????∟???“㊣???50?℅??
	BYTE                byFlag;          //????㊣那????0-㊣赤??T1?㊣?????????芍??,1-㊣赤??T2?㊣????????
	BYTE                  byVehicelNum;         //???辰??????
	WORD                  wDelay;         //???迄???車
	BYTE                byRes1[6];               // ㊣???
	DWORD               dwNonMotor;      // ﹞??迆????????
}NET_DVR_TPS_LANE_PARAM, *LPNET_DVR_TPS_LANE_PARAM;

typedef struct tagNET_DVR_PANORAMA_LINKAGE
{
	DWORD            dwSize;
	BYTE             byEnable;//0-??㊣???1-????
	BYTE             byRes[127];
}NET_DVR_PANORAMA_LINKAGE, *LPNET_DVR_PANORAMA_LINKAGE;

// ???“????????????
typedef struct tagNET_DVR_TPS_STATISTICS_PARAM
{
	BYTE                byStart;          // ??????
	BYTE                byCMD;         // ?邦?????? 08-?“?㊣??℅谷????????
	BYTE                byRes[2];        // ?∟??℅???
	WORD                wDeviceID;      // ?豕㊣?ID
	WORD                wDataLen;       // ?????∟??
	BYTE                byTotalLaneNum;  // ???∫????℅???
	BYTE                byRes1[15];
	NET_DVR_TIME_V30    struStartTime;    //?????????㊣??
	DWORD                dwSamplePeriod;    //?????㊣??,??????
	NET_DVR_TPS_LANE_PARAM  struLaneParam[MAX_TPS_RULE/*8*/];
}NET_DVR_TPS_STATISTICS_PARAM, *LPNET_DVR_TPS_STATISTICS_PARAM;

//TPS????????????????
typedef struct tagNET_DVR_TPS_STATISTICS_INFO
{
	DWORD                 dwSize;          // ?芍?????車??
	DWORD                 dwChan;//?“????
	NET_DVR_TPS_STATISTICS_PARAM     struTPSStatisticsInfo;// ???“????????????
	BYTE                  byRes[128];      // ㊣???
}NET_DVR_TPS_STATISTICS_INFO, *LPNET_DVR_TPS_STATISTICS_INFO;

#define     DPC_CORRECT                1    //????
#define     DPC_CORRECT_CANCEL         2    //????????
#define     DPC_CROSS_DISPALY_OPEN     3    //?????足????℅???????????
#define     DPC_CROSS_DISPALY_CLOSE    4    //?????足????℅?????????㊣?
#define     DPC_POINT                  5    //????????℅?㊣那
#define     DPC_UP                     6    //????????℅?㊣那???辰??????
#define     DPC_DOWN                   7    //????????℅?㊣那???辰??????
#define     DPC_RIGHT                  8    //????????℅?㊣那???辰??????
#define     DPC_LEFT                   9    //????????℅?㊣那???辰℅車????
#define     DPC_ALL_CORRECT            10   //?迄??????????
#define     DPC_SAVE                   11   //????㊣???

typedef struct tagNET_DVR_DPC_PARAM
{
	DWORD   dwSize;
	DWORD   dwChannel; //?“????
	WORD    wCtrlType;//?????那?“??
					  /*
					  ??????????????????????????????????wCtrlType??℅‾?角????????????????
					  ℅??????????豕㊣???℅????????????????豕???????????????????㊣wCtrlType??struPoint???????∫??
					  */
	BYTE    byDPCMode;//??????????????0-??????????1-℅???????
	BYTE    byRes;
	NET_VCA_POINT struPoint; /*??????????????℅?㊣那???谷??????0-1*/
	BYTE    byRes1[64];
}NET_DVR_DPC_PARAM, *LPNET_DVR_DPC_PARAM;

//﹞??迄????????(FFC)????????
typedef struct tagNET_DVR_FFC_MANUAL_INFO
{
	DWORD  dwSize;
	DWORD  dwChannel; //?“????
	BYTE   byRes[64];
}NET_DVR_FFC_MANUAL_INFO, *LPNET_DVR_FFC_MANUAL_INFO;

//﹞??迄????????(FFC)㊣??∼????
typedef struct tagNET_DVR_FFC_BACKCOMP_INFO
{
	DWORD  dwSize;
	DWORD  dwChannel; //?“????
	BYTE   byRes[64];
}NET_DVR_FFC_BACKCOMP_INFO, *LPNET_DVR_FFC_BACKCOMP_INFO;

//????﹞????‾????℅???
typedef struct tagNET_DVR_STORAGE_SERVER_SWITCH_CFG
{
	DWORD  dwSize;
	/*??????????????∼???㊣赤????0-??㊣???1-????
	??℅谷0-?????足??℅???(?????∫??)
	??℅谷1-㊣“??℅???(?????∫??)
	????
	*/
	BYTE  byPicEnable[MAX_PIC_SWITCH_STORAGE_SERVER];
	/*??????????????????∼???㊣赤????0-??㊣???1-????
	??℅谷0-??????(?????∫??)
	??℅谷1-???‾??(?????∫??)
	????
	*/
	BYTE  byAddInfoEnable[MAX_INFO_SWITCH_STORAGE_SERVER];
	BYTE  byRes[324];
} NET_DVR_STORAGE_SERVER_SWITCH_CFG,
*LPNET_DVR_STORAGE_SERVER_SWITCH_CFG;

//???????????∟
typedef struct tagNET_DVR_FORCESTOP_FORENSICS_CFG
{
	DWORD  dwSize;
	DWORD  dwChannel; //?“????
	BYTE    byRes[64];
}NET_DVR_FORCESTOP_FORENSICS_CFG, *LPNET_DVR_FORCESTOP_FORENSICS_CFG;

typedef struct tagNET_DVR_DEC_VCA_ALARM
{
	DWORD dwSize;
	DWORD dwDisplayNo; //?迆?迆????㊣“?????????“????
	BYTE  bySubWinNo;  //?迆?迆????㊣“????℅??∼????
	BYTE  byRes1[3];
	NET_DVR_TIME_V30 struTime; //?迆?迆㊣“???㊣??
	NET_DVR_PU_STREAM_CFG_V41 struSourceInfo; //???‾??????
	BYTE  *byAlarmPic; //㊣“????????????
	DWORD dwAlarmPicSize; //㊣“???????車??????????℅???
	BYTE  byRes2[64];
}NET_DVR_DEC_VCA_ALARM, *LPNET_DVR_DEC_VCA_ALARM;

typedef struct tagNET_DVR_DEC_VCA_ALARM_LOGO
{
	BYTE byEnableLogo;  //??﹞?????????㊣“??logo??0-????????﹞?0-????
	BYTE byFlash;   //??﹞???????0-????????﹞?0-????
	WORD wFlashTime; //?????㊣??????????????????﹞??∫???????‾?????????? 
	DWORD dwLogoX;  //logo X℅?㊣那???????∼??℅??車????1920*1920
	DWORD dwLogoY;  //logo Y℅?㊣那
	BYTE byRes[32];
}NET_DVR_DEC_VCA_ALARM_LOGO, *LPNET_DVR_DEC_VCA_ALARM_LOGO;

typedef struct tagNET_DVR_DEC_VCA_ALARM_PIC
{
	BYTE byUploadPic; //????㊣“???㊣??﹞?????㊣“????????0-????????﹞?0-????
	BYTE byOverlayTargetInfo; //㊣“????????﹞???????㊣那??????0-????????﹞?0-????
	BYTE byOverlayRuleInfo; //㊣“????????﹞????????????辰??????0-????????﹞?0-????
	BYTE byPicQuality;            //???????????? 0-℅??? 1-???? 2-??∼?
								  /*?????車?? ?????“????????????
								  0-CIF??           1-QCIF??           2-D1??         3-UXGA(1600x1200), 4-SVGA(800x600),5-HD720p(1280x720)??
								  6-VGA??           7-XVGA??           8-HD900p??     9-HD1080??     10-2560*1920??
								  11-1600*304??     12-2048*1536??     13-2448*2048,  14-2448*1200?? 15-2448*800??
								  16-XGA(1024*768), 17-SXGA(1280*1024),18-WD1(960*576/960*480),      19-1080i,      20-576*576??
								  21-1536*1536,     22-1920*1920,      23-320*240,    24-720*720,    25-1024*768,
								  26-1280*1280,     27-1600*600,       28-2048*768,   0xff-Auto(?????㊣?∼???‾﹞?㊣???)*/
	BYTE byPicSize;
	BYTE byRes[27];
}NET_DVR_DEC_VCA_ALARM_PIC, *LPNET_DVR_DEC_VCA_ALARM_PIC;

typedef struct tagNET_DVR_DEC_VCA_ALARM_CFG
{
	DWORD dwSize;
	NET_DVR_DEC_VCA_ALARM_LOGO struAlarmLogo; //????㊣“??logo????????    
	NET_DVR_DEC_VCA_ALARM_PIC  struAlarmPic;  //????㊣“??????????
	BYTE byRes[64];
}NET_DVR_VCA_ALARM_CFG, *LPNET_DVR_DEC_VCA_ALARM_CFG;

#define MAX_OSD_LEN                 64   //??????OSD?∟??
typedef struct tagNET_DVR_OUTPUT_PIC_INFO
{
	DWORD  dwSize;
	BYTE   sPicName[NAME_LEN];//????????
	BYTE   byUsed; //??﹞?????????0-????????1-????
	BYTE   byRes[31];
}NET_DVR_OUTPUT_PIC_INFO, *LPNET_DVR_OUTPUT_PIC_INFO;

typedef struct tagNET_DVR_OUTPUT_PIC_CFG
{
	DWORD dwSize;
	DWORD  dwOutputPicNo;  //?????辰??
	BYTE   byEnable; //logo??﹞???????1-??????0-????
	BYTE   byRes1[3];
	NET_DVR_RECTCFG_EX struRect;//logo????????????﹞??∫℅??車????1920*1920
	BYTE   byFlash;  //??﹞?????1-??????0-??????
	BYTE   byTranslucent; //??﹞?∼????‾1-∼????‾??0-??∼????‾
	BYTE   byRes2[2];                //㊣???
	DWORD  dwOutputPicWinNo; //???????????∼?????“1℅????豕㊣???+1℅???????????+2℅??????????????∼??????,?????????㊣???∫
	BYTE   byRes3[28];
}NET_DVR_OUTPUT_PIC_CFG, *LPNET_DVR_OUTPUT_PIC_CFG;

typedef struct tagNET_DVR_OUTPUT_OSD_CFG
{
	DWORD   dwSize;
	BYTE     byEnable; //OSD??﹞???????0-????????1-????
	BYTE     byFontSize; //℅????車????1-?車??2-????3-??
	BYTE     byOSDColor; //OSD??????????0-?????? 1-????2-∼℅??3-?足??4-????5-??
	BYTE     byRes1[1];
	BYTE     byOsdContent[MAX_OSD_LEN]; //OSD????
	NET_DVR_RECTCFG_EX struRect;//OSD????????????﹞??∫℅??車????1920*1920
	DWORD dwOsdWinNo; //??????OSD?∼?????“1℅????豕㊣???+1℅???????????+2℅???OSD?∼?????????????迄???㊣???∫
	BYTE     byRes2[32];                //㊣???
}NET_DVR_OUTPUT_OSD_CFG, *LPNET_DVR_OUTPUT_OSD_CFG;

typedef struct tagNET_DVR_CHAN_RELATION_RESOURCE
{
	DWORD dwSize;
	DWORD dwDisplayChan; //?????“?????“1℅????豕㊣???+1℅???㊣???+2℅????????“??????
	BYTE  byRelateAudio; //??﹞?????℅??∼??????
	BYTE  byRes1[3];
	DWORD dwSubWinNo; //??????????℅??∼?????“1℅???????????+1℅???℅??∼????+2℅????∼??????
	DWORD dwChannel; //㊣角???“???????????????㊣???∫
	BYTE byRes2[32];
}NET_DVR_CHAN_RELATION_RESOURCE, *LPNET_DVR_CHAN_RELATION_RESOURCE;

typedef struct tagNET_DVR_ALARM_CHAN_ABLITITY
{
	DWORD    dwSize;
	BYTE    bySensorChan[64];//???????“?? ??㊣那㊣赤???“???? 0-㊣赤?????∫????1-㊣赤???∫??
	BYTE    byAlarmInChan[64];//㊣“???????“?? ??㊣那㊣赤???“???? 0-㊣赤?????∫????1-㊣赤???∫??
	BYTE    byAlarmOutChan[64];//㊣“???????“?? ??㊣那㊣赤???“???? 0-㊣赤?????∫????1-㊣赤???∫??
	BYTE    by485Chan[64];//485?“?? ??㊣那㊣赤???“???? 0-㊣赤?????∫????1-㊣赤???∫??
	BYTE    byRes[128];
}NET_DVR_ALARM_CHAN_ABLITITY, *LPNET_DVR_ALARM_CHAN_ABLITITY;

typedef struct
{
	DWORD    dwSize;
	BYTE    byOutScale[8];//??㊣那㊣赤???‾?“??????0-㊣赤?????∫????1-㊣赤??12V??2-㊣赤??24V
	BYTE    byRes[16];
}NET_DVR_OUT_SCALE_CFG, *LPNET_DVR_OUT_SCALE_CFG;

typedef    struct     tagNET_DVR_MONITOR_LOCATION_COND
{
	DWORD   dwSize;
	DWORD   dwChan;
	/*
	0 ㊣赤?????? ℅???MPR?????“?角????﹞?℅??? IPC??????
	1 ㊣赤?????? ℅??? HVT ?????“?足?“IPC??????
	*/
	BYTE    byRelateType;
	BYTE    byRes[63];        //㊣???
}NET_DVR_MONITOR_LOCATION_COND, *LPNET_DVR_MONITOR_LOCATION_COND;

typedef    struct     tagNET_DVR_MONITOR_LOCATION_CFG
{
	DWORD   dwSize;
	BYTE    byMonitoringSiteID[MAX_ID_LEN/*48*/];        //?角????㊣角??
	BYTE    byDeviceID[MAX_ID_LEN/*48*/];                //?豕㊣?㊣角??
	BYTE    byDirectionNo;        //?角??﹞??辰㊣角??,0-??,1-????,2-????,3-???辰,4-?????辰?‾,5-?????辰㊣㊣,6-???‾?辰??,7-??㊣㊣?辰??,8-????
	BYTE    byRes1[3];        //㊣???
	BYTE    byMonitorInfo[MONITORSITE_ID_LEN/*48*/];      //?角?????????豕??
	BYTE    byRes[128];        //㊣???
}NET_DVR_MONITOR_LOCATION_CFG, *LPNET_DVR_MONITOR_LOCATION_CFG;

typedef struct tagNET_DVR_REMOTECONTROL_COND
{
	DWORD   dwSize;    //?芍???車??
	DWORD   dwChannel; //?“????
	BYTE    byRes[64];
}NET_DVR_REMOTECONTROL_COND, *LPNET_DVR_REMOTECONTROL_COND;

typedef struct tagNET_DVR_REMOTECONTROL_STATUS_
{
	DWORD   dwSize;               //?芍???車??
	BYTE    byAlarmStatus;//??﹞?℅?????0-㊣???,1-?﹞﹞?,2-??﹞?
	BYTE    byRes[3];
	WORD    wAlarmDealyTime;//??﹞??????㊣????????s
	WORD    wDisAlarmDealyTime;//?﹞﹞??????㊣????????s
	BYTE    byRes1[64];
} NET_DVR_REMOTECONTROL_STATUS, *LPNET_DVR_REMOTECONTROL_STATUS;

typedef struct tagNET_DVR_SECURITY_CFG
{
	DWORD    dwSize;
	BYTE    byCommuMode;//???????谷?“????????0-??????????1-∼???????
	BYTE    byRes1[2];
	BYTE    byWebAuthentication;    //web???∟???? 0-digest??1-basic??2-digest/basic;????basic???∟
	BYTE    byRtspAuthentication;   //rtsp???∟???? 0-disable??1-basic??2-digest??3-digest/basic;????basic???∟
	BYTE    byTelnetServer;         //telnet?豕?? 0????????1??????
	BYTE    bySSHServer;            //SSH?豕?? 0??????(????)??1??????
	BYTE    byIllegalLoginLock;     //???????????“, 0-?????“????????1-????
	BYTE    byStreamEncryption;     //???‾???? 0-????????1-????
	BYTE    byAntiAttack;          //??﹞?????﹞????‾??????0- ????????1-????(socket???㊣5s??㊣?)
	BYTE    byRes[26];
}NET_DVR_SECURITY_CFG, *LPNET_DVR_SECURITY_CFG;

typedef struct tagNET_DVR_PASSWORD_MANAGE_CFG
{
	DWORD    dwSize;
	BYTE     byRes[3];
	BYTE     byLockCount;      //???????∫???辰IP㊣????????????赤?車?????????車?????????∫???????“??0-?????“?????????????“???????? ??????0??????1㊣赤???赤?車????1?????車?????“?????∫????
	DWORD  dwLockTime;       //???“?㊣????㊣赤???赤?車?車???“???㊣????????????????????0??byLockCount????0?㊣??dwLockTime?????∫
	BYTE     byRes1[128];        //4℅???????
} NET_DVR_PASSWORD_MANAGE_CFG, *LPNET_DVR_PASSWORD_MANAGE_CFG;


typedef struct tagNET_DVR_UNLOCK_INFO
{
	DWORD    dwSize;
	BYTE    byUnlockType;    //0-???∫?? 1-∼?IP??????2-?????迄??IP
	BYTE    byIPVersion;    //1-IPV4??2-IPV6???㊣byUnlockType??1?㊣???????????∫
	BYTE    byRes1[2];
	NET_DVR_IPADDR struIPAddr;        //IP???﹞
	BYTE     byRes[64];
} NET_DVR_UNLOCK_INFO, *LPNET_DVR_UNLOCK_INFO;

typedef  struct  tagNET_DVR_LOCKED_INFO
{
	DWORD    dwSize;
	BYTE    byIPType;    //IP?角?? 0-???∫??1-IPV4??2-IPV6
	BYTE    byRes1[3];
	NET_DVR_IPADDR struIPAddress;
	BYTE    byRes[20];
} NET_DVR_LOCKED_INFO, *LPNET_DVR_LOCKED_INFO;


typedef struct tagNET_DVR_VEHICLE_PARA
{
	BYTE  sLicense[MAX_LICENSE_LEN];
	/*?迆???‾????
	0-??﹞“?????∫???????迆????1-?????????迆(CZ - Czech Republic)??2-﹞“?迆(FRA - France)??
	3-???迆(DE - Germany),4-?‾∼角??(E - Spain), 5-???車??(IT - Italy)??6-????(NL - Netherlands)??7-?“??(PL - Poland)??8-????﹞???(SVK - Slovakia), 9-∼℅?赤????(BY - Belorussia), 10-?????角??(MDA - Moldova)??11-?赤????(RU - Russia)??12-??????(UA - Ukraine),
	169-?????車(Canada), 172-???迆(US), 227-∼??車????(Australia), 0xfe-??﹞“??㊣?
	*/
	BYTE  byCountry;                   // ?迆???‾????

	BYTE  byRes[239];
}NET_DVR_VEHICLE_PARA, *LPNET_DVR_VEHICLE_PARA;

typedef struct tagNET_DVR_FACE_PIC_DATA_INFO
{
	DWORD              dwImageLen;   //?????車??
	NET_VCA_RECT       struVcaRect;  //℅??????車??????℅?㊣那???????谷????℅?㊣那
	DWORD              dwFaceScore;  //?角??????????﹞??∫0-100
	BYTE               byVcaRectOnly;   //??﹞???????℅?㊣那??0-﹞???1-??
	BYTE               byRes1[3];
	DWORD              dwPID;   //????ID
	DWORD              dwFaceSearchNum;// ???‾???????辰????
	NET_VCA_RECT       struMultiVcaRect[NET_DVR_MAX_FACE_SEARCH_NUM];//?“?角????℅??????車??????℅?㊣那???????谷????℅?㊣那, byVcaRectOnly=1?㊣??????????????
	BYTE                byRes[136];
	BYTE               *pImage;  //???????????車??jpg????
}NET_DVR_FACE_PIC_DATA_INFO, *LPNET_DVR_FACE_PIC_DATA_INFO;

typedef struct  tagNET_DVR_BEHAVIOUR_COND
{
	DWORD dwSearchType;   //???‾?角??
						  //&0x1 - ??????????
						  //&0x2 - ???辰????
						  //&0x4 - ???﹞????
						  //&0x8 - ???﹞????
						  //&0x10 - ???????辰
						  //&0x20 - ???????辰
						  //&0x40 - ﹞?﹞“????
						  //&0x80 - ????
						  //&0x100 -???㊣????
						  //&0x200 - ?足??????  
						  //&0x400 - ?????足??  
						  //&0x800 - ????㊣???  
						  //&0x1000 - ????????  
						  //&0x2000 - ???㊣㊣??? 
						  //&0x4000 - ???㊣????
						  //&0x8000 - ???㊣????
						  //&0x10000 “C????﹞???
	BYTE byHumanMisinfo;// ???????????車㊣“???? 0-﹞???1-?? 
	BYTE byRes[251];  //㊣???
}NET_DVR_BEHAVIOUR_COND, *LPNET_DVR_BEHAVIOUR_COND;


typedef union tagNET_DVR_SMARTSEARCH_PIC_UNION
{
	BYTE                byLen[256];  //???????∟??
	NET_DVR_VEHICLE_PARA     struVehiclePara; //?????足??????
	NET_VCA_HUMAN_FEATURE    struHumaFeature; //????????
	NET_DVR_FACE_PIC_DATA_INFO   struHumaPic;     //?迄??????℅????????谷???“???????????????????‾????????  
	NET_DVR_BEHAVIOUR_COND   struBehaviourCond;  //????﹞??????‾????      
}NET_DVR_SMARTSEARCH_PIC_UNION, *LPNET_DVR_SMARTSEARCH_PIC_UNION;

typedef struct tagNET_DVR_SMART_SEARCH_PIC_PARA  //???????????‾?芍???? size 344
{
	DWORD                dwChanNo;               //?“????
	DWORD                byStreamID[STREAM_ID_LEN];   //?‾ID????????dwChanNo?角㊣??????????????????㊣byStreamID???????㊣???辰?????‾ID?????????谷????????dwChanNo℅???
	NET_DVR_TIME_EX         struStartTime;               //???????????㊣??
	NET_DVR_TIME_EX         struEndTime;            //???????????㊣??
	WORD                wSearchType;            //?????谷???角??  0-?????足?‾ ??1-?????????? 2-?????‾?? ??3-????﹞???
	BYTE               byRes1[2];
	NET_DVR_SMARTSEARCH_PIC_UNION   uSmartSearchCond;  //?????谷??????
	BYTE   	    byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char cStartTimeDifferenceH;   //?????㊣????UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣??
	char cStartTimeDifferenceM;   //?????㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	char cStopTimeDifferenceH;    //?芍???㊣????UTC???㊣???“???㊣????-12 ... +14??????㊣赤?????㊣??
	char cStopTimeDifferenceM;    //?芍???㊣????UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	BYTE        byRes[59];
}NET_DVR_SMART_SEARCH_PIC_PARA, *LPNET_DVR_SMART_SEARCH_PIC_PARA;

//???????‾??㊣??芍??
typedef struct tagNET_DVR_FACE_SUB_PIC_INFO
{
	DWORD          dwSimilarity;   //?角???? 0-100
	NET_VCA_RECT   struVcaRect;    //???????辰???谷????℅?㊣那
	BYTE           byRes2[236];   //㊣???
}NET_DVR_FACE_SUB_PIC_INFO, *LPNET_DVR_FACE_SUB_PIC_INFO;


typedef struct tagNET_DVR_BEHAVIOR_INFO
{
	NET_VCA_RECT struVcaRect;
	WORD         wPeopleNum;       //???辰?????????????角???“NET_DVR_SMART_SEARCH_PIC_RET ??wPicType????????﹞????㊣???∫
	BYTE         byRes2[238];   //㊣???
}NET_DVR_BEHAVIOR_INFO, *LPNET_DVR_BEHAVIOR_INFO;

typedef union tagNET_DVR_PIC_FEATURE_UNION
{
	BYTE                         byLen[256];         //???????∟??
	NET_DVR_PLATE_INFO              struPlateInfo;      //?????足?‾????
	NET_DVR_FACE_SUB_PIC_INFO       struFaceSubInfo;    //????℅???????
	NET_DVR_BEHAVIOR_INFO           struBehavior;       //????﹞?????????℅???????
}NET_DVR_PIC_FEATURE_UNION, *LPNET_DVR_PIC_FEATURE_UNION;

typedef struct tagNET_DVR_SMART_SEARCH_PIC_RET
{
	char                sFileName[PICTURE_NAME_LEN];//??????
	NET_DVR_TIME_EX     struTime;                      //??????℅????㊣??
	DWORD   dwFileSize;                 //???????車??
	WORD    wPicType;                  //?????角??  0-?????足?‾ ??1-?????????? 2-?????‾?? ??3-????????????4-???辰?????? 5-???﹞?????? 6-???﹞?????? 7-???????辰?? 8-???????辰?? 9-﹞?﹞“??????10-??????11-???㊣??????12-?足??????,13-???㊣㊣?????14-??????????15-???㊣??????16-?????足????17-?????足????18-???㊣??????19-????﹞???
	BYTE    byRes1[2];                  //㊣???
	NET_DVR_PIC_FEATURE_UNION   uPicFeature;  //????????
	BYTE   	    byISO8601;  //??﹞???8601???㊣???????????㊣??℅?????﹞????∫0-?㊣?????∫???那?????㊣﹞??????豕㊣?㊣????㊣?? 1-?㊣?????∫ 
	char cTimeDifferenceH;   //??UTC???㊣???“???㊣????-12 ... +14?? ????㊣赤?????㊣??
	char cTimeDifferenceM;   //??UTC???㊣???“﹞???????-30, 0, 30, 45??????㊣赤?????㊣??
	BYTE    byRes[29];
}NET_DVR_SMART_SEARCH_PIC_RET, *LPNET_DVR_SMART_SEARCH_PIC_RET;

typedef struct tagNET_DVR_T1TEST_SEND_DATA_BUZZER
{
	BYTE  byHearSound;   //??﹞??????迄?? 0-????????1-????
	BYTE  byRes[31];     //㊣???
}NET_DVR_T1TEST_SEND_DATA_BUZZER, *LPNET_DVR_T1TEST_SEND_DATA_BUZZER;


typedef union NET_DVR_T1TEST_DATA_UNION
{
	BYTE  byUnionLen[32];
	NET_DVR_T1TEST_SEND_DATA_BUZZER struBuzzer;  //﹞??迄?‾
	NET_DVR_TIME_V30  struCurTime;   //?㊣?∼PC?迆?㊣??
}NET_DVR_T1TEST_DATA_UNION, *LPNET_DVR_T1TEST_DATA_UNION;


typedef struct tagNET_DVR_T1TEST_SEND_DATA
{
	DWORD     dwSize;     //?芍?????車??
	BYTE  byDataType;  //?????角?? 0-﹞??迄?‾??1-pc㊣????㊣??
	BYTE  byRes1[3];
	NET_DVR_T1TEST_DATA_UNION uSendData;  //﹞?????????????
	BYTE  byRes[64];
}NET_DVR_T1TEST_SEND_DATA, *LPNET_DVR_T1TEST_SEND_DATA;

typedef struct tagNET_DVR_PIC_MODEL_CFG  //?????“??????????
{
	DWORD       dwSize;    //?芍?????車??
	BYTE         byEnable;     //??﹞?????
	BYTE         byRes[63];
}NET_DVR_PIC_MODEL_CFG, *LPNET_DVR_PIC_MODEL_CFG;

typedef struct  tagNET_DVR_MOUSE_EVENT_PARAM  //?車㊣那????????
{
	DWORD           dwSize;   //?芍?????車??
	BYTE            byMouseEvent;  //?車㊣那?????角???? 0-?車㊣那℅車?邦???‾??1-?車㊣那℅車?邦???‾??2-?車㊣那???邦??3-??????????4-????????
	BYTE            byRes1[3];    //㊣???
	NET_VCA_POINT   struPoint;    //?車㊣那??????℅?㊣那???谷???????赤
	BYTE            byRes[64];    //㊣???
}NET_DVR_MOUSE_EVENT_PARAM, *LPNET_DVR_MOUSE_EVENT_PARAM;

typedef struct tagNET_DVR_AUTO_LIMIT_WAVE_CFG
{
	BYTE  byFBCEnable;         //FBC???? 0-????????1-????
	BYTE  byMode;              //????, 0-?足??, 1-???“,2-????
	BYTE  byFilterQValue;      //℅????????“?‾Q????????Oct, 0-1/40,1-1/10, ????????1/40 Oct
	BYTE  byStaticFilterNum;   //???????“?‾??????????﹞??∫0-12  
	BYTE  byRes[16];
}NET_DVR_AUTO_LIMIT_WAVE_CFG, *LPNET_DVR_AUTO_LIMIT_WAVE_CFG;

typedef struct _NET_DVR_DSP_PARAMETER_CFG
{
	BYTE  byFBCEnable;         //FBC???? 0-????????1-????
	BYTE  byVolume;            //???????? ????﹞??∫0~255
	BYTE  byRes[22];
}NET_DVR_DSP_PARAMETER_CFG, *LPNET_DVR_DSP_PARAMETER_CFG;


typedef struct tagNET_DVR_MIX_AUDIOIN_CFG
{
	DWORD  dwSize;  //?芍?????車??
	DWORD  dwHighPassFilter;         //???“???“?‾ ????﹞??∫ 0-127, ?????‾???迆㊣赤??????????????℅?
	DWORD  dwNoiseMargin;            //???迄??????????﹞??∫ 0-127, ?????‾???迆㊣赤??????????????℅?
	NET_DVR_AUTO_LIMIT_WAVE_CFG  struLimitWave;  //℅??????“???????????㊣????????????macIn?㊣???∫
	NET_DVR_DSP_PARAMETER_CFG  struDSPParameter;  //??℅????????赤????????
	BYTE   byRes[40];
}NET_DVR_MIX_AUDIOIN_CFG, *LPNET_DVR_MIX_AUDIOIN_CFG;

typedef struct tagNET_DVR_MIX_AUDIOOUT_CFG
{
	DWORD   dwSize;  //?芍?????車??
	BYTE    byModulatorEnbale;  //??﹞??????角???‾???‾
	BYTE    byPostFilter;       //Post Filter??????0-??㊣???1-??????????????
	BYTE    byLimitPressure;    //???????????? 0-??㊣???1-??????????????
	BYTE    byRes1;             //㊣??? 
	WORD    wModulatorValue;    //?角???‾???? ????﹞??∫ 0-127, ?????‾???迆㊣赤??????????????℅???????10
	WORD    wTriggerTime;       //??????﹞??㊣????????﹞??∫ 0-127, ?????‾???迆㊣赤??????????????℅?
	WORD    wFreeTime;          //??????﹞??㊣????????﹞??∫ 0-127, ?????‾???迆㊣赤??????????????℅?
	BYTE    byCompressThreshold; //???????? 0-1X,1-2X,2-4X,3-8X  X㊣赤??㊣???㊣???2X㊣赤??2㊣?
	BYTE    byCompressMode;     //????﹞?????0-????????1-?赤??????????????????
	BYTE    byCompressRate;    //?????? 
	BYTE    byRecoveryGain;    //???????? 0-1X,1-2X,2-4X,3-8X
	BYTE    byOutputGain;      //???????? 0 ~100?“??????
	BYTE    byOutputMute;      //??????????0-??㊣???1-????
	int     iOutputGainEx;      //??????????????﹞?????????﹞??車????????????
	BYTE    bySoundQualityHanding;      //???????赤??0-??㊣???1-????
	BYTE    byRes[55];
}NET_DVR_MIX_AUDIOOUT_CFG, *LPNET_DVR_MIX_AUDIOOUT_CFG;

#define MAX_AUDIOOUT_PRO_TYPE                8    //???????????赤﹞???
typedef struct tagNET_DVR_VOLUME_CFG
{
	DWORD    dwSize;  //?芍?????車??
	WORD    wVolume[MAX_AUDIOOUT_PRO_TYPE];      //?????車?? ????﹞??∫ 0-127, ?????‾???迆㊣赤??????????????℅?
	BYTE    byPhantomPowerSupply;    //??﹞????????車????????(?????????“????MIC?㊣???∫)??0-????????1-????????2-????
	BYTE    byEnableAEC;    //??﹞??????????????迄????,0-????????1-????
	WORD    wTalkVolume;   //?∫?????????豕㊣????????㊣?????車??
	BYTE    byEnableFBC[MAX_AUDIOOUT_PRO_TYPE];    //??﹞?????FBC(????????),0-????????1-????
	WORD    wVolumeEx[MAX_AUDIOOUT_PRO_TYPE];      //?????車?????? ????﹞??∫ 0-127, ?????‾???迆㊣赤??????????????℅?
	BYTE    byRes[4];     //㊣???
}NET_DVR_VOLUME_CFG, *LPNET_DVR_VOLUME_CFG;

typedef struct tagNET_DVR_VIDEOOUT_RESOLUTION_CFG  //??????????﹞?㊣???????
{
	DWORD       dwSize;    //?芍?????車??
	BYTE         byResolution;     //﹞?㊣??? 0-1024x768, 1-1280x720,  2-1280x1024,  3-1680x1050, 4-1920x1080, 5-3840*2160
	BYTE         byRes[63];
}NET_DVR_VIDEOOUT_RESOLUTION_CFG, *LPNET_DVR_VIDEOOUT_RESOLUTION_CFG;

typedef struct tagNET_DVR_ADDR_DOMAIN_INFO
{
	BYTE   szDomainAddr[MAX_DOMAIN_NAME];  /* ?‾?迆IP???﹞?辰???辰??,?豕???豕㊣?????,????﹞???????℅???????????'.'?辰???????辰??,﹞??辰??IP???﹞  */
	WORD   wPort;
	BYTE   byRes[2];
}NET_DVR_ADDR_DOMAIN_INFO, *LPNET_DVR_ADDR_DOMAIN_INFO;

#define MAX_CENTERNUM_V40     6    //㊣“?????????﹞????

//㊣“??????????????
typedef struct tagNET_DVR_ALARMCENTER_NETCFG
{
	DWORD    dwSize;
	BYTE    byAuxiliaryAlarmAddr[MAX_DOMAIN_NAME];  /* ?“㊣“???‾?迆IP???﹞?辰???辰??,?豕???豕㊣?????,????﹞???????℅?????????????.???辰???????辰??,﹞??辰??IP???﹞ */
	WORD    wAuxiliaryAlarmPort;     /* ?“㊣“???‾?迆?????? */
	NET_DVR_ADDR_DOMAIN_INFO struHostAddr[MAX_CENTERNUM_V40]; //㊣“?????????﹞????
	BYTE    byRes[172];
}NET_DVR_ALARMCENTER_NETCFG, *LPNET_DVR_ALARMCENTER_NETCFG;

//㊣“???????????芍??
typedef struct tagNET_DVR_ALARM_LINKAGE_PARAM
{
	DWORD    dwSize;
	WORD     wChanRec;  //??????????NVR?“????∼???㊣赤????????℅?????㊣赤???“??1??℅?????㊣赤???“??16????????????????0-????????1-????
	BYTE     byRes1[2];
	WORD     wRecTime[MAX_LINKAGE_CHAN_NUM];    //???????㊣????∼?℅???㊣赤????????byRecTime[0]㊣赤???“??1???????㊣????byRecTime[15]㊣赤???“??16???????㊣??
	WORD     wChanPic;                          //????℅?????NVR?“????∼???㊣赤????????℅?????㊣赤???“??1??℅?????㊣赤???“??16????????????????0-??℅?????1-℅???
	BYTE     byRes2[2];
	BYTE     byPicNum[MAX_LINKAGE_CHAN_NUM];    //℅???????????∼?℅???㊣赤????????byPicNum[0]㊣赤???“??1??℅?????????byPicNum[15]㊣赤???“??16??℅???????
	BYTE     byTriggerEnabled[ALARMHOST_ALARMOUT_NUM];//㊣?????????﹞??‾??0-????????1-????     
	BYTE	 bySensorJointAlarmOut[ALARMHOST_ALARMOUT_NUM];//??????∼??角????????﹞??‾????????byTriggerEnabled??????????℅谷??㊣那㊣赤????﹞??‾??????℅谷????????∼???㊣赤??㊣“???角?????‾???角??????"?辰"?????????角?????“????1bit0-??1??bit1-??2??bit2-??3??bit3-??4??bit4-????
	BYTE   	 byRes3[128];     	//㊣???
}NET_DVR_ALARM_LINKAGE_PARAM, *LPNET_DVR_ALARM_LINKAGE_PARAM;


//?℅???‾??㊣“?????? ℅????迆4.0????
typedef struct tagNET_DVR_ALARM_RADARINFO
{
	DWORD             dwSize;
	DWORD             dwRadarTriggerTimeSecond;//?℅????﹞??㊣??????
	DWORD             dwRadarTriggerTimeMSecond;//?℅????﹞??㊣????????
	DWORD             dwVedioTriggerTimeSecond;//??????﹞??㊣??????
	DWORD             dwVedioTriggerTimeMSecond;//??????﹞??㊣????????
	DWORD             dwVedioRadarDiffTimeMSecond;//?℅????????﹞??㊣??????????
	DWORD             dwRadarSpeed;//?℅??????
	BYTE              byRes[16];
} NET_DVR_ALARM_RADARINFO, *LPNET_DVR_ALARM_RADARINFO;

#define MAX_FINGER_PRINT_LEN            768  //℅??車?????∟??
typedef struct tagNET_DVR_FINGER_PRINT_CFG
{
	DWORD       dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“?? 
	DWORD dwFingerPrintLen;     //?????????∟??
	BYTE  byEnableCardReader[MAX_CARD_READER_NUM_512];  //?豕????﹞??????????“?‾??∼???℅谷㊣赤????0-????﹞??????“?‾??1-??﹞????????“?‾
	BYTE  byFingerPrintID;     //????㊣角???????∫??﹞??∫??1-10
	BYTE  byFingerType;       //?????角??  0-???“??????1-????????
	BYTE  byRes1[30];
	BYTE  byFingerData[MAX_FINGER_PRINT_LEN];        //????????????
	BYTE  byRes[64];
}NET_DVR_FINGER_PRINT_CFG, *LPNET_DVR_FINGER_PRINT_CFG;

typedef struct tagNET_DVR_FINGER_PRINT_STATUS
{
	DWORD       dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“??
	BYTE  byCardReaderRecvStatus[MAX_CARD_READER_NUM_512];  //???????“?‾℅?????∼?℅???㊣赤????0-?∫∼???1-??????2-????????℅谷????????3-?????辰????????????4-???????迆??5-??????????????6-????????????ID??7-﹞?﹞“????ID??8-????????℅谷???豕????
	BYTE  byFingerPrintID;     //????㊣角???????∫??﹞??∫??1-10
	BYTE  byFingerType;       //?????角??  0-???“??????1-????????
	BYTE  byTotalStatus;  //??﹞?℅???℅?????0-?㊣?∼?????????那?迄?????“?‾??1-?????那?迄?????“?‾(???????迄?????????????‾?迆?迄?迄???????“?‾??﹞???????????????﹞?)
	BYTE  byRes1;
	BYTE  byErrorMsg[ERROR_MSG_LEN]; //??﹞??赤?車???????㊣byCardReaderRecvStatus??5?㊣??㊣赤???????????????????“??
	DWORD dwCardReaderNo;  //﹞?0㊣赤???赤?車????byErrMsg???∫???????迆㊣赤byErrMsg?????????“?‾㊣角???“?????????赤?車?谷??byCardReaderRecvStatus????㊣角??????????0?㊣㊣赤?????赤?車????
	BYTE  byRes[24];
}NET_DVR_FINGER_PRINT_STATUS, *LPNET_DVR_FINGER_PRINT_STATUS;


typedef struct tagNET_DVR_FINGER_PRINT_INFO_COND
{
	DWORD       dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“??
	BYTE  byEnableCardReader[MAX_CARD_READER_NUM_512];  //?????????“?‾??????∼???℅谷㊣赤??
	DWORD dwFingerPrintNum; //?豕???辰?????“???????????㊣????0xffffffff㊣赤???????迄???“????
	BYTE  byFingerPrintID;     //????㊣角???????∫??﹞??∫??-10   0xff㊣赤?????“?迄??????
	BYTE  byCallbackMode;     //?豕㊣????‾﹞?????0-?豕㊣??迄?????“?‾???那??﹞??∫??1-???㊣????????????﹞???﹞???
	BYTE  byRes1[26];          //㊣???
}NET_DVR_FINGER_PRINT_INFO_COND, *LPNET_DVR_FINGER_PRINT_INFO_COND;

typedef struct tagNET_DVR_FINGER_PRINT_CFG_V50
{
	DWORD       dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“??
	DWORD dwFingerPrintLen; 	//?????????∟??
	BYTE  byEnableCardReader[MAX_CARD_READER_NUM_512];  //?豕????﹞??????????“?‾??∼???℅谷㊣赤????????????????㊣赤????0-????﹞??????“?‾??1-??﹞????????“?‾
	BYTE  byFingerPrintID;     //????㊣角???????∫??﹞??∫??1-10
	BYTE  byFingerType;       //?????角??  0-???“??????1-??????????2-???邦??????3-??????????4-????????
	BYTE  byRes1[30];
	BYTE  byFingerData[MAX_FINGER_PRINT_LEN];        //????????????
	BYTE  byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID??
	BYTE  byLeaderFP[MAX_DOOR_NUM_256]; //??????﹞????℅?????∟?????“∼?℅???㊣赤??????0-???℅?????∟??????1-???℅?????∟????
	BYTE  byRes[128];
}NET_DVR_FINGER_PRINT_CFG_V50, *LPNET_DVR_FINGER_PRINT_CFG_V50;

typedef struct tagNET_DVR_FINGER_PRINT_STATUS_V50
{
	DWORD       dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“??
	BYTE  byCardReaderRecvStatus[MAX_CARD_READER_NUM_512];  //???????“?‾℅?????∼?℅???㊣赤????0-?∫∼???1-??????2-????????℅谷????????3-?????辰????????????4-???????迆??5-??????????????6-????????????ID??7-﹞?﹞“????ID??8-????????℅谷???豕??????10-???????“?‾∼?㊣??????“??﹞“?∫???∟????
	BYTE  byFingerPrintID;     //????㊣角???????∫??﹞??∫??1-10
	BYTE  byFingerType;       //?????角??  0-???“??????1-??????????2-???邦??????3-??????????4-????????
	BYTE  byTotalStatus;  //??﹞?℅???℅?????0-?㊣?∼?????????那?迄?????“?‾??1-?????那?迄?????“?‾(???????迄?????????????‾?迆?迄?迄???????“?‾??﹞???????????????﹞?)
	BYTE  byRecvStatus;    //?‾?迆?赤?車℅?????0-??????1-????㊣角???赤?車??2-?????角???赤?車??3-?“???赤?車?“?“????????﹞????豕㊣????車????4-???????????∟???辰?“???“?∟???辰?“??℅???????????5-?∟??????????6-?????????∟????0??7-???“?‾㊣角???赤?車??8-?∟???赤?車
	BYTE  byErrorMsg[ERROR_MSG_LEN]; //??﹞??赤?車???????㊣byCardReaderRecvStatus??5?㊣??㊣赤???????????????????“??
	DWORD dwCardReaderNo;  //?㊣byCardReaderRecvStatus??5?㊣??㊣赤?????????????????????????“?‾㊣角????????????﹞??赤?車﹞?????0?㊣㊣赤?????赤?車????
	BYTE  byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID??
	BYTE byErrorEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //??﹞??赤?車???????㊣byCardReaderRecvStatus??5?㊣??㊣赤???????????????????∟???“???㊣ID??
	BYTE  byRes[128];
}NET_DVR_FINGER_PRINT_STATUS_V50, *LPNET_DVR_FINGER_PRINT_STATUS_V50;

typedef struct tagNET_DVR_FINGER_PRINT_INFO_COND_V50
{
	DWORD       dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“???“??℅????????㊣???∫???豕???㊣???∫??
	BYTE  byEnableCardReader[MAX_CARD_READER_NUM_512];  //?????????“?‾??﹞????∫??0-???∫??1-???∫
	DWORD dwFingerPrintNum; //?豕???辰?????????????????㊣????0xffffffff㊣赤???????迄??????????
	BYTE  byFingerPrintID;     //????㊣角???????∫??﹞??∫??1-10   0xff㊣赤?????“?迄??????
	BYTE  byCallbackMode;     //?豕㊣????‾﹞?????0-?豕㊣??迄?????“?‾???那??﹞?????1-???㊣????????????﹞???﹞???
	BYTE  byRes2[2];          //㊣???
	BYTE  byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID??
	BYTE  byRes1[128];          //㊣???
}NET_DVR_FINGER_PRINT_INFO_COND_V50, *LPNET_DVR_FINGER_PRINT_INFO_COND_V50;

typedef struct tagNET_DVR_FINGER_PRINT_BYCARD
{
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“?? 
	BYTE  byEnableCardReader[MAX_CARD_READER_NUM_512];  //?????????“?‾??????∼???℅谷㊣赤??
	BYTE  byFingerPrintID[MAX_FINGER_PRINT_NUM/*10*/];        //?豕??????????????????∼???℅谷??㊣那????㊣赤??0-????????1-??????????
	BYTE  byRes1[34];          //㊣???
}NET_DVR_FINGER_PRINT_BYCARD, *LPNET_DVR_FINGER_PRINT_BYCARD;

typedef struct tagNET_DVR_FINGER_PRINT_BYREADER
{
	DWORD dwCardReaderNo;  //∼???㊣赤???????????“?‾㊣角??
	BYTE  byClearAllCard;  //??﹞??????迄???“????????????0-∼??“????????????????1-?????迄???“??????????
	BYTE  byRes1[3];       //㊣???
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“?? 
	BYTE  byRes[548];          //㊣???
}NET_DVR_FINGER_PRINT_BYREADER, *LPNET_DVR_FINGER_PRINT_BYREADER;

typedef union tagNET_DVR_DEL_FINGER_PRINT_MODE
{
	BYTE   uLen[588];   //???????∟??
	NET_DVR_FINGER_PRINT_BYCARD       struByCard;     //∼??“????﹞???????
	NET_DVR_FINGER_PRINT_BYREADER     struByReader;   //∼????“?‾??﹞???????
}NET_DVR_DEL_FINGER_PRINT_MODE, *LPNET_DVR_DEL_FINGER_PRINT_MODE;

typedef struct tagNET_DVR_FINGER_PRINT_INFO_CTRL
{
	DWORD       dwSize;
	BYTE  byMode;          //????﹞?????0-∼??“??﹞?????????1-∼????“?‾????
	BYTE  byRes1[3];       //㊣???
	NET_DVR_DEL_FINGER_PRINT_MODE struProcessMode;  //???赤﹞???
	BYTE  byRes[64];          //㊣???
}NET_DVR_FINGER_PRINT_INFO_CTRL, *LPNET_DVR_FINGER_PRINT_INFO_CTRL;

typedef struct tagNET_DVR_FINGER_PRINT_BYCARD_V50
{
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“?? 
	BYTE  byEnableCardReader[MAX_CARD_READER_NUM_512];  //?????????“?‾??????∼???㊣赤??
	BYTE  byFingerPrintID[MAX_FINGER_PRINT_NUM/*10*/];	    //?豕????????????㊣角????∼???℅谷??㊣那????㊣赤??0-????????1-??????????
	BYTE  byRes1[2];
	BYTE  byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID??
}NET_DVR_FINGER_PRINT_BYCARD_V50, *LPNET_DVR_FINGER_PRINT_BYCARD_V50;

typedef struct tagNET_DVR_FINGER_PRINT_BYREADER_V50
{
	DWORD dwCardReaderNo;  //∼???㊣赤???????????“?‾㊣角??
	BYTE  byClearAllCard;  //??﹞??????迄???“????????????0-∼??“???“???㊣ID????????????????1-?????迄???“?“???㊣ID????????????
	BYTE  byRes1[3];       //㊣???
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“?? 
	BYTE  byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID??
	BYTE  byRes[516];          //㊣???
}NET_DVR_FINGER_PRINT_BYREADER_V50, *LPNET_DVR_FINGER_PRINT_BYREADER_V50;

typedef union tagNET_DVR_DEL_FINGER_PRINT_MODE_V50
{
	BYTE   uLen[588];   //???????∟??
	NET_DVR_FINGER_PRINT_BYCARD_V50       struByCard;     //∼??“???“???㊣ID????﹞???????
	NET_DVR_FINGER_PRINT_BYREADER_V50     struByReader;   //∼????“?‾??﹞???????
}NET_DVR_DEL_FINGER_PRINT_MODE_V50, *LPNET_DVR_DEL_FINGER_PRINT_MODE_V50;

typedef struct tagNET_DVR_FINGER_PRINT_INFO_CTRL_V50
{
	DWORD dwSize;
	BYTE  byMode;          //????﹞?????0-∼??“???“???㊣ID??﹞?????????1-∼????“?‾????
	BYTE  byRes1[3];       //㊣???
	NET_DVR_DEL_FINGER_PRINT_MODE_V50 struProcessMode;  //???赤﹞???
	BYTE  byRes[64];          //㊣???
}NET_DVR_FINGER_PRINT_INFO_CTRL_V50, *LPNET_DVR_FINGER_PRINT_INFO_CTRL_V50;

typedef struct tagNET_DVR_FINGER_PRINT_INFO_STATUS_V50
{
	DWORD dwSize;
	DWORD dwCardReaderNo;  //∼???㊣赤???????????“?‾㊣角??
	BYTE  byStatus;         //℅?????0-???∫??1-???赤????2-?????∫∼???3-????
	BYTE  byRes[63];          //㊣???
}NET_DVR_FINGER_PRINT_INFO_STATUS_V50, *LPNET_DVR_FINGER_PRINT_INFO_STATUS_V50;

typedef enum _ACS_DEV_SUBEVENT_ENUM_
{
	EVENT_ACS_HOST_ANTI_DISMANTLE = 0,      //?‾?迆﹞???㊣“??
	EVENT_ACS_OFFLINE_ECENT_NEARLY_FULL,    //?????????迆90%㊣“??
	EVENT_ACS_NET_BROKEN,                   //????????
	EVENT_ACS_NET_RESUME,                  //????????
	EVENT_ACS_LOW_BATTERY,                  //????????????
	EVENT_ACS_BATTERY_RESUME,               //??????????????????
	EVENT_ACS_AC_OFF,                       //???‾??????
	EVENT_ACS_AC_RESUME,                    //???‾??????
	EVENT_ACS_SD_CARD_FULL,                 //SD?“?????迆㊣“??
	EVENT_ACS_LINKAGE_CAPTURE_PIC,          //????℅???????㊣“??
	EVENT_ACS_IMAGE_QUALITY_LOW,            //??????????????
	EVENT_ACS_FINGER_PRINT_QUALITY_LOW,     //??????????????
	EVENT_ACS_BATTERY_ELECTRIC_LOW,         //??????????(???????豕㊣?????)
	EVENT_ACS_BATTERY_ELECTRIC_RESUME,       //????????????????(???????豕㊣?????)
	EVENT_ACS_FIRE_IMPORT_SHORT_CIRCUIT,           //??﹞????????﹞㊣“??
	EVENT_ACS_FIRE_IMPORT_BROKEN_CIRCUIT,         //??﹞????????﹞㊣“??
	EVENT_ACS_FIRE_IMPORT_RESUME,                   //??﹞?????????
	EVENT_ACS_MASTER_RS485_LOOPNODE_BROKEN,    //?‾??RS485?﹞?﹞????????
	EVENT_ACS_MASTER_RS485_LOOPNODE_RESUME,    //?‾??RS485?﹞?﹞????????
	EVENT_ACS_LOCAL_CONTROL_OFFLINE,            //?????????‾????
	EVENT_ACS_LOCAL_CONTROL_RESUME,            //?????????‾????????
	EVENT_ACS_LOCAL_DOWNSIDE_RS485_LOOPNODE_BROKEN,    //????????RS485?﹞?﹞????
	EVENT_ACS_LOCAL_DOWNSIDE_RS485_LOOPNODE_RESUME,   //????????RS485?﹞?﹞????
	EVENT_ACS_DISTRACT_CONTROLLER_ONLINE,       //﹞????‾????
	EVENT_ACS_DISTRACT_CONTROLLER_OFFLINE,      //﹞????‾????
	EVENT_ACS_FIRE_BUTTON_TRIGGER,              //??﹞?∼?????﹞?
	EVENT_ACS_FIRE_BUTTON_RESUME,               //??﹞?∼???????
	EVENT_ACS_MAINTENANCE_BUTTON_TRIGGER,       //???∟∼?????﹞?
	EVENT_ACS_MAINTENANCE_BUTTON_RESUME,        //???∟∼???????
	EVENT_ACS_EMERGENCY_BUTTON_TRIGGER,         //???㊣∼?????﹞?
	EVENT_ACS_EMERGENCY_BUTTON_RESUME,          //???㊣∼???????
	EVENT_ACS_MAC_DETECT,                       //MAC?足??
	EVENT_ACS_SUBMARINEBACK_COMM_BREAK,         //??﹞??㊣??﹞????‾?“??????
	EVENT_ACS_SUBMARINEBACK_COMM_RESUME,        //??﹞??㊣??﹞????‾?“??????
	EVENT_ACS_REMOTE_ACTUAL_GUARD,              //???????㊣??﹞?
	EVENT_ACS_REMOTE_ACTUAL_UNGUARD,            //???????㊣?﹞﹞?
	EVENT_ACS_MOTOR_SENSOR_EXCEPTION,           //???迆?辰?????‾?足??
	EVENT_ACS_CAN_BUS_EXCEPTION,                //CAN℅????足??
	EVENT_ACS_CAN_BUS_RESUME,                   //CAN℅???????
	EVENT_ACS_GATE_TEMPERATURE_OVERRUN,         //???迆????????????
	EVENT_ACS_IR_EMITTER_EXCEPTION,             //?足???????足??
	EVENT_ACS_IR_EMITTER_RESUME,                //?足??????????
	EVENT_ACS_LAMP_BOARD_COMM_EXCEPTION,        //??∼??“???足??
	EVENT_ACS_LAMP_BOARD_COMM_RESUME,           //??∼??“??????
	EVENT_ACS_IR_ADAPTOR_BOARD_COMM_EXCEPTION,  //?足??℅???∼??“???足??
	EVENT_ACS_IR_ADAPTOR_BOARD_COMM_RESUME,     //?足??℅???∼??“??????
	EVENT_ACS_CHANNEL_CONTROLLER_DESMANTLE_ALARM,        //?“???????‾﹞???㊣“??
	EVENT_ACS_CHANNEL_CONTROLLER_DESMANTLE_RESUME,       //?“???????‾﹞???㊣“??????
	EVENT_ACS_CHANNEL_CONTROLLER_FIRE_IMPORT_ALARM,      //?“???????‾??﹞?????㊣“??
	EVENT_ACS_CHANNEL_CONTROLLER_FIRE_IMPORT_RESUME,     //?“???????‾??﹞?????㊣“??????
	EVENT_ACS_STAY_EVENT,                                //????????
	EVENT_ACS_LEGAL_EVENT_NEARLY_FULL                    //??????﹞“?????迆90%㊣“??
}ACS_DEV_SUBEVENT_ENUM;

typedef enum _ACS_ALARM_SUBEVENT_ENUM_
{
	EVENT_ACS_ALARMIN_SHORT_CIRCUIT = 0,    //﹞??????﹞㊣“??
	EVENT_ACS_ALARMIN_BROKEN_CIRCUIT,       //﹞??????﹞㊣“??
	EVENT_ACS_ALARMIN_EXCEPTION,            //﹞????足??㊣“??
	EVENT_ACS_ALARMIN_RESUME,               //﹞???㊣“??????
	EVENT_ACS_CASE_SENSOR_ALARM,            //????????㊣“??
	EVENT_ACS_CASE_SENSOR_RESUME            //????????????
}ACS_ALARM_SUBEVENT_ENUM;

typedef enum _ACS_DOOR_SUBEVENT_ENUM_
{
	EVENT_ACS_LEADER_CARD_OPEN_BEGIN = 0,        //?℅?“????????
	EVENT_ACS_LEADER_CARD_OPEN_END,             //?℅?“?????芍??
	EVENT_ACS_ALWAYS_OPEN_BEGIN,               //????℅???????
	EVENT_ACS_ALWAYS_OPEN_END,                  //????℅????芍??
	EVENT_ACS_ALWAYS_CLOSE_BEGIN,               //????℅???????
	EVENT_ACS_ALWAYS_CLOSE_END,                 //????℅????芍??
	EVENT_ACS_LOCK_OPEN,                        //?????辰??
	EVENT_ACS_LOCK_CLOSE,                       //??????㊣?
	EVENT_ACS_DOOR_BUTTON_PRESS,                //????∼???∼???
	EVENT_ACS_DOOR_BUTTON_RELEASE,              //????∼???﹞???
	EVENT_ACS_DOOR_OPEN_NORMAL,                 //?????????“??????
	EVENT_ACS_DOOR_CLOSE_NORMAL,               //?????????“??????
	EVENT_ACS_DOOR_OPEN_ABNORMAL,               //???足???辰???“??????
	EVENT_ACS_DOOR_OPEN_TIMEOUT,                //???辰?????㊣?“??????
	EVENT_ACS_REMOTE_OPEN_DOOR,                 //????????
	EVENT_ACS_REMOTE_CLOSE_DOOR,                //????????
	EVENT_ACS_REMOTE_ALWAYS_OPEN,               //????????
	EVENT_ACS_REMOTE_ALWAYS_CLOSE,              //????????
	EVENT_ACS_NOT_BELONG_MULTI_GROUP,                   //?“???????角?????∟??℅谷
	EVENT_ACS_INVALID_MULTI_VERIFY_PERIOD,              //?“?????角?????∟?㊣??????
	EVENT_ACS_MULTI_VERIFY_SUPER_RIGHT_FAIL,            //?角?????∟???????????????∟?∫∼?
	EVENT_ACS_MULTI_VERIFY_REMOTE_RIGHT_FAIL,           //?角?????∟???????????∟?∫∼?
	EVENT_ACS_MULTI_VERIFY_SUCCESS,                     //?角?????∟????
	EVENT_ACS_MULTI_VERIFY_NEED_REMOTE_OPEN,            //?角???角?????∟?豕??????????
	EVENT_ACS_MULTI_VERIFY_SUPERPASSWD_VERIFY_SUCCESS,  //?角?????∟???????????∟????????
	EVENT_ACS_MULTI_VERIFY_REPEAT_VERIFY_FAIL,          //?角?????∟???????∟?∫∼?
	EVENT_ACS_MULTI_VERIFY_TIMEOUT,                     //?角?????∟???㊣?∫∼?
	EVENT_ACS_REMOTE_CAPTURE_PIC,                       //????℅???
	EVENT_ACS_DOORBELL_RINGING,                          //?????足
	EVENT_ACS_SECURITY_MODULE_DESMANTLE_ALARM,       //????∼??????谷﹞???㊣“??
	EVENT_ACS_CALL_CENTER,                            //????????????
	EVENT_ACS_FIRSTCARD_AUTHORIZE_BEGIN,               //?℅?“???“????
	EVENT_ACS_FIRSTCARD_AUTHORIZE_END,                 //?℅?“???“?芍??
	EVENT_ACS_DOORLOCK_INPUT_SHORT_CIRCUIT,           //???????????﹞㊣“??
	EVENT_ACS_DOORLOCK_INPUT_BROKEN_CIRCUIT,         //???????????﹞㊣“??
	EVENT_ACS_DOORLOCK_INPUT_EXCEPTION,               //?????????足??㊣“??
	EVENT_ACS_DOORCONTACT_INPUT_SHORT_CIRCUIT,       //???????????﹞㊣“??
	EVENT_ACS_DOORCONTACT_INPUT_BROKEN_CIRCUIT,     //???????????﹞㊣“??
	EVENT_ACS_DOORCONTACT_INPUT_EXCEPTION,           //?????????足??㊣“??
	EVENT_ACS_OPENBUTTON_INPUT_SHORT_CIRCUIT,       //????∼??????????﹞㊣“??
	EVENT_ACS_OPENBUTTON_INPUT_BROKEN_CIRCUIT,      //????∼??????????﹞㊣“??
	EVENT_ACS_OPENBUTTON_INPUT_EXCEPTION,            //????∼????????足??㊣“??
	EVENT_ACS_DOORLOCK_OPEN_EXCEPTION,                  //?????足???辰??
	EVENT_ACS_DOORLOCK_OPEN_TIMEOUT,                   //?????辰?????㊣
	EVENT_ACS_FIRSTCARD_OPEN_WITHOUT_AUTHORIZE,     //?℅?“?????“?????∫∼?
	EVENT_ACS_CALL_LADDER_RELAY_BREAK,          //?????????‾????
	EVENT_ACS_CALL_LADDER_RELAY_CLOSE,          //?????????‾㊣???
	EVENT_ACS_AUTO_KEY_RELAY_BREAK,             //℅???∼??邦?????‾????
	EVENT_ACS_AUTO_KEY_RELAY_CLOSE,             //℅???∼??邦?????‾㊣???
	EVENT_ACS_KEY_CONTROL_RELAY_BREAK,          //∼??邦?????????‾????
	EVENT_ACS_KEY_CONTROL_RELAY_CLOSE,          //∼??邦?????????‾㊣???
	EVENT_ACS_REMOTE_VISITOR_CALL_LADDER,       //﹞???????
	EVENT_ACS_REMOTE_HOUSEHOLD_CALL_LADDER,     //℅??∫????
	EVENT_ACS_LEGAL_MESSAGE,                    //??﹞“????
	EVENT_ACS_ILLEGAL_MESSAGE,                  //﹞?﹞“????
	EVENT_ACS_TRAILING,                         //?????“??
	EVENT_ACS_REVERSE_ACCESS,                   //﹞??辰????
	EVENT_ACS_FORCE_ACCESS,                     //??????℅?
	EVENT_ACS_CLIMBING_OVER_GATE,               //﹞???
	EVENT_ACS_PASSING_TIMEOUT,                  //?“?????㊣
	EVENT_ACS_INTRUSION_ALARM,                  //?車??㊣“??
	EVENT_ACS_FREE_GATE_PASS_NOT_AUTH,          //???迆℅????“???㊣?????∟?“??
	EVENT_ACS_DROP_ARM_BLOCK,                   //∼?㊣?㊣?℅豕??
	EVENT_ACS_DROP_ARM_BLOCK_RESUME,            //∼?㊣?℅豕??????
	EVENT_ACS_REMOTE_CONTROL_CLOSE_DOOR,        //?????‾????
	EVENT_ACS_REMOTE_CONTROL_OPEN_DOOR,         //?????‾????
	EVENT_ACS_REMOTE_CONTROL_ALWAYS_OPEN_DOOR   //?????‾??????
}ACS_DOOR_SUBEVENT_ENUM;

typedef enum _ACS_CARD_READER_SUBEVENT_ENUM_
{
	EVENT_ACS_STRESS_ALARM = 0,                            //????㊣“??
	EVENT_ACS_CARD_READER_DESMANTLE_ALARM,              //???“?‾﹞???㊣“??
	EVENT_ACS_LEGAL_CARD_PASS,                          //??﹞“?“???∟?“??
	EVENT_ACS_CARD_AND_PSW_PASS,                        //???“?????????∟?“??
	EVENT_ACS_CARD_AND_PSW_FAIL,                        //???“?????????∟?∫∼?
	EVENT_ACS_CARD_AND_PSW_TIMEOUT,                     //???“?????????∟???㊣
	EVENT_ACS_CARD_MAX_AUTHENTICATE_FAIL,               //???“?‾???∟?∫∼?????
	EVENT_ACS_CARD_NO_RIGHT,                            //?“??﹞????“??
	EVENT_ACS_CARD_INVALID_PERIOD,                      //?“?㊣?∼?㊣?????∫
	EVENT_ACS_CARD_OUT_OF_DATE,                         //?“??????
	EVENT_ACS_INVALID_CARD,                             //?????“??
	EVENT_ACS_ANTI_SNEAK_FAIL,                          //﹞??㊣?????∟?∫∼?
	EVENT_ACS_INTERLOCK_DOOR_NOT_CLOSE,                 //??????????㊣?
	EVENT_ACS_FINGERPRINT_COMPARE_PASS,                 //????㊣????“??
	EVENT_ACS_FINGERPRINT_COMPARE_FAIL,                 //????㊣????∫∼?
	EVENT_ACS_CARD_FINGERPRINT_VERIFY_PASS,             //???“?????????∟?“??
	EVENT_ACS_CARD_FINGERPRINT_VERIFY_FAIL,             //???“?????????∟?∫∼?
	EVENT_ACS_CARD_FINGERPRINT_VERIFY_TIMEOUT,          //???“?????????∟???㊣
	EVENT_ACS_CARD_FINGERPRINT_PASSWD_VERIFY_PASS,      //???“???????????????∟?“??
	EVENT_ACS_CARD_FINGERPRINT_PASSWD_VERIFY_FAIL,      //???“???????????????∟?∫∼?
	EVENT_ACS_CARD_FINGERPRINT_PASSWD_VERIFY_TIMEOUT,   //???“???????????????∟???㊣
	EVENT_ACS_FINGERPRINT_PASSWD_VERIFY_PASS,           //?????????????∟?“??
	EVENT_ACS_FINGERPRINT_PASSWD_VERIFY_FAIL,           //?????????????∟?∫∼?
	EVENT_ACS_FINGERPRINT_PASSWD_VERIFY_TIMEOUT,        //?????????????∟???㊣
	EVENT_ACS_FINGERPRINT_INEXISTENCE,                  //??????????
	EVENT_ACS_FACE_VERIFY_PASS,                         //???????∟?“??
	EVENT_ACS_FACE_VERIFY_FAIL,                         //???????∟?∫∼?
	EVENT_ACS_FACE_AND_FP_VERIFY_PASS,                  //?????????????∟?“??
	EVENT_ACS_FACE_AND_FP_VERIFY_FAIL,                  //?????????????∟?∫∼?
	EVENT_ACS_FACE_AND_FP_VERIFY_TIMEOUT,               //?????????????∟???㊣
	EVENT_ACS_FACE_AND_PW_VERIFY_PASS,                  //?????????????∟?“??
	EVENT_ACS_FACE_AND_PW_VERIFY_FAIL,                  //?????????????∟?∫∼?
	EVENT_ACS_FACE_AND_PW_VERIFY_TIMEOUT,               //?????????????∟???㊣
	EVENT_ACS_FACE_AND_CARD_VERIFY_PASS,                //?????????“???∟?“??
	EVENT_ACS_FACE_AND_CARD_VERIFY_FAIL,                //?????????“???∟?∫∼?
	EVENT_ACS_FACE_AND_CARD_VERIFY_TIMEOUT,             //?????????“???∟???㊣
	EVENT_ACS_FACE_AND_PW_AND_FP_VERIFY_PASS,           //???????????????????∟?“??
	EVENT_ACS_FACE_AND_PW_AND_FP_VERIFY_FAIL,           //???????????????????∟?∫∼?
	EVENT_ACS_FACE_AND_PW_AND_FP_VERIFY_TIMEOUT,        //???????????????????∟???㊣
	EVENT_ACS_FACE_AND_CARD_AND_FP_VERIFY_PASS,         //?????????“?????????∟?“??
	EVENT_ACS_FACE_AND_CARD_AND_FP_VERIFY_FAIL,         //?????????“?????????∟?∫∼?
	EVENT_ACS_FACE_AND_CARD_AND_FP_VERIFY_TIMEOUT,      //?????????“?????????∟???㊣
	EVENT_ACS_EMPLOYEENO_AND_FP_VERIFY_PASS,            //?∟???????????∟?“??
	EVENT_ACS_EMPLOYEENO_AND_FP_VERIFY_FAIL,            //?∟???????????∟?∫∼?
	EVENT_ACS_EMPLOYEENO_AND_FP_VERIFY_TIMEOUT,         //?∟???????????∟???㊣
	EVENT_ACS_EMPLOYEENO_AND_FP_AND_PW_VERIFY_PASS,     //?∟?????????????????∟?“??
	EVENT_ACS_EMPLOYEENO_AND_FP_AND_PW_VERIFY_FAIL,     //?∟?????????????????∟?∫∼?
	EVENT_ACS_EMPLOYEENO_AND_FP_AND_PW_VERIFY_TIMEOUT,   //?∟?????????????????∟???㊣
	EVENT_ACS_EMPLOYEENO_AND_FACE_VERIFY_PASS,          //?∟???????????∟?“??
	EVENT_ACS_EMPLOYEENO_AND_FACE_VERIFY_FAIL,          //?∟???????????∟?∫∼?
	EVENT_ACS_EMPLOYEENO_AND_FACE_VERIFY_TIMEOUT,       //?∟???????????∟???㊣
	EVENT_ACS_FACE_RECOGNIZE_FAIL,                      //??????㊣??∫∼?
	EVENT_ACS_EMPLOYEENO_AND_PW_PASS,                   //?∟???????????∟?“??
	EVENT_ACS_EMPLOYEENO_AND_PW_FAIL,                   //?∟???????????∟?∫∼?
	EVENT_ACS_EMPLOYEENO_AND_PW_TIMEOUT,                //?∟???????????∟???㊣
	EVENT_ACS_HUMAN_DETECT_FAIL,                        //?????足???∫∼?
	EVENT_ACS_PEOPLE_AND_ID_CARD_COMPARE_PASS,          //???∟㊣????“??
	EVENT_ACS_PEOPLE_AND_ID_CARD_COMPARE_FAIL,          //???∟㊣????∫∼?
	EVENT_ACS_DOOR_OPEN_OR_DORMANT_FAIL,                //??℅?????㊣??辰????℅??????∟?∫∼?
	EVENT_ACS_AUTH_PLAN_DORMANT_FAIL,                   //???∟???????????????∟?∫∼?
	EVENT_ACS_CARD_ENCRYPT_VERIFY_FAIL,                 //?“???????谷?∫∼?
	EVENT_ACS_SUBMARINEBACK_REPLY_FAIL,                 //﹞??㊣??﹞????‾?????∫∼?
	EVENT_ACS_PASSWORD_MISMATCH,                        //??????????
	EVENT_ACS_EMPLOYEE_NO_NOT_EXIST,                    //?∟????????
	EVENT_ACS_COMBINED_VERIFY_PASS,                     //℅谷?????∟?“??
	EVENT_ACS_COMBINED_VERIFY_TIMEOUT,                  //℅谷?????∟???㊣
	EVENT_ACS_VERIFY_MODE_MISMATCH,                     //???∟﹞?????????
	EVENT_ACS_PSW_ERROR_OVER_TIMES,                     //???????∟????  67
	EVENT_ACS_PSW_VERIFY_PASS,                          //???????∟?“??
	EVENT_ACS_PSW_VERIFY_FAIL,                          //???????∟?∫∼?
	EVENT_ACS_ORCODE_VERIFY_PASS,                       //?????????∟?“??
	EVENT_ACS_ORCODE_VERIFY_FAIL,                       //?????????∟?∫∼?
	EVENT_ACS_HOUSEHOLDER_AUTHORIZE_PASS,               //?∫?‾???“???∟?“??
	EVENT_ACS_BLUETOOTH_VERIFY_PASS,                    //???????∟?“??
	EVENT_ACS_BLUETOOTH_VERIFY_FAIL,                    //???????∟?∫∼? 74
	EVENT_ACS_INFORMAL_MIFARE_CARD_VERIFY_FAIL,         //﹞?????Mifare?“???∟?∫∼?
	EVENT_ACS_CPU_CARD_ENCRYPT_VERIFY_FAIL,             //CPU?“???????谷?∫∼?
	EVENT_ACS_NFC_DISABLE_VERIFY_FAIL                   //NFC??????㊣??谷?∟?∫∼?
}ACS_CARD_READER_SUBEVENT_ENUM;

typedef struct tagNET_DVR_EVENT_LINKAGE_INFO
{
	WORD          wMainEventType;                     //?????‾?角????0-?豕㊣???????1-㊣“????????????2-????????3-???“?‾????
	WORD          wSubEventType;                      //???????角??
	BYTE          byRes[28];
}NET_DVR_EVENT_LINKAGE_INFO, *LPNET_DVR_EVENT_LINKAGE_INFO;

typedef  union tagNET_DVR_EVETN_CARD_LINKAGE_UNION
{
	BYTE                           byCardNo[ACS_CARD_NO_LEN];          //?“??
	NET_DVR_EVENT_LINKAGE_INFO  struEventLinkage;                   //?????????㊣????
	BYTE                           byMACAddr[MACADDR_LEN];          //???赤MAC???﹞
	BYTE  byEmployeeNo[NET_SDK_EMPLOYEE_NO_LEN]; //?∟???“???㊣ID??
}NET_DVR_EVETN_CARD_LINKAGE_UNION, *LPNET_DVR_EVETN_CARD_LINKAGE_UNION;

typedef struct tagNET_DVR_EVENT_CARD_LINKAGE_CFG
{
	DWORD            dwSize;    //?芍?????車??
	BYTE              byProMode;                          //????﹞?????0-??????1-?“??   
	BYTE            byRes1[3];
	DWORD           dwEventSourceID;                    //??????ID???㊣?‾?角?????豕㊣??????㊣???∫?? ?㊣?‾?角???????????㊣????㊣角??;?㊣?‾?角???????“?‾?????㊣???????“?‾ID;?㊣??㊣“???????????㊣??﹞???㊣“??????ID?辰????㊣“??????ID
	NET_DVR_EVETN_CARD_LINKAGE_UNION     uLinkageInfo;  //????﹞???????
	BYTE           byAlarmout[MAX_ALARMHOST_ALARMOUT_NUM];            //??????㊣“??????????∼???℅谷㊣赤??????0㊣赤????????????1㊣赤??????
	BYTE           byRes2[32];                         //㊣???
	BYTE           byOpenDoor[MAX_DOOR_NUM_256];     //∼???℅谷㊣赤??,??﹞???????????0-????????1-????
	BYTE           byCloseDoor[MAX_DOOR_NUM_256];    //∼???℅谷㊣赤??,??﹞???????????0-????????1-????
	BYTE           byNormalOpen[MAX_DOOR_NUM_256];   //∼???℅谷㊣赤??,??﹞???????????0-????????1-????
	BYTE           byNormalClose[MAX_DOOR_NUM_256];  //∼???℅谷㊣赤??,??﹞???????????0-????????1-????
	BYTE           byMainDevBuzzer;                    //?‾?迆﹞??迄?‾   0-????????1-????????
	BYTE           byCapturePic;                           //??﹞?????℅?????0-??????℅?????1-????℅???
	BYTE           byRecordVideo;                          //??﹞???????????0-????????????1-????????
	BYTE           byRes3[29];                         //㊣???
	BYTE           byReaderBuzzer[MAX_CARD_READER_NUM_512]; //???????“?‾﹞??迄?‾??∼???℅谷㊣赤????0-????????1-????
	BYTE           byRes[128];                           //㊣???
}NET_DVR_EVENT_CARD_LINKAGE_CFG, *LPNET_DVR_EVENT_CARD_LINKAGE_CFG;

typedef struct tagNET_DVR_EVENT_LINKAGE_CARD_CFG_V50
{
	DWORD            dwSize;    //?芍?????車??
	BYTE              byProMode;                          //????﹞?????0-??????1-?“??, 2-MAC???﹞   
	BYTE           byRes1[3];
	DWORD         dwEventSourceID;                    //??????ID???㊣?‾?角?????豕㊣??????㊣???∫?? ?㊣?‾?角???????????㊣????㊣角??;?㊣?‾?角???????“?‾?????㊣???????“?‾ID;?㊣??㊣“???????????㊣??﹞???㊣“??????ID?辰????㊣“??????ID??0xffffffff㊣赤??????????
	NET_DVR_EVETN_CARD_LINKAGE_UNION     uLinkageInfo;  //????﹞???????
	BYTE           byAlarmout[MAX_ALARMHOST_ALARMOUT_NUM];            //??????㊣“??????????∼???㊣赤??????0㊣赤????????????1㊣赤??????
	BYTE           byRes2[32];                         //㊣???
	BYTE           byOpenDoor[MAX_DOOR_NUM_256];     //∼???㊣赤??,??﹞???????????0-????????1-????
	BYTE           byCloseDoor[MAX_DOOR_NUM_256];    //∼???㊣赤??,??﹞???????????0-????????1-????
	BYTE           byNormalOpen[MAX_DOOR_NUM_256];   //∼???㊣赤??,??﹞???????????0-????????1-????
	BYTE           byNormalClose[MAX_DOOR_NUM_256];  //∼???㊣赤??,??﹞???????????0-????????1-????
	BYTE           byMainDevBuzzer;                    //?‾?迆﹞??迄?‾   0-????????1-????????
	BYTE           byCapturePic;                           //??﹞?????℅?????0-??????℅?????1-????℅???
	BYTE           byRecordVideo;                          //??﹞???????????0-????????????1-????????
	BYTE           byRes3[29];                         //㊣???
	BYTE           byReaderBuzzer[MAX_CARD_READER_NUM_512]; //???????“?‾﹞??迄?‾??∼???㊣赤????0-????????1-????
	BYTE           byAlarmOutClose[MAX_ALARMHOST_ALARMOUT_NUM];            //????㊣“????????㊣???∼?℅???㊣赤??????0㊣赤????????????1㊣赤??????
	BYTE           byAlarmInSetup[MAX_ALARMHOST_ALARMIN_NUM];  //????﹞?????﹞???∼?℅???㊣赤??????0㊣赤????????????1㊣赤??????
	BYTE           byAlarmInClose[MAX_ALARMHOST_ALARMIN_NUM];  //????﹞????﹞﹞???∼?℅???㊣赤??????0㊣赤????????????1㊣赤??????
	BYTE           byRes[500];                           //㊣???
}NET_DVR_EVENT_CARD_LINKAGE_CFG_V50, *LPNET_DVR_EVENT_CARD_LINKAGE_CFG_V50;

typedef struct tagNET_DVR_EVENT_LINKAGE_CARD_CFG_V51
{
	DWORD          dwSize;    //?芍?????車??
	BYTE           byProMode;                          //????﹞?????0-??????1-?“????2-MAC???﹞??3-?∟???“???㊣ID??
	BYTE           byRes1[3];
	DWORD         dwEventSourceID;                    //??????ID???㊣?‾?角?????豕㊣??????㊣???∫?? ?㊣?‾?角???????????㊣????㊣角??;?㊣?‾?角???????“?‾?????㊣???????“?‾ID;?㊣??㊣“???????????㊣??﹞???㊣“??????ID?辰????㊣“??????ID??0xffffffff㊣赤??????????
	NET_DVR_EVETN_CARD_LINKAGE_UNION    uLinkageInfo;  //????﹞???????
	BYTE           byAlarmout[MAX_ALARMHOST_ALARMOUT_NUM];            //??????㊣“??????????∼???㊣赤??????0㊣赤????????????1㊣赤??????
	BYTE           byRes2[32];                         //㊣???
	BYTE           byOpenDoor[MAX_DOOR_NUM_256];     //∼???㊣赤??,??﹞???????????0-????????1-????
	BYTE           byCloseDoor[MAX_DOOR_NUM_256];    //∼???㊣赤??,??﹞???????????0-????????1-????
	BYTE           byNormalOpen[MAX_DOOR_NUM_256];   //∼???㊣赤??,??﹞???????????0-????????1-????
	BYTE           byNormalClose[MAX_DOOR_NUM_256];  //∼???㊣赤??,??﹞???????????0-????????1-????
	BYTE           byMainDevBuzzer;                    //?‾?迆﹞??迄?‾   0-????????1-????????
	BYTE           byCapturePic;                           //??﹞?????℅?????0-??????℅?????1-????℅???
	BYTE           byRecordVideo;                          //??﹞???????????0-????????????1-????????
	BYTE           byMainDevStopBuzzer;               //?‾?迆????﹞??迄   0-????????1-????????
	WORD           wAudioDisplayID;                    //??????????﹞?ID??0-???????????∼﹞??∫1-32
	BYTE           byAudioDisplayMode;                 //??????????﹞???????0-??㊣???1-??????﹞???2-???﹞??﹞?
	BYTE           byRes3[25];                         //㊣???
	BYTE           byReaderBuzzer[MAX_CARD_READER_NUM_512]; //???????“?‾﹞??迄?‾??∼???㊣赤????0-????????1-????
	BYTE           byAlarmOutClose[MAX_ALARMHOST_ALARMOUT_NUM];            //????㊣“????????㊣???∼?℅???㊣赤??????0㊣赤????????????1㊣赤??????
	BYTE           byAlarmInSetup[MAX_ALARMHOST_ALARMIN_NUM];  //????﹞?????﹞???∼?℅???㊣赤??????0㊣赤????????????1㊣赤??????
	BYTE           byAlarmInClose[MAX_ALARMHOST_ALARMIN_NUM];  //????﹞????﹞﹞???∼?℅???㊣赤??????0㊣赤????????????1㊣赤??????
	BYTE           byReaderStopBuzzer[MAX_CARD_READER_NUM_512]; //???????“?‾????﹞??迄??∼?℅???㊣赤????0-????????1-????
	BYTE           byRes[512];                   //㊣???
}NET_DVR_EVENT_CARD_LINKAGE_CFG_V51, *LPNET_DVR_EVENT_CARD_LINKAGE_CFG_V51;

typedef struct tagNET_DVR_EVENT_CARD_LINKAGE_COND
{
	DWORD dwSize;
	DWORD dwEventID; //????ID
	WORD wLocalControllerID; //?????????‾?辰??[1,64]
	BYTE byRes[106];
}NET_DVR_EVENT_CARD_LINKAGE_COND, *LPNET_DVR_EVENT_CARD_LINKAGE_COND;

typedef struct tagNET_DVR_RIGHT_CONTROLLER_AUDIO_PARAM
{
	DWORD dwSize;
	DWORD dwFileSize;     //?????車??????????℅????“?????????????㊣???∫???????????????㊣???∫??
	DWORD dwAudioID;      //????ID?“0xffffffff?迆㊣赤????/?????????????????????∼?豕㊣????∫??????????/?????????∫??????????ID????/??????
	BYTE  byRes[256];
}NET_DVR_RIGHT_CONTROLLER_AUDIO_PARAM, *LPNET_DVR_RIGHT_CONTROLLER_AUDIO_PARAM;

typedef struct tagNET_DVR_ANTI_SNEAK_HOST_INFO
{
	NET_DVR_ADDRESS   struDVRIP;     //?‾?迆IP???﹞
	BYTE   byIsStartAddr; //??﹞??????????﹞??0-﹞???1-??
	BYTE   byHostNo;      //?‾?迆㊣角????1-8???‾?????????“?‾???辰?豕??
	BYTE   byRes[34];     //㊣???
}NET_DVR_ANTI_SNEAK_HOST_INFO, *LPNET_DVR_ANTI_SNEAK_HOST_INFO;

typedef struct tagNET_DVR_ANTI_SNEAK_HOST_READER_INFO
{
	BYTE  byAntiSnealHostNo;   //﹞??㊣???‾?迆㊣角??
	BYTE  byRes[5];           //㊣???
	WORD wFollowUpCardReader; //??﹞??㊣???‾?迆???????“?‾㊣角??
}NET_DVR_ANTI_SNEAK_HOST_READER_INFO, *LPNET_DVR_ANTI_SNEAK_HOST_READER_INFO;

typedef struct tagNET_DVR_ANTI_SNEAK_MULTI_HOST_CFG
{
	DWORD       dwSize;
	BYTE byEnable; //??﹞?????﹞??㊣???﹞????1-??????0-??????
	BYTE byRes1[3];
	NET_DVR_ANTI_SNEAK_HOST_INFO struSneakHost[MAX_SNEAK_PATH_NODE]; //?車???‾?迆???﹞????
	NET_DVR_ANTI_SNEAK_HOST_READER_INFO struStartReader;  //???????“?‾㊣角?? ?㊣??????????0?㊣??㊣赤??????℅??????????“?‾????
	BYTE byRes2[128];
}NET_DVR_ANTI_SNEAK_MULTI_HOST_CFG, *LPNET_DVR_ANTI_SNEAK_MULTI_HOST_CFG;

typedef struct tagNET_DVR_ANTI_SNEAK_READER_CFG
{
	BYTE         byEnable;             //??﹞?????﹞??㊣???﹞????1-??????0-??????
	BYTE          byAntiSnealHostNo;   //﹞??㊣???‾?迆㊣角??
	WORD         wReaderID;              //???“?‾ID
	NET_DVR_ANTI_SNEAK_HOST_READER_INFO struSneakReaderInfo[MAX_SNEAK_PATH_NODE]; //?車???‾?迆???“?‾㊣角??
	BYTE byRes2[8];
}NET_DVR_ANTI_SNEAK_READER_CFG, *LPNET_DVR_ANTI_SNEAK_READER_CFG;

typedef struct tagNET_DVR_ANTI_SNEAK_MULTI_HOST_READERS_CFG
{
	DWORD           dwSize;
	NET_DVR_ANTI_SNEAK_READER_CFG struReaderCfg[MAX_READER_ROUTE_NUM];  //???“?‾????
	BYTE            byRes[128];
}NET_DVR_ANTI_SNEAK_MULTI_HOST_READERS_CFG, *LPNET_DVR_ANTI_SNEAK_MULTI_HOST_READERS_CFG;

typedef struct tagNET_DVR_ACS_CFG
{
	DWORD           dwSize;            //?芍?????車??
	BYTE            byRS485Backup;  //??﹞?????????RS485?“??㊣?﹞???????0-????????1-????
	BYTE            byShowCapPic;    //??﹞?????℅????????? 0-????????1-????
	BYTE            byShowCardNo;    //??﹞??????“????0-????????1-????
	BYTE            byShowUserInfo;  //??﹞????????∫??????0-????????1-????
	BYTE            byOverlayUserInfo;//??﹞????????∫??????0-????????1-????
	BYTE            byVoicePrompt;  //??﹞??????????芍????0-????????1-????
	BYTE             byUploadCapPic;     //????℅?????﹞???????????0-????????1-????
	BYTE             bySaveCapPic;    //??﹞?㊣???℅?????????0-??㊣?????1-㊣???
	BYTE            byInputCardNo;  //??﹞???﹞????赤∼??邦?????“????0-?????赤??1-???赤
	BYTE            byEnableWifiDetect;  //??﹞?????wifi??????0-????????1-????
	BYTE            byEnable3G4G;  //3G4G??????0-????????1-????
	BYTE            byProtocol;//???“?‾?“?????谷?角????0-???????谷?“????????1-OSDP???谷
	BYTE byRes[500];
}NET_DVR_ACS_CFG, *LPNET_DVR_ACS_CFG;

typedef struct tagNET_DVR_PLATFORM_VERIFY_CFG
{
	DWORD       dwSize;
	DWORD        dwDoorNo; //??㊣角??
	BYTE        byResultType; //???∟?芍???角????0??﹞?﹞“??1????﹞“
	BYTE        byRes1[3];
	BYTE        byScreenDisplay[MAX_SCREEN_DISPLAY_LEN]; //LED?????????????????????∟?角??????
	BYTE        byRes[300];                  // ㊣???℅???
}NET_DVR_PLATFORM_VERIFY_CFG, *LPNET_DVR_PLATFORM_VERIFY_CFG;

typedef struct tagNET_DVR_PERSON_STATISTICS_CFG
{
	DWORD dwSize;
	BYTE byEnableStatistics;  //??﹞???????????????0??????????1????????
	BYTE byEnableOfflineStatistics;  //??﹞???????????????????0??????????1????????
	BYTE byCountSignalStatisticalStandard;  //????????????㊣那℅???0?????∫??1???足???足???“????????2?????∟????????
	BYTE byRes[605];
}NET_DVR_PERSON_STATISTICS_CFG, *LPNET_DVR_PERSON_STATISTICS_CFG;

typedef struct tagNET_DVR_ACS_SCREEN_DISPLAY_CFG
{
	DWORD dwSize;
	DWORD dwFontSize;  //℅????車????[1,10]??
	DWORD dwRowSpacing;  //?????角????????????????
	DWORD dwColumnSpacing;  //?????角????????????????
	DWORD dwFirstRowPosition;  //??????????????????????﹞??谷??0??0?? 1??1/8:?? 2??2/8?? 3??3/8?? 4??4/8?? 5??5/8?? 6??6/8:?? 7??7/8??
	BYTE byDegree;  //℅?﹞?????﹞??辰??????0-0???“????????1-90???“?角℅?????
	BYTE byScreenType;  //?????角????0-DC48270RS043_01T??1-DC80480B070_03T??
	BYTE byRes[306];
}NET_DVR_ACS_SCREEN_DISPLAY_CFG, *LPNET_DVR_ACS_SCREEN_DISPLAY_CFG;

typedef struct tagNET_DVR_GATE_TIME_CFG
{
	DWORD dwSize;
	DWORD dwHoldOnALarmTime;  //????㊣“???‾﹞??迄?㊣????????ms
	DWORD dwHoldOnGateOpenTime;  //??????????㊣??邦???∼????㊣????辰??℅????㊣????????ms
	DWORD dwPostponeIntrusionAlarmTime;  //??????﹞?????????????㊣“???㊣????????ms
	DWORD dwNoLaneAccessTimeLimitTime;  //?“?????????∫?“?????∟?????????????“?????㊣㊣“???㊣????????s
	DWORD dwSafetyZoneStayTime;  //?“?????????∫?“?????∟??????????????∼??????車?????“?????㊣㊣“???㊣????????s
	BYTE byIRTriggerTimeoutTime;  //?足????﹞????㊣?㊣?????????????“0-255??
	BYTE byRes[299];
}NET_DVR_GATE_TIME_CFG, *LPNET_DVR_GATE_TIME_CFG;


typedef struct tagNET_DVR_CARD_PASSWD_CFG
{
	DWORD dwSize;
	BYTE byCardNo[ACS_CARD_NO_LEN]; //?“??
	BYTE byCardPassword[CARD_PASSWORD_LEN]; //?“????
	DWORD dwErrorCode; //?????“????????????????﹞??????赤?車??????????0???∫∼?﹞????赤?車??
	BYTE byCardValid; //?“??﹞????∫??0-???∫??1-???∫?“?????????“???豕???㊣????0???????????????㊣??℅?????????1??
	BYTE byRes2[23];
}NET_DVR_CARD_PASSWD_CFG, *LPNET_DVR_CARD_PASSWD_CFG;

typedef struct tagNET_DVR_CARD_PASSWD_STATUS
{
	DWORD dwSize;
	BYTE byCardNo[ACS_CARD_NO_LEN]; //?“??
	DWORD dwErrorCode; //﹞????“????????????????﹞??????赤?車??????????0???∫∼?﹞????赤?車?? 
	BYTE byRes2[24];
}NET_DVR_CARD_PASSWD_STATUS, *LPNET_DVR_CARD_PASSWD_STATUS;

//?????芍??
typedef struct tagNET_DVR_VEHICLE_RECOG_COND
{
	DWORD  dwSize;
	DWORD  dwChannel;
	BYTE   byRes[64];
} NET_DVR_VEHICLE_RECOG_COND, *LPNET_DVR_VEHICLE_RECOG_COND;

//?????芍??
typedef struct tagNET_DVR_VEHICLE_RECOG_CFG
{
	DWORD  dwSize;
	//?????‾???? ???“????????NET_DVR_VEHICLE_RECOG_RESULT????℅???sDataIndex??????
	char   sDataIndex[DATA_INDEX_LEN];
	//???????赤?? ?? (????????NET_DVR_VEHICLE_RECOG_RESULT????℅???dwTaskNo????)
	WORD  wTaskNo;
	BYTE  byRes1[2];
	NET_VCA_RECT  struPlateRect;//????????
	char  sLicense[MAX_LICENSE_LEN/*16*/];//????????
										  /*
										  ??????????????㊣???℅‾
										  bit0-??????㊣???0-????????㊣???1-??????㊣???
										  bit1-?????角????㊣???0-????????㊣???1-??????㊣???
										  bit2-???赤??????㊣???0-????????㊣???1-??????㊣???
										  bit3-?????﹞????㊣???0-????????㊣???1-??????㊣???
										  bit4-????∼???㊣?(?‾????)??0-????????㊣???1-??????㊣???
										  bit5-∼???????㊣?(?‾????)??0-????????㊣???1-??????㊣???
										  bit6-????∼???㊣?(?㊣????)??0-????????㊣???1-??????㊣???
										  bit7-∼???????㊣?(?㊣????)??0-????????㊣???1-??????㊣???
										  bit8-??????????????????0-????????㊣???1-??????㊣???
										  bit9-????????????????(?“??SDK)??0-????????㊣???1-??????㊣???
										  bit10-????????????????(?“??URL)??0-????????㊣???1-??????㊣???
										  bit11-??㊣那????0-????????㊣???1-??????㊣???
										  bit12-?辰???迆??0-????????㊣???1-??????㊣???
										  bit13-??????0-????????㊣???1-??????㊣???
										  bit14-?????﹞??: 0-????????㊣???1-??????㊣???
										  bit15-?????足?∼?????足??: 0-????????㊣???1-??????㊣???
										  */
	DWORD  dwRecogOperate;
	/*
	????????????????
	bit0-??????????0-????????1-??????
	bit1-??????????0-????????1-??????
	bit2-????℅???(?‾????)??0-????????1-??????
	bit3-????℅???(?㊣????)??0-????????1-??????
	bit4-∼?????℅???(?‾????)??0-????????1-??????
	bit5-∼?????℅???(?㊣????)??0-????????1-??????
	*/
	DWORD  dwDataUploadType;
	DWORD  dwPostID;//?“??ID??
	NET_DVR_TIME_V30 struPostTime;//?????㊣??
	DWORD  dwJsonLen; //Json?????????∟??
	BYTE	*pJsonBuffer;//Json????????,????4.2.4Json????????
	BYTE   byRes[107];
	BYTE   byPicDataType;//?????????角????0-??????????1-URL
						 //????????
						 //?㊣byPicDataType == 0???㊣?辰????℅??????????????∫?????????????芍?????車??
						 //?㊣byPicDataType == 1???㊣?辰???????“????????URL????
	char  sPicDataPath[256];
}NET_DVR_VEHICLE_RECOG_CFG, *LPNET_DVR_VEHICLE_RECOG_CFG;

typedef struct tagNET_DVR_VEHICLERECOG_TASK_RESULT
{
	DWORD  dwSize;
	//?豕㊣??????‾????,?????芍?????????豕㊣??芍℅????迆???“?????‾????﹞???????????
	char     sDevDataIndex[MAX_DEV_DATAINDEX_LEN/*64*/];
	BYTE   byRes[256];
}NET_DVR_VEHICLERECOG_TASK_RESULT, *LPNET_DVR_VEHICLERECOG_TASK_RESULT;

//?????芍??
typedef struct tagNET_DVR_VEHICLE_RECOG_TASK_COND
{
	DWORD  dwSize;
	DWORD  dwChannel; //?“????
	char   sDataIndex[DATA_INDEX_LEN];//?????‾????    ??0???㊣?辰㊣赤?????????? 
	WORD  wTaskNo;//???????赤??         ????0???㊣?辰㊣赤??????????
				  /*
				  ????℅???
				  bit0-?那??℅???????????0-???谷????1-?谷????
				  bit1-??????????????0-???谷????1-?谷????
				  bit2-??????????????0-???谷????1-?谷????
				  */
	BYTE   byTask;
	BYTE   byRes1;
	//?豕㊣??????‾?????谷??,?????芍?????????豕㊣??芍℅????迆???“?????‾??????
	char   sDevDataIndex[MAX_DEV_DATAINDEX_LEN/*64*/];
	BYTE   byRes[60];
}NET_DVR_VEHICLE_RECOG_TASK_COND, *LPNET_DVR_VEHICLE_RECOG_TASK_COND;

//?????芍??
typedef struct tagNET_DVR_VEHICLE_RECOG_TASK_INFO
{
	DWORD  dwSize;
	DWORD  dwChannel; //?“????
	char   sDataIndex[DATA_INDEX_LEN];//?????‾????
	WORD  wTaskNo;//???????赤??
	WORD  wTaskProgress;//?????????????“????????*1000??
	BYTE   byTaskState;//????℅?????0-????????1-????????2-?那??
	BYTE   byRes1[3];
	/*
	??????????????㊣???℅‾
	bit0-??????㊣???0-????????㊣???1-??????㊣???
	bit1-?????角????㊣???0-????????㊣???1-??????㊣???
	bit2-???赤??????㊣???0-????????㊣???1-??????㊣???
	bit3-?????﹞????㊣???0-????????㊣???1-??????㊣???
	bit4-????∼???㊣?(?‾????)??0-????????㊣???1-??????㊣???
	bit5-∼???????㊣?(?‾????)??0-????????㊣???1-??????㊣???
	bit6-????∼???㊣?(?㊣????)??0-????????㊣???1-??????㊣???
	bit7-∼???????㊣?(?㊣????)??0-????????㊣???1-??????㊣???
	bit8-??????????????????0-????????㊣???1-??????㊣???
	bit9-????????????????(?“??SDK)??0-????????㊣???1-??????㊣???
	bit10-????????????????(?“??URL)??0-????????㊣???1-??????㊣???
	bit11-??㊣那????0-????????㊣???1-??????㊣???
	bit12-?辰???迆??0-????????㊣???1-??????㊣???
	bit13-??????0-????????㊣???1-??????㊣???
	bit14-?????﹞??: 0-????????㊣???1-??????㊣???
	bit15-?????足?∼?????足??: 0-????????㊣???1-??????㊣???
	*/
	DWORD  dwRecogOperate;
	DWORD  dwPostID;//?“??ID??
	NET_DVR_TIME_V30 struPostTime;//?????㊣??
	DWORD  dwJsonLen; //Json?????????∟???“?∟????JSON??????????????
	BYTE   *pJsonBuffer;//Json????????, ?“?∟????JSON??????????????
	BYTE   byRes[104];
}NET_DVR_VEHICLE_RECOG_TASK_INFO, *LPNET_DVR_VEHICLE_RECOG_TASK_INFO;

typedef struct tagNET_DVR_VEHICLE_RECOG_RESULT
{
	DWORD dwSize;   //?芍??
					//?????‾???? ???“?????芍??NET_DVR_VEHICLE_RECOG_CFG????℅???sDataIndex??????
	char   sDataIndex[DATA_INDEX_LEN];
	//???????赤?? ?? (?????芍??NET_DVR_VEHICLE_RECOG_CFG????℅???wTaskNo????)
	WORD  wTaskNo;
	BYTE   byRes[2];
	NET_VCA_RECT  struPlateRect;//????????
	char  sLicense[MAX_LICENSE_LEN/*16*/];//????????
	BYTE  byVehicleType;    //?????角????????VTR_RESULT
	BYTE  byColorDepth;     //???赤?????????????? 0-??????1-????
	BYTE  byColor;         //???赤????,  ????VCR_CLR_CLASS
	BYTE  byVehicleLogoRecog; //?????‾?﹞??
	BYTE  byVehicleSubLogoRecog; //????℅??﹞??
	BYTE  byPilotSafebelt;//0-㊣赤??????,1-????∼?????,2-??∼?????
	BYTE  byCopilotSafebelt;//0-㊣赤??????,1-????∼?????,2-??∼?????
	BYTE  byPilotSunVisor;//0-㊣赤??????,1-???辰??????∼?,2-?辰??????∼?
	BYTE  byCopilotSunVisor;//0-㊣赤??????, 1-???辰??????∼?,2-?辰??????∼?
	BYTE  byVehicleModel;// ????????  ????℅??﹞???那??
	WORD  wVehicleLogoRecog;  //?????‾?﹞????????"?????‾?﹞??.xlsx" 
	BYTE  byRes1[251];
	// 0-?????㊣??????; 1-??????﹞????‾URL??????????????㊣???URL???????????∟??㊣???URL?∟??
	BYTE  byDataType;
	/*
	?????????角??????:
	bit0-????????0-????????1-??????
	bit1-????????0-????????1-??????
	bit2-????℅???(?‾????)??0-????????1-??????
	bit3-????℅???(?㊣????)??0-????????1-??????
	bit4-∼???????㊣?(?‾????)??0-????????1-??????
	bit5-∼???????㊣?(?㊣????)??0-????????1-??????
	*/
	DWORD  dwPicType; //0:??????????;: ??????;:??????;
	BYTE    *pVehicleBuffer;    //????????????????
	DWORD  dwVehicleBufferLen;// ?????????????∟??
	BYTE    *pPlateBuffer;    //????????????????
	DWORD  dwPlateBufferLen;// ?????????????∟??
	BYTE    *pPilotFaceBuffer;    //????℅???(?‾????)????????????
	DWORD  dwPilotFaceBufferLen;// ????℅???(?‾????)?????????∟??
	BYTE    *pCopilotFaceBuffer;    //????℅???(?㊣????)????????????
	DWORD  dwCopilotFaceBufferLen;// ????℅???(?㊣????)?????????∟??
	BYTE    *pPilotSafebeltBuffer;    //∼???????㊣?(?‾????)????????????
	DWORD  dwPilotSafebeltBufferLen;// ∼???????㊣?(?‾????)?????????∟??
	BYTE    *pCopilotSafebeltBuffer;// ∼???????㊣?(?㊣????)????????????
	DWORD  dwCopilotSafebeltBufferLen;// ∼???????㊣?(?㊣????)?????????∟??
	NET_VCA_RECT  struVehicleRect;//???赤????℅?㊣那
	NET_VCA_RECT  struPilotRect;//?‾????????℅?㊣那
	NET_VCA_RECT  struCopilotRect;//?㊣????????℅?㊣那
	BYTE    *pJsonBuffer;//Json????????,????JSON????????
	DWORD   dwJsonBufferLen;// Json?????∟??
	DWORD   dwPostID;//?“??ID
	NET_DVR_TIME_V30 struPostTime;//?????㊣??
	BYTE    Res2[56];
}NET_DVR_VEHICLE_RECOG_RESULT, *LPNET_DVR_VEHICLE_RECOG_RESULT;

#define MAX_ZONE_LINKAGE_CHAN_NUM    4    /* ﹞???????℅??車?“????*/

typedef struct tagNET_DVR_CENTER_SERVER_CFG_
{
	DWORD                    dwSize;
	BYTE    byAddressType;    //0 - ipv4/ipv6???﹞??1 - ?辰??
	BYTE    byRes1;
	WORD    wServerPort;                //﹞????‾????
	union
	{
		struct
		{
			BYTE            szDomain[MAX_DOMAIN_NAME];
			BYTE            byRes2[80];
		}struDomain;                    //﹞????‾?辰??
		struct
		{
			NET_DVR_IPADDR    struIp;
		}struAddrIP;                    //IP???﹞
	}unionServer;//???????????芍?????“??byAddressType℅???㊣赤????IP???﹞?????辰??
	WORD                    wInterval;    //㊣“???????㊣??,0-30s
	BYTE                    byRes3[514];
}NET_DVR_CENTER_SERVER_CFG, *LPNET_DVR_CENTER_SERVER_CFG;

typedef struct tagNET_DVR_SINGLE_CHANNEL_LINKAGE_CFG_
{
	BYTE    byDDNSType;        //?辰??﹞????‾?角????0 - ???∫??1 - IPServer(????DNS)??2 - hiDDNS
	BYTE    byRes1;
	WORD    wDDNSPort;                        //?辰??﹞????‾??????
	BYTE    byServerAddr[MAX_DOMAIN_NAME];    //?辰??﹞????‾???﹞
	BYTE    byDevName[MAX_DOMAIN_NAME];            //?豕㊣?????
	BYTE    byDevSerialNum[SERIALNO_LEN];    //?豕㊣??辰????
	BYTE    byAddressType;    //0 - ipv4/ipv6???﹞??1 - ?辰??
	BYTE    byRes2;
	WORD    wDevPort;        //?豕㊣???????    
	union
	{
		struct
		{
			BYTE            szDomain[MAX_DOMAIN_NAME];
			BYTE            byRes2[80];
		}struDomain;                                    //?辰??
		struct
		{
			NET_DVR_IPADDR    struIp;
		}struAddrIP;                                    //IP???﹞
	}unionDevAddr;//???????????芍?????“??byAddressType℅???㊣赤????IP???﹞?????辰??
	BYTE    sUserName[NAME_LEN/*32*/];    //???∫??
	BYTE    sPassword[PASSWD_LEN/*16*/];//????
	DWORD    dwChannel;                    //?????“????
	BYTE    byRes3[32];
}NET_DVR_SINGLE_CHANNEL_LINKAGE_CFG, *LPNET_DVR_SINGLE_CHANNEL_LINKAGE_CFG;

typedef struct tagNET_DVR_REGION_CHANNEL_LINKAGE_CFG_
{
	DWORD    dwSize;
	NET_DVR_SINGLE_CHANNEL_LINKAGE_CFG struLinkChannels[MAX_ZONE_LINKAGE_CHAN_NUM];    // ????﹞????????????????????“??
	BYTE    byRes[64];
}NET_DVR_ZONE_CHANNEL_LINKAGE_CFG, *LPNET_DVR_ZONE_CHANNEL_LINKAGE_CFG;

typedef struct tagNET_DVR_SINGLE_ASSOCIATED_CHAN_CFG
{
	BYTE    byDevSerialNo[SERIALNO_LEN];    //?豕㊣??辰????
	DWORD    dwChannel;                        //?????“????
	BYTE    byRes[64];
}NET_DVR_SINGLE_ASSOCIATED_CHAN_CFG, *LPNET_DVR_SINGLE_ASSOCIATED_CHAN_CFG;

typedef struct tagNET_DVR_ALARMIN_ASSOCIATED_CHAN_CFG
{
	WORD    wZoneNo;
	BYTE    byRes1[2];
	NET_DVR_SINGLE_ASSOCIATED_CHAN_CFG struSingleChanCfg[MAX_ZONE_LINKAGE_CHAN_NUM];
	BYTE    byRes2[64];
}NET_DVR_ALARMIN_ASSOCIATED_CHAN_CFG, *LPNET_DVR_ALARMIN_ASSOCIATED_CHAN_CFG;

typedef struct tagNET_DVR_ALARMIN_ASSOCIATED_CHAN_CFG_LIST_
{
	DWORD    dwSize;
	NET_DVR_ALARMIN_ASSOCIATED_CHAN_CFG struAssociatedChanCfg[MAX_MAX_ALARMIN_NUM];
	BYTE    byRes[64];
}NET_DVR_ALARMIN_ASSOCIATED_CHAN_CFG_LIST, *LPNET_DVR_ALARMIN_ASSOCIATED_CHAN_CFG_LIST;

typedef struct tagNET_DVR_LCD_ALARM
{
	DWORD dwSize;
	DWORD dwScreenID;    //?????‾????
	BYTE byOnOffLine;    //??????﹞???????0-??????1-???????㊣?????????㊣??㊣??芍???車?????????∫
	BYTE byTempState;    //∼??“????℅?????0-??????1-?足??
	BYTE byFanState;        //﹞???℅?????0-????1-??
	BYTE byFanException;    //﹞????足??℅?????0-???∫?? 1-??????2-?足??
	BYTE byTemperature;    //????∼??“??????????????????
	BYTE byRes[27];
}NET_DVR_LCD_ALARM, *LPNET_DVR_LCD_ALARM;

//?????‾????????
typedef struct tagNET_DVR_SENSOR_INFO_UPLOAD
{
	DWORD   dwSize;
	NET_DVR_TIME_V30  struTime;
	char    szSensorName[MAX_SENSORNAME_LEN]; //?????‾????
	char    szSensorChan[MAX_SENSORCHAN_LEN]; //?????‾?“??
	BYTE    byReboot; //???∼??﹞????????“??∼??????????車????????????????????㊣那????0-㊣赤????????????1-????????
	BYTE    byPowerSupply;//??﹞????????? 0-??????????1-????????
	BYTE    byStatusType;//?豕㊣?℅???:0:??????1???足????2??㊣“??
	BYTE    bySensorType;//?????????‾?????角??SENSOR_TYPE
	float      fVoltageValue;//???????? ???﹞??0.001
	float    fCurrentValue;//???‾???????﹞??0.001
	float   fActualValue;//????????℅????車???????????﹞??0.001
	char    szDescription[MAX_DESCRIPTION_LEN /* 32*/]; //?豕??????;?㊣?豕㊣?℅????“byStatusType????﹞?0?㊣?迆?∫??
	BYTE    byRes1[128];
}NET_DVR_SENSOR_INFO_UPLOAD, *LPNET_DVR_SENSOR_INFO_UPLOAD;

//℅???????????
typedef struct tagNET_DVR_CAPTURE_UPLOAD
{
	DWORD dwSize;
	NET_DVR_TIME_V30  struTime;
	DWORD    dwChannel;//?“????
	char    szDevName[MAX_DEVNAME_LEN_EX];
	DWORD   dwPicLen;//?????∟??
	BYTE    *pBuffer;    //????????????
	BYTE    byRes[124];
}NET_DVR_CAPTURE_UPLOAD, *LPNET_DVR_CAPTURE_UPLOAD;

//???∼????????????
typedef struct tagNET_DVR_PANORAMIC_LINKAGE
{
	DWORD   dwSize;
	DWORD   dwChannel;//?“????
	BYTE  byType;//?????角????0-????????1-???∼????????????
	BYTE  byRes1[3];
	BYTE        byMACAddr[MACADDR_LEN];             //mac???﹞
	BYTE      byRes2[2];
	NET_DVR_IPADDR   struDevIP;                     //?豕㊣?IP???﹞
	DWORD    dwPicLen;//???∼????????℅????????∟??
	char      *pPicBuff; //???∼????????℅???????????
	BYTE       byRes[128];
}NET_DVR_PANORAMIC_LINKAGE, *LPNET_DVR_PANORAMIC_LINKAGE;

#define MAX_MASK_AREA_NUM                   8   //?赤?邦?????辰????

typedef struct tagNET_DVR_AREA_MASK_CFG  //???辰?赤?邦??
{
	DWORD  dwSize;  //?芍?????車??
	BYTE   byEnable;//??﹞??????赤?邦??   0-﹞???1-??
	BYTE   byMaskThick;  //?赤?邦?????? 0-㊣?????1-??????2-??????㊣????????谷?車????8*8??????16*16??????32*32????????????
	BYTE   byAutoMask;//??﹞?????℅????赤?邦??   0-﹞???1-??
	BYTE   byRes1;
	NET_VCA_RECT  struRegion[MAX_MASK_AREA_NUM];//?赤?邦?????辰﹞??∫
	BYTE   byRes[64];
}NET_DVR_AREA_MASK_CFG, *LPNET_DVR_AREA_MASK_CFG;

typedef struct tagNET_DVR_AUDIO_DIACRITICAL_CFG  //????㊣???
{
	DWORD  dwSize;  //?芍?????車??
	BYTE   byEnable;  //??﹞?????㊣??? 0-????????1-????
	char    byBassValue;   //??????????﹞??∫??-12-12 ?????車?迄????????﹞?????????0-㊣赤????㊣???
	BYTE   byRes[62];
}NET_DVR_AUDIO_DIACRITICAL_CFG, *LPNET_DVR_AUDIO_DIACRITICAL_CFG;

typedef struct tagNET_DVR_RESOLUTION_SWITCH
{
	DWORD            dwSize;
	BYTE             byResolutionType;//0-all,1-20:9,2-20:6,3-???????‾????
	BYTE             byRes[127];
}NET_DVR_RESOLUTION_SWITCH, *LPNET_DVR_RESOLUTION_SWITCH;

typedef struct tagNET_DVR_WIFI_DHCP_ADDR_CFG  //wifi??????DHCP﹞??∫????
{
	DWORD       dwSize;
	NET_DVR_IPADDR   struStartAddr;   //????IP???﹞
	NET_DVR_IPADDR   struEndAddr;     //?芍??IP???﹞
	BYTE        byRes[256];
}NET_DVR_WIFI_DHCP_ADDR_CFG, *LPNET_DVR_WIFI_DHCP_ADDR_CFG;


typedef struct tagNET_DVR_WIFI_CLIENT_INFO  //????㊣???
{
	DWORD       dwSize;
	NET_DVR_IPADDR       struAddress;  //IP???﹞
	BYTE        byMACAddr[MACADDR_LEN];
	WORD        wConnSpeed;    //???????? ????KB
	BYTE        byRSSIValue;         //???????????????????????????????????㊣??????????﹞??∫??0~-110dbm,?????車???迆㊣赤????????
	BYTE        byRes1;         //㊣???
	WORD        wBandwidth;     //???????赤  ????KB 
	BYTE        byRes[32];
}NET_DVR_WIFI_CLIENT_INFO, *LPNET_DVR_WIFI_CLIENT_INFO;

typedef struct tagNET_DVR_MULTISTREAM_RELATION_CHAN_CFG  //?角???‾?????“??
{
	DWORD       dwSize;              //?芍?????車??
	DWORD       dwChannel;           //??????㊣角???“????
	BYTE        byRes[64];
}NET_DVR_MULTISTREAM_RELATION_CHAN_CFG, *LPNET_DVR_MULTISTREAM_RELATION_CHAN_CFG;

typedef struct
{
	BYTE byPort;   //????
	BYTE byMasterSlaveProperty;   //?????‾??????  1-?‾  2-??
	BYTE byPortEthernetType;  //?????角????1-∼??℅??????2-?∫?℅????
	BYTE byRes[9];
}NET_DVR_RING_PORT_PROPERTY, *LPNET_DVR_RING_PORT_PROPERTY;
typedef struct
{
	DWORD   dwSize;
	BYTE     byEnable;     //??﹞??????? 0-???????? !0-????
	BYTE     byProtoType;  //???谷?角???? 1-?????迆℅谷?????谷(????)??2-℅??????“℅谷?????谷?“????????3-G8032???谷?“??????
	BYTE   byBandWidth;   //?﹞?????赤?角????1-∼??℅??2-?∫?℅
	BYTE     byRes1;        //㊣???℅???
	NET_DVR_RING_PORT_PROPERTY struRingPort[PER_RING_PORT_NUM];  //?﹞??????
	BYTE      byRes2[60];    //㊣???℅???
}NET_DVR_NS_RING_CFG, *LPNET_DVR_NS_RING_CFG;
typedef struct  //
{
	DWORD   dwSize;   //?芍?????車??
	BYTE     byStatus;              //?﹞??℅?????1-???? 2-????
	BYTE     byMasterSlaveProperty; //????∼??‾?????? 1-?‾  2-??
	BYTE     byRes[62];            //㊣???℅???
} NET_DVR_NS_RING_STATUS, *LPNET_DVR_NS_RING_STATUS;

//?????足??㊣“??
typedef struct tagNET_DVR_FIREDETECTION_ALARM
{
	DWORD   dwSize; //?芍???車??
	DWORD     dwRelativeTime; //?角???㊣㊣那
	DWORD    dwAbsTime; //?????㊣㊣那
	NET_VCA_DEV_INFO  struDevInfo;   //?∼???豕㊣?????
	WORD    wPanPos;
	WORD    wTiltPos;
	WORD    wZoomPos;
	BYTE    byPicTransType;        //????????????﹞???: 0-????????1-url
	BYTE    byRes1;
	DWORD   dwPicDataLen;//㊣“??℅????????∟??
	BYTE    *pBuffer;    //????????
	NET_VCA_RECT struRect;//?????辰 
	NET_VCA_POINT struPoint;//?????辰??℅?????????℅?㊣那
	WORD    wFireMaxTemperature;//????℅???????[300??~4000??]
	WORD    wTargetDistance;//??㊣那?角??[100m ~ 10000m]
	BYTE    byStrategyType;//?????角????0~????㊣“????1~????㊣“????2~?角????㊣“????3~???“????㊣“????4~???“???赤㊣“??
	BYTE    byAlarmSubType;//㊣“??℅??角????0~?????足??㊣“????1~???赤?足??㊣“????2~????㊣“??
						   /*??﹞?????PTZ℅?㊣那??????
						   0~????????PTZ℅?㊣那????wPanPos??wTiltPos??wZoomPos??℅???
						   1~??????PTZ℅?㊣那????struPtzPosEx??℅???????????PTZ???豕﹞?????struPtzPosEx?????豕℅?????wPanPos??wTiltPos??wZoomPos????
						   */
	BYTE    byPTZPosExEnable;
	BYTE    byRes2;
	NET_PTZ_INFO struPtzPosEx;// ptz℅?㊣那????(?∫????????PTZ???????﹞?????????車????)
	DWORD   dwVisiblePicLen;//???????????∟??
	BYTE    *pVisiblePicBuf;    //??????????????????
								// pSmokeBuf?????㊣byAlarmSubType㊣“??℅??角????1?“???赤?足??㊣“??????2?“????㊣“?????㊣?迆?∫??
	BYTE    *pSmokeBuf;    //???赤?足??㊣“???????????????辰????NET_DVR_SMOKEDETECTION_ALARM?芍????
	WORD    wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE    byRes3;
	BYTE    byFireScanWaitMode; //?????“?豕???????? 0-℅???   1-????
	DWORD   dwVisibleChannel; //???????“???“????
	BYTE    byTimeDiffFlag;      /*?㊣??℅?????﹞????∫  0-?㊣?????∫?? 1-?㊣?????∫ */
	char    cTimeDifferenceH;         /*??UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????,??byTimeDiffFlag??1?㊣???∫*/
	char    cTimeDifferenceM;      	/*??UTC???㊣???“﹞???????-30, 30, 45?? +㊣赤????????byTimeDiffFlag??1?㊣???∫*/
	BYTE    byRes[49];
} NET_DVR_FIREDETECTION_ALARM, *LPNET_DVR_FIREDETECTION_ALARM;

//?????足??????
typedef struct tagNET_DVR_SMOKEDETECTION_CFG
{
	BYTE    byEnable;//????
	BYTE    bySensitivity; //?足???谷????: 1~100????50
	BYTE    byPatrolSensitivity; //?????足???谷????: 1~100????50
	BYTE    byDoubleCheckSensitivity; //?????????谷????: 1~100????50
	BYTE    byRes[56];
}NET_DVR_SMOKEDETECTION_CFG, *LPNET_DVR_SMOKEDETECTION_CFG;

typedef    struct tagNET_DVR_ALARMSTRATEGY_PARAM
{
	BYTE   byStrategyType;//?????角????0~????㊣“????1~????㊣“????2~?角????㊣“??, 3~???“????㊣“????4~???“???赤㊣“??
	BYTE   byRes[15];
}NET_DVR_ALARMSTRATEGY_PARAM, *LPNET_DVR_ALARMSTRATEGY_PARAM;

typedef    struct tagNET_DVR_FIREDETECTION_CFG
{
	DWORD    dwSize;//?芍?????車??
	BYTE    byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE    bySensitivity; //?足???谷????: 1~100????5s
	BYTE    byFireComfirmTime;//﹞????????????㊣??: 0-120?? ????5s
	BYTE    byFireRegionOverlay;//???‾?????????辰: 0- ﹞???1- ??
	BYTE    byDetectionMode;// ?????足????????0~??????㊣???1~?????足????
	BYTE    byFireFocusMode;//??????????????0~℅???????,1~ ??????????
	BYTE    byFireZoomMode;//???????∫㊣?㊣???????0~??℅?????????1~????????????
	BYTE    byFirezoomLevel;//???????∫㊣?㊣?㊣?????1~100???㊣???∫㊣?㊣????????????????㊣?迆?∫
	BYTE    bySmokeFireEnabled; //?????足??℅???????0??????????1-????
								/*
								????????????????????1?㊣?迆㊣赤???????????車???????????㊣??????byFireComfirmTime???∫??
								?????車???㊣?豕㊣?﹞????????㊣?????“???㊣??????﹞????????????????“???????????“?豕?邦???????????????????????????“?豕??
								?㊣??????????????????0?㊣???豕㊣???℅????????????????????????迄??byFireComfirmTime℅????迄???????????㊣???????????????????????????㊣???車?豕㊣?℅????????????“?豕??
								*/
	BYTE    byFireManualWaitEnabled;// ??????????????????0~??℅?????????????1~????????????
	BYTE    byCancelRepeatedAlarmEnabled;// ????????㊣“?????? 0-??㊣? 1-????
	BYTE    byApplicationSceneMode;//???????∼??????0-㊣?????1-????﹞???, 2-????????,3-??????????, 4-?????辰????
	DWORD   dwInstallationHeight;// ∼?℅∼????
	BYTE    byFireSourceDetection;// ???????‾???? 0-???????? 1-?邦??????
	BYTE    bySmokeAuxiliaryDetectionEnabled;// ???赤?“?迆????????????,?足??????????????㊣??㊣?迆?∫ 0-﹞? 1-??
	BYTE    byRes[38];
	NET_DVR_ALARMSTRATEGY_PARAM struAlarmStrategy;//㊣“??????
	NET_DVR_SMOKEDETECTION_CFG struSmokeCfg;//???赤?足??????
}NET_DVR_FIREDETECTION_CFG, *LPNET_DVR_FIREDETECTION_CFG;

typedef  struct tagNET_DVR_THERMALPOWER_PARAM
{
	DWORD   dwSize;//?芍?????車??
	BYTE    byPowerSwitch;//??????????1????????0????㊣?
	BYTE    byRes[123];
}NET_DVR_THERMALPOWER_PARAM, *LPNET_DVR_THERMALPOWER_PARAM;

typedef  struct tagNET_DVR_PTZABSOLUTEEX_CFG
{
	DWORD            dwSize;//?芍?????車??
	NET_PTZ_INFO     struPTZCtrl;//?豕㊣?PTZF????
	DWORD            dwFocalLen;//???角﹞??∫??0-100000MM
	float            fHorizontalSpeed;//????℅?????????0.01-1000.00??/S
	float            fVerticalSpeed;//???㊣℅?????????0.01-1000.00??/S
									/*???﹞㊣?㊣??????角????absoluteZoom:?“??㊣?㊣????????????????????????角???㊣struPTZCtrl????fZoom?????迆?∫??focalLen:?“?????角???????????????????????角???㊣??dwFocalLen?????迆?∫??*/
	BYTE             byZoomType;// ???﹞㊣?㊣??????角??0~ absoluteZoom??1~ focalLen
	BYTE             byRes[123];
}NET_DVR_PTZABSOLUTEEX_CFG, *LPNET_DVR_PTZABSOLUTEEX_CFG;

#define MAX_PLAYLIST_NUM        50          //℅??車??﹞???㊣赤???? 
#define MAX_PLAYPLAN_NUM        50          //℅??車??﹞????????? 

#define MAX_LEN_256                     256 
#define MAX_GROUP_RECORD_NUM            10      //℅??車????????
typedef struct tagNET_DVR_AREA_MONITOR_COND
{
	DWORD  dwSize;
	DWORD  dwAreaID;   //???辰ID
	DWORD  dwMonitorID;  //?㊣?∼???????????角????㊣角??????1????
	BYTE   byIsNeedGroup;  //??﹞??谷??????﹞?℅谷????
	BYTE   byRes[127];
}NET_DVR_AREA_MONITOR_COND, *LPNET_DVR_AREA_MONITOR_COND;

typedef struct tagNET_DVR_DEL_MONITOR_COND
{
	DWORD  dwSize;
	BYTE  byDelType;     //?????角????0-???????“???辰???迄???角??????1-???????“???辰?????“?角????
	DWORD  dwAreaID;   //???辰ID
	DWORD  dwMonitorID;   //?角????ID?“?㊣byDelType??0?㊣???∫???㊣byDelType??1?㊣???∫??????1????
	BYTE   byRes[64];
}NET_DVR_DEL_MONITOR_COND, *LPNET_DVR_DEL_MONITOR_COND;

typedef struct tagNET_DVR_BLACKLIST_ALARM_COND
{
	DWORD       dwSize;         //?芍?????車??
	BYTE        byType;         //??∼℅????㊣那????- ??????- ∼℅??????- ??????
	BYTE        byRes1[3];      //㊣???
	DWORD       dwFaceID;       //????????ID
	DWORD       dwMaxSnapNum;   //℅??車℅?????????0-㊣赤????????
	BYTE        byRes[256];
}NET_DVR_BLACKLIST_ALARM_COND, *LPNET_DVR_BLACKLIST_ALARM_COND;

typedef struct tagNET_DVR_STORAGE_RESOURCE_COND
{
	DWORD      dwSize;         //?芍?????車??
	DWORD        dwStorageID;    //???㊣?∼㊣角?????????????角℅???????1????
	BYTE        byRes[64];
}NET_DVR_STORAGE_RESOURCE_COND, *LPNET_DVR_STORAGE_RESOURCE_COND;

typedef struct tagNET_DVR_BLACKLIST_ALARM_RECORD
{
	DWORD          dwSize;   //?芍?????車??
	DWORD            dwSnapFacePicID;    //℅???????ID
	DWORD            dwRegisterID;        //????℅??芍ID???“??????
	DWORD            dwGroupNo;            //﹞?℅谷??
	BYTE            byRes[128];
}NET_DVR_BLACKLIST_ALARM_RECORD, *LPNET_DVR_BLACKLIST_ALARM_RECORD;

typedef struct tagNET_DVR_BLACKLIST_GROUP_INFO  //????﹞?℅谷????
{
	DWORD          dwSize;   //?芍?????車??
	DWORD          dwGroupID; //﹞?℅谷㊣角???“?????㊣???∫???赤???㊣???∫??????1????
	DWORD            dwGroupNo;            //????﹞?℅谷??
	BYTE            byGroupType;        //﹞?℅谷?角????0-??????﹞?℅谷??1-∼℅????﹞?℅谷
	BYTE            byRes1;
	WORD            wThreshold;            //㊣“????????????﹞??∫??0-1000
	DWORD            dwListNum;            //﹞?℅谷??????
	BYTE            szGroupName[NAME_LEN];  //﹞?℅谷????
	BYTE            szRemark[MAX_LEN_256];
	BYTE            byStorageAddr[MAX_DOMAIN_NAME];  //????IP???﹞????
	WORD            wStoragePort;            //????IP????????????
	BYTE            byRes[126];
}NET_DVR_BLACKLIST_GROUP_INFO, *LPNET_DVR_BLACKLIST_GROUP_INFO;


typedef struct tagNET_DVR_SINGLE_BLACKLIST_GROUP_RECORD
{
	DWORD          dwSize;   //?芍?????車??
	DWORD            dwGroupRecordID;            //﹞?℅谷????ID?????????谷???㊣???∫???????㊣???∫????1????
	DWORD            dwGroupNo;            //????﹞?℅谷??
	DWORD            dwFaceDBID;            //??????ID
	DWORD            dwFaceRecordID;        //????????ID
	BYTE            byAlarmLevel;        //㊣“????????0-high,1-medium,2-low
	BYTE            byRes1[3];            //㊣???
	NET_DVR_ADDR_DOMAIN_INFO struStorageAddr;   //????IP???﹞????
	BYTE            byRes[256];
}NET_DVR_SINGLE_BLACKLIST_GROUP_RECORD, *LPNET_DVR_SINGLE_BLACKLIST_GROUP_RECORD;

typedef struct tagNET_DVR_BLACKLIST_GROUP_RECORD_COND
{
	DWORD          dwSize;   //?芍?????車??
	DWORD            dwRecordID;                //???㊣?∼㊣角??????????????1????
	BYTE            byRes[64];
}NET_DVR_BLACKLIST_GROUP_RECORD_COND, *LPNET_DVR_BLACKLIST_GROUP_RECORD_COND;

typedef struct tagNET_DVR_BLACKLIST_GROUP_RECORD_CFG  //????﹞?℅谷????????
{
	DWORD          dwSize;   //?芍?????車??
	DWORD            dwRecordNum;            //????℅?????
	NET_DVR_SINGLE_BLACKLIST_GROUP_RECORD struRecord[MAX_GROUP_RECORD_NUM]; //????????
	BYTE            byRes[256];
}NET_DVR_BLACKLIST_GROUP_RECORD_CFG, *LPNET_DVR_BLACKLIST_GROUP_RECORD_CFG;

typedef struct tagNET_DVR_BLACKLIST_GROUP_CFG  //????﹞?℅谷????????
{
	DWORD          dwSize;   //?芍?????車??
	DWORD            dwGroupNum;            //﹞?℅谷℅?????
	NET_DVR_BLACKLIST_GROUP_INFO struGroup[MAX_GROUP_RECORD_NUM]; //????????
	BYTE            byRes[256];
}NET_DVR_BLACKLIST_GROUP_CFG, *LPNET_DVR_BLACKLIST_GROUP_CFG;

typedef struct tagNET_DVR_BLACKLIST_GROUP_COND
{
	DWORD        dwSize;   //?芍?????車??
	DWORD            dwGroupID;                //???㊣?∼㊣角??????????????1????
	BYTE            byRes[64];
}NET_DVR_BLACKLIST_GROUP_COND, *LPNET_DVR_BLACKLIST_GROUP_COND;



typedef  struct  tagNET_DVR_SENSOR_VALUE
{
	float   fMinValue; //℅??????????﹞??0.001??????0xfffffffff㊣赤???谷???迄??
	float   fMaxValue; //℅??車???????﹞??0.001??????0xfffffffff㊣赤???谷???迄??
	BYTE    byRes[8];
}NET_DVR_SENSOR_VALUE, *LPNET_DVR_SENSOR_VALUE;

typedef  struct  tagNET_DVR_HISTORICAL_QUERY_PARAM //?迆?﹞?????谷??????℅??芍??
{
	NET_DVR_TIME_V30 struStartTime;//?????㊣??  
	NET_DVR_TIME_V30 struEndTime;//?芍???㊣??
	NET_DVR_SENSOR_VALUE struVoltageValue; //????????; ????﹞邦?? 
	NET_DVR_SENSOR_VALUE struCurrentValue; //???‾????; ??????∼?
	NET_DVR_SENSOR_VALUE struTemperatureValue;//????????????????????
	NET_DVR_SENSOR_VALUE struHumidityValue;//????????
	BYTE   bySwitchStatus;//?“??℅????? 0~???“????1~?“????0xff?谷???迄??
	BYTE   bySensorStatus; //?????‾℅????? 0-??????1-?足????2-㊣“????0xff?谷???迄??
	BYTE   byRes[66];
}NET_DVR_HISTORICAL_QUERY_PARAM, *LPNET_DVR_HISTORICAL_QUERY_PARAM;

typedef  struct  tagNET_DVR_SENSOR_COND //?????芍??
{
	DWORD  dwSize;
	BYTE   byQueryType; //?谷??﹞?????0~???㊣?????谷????1~?迆?﹞?????谷??
	BYTE   byDeviceType; //?豕㊣??角??;0~????,1~???????????‾, 2~??????℅?,3~??????℅迄??0xff㊣赤???谷???迄??
	BYTE   byDeviceID; //?豕㊣?ID??Analog(???????????‾)﹞??∫??1-8??Terminal(??????℅?)﹞??∫??1-4??Socket(??????℅迄)﹞??∫??1-2??0xff㊣赤???谷???迄??
	BYTE   byRes1;
	// INTER_HISTORICAL_QUERY_PARAM℅??芍??????byQueryType??1?㊣?迆?∫
	NET_DVR_HISTORICAL_QUERY_PARAM struHistoricalQueryParam; //?迆?﹞?????谷??????
	BYTE   byRes[64];
}NET_DVR_SENSOR_COND, *LPNET_DVR_SENSOR_COND;

typedef  struct  tagNET_DVR_SENSOR_CFG//?????芍??
{
	DWORD  dwSize;
	BYTE   byEnable; //?㊣?∼?谷?????????‾??﹞???????0-????????1-??????
	BYTE   byDeviceType; //?豕㊣??角??;0~????,1~???????????‾, 2~??????℅?,3~??????℅迄
	BYTE   byDeviceID; //?豕㊣?ID??Analog(???????????‾)﹞??∫??1-8??Terminal(??????℅?)﹞??∫??1-4??Socket(??????℅迄)﹞??∫??1-2
	BYTE   byRes1;
	NET_DVR_TIME_V30 struTime;//?㊣?? 
	BYTE   byIsFirst; //??﹞????????車??????????(?足????﹞???????)??0-﹞?, 1-????
	BYTE   byIsSwitchOn; //??﹞??“????0-﹞?, 1-????
	BYTE   bySensorStatus; //?????‾℅????? 0-??????1-?足????2-㊣“????
	BYTE   bySensorType; //?????‾?角???????? SENSOR_TYPE
	float  fVoltage; //??????????﹞邦???????﹞??0.001??????0xff㊣赤?????∫??
	float  fCurrent; //???‾????????∼??????﹞??0.001??????0xff㊣赤?????∫??
	float  fTemperatureValue;//???????????????????????﹞??0.001??????0xff㊣赤?????∫??
	float  fHumidityValue;//???????????﹞??0.001??????0xff㊣赤?????∫??
	BYTE   bySensorName[SENSORNAME_LEN/*32*/]; //?????‾????
	BYTE   byDescription[MAX_SENSORDESCR_LEN/*64*/]; //?????‾???????豕????????statusType???????㊣??description????????
	float  fActualValue;  //????????℅????車???????????﹞??0.0001
	BYTE   byUnit[SENSORUNIT_LEN/*32*/];   //????℅?﹞???
	BYTE   byRes[220];
}NET_DVR_SENSOR_CFG, *LPNET_DVR_SENSOR_CFG;

typedef    struct tagNET_DVR_SENSOR_SWITCH_COND
{
	DWORD     dwSize;//?芍?????車??
	BYTE     byDeviceType; //?豕㊣??角??;0~????, 1~??????℅?Terminal,2~??????℅迄Socket
	BYTE     byDeviceID; //?豕㊣?ID??Terminal(??????℅?)﹞??∫??1-4??Socket(??????℅迄)﹞??∫??1-2
	BYTE     bySwitch; //??????0-????, 1-??????2-????
	BYTE     byRes[125];
}NET_DVR_SENSOR_SWITCH_COND, *LPNET_DVR_SENSOR_SWITCH_COND;

typedef struct tagNET_DVR_GB28181_SERVICE_CFG
{
	DWORD  dwSize;     //?芍?????車??
	BYTE   byServerID[DEV_ID_LEN];  //SIP﹞????‾ID??
	WORD   wPort;      //SIP﹞????‾??????
	BYTE   byRes1[2];  //㊣???
	BYTE   byAuthPasswd[PASSWD_LEN];
	DWORD  dwRegisterValid;           //????????????????????????????3600 
	BYTE   byMaxHeartbeatTimeOut;    //℅??車???????㊣????????????3??
	BYTE   byAutoAddIpc;            //??﹞?????℅????赤??ipc,0-????????1-????
	BYTE   byAuthPasswdEx[MAX_PASSWD_LEN_EX];   //??????????64?????豕???㊣??byAuthPasswdEx??﹞??????????????∫??byAuthPasswd???∫???????㊣??byAuthPasswdEx??byAuthPasswd??﹞???
	BYTE   byRes[190];                //㊣???
}NET_DVR_GB28181_SERVICE_CFG, *LPNET_DVR_GB28181_SERVICE_CFG;
typedef    struct    tagNET_DVR_ACTIVATECFG
{
	DWORD   dwSize;    //?芍?????車??
	BYTE    sPassword[PASSWD_LEN];    //????????
	BYTE    byRes[108];
}NET_DVR_ACTIVATECFG, *LPNET_DVR_ACTIVATECFG;

typedef struct tagNET_DVR_IPDEVICE_ACTIVATE_CFG
{
	DWORD       dwSize;    //?芍?????車??
	BYTE        byMode;    //0-∼??“???∟????1-∼????﹞?∟??
	BYTE        bySelfDefinePassword;//??﹞?℅??“??????,0-﹞?,1-??,2-??,????IPC??℅??“??????
	BYTE        sPassword[PASSWD_LEN];//℅??“??????
	BYTE        sUserName[NAME_LEN];//???∫??
	BYTE        byRes[78];
	union
	{
		BYTE        byLen[512];//union?車??
		struct
		{
			DWORD       dwChannelNo;//?“????
			BYTE        byRes[508];
		}struChannelInfo;//?“??????
		struct
		{
			NET_DVR_IPADDR   struIp;//IP???﹞
			WORD    wPort;//??????
			BYTE    sProtocolDesc[DESC_LEN];//???谷?角??
			BYTE    byMacAddr[MACADDR_LEN];//mac???﹞
			BYTE    byRes[344];
		}struAddrInfo;//IP???﹞????℅?NET_DVR_SADPINFO
	}unActivateDeviceInfo;//???????????芍?????“??byMode℅???㊣赤????∼??“??????∼????﹞
}NET_DVR_IPDEVICE_ACTIVATE_CFG, *LPNET_DVR_IPDEVICE_ACTIVATE_CFG;

typedef struct tagNET_DVR_DIGITAL_CHANNEL_SECURITY_STATUS_
{
	DWORD  dwSize;
	BYTE   byDigitalChanPasswordStatus[MAX_CHANNUM_V30 * 4];//0-㊣???,1-IPC???∟????2-﹞?????????3-????????????4-????????????5-??????????;byDigitalChanPasswordStatus[0]㊣赤??????????℅??“??
	BYTE   byRes[1140];
}NET_DVR_DIGITAL_CHANNEL_SECURITY_STATUS, *LPNET_DVR_DIGITAL_CHANNEL_SECURITY_STATUS;

typedef struct tagNET_DVR_CAMERACHAN_SERIALCFG
{
	DWORD    dwSize;
	DWORD   dwBaudRate;  //?“????(bps)??0-50??1-75??2-110??3-150??4-300??5-600??6-1200??7-2400??8-4800??9-9600??10-19200??11-38400??12-57600??13-76800??14-115.2k
	BYTE    byDataBit; //????????????0-5????1-6????2-7????3-8??
	BYTE    byStopBit;  //????????0-1????1-2??
	BYTE    byParity;  //??﹞????谷??0-?????谷??1-?????谷??2-?????谷
	BYTE    byFlowcontrol;// ??﹞??‾????0-????1-?赤?‾??,2-???‾??
	WORD    wPTZProtocol;  //???辰???谷?角?????‾????
	BYTE    byRes1[6];
	DWORD   dwSerialPort; //??????,℅???????0??㊣赤???∼??∼???????℅???????1??㊣赤???車??∼?????
	BYTE    bySerialAddress; //???????﹞0~255
	BYTE    byRes[15];
}NET_DVR_CAMERACHAN_SERIALCFG, *LPNET_DVR_CAMERACHAN_SERIALCFG;

#define MAX_MATRIX_SUBBOARD_NUM      16   //℅??????“℅??車℅?∼???
#define MAX_MATRIX_SUBBOARD_NUM_V51  32     //℅??????“℅??車℅?∼???
#define MAX_BOARD_SUBSYSTEM_NUM      12   //????℅?∼?℅??車??????
typedef  struct  tagNET_DVR_SUBSYSTEM_STATUS
{
	/*℅??????角????1-??????℅???????2-㊣角????℅???????3-????????℅???????4-????????℅???????5-??﹞??‾℅???????6-㊣“???‾?迆℅???????7-????℅???????8-Fpga????℅???????9-Fpga℅???????10-℅???℅???????
	11-X86﹞????‾℅???????12-??????????℅???????13-X86????﹞???∼??? 14- X86????﹞???∼? ??15-?角?角?迆????℅???????16-????????????℅???????17-X86????℅???????18-???“????℅???????19-????℅???????0-NULL*/
	BYTE    bySubSystemType;
	BYTE    bySubSystemNo;   //℅????????????迄??℅?∼?????㊣角?? 
	BYTE    byOnlineStatus;  //????????℅????? 1-???? 2-??????
	BYTE    byRes[49];
}NET_DVR_SUBSYSTEM_STATUS, *LPNET_DVR_SUBSYSTEM_STATUS;


typedef  struct  tagNET_DVR_MATRIX_SUBBOARD
{
	BYTE  byBoardNo;                //℅?∼???
	BYTE  byPcieConnectStatus;        //pcie????℅????? 1-???? 2-????
	BYTE  byRes[2];
	DWORD dwHardwareVersion;       //℅?∼?????∼?㊣?
	DWORD dwPcieBandwidth;        //pcie Link ???赤  
	DWORD dwTemperature;          //℅?∼?????  ????????????
	NET_DVR_SUBSYSTEM_STATUS    struSubsystemStatus[MAX_BOARD_SUBSYSTEM_NUM]; //℅?????℅???
	BYTE  byRes2[16];
}NET_DVR_MATRIX_SUBBOARD, *LPNET_DVR_MATRIX_SUBBOARD;
typedef struct  tagNET_DVR_MATRIX_STATUS
{
	DWORD dwSize;
	BYTE  byMainFrameType;   //?迆???角??  1-18U?迆??(V1.0) 2-18U?迆?? 3-14U?迆?? 4-11U?迆?? 5-8U?迆?? 6-7U?迆??  7-5U?迆??
	BYTE  bySoltNum;   //??????
	BYTE  byBoardNum;   //℅?∼???
	BYTE  byRes;
	NET_DVR_MATRIX_SUBBOARD struMatrixSubboard[MAX_MATRIX_SUBBOARD_NUM];
	BYTE  byRes2[48];
}NET_DVR_MATRIX_STATUS, *LPNET_DVR_MATRIX_STATUS;


typedef  struct  tagNET_DVR_MATRIX_SUBBOARD_V50
{
	BYTE  byBoardNo;            //℅?∼???
	BYTE  byPcieConnectStatus;  //pcie????℅????? 1-???? 2-????
	BYTE  byRes;
	BYTE  byTemperatureAlarm;   //????㊣“????0-??℅??????∫??1-??????????2-??????????㊣“????3-??????????㊣“??
	DWORD dwHardwareVersion;    //℅?∼?????∼?㊣?
	DWORD dwPcieBandwidth;      //pcie Link ???赤  
	DWORD dwTemperature;        //℅?∼?????  ????????????
	NET_DVR_SUBSYSTEM_STATUS struSubsystemStatus[MAX_BOARD_SUBSYSTEM_NUM]; //℅?????℅???
	BYTE  bySubboardModel[32]; //℅?∼?????
	BYTE  byRes1[32];
}NET_DVR_MATRIX_SUBBOARD_V50, *LPNET_DVR_MATRIX_SUBBOARD_V50;

typedef struct  tagNET_DVR_MATRIX_STATUS_V50
{
	DWORD dwSize;
	BYTE  byMainFrameType; //?迆???角??  1-18U?迆??(V1.0) 2-18U?迆?? 3-14U?迆?? 4-11U?迆?? 5-8U?迆?? 6-7U?迆??  7-5U?迆??
	BYTE  bySoltNum; //??????
	BYTE  byBoardNum; //℅?∼???
	BYTE  byLCDPanelStatus; //???∫??∼?????℅?????1-??????2-?足??
	NET_DVR_MATRIX_SUBBOARD_V50 struMatrixSubboard[MAX_MATRIX_SUBBOARD_NUM];
	DWORD dwFanSequence; //﹞???㊣角????∼???㊣赤????℅?????????????????0xffffff04㊣赤??㊣角????1??﹞??????㊣????﹞???㊣??????㊣??dwFanConnectStatus??dwFanOperationStatus?????????????∫??﹞??辰????????㊣角????﹞???
	DWORD dwFanConnectStatus; //﹞???????℅?????∼???㊣赤????℅?????????????????0xffffff00㊣赤??㊣角????1??﹞?????????????0xffffff04㊣赤??㊣角????1??﹞????????足??
	DWORD dwFanOperationStatus; //﹞???????℅?????∼???㊣赤????℅?????????????????0xffffff00㊣赤??㊣角????1??﹞???????℅?????????0xffffff04㊣赤??㊣角????1??﹞????????足??
	BYTE  byDeviceModel[32]; //?豕㊣?????
	BYTE  byPowerNums; //????????
	BYTE  byMainBoardNums; //?‾??????
	BYTE  byHotStandbyMode; // byMainBoardNums??2?㊣??0-?∟℅‾??M1??????1-?∟℅‾??M2????
	BYTE  byRes[29];
}NET_DVR_MATRIX_STATUS_V50, *LPNET_DVR_MATRIX_STATUS_V50;

typedef struct tagNET_DVR_MATRIX_SUBBOARD_V51
{
	BYTE    byBoardNo; //℅?∼???
	BYTE    byPcieConnectStatus; //pcie????℅?????1-??????2-????
	BYTE    byRes1;
	BYTE    byTemperatureAlarm; //????㊣“????0-??℅??????∫??1-??????????2-??????????㊣“????3-??????????㊣“??
	DWORD   dwHardwareVersion; //℅?∼?????∼?㊣?
	DWORD dwPcieBandwidth; //pcie Link???赤
	DWORD dwTemperature; //℅?∼???????????????????
	NET_DVR_SUBSYSTEM_STATUS    struSubsystemStatus[MAX_BOARD_SUBSYSTEM_NUM]; //℅?????℅???
	BYTE    bySubboardModel[32]; //℅?∼?????
	BYTE    byRes2[128];
}NET_DVR_MATRIX_SUBBOARD_V51, *LPNET_DVR_MATRIX_SUBBOARD_V51;

typedef struct tagNET_DVR_MATRIX_STATUS_V51
{
	DWORD   dwSize;
	BYTE    byMainFrameType; //?迆???角?? 1-18U?迆???“V1.0????2-18U?迆????3-14U?迆????4-11U?迆????5-8U?迆????6-7U?迆??
	BYTE    bySoltNum; //??????
	BYTE    byBoardNum; //℅?∼???
	BYTE    byLCDPanelStatus; //???∫??∼?????℅?????1-??????2-?足??
	NET_DVR_MATRIX_SUBBOARD_V51 struMatrixSubboard[MAX_MATRIX_SUBBOARD_NUM_V51];
	DWORD  dwFanSequence; //﹞???㊣角????∼???㊣赤????????0x00000001㊣赤???豕㊣?????????﹞?????㊣角????1??0x00000101㊣赤???豕㊣???????﹞?????㊣角??﹞?㊣???1??9???㊣????﹞???㊣角??㊣??????㊣??dwFanConnectStatus??dwFanOperationStatus?????????????∫??﹞??辰????????㊣角????﹞???
	DWORD dwFanConnectStatus; //﹞???????℅?????∼???㊣赤????????0x00000001㊣赤??㊣角????1??﹞???????℅????足????0x00000101㊣赤??㊣角????1??9??﹞???????℅????迄?足??
	DWORD dwFanOperationStatus; //﹞???????℅?????∼???㊣赤????????0x00000001㊣赤??㊣角????1??﹞???????℅????足????0x00000101㊣赤??㊣角????1??9??﹞???????℅????迄?足??
	BYTE   byDeviceModel[32]; //?豕㊣?????
	BYTE    byFanSpeed[32]; //﹞???℅?????∼?℅???㊣赤????????byFanSpeed[0]㊣赤??㊣角????1??﹞?????℅?????℅???????﹞??∫??[1,3]
	BYTE   byMainMemUsed; //?‾????????????????????∼?﹞?㊣?
	BYTE    byMainCpuUsed; //?‾??CPU??????????????∼?﹞?㊣?
	BYTE    byNetwordUsed; //????∼???????????????????∼?﹞?㊣?
	BYTE   byRes1;
	DWORD   dwMainSoftwareVer; //?‾???赤??∼?㊣?
	BYTE  byPowerNums; //????????
	BYTE  byMainBoardNums; //?‾??????
	BYTE  byHotStandbyMode; // byMainBoardNums??2?㊣??0-?∟℅‾??M1??????1-?∟℅‾??M2????
	BYTE     byRes2[125];
}NET_DVR_MATRIX_STATUS_V51, *LPNET_DVR_MATRIX_STATUS_V51;

typedef struct _NET_DVR_SUBWIND_INFO
{
	DWORD dwSize;
	DWORD dwSubWndNo; //℅??∼????
	BYTE	byRes[8];
} NET_DVR_SUBWIND_INFO, *LPNET_DVR_SUBWIND_INFO;


typedef struct tagNET_DVR_FUSION_SCALE
{
	DWORD dwSize;
	WORD wWidth;  //?????????赤(?芍?辰????????)
	WORD wHeight; //??????????(℅??辰????????)
	BYTE byRes[32];
}NET_DVR_FUSION_SCALE, *LPNET_DVR_FUSION_SCALE;

typedef struct tagNET_DVR_FUSION_CFG
{
	DWORD dwSize;
	BYTE byFusion;  //??﹞???????0-???????辰??????????﹞?0-????
	BYTE byUseHistoryMap; //??﹞??????迆?﹞????????㊣赤??0-????????﹞?0-????
	BYTE byRes[30];
}NET_DVR_FUSION_CFG, *LPNET_DVR_FUSION_CFG;

typedef struct tagNET_DVR_MULTIFUNCTION_SERIALCFG
{
	DWORD dwSize;
	BYTE  byVariable;  //??????﹞???㊣???1-????㊣?  2-??㊣? ?“????????
	BYTE  bySerialWorkMode;   //?∟℅‾??????1-RS485, 2-RS232?“??????㊣??谷???????????∟℅‾??????
	BYTE  byFunType;   //?????????? 1-?邦????????2-??????????3-???‾?“?????? 4-PTZ????  5-???車???? 6-?????“
	BYTE byDataBit;// ?????? 0??5????1??6????2??7????3??8??;
	BYTE byStopBit;// ?????? 0??1????1??2??;
	BYTE byParity;// ???谷 0???????谷??1???????谷??2???????谷;
	BYTE byFlowcontrol;// 0??????1???赤?‾??,2-???‾??
	BYTE byRes1;
	DWORD dwBaudRate;//?“????0??50??1??75??2??110??3??150??4??300??5??600??6??1200??7??2400??8??4800??9??9600??10??19200?? 11??38400??12??57600??13??76800??14??115.2k;   
	WORD wProtocol;   //???????谷  ???????????????????????谷?????迄
	BYTE byRes[34];
}NET_DVR_MULTIFUNCTION_SERIALCFG, *LPNET_DVR_MULTIFUNCTION_SERIALCFG;

typedef struct tagNET_DVR_PTZ_3D_SPEED_CONTROL
{
	DWORD  dwSize;
	DWORD  dwChannel;  //?“????
	BYTE    byPSpeed;  // X?芍????????  ?“????1??64??
	BYTE    byTSpeed;  // Y?芍????????   ?“????1??64??
	BYTE    byZSpeed;  // Z????
	BYTE    byPDirect; // P﹞??辰?? 1-℅車?? 2-??
	BYTE    byTDirect; // T﹞??辰?? 1-???? 2-??
	BYTE    byZDirect;  //Z﹞??辰??  1-ZOOM+,  2-ZOOM-
	BYTE    byRes[18];  //㊣???℅???
}NET_DVR_PTZ_3D_SPEED_CONTROL, *LPNET_DVR_PTZ_3D_SPEED_CONTROL;

//Sensor????
typedef struct tagNET_DVR_SENSOR_PARAM
{
	BYTE        bySensorType;//SensorType:0-CCD,1-CMOS
	BYTE        byRes[31];
	float       fHorWidth;//?????赤?? ???﹞?????????車???? *10000
	float       fVerWidth;//???㊣?赤?? ???﹞?????????車???? *10000
	float       fFold;//zoom=1??㊣??㊣?????角 ???﹞?????????車???? *100
}NET_DVR_SENSOR_PARAM, *LPNET_DVR_SENSOR_PARAM;

typedef struct tagNET_DVR_LLI_PARAM
{
	float fSec;//??[0.000000,60.000000]
	BYTE byDegree;//??:????[0,90] ????[0,180]
	BYTE byMinute;//﹞?[0,59]
	BYTE byRes[6];
}NET_DVR_LLI_PARAM, *LPNET_DVR_LLI_PARAM;

typedef struct tagNET_DVR_LLPOS_PARAM
{
	BYTE   byLatitudeType;//?????角????0-㊣㊣????1-????
	BYTE   byLongitudeType;//?????角????0-??????1-?‾??
	BYTE   byRes1[2];
	NET_DVR_LLI_PARAM    struLatitude;    /*????*/
	NET_DVR_LLI_PARAM    struLongitude; /*????*/
	BYTE   byRes[16];
}NET_DVR_LLPOS_PARAM, *LPNET_DVR_LLPOS_PARAM;

//TPS????????
typedef struct tagNET_DVR_TPS_ADDINFO
{
	NET_DVR_LLPOS_PARAM struLLPos;//???‾??℅??車??????????????????????(byLaneState=3??byQueueLen>0?㊣??﹞???)
	BYTE   byRes[1024];
}NET_DVR_TPS_ADDINFO, *LPNET_DVR_TPS_ADDINFO;

//????????????
typedef struct tagNET_DVR_VEHICLE_ADDINFO
{
	NET_DVR_LLPOS_PARAM struLLPos;//?????㊣?∼??????????????
	char   sVehicleNo[LEN_64]; /*???????????“??㊣那??,℅??車?∟????64*/
	BYTE   byRes[960];
}NET_DVR_VEHICLE_ADDINFO, *LPNET_DVR_VEHICLE_ADDINFO;

//???赤㊣“??
typedef struct tagNET_DVR_SMOKEDETECTION_ALARM
{
	NET_PTZ_INFO struPTZPos;//???????豕㊣?PTZF????
	NET_PTZ_INFO struThermalPTZPos;//???????豕㊣?PTZF????
	NET_DVR_LLPOS_PARAM struLLPos;//?豕㊣???????????
	NET_VCA_RECT  struSmokePos;//?????????赤???辰????
	BYTE   byRes[256];
}NET_DVR_SMOKEDETECTION_ALARM, *LPNET_DVR_SMOKEDETECTION_ALARM;

//?辰?迆????????
typedef struct
{
	float   fPanPos;//?????????????﹞?????????車1??
	float   fTiltPos;//???㊣?????????﹞?????????車1??
	float   fZoomPos;//㊣?㊣??????????﹞?????????車1??
	BYTE    byRes[16];
}NET_DVR_PTZPOS_PARAM, *LPNET_DVR_PTZPOS_PARAM;

//GIS????????
typedef struct tagNET_DVR_GIS_UPLOADINFO
{
	DWORD   dwSize;//?芍?????車??
	DWORD     dwRelativeTime; //?角???㊣㊣那
	DWORD    dwAbsTime; //?????㊣㊣那
	NET_VCA_DEV_INFO    struDevInfo;//?∼???豕㊣?
	float   fAzimuth;//??℅???????﹞?????????﹞?????[0.00??,360.00??)
	BYTE    byLatitudeType;//?????角????0-㊣㊣????1-????
	BYTE    byLongitudeType;// ?????角????0-??????1-?‾??
	BYTE    byRes1[2];
	NET_DVR_LLI_PARAM    struLatitude;     /*????*/
	NET_DVR_LLI_PARAM    struLongitude;   /*????*/
	float   fHorizontalValue;//???????????????﹞?????????車??????
	float   fVerticalValue;//???㊣???????????﹞?????????車??????
	float   fVisibleRadius;//?㊣?∼????∼????????﹞?????????車??????
	float   fMaxViewRadius;//℅??車????∼????????﹞?????????車??0???“?∟?????赤??
	NET_DVR_SENSOR_PARAM  struSensorParam;//Sensor????
	NET_DVR_PTZPOS_PARAM  struPtzPos; //ptz℅?㊣那
	BYTE  byRes[256];
}NET_DVR_GIS_UPLOADINFO, *LPNET_DVR_GIS_UPLOADINFO;

//﹞?????㊣“??????????
typedef struct  tagNET_DVR_VANDALPROOF_ALARM
{
	DWORD        dwSize;//?芍?????車??
	DWORD         dwRelativeTime; //?角???㊣㊣那
	DWORD        dwAbsTime; //?????㊣㊣那
	NET_VCA_DEV_INFO    struDevInfo;//?∼???豕㊣?
	BYTE  byRes[256];
}NET_DVR_VANDALPROOF_ALARM, *LPNET_DVR_VANDALPROOF_ALARM;

//????????????????
typedef    struct tagNET_DVR_CENTRALIZEDCTRL_CFG
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnable;//0-?芍????1-????
	BYTE        byLatitudeType;//?????角????0-㊣㊣????1-????
	BYTE        byLongitudeType;// ?????角????0-??????1-?‾??
	BYTE        byRes1;
	NET_DVR_LLI_PARAM    struLatitude;     /*????*/
	NET_DVR_LLI_PARAM    struLongitude; /*????*/
	DWORD       dwTimeOut;//???㊣?㊣?? [60s, 6*60*60s]
	BYTE        byControlType;//????????﹞??? 0-??????????1-﹞?????????
	BYTE        byRes[127];
}NET_DVR_CENTRALIZEDCTRL_CFG, *LPNET_DVR_CENTRALIZEDCTRL_CFG;

//?辰?迆??GIS????????
typedef struct tagNET_DVR_GIS_INFO
{
	DWORD  dwSize;//?芍?????車??
	float  fAzimuth;//??℅???????﹞?????????﹞?????[0.00??,360.00??)
	float  fHorizontalValue;//???????????????﹞?????????車??????
	float  fVerticalValue;//???㊣???????????﹞?????????車??????
	float  fVisibleRadius;//?㊣?∼????∼????????﹞?????????車??????
	float  fMaxViewRadius;//℅??車????∼????????﹞?????????車??0???“?∟?????赤??
	BYTE   byLatitudeType;//?????角????0-㊣㊣????1-????
	BYTE   byLongitudeType;// ?????角????0-??????1-?‾??
	BYTE byPTZPosExEnable;//??﹞?????PTZ℅?㊣那??????0~????????PTZ℅?㊣那????struPtzPos ??℅???1~??????PTZ℅?㊣那????struPtzPosEx??℅???
	BYTE byRes1;
	NET_DVR_LLI_PARAM     struLatitude;     /*????*/
	NET_DVR_LLI_PARAM    struLongitude; /*????*/
	NET_DVR_PTZPOS_PARAM struPtzPos; //ptz℅?㊣那
	NET_DVR_SENSOR_PARAM struSensorParam;//Sensor????
	NET_PTZ_INFO struPtzPosEx;// ptz℅?㊣那????(?∫????????PTZ???????﹞?????????車????)
	float   fMinHorizontalValue;//℅??????????????????﹞?????????車????????0.0-360.00
	float   fMaxHorizontalValue;//℅??車???????????????﹞?????????車????????0.0-360.00
	float   fMinVerticalValue;//℅??????㊣???????????﹞?????????車????????0.0-360.00
	float   fMaxVerticalValue;//℅??車???㊣???????????﹞?????????車????????0.0-360.00
	BYTE  byRes[220];
}NET_DVR_GIS_INFO, *LPNET_DVR_GIS_INFO;

//?豕㊣?????????
typedef    struct tagNET_DVR_CRUISE_PARAM
{
	DWORD    dwSize;//?芍?????車??
	BYTE    byCruiseMode;// ??????????0~??????1~?∟????
	BYTE    byRes[123];
}NET_DVR_CRUISE_PARAM, *LPNET_DVR_CRUISE_PARAM;

//?????豕㊣??﹞?????????????芍????
typedef struct tagNET_DVR_TEMP_HUMI_INFO
{
	DWORD    dwSize;
	NET_DVR_TIME_V30      struCurrentTime; // ?㊣?∼?㊣??
	float        fTemperature;//?豕㊣??﹞???????????﹞?????????車???????“-273 “C 1000????????
	float        fHumidity;// ?豕㊣??﹞???????????﹞?????????車??????????????%
	BYTE       byRes[256];
}NET_DVR_TEMP_HUMI_INFO, *LPNET_DVR_TEMP_HUMI_INFO;

typedef struct tagNET_SDK_POINT_THERMOMETRY
{
	float        fPointTemperature;/*???????㊣?∼????, ?㊣㊣那?“??0-???㊣?迆?∫?????﹞?????????車????(-40-1000),?“??????+100??*10 */
	NET_VCA_POINT  struPoint;//??????℅?㊣那?“?㊣???辰㊣那?“?角?????∼???㊣???㊣?辰?迆?∫??
	BYTE       byRes[20];
}NET_SDK_POINT_THERMOMETRY, *LPNET_SDK_POINT_THERMOMETRY;


typedef struct tagNET_SDK_REGION_THERMOMETRY
{
	float            fMaxTemperature;//℅???????,???﹞?????????車????(-40-1000),?“??????+100??*10 */
	float            fMinTemperature;//℅???????,???﹞?????????車????(-40-1000),?“??????+100??*10 */
	float            fAverageTemperature;//???迄????,???﹞?????????車????(-40-1000),?“??????+100??*10 */
	float            fTemperatureDiff;//????,???﹞?????????車????(-40-1000),?“??????+100??*10 */
	NET_VCA_POLYGON struRegion;//???辰?????“?㊣???辰㊣那?“?角?????∼?辰?㊣?辰???∼???㊣???㊣?辰?迆?∫??
	BYTE       byRes[20];
}NET_SDK_REGION_THERMOMETRY, *LPNET_SDK_REGION_THERMOMETRY;

typedef    struct tagNET_SDK_MANUALTHERM_RULE
{
	BYTE       byRuleID;//???辰ID 0-㊣赤?????∫????1???? ?“list???????????????∫????
	BYTE       byEnable;//??﹞?????
	BYTE       byRes1[2];
	char         szRuleName[NAME_LEN/*32*/];//???辰????
	BYTE       byRuleCalibType;//???辰㊣那?“?角?? 0-????1-?辰??2-??
	BYTE       byRes2[3];
	NET_SDK_POINT_THERMOMETRY struPointTherm;//?????????㊣㊣那?“??0-???㊣?迆?∫
	NET_SDK_REGION_THERMOMETRY struRegionTherm; //???辰???????㊣㊣那?“??1-?辰??2-???㊣?迆?∫??
	BYTE      byRes[512];
}NET_SDK_MANUALTHERM_RULE, *LPNET_SDK_MANUALTHERM_RULE;

typedef    struct tagNET_SDK_MANUAL_THERMOMETRY
{
	DWORD        dwSize;//?芍?????車??
	DWORD        dwChannel;//?“????
	DWORD      dwRelativeTime; // ?角???㊣㊣那?“??????
	DWORD    dwAbsTime;      // ?????㊣㊣那?“??????
	BYTE       byThermometryUnit;//????????: 0-???????“??????1-???????““H????2-??????(K)
	BYTE       byDataType;//????℅????角??:0-?足??????1-??????2-?芍???“??????
	BYTE      byRes1[6];
	NET_SDK_MANUALTHERM_RULE struRuleInfo;
	BYTE      byRes[512];
}NET_SDK_MANUAL_THERMOMETRY, *LPNET_SDK_MANUAL_THERMOMETRY;

typedef struct tagNET_SDK_MANUALTHERM_BASICPARAM
{
	DWORD        dwSize;
	WORD         wDistance;//?角??(m)[0, 10000]
	BYTE         byDistanceUnit;//?角??????: 0-?℅?“m????1-?????“feet??,2-???℅(centimeter)
	BYTE         byRes1[1]; //㊣???
	float        fEmissivity;//﹞?????(﹞????? ???﹞?????????車????)[0.01, 1.00](?????????辰??﹞?????????㊣??足)
	BYTE         byRes[64]; //㊣???
}NET_SDK_MANUALTHERM_BASICPARAM, *LPNET_SDK_MANUALTHERM_BASICPARAM;

typedef struct tagNET_SDK_FIRESHIELDMASK_REGION
{
	DWORD        dwSize;
	BYTE      byMaskID;//???辰ID??1~24
	BYTE      byEnabled;// ??????????㊣????辰??????0~????????1~????
	BYTE      byShieldZoom;//??㊣?㊣?????0~32㊣?????㊣??車???????????????∫㊣?㊣???
	BYTE      byMaskType;//??㊣????辰?????角????0-??????1-?足????2-??????3-??????4-??????5-??????6-???‾??7-∼????‾??8-?赤?邦??
	BYTE      byRegionType;//???辰?角???“?∟????0-??㊣???
	BYTE      byShowEnabled; //???辰??????????????????????????????????false?辰???????????????辰?角????????True???????????辰?角??????
	BYTE         byRes1[2]; //㊣???
	char           szMaskName[NAME_LEN/*32*/];//??㊣?㊣那??
	NET_VCA_POLYGON struRegion;//??㊣????辰
	BYTE         byRes[32]; //㊣???
}NET_SDK_FIRESHIELDMASK_REGION, *LPNET_SDK_FIRESHIELDMASK_REGION;

#define MAX_FIRESHIELDMASK_REGION 24
typedef struct tagNET_SDK_FIRESHIELDMASK_CFG
{
	DWORD        dwSize;
	BYTE      byEnabled;// ???????辰??㊣???????0~????????1~????
	BYTE         byShieldAreaTransparency;//??㊣????辰???‾?? 0-?????‾ 1-???‾ 2-∼????‾
	BYTE         byDisplayShieldAreaEnabled;//???‾??????㊣????辰????
	BYTE         byRes1[1]; //㊣???
	NET_SDK_FIRESHIELDMASK_REGION struMaskRegion[MAX_FIRESHIELDMASK_REGION/*24*/];//??????㊣????辰
	BYTE         byRes[256]; //㊣???
}NET_SDK_FIRESHIELDMASK_CFG, *LPNET_SDK_FIRESHIELDMASK_CFG;

typedef struct tagNET_SDK_SMOKESHIELDMASK_REGION
{
	DWORD        dwSize;
	BYTE      byMaskID;//???辰ID??1~24
	BYTE      byEnabled;// ???????赤??㊣????辰??????0~????????1~????
	BYTE      byShieldZoom;//??㊣?㊣?????0~32㊣?????㊣??車???????????????∫㊣?㊣???
	BYTE      byMaskType;//??㊣????辰?????角????0-??????1-?足????2-??????3-??????4-??????5-??????6-???‾??7-∼????‾??8-?赤?邦??
	BYTE      byRegionType;//???辰?角???“?∟????0-??㊣???
	BYTE      byShowEnabled;// ???辰??????????????????????????????????false?辰???????????????辰?角????????True???????????辰?角??????
	BYTE       byRes1[2]; //㊣???
	char           szMaskName[NAME_LEN/*32*/];//??㊣?㊣那??
	NET_VCA_POLYGON struRegion;//??㊣????辰
	BYTE         byRes[32]; //㊣???
}NET_SDK_SMOKESHIELDMASK_REGION, *LPNET_SDK_SMOKESHIELDMASK_REGION;

#define MAX_SMOKESHIELDMASK_REGION 24
typedef struct tagNET_SDK_SMOKESHIELDMASK_CFG
{
	DWORD        dwSize;
	BYTE      byEnabled;// ???赤???辰??㊣???????0~????????1~????
	BYTE         byShieldAreaTransparency;//??㊣????辰???‾?? 0-?????‾ 1-???‾ 2-∼????‾
	BYTE         byDisplayShieldAreaEnabled;//???‾??????㊣????辰????
	BYTE         byRes1[1]; //㊣???
	NET_SDK_SMOKESHIELDMASK_REGION struMaskRegion[MAX_SMOKESHIELDMASK_REGION/*24*/];//???赤??㊣????辰
	BYTE         byRes[256]; //㊣???
}NET_SDK_SMOKESHIELDMASK_CFG, *LPNET_SDK_SMOKESHIELDMASK_CFG;

typedef struct tagNET_SDK_AREASCAN_CFG
{
	DWORD        dwSize;
	BYTE      byScanState;//???辰?“?豕?㊣?∼?豕??℅?????0?????豕????1?????豕???“??????????????
	BYTE         byRes[259]; //㊣???
}NET_SDK_AREASCAN_CFG, *LPNET_SDK_AREASCAN_CFG;

typedef struct tagNET_SDK_FIRESHIELDMASK_COND
{
	DWORD        dwSize;
	DWORD        dwChannel;//?“????
	BYTE        byRegionID;//???辰ID??1~24.
	BYTE         byRes[127]; //㊣???
}NET_SDK_FIRESHIELDMASK_COND, *LPNET_SDK_FIRESHIELDMASK_COND;

typedef struct tagNET_SDK_SMOKESHIELDMASK_COND
{
	DWORD        dwSize;
	DWORD        dwChannel;//?“????
	BYTE        byRegionID;//???辰ID??1~24.
	BYTE         byRes[127]; //㊣???
}NET_SDK_SMOKESHIELDMASK_COND, *LPNET_SDK_SMOKESHIELDMASK_COND;

//℅?????????﹞?????????
typedef    struct tagNET_DVR_VANDALPROOFALARM_CFG
{
	DWORD    dwSize;//?芍?????車??
	BYTE    bySensitivity;//?谷????[1,100] (?∫???谷???????????谷???????車???????℅??﹞?????????????????﹞?)
	BYTE    byUploadEnabled;//????﹞?????㊣“?????????? 0-????????1-????
	BYTE    byVoiceWarningEnabled;//????﹞?????㊣“???????芍?????? 0-????????1-???? 
	BYTE    byEnable;// ?????足??﹞?????㊣“?? 0-??㊣???1-????
	BYTE    byRes[124];
}NET_DVR_VANDALPROOFALARM_CFG, *LPNET_DVR_VANDALPROOFALARM_CFG;

typedef    struct tagNET_DVR_AZIMUTHINFO
{
	DWORD        dwSize;//?芍?????車??
	float       fDegree;//﹞?????????(???﹞?????????車????)
	BYTE        byAzimuth; //﹞????????? 0-??㊣㊣,1-?‾㊣㊣,2-????,3-?‾??,4-??,5-?‾,6-??,7-㊣㊣
	BYTE        byRes[127];
}NET_DVR_AZIMUTHINFO, *LPNET_DVR_AZIMUTHINFO;

//??℅??????????????辰??㊣㊣?????????芍??
typedef    struct tagNET_DVR_COMPASS_COND
{
	DWORD        dwSize;//?芍?????車??
	DWORD        dwChannel;//?“????
	BYTE        byRes[128];
}NET_DVR_COMPASS_COND, *LPNET_DVR_COMPASS_COND;

typedef    struct tagNET_DVR_POSITION_CFG
{
	DWORD     dwSize;//?芍?????車??
	BYTE     bySoftWorkMode;//?∟℅‾???? 0-℅?????1-????
	BYTE     byRes[127];
}NET_DVR_POSITION_CFG, *LPNET_DVR_POSITION_CFG;

typedef    struct tagNET_DVR_STREAMING_COND
{
	DWORD        dwSize;//?芍?????車??
	DWORD        dwChannel;//?“????
	BYTE        byStreamType;//???‾?角??0-?‾???‾??1-℅????‾??2-???‾3
	BYTE        byRes[127];
}NET_DVR_STREAMING_COND, *LPNET_DVR_STREAMING_COND;

//?????“??????????
typedef    struct tagNET_DVR_SATELLITETIME_CFG
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnable;//?????“?????㊣???? 0-????????1-????
	BYTE        byRes;
	WORD        wTimeInterval;//???㊣?㊣??????(s)
	BYTE        byRes1[124];
}NET_DVR_SATELLITETIME_CFG, *LPNET_DVR_SATELLITETIME_CFG;

#define MAX_SIGNAL_JOINT_NUM       64  //℅??車??????????
typedef struct tagNET_DVR_SIGNAL_JOINT_CFG
{
	DWORD    dwSize;
	BYTE  sCamName[NAME_LEN];  //?????車??????????
	BYTE  byEnable;               //??????0-??????  !0-????
	BYTE  byCamMode;            //?????車???????角????NET_DVR_CAM_JOINT
	BYTE  byRows;               //????????
	BYTE  byColumns;            //????????
	DWORD dwSignalNo[MAX_SIGNAL_JOINT_NUM]; //????????,?∼byRows* byColumns?????∫
	DWORD dwJointNo;           //????㊣角???“???????∫??
	DWORD dwSignalNoJoint;      //?????車???????????“???????∫??
	BYTE  byRes[64];
} NET_DVR_SIGNAL_JOINT_CFG, *LPNET_DVR_SIGNAL_JOINT_CFG;

typedef struct  tagNET_DVR_SIGNAL_CUTPARAM
{
	DWORD    dwSize;
	DWORD    dwSignalNo;     //???????? 
	DWORD     dwCutTop;      //??﹞???????????,0?迆㊣赤????
	DWORD      dwCutBottom;   //??﹞???????????,0?迆㊣赤????
	DWORD      dwCutLeft;     //℅車㊣???????????,0?迆㊣赤????
	DWORD      dwCutRight;    //??㊣???????????,0?迆㊣赤????
	BYTE     byRes2[32];
} NET_DVR_SIGNAL_CUTPARAM, *LPNET_DVR_SIGNAL_CUTPARAM;

typedef struct tagNET_DVR_WALL_RELATION_CFG
{
	DWORD dwSize;
	BYTE  byEnable;           //?????? 0-?????? !0-????
	BYTE  byRealWallNo;      //???赤????
	BYTE  byRes[14];
}NET_DVR_WALL_RELATION_CFG, *LPNET_DVR_WALL_RELATION_CFG;


typedef struct tagNET_DVR_INPUTSTREAMCFG_V40
{
	DWORD        dwSize;
	BYTE        byValid;     //
	BYTE        byCamMode;//??NET_DVR_CAM_MODE
	WORD        wInputNo; //???????辰??
	BYTE        sCamName[NAME_LEN];
	NET_DVR_VIDEOEFFECT     struVideoEffect;//????????
	NET_DVR_PU_STREAM_CFG    struPuStream;    //ip?????㊣????
	WORD        wBoardNum;      //???????迄????∼??“????????????
	WORD        wInputIdxOnBoard; //????????∼??“??????????????????
	DWORD    dwResolution;//﹞?㊣???
	BYTE    byVideoFormat;//????????????VIDEO_STANDARD
	BYTE    byStatus;    //??????℅?????0-℅??????∫ 1-?????? 2-?????? 3-?足?? 
	BYTE    sGroupName[NAME_LEN/*32*/];    //??????????﹞?℅谷 ℅谷??
	BYTE    byJointMatrix;            //???????車??0-??????  1-???????㊣????????????NET_DVR_CAM_BNC??NET_DVR_CAM_VGA??NET_DVR_CAM_DVI??NET_DVR_CAM_HDMI,?????????㊣???????????∫??
	BYTE    byJointNo;         //????????????????㊣角??(????????)
	BYTE    byColorMode;      //?????????? 0-℅??“?? 1-???? 2-???“ 3-?芍?????㊣??℅??“???㊣??????struVideoEffect?豕??
	BYTE    byScreenServer; //????????﹞????‾??0-??????1-????
	BYTE    byDevNo; //?豕㊣???
	BYTE    byRes1;
	DWORD    dwInputSignalNo; //??????????㊣角???“????
	BYTE    byVideoEnctype; //????㊣角???角????0-??????1-Smart264
	BYTE    byAudioEnctype; //????㊣角???角??0-??????1-AUDIO_G711_A??2-AUDIO_G711_U??3- AUDIO_G722_1
	BYTE    byWallStatus;    //??????????℅?????0-???∫ 1-?????? 2- ??????
	BYTE    byRes[117];
}NET_DVR_INPUTSTREAMCFG_V40, *LPNET_DVR_INPUTSTREAMCFG_V40;

typedef struct tagNET_DVR_AUDIO_CONTROL_INFO
{
	DWORD   dwSize;
	DWORD   dwMonId;//?角???‾????㊣角??
	BYTE    bySubWindowNum;//?角???‾????℅??∼????
	BYTE    byWallNo; //????
	BYTE    byEnable; //??????????0-????1-??
	BYTE    byRes[13];
}NET_DVR_AUDIO_CONTROL_INFO, *LPNET_DVR_AUDIO_CONTROL_INFO;



typedef struct  tagNET_DVR_INPUTSTREAM_PTZCFG_PARAM
{
	DWORD    dwSize;
	WORD     wPTZProtocol;  //???辰???谷?角?????‾???? 
	BYTE     byRes[34];
}NET_DVR_INPUTSTREAM_PTZCFG_PARAM, *LPNET_DVR_INPUTSTREAM_PTZCFG_PARAM;

//???﹞?????芍???“?? ??????2016????﹞??角1133.xlsx?﹞
typedef enum
{
	AXLE_TYPE_UNKNOWN = 0x0000,         //????
										//2?芍
										AXLE_TYPE_2AXLE_12 = 0x0200,        //2?芍????????
																			//3?芍
																			AXLE_TYPE_3AXLE_122_1 = 0x0300,     //3?芍?????芍????????
																			AXLE_TYPE_3AXLE_122_2,              //3?芍????????
																			AXLE_TYPE_3AXLE_15,                 //3?芍????????
																			AXLE_TYPE_3AXLE_112,                //3?芍????????
																												//4?芍
																												AXLE_TYPE_4AXLE_125_1 = 0x0400,     //4?芍?????芍????????
																												AXLE_TYPE_4AXLE_152,                //4?芍?????芍????????
																												AXLE_TYPE_4AXLE_125_2,              //4?芍????????
																												AXLE_TYPE_4AXLE_1222,               //4?芍????????????
																												AXLE_TYPE_4AXLE_115,                //4?芍????????
																																					//5?芍
																																					AXLE_TYPE_5AXLE_155_1 = 0x0500,     //5?芍?????芍????????
																																					AXLE_TYPE_5AXLE_1125_1,             //5?芍?????芍????????
																																					AXLE_TYPE_5AXLE_155_2,              //5?芍????????
																																					AXLE_TYPE_5AXLE_1125_2,             //5?芍????????
																																					AXLE_TYPE_5AXLE_129,                //5?芍????????
																																					AXLE_TYPE_5AXLE_1522,               //5?芍????????????
																																					AXLE_TYPE_5AXLE_11222,              //5?芍????????????
																																														//6?芍
																																														AXLE_TYPE_6AXLE_159_1 = 0x0600,     //6?芍?????芍????????
																																														AXLE_TYPE_6AXLE_159_2,              //6?芍?????芍????????
																																														AXLE_TYPE_6AXLE_1155_1,             //6?芍?????芍????????
																																														AXLE_TYPE_6AXLE_1155_2,             //6?芍?????芍????????
																																														AXLE_TYPE_6AXLE_159_3,              //6?芍????????
																																														AXLE_TYPE_6AXLE_159_4,              //6?芍????????
																																														AXLE_TYPE_6AXLE_1129,               //6?芍????????
																																														AXLE_TYPE_6AXLE_11522_1,            //6?芍??????
																																														AXLE_TYPE_6AXLE_11522_2,            //6?芍??????
}TRUCK_AXLE_MODEL;

//????????
typedef struct  tagNET_DVR_VEHICLE_WEIGHT_RESULT_
{
	BYTE      byIsOverWeight;         //??﹞?????
	BYTE      byAxleNum;            //?芍??
	WORD      wAxleModel;           //???? enum TRUCK_AXLE_MODEL,?????迄???角?????????芍??????
	float     fOverWeight;          //????????(??)???????????車1000㊣??????“?????????﹞?????????車??????
	float     fWeight;              //???赤????(??)???????????車1000㊣??????“?????????﹞?????????車??????
	float     fLimitWeight;         //????????(??)???????????車1000㊣??????“?????????﹞?????????車??????
	float     fAxleLen;             //?芍?角(?℅)???????????車100㊣??????“?????????﹞?????????車??????
	char      sDevDescInfo[MAX_DEVDESC_LEN/*64*/];      //?豕㊣??豕??????
	WORD      wAxleWeight[MAX_TRUCK_AXLE_NUM/*10*/];    //???芍???????????∫???“kg????i??????㊣赤????i???芍??
	WORD      wAxleDistance[MAX_TRUCK_AXLE_NUM/*10*/];  //???芍???角?????????℅(mm).??i??????㊣赤????i?芍????i+1?芍?????角
	BYTE      byRes2[24];            //?∟??
}NET_DVR_VEHICLE_WEIGHT_RESULT, *LPNET_DVR_VEHICLE_WEIGHT_RESULT;

// ?????足???芍??
typedef struct tagNET_DVR_PLATE_RESULT_V50
{
	DWORD   dwSize;        //?芍???∟??
	DWORD   dwMatchNo;        //?????辰??,??(?????辰??,?????角??,??????)℅谷????????
	BYTE    byGroupNum;    //????℅谷?????“?????????角?迆?角??℅????????????迆㊣赤??℅谷??????℅????????????㊣??????????
	BYTE    byPicNo;        //???????????辰???“??????????℅谷?????車??㊣赤???????那??;???????㊣??℅?????℅谷?????㊣???迄???豕??㊣????辰??????
	BYTE    bySecondCam;    //??﹞??????角?迆℅????“?????邦?∼℅????????∼?角?迆???辰?∼?車℅??????車?角?迆?????????????芍??????
	BYTE    byFeaturePicNo; //???足??????????????????℅‾????????,0xff-㊣赤??????
	BYTE    byDriveChan;        //??﹞???????
	BYTE    byVehicleType;     //?????角????????VTR_RESULT
	BYTE    byDetSceneID;//?足?????∼??[1,4], IPC??????0
	BYTE    byVehicleAttribute;// 0-??????????,1-??㊣那??(?芍﹞迄),2-?????﹞????
	WORD    wIllegalType;       //?????角???????迆㊣那?“??
	BYTE    byIllegalSubType[8];   //????℅??角??
	BYTE    byPostPicNo;    //?????㊣????????????℅‾???“????,0xff-㊣赤??????
	BYTE    byChanIndex;        //?“?????“㊣?????
	WORD    wSpeedLimit;        //?????????“?????㊣???∫??
	BYTE    byRes2[2];
	NET_DVR_PLATE_INFO  struPlateInfo;     //?????????芍??
	NET_DVR_VEHICLE_INFO struVehicleInfo;    //????????
	BYTE    byMonitoringSiteID[48];        //?角????㊣角??
	BYTE    byDeviceID[48];                //?豕㊣?㊣角??
	BYTE    byDir;            //?角??﹞??辰??1-??????2-??????3-???辰??4-?????辰?‾??5-?????辰㊣㊣,6-???‾?辰????7-??㊣㊣?辰????8-???邦
	BYTE    byDetectType;    //?足??﹞???,1-??????﹞???2-??????﹞???3-?角????㊣???4-?℅????﹞?
							 //????????﹞??辰?角????????ITC_RELA_LANE_DIRECTION_TYPE
							 //????????????﹞??辰?????????????????????????﹞㊣??????“??????
	BYTE    byRelaLaneDirectionType;
	BYTE    byRes3; //㊣???
					//?㊣wIllegalType?????????㊣????????????????wIllegalType???????????㊣????wIllegalType??????℅????????????∫??
	DWORD   dwCustomIllegalType; //?????角???“??(???∫℅??“??)
	BYTE    byRes4[9]; //㊣???
	BYTE    byPilotSafebelt;//0-㊣赤??????,1-??∼?????,2-????∼?????
	BYTE    byCopilotSafebelt;//0-㊣赤??????,1-??∼?????,2-????∼?????
	BYTE    byPilotSunVisor;//0-㊣赤??????,1-???辰??????∼?,2-?辰??????∼?
	BYTE    byCopilotSunVisor;//0-㊣赤??????, 1-???辰??????∼?,2-?辰??????∼?
	BYTE    byPilotCall;// 0-㊣赤??????, 1-???辰???∼,2-?辰???∼
						//0-??????1-?????? (℅“?????迆?﹞???????角?迆?迄????∼℅?????????車????﹞???????????㊣那??)
	BYTE    byBarrierGateCtrlType;
	BYTE    byAlarmDataType;//0-???㊣??????1-?迆?﹞????
	NET_DVR_TIME_V30  struSnapFirstPicTime;//?????㊣??(ms)?“℅????????????????㊣????
	DWORD   dwIllegalTime;//??﹞“?????㊣???“ms?? = ℅???℅??車???????????㊣?? - ℅????????????????㊣??
	DWORD   dwPicNum;        //?????????“??picGroupNum???????迆㊣赤㊣?????????????????????????????????struVehicleInfoEx?“??    
	NET_ITS_PICTURE_INFO struPicInfo[6];         //????????,???????‾??℅??角6?????????辰????﹞?
	NET_DVR_VEHICLE_WEIGHT_RESULT struWeightResult; //????????
	BYTE     byRes[256]; //?∟??
}NET_DVR_PLATE_RESULT_V50, *LPNET_DVR_PLATE_RESULT_V50;

typedef struct _NET_DVR_NORMAL_SCHEDTIME_
{
	NET_DVR_SCHEDTIME struTime;
	BYTE byAlarmType;//0-??????﹞???1-??????﹞???2-???㊣??﹞?
	BYTE byRes[3];
}NET_DVR_NORMAL_SCHEDTIME, *LPNET_DVR_NORMAL_SCHEDTIME;

typedef struct tagNET_DVR_SUBSYSTEM_ALARM
{
	DWORD dwSize;
	NET_DVR_NORMAL_SCHEDTIME struNormalSchedtime[MAX_DAYS][MAX_TIMESEGMENT_V30];
	//??????????﹞??㊣????
	BYTE byNormalSchedTimeOn; //??????????﹞?????
	BYTE byMandatoryAlarm;//0-﹞???????﹞???1-??????﹞? ???㊣﹞?????????????﹞??????﹞??﹞?
	BYTE byRes[254];
}NET_DVR_SUBSYSTEM_ALARM, *LPNET_DVR_SUBSYSTEM_ALARM;


#define MAX_WHITELIST_PHONE_NUM      16

typedef struct _NET_DVR_ALARM_PHONECFG
{
	DWORD    dwSize;
	BYTE    byEnable;//??﹞????? 0-????????1-????
	BYTE    byRes1[3];
	BYTE    byPhoneNumber[MAX_PHONE_NUM/*32*/];
	DWORD    dwArmRight; //??﹞??“????∼?????bit0??1㊣赤????℅?????1????﹞??“?????????角??
	DWORD    dwDisArmRight; //?﹞﹞??“????∼?????bit0??1㊣赤????℅?????1???﹞﹞??“?????????角??
	DWORD    dwClearAlarmRight; //?????“????∼?????bit0??1㊣赤????℅?????1???????“?????????角??
	BYTE    byZoneReport[MAX_ALARMHOST_ALARMIN_NUM/*512*/]; //﹞???㊣“???角????0-????????1-???? 
	DWORD    dwNonZoneReport; //﹞?﹞???㊣“??㊣“?? bit0-?赤﹞???㊣“?? bit1-????℅???㊣“?? bit2-????㊣“?? bit3-????㊣“??,bit4-??﹞?㊣“?? bit5-?﹞﹞?㊣“?? bit6-????㊣“?? bit7-㊣“??????㊣“?? bit8-???﹞㊣“?? bit9-???﹞????㊣“??,bit10-?????‾????℅???㊣“???“????????????,bit11-?????‾????℅???㊣“???“???????????﹞????,bit12-????㊣“??㊣“??
	BYTE    byIntervalTime; //0-0s,1-10s,2-30s,3-1min,4-5min,5-10min,6-℅??“???“1~5999s??
	BYTE    byRes2;
	WORD    wDefineIntervalTime; //?㊣byIntervalTime??6?㊣???∫??℅??“???㊣???“1~5999s??
	BYTE    byRes3[128];
}NET_DVR_ALARM_PHONECFG, *LPNET_DVR_ALARM_PHONECFG;

typedef struct tagNET_DVR_MODULE_INFO
{
	DWORD    dwSize;
	BYTE    byModuleType;            //??????﹞??‾?角????1-?邦????2-??﹞??‾??3-﹞??? ??4-???????谷
	BYTE    byKeyBoardType;            //1-LCD,2-LED
	BYTE    byTriggerType;            // 1-㊣?????﹞??‾?? 2-4?﹞??﹞??‾??3-8?﹞??﹞??‾??4-??﹞?????﹞??‾??5-32?﹞??﹞??‾
	BYTE    byZoneType;                //﹞????角????1-㊣???﹞?????2-??﹞?????3-??﹞?????4-8﹞?????5-8?﹞??????﹞???, 6-??﹞?????﹞??‾
	WORD    wModuleAddress;            //??????﹞??‾???﹞?????????谷??0~255??0xFFFF㊣赤?????∫
	BYTE    byRes2[2];                //㊣???
	char    sModelInfo[32];            //???谷????
	char    sDeviceVersionInfo[32];    //∼?㊣?????
	BYTE    byRes[128];                //㊣???
}NET_DVR_MODULE_INFO, *LPNET_DVR_MODULE_INFO;

typedef struct tagNET_DVR_ALARMHOST_DETECTOR_INFO
{
	DWORD		dwSize;
	BYTE     byDetectorSerialNo[16];   //?????‾?辰????
	DWORD   dwAlarmIn;   //﹞?????
	WORD    wDetectorType;   // ?????‾?角????DETECTOR_TYPE
	BYTE   	byRes[126];      //㊣???
}NET_DVR_ALARMHOST_DETECTOR_INFO, *LPNET_DVR_ALARMHOST_DETECTOR_INFO;

typedef struct tagNET_DVR_ONE_OUTPUT_SCHEDULE_RULE_V40
{
	BYTE                       byEnable;// 0- ﹞???1- ??
	BYTE                       byRes1[3];
	NET_DVR_SCHEDDATE          struDate;
	NET_DVR_OUTPUT_SCHEDULE    struOutputSchedule[MAX_TIMESEGMENT_V30/*8*/];
	BYTE                       byTriggerIndex[MAX_ALARMHOST_ALARMOUT_NUM];//??㊣那㊣赤????﹞??‾??????0-????????1-????
	BYTE                       byRes2[64];
}NET_DVR_ONE_OUTPUT_SCHEDULE_RULE_V40, *LPNET_DVR_ONE_OUTPUT_SCHEDULE_RULE_V40;
//?㊣?????????辰????
typedef struct tagNET_DVR_OUTPUT_SCHEDULE_RULECFG_V40
{
	DWORD  dwSize; //?芍?????車??
	NET_DVR_ONE_OUTPUT_SCHEDULE_RULE_V40 struOutputRule[MAX_RULE_NUM/*8*/]; //℅??角?∫??8???????????????辰???????????“?㊣??/????﹞??‾???豕??????????????????????????
	BYTE   byRes[64];  //㊣???
}NET_DVR_OUTPUT_SCHEDULE_RULECFG_V40, *LPNET_DVR_OUTPUT_SCHEDULE_RULECFG_V40;

//?????㊣?????????辰????
typedef struct tagNET_DVR_ONE_OUTPUT_SCH_RULECFG_V40
{
	DWORD        dwSize;
	NET_DVR_ONE_OUTPUT_SCHEDULE_RULE_V40 struOutputRule;
	BYTE        byRes[256];  //㊣???
}NET_DVR_ONE_OUTPUT_SCH_RULECFG_V40, *LPNET_DVR_ONE_OUTPUT_SCH_RULECFG_V40;

typedef struct tagNET_DVR_ALARM_CAPTRUE_CFG
{
	DWORD        dwSize;
	BYTE        byBeforeAlarmPic;    //????﹞?㊣????????豕??㊣“???∼????℅??車??4CIF??10????2CIF??20????CIF??40????QCIF??80????WD1:10??,XVGA:10??,720P:10??,1080P:10??
	BYTE        byAfterAlarmPic;    //????﹞?㊣????????豕??㊣“???車????℅??車?? 4CIF??10????2CIF??20????CIF??40????QCIF??80????WD1:10??,XVGA:10??,720P:10??,1080P:10??
	WORD          wInterval; //?????㊣?? ????s
	BYTE        byResolution;    //????﹞?㊣???1-CIF??2-2CIF??3-4CIF??4-QCIF??5-WD1??6-VGA,7-XVGA??8-720P??9-1080P
	BYTE           byRes[63];          // ㊣???℅???
}NET_DVR_ALARM_CAPTRUE_CFG, *LPNET_DVR_ALARM_CAPTRUE_CFG;

#define PRIOR_SCHEDTIME            30

typedef struct _NET_DVR_PRIOR_SCHEDTIME_
{
	DWORD dwSize;
	NET_DVR_SCHEDDATE struData;
	NET_DVR_NORMAL_SCHEDTIME struOneDayTime[8];
	BYTE    byEnable; //??﹞????? 0-????????1-????
	BYTE byRes1[3];
	BYTE bySubSystem[32];//℅?????????㊣那㊣赤??℅??????? 0-???∫????1-?∫??
	BYTE byMandatoryAlarm;//0-﹞???????﹞???1-??????﹞? ???㊣﹞?????????????﹞??????﹞??﹞?
	BYTE byRes[63];
}NET_DVR_PRIOR_SCHEDTIME, *LPNET_DVR_PRIOR_SCHEDTIME;

typedef struct tagNET_DVR_TAMPER_ALARMIN_PARAM
{
	DWORD   dwSize;
	BYTE    byTamperType;     // 0-??,1-??????2-??㊣?
	BYTE    byUploadAlarmRecoveryReport;    //??﹞?????﹞???㊣“??????㊣“????0-????????1-???? 
	BYTE    byRes1[2];
	BYTE    byAssociateAlarmOut[MAX_ALARMHOST_ALARMOUT_NUM];  //﹞?????????﹞??‾    BYTE            byAssociateSirenOut[8];        //???????? ??℅谷0 ㊣赤??????1 ????1㊣赤?????? 0 ㊣赤???????? 
	BYTE    byAssociateSirenOut[8];        //???????? ??℅谷0 ㊣赤??????1 ????1㊣赤?????? 0 ㊣赤???????? 
	BYTE    byTamperResistor;    //﹞?????℅豕???????∫?﹞ ?? 0-???∫ 1-2.2 ??2--3.3, 3-4.7 ??4-5.6 ?? 5-8.2 ??0xff-℅??“??
	BYTE    byRes2[3];
	float    fTamperResistorManual;/*﹞?????????℅豕??1.0-10.0?????﹞?????????車???????????∫?﹞??byTamperResistor??0xff?㊣???∫*/
	BYTE    byRes3[36];            // ㊣???℅???
}NET_DVR_TAMPER_ALARMIN_PARAM, *LPNET_DVR_TAMPER_ALARMIN_PARAM;


typedef struct tagNET_DVR_REMOTECONTROLLER_PERMISSION_CFG
{
	DWORD    dwSize;
	BYTE    byEnable;
	BYTE    byRes1;
	WORD    wRemoteCtrllerID;//?????‾?? ??1????
	BYTE    sDevSn[16];/*?迆?﹞?辰????*/
	BYTE    byArmRight;            /*0-????﹞??“????1-????﹞??“??*/
	BYTE    byDisArmRight;        /*0-???﹞﹞??“????1-???﹞﹞??“??*/
	BYTE    byArmReportRight;    /*0-??????﹞?㊣“???“????1-??????﹞?㊣“???“??*/
	BYTE    byDisArmReportRight;/*0-???????﹞﹞?㊣“???“????1-???????﹞﹞?㊣“???“??*/
	BYTE    byClearAlarmRight;    /*0-???????“????1-???????“??*/
	BYTE    bySubSystemID;       /* ?豕㊣?(?????‾)℅???????,1~8 */
	BYTE    byKeyboardAddr;      /* ?????邦???????﹞,???????㊣?豕?? */
	BYTE    byEnableDel;   //?????????‾???∫??0-??????????1-????????
	BYTE    byAlwaysOpenRight;   /*??﹞????赤??????0-???∫??1-?????赤??2-???赤*/
	BYTE    byOpeningDirection;   /*????﹞??辰??0-???∫??1-????﹞??辰??2-????﹞??辰*/
	BYTE    byRes3[2];
	BYTE    byName[NAME_LEN];    //?????‾????
	BYTE    byRes2[28];
}NET_DVR_REMOTECONTROLLER_PERMISSION_CFG, *LPNET_DVR_REMOTECONTROLLER_PERMISSION_CFG;


typedef struct tagNET_DVR_KEYBOARD_CFG
{
	DWORD    dwSize;
	BYTE    byEnableLock;        //??﹞??????邦?????“,0--??????, 1--????
	BYTE    byErrorTimes;        //?????邦?????∫?????赤?車?????“???“?邦????
	WORD    wLockTime;            //???“?邦???㊣??????????
	BYTE    byRes[128];
}NET_DVR_KEYBOARD_CFG, *LPNET_DVR_KEYBOARD_CFG;


typedef struct tagNET_DVR_ALARMHOST_WIRELESS_BUSINESS_COND
{
	DWORD    dwSize;
	BYTE    byCommOperatorNum[NAME_LEN/*32*/];//?“????????????
	BYTE    byQueryCode[16];//?????谷???迆??
	BYTE    byBusinessType;//?????角?? 0-?∼﹞???1-?‾??
	BYTE    byRes[35];
}NET_DVR_ALARMHOST_WIRELESS_BUSINESS_COND, *LPNET_DVR_ALARMHOST_WIRELESS_BUSINESS_COND;

typedef struct tagNET_DVR_ALARMHOST_WIRELESS_BUSINESS_INFO
{
	DWORD    dwSize;
	BYTE    by3GBusiness[1024];//3G?????“???????谷??
	BYTE    byRes[32];
}NET_DVR_ALARMHOST_WIRELESS_BUSINESS_INFO, *LPNET_DVR_ALARMHOST_WIRELESS_BUSINESS_INFO;

typedef struct tagNET_DVR_PREVIEW_DELAY_CFG
{
	DWORD    dwSize;
	WORD    wdelayTime;//?????∟???㊣????????????
	BYTE    byRes[130];
}NET_DVR_PREVIEW_DELAY_CFG, *LPNET_DVR_PREVIEW_DELAY_CFG;

typedef struct tagNET_DVR_AUXILIARY_DEV_UPGRADE_PARAM
{
	DWORD    dwSize;
	DWORD    dwDevNo;    //?豕㊣???
	BYTE    byDevType;    //?????豕㊣??角?? 0-?邦??,1-?迆??,2-???????谷,3-?﹞???‾ ??4-﹞?????5-RS485???????????谷??6-???????谷
	BYTE    byRes[131];
}NET_DVR_AUXILIARY_DEV_UPGRADE_PARAM, *LPNET_DVR_AUXILIARY_DEV_UPGRADE_PARAM;

typedef struct tagNET_DVR_CALL_ROOM_CFG
{
	DWORD    dwSize;
	SHORT   nFloorNumber;    //????
	WORD    wRoomNumber;    //﹞?????
	BYTE    byManageCenter;    //??﹞????????赤????
	BYTE  byRes1[3];
	BYTE  byCalledName[64];    //㊣那℅?sip?????????∫??㊣??????∫??, ?∫????℅???℅??????∼@?㊣???∼.?㊣
	BYTE  byRes[60];
}NET_DVR_CALL_ROOM_CFG, *LPNET_DVR_CALL_ROOM_CFG;

typedef struct tagNET_DVR_VIDEO_CALL_COND
{
	DWORD    dwSize;
	BYTE    byRes[128];
}NET_DVR_VIDEO_CALL_COND, *LPNET_DVR_VIDEO_CALL_COND;

//?車??∼???????
typedef struct tagNET_DVR_INQUEST_CASE_INFO
{
	DWORD    dwSize;
	BYTE    sCaseNo[INQUEST_CASE_NO_LEN];        //∼???㊣角??
	BYTE    sCaseName[INQUEST_CASE_NAME_LEN];    //∼?????????
	BYTE    sCustomInfo1[CUSTOM_INFO_LEN];        //℅??“??????1??
	BYTE    sCustomInfo2[CUSTOM_INFO_LEN];        //℅??“??????2??
	BYTE    sCustomInfo3[CUSTOM_INFO_LEN];        //℅??“??????3
	BYTE    byShowCaseInfoTime; /* ∼????????????㊣??,??????, ????﹞??∫1~60??*/
	BYTE    byShowCaseInfo;    //∼?????????﹞?????∼?????????0-????????1-????
	BYTE    byPosition;        //∼?????????????0-℅車????1-℅車??
	BYTE    byRes1; //㊣???
	BYTE    byCustomInfo4[CUSTOM_INFO_LEN];     //℅??“??????4??∼???㊣角?????????㊣??℅??????∫
	BYTE    byCustomInfo5[CUSTOM_INFO_LEN];     //℅??“??????5??∼??????????????㊣??℅??????∫
	BYTE    byRes[128]; //㊣???
}NET_DVR_INQUEST_CASE_INFO, *LPNET_DVR_INQUEST_CASE_INFO;

typedef struct tagNET_DVR_CASE_INFO_CTRL_PARA
{
	DWORD    dwSize;
	DWORD    dwChannel;//?車???“????
	BYTE    byShowCaseInfoTime;    //?????????㊣??
	BYTE    byRes[131];
}NET_DVR_CASE_INFO_CTRL_PARAM, *LPNET_DVR_CASE_INFO_CTRL_PARA;

typedef struct tagNET_DVR_INQUEST_USER_RIGHT_CFG
{
	DWORD    dwSize;
	/*??℅谷0: ?車???????????“??*/
	BYTE    byLocalRight[MAX_RIGHT];    /* ㊣????“?? */
										/*??℅谷0: ?????????∟???“??*/
	BYTE    byRemoteRight[MAX_RIGHT];/* ?????“?? */
	BYTE    byNetAudioRight[MAX_CHANNUM_V40];    /* ?????????∟???“??????℅谷??㊣那㊣赤???“??????㊣赤???????“????0-???“????1-???“??*/
	BYTE    byRes[512 * 9];         //㊣???9???“????????
}NET_DVR_INQUEST_USER_RIGHT_CFG, *LPNET_DVR_INQUEST_USER_RIGHT_CFG;

typedef struct tagNET_DVR_INQUEST_MIX_AUDIOIN_CFG
{
	DWORD    dwSize;
	BYTE    byEnable;    //??﹞??????足????0-????????1-????
	BYTE    byRes1[3];    //㊣???
	DWORD    dwMixCnt;  /*?足?????“????*/
	BYTE    bySrcChan[MAX_MIX_CHAN_NUM];    /*??℅谷??㊣那㊣赤???足???“?????“?????“????IP?“????,????0㊣赤?????足??????1㊣赤???足??*/
	BYTE    byLineIn[MAX_LINE_IN_CHAN_NUM];    /*??℅谷??㊣那㊣赤???足??Line In?“????,????0㊣赤?????足??????1㊣赤???足??*/
	BYTE    byMic[MAX_MIC_CHAN_NUM];        /*??℅谷??㊣那㊣赤???足??Mic?“????,????0㊣赤?????足??????1㊣赤???足??*/
	BYTE    byMixAudioDelay;    //?足??????????????????﹞??∫0-63
	BYTE    byRes2[127];    //㊣???
}NET_DVR_INQUEST_MIX_AUDIOIN_CFG, *LPNET_DVR_INQUEST_MIX_AUDIOIN_CFG;

typedef struct tagNET_DVR_FACECAPTURE_STATISTICS_COND
{
	DWORD  dwSize;
	DWORD  dwChannel; //?“????
	NET_DVR_TIME_EX struStartTime; //?????㊣??
	BYTE   byReportType; //????㊣“㊣赤?角????1-??㊣“㊣赤??2-??㊣“㊣赤??3-??㊣“㊣赤??4-?那㊣“㊣赤
	BYTE   byStatType; //?????角????????Bit0-?那??????Bit1-??㊣???Bit2-????
	BYTE   byEnableProgramStatistics; //??﹞?∼???????????0-﹞???1-??
	BYTE   byRes1;
	DWORD  dwPlayScheduleNo; //∼??????????㊣????????????
	BYTE   byRes[120];
}NET_DVR_FACECAPTURE_STATISTICS_COND, *LPNET_DVR_FACECAPTURE_STATISTICS_COND;

typedef struct tagNET_DVR_AGEGROUP_PARAM_
{
	DWORD   dwTeenage;//???那?“??????
	DWORD    dwYouth;//?角?那?“??????
	DWORD    dwMidLife;//???那?“??????
	DWORD    dwElderly;//???那?“??????
	DWORD    dwChild;//?迄???“??????
	DWORD    dwAdolescent;//?角???那?“??????
	DWORD    dwPrime;//℅??那?“??????
	DWORD    dwMidage;//?????那?“??????
	BYTE   byRes[48];
}NET_DVR_AGEGROUP_PARAM, *LPNET_DVR_AGEGROUP_PARAM;

typedef struct tagNET_DVR_FILECOND_MEDICAL
{
	LONG lChannel;//?“????
	DWORD dwFileType;//???車?????角??
					 //?????“????0xff????????0???“?㊣????,1-?????足?? ??2??㊣“????﹞???3-㊣“??|?????足?? 4-㊣“??&?????足?? 5-?邦????﹞? 6-????????,7-??????????10-PIR㊣“????11-????㊣“????12-????㊣“????13-??????????14-???????“????
					 //???“????0xff????????0???“?㊣??????1-?????足????2?????邦㊣“????3??????㊣“????4??????㊣“????5-?邦????﹞???6????????????7??????㊣“????8-?﹞??㊣“????9-????㊣“????10-PIR㊣“????11-????㊣“????12-????㊣“????13-??????????14-???????“????
	DWORD dwIsLocked;//??﹞????“ 0-????????,1-???“????, 0xff㊣赤???迄??????
	DWORD dwUseCardNo;//??﹞??????“??
	BYTE sCardNumber[32];//?“??
	NET_DVR_TIME_SEARCH_COND struStartTime;//?????㊣??
	NET_DVR_TIME_SEARCH_COND struStopTime;//?芍???㊣??
	char            szPatientID[64];
	BYTE    byRes[256];
}NET_DVR_FILECOND_MEDICAL, *LPNET_DVR_FILECOND_MEDICAL;

typedef struct tagNET_DVR_FIND_PICTURE_MEDICAL_PARAM
{
	DWORD  dwSize;         // ?芍?????車?? 
	LONG   lChannel;       // ?“????
						   /* ?谷?????????角??:0?“?㊣℅???1 ?????足??℅??? 2 ㊣“??℅?????
						   3 ㊣“?? | ?????足??℅??? 4 ㊣“?? & ?????足??℅??? 6 ????℅??? ,
						   9-????????,10- PIR㊣“????11- ????㊣“????12- ????㊣“??,
						   0xa ?∟???㊣??????0xd ?????足??, 0xe ?????足????0xf ???????辰?足????
						   0x10 ???∼㊣??邦?足??, 0x11-?豕㊣?㊣?????﹞??㊣????, 0x12-?????足??,
						   0x13-???????辰?足??,0x14-???????辰?足??,0x15-?????足??,
						   0x16-???㊣?????足??,0x17-?足???????足??,0x18-?????足??,
						   0x19-???﹞?????足??,0x1a-???﹞?????足??, 0x1b-?????足??,
						   0x1c-?足???足??,0x1d-???∟????,0x1e-?????足??,0x1f-﹞??????足??,
						   0x20-?????足????0x21-?????∟????0x22-????㊣“??, 0x23????㊣“??, 0x24?????足??,0x25-????℅???,0x26-????????㊣“??,0x2a-???赤?足??,0x2b-????????,0x2c-???????㊣,0x2d-∼????㊣?足??,0x2e-????℅???,0x2f-??????㊣那℅???,0x30-????℅????“??, 0x31-?足????㊣那?足??,0x32-﹞???㊣“??, 0x33-???㊣?車?迆, 0x34-????℅???,0x35-﹞?﹞“∼???,0xff- ?????角??*/
	BYTE   byFileType;
	BYTE   byNeedCard;     // ??﹞??豕???“??
						   /*
						   0-㊣?????1-∼???2-????3-????4-????5-????6-????7-????
						   8-?車??9-?赤??10-????11-????12-????13-????14-????
						   15-????16-????17-????18-????19-????20-????21-?角??
						   22-????23-?迆??24-????25-????26-?“??27-?“??28-?辰??
						   29-????30-????31-????32-????33-????34-????0xff-????
						   */
	BYTE   byProvince;     //??﹞??‾????
	BYTE   byRes1;  //?谷???芍??????﹞????車﹞???????℅?㊣那??????0-??﹞?????1-﹞???
	NET_DVR_TIME  struStartTime;//?谷?????????????㊣??
	NET_DVR_TIME  struStopTime;// ?谷?????????芍???㊣??
	char     szPatientID[64];
	BYTE     byRes[256];
}NET_DVR_FIND_PICTURE_MEDICAL_PARAM, *LPNET_DVR_FIND_PICTURE_MEDICAL_PARAM;

typedef struct tagNET_DVR_SEXGROUP_PARAM_
{
	DWORD   dwMale;//???“??????
	DWORD    dwFemale;//???“??????
	BYTE   byRes[64];
}NET_DVR_SEXGROUP_PARAM, *LPNET_DVR_SEXGROUP_PARAM;

typedef struct tagNET_DVR_FACECAPTURE_STATISTICS_RESULT_
{
	DWORD dwSize;
	NET_DVR_TIME_EX   struStartTime;/*?????????㊣??*/
	NET_DVR_TIME_EX   struEndTime;/*?????芍???㊣??*/
	BYTE   byStatType;//?????角????????Bit0-?那???????∫??Bit1-??㊣????∫??Bit2-???????∫
	BYTE   byRes[7];
	DWORD  dwPeopleNum;//????????
	NET_DVR_AGEGROUP_PARAM  struAgeGroupParam;//?那????????????
	NET_DVR_SEXGROUP_PARAM  struSexGroupParam;//??㊣?????????
	NET_DVR_PROGRAM_INFO struProgramInfo;        //????????
	BYTE   byRes1[76];
}NET_DVR_FACECAPTURE_STATISTICS_RESULT, *LPNET_DVR_FACECAPTURE_STATISTICS_RESULT;

//???????“?????????芍?? 
typedef struct tagNET_DVR_TRAFFIC_DATA_QUERY_COND_
{
	DWORD  dwSize;
	/*
	Bit0-?“?????∫
	Bit1-?㊣?????∫
	Bit2-?????????∫
	Bit3-?????角?????∫
	Bit4-???????????∫
	Bit5-???赤???????∫
	Bit6-?????角?????∫
	Bit7-?????﹞?????∫
	Bit8-?????????∫
	Bit9-?角??﹞??辰???∫
	Bit10-℅??????????∫
	Bit11-℅??????????∫
	Bit12-?????角?????∫
	Bit13-????﹞????角?????∫
	Bit14-??﹞“???∟???∫
	Bit15-?????角?????∫
	Bit16-???∟?角?????∫
	*/
	DWORD  dwQueryCond;//?谷?????? 0㊣赤?????∫??1㊣赤?????∫
	DWORD  dwChannel;//??????1?“[1~32]??bit0㊣赤???“??1???????角??bit31㊣赤???“??32??
	NET_DVR_TIME_V30 struStartTime;//?????㊣??
	NET_DVR_TIME_V30 struEndTime;//?芍???㊣??
	char  sLicense[MAX_LICENSE_LEN/*16*/];//(?豕㊣??∫???????谷??, GB2312㊣角??)
										  /*
										  Bit0-?????“??????
										  Bit1-㊣那℅??????????邦??
										  Bit2-02??????????
										  Bit3-??????
										  Bit4-????
										  Bit5-??????????????
										  Bit6-????????
										  Bit7-??????
										  Bit8-??????
										  */
	DWORD  dwPlateType;//?????角???“?∫??∼???㊣赤??????????????
					   /*
					   Bit0-?????“??????
					   Bit1-????
					   Bit2-∼℅??
					   Bit3-????
					   Bit4-????
					   Bit5-????
					   */
	DWORD  dwPlateColor;//?????????“?∫??∼???㊣赤??????????????
						/*
						Bit0-?????“??????
						Bit1-∼℅??
						Bit2-????
						Bit3-????
						Bit4-????
						Bit5-?足??
						Bit6-??????
						Bit7-????
						Bit8-????
						Bit9-????
						Bit10-℅???
						Bit11-﹞???
						Bit12-℅???
						Bit13-??????
						*/
	DWORD  dwVehicleColor;//???赤?????“?∫??∼???㊣赤??????????????
						  /*
						  Bit0-?????“??????
						  Bit1-????
						  Bit2-?車????
						  Bit3-????
						  Bit4-??∼邦??
						  Bit5-??????
						  Bit6-????
						  Bit7-??????
						  Bit8-??????
						  Bit9-SUV/MPV
						  Bit10-????????
						  */
	DWORD  dwVehicleType;//?????角???“?∫??∼???㊣赤??????????????
						 /**
						 Bit0-?????“㊣?????
						 Bit1-????
						 Bit2-????
						 Bit3-????
						 Bit4-???足??
						 Bit5-????????
						 Bit6-??∼????辰
						 Bit7-?﹞??????
						 Bit8-?迆??﹞?
						 Bit9-??﹞“㊣???
						 Bit10-??∼?????
						 Bit11-??﹞?????
						 Bit12-?﹞??????
						 Bit13-????????
						 Bit14-??????????
						 Bit15-????????
						 Bit16-???????﹞
						 Bit17-???????㊣????
						 Bit18-????∼?????
						 */
	DWORD dwIllegalType;
	/**
	Bit0-?????“㊣?????
	Bit1-????
	Bit2-????
	Bit3-????
	Bit4-????
	Bit5-?℅?‾??
	Bit6-???赤
	Bit7-????
	Bit8-??????
	Bit9-????
	Bit10-㊣???
	Bit11-???﹞
	Bit12-?迆??﹞?
	Bit13-????
	*/
	DWORD dwEventType;
	/**
	Bit0-?????“㊣?????
	Bit1-???????﹞??﹞“????
	Bit2-???????﹞??﹞“????
	Bit3-????
	Bit4-????
	Bit5-??﹞“㊣???
	Bit6-?迆??﹞?
	*/
	DWORD  dwForensiceType;
	WORD   wVehicleLogoRecog;  //?????‾?﹞????????"?????‾?﹞??.xlsx" ?“????????
	BYTE   byLaneNo;//???????“0~255,0?????? ㊣赤?? ????????????
	BYTE   byDirection;//?角??﹞??辰??1-??????2-??????3-???辰??4-?????辰?‾??5-?????辰㊣㊣,6-???‾?辰????7-??㊣㊣?辰??    
	WORD   wMinSpeed;//℅????????“0~999??????km/h
	WORD   wMaxSpeed;//℅????????“0~999??????km/h
	BYTE   byDataType;//?????角?? 0-?“????????1-??﹞“??????2-???“??????3-???∟???? ?“????????
	BYTE   byExecuteCtrl;//???? 0-∼℅??????1-????????0xff-????
	BYTE   byRes[254];
}NET_DVR_TRAFFIC_DATA_QUERY_COND, *LPNET_DVR_TRAFFIC_DATA_QUERY_COND;

//???“????????℅??芍??
typedef struct tagNET_DVR_TRAFFIC_PICTURE_PARAM_
{
	NET_DVR_TIME_V30     struRelativeTime; //℅????角???㊣㊣那
	NET_DVR_TIME_V30    struAbsTime;  //℅????????㊣㊣那
	char szPicName[PICTURE_NAME_LEN/*64*/];
	BYTE  byPicType;//?????角?? 0-????????1-℅?????????2-????????3-??????
	BYTE  byRes[63];
}NET_DVR_TRAFFIC_PICTURE_PARAM, *LPNET_DVR_TRAFFIC_PICTURE_PARAM;

//???“?????芍????
typedef struct tagNET_DVR_TRAFFIC_DATA_QUERY_RESULT_
{
	DWORD  dwSize;
	DWORD  dwChannel;//??????1?“[1~32]??
	char  sLicense[MAX_LICENSE_LEN/*16*/];
	/*
	Bit0-?????“??????
	Bit1-㊣那℅??????????邦??
	Bit2-02??????????
	Bit3-??????
	Bit4-????
	Bit5-??????????????
	Bit6-????????
	Bit7-??????
	Bit8-??????
	*/
	DWORD  dwPlateType;//?????角??
					   /*
					   Bit0-?????“??????
					   Bit1-????
					   Bit2-∼℅??
					   Bit3-????
					   Bit4-????
					   Bit5-????
					   */
	DWORD  dwPlateColor;//????????
						/*
						Bit0-?????“??????
						Bit1-∼℅??
						Bit2-????
						Bit3-????
						Bit4-????
						Bit5-?足??
						Bit6-??????
						Bit7-????
						Bit8-????
						Bit9-????
						Bit10-℅???
						Bit11-﹞???
						Bit12-℅???
						Bit13-??????
						*/
	DWORD  dwVehicleColor;//???赤????
						  /*
						  Bit0-?????“??????
						  Bit1-????
						  Bit2-?車????
						  Bit3-????
						  Bit4-??∼邦??
						  Bit5-??????
						  Bit6-????
						  Bit7-??????
						  Bit8-??????
						  Bit9-SUV/MPV
						  Bit10-????????
						  Bit11-?迆????
						  Bit12-﹞??迆????
						  Bit13-????????
						  Bit14-????????
						  Bit15-?∟?“??
						  Bit16-??℅∼???“??
						  Bit17-???“????∼??“
						  Bit18-?邦????
						  Bit19-???????∟????
						  Bit20-??????
						  Bit21-?足??????∼豕??
						  Bit22-??∼?????
						  Bit23-???芍????
						  Bit24-???芍????
						  Bit25-????
						  Bit26-????????
						  */
	DWORD  dwVehicleType;//?????角??
						 /**
						 Bit0-?????“㊣?????
						 Bit1-????
						 Bit2-????
						 Bit3-????
						 Bit4-???足??
						 Bit5-????????
						 Bit6-??∼????辰
						 Bit7-?﹞??????
						 Bit8-?迆??﹞?
						 Bit9-??﹞“㊣???
						 Bit10-??∼?????
						 Bit11-??﹞?????
						 Bit12-?﹞??????
						 Bit13-????????
						 Bit14-??????????
						 Bit15-????????
						 Bit16-???????﹞
						 Bit17-???????㊣????
						 Bit18-????∼?????
						 */
	DWORD dwIllegalType;
	/**
	Bit0-?????“㊣?????
	Bit1-????
	Bit2-????
	Bit3-????
	Bit4-????
	Bit5-?℅?‾??
	Bit6-???赤
	Bit7-????
	Bit8-??????
	Bit9-????
	Bit10-㊣???
	Bit11-???﹞
	Bit12-?迆??﹞?
	Bit13-????
	*/
	DWORD dwEventType;
	/**
	Bit0-?????“㊣?????
	Bit1-???????﹞??﹞“????
	Bit2-???????﹞??﹞“????
	Bit3-????
	Bit4-????
	Bit5-??﹞“㊣???
	Bit6-?迆??﹞?
	*/
	DWORD dwForensiceType;
	WORD  wVehicleLogoRecog;  //?????‾?﹞????????"?????‾?﹞??.xlsx" 
	BYTE  byLaneNo;//???????“0~255,0?????? ㊣赤?? ????????????
	BYTE  byDirection;//?角??﹞??辰??1-??????2-??????3-???辰??4-?????辰?‾??5-?????辰㊣㊣,6-???‾?辰????7-??㊣㊣?辰??    
	WORD  wSpeed;//?????“0~999??????km/h
	BYTE  byDataType;//?????角??: 0-?“?? 1-??﹞“ 2-???? 3-???∟
	BYTE  byRes[253];
	NET_DVR_TRAFFIC_PICTURE_PARAM struTrafficPic[MAX_TRAFFIC_PICTURE_NUM/*8*/];
}NET_DVR_TRAFFIC_DATA_QUERY_RESULT, *LPNET_DVR_TRAFFIC_DATA_QUERY_RESULT;

//?∟???????????“?‾???????芍??
typedef struct tagNET_DVR_TRAFFIC_FLOW_QUERY_COND_
{
	DWORD  dwSize;
	/**
	Bit0-?“?????∫
	Bit1-?㊣?????∫
	Bit2-?????????∫
	*/
	DWORD  dwQueryCond;//?谷?????? 0-??????
	DWORD  dwChannel;//??????1?“[1~32]??bit0㊣赤???“??1???????角??bit31㊣赤???“??32??
	DWORD  dwResChan[10];//?∟???????????“????
	NET_DVR_TIME_V30 struStartTime;//?????㊣??
	NET_DVR_TIME_V30 struEndTime;//?芍???㊣??
	BYTE   byLaneNo;//???????“0~255,0?????? ㊣赤?? ????????????
	BYTE   byRes[255];
}NET_DVR_TRAFFIC_FLOW_QUERY_COND, *LPNET_DVR_TRAFFIC_FLOW_QUERY_COND;

//?∟???????????“?‾???芍??
typedef struct tagNET_DVR_TRAFFIC_FLOW_QUERY_RESULT_
{
	DWORD  dwSize;
	NET_DVR_TIME_V30 struStartTime;//?????㊣??
	NET_DVR_TIME_V30 struEndTime;//?芍???㊣??
	DWORD  dwChannel;//??????1?“[1~32]??
	DWORD  dwFlow;//???‾??
	BYTE   byLaneNo;//???????“0~255,0?????? ㊣赤?? ????????????    
	BYTE   byRes[511];
}NET_DVR_TRAFFIC_FLOW_QUERY_RESULT, *LPNET_DVR_TRAFFIC_FLOW_QUERY_RESULT;

//????????
typedef struct tagNET_DVR_PIC_INFO
{
	BYTE   byPicType;        //?????角????0-jpg
	BYTE   byRes1[3];        //㊣???
	DWORD  dwPicWidth;       //?????赤??
	DWORD  dwPicHeight;      //????????
	DWORD  dwPicDataLen;     //?????????車??
	char*  byPicDataBuff;    //??????????????
	BYTE   byRes2[32];       //㊣???
}NET_DVR_PIC_INFO, *LPNET_DVR_PIC_INFO;

typedef struct tagNET_DVR_VCA_RULE_COLOR_CFG
{
	DWORD       dwSize;//?芍?????車??
	BYTE       byEnable;       //???辰??﹞??????? 0-????????1-????
	BYTE       byRuleID;       //?????????辰ID
	BYTE       byColorBlockNo;  //?????谷?辰??????1????
	BYTE       byRes1;      //㊣???
	NET_DVR_PIC_INFO  struPicInfo;  //????????????
	BYTE     byRes[64];
}NET_DVR_VCA_RULE_COLOR_CFG, *LPNET_DVR_VCA_RULE_COLOR_CFG;

typedef struct tagNET_DVR_VCA_RULE_COLOR_COND
{
	DWORD        dwSize;//?芍?????車??
	DWORD     dwChannel;     //?“????
	BYTE        byRuleID;       //?????????辰ID  0㊣赤????????
	BYTE        byRes[127];
}NET_DVR_VCA_RULE_COLOR_COND, *LPNET_DVR_VCA_RULE_COLOR_COND;

//LLDP????
typedef struct tagNET_DVR_LLDP_PORT_CFG
{
	BYTE byCardNo;      //?“??
	BYTE byPortNo;      //??????
	BYTE byEnabledTx;   //????﹞???lldp∼邦??0-????????1-????
	BYTE byEnabledRx;   //????????lldp∼邦??0-????????1-????
	BYTE byRes[12];
}NET_DVR_LLDP_PORT_CFG, *LPNET_DVR_LLDP_PORT_CFG;

typedef struct tagNET_DVR_LLDP_CFG
{
	DWORD dwSize;
	BYTE  byEnabled;    //????LLDP??????0-????????1-????
	BYTE  byRes1[3];
	DWORD dwHoldTime;   //㊣????㊣????????????
	DWORD dwReiniTime;  //???????????㊣????????????
	DWORD dwPacketTime; //?辰∼邦?㊣????????????
	NET_DVR_LLDP_PORT_CFG struLLDPPortCfg[MAX_PORT_NUM]; //?‾????LLDP????
	BYTE  byRes2[32];
}NET_DVR_LLDP_CFG, *LPNET_DVR_LLDP_CFG;

//??????﹞??‾?迄㊣?????
typedef struct tagNET_DVR_CARD_PORT_INFO
{
	DWORD dwPortNo;              //????????0-???∫
	BYTE  byPortName[NAME_LEN];  //??????
	BYTE  byWorkMode;            //?∟℅‾??????1-ACCESS??2-TRUNK??3-HYPRID
	BYTE  byBandWidth;           //???赤??1-100M??2-1G??3-10G
	BYTE  byPortType;            //?????角????1-??????2-??????3-??????????
	BYTE  byRes[13];
}NET_DVR_CARD_PORT_INFO, *LPNET_DVR_CARD_PORT_INFO;

typedef struct tagNET_DVR_NETMGR_CARD_INFO
{
	BYTE  byTypeName[NAME_LEN];      //????????
	BYTE  bySerialNo[SERIALNO_LEN];  //?辰????
	BYTE  bySoftwareVersion[VERSION_LEN]; //?赤??∼?㊣?
	NET_DVR_IPADDR struIPAddr;           //IP???﹞
	DWORD dwSlotNo;    //?????“???????“?‾??????
	BYTE  byStructureType;           //?芍???角????1-2U??2-4U
	BYTE  byRes1[3];
	NET_DVR_CARD_PORT_INFO struNetPortInfo[MAX_SINGLE_CARD_PORT_NO]; //?‾????????
	BYTE  byRes2[32];
}NET_DVR_NETMGR_CARD_INFO, *LPNET_DVR_NETMGR_CARD_INFO;

typedef struct tagNET_DVR_FUNC_CARD_INFO
{
	DWORD dwCardNo;                 //?“??????1????
	BYTE  byTypeName[NAME_LEN];     //????????
	BYTE  bySerialNo[SERIALNO_LEN]; //?辰????
	BYTE  bySoftwareVersion[VERSION_LEN]; //?赤??∼?㊣?
	DWORD dwMainSlot;               //?‾????????1????
	BYTE  byStructureType;          //?芍???角????1-2U??2-4U
	BYTE  byRes1[3];
	NET_DVR_CARD_PORT_INFO struFuncPortInfo[MAX_SINGLE_CARD_PORT_NO]; //?‾????????
	BYTE  byRes2[32];
}NET_DVR_FUNC_CARD_INFO, *LPNET_DVR_FUNC_CARD_INFO;

typedef struct tagNET_DVR_FIBER_CONVERT_BASIC
{
	DWORD dwSize;
	BYTE  byPowerType;                                       //?????角????1-????????2-??????
	BYTE  byRes1[3];
	DWORD dwSlotNum;                                             //?????“???????“?‾??????
	NET_DVR_NETMGR_CARD_INFO struNetCardInfo;                     //?????“????
	NET_DVR_FUNC_CARD_INFO   struFuncCardInfo[MAX_FUNC_CARD_NUM]; //?????“????
	BYTE  byRes2[64];
}NET_DVR_FIBER_CONVERT_BASIC, *LPNET_DVR_FIBER_CONVERT_BASIC;

//??????﹞??‾?∟℅‾℅???????
typedef struct tagNET_DVR_CARD_PORT_STATE
{
	BYTE  byValid;                 //??﹞????∫??0-???∫??1-???∫
	BYTE  byPortType;            //?????角????1-??????2-??????3-??????????
	BYTE  byLinkState;           //????℅?????0-????????1-??????
	BYTE  byRes1;
	DWORD dwSendBytes;           //﹞?????℅?????
	DWORD dwRecvBytes;           //????????∼邦??
	DWORD dwRecvLostPackets;     //??????∼邦??
	DWORD dwRecvCrcErrPackets;   //????CRC???谷?赤?車∼邦??
	DWORD dwRecvFragmentPackets; //?????谷?????????∼????℅???∼邦???“∼邦?∟???迄????64℅?????
	BYTE  byRes2[16];
}NET_DVR_CARD_PORT_STATE, *LPNET_DVR_CARD_PORT_STATE;

typedef struct tagNET_DVR_NET_CARD_STATE
{
	NET_DVR_CARD_PORT_STATE struNetPortState[MAX_SINGLE_CARD_PORT_NO];    //?‾????℅???    
	BYTE byRes[64];
}NET_DVR_NET_CARD_STATE, *LPNET_DVR_NET_CARD_STATE;

typedef struct tagNET_DVR_FUNC_CARD_STATE
{
	BYTE  byEnabled;    //???芍????﹞????∫??0-???∫??1-???∫
	BYTE  byRes1[3];
	DWORD dwCardNo; //?“??
	NET_DVR_CARD_PORT_STATE struFuncCardPortState[MAX_SINGLE_CARD_PORT_NO];
	BYTE  byRes[32];
}NET_DVR_FUNC_CARD_STATE, *LPNET_DVR_FUNC_CARD_STATE;

typedef struct tagNET_DVR_FIBER_CONVERT_STATE
{
	DWORD dwSize;
	NET_DVR_NET_CARD_STATE struNetCardState;                      //?????“℅???
	NET_DVR_FUNC_CARD_STATE struFuncCardState[MAX_FUNC_CARD_NUM]; //?????“℅???
	BYTE  byRes[32];
}NET_DVR_FIBER_CONVERT_STATE, *LPNET_DVR_FIBER_CONVERT_STATE;

//??????????﹞??‾1.0 ?迄㊣?????
typedef struct tagNET_DVR_NETMGR_CARD_INFO_V50
{
	BYTE byMainSlotNo;                        //?????“???????“?‾??????
	BYTE byRes1[3];
	BYTE byTypeName[NAME_LEN];            //????????
	BYTE bySerialNo[SERIALNO_LEN];            //?辰????
	BYTE bySoftwareVersion[VERSION_LEN];    //?赤??∼?㊣?
	BYTE byHardwareVersion[VERSION_LEN];    //????∼?㊣?
	NET_DVR_IPADDR struIPAddr;                //IP???﹞
	NET_DVR_IPADDR struMask;                //℅???????
	NET_DVR_IPADDR struGateway;                //????????
	BYTE byMacAddr[6];                        //MAC???﹞
	BYTE bySlotNums;                        //??????
	BYTE byStructureType;                       //?芍???角????1-2U??2-4U
	NET_DVR_CARD_PORT_INFO struPortInfo[MAX_SINGLE_CARD_PORT_NO];    //?‾????????
	BYTE byRes2[64];
}NET_DVR_NETMGR_CARD_INFO_V50, *LPNET_DVR_NETMGR_CARD_INFO_V50;

typedef struct tagNET_DVR_FUNC_CARD_INFO_V50
{
	BYTE byCardNo;                          //?????“?“??
	BYTE byMainSlotNo;						//?????“???????“?‾??????
	BYTE byRes1[2];
	BYTE byTypeName[NAME_LEN];            //????????
	BYTE bySerialNo[SERIALNO_LEN];            //?辰????
	BYTE bySoftwareVersion[VERSION_LEN];    //?赤??∼?㊣?
	BYTE byIsVerMismatch;                    //?赤??∼?㊣????????“??㊣??????????赤??∼?㊣???﹞???????0-??????!0-??????
	BYTE byRes2[3];
	BYTE byNewestSoftwareVersion[VERSION_LEN];    //℅??????赤??∼?㊣???∼?㊣????????㊣???∫
	BYTE byHardwareVersion[VERSION_LEN];    //????∼?㊣?
	BYTE bySlotNums;                        //??????
	BYTE byStructureType;                       //?芍???角????1-2U??2-4U
	BYTE byRes3[2];
	NET_DVR_CARD_PORT_INFO struPortInfo[MAX_SINGLE_CARD_PORT_NO];    //?‾????????
	BYTE byRes4[64];
}NET_DVR_FUNC_CARD_INFO_V50, *LPNET_DVR_FUNC_CARD_INFO_V50;

typedef struct tagNET_DVR_REMOTE_SEND_CARD_INFO_V50
{
	BYTE byCardNo;                              //?“????﹞????迆???????????“???“??
	BYTE byMainSlotNo; 							//????????﹞????迆???????????“???‾??????
	BYTE byRes1[2];
	BYTE byTypeName[NAME_LEN];            //????????
	BYTE bySoftwareVersion[VERSION_LEN];    //?赤??∼?㊣?
	BYTE byIsVerMismatch;                    //?赤??∼?㊣????????“??㊣??????????赤??∼?㊣???﹞???????0-??????!0-??????
	BYTE byRes2[3];
	BYTE byNewestSoftwareVersion[VERSION_LEN];    //℅??????赤??∼?㊣???∼?㊣????????㊣???∫
	BYTE byHardwareVersion[VERSION_LEN];    //????∼?㊣?
	NET_DVR_CARD_PORT_INFO struPortInfo[MAX_SINGLE_CARD_PORT_NO];    //?‾????????
	BYTE byRes3[64];
}NET_DVR_REMOTE_SEND_CARD_INFO_V50, *LPNET_DVR_REMOTE_SEND_CARD_INFO_V50;

typedef struct tagNET_DVR_FIBER_CONVERT_BASIC_V50
{
	DWORD dwSize;
	BYTE byPowerType;    //?????角????1-????????2-??????
	BYTE byRes1[3];
	DWORD dwSlotNum;    //?迆??℅???????
	NET_DVR_NETMGR_CARD_INFO_V50 struNetCardInfo;    //?????“????
	NET_DVR_FUNC_CARD_INFO_V50 struFuncCardInfo[MAX_FUNC_CARD_NUM];    //?????“????
	NET_DVR_REMOTE_SEND_CARD_INFO_V50 struRemoteSendCardInfo[MAX_FUNC_CARD_NUM];    //﹞????迆????
	BYTE byRes2[64];
}NET_DVR_FIBER_CONVERT_BASIC_V50, *LPNET_DVR_FIBER_CONVERT_BASIC_V50;

//??????????﹞??‾1.0 ℅???????
typedef struct tagNET_DVR_CARD_PORT_STATE_V50
{
	BYTE byPortNo;                    //??????????1????
	BYTE byPortType;                //?????角????1-??????2-??????3-??????????
	BYTE byLinkState;               //????℅?????0-????????1-??????
	BYTE byPortSpeed;                 //???赤??0-???∫??1-℅?????2-100M??3-1000M??4-10G
	BYTE byPortDuplexMode;             //???????∟??????0-???∫??1-℅?????2-?????∟??3-∼????∟
	BYTE byRes1[3];
	BYTE byPortName[NAME_LEN];         //????????
	DWORD dwSendBytes;              //﹞?????℅?????
	DWORD dwSendByteSpeed;            //﹞???℅???????????????bps
	DWORD dwSendPackets;             //﹞?????℅?????
	DWORD dwSendPacketSpeed;        //﹞?∼邦??????????????/??
	DWORD dwRecvBytes;              //??????℅?????
	DWORD dwRecvByteSpeed;            //????℅???????????????bps
	DWORD dwRecvPackets;             //??????∼邦??
	DWORD dwRecvPacketSpeed;        //??∼邦??????????????/??
	DWORD dwRecvLostPackets;        //??????∼邦??
	DWORD dwRecvCrcErrPackets;         //????CRC???谷?赤?車∼邦??
	DWORD dwRecvFragmentPackets;    //?????谷?????????∼????℅???∼邦???“∼邦?∟???迄????64℅?????
	BYTE byRes2[48];
}NET_DVR_CARD_PORT_STATE_V50, *LPNET_DVR_CARD_PORT_STATE_V50;

typedef struct tagNET_DVR_NET_CARD_STATE_V50
{
	BYTE byMainSlotNo;     //?????“?‾??????
	BYTE byRes1[3];
	NET_DVR_CARD_PORT_STATE_V50 struPortState[MAX_SINGLE_CARD_PORT_NO]; //?????“????℅???
	BYTE byRes2[344];
}NET_DVR_NET_CARD_STATE_V50, *LPNET_DVR_NET_CARD_STATE_V50;

typedef struct tagNET_DVR_FUNC_CARD_STATE_V50
{
	BYTE byCardNo;      //?????“?“??
	BYTE byMainSlotNo; 	//?????“?‾??????
	BYTE byRes1[2];
	NET_DVR_CARD_PORT_STATE_V50 struPortState[MAX_SINGLE_CARD_PORT_NO];    //?????“????℅???
	BYTE byRes2[64];
}NET_DVR_FUNC_CARD_STATE_V50, *LPNET_DVR_FUNC_CARD_STATE_V50;

typedef struct tagNET_DVR_REMOTE_SEND_CARD_STATE_V50
{
	BYTE byCardNo;	    //﹞????迆???????????“???“??
	BYTE byMainSlotNo; 	//﹞????迆???????????“???‾??????
	BYTE byRes1[2];
	NET_DVR_CARD_PORT_STATE_V50 struPortState[MAX_SINGLE_CARD_PORT_NO];    //?????“????℅???
	BYTE byRes[64];
}NET_DVR_REMOTE_SEND_CARD_STATE_V50, *LPNET_DVR_REMOTE_SEND_CARD_STATE_V50;

typedef struct tagNET_DVR_FIBER_CONVERT_STATE_V50
{
	DWORD dwSize;
	NET_DVR_NET_CARD_STATE_V50 struNetCardState;    //?????“℅???
	NET_DVR_FUNC_CARD_STATE_V50 struFuncCardState[MAX_FUNC_CARD_NUM];    //?????“℅???  
	NET_DVR_REMOTE_SEND_CARD_STATE_V50 struRemoteSendCardState[MAX_FUNC_CARD_NUM];    //﹞????迆℅???
	BYTE  byRes[64];
}NET_DVR_FIBER_CONVERT_STATE_V50, *LPNET_DVR_FIBER_CONVERT_STATE_V50;

//??????﹞??‾????????
typedef struct tagNET_DVR_FC_PORT_TOPOLOGY
{
	DWORD dwPortNo;                 //????????0-???∫??﹞?0???????“??????
	BYTE  byPortType;               //?????角????1-??????2-??????3-??????????
	BYTE  byLocalWorkMode;          //㊣????∟℅‾??????1-ACCESS??2-TRUNK??3-HYPRID
	BYTE  byLocalBandWidth;         //㊣??????赤??1-100M??2-1G??3-10G
	BYTE  byRes1[1];
	BYTE  byPeerTypeName[NAME_LEN]; //?????豕㊣??角??????
	BYTE  byPeerMac[MACADDR_LEN];   //????MAC???﹞
	DWORD dwPeerPortNo;             //??????????
	BYTE  byPeerWorkMode;           //?????∟℅‾??????1-ACCESS??2-TRUNK??3-HYPRID
	BYTE  byPeerBandWidth;          //???????赤??1-100M??2-1G??3-10G
	BYTE  byRes2[30];
}NET_DVR_FC_PORT_TOPOLOGY, *LPNET_DVR_FC_PORT_TOPOLOGY;

typedef struct tagNET_DVR_FC_CARD_TOPOLOGY
{
	BYTE  byEnable;                    //???芍??????﹞????∫??0-???∫??﹞?0-???∫
	BYTE  byRes1[3];
	DWORD dwCardNo;                 //?“????0-?????“???車??0-?????“
	DWORD dwSlotNum;                //?“????????????
	BYTE  byTypeName[NAME_LEN];        //?“?角??????
	BYTE  byLocalMac[MACADDR_LEN];  //㊣???MAC???﹞
	NET_DVR_FC_PORT_TOPOLOGY struFCPortTopology[MAX_SINGLE_CARD_PORT_NO]; //?‾????????????
	BYTE  byRes[32];
}NET_DVR_FC_CARD_TOPOLOGY, *LPNET_DVR_FC_CARD_TOPOLOGY;

typedef struct tagNET_DVR_FIBER_CONVERT_TOPOLOGY
{
	DWORD dwSize;
	NET_DVR_FC_CARD_TOPOLOGY struFCCardTopology[MAX_FC_CARD_NUM]; //?‾?“????????
	BYTE byRes[64];
}NET_DVR_FIBER_CONVERT_TOPOLOGY, *LPNET_DVR_FIBER_CONVERT_TOPOLOGY;

//??????﹞??‾????℅???????
typedef struct tagNET_DVR_FC_COND
{
	DWORD dwSize;
	DWORD dwSlotNo; //??????
	DWORD dwPortNo; //??????
	BYTE  byRes[32];
}NET_DVR_FC_COND, *LPNET_DVR_FC_COND;

typedef struct tagNET_DVR_FC_PORT_REMARKS
{
	DWORD dwSize;
	BYTE  byLocalRemarks[MAX_REMARKS_LEN]; //㊣???????℅???????
	BYTE  byPeerRemarks[MAX_REMARKS_LEN]; //????????℅???????
	BYTE  byRes[32];
}NET_DVR_FC_PORT_REMARKS, *LPNET_DVR_FC_PORT_REMARKS;

typedef enum _EN_FIBER_CONVERT_ALARM
{
	FC_OPTICAL_PORT_LOST = 1,
	FC_ELECTRICAL_PORT_LOST,
	FC_FUNC_CARD_LOST,
	FC_CARD_DISCONNECTED, //?“????????
	FC_MAX_TEMP_LIMITED, //??????????????
	FC_MIN_TEMP_LIMITED, //??????????????
	FC_MAX_VOLTAGE_LIMITED, //??????????????
	FC_MIN_VOLTAGE_LIMITED, //??????????????
}EN_FIBER_CONVERT_ALARM;

typedef enum _EN_FIBER_CONVERT_NOTIFICATION
{
	FC_OPTICAL_PORT_CONNECTED = 1,
	FC_ELECTRICAL_PORT_CONNECTED,
	FC_FUNC_CARD_INSERT,
	FC_CARD_CONNECTED, //?“?????“??
	FC_TEMP_RECOVERY, //?????????“??
	FC_VOLTAGE_RECOVERY, //?????????“??
}EN_FIBER_CONVERT_NOTIFICATION;

typedef struct tagNET_DVR_FIBER_CONVERT_ALARM
{
	DWORD dwSize;
	DWORD dwEventType;        //?????角????1-??????2-?“??
	DWORD dwEvent;          //???????????????㊣????????FIBER_CONVERT_ALARM???“???㊣????????FIBER_CONVERT_NOTIFICATION
	BYTE bySlotNum;         //?????????㊣?“?角????﹞????迆?㊣????????????﹞????迆???????????“???????????迆???????∼?“???㊣???∫
	BYTE byCardType;        //?“?角????0-???∫??1-?????“??2-?????“??3-﹞????迆??4-?迆??
	BYTE byPortNo;          //??????????1???????迆???????∼?“???㊣???∫
	BYTE byCurTemperature;  //??﹞??????????????????????∼?“???㊣???∫??????????????
	WORD wCurVoltage;      //??﹞????????????“????????*10?????????????∼?“???㊣???∫????????﹞邦??
	BYTE byRes1[30];
}NET_DVR_FIBER_CONVERT_ALARM, *LPNET_DVR_FIBER_CONVERT_ALARM;

//?????迆????????????
typedef enum _EN_SWITCH_CONVERT_ALARM
{
	SC_OPTICAL_PORT_LOST = 1,
	SC_NETWORK_PORT_LOST,
	SC_WIRELESS_SPEED_UP_EXCEPTION,//?????????????足??
	SC_WIRELESS_SHUTDOWN,  //????????????????
	SC_DEVICE_POE_MAX,  //POE-MAX????
	SC_PORT_POE_POWER_OFF,  //????POE????????
}EN_SWITCH_CONVERT_ALARM;

typedef enum _EN_SWICH_CONVERT_NOTIFICATION
{
	SC_OPTICAL_PORT_CONNECTED = 1,
	SC_NETWORK_PORT_CONNECTED,
	SC_DEVICE_POE_MAX_RECOVERY,   //POE-MAX????????
	SC_PORT_POE_POWER_ON,    //????POE?????“??
	SC_WIRELESS_CONNECTED,  //????????????
}EN_SWITCH_CONVERT_NOTIFICATION;

typedef struct tagNET_DVR_SWITCH_CONVERT_ALARM
{
	DWORD dwSize;
	BYTE  byPortNo;    //?????‾??????1????
	BYTE  byRes1[3];
	DWORD dwEventType; //?????角????1-??????2-?“??
	DWORD dwEvent;     //???????????????㊣????????EN_SWITCH_CONVERT_ALARM???“???㊣????????EN_SWITCH_CONVERT_NOTIFICATION
	BYTE  byRes2[32];
}NET_DVR_SWITCH_CONVERT_ALARM, *LPNET_DVR_SWITCH_CONVERT_ALARM;

typedef struct tagNET_DVR_SWITCH_LAMP_CFG
{
	DWORD        dwSize;//?芍?????車??
	BYTE       byEnable;       //???辰??﹞??????? 0-????????1-????
	BYTE       byTriggerMode; // 1-??????﹞???2-??????﹞?
	BYTE       byUploadPic;   //0-????????????1-????????
	BYTE       byRes1;        //㊣???
	DWORD      dwTimeInterval; //??????﹞?㊣“???㊣????????﹞??∫[0,3600]??????????
	NET_DVR_HANDLEEXCEPTION_V30 struHandleType;//???赤﹞???
	BYTE       byRelRecordChan[MAX_IVMS_IP_CHANNEL];    //㊣“????﹞??????車?“????1㊣赤????﹞????“????0㊣赤??????﹞?
	NET_DVR_SCHEDTIME struAlarmTime[MAX_DAYS][MAX_TIMESEGMENT_V30];//?足???㊣??
	BYTE       byRes[256];
}NET_DVR_SWITCH_LAMP_CFG, *LPNET_DVR_SWITCH_LAMP_CFG;

typedef struct tagNET_DVR_SWITCH_LAMP_ALARM
{
	DWORD        dwSize;//?芍?????車??
	NET_VCA_DEV_INFO    struDevInfo;        //?豕㊣?????
	NET_DVR_TIME_EX     struTime;           //㊣“???㊣??
	BYTE                byLampStatus;       //??????℅?????0-????㊣?  1-???辰??
	BYTE                byRes1[3];          //㊣???
	DWORD               dwPicDataLen;       //?????????∟????﹞?0㊣赤????????????
	char*               pPicData;           //????????
	BYTE                byRes[64];
}NET_DVR_SWITCH_LAMP_ALARM, *LPNET_DVR_SWITCH_LAMP_ALARM;

//﹞??∟??????????
typedef struct tagNET_DVR_RS485_CASCADE_CFG
{
	DWORD    dwSize;
	BYTE    byDevAddr;    //?豕㊣????﹞??0-?‾?迆??1-15?????迆
	BYTE    byRes[131];
}NET_DVR_RS485_CASCADE_CFG, *LPNET_DVR_RS485_CASCADE_CFG;

//???????邦????????????
typedef struct tagNET_DVR_PRIVATE_PROTOCOL_CFG
{
	DWORD          dwSize;
	NET_DVR_IPADDR     struIP; //??????????IP???﹞
	WORD          wPort;//????????????????
	BYTE          byEnable;//????,  0-㊣?????1-????????2-????
	BYTE        byRes;
	DWORD        dwInterval;//????????????(0-???㊣???????????????豕㊣???℅?; >=0,?????????????㊣??????)
	BYTE         byServerType;//﹞????角?? 0-????1-??∼?
	BYTE         byEcryptedSMSEnable;//0-????????1-????
	BYTE         byAlgorithm;//??????﹞“??0-????1-RSA
	BYTE         byAcauisitionMode;//??????????0-?迄㊣???????1-?谷???赤﹞???????2-?迄㊣?????+?谷???赤﹞?????
	DWORD        dwDistanceLimit;//?角??????????????m
	BYTE         byPKModeEnable;//PK????????,  0-㊣?????1-????????2-????
	BYTE         byMACAddrReductionEnable;//MAC???﹞????????,  0-㊣?????1-????????2-????
	BYTE         byRes1[214];
	char         szIndexCode[MAX_INDEX_CODE_LEN];
	DWORD        dwSecretKeyLen;//?????∟??
	char         szSecretKey[MAX_SECRETKEY_LEN/*512*/];//????
}NET_DVR_PRIVATE_PROTOCOL_CFG, *LPNET_DVR_PRIVATE_PROTOCOL_CFG;

//?‾???邦??
typedef struct tagNET_DVR_DEBUG_CMD
{
	DWORD     dwSize;
	char  szDebugCMD[MAX_DEBUGCMD_LEN/*1024*/];
	BYTE  byRes[400];
}NET_DVR_DEBUG_CMD, *LPNET_DVR_DEBUG_CMD;

//?‾??????
typedef struct tagNET_DVR_DEBUG_INFO
{
	DWORD     dwSize;
	char  szDebugInfo[MAX_DEBUGINFO_LEN/*1400*/];
	BYTE  byRes[32];
}NET_DVR_DEBUG_INFO, *LPNET_DVR_DEBUG_INFO;



#define MAX_SSID_LEN    32   //SSID???∟??
#define MAX_WS_PASSWD_LEN    64   //?????∟??
typedef    struct tagNET_DVR_WIRELESSSERVER
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byWLanShare;//WLan???????? 0-??㊣???1-????
	BYTE        byBroadcastSSID;//SSID???????? 0-??㊣???1-????
	BYTE        bySecurityMode;//∼??????? 0- not-encrypted??1-WPA??2-WPA2(???㊣???∫??2)
	BYTE        byAlgorithmType; //???????? 1-TKIP??2-AES
	char        szSSID[MAX_SSID_LEN/*32*/];//SSID??????
	char        szPassWord[MAX_WS_PASSWD_LEN/*64*/];
	BYTE        byDefaultPassword;//??﹞??????????? 0-﹞???1-??
	BYTE        byRes[255];
}NET_DVR_WIRELESSSERVER, *LPNET_DVR_WIRELESSSERVER;

typedef    struct tagNET_DVR_CONNECTDEV_COND
{
	DWORD       dwSize;
	DWORD        dwChannel;
	BYTE        byRes[128];
}NET_DVR_CONNECTDEV_COND, *LPNET_DVR_CONNECTDEV_COND;

typedef    struct tagNET_DVR_CONNECTDEV_CFG
{
	DWORD       dwSize;
	BYTE        byID;//?辰????
	BYTE        byRes[1];
	BYTE        byMACAddr[MACADDR_LEN/*6*/];    // ???赤???﹞
	NET_DVR_IPADDR    struDVRIP;//?豕㊣?IP
	NET_DVR_TIME  struConnectTime;//?????㊣??
	BYTE        byRes1[256];
}NET_DVR_CONNECTDEV_CFG, *LPNET_DVR_CONNECTDEV_CFG;

typedef struct tagNET_DVR_GIS_SERVER_INFO
{
	BYTE  byUserName[NAME_LEN];
	BYTE  byPassword[PASSWD_LEN];
	NET_DVR_IPADDR struServerIP;     //GIS﹞????‾IP???﹞
	WORD  wPort;    //GIS﹞????‾????
	BYTE  byRes[30];
}NET_DVR_GIS_SERVER_INFO, *LPNET_DVR_GIS_SERVER_INFO;

typedef struct tagNET_DVR_BASEMAP_CONTROL_CFG_V40
{
	DWORD dwSize;
	BYTE  byEnable;        //??﹞???????1-??????0-????    
	BYTE  byBaseMapType;    //?℅???角????1-?????℅????2-???????????℅????3-GIS?℅??
	BYTE  byRes1[2];
	DWORD dwBaseMapNo;     //?℅???????℅???角????1?㊣???????????????辰?????℅???角????2?㊣??????????????????℅??????????????“1℅??????車??+1℅???℅?∼???+1℅???????????+1℅???㊣?????
	NET_DVR_GIS_SERVER_INFO struGisServer;    //GIS﹞????‾????,?㊣?℅???角????GIS?℅???㊣???∫
	BYTE  byRes2[64];
}NET_DVR_BASEMAP_CONTROL_CFG_V40, *LPNET_DVR_BASEMAP_CONTROL_CFG_V40;

typedef struct tagNET_DVR_VIDEO_IMG_DB_CFG
{
	DWORD        dwSize;                   //NET_DVR_VIDEO_IMG_DB_CFG?芍?????車??
	INT64       i64Capacity;             //??????℅???????????????????MB
	INT64        i64UsedSpace;            //????????????????????????????MB
	INT64        i64AvailableSpace;        //????????????????????????????MB
	BYTE          byRes[256];                //㊣???
}NET_DVR_VIDEO_IMG_DB_CFG, *LPNET_DVR_VIDEO_IMG_DB_CFG;

typedef struct tagNET_DVR_FILE_QUERY_INFO
{
	DWORD        dwSize;                   //NET_DVR_FILE_QUERY_INFO?芍?????車??
	INT64       i64FileLen;             //?????車??
	BYTE          byRes[256];                //㊣???
}NET_DVR_FILE_QUERY_INFO, *LPNET_DVR_FILE_QUERY_INFO;

typedef struct tagNET_DVR_FILE_INFO_IN
{
	char        szFileID[MAX_FILE_ID_LEN];        //???????車???豕㊣?﹞?????????ID
	BYTE        byRes[256];
}NET_DVR_FILE_INFO_IN, *LPNET_DVR_FILE_INFO_IN;

typedef struct tagNET_DOWNLOAD_CB_INFO
{
	DWORD     dwType;            //?角??, 0-????????,1-????????????(???????迆??????),2-????℅???????(???????迆??????)
	BYTE    *pData;            //????????
	DWORD   dwDataLen;        //?????∟??
	void*   pFileInfo;        //?????????芍????(???????迆???????㊣???∫)
	DWORD   dwFileInfoLen;    //?????????芍?????∟??(???????迆???????㊣???∫)
	BYTE    byRes[120];        //㊣???
}NET_DOWNLOAD_CB_INFO, *LPNET_DOWNLOAD_CB_INFO;

typedef BOOL(*DOWNLOAD_DATA_CB)(LONG lHandle, NET_DOWNLOAD_CB_INFO *pCBInfo, void *pUserData);

typedef struct tagNET_DVR_DOWNLOAD_CB_PARAM
{
	DOWNLOAD_DATA_CB     fnDownloadDataCB;    //???????????‾????
	void                 *pUserData;            //???∫????, ??fnPreviewDataCB???‾????
	INT64                i64Offset;        //??????????????????????????????
	BYTE                   byRes[256];
}NET_DVR_DOWNLOAD_CB_PARAM, *LPNET_DVR_DOWNLOAD_CB_PARAM;

typedef struct tagNET_DVR_UPLOAD_DB_IN
{
	INT64    i64FileLen;             //?????????????豕???????????∟????????????????????
	BYTE    byContinueUpload;     //0-????????????1-??????????????????㊣???????
	BYTE       byRes[255];
}NET_DVR_UPLOAD_DB_IN, *LPNET_DVR_UPLOAD_DB_IN;


typedef struct tagNET_DVR_UPLOAD_DB_OUT
{
	char    szFileID[MAX_FILE_ID_LEN];        //???????車???豕㊣?﹞?????????ID
	BYTE    byRes[256];
}NET_DVR_UPLOAD_DB_OUT, *LPNET_DVR_UPLOAD_DB_OUT;

typedef struct tagNET_DVR_SEND_PARAM_IN
{
	BYTE    *pSendData;             //﹞???????????,PicURL == 1 ???㊣?辰???????????????? URL ℅?﹞???,byUploadModeling == 1 ???㊣?辰???????????????? ?“??base64????????
	DWORD    dwSendDataLen;         //﹞????????∟??,PicURL == 1 ???㊣?辰??㊣赤???? URL ℅?﹞??????∟??,byUploadModeling == 1 ???㊣?辰??㊣赤?????“??????base64?車???????∟??
	NET_DVR_TIME_V30    struTime;   //?????㊣??
	BYTE    byPicType;              //????????,1-jpg,2-bmp,3-png,4-SWF,5-GIF
	BYTE    byPicURL;               //????????????URL﹞??? 0-????????????????1-????????℅?URL﹞???
									/*??﹞??????“????????
									0-	??????????????﹞???(pSendData???辰??????????????, dwPicDataLen?????????????????∟??)??
									1-	?㊣???????“??????(pSendData???辰?“??base64????????, dwPicDataLen???“??????base64?車???????∟??)??
									℅????“??????????base64????﹞???,???????“???????????車??byPicURL ???豕??
									?㊣?㊣/ISAPI/Intelligent/channels/<ID>/faceContrast/capabilities?㊣??????﹞???isSupportUploadModeling?????????㊣???∫???????“??????. */
	BYTE    byUploadModeling;
	BYTE    byRes1;
	DWORD   dwPicMangeNo;           //???????赤??
	BYTE    sPicName[NAME_LEN];     //????????
	DWORD   dwPicDisplayTime;       //??????﹞??㊣?∟????????
	BYTE    *pSendAppendData;       //﹞?????????????????????????????FaceAppendData ??XML?豕????
	DWORD   dwSendAppendDataLen;    //﹞??????????????????????∟??  FaceAppendData  XML???∟????
	BYTE    byRes[192];
}NET_DVR_SEND_PARAM_IN, *LPNET_DVR_SEND_PARAM_IN;


typedef struct tagNET_DVR_DOWNLOAD_QOS
{
	DWORD    dwMaxSpeed;            //?‾??℅??車??????????kbps
	BYTE    byRes[256];
}NET_DVR_DOWNLOAD_QOS, *LPNET_DVR_DOWNLOAD_QOS;


#define  NET_SDK_MAX_FILE_NAME 100  //℅??車????????

typedef struct tagNET_DVR_UPLOAD_FILEVOLUME_PRARAM_
{
	DWORD   dwSize;
	BYTE    byFileType;  //?????角?? 0-??????1-????
	BYTE    byFileVolnumeID;   //?????赤ID?“?????“??NET_DVR_GET_HDVOLUME_CFG ??????
	BYTE    byArchive;  //0-???谷????1-?谷??
	BYTE    byRes1;
	DWORD   dwFileSize;    //?????車??
	char    szFileName[NET_SDK_MAX_FILE_NAME/*100*/];   //????????
	BYTE    byRes[300];
}NET_DVR_UPLOAD_FILEVOLUME_PRARAM, *LPNET_DVR_UPLOAD_FILEVOLUME_PRARAM;

typedef struct tagNET_DVR_DOWNLOAD_FILEVOLUME_PARAM_
{
	DWORD     dwSize;
	BYTE      sUrl[MAX_UPLOADFILE_URL_LEN/*240*/];   //url
	BYTE      byRes[248];
	DOWNLOAD_DATA_CB     fnDownloadDataCB;    //???????????‾????
	void      *pUserData;            //???∫????, ??fnPreviewDataCB???‾????
}NET_DVR_DOWNLOAD_FILEVOLUME_PARAM, *LPNET_DVR_DOWNLOAD_FILEVOLUME_PARAM;


//???∼????????
typedef struct tagNET_DVR_FILM_MODE_CFG
{
	DWORD    dwSize;          //?芍?????車??
	BYTE     byScreenType;     //?????角????0-????????1-????????2-??????
	BYTE     byRes[255];    //㊣???
}NET_DVR_FILM_MODE_CFG, *LPNET_DVR_FILM_MODE_CFG;

//????????????
typedef struct tagNET_DVR_DIRECTED_STRATEGY_CFG
{
	DWORD    dwSize;  //?芍?????車??
	BYTE     byDirectedStrategyType; //?????????角????0-??????????????1-???﹞????????,2-???﹞????1??2,3-???﹞????????1??3
	BYTE     byRes[255];     //㊣???
}NET_DVR_DIRECTED_STRATEGY_CFG, *LPNET_DVR_DIRECTED_STRATEGY_CFG;

//㊣??辰℅??芍??
typedef struct NET_DVR_FRAME
{
	BYTE     byFrameWide; /*㊣??辰?赤????﹞“????﹞??∫??[0,14]??????????????????*/
	BYTE     byRed;  /*㊣??辰??????RGB ??????R??G??B??﹞?㊣?????????????*/
	BYTE     byGreen;
	BYTE     byBlue;
	BYTE     byRes[256];
}NET_DVR_FRAME, *LPNET_DVR_FRAME;

//????????㊣??辰
typedef struct tagNET_DVR_FRAME_CFG
{
	DWORD           dwSize;          //?芍?????車??
	NET_DVR_FRAME    struTopFrame;    //??㊣??辰
	NET_DVR_FRAME    struBottomFrame;//??㊣??辰
	NET_DVR_FRAME    struLeftFrame;    //℅車㊣??辰
	NET_DVR_FRAME    struRightFrame;    //??㊣??辰
	BYTE            byFrameEnable;  //????㊣??辰0-??????1-????㊣??辰
	BYTE            byRes[256];     //㊣???
}NET_DVR_FRAME_CFG, *LPNET_DVR_FRAME_CFG;

//????????㊣??辰????
typedef struct tagNET_DVR_FRAME_COND
{
	DWORD           dwSize;
	DWORD           dwPicNo;//????㊣角??
	BYTE            byRes[256];
}NET_DVR_FRAME_COND, *LPNET_DVR_FRAME_COND;

//????????????
typedef struct tagNET_DVR_AUDIO_EFFECTIVE_CFG
{
	DWORD       dwSize;          //?芍?????車??
	DWORD       dwCheckDelay;    //?足???㊣????????s??0㊣赤????℅???????
	BYTE        byThreshold;     //????[0,100]
	BYTE        byVolumePercent;//???? [0,100]
	BYTE        byPriority;     //??????[0??100]
	BYTE        byRes[301];
}NET_DVR_AUDIO_EFFECTIVE_CFG, *LPNET_DVR_AUDIO_EFFECTIVE_CFG;

//????????????
typedef struct tagNET_DVR_RECORD_VIDEO_CFG
{
	DWORD       dwSize;              //?芍?????車??
	BYTE        byExportType;         //????0-MP4 1-AVI
	BYTE        byRes[255];          //㊣???℅??? 
} NET_DVR_RECORD_VIDEO_CFG, *LPNET_DVR_RECORD_VIDEO_CFG;

//RTMP Cond
typedef struct tagNET_DVR_RTMP_COND
{
	DWORD            dwSize;
	DWORD            dwChannel;
	BYTE             byStreamType;  //???‾?角????1-?‾???‾??2-℅????‾??3-???‾??
	BYTE             byRes[303];
}NET_DVR_RTMP_COND, *LPNET_DVR_RTMP_COND;

//RTMP Cfg
typedef struct tagNET_DVR_RTMP_CFG
{
	DWORD       dwSize;                          //?芍?????車??
	BYTE        byEnable;                        //??﹞?????RTMP??0-????????1-????
	BYTE         byRes1[3];
	DWORD       dwPacketLen;                     //RTMP∼邦?∟
	char        szURL[RTMP_URL_LEN];            //RTMP URL
	BYTE         byRes[256];                      //㊣???℅??? 
}NET_DVR_RTMP_CFG, *LPNET_DVR_RTMP_CFG;

//????﹞???
typedef  struct  tagNET_DVR_RECORDING_PUBLISH_FILE_CFG
{
	DWORD   dwSize;                         //?芍?????車??
	BYTE    byFileID[MAX_ID_LEN_128/*128*/];  //﹞???????ID
	NET_DVR_TIME_EX  struStartTime;  //?????????㊣??
	NET_DVR_TIME_EX  struEndTime;   //?????芍???㊣??
	BYTE    byCmdType;  //﹞????邦???角??  1--????﹞??? 2--????﹞???
	BYTE    byFileType;  //﹞????????角??  0??㊣??? 1???“?㊣???? 2??????????
	BYTE   byRes[254];
}NET_DVR_RECORDING_PUBLISH_FILE_CFG, *LPNET_DVR_RECORDING_PUBLISH_FILE_CFG;

//????﹞???????????
typedef struct tagNET_DVR_PUBLISH_PROGRESS_COND
{
	DWORD            dwSize;
	DWORD            dwChannel;
	BYTE             byFileID[MAX_ID_LEN_128/*128*/];  //﹞???????ID
	BYTE             byRes[256];
}NET_DVR_PUBLISH_PROGRESS_COND, *LPNET_DVR_PUBLISH_PROGRESS_COND;

//????﹞???????????
typedef struct tagNET_DVR_PUBLISH_PROGRESS_CFG
{
	DWORD    dwSize;          //?芍?????車??
	BYTE     byPublishPercent;     //﹞???∼?﹞?㊣? 0-100
	BYTE     byPublishStatus;     //﹞???℅???  0-﹞??????? 1--????﹞??? 2--????﹞??? 3-??????FTP  4--?????????????? 5--﹞????∫∼??“?????赤?車??
	BYTE     byRes[302];
}NET_DVR_PUBLISH_PROGRESS_CFG, *LPNET_DVR_PUBLISH_PROGRESS_CFG;

//??????????????????
typedef  struct  tagNET_DVR_BACKGROUND_PIC_COND
{
	DWORD    dwSize;
	char     szFileID[MAX_ID_LEN_128/*128*/];        //???????車???豕㊣?﹞?????????ID, ??㊣??∼??????
	BYTE     byRes[256];
}NET_DVR_BACKGROUND_PIC_COND, *LPNET_DVR_BACKGROUND_PIC_COND;

//?谷??㊣??∼????????
typedef struct tagNET_DVR_BACKGROUND_PIC_CFG
{
	DWORD    dwSize;                         //?芍?????車??
	DWORD     dwPicSize;  //㊣??∼?????車??
	DWORD     dwPicType;   //?????角????YUV:0 JPEG:1
	WORD     wPicWidth;   //?????赤
	WORD     wPicHeight;    //??????
	BYTE          byPicName[MAX_PIC_NAME_LEN/*128*/];   //????????
	BYTE         byRes[128];
}NET_DVR_BACKGROUND_PIC_CFG, *LPNET_DVR_BACKGROUND_PIC_CFG;

typedef struct tagNET_DVR_BACKGROUND_PIC_INFO
{
	DWORD   dwSize;                              //?芍?????車??
	BYTE    byEnable;             //??﹞?????㊣??∼??????????0-﹞???1-??
	BYTE    byRes1[3];
	BYTE    byPicID[MAX_ID_LEN_128/*128*/];
	BYTE    byRes[300];         //㊣???
}NET_DVR_BACKGROUND_PIC_INFO, *LPNET_DVR_BACKGROUND_PIC_INFO;


//????㊣??∼????????
typedef struct tagNET_DVR_BACKGROUND_PIC_PRARAM
{
	DWORD       dwSize;
	DWORD        dwChannel; //?????“??
	DWORD        dwPicSize;  //㊣??∼?????車??
	WORD        wPicWidth;   //?????赤
	WORD           wPicHeight;    //??????
	char          szPicName[MAX_PIC_NAME_LEN/*128*/];   //????????
	BYTE        byPicType;   //?????角????YUV:0 JPEG:1
	BYTE        byRes[303];
}NET_DVR_BACKGROUND_PIC_PRARAM, *LPNET_DVR_BACKGROUND_PIC_PRARAM;

//??????????
typedef    struct tagNET_DVR_LOWPOWER
{
	DWORD        dwSize;//?芍?????車??
	BYTE          byMode;//?????????? 0-??????1-?“?㊣
	BYTE        byEnabled;//???????????????????? 0-??㊣???1-????
	BYTE        byRes[6];
	NET_DVR_SCHEDULE_DAYTIME  struSchedTime;//?“?㊣?㊣????    
	BYTE        byRes1[256];
}NET_DVR_LOWPOWER, *LPNET_DVR_LOWPOWER;

typedef struct tagNET_DVR_POINT
{
	DWORD dwX;    //X?芍℅?㊣那
	DWORD dwY;    //Y℅?㊣那
}NET_DVR_POINT, *LPNET_DVR_POINT;

//㊣?㊣?????????
typedef    struct tagNET_DVR_ZOOMLINKAGE
{
	DWORD        dwSize;//?芍?????車??
	BYTE          byEnable;//???? 0-????1-??
	BYTE       byRes[255];
}NET_DVR_ZOOMLINKAGE, *LPNET_DVR_ZOOMLINKAGE;

typedef struct tagNET_DVR_ONLINEUPGRADE_STATUS
{
	DWORD   dwSize;
	BYTE    byUpgradeStatus;//0-??????????,1-????????,2-????????,3-∼邦??????????,4-??falsh?∫∼?,5-∼邦?角????????,6-∼邦∼?㊣???????,7-??????????,8-????﹞????‾???赤,
							//9-????????∼邦???????赤,10-????????????????,11-???????????赤,12-?豕㊣???????℅?,0xff-?????赤?車
	BYTE    byProgress; //????????,0~100
	BYTE    byRes[250];
}NET_DVR_ONLINEUPGRADE_STATUS, *LPNET_DVR_ONLINEUPGRADE_STATUS;

typedef    struct tagNET_DVR_FIRMWARECODE_COND
{
	DWORD  dwSize;
	DWORD  dwStartIndex;    //?????‾????
	DWORD  dwMaxNum;    //????℅??車??????32
	BYTE   byRes[52];
}NET_DVR_FIRMWARECODE_COND, *LPNET_DVR_FIRMWARECODE_COND;

typedef    struct    tagNET_DVR_FIRMWARECODE
{
	WORD  wIndex;
	WORD  wCodeLen;    //??㊣????∟??????????????﹞????㊣?辰℅???????????????㊣?℅????車??128????㊣“?赤???芍?????∫?邦???∟??/???∫??∼?㊣?
	BYTE  byCode[MAX_IDCODE_LEN];//??㊣???
	BYTE  byVersion[MAX_VERSIIN_LEN];//∼?㊣?
	BYTE  byRes[12];
}NET_DVR_FIRMWARECODE, *LPNET_DVR_FIRMWARECODE;

typedef    struct    tagNET_DVR_FIRMWARECODE_LIST
{
	DWORD  dwSize;
	DWORD  dwValidCodeNum;    //???∫????
	NET_DVR_FIRMWARECODE  struCode[MAX_IDCODE_NUM];
	BYTE   byRes[64];
}NET_DVR_FIRMWARECODE_LIST, *LPNET_DVR_FIRMWARECODE_LIST;

typedef struct tagNET_DVR_ONLINEUPGRADE_SERVER
{
	DWORD  dwSize;
	BYTE   byConnectStatus;    //0-??????,1-??????
	BYTE   byRes[1019];
}NET_DVR_ONLINEUPGRADE_SERVER, *LPNET_DVR_ONLINEUPGRADE_SERVER;

typedef struct tagNET_DVR_ONLINEUPGRADE_VERSION_COND
{
	DWORD  dwSize;
	BYTE   byCheckFromSvr; //??﹞??豕????﹞????‾?足????0-???豕??????﹞????豕㊣????????足?谷???芍??;1-?豕?????豕㊣??芍???㊣????﹞????‾?足????﹞?????∼?㊣?
	BYTE   byRes[59];
}NET_DVR_ONLINEUPGRADE_VERSION_COND, *LPNET_DVR_ONLINEUPGRADE_VERSION_COND;

typedef struct tagNET_DVR_ONLINEUPGRADE_VERSION_RET
{
	DWORD  dwSize;
	BYTE   byNewVersionAvailable;  //??﹞?????∼?㊣?,0-﹞?,1-??
	BYTE   byNewVersion[MAX_VERSIIN_LEN];  //??∼?㊣???∼?㊣???
	BYTE   byChangeLog[SDK_LEN_2048];  //??∼?㊣??邦????????
	BYTE   byRes[971];
}NET_DVR_ONLINEUPGRADE_VERSION_RET, *LPNET_DVR_ONLINEUPGRADE_VERSION_RET;

typedef struct tagNET_DVR_RECOMMEN_VERSION_COND
{
	DWORD  dwSize;
	BYTE   byFirmwareCode[MAX_IDCODE_LEN];
	BYTE   byFirmwareVersion[MAX_VERSIIN_LEN];
	BYTE   byRes[60];
}NET_DVR_RECOMMEN_VERSION_COND, *LPNET_DVR_RECOMMEN_VERSION_COND;

typedef struct tagNET_DVR_RECOMMEN_VERSION_RET
{
	DWORD  dwSize;
	BYTE   byRecommenUpgrade;  //????????,0-﹞?,1-??
	BYTE   byRes[123];
}NET_DVR_RECOMMEN_VERSION_RET, *LPNET_DVR_RECOMMEN_VERSION_RET;

//??????????
typedef    struct tagNET_DVR_THSCREEN
{
	DWORD  dwSize;//?芍?????車??
	BYTE   byEnable;//?????“?㊣????
	BYTE   byTHOSDDisplay;//??????????OSD??????﹞?????,  0-﹞???1-??
	BYTE   byRes[2]; // ㊣???℅???
	NET_VCA_POINT   struTHOSDPoint;//??????????OSD????℅車????℅?㊣那
	BYTE   byTimingMode;//???㊣???? 0-??????1-℅???
	BYTE   byRes1;
	WORD   wInterval;//???㊣?“?㊣?????????????㊣???豕??[1,10080]m
	BYTE   byRes2[254];
}NET_DVR_THSCREEN, *LPNET_DVR_THSCREEN;

typedef    struct tagNET_DVR_SENSOR_ADJUSTMENT
{
	DWORD        dwSize;//?芍?????車??
	BYTE     byType;//?‾????????0-??????1-℅車????2-??℅???3-????????????4-RGB?‾??
	BYTE     bySensorNo;//Sensor ??[1,8]
	BYTE     byRes[2];
	int     iAdjustMentRange;//?‾??﹞迄?? [-100,100] ??℅????㊣?辰[-30,30] ??????????[-10,10]
	BYTE     byR;//RGB??????R?“?足??????﹞??∫0-100
	BYTE     byG;//RGB??????G?“????????﹞??∫0-100
	BYTE     byB;//RGB??????B?“????????﹞??∫0-100
	BYTE     byRgbType;//RGB?角????0-㊣?????1-?迆????????2-????????
	BYTE     byBrightness;//??????﹞??∫0-100,??????50
	BYTE     byRes1[123];
}NET_DVR_SENSOR_ADJUSTMENT, *LPNET_DVR_SENSOR_ADJUSTMENT;

typedef    struct tagNET_DVR_SENSOR_ADJUSTMENT_INFO
{
	DWORD        dwSize;//?芍?????車??
	int      iPan;//℅車????
	int      iTilt;//??????
	int      iRotation;//??℅???
	int      iFieldAngle;//????????????
	BYTE     byR;//RGB??????R?“?足??????﹞??∫0-100
	BYTE     byG;//RGB??????G?“????????﹞??∫0-100
	BYTE     byB;//RGB??????B?“????????﹞??∫0-100
	BYTE     byRgbType;//RGB?角????0-㊣?????1-?迆????????2-????????
	BYTE     byBrightness;//??????﹞??∫0-100,??????50
	BYTE     byRes[123];
}NET_DVR_SENSOR_ADJUSTMENT_INFO, *LPNET_DVR_SENSOR_ADJUSTMENT_INFO;

typedef    struct tagNET_DVR_SENSOR_RESET
{
	DWORD        dwSize;//?芍?????車??
	BYTE     bySensorNo;//Sensor??[1,8];?㊣Sensor No??0???㊣?辰??㊣赤?????????????????谷????㊣赤??????????
	BYTE     byRes[127];
}NET_DVR_SENSOR_RESET, *LPNET_DVR_SENSOR_RESET;

typedef    struct tagNET_DVR_PANORAMAIMAGE
{
	DWORD        dwSize;//?芍?????車??
	BYTE     byFusionMode;//??????0-??????????1-???∼????
	BYTE     byPreviewMode;//??????1-??㊣那?迆℅???2-???“????
	BYTE     byRes[126];
}NET_DVR_PANORAMAIMAGE, *LPNET_DVR_PANORAMAIMAGE;

typedef struct tagNET_DVR_RELOCATE_INFO
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byTakeOverAddr[MAX_DOMAIN_NAME/*64*/];     //?????豕㊣??????﹞ 
	WORD        wPort;                 //?豕㊣???????
	BYTE        byRes[254];            //㊣???
}NET_DVR_RELOCATE_INFO, *LPNET_DVR_RELOCATE_INFO;

typedef struct tagNET_DVR_CONFERENCE_REGION
{
	DWORD dwSize;
	BYTE byEnabled;        //??﹞??????芍?谷???辰??0-﹞???1-??
	BYTE byRes1[3];
	NET_DVR_POINT struRegion[RECT_POINT_NUM];    //?芍?谷???辰????????????????℅車?????????㊣??﹞??辰
	DWORD dwOutputWidth;    //?????????迄℅??赤??????????
	DWORD dwOutputHeight;    //?????????迄℅?????????????
	BYTE byRes2[32];
}NET_DVR_CONFERENCE_REGION, *LPNET_DVR_CONFERENCE_REGION;

typedef struct tagNET_DVR_TERMINAL_CALL_CFG
{
	DWORD dwSize;
	BYTE  byAnswerType; //?芍?谷?????足??﹞?????1-℅?????????2-℅?????????3-????????
	BYTE  byProtocolType;    //?????????谷?角????1-SIP??2-H232
	BYTE byTransmissionProtocol; //???????谷?角????0-???∫??1-TCP??2-UDP
	BYTE byRes[29];
}NET_DVR_TERMINAL_CALL_CFG, *LPNET_DVR_TERMINAL_CALL_CFG;

typedef struct tagNET_DVR_TERMINAL_CALL_INFO
{
	BYTE byTermianlURL[MAX_URL_LEN];
	DWORD dwCallRate;//??????????﹞??∫????32~6144??????Kbps  (????????)
	BYTE  byRes[124];
}NET_DVR_TERMINAL_CALL_INFO, *LPNET_DVR_TERMINAL_CALL_INFO;

typedef struct tagNET_DVR_TERMINAL_AUDIO_CTRL
{
	BYTE byMute;     //??﹞???????0-﹞???1-??
	BYTE byVolume;   //??????﹞??????㊣???∫??1-100
	BYTE byAudioInputDisabled;  //??????????????0-???赤??????????1-????????????
	BYTE byAudioInputVolume;    //?????????????????赤?????????㊣???∫??1-100
	BYTE byRes[636];
}NET_DVR_TERMINAL_AUDIO_CTRL, *LPNET_DVR_TERMINAL_AUDIO_CTRL;

typedef struct tagNET_DVR_HOWLING_SUPPRESSION
{
	BYTE    byEnabled;  //??﹞?????????????
	BYTE    byHsSensibility;    //?????????谷????
	BYTE    byHsMode;   //??????????????0-??????1-??????2-?足??
	BYTE    byRes1;
	DWORD dwHsTime; //?????????㊣??????????ms
	BYTE    byRes2[16];
}NET_DVR_HOWLING_SUPPRESSION, *LPNET_DVR_HOWLING_SUPPRESSION;

typedef struct tagNET_DVR_TERMINAL_INPUT_AUDIO
{
	DWORD dwChannel; //?“????
	BYTE   byGainType; //?????角????1-??℅???????2-????????,3-????
	BYTE   byEnableSimulate; //??﹞???????????????0-﹞???1-??
	BYTE   byVolumeSimulate;  //???????????????㊣???∫??1-100
	BYTE   byEnableDigital; //??﹞???????℅???????0-﹞???1-??
	BYTE   byVolumeDigital;  //??℅????????????㊣???∫??1-100
	BYTE   byRes1[3];
	NET_DVR_HOWLING_SUPPRESSION struHsParam;    //????????????
	BYTE   byRes[604];
}NET_DVR_TERMINAL_INPUT_AUDIO, *LPNET_DVR_TERMINAL_INPUT_AUDIO;


typedef union tagNET_DVR_TERMINAL_DETAIL_CTRL_PARAM
{
	BYTE byRes[640];
	NET_DVR_TERMINAL_CALL_INFO struCallInfo;
	NET_DVR_TERMINAL_AUDIO_CTRL struAudioCtrl;
	NET_DVR_TERMINAL_INPUT_AUDIO struInputAudio;
}NET_DVR_TERMINAL_DETAIL_CTRL_PARAM, *LPNET_DVR_TERMINAL_DETAIL_CTRL_PARAM;

typedef struct tagNET_DVR_TERMINAL_CTRL_PARAM
{
	DWORD dwSize;
	BYTE byOperateType;    //??℅‾?角????1-??????2-??????3-??????4-?????‾????5-??????6-???‾????7-???‾??
	BYTE byRes1[3];
	NET_DVR_TERMINAL_DETAIL_CTRL_PARAM struCtrlParam;   //????????????
	BYTE byRes2[32];
}NET_DVR_TERMINAL_CTRL_PARAM, *LPNET_DVR_TERMINAL_CTRL_PARAM;

typedef struct tagNET_DVR_POS_INFO_OVERLAY
{
	DWORD   dwSize;
	BYTE    byPosInfoOverlayEnable;// Pos???????‾??????????0-????????1-????
	BYTE    byOverlayType;//0-????????????????1-????????????????PASS??ID??????
	BYTE    byRes[126];
}NET_DVR_POS_INFO_OVERLAY, *LPNET_DVR_POS_INFO_OVERLAY;


typedef struct tagNET_DVR_CAMERA_WORK_MODE
{
	DWORD dwSize;
	BYTE  byWorkMode;//?∟℅‾??????0-??????????1-?∟?∫㊣那?“????
	BYTE  byPreviewImageMode;//?∟????????????0-℅車????????1-??????????2-℅車??????????
	BYTE byRes[126];
}NET_DVR_CAMERA_WORK_MODE, *LPNET_DVR_CAMERA_WORK_MODE;

typedef struct tagNET_DVR_VCA_VERSION_LIST
{
	DWORD    dwSize;        //?芍?????∟??
	NET_DVR_VCA_VERSION  struVcaVersion[NET_SDK_VERSION_LIST_LEN/*64*/];//??﹞“??∼?㊣?????
	BYTE    byRes[128];
}NET_DVR_VCA_VERSION_LIST, *LPNET_DVR_VCA_VERSION_LIST;

typedef struct tagNET_DVR_SETUP_CALIB_COND
{
	DWORD dwSize;
	BYTE  byCalibrateType;//㊣那?“?角????0-??????㊣那?“??1-℅???㊣那?“??2-????㊣那?“,3-????㊣那?“
	BYTE  byRes1[3];
	float fTiltAngle;//??????,????????????????????????0????????﹞??∫??0-180??,?㊣byCalibrateType??2?㊣???∫
	float fHeelAngle;//???㊣??,?????????????㊣??????????0?????㊣??﹞??∫??-90-90??,?㊣byCalibrateType??2?㊣???∫
	float fHeight;//???????????????????℅????????????300???℅??????﹞??∫??200-500???℅,?㊣byCalibrateType??2?㊣???∫
	NET_VCA_POLYGON struAutoCalibPolygon;//℅???㊣那?“???辰???㊣byCalibrateType??1?㊣???∫
	BYTE byIntelligentType;//㊣那?“???????角????0-㊣????? 1-???‾??2-??????????3-????﹞???????????㊣那?“???‾?㊣NET_DVR_SETUP_CALIB_RESULT﹞??????????????∫
	BYTE byRes[127];
}NET_DVR_SETUP_CALIB_COND, *LPNET_DVR_SETUP_CALIB_COND;

typedef struct tagNET_DVR_SETUP_CALIB_RESULT
{
	DWORD dwSize;
	BYTE  byCalibrateType;//㊣那?“?角????0-??????㊣那?“??1-℅???㊣那?“??2-????㊣那?“,3-????㊣那?“
	BYTE  byRes1[3];
	float fTiltAngle;//??????,????????????????????????0????????﹞??∫??0-180??,?㊣byCalibrateType??2?㊣???∫
	float fHeelAngle;//???㊣??,?????????????㊣??????????0?????㊣??﹞??∫??-90-90??,?㊣byCalibrateType??2?㊣???∫
	float fHeight;//???????????????????℅????????????300???℅??????﹞??∫??200-500???℅,?㊣byCalibrateType??2?㊣???∫
	NET_VCA_POLYGON struCountPolygon;//???????辰
	NET_DVR_PDC_ENTER_DIRECTION  struEnterDirection; // ?‾??????﹞??辰
	NET_VCA_LINE  struLine;//?足????
	BYTE byRes[128];
}NET_DVR_SETUP_CALIB_RESULT, *LPNET_DVR_SETUP_CALIB_RESULT;

typedef struct tagNET_DVR_CALL_QUERY_COND
{
	DWORD dwSize;
	BYTE bySearchID[MAX_SEARCH_ID_LEN]; //???‾㊣那??﹞?
	NET_DVR_TIME struStartTime; //???‾?????㊣??
	NET_DVR_TIME struEndTime;   //???‾?芍???㊣??
	BYTE byCallType;    //?????角????1-??????2-??????3-??????4-?迄???角??
	BYTE byRes1[3];
	DWORD dwMaxResults; //㊣????谷??℅??角﹞???????
	DWORD dwSearchPos;  //?谷???????‾??
	BYTE byRes2[32];
}NET_DVR_CALL_QUERY_COND, *LPNET_DVR_CALL_QUERY_COND;

typedef struct tagNET_DVR_CALL_QUERY_SINGLE
{
	DWORD dwSize;
	BYTE byCallType;    //?????角????1-??????2-??????3-????
	BYTE byRes1[3];
	BYTE byTerminalName[TERMINAL_NAME_LEN]; //??????
	BYTE byAddressURL[MAX_URL_LEN]; //????URL???﹞
	NET_DVR_TIME struStartTime; //?????????㊣??
	NET_DVR_TIME struEndTime;   //?????芍???㊣??
	BYTE byRes2[32];
}NET_DVR_CALL_QUERY_SINGLE, *LPNET_DVR_CALL_QUERY_SINGLE;


typedef enum tagCALL_QUERY_RESULT_STATUS
{
	CALL_QUERY_RESULT_OK = 0,     //?????谷???迄??
	CALL_QUERY_RESULT_FAIL,       //?谷???∫∼????????赤?車
	CALL_QUERY_RESULT_MORE,     //?????谷?? ?????邦?角????﹞???
	CALL_QUERY_RESULT_NOMATCH,  //?????谷??????????
	CALL_QUERY_RESULT_PARAMERROR,  //?谷???????????赤?車
	CALL_QUERY_RESULT_INVALIDTIME,   //?谷???????㊣?????∫
	CALL_QUERY_RESULT_TIMEOUT,   //?谷?????㊣
}CALL_QUERY_RESULT_STATUS;

typedef struct tagNET_DVR_CALL_QUERY_RESULT
{
	DWORD dwSize;
	BYTE bySearchID[MAX_SEARCH_ID_LEN]; //???‾㊣那??﹞?
	BYTE   byStatus;  //?谷??℅???  ????CALL_QUERY_RESULT_STATUS?芍????
	BYTE   byRes[3];  //㊣??? 
	DWORD dwCount; //?????谷???????芍??????
	BYTE *pResults; //?芍????????dwCount??NET_DVR_CALL_QUERY_SINGLE,?豕???‾?????∟??﹞?????????
	BYTE byRes2[32];
}NET_DVR_CALL_QUERY_RESULT, *LPNET_DVR_CALL_QUERY_RESULT;

typedef struct tagNET_DVR_CONFERENCE_CALL_INFO
{
	BYTE byConferenceID[MAX_ID_LEN]; //?芍?谷ID
	BYTE byConferenceName[NAME_LEN];    //?芍?谷????     
	NET_DVR_TIME struStartTime;        //?芍?谷?????㊣??
	NET_DVR_TIME struEndTime;        //?芍?谷?芍???㊣??
	BYTE byRes[512];
}NET_DVR_CONFERENCE_CALL_INFO, *LPNET_DVR_CONFERENCE_CALL_INFO;

typedef union tagNET_DVR_CALL_INFO
{
	BYTE byRes[640];
	NET_DVR_TERMINAL_CALL_INFO struTerminalCallInfo;  //??????????????????
	NET_DVR_CONFERENCE_CALL_INFO struConferenceCallInfo;  //?芍?谷????????
}NET_DVR_CALL_INFO, *LPNET_DVR_CALL_INFO;

typedef struct tagNET_DVR_CONFERENCE_CALL_ALARM
{
	DWORD dwSize;
	BYTE  byAlarmType;              //㊣“???角????1-?芍?谷?????? 2-????℅?????????3-?????芍??
	BYTE  byCallType;               //?????角????㊣“???角????1?㊣???∫??1-????????????????2-?芍?谷????
	BYTE  byAutoAnswer;                //??﹞???℅?????????0-﹞???1-??
	BYTE  byCallStatusSwitch;       //????℅????????角?????㊣㊣“???角????2?㊣???∫??1-??????????2-??????????3-?????芍????4-????????
	NET_DVR_CALL_INFO struCallInfo; //????????
	BYTE  byRes2[32];
}NET_DVR_CONFERENCE_CALL_ALARM, *LPNET_DVR_CONFERENCE_CALL_ALARM;

typedef struct tagNET_DVR_TERMINAL_INPUT_CFG
{
	DWORD dwSize;
	DWORD dwInputNo;    //℅‾???????芍?谷????????????㊣角??
	BYTE  byStreamType;//???‾?角????0-?‾???‾??1-℅????‾??2-?????‾
	BYTE  byRes[31];
}NET_DVR_TERMINAL_INPUT_CFG, *LPNET_DVR_TERMINAL_INPUT_CFG;

typedef struct tagNET_DVR_AUDIO_STATUS
{
	BYTE byMute;    //??﹞???????0-﹞???1-??
	BYTE byVolume;  //?芍?谷??????1-100??﹞??????㊣???∫
	BYTE byAudioInputDisabled;  //??????????????0-﹞???1-??
	BYTE byAudioInputVolume; //??????????????1-100?????赤?????????㊣???∫
	BYTE byRes[32];
}NET_DVR_AUDIO_STATUS, *LPNET_DVR_AUDIO_STATUS;

typedef struct tagNET_DVR_TERMINAL_CONFERENCE_STATUS
{
	DWORD dwSize;
	BYTE byConferenceState; //?芍?谷℅?????0-??????1-?????“?芍?谷??????2-????????3-㊣???????
	BYTE byConferenceType;  //?芍?谷?角????1-????????2-MCU﹞????芍?谷
	BYTE byDualStreamEnabled;    //??﹞????????‾??0-????????1-????
	BYTE byMicPowerEnabled;    //?車??﹞???????﹞???????0-????????1-????
	DWORD dwInputNo;   //??????????????????
	NET_DVR_CALL_INFO struCallInfo; //?芍?谷????
	NET_DVR_AUDIO_STATUS struAudioStatus;   //?????角??℅???
	BYTE byRes2[32];
}NET_DVR_TERMINAL_CONFERENCE_STATUS, *LPNET_DVR_TERMINAL_CONFERENCE_STATUS;

//????℅??芍GK????
typedef struct tagNET_DVR_TERMINAL_GK_CFG
{
	DWORD dwSize;
	BYTE  byEnable; //??﹞?????
	BYTE  byRegisterState;    //℅??芍℅?????0-??℅??芍??1-??℅??芍??????
	BYTE  byRes1[2];
	NET_DVR_IPADDR struGKIP; //GK IP
	WORD wGKPort; //GK??????
	BYTE byRes2[2];
	BYTE byRegisterName[REGISTER_NAME_LEN]; //????℅??芍??GK????℅?
	BYTE byPassword[PASSWD_LEN];    //????℅??芍??GK??????
	BYTE byRes3[16];
}NET_DVR_TERMINAL_GK_CFG, *LPNET_DVR_TERMINAL_GK_CFG;

//?????‾????????????
typedef struct tagNET_DVR_WIN_ROAM_SWITCH_CFG
{
	DWORD dwSize;
	BYTE  byEnableRoam;    //??﹞????赤?∼????????0-﹞???﹞?0-??
	BYTE  byRes[31];
}NET_DVR_WIN_ROAM_SWITCH_CFG, *LPNET_DVR_WIN_ROAM_SWITCH_CFG;

typedef struct tagNET_DVR_LED_OUTPUT_CFG
{
	DWORD dwSize;
	BYTE byEnableZoom;  //??﹞???﹞???0-﹞???1-??
	BYTE byAutoCutBlackEdge;  //??﹞?℅?????????㊣???0-﹞???1-??
	BYTE byRes1[2];
	WORD wLEDWidth;     //﹞?㊣????赤
	WORD wLEDHeight;    //﹞?㊣?????
	DWORD dwRefreshRate;    //????????
	DWORD dwInputNO;    //???????????“????
	BYTE byRes2[32];
}NET_DVR_LED_OUTPUT_CFG, *LPNET_DVR_LED_OUTPUT_CFG;

typedef struct tagNET_DVR_LED_OUTPUT_PORT_CFG
{
	DWORD dwSize;
	BYTE  byEnabled;    //??﹞???????0-﹞???1-??
	BYTE  byRes1[3];
	DWORD dwPortNum;    //∼邦????????????
	DWORD dwPortNo[MAX_OUTPUT_PORT_NUM];     //∼邦??????????
	BYTE  byRes2[64];
}NET_DVR_LED_OUTPUT_PORT_CFG, *LPNET_DVR_LED_OUTPUT_PORT_CFG;

typedef struct tagNET_DVR_LINE_COLUMN_INFO
{
	WORD wLine;   //????
	WORD wColumn; //????
}NET_DVR_LINE_COLUMN_INFO, *LPNET_DVR_LINE_COLUMN_INFO;

typedef struct tagNET_DVR_LED_DISPLAY_AREA
{
	DWORD dwSize;
	NET_DVR_LINE_COLUMN_INFO struLCInfo;  //???????辰??????????(?????“??????)
	WORD    wWidth;     //?芍?辰?????“??
	WORD    wHeight;    //?迆?辰?????“??
	WORD     wRecvCardWidth;   //?????“?赤???車??????0?辰???????????????????“?車??????
	WORD    wRecvCardHeigt;   //?????“?????車??????0?辰???????????????????“?車??????
	BYTE    byRes[32];
}NET_DVR_LED_DISPLAY_AREA, *LPNET_DVR_LED_DISPLAY_AREA;

typedef struct tagNET_DVR_LED_RECV_CARD_INFO
{
	NET_DVR_LINE_COLUMN_INFO struPos; //?????“????
	WORD wRecvCardWidth;   //?????“?赤???車??
	WORD wRecvCardHeigt;   //?????“?????車??
}NET_DVR_LED_RECV_CARD_INFO, *LPNET_DVR_LED_RECV_CARD_INFO;

typedef struct tagNET_DVR_LED_PORT_BACKUP
{
	BYTE byEnabled;    //??﹞?????????㊣?﹞???0-﹞???1-??
	BYTE byPortMode; //??????????1-?‾????2-㊣?﹞???
	BYTE byRes1[2];
	DWORD dwPairPort; //?????????????㊣???????‾???㊣??????????㊣?﹞????????????㊣??????㊣?﹞????㊣???????????‾????????
	BYTE byRes2[16];
}NET_DVR_LED_PORT_BACKUP, *LPNET_DVR_LED_PORT_BACKUP;

typedef struct tagNET_DVR_LED_PORT_CFG
{
	DWORD dwSize;
	BYTE byEnabled; //??﹞?????????????0-﹞???1-??
	BYTE byRes1[3];
	NET_DVR_LED_PORT_BACKUP struLedPortBackup;    //????㊣?﹞?????
	DWORD dwRecvCardNum;   //㊣????????????????“??
	NET_DVR_LED_RECV_CARD_INFO struRecvCard[MAX_SINGLE_PORT_RECVCARD_NUM];   //?‾?????“??????
	DWORD dwPortNo; //?????????????迄???????????㊣???∫
	BYTE byRes2[64];
}NET_DVR_LED_PORT_CFG, *LPNET_DVR_LED_PORT_CFG;

typedef struct tagNET_DVR_LED_DISPLAY_CFG
{
	DWORD dwSize;
	NET_DVR_COLOR_TEMPERATURE_CFG struColorTemp;    //????????
	NET_DVR_VIDEO_OUT_CFG struVoutCfg;        //?????∫??????
	BYTE byRes[32];
}NET_DVR_LED_DISPLAY_CFG, *LPNET_DVR_LED_DISPLAY_CFG;

typedef struct tagNET_DVR_LED_TEST_SIGNAL_CFG
{
	DWORD dwSize;
	BYTE byEnabled;        //??﹞???????????????0-????????1-????
	BYTE bySignalType;    //?????????角????1-??????2-?“????3-??℅???????4-﹞?????5-?????????㊣???℅????????6-??????0xff-℅??“??????
	BYTE byRes1[2];
	NET_DVR_RGB_COLOR struSignalColor;    //???????????????????????角????0xff?㊣???∫
	BYTE byRes[32];
}NET_DVR_LED_TEST_SIGNAL_CFG, *LPNET_DVR_LED_TEST_SIGNAL_CFG;

typedef struct tagNET_DVR_LED_NOSIGNAL_CFG
{
	DWORD dwSize;
	BYTE byNoSignalMode;    //????????????????1-??????2-?????∫??LOGO??3-????℅??“??????
	BYTE byRes[63];
}NET_DVR_LED_NOSIGNAL_CFG, *LPNET_DVR_LED_NOSIGNAL_CFG;

typedef struct tagNET_DVR_LED_INPUT_CFG
{
	DWORD dwSize;
	DWORD dwResolutionWidth;    //????﹞?㊣????赤??????
	DWORD dwResolutionHeight;    //????﹞?㊣???????????
	DWORD dwRefreshRate;        //??????????????????????
	NET_DVR_SCREEN_VGA_CFG struVgaCfg;    //VGA?????‾????????VGA?????㊣???‾
	BYTE  byRes[32];
}NET_DVR_LED_INPUT_CFG, *LPNET_DVR_LED_INPUT_CFG;

typedef struct tagNET_DVR_LED_RECV_CARD_CFG_COND
{
	DWORD dwSize;
	DWORD dwOutputNo;    //????㊣角??
	NET_DVR_LINE_COLUMN_INFO struPosStart; //?????“????????
	NET_DVR_LINE_COLUMN_INFO struPosEnd;   //?????“?芍??????
	BYTE byRes[32];
}NET_DVR_LED_RECV_CARD_CFG_COND, *LPNET_DVR_LED_RECV_CARD_CFG_COND;

typedef struct tagNET_DVR_LED_GAMMA_CFG_COND
{
	DWORD dwSize;
	DWORD dwOutputNo;    //????㊣角??;
	NET_DVR_LINE_COLUMN_INFO struPosStart; //?????“????????
	NET_DVR_LINE_COLUMN_INFO struPosEnd; //?????“?芍??????
	BYTE byGammaType; //Gamma㊣赤?角????Gamma㊣赤?????㊣???∫??0-RGB?足??Gamma㊣赤??1-?足??Gamma㊣赤??2-????Gamma㊣赤??3-????Gamma㊣赤
	BYTE byRes[31];
}NET_DVR_LED_GAMMA_CFG_COND, *LPNET_DVR_LED_GAMMA_CFG_COND;

typedef struct tagNET_DVR_LED_GAMMA_CFG
{
	DWORD dwSize;
	WORD wGammaValue[MAX_GAMMA_X_VALUE];    //GAMMA㊣赤Y??????????????????0-65535??℅??“???????㊣???∫
	BYTE byGammaModel; //GAMMA㊣赤??????0-℅??“????????1-??????1??2-??????2??3-??????????4-????????1??5-????????2
	BYTE byRes[127];
}NET_DVR_LED_GAMMA_CFG, *LPNET_DVR_LED_GAMMA_CFG;

typedef struct tagNET_DVR_LED_CLOCK_CFG
{
	DWORD dwDclkRate;    //?????㊣??dclk??????????????10????????MHz????????﹞??∫1.0-31.3
	DWORD dwGclkRate;    //?????㊣??gclk??????????????10????????MHz????????﹞??∫1.0-31.3
	DWORD dwGclkCountNum;    //300ns gclk??????
	BYTE  byDclkDutyRatio;    //dclk?㊣??????㊣?????????25??50??75
	BYTE  byDclkPhase;    //dclk?角??????????0,1,2,3
	BYTE  byGclkNum;    //????1???豕???????∫gclk??????0-255
	BYTE  byRes[17];
}NET_DVR_LED_CLOCK_CFG, *LPNET_DVR_LED_CLOCK_CFG;

typedef struct tagNET_DVR_LED_RECV_CFG
{
	DWORD dwSize;
	NET_DVR_LED_CLOCK_CFG struClockCfg;    //?㊣???角??????
	BYTE byGrayLevel;    //??????????????13??14
	BYTE byRefreshRate;    //????㊣?????????1-6
	BYTE byLineScanNum;    //???“????0-255
	BYTE byRefreshCompleteGrayNum; //?????那?????℅????0-255
	DWORD dwHBlank;        //???????㊣??????????gclk?㊣????????????1-65535
	DWORD dwAfterglowCtrl;    //?角那??????芍???㊣??????????gclk?㊣????????????1-65535
	DWORD dwLineFeedTime;    //?????㊣??????????gclk?㊣????????????1-65535
	BYTE byRes[128];
}NET_DVR_LED_RECV_CFG, *LPNET_DVR_LED_RECV_CFG;

typedef struct tagNET_DVR_LED_REGISTOR_VALUE
{
	BYTE byChip1High;        //????1??℅???
	BYTE byChip1Low;        //????1??℅???
	BYTE byChip2High;        //????2??℅???
	BYTE byChip2Low;        //????2??℅???
	BYTE byChip3High;        //????3??℅???
	BYTE byChip3Low;        //????3??℅???
	BYTE byChip4High;       //????4??℅???
	BYTE byChip4Low;        //????4??℅???
	BYTE byChip5High;       //????5??℅???
	BYTE byChip5Low;        //????5??℅???
	BYTE byChip6High;       //????6??℅???
	BYTE byChip6Low;        //????6??℅???
	BYTE byRes[4];
}NET_DVR_LED_REGISTOR_VALUE, *LPNET_DVR_LED_REGISTOR_VALUE;

typedef struct tagNET_DVR_LED_RECV_REGISTOR
{
	BYTE byEliminateGhostShadowLevel;    //???赤?∼??????????0-5
	BYTE byEliminateShadowy;            //?????“??∼???????????0-15
	BYTE byGrayEqualize1;                //????????????1??0-3
	BYTE byGrayEqualize2;                //????????????2??0-15
	BYTE byEnableGrayUniformity;        //?????迄?????芍????﹞???????0-????1-??
	BYTE byDisableHGrayStripes;            //?????芍??????????﹞???????0-????1-??
	BYTE byGhostShadowEnhancedMode1;    //???赤?∼????????????1??﹞???????0-????1-??
	BYTE byGhostShadowEnhancedMode2;    //???赤?∼????????????2??﹞???????0-????1-??
	BYTE byClearBadPoint;                //??????????????0-﹞???????1-????
	BYTE byEnableSelfDefineRegistor;    //??﹞?????℅??“???????‾????0-﹞???1-??
	BYTE byRes1[2];
	NET_DVR_LED_REGISTOR_VALUE struRegistorValue;    //℅??“???????‾????    
	BYTE    byEnabledExGradientOptimition;	//??㊣???????????????0-??㊣???!0-????
	BYTE    byDummyGClockCycle;     //Dummy GClock????????????㊣??????????㊣???∫??????????gclk
	BYTE    byDummyGClockHighTime;      //Dummy GClock???????㊣??????????㊣??????????㊣???∫????????8ns
	BYTE    byFirstGClockExtendedTime;  //??????GClock???赤?㊣??????????㊣??????????㊣???∫????????8ns
	BYTE byRes[28];
}NET_DVR_LED_RECV_REGISTOR, *LPNET_DVR_LED_RECV_REGISTOR;

typedef struct tagNET_DVR_LED_RECV_ADVANCED_CFG
{
	DWORD dwSize;
	NET_DVR_LED_RECV_REGISTOR struFirstRegistor;    //????℅谷?????“??????????℅??“???????‾?????足?????????‾??
	NET_DVR_LED_RECV_REGISTOR struSecondRegistor;    //????℅谷?????“??????????℅??“???????‾???????????????‾??
	NET_DVR_LED_RECV_REGISTOR struThirdRegistor;    //????℅谷?????“??????????℅??“???????‾???????????????‾??
	BYTE byRes2[64];
}NET_DVR_LED_RECV_ADVANCED_CFG, *LPNET_DVR_LED_RECV_ADVANCED_CFG;

typedef struct tagNET_DVR_LED_CHECK_COND
{
	DWORD dwSize;
	DWORD dwOutputNo;   //????㊣角??
	NET_DVR_LINE_COLUMN_INFO struPosStart; //?????“????????
	BYTE byStartPosType; //?????????角????0-?????????“??????????1-????℅?㊣那????
	BYTE byRes1[3];
	DWORD dwXCoordinate;    /*????℅車??????????X℅?㊣那*/
	DWORD dwYCoordinate;    /*????℅車????Y℅?㊣那*/
	DWORD dwWidth;          /*???辰?赤??*/
	DWORD dwHeight;          /*???辰????*/
	BYTE  byRes[8];
}NET_DVR_LED_CHECK_COND, *LPNET_DVR_LED_CHECK_COND;

//?谷??﹞???
enum  ADDR_QUERY_TYPE
{
	QUERYSVR_BY_COUNTRYID = 0,    //∼??迆??㊣角???谷??﹞????‾???﹞
	QUERYSVR_BY_SERVERTYPE = 1, //㊣???
	QUERYDEV_BY_NICKNAME_DDNS = 2, //∼?那?????hiDDNS???谷???豕㊣?????
	QUERYDEV_BY_SERIAL_DDNS = 3,    //∼??辰??????hiDDNS???谷???豕㊣?????
	CHECKDEV_BY_NICKNAME_DDNS = 4,//∼?那?????hiDDNS?????豕㊣?????
	CHECKDEV_BY_SERIAL_DDNS = 5,    //∼??辰??????hiDDNS?????豕㊣?????
	QUERYDEV_BY_NICKNAME_IPSERVER = 6, //∼?那?????IPServer???谷???豕㊣?????
	QUERYDEV_BY_SERIAL_IPSERVER = 7    //∼?那?????IPServer???谷???豕㊣?????
};
#define    CLIENT_VERSION_LEN    64
//∼??迆??㊣角???谷?????????芍????
typedef struct tagNET_DVR_QUERY_COUNTRYID_COND
{
	WORD    wCountryID;    //?迆??㊣角??,?????那????????
	char    szSvrAddr[MAX_DOMAIN_NAME];//﹞????‾???﹞,㊣赤????????﹞????‾???谷????㊣那﹞????‾??????
	char    szClientVersion[CLIENT_VERSION_LEN];//???∫??∼?㊣?????,????:iVMS4500 V4.0.0.0 build20150112
	BYTE    byRes[382];
}NET_DVR_QUERY_COUNTRYID_COND, *LPNET_DVR_QUERY_COUNTRYID_COND;

//∼??迆??㊣角???谷????﹞????芍????
typedef struct tagNET_DVR_QUERY_COUNTRYID_RET
{
	char    szResolveSvrAddr[MAX_DOMAIN_NAME];//????﹞????‾???﹞(???豕㊣?℅??芍﹞????‾)
	char    szAlarmSvrAddr[MAX_DOMAIN_NAME];//㊣“??﹞????‾???﹞
	BYTE    byRes[1024];
}NET_DVR_QUERY_COUNTRYID_RET, *LPNET_DVR_QUERY_COUNTRYID_RET;

//∼?﹞????‾?角???谷?????????芍????
typedef struct tagNET_DVR_QUERY_SERVERTYPE_COND
{
	WORD    wSvrType;    //﹞????‾?角??, 6-???迆????﹞????‾
	char    szSvrAddr[MAX_DOMAIN_NAME];//﹞????‾???﹞,㊣赤????????﹞????‾???谷????㊣那﹞????‾??????
	char    szClientVersion[CLIENT_VERSION_LEN];//???∫??∼?㊣?????
	BYTE    byRes[382];
}NET_DVR_QUERY_SERVERTYPE_COND, *LPNET_DVR_QUERY_SERVERTYPE_COND;

//∼?﹞????‾?角???谷????﹞????芍????
typedef struct tagNET_DVR_QUERY_SERVERTYPE_RET
{
	char    szSvrAddr[MAX_DOMAIN_NAME];    //﹞????‾???﹞
	WORD    wSvrPort;    //﹞????‾????
	BYTE    byRes[446];
}NET_DVR_QUERY_SERVERTYPE_RET, *LPNET_DVR_QUERY_SERVERTYPE_RET;

//??hiDDNS???谷???辰???????????芍????
typedef struct tagNET_DVR_QUERY_DDNS_COND
{
	char    szResolveSvrAddr[MAX_DOMAIN_NAME];//????﹞????‾???﹞
	char    szDevNickName[MAX_DOMAIN_NAME];    //?豕㊣???????﹞????‾????㊣???
	char    szDevSerial[SERIALNO_LEN];    //?豕㊣??辰????
	char    szClientVersion[CLIENT_VERSION_LEN];//???∫??∼?㊣?????,????:iVMS4500 V4.0.0.0 build20150112
	BYTE    byRes[272];        //㊣???
}NET_DVR_QUERY_DDNS_COND, *LPNET_DVR_QUERY_DDNS_COND;

//??hiDDNS???谷??﹞??????芍????
typedef struct tagNET_DVR_QUERY_DDNS_RET
{
	char    szDevIP[SDK_MAX_IP_LEN];    //?豕㊣?IP???﹞
	WORD    wCmdPort;        //?????????“SDK??????????
	WORD    wHttpPort;        //http????
	BYTE    byRes[460];
}NET_DVR_QUERY_DDNS_RET, *LPNET_DVR_QUERY_DDNS_RET;

//??hiDDNS??????﹞??????芍????
typedef struct tagNET_DVR_CHECK_DDNS_RET
{
	BYTE    byDevStatus;        //?豕㊣?℅???,0-????,1-??????,2-?豕㊣???????,3-?豕㊣??????㊣?∼???辰
	BYTE    byRes1;
	NET_DVR_QUERY_DDNS_RET    struQueryRet;    //???﹞????
	WORD    wRegionID;        //?㊣?∼?豕㊣?℅??芍???辰㊣角??[1???迆,2????,3????,4???迆,5?﹞??,6???邦] 
	BYTE    byRes2[508];
}NET_DVR_CHECK_DDNS_RET, *LPNET_DVR_CHECK_DDNS_RET;

//??IPServer???谷?????????芍????
typedef struct tagNET_DVR_QUERY_IPSERVER_COND
{
	char    szResolveSvrAddr[MAX_DOMAIN_NAME];//????﹞????‾???﹞
	WORD    wResolveSvrPort;    //????﹞????‾????
	char    szDevNickName[MAX_DOMAIN_NAME];    //?豕㊣???????﹞????‾????㊣???
	char    szDevSerial[SERIALNO_LEN];    //?豕㊣??辰????
	BYTE    byRes[334];        //㊣???
}NET_DVR_QUERY_IPSERVER_COND, *LPNET_DVR_QUERY_IPSERVER_COND;

//??IPServer???谷??﹞??????芍????
typedef struct tagNET_DVR_QUERY_IPSERVER_RET
{
	char    szDevIP[SDK_MAX_IP_LEN];    //?豕㊣?IP???﹞
	WORD    wCmdPort;        //?????????“SDK??????????
	BYTE    byRes[462];
}NET_DVR_QUERY_IPSERVER_RET, *LPNET_DVR_QUERY_IPSERVER_RET;

typedef struct tagNET_DVR_CURRENT_VALID_PORT
{
	DWORD  dwSize;
	WORD   wHTTPPort;
	BYTE   byRes[122];
}NET_DVR_CURRENT_VALID_PORT, *LPNET_DVR_CURRENT_VALID_PORT;

typedef struct tagNET_DVR_AUDIO_CHANNEL
{
	DWORD  dwChannelNum;                //?“????
	BYTE   byres[32];                    //㊣???
}NET_DVR_AUDIO_CHANNEL, *LPNET_DVR_AUDIO_CHANNEL;

//???‾?????????芍??
typedef    struct tagNET_DVR_STREAMENCRYPTION_COND
{
	DWORD    dwSize;  //?芍?????車??
	DWORD   dwChan;  //?∟???“????
	BYTE    byRes[128];
}NET_DVR_STREAMENCRYPTION_COND, *LPNET_DVR_STREAMENCRYPTION_COND;

//???‾?????????芍??
typedef    struct tagNET_DVR_STREAMENCRYPTION_CFG
{
	DWORD    dwSize;    //?芍?????車??
	BYTE    byEnable;  //???????‾??????0~??㊣???1~????
	BYTE    byRes[255];
}NET_DVR_STREAMENCRYPTION_CFG, *LPNET_DVR_STREAMENCRYPTION_CFG;

//??℅???GPS??????????
typedef    struct tagNET_DVR_REVISE_GPS_CFG
{
	DWORD    dwSize;    //?芍?????車??
	BYTE   byLatitudeType;//?????角????0-㊣㊣????1-????
	BYTE   byLongitudeType;// ?????角????0-??????1-?‾??
	BYTE   byMode;//???? 0-??????1-℅?????2-????
	BYTE    byRes;
	NET_DVR_LLI_PARAM    struLatitude;     /*????*/
	NET_DVR_LLI_PARAM    struLongitude; /*????*/
	BYTE    byRes1[300];
}NET_DVR_REVISE_GPS_CFG, *LPNET_DVR_REVISE_GPS_CFG;

typedef    struct tagNET_DVR_PDC_RECOMMEND
{
	DWORD         dwSize;
	WORD        wWidth;//?????赤????[0, 1000]
	BYTE        byRes[126];
}NET_DVR_PDC_RECOMMEND, *LPNET_DVR_PDC_RECOMMEND;

typedef    struct tagNET_DVR_FLASHSTORAGE_REMOVE
{
	DWORD         dwSize;
	DWORD       dwChannel;
	BYTE        byPDCRemoveEnable;//???????‾???????? 0-????????1-????
	BYTE        byRes[127];
}NET_DVR_FLASHSTORAGE_REMOVE, *LPNET_DVR_FLASHSTORAGE_REMOVE;

/********************************DS-TME4XX?????迆??﹞? Begin****************************/
typedef struct tagNET_DVR_PARKING_CARD
{
	DWORD  dwSize;
	DWORD  dwChannel;//??????1?“?車???????角?“???豕㊣???
	char  szCardNo[MAX_CARDNO_LEN/*48*/];//?“??
	BYTE  byCardType;//?“???角?? 0-???㊣?“??1-???“?“
	BYTE  byCardStatus;//?“??℅??? 0-??????1-???∫??2-℅??迆
	BYTE  byChargeRuleID;//??﹞????辰ID
	BYTE  byDelete;//??﹞????? 0-????????1-????
	NET_DVR_TIME_V30 struStartTime;//???∫?????㊣??
	NET_DVR_TIME_V30 struEndTime;//???∫?芍???㊣??
	BYTE  byRes[128];
}NET_DVR_PARKING_CARD, *LPNET_DVR_PARKING_CARD;

//???????“??????????
typedef struct tagNET_DVR_GATE_CARDINFO
{
	DWORD     dwSize;
	NET_VCA_DEV_INFO struDevInfo;
	DWORD dwRelativeTime; //?角???㊣㊣那
	DWORD dwAbsTime; //?????㊣㊣那
	char    szCardNo[MAX_CARDNO_LEN/*48*/];//?“??
	char    szPassVehicleID[MAX_VEHICLE_ID_LEN];//?“??㊣那??
	char    szInVehicleID[MAX_VEHICLE_ID_LEN];//?????㊣???????“??㊣那??
	NET_DVR_TIME_V30  struSwipeTime;//???“?㊣??
	NET_DVR_TIME_V30  struCardTime;//?“???????㊣???????????㊣???????㊣?????????????㊣????????0㊣赤?????????㊣??
	BYTE    byLetPass;//??????﹞???﹞??? 0-??﹞???(?㊣CardType == ???㊣)?豕????﹞???1-﹞?????2-??????﹞?﹞???
	BYTE     byCardType;//?“?角?? 0-???“?“??1-???㊣?“??2-???㊣
	BYTE    byRes[126];
}NET_DVR_GATE_CARDINFO, *LPNET_DVR_GATE_CARDINFO;

//????????﹞?????????(COMM_GATE_CHARGEINFO_UPLOAD)
typedef struct tagNET_DVR_GATE_CHARGEINFO
{
	DWORD dwSize;
	NET_VCA_DEV_INFO struDevInfo;
	DWORD dwRelativeTime; //?角???㊣㊣那
	DWORD dwAbsTime; //?????㊣㊣那
	char  sLicense[MAX_LICENSE_LEN];        //????
	char  szCardNo[48];
	NET_DVR_TIME_V30 struEntranceTime;
	NET_DVR_TIME_V30 struDepartureTime;
	char  szDepartureID[32];  //?????“??????㊣那??
	char  szEntranceID[32];  //?????“??????㊣那??
	DWORD dwTotalCost;   //??????﹞?????*100
	char  szOperateName[32]; //???迆????"offline"
	BYTE  byChargeRuleId; //??﹞????辰centerId
	BYTE  byVehicleType;//?????角????0-??????????1-????????2-?車????
	BYTE  byRes[127];//?∟??
}NET_DVR_GATE_CHARGEINFO, *LPNET_DVR_GATE_CHARGEINFO;

//???????????“?????芍????
typedef struct tagNET_DVR_PARKING_CARD_CTRL_PARAM
{
	DWORD  dwSize;
	DWORD  dwChannel; //?“????
	BYTE  byCardType;//?“???角?? 0-???㊣?“
	BYTE  byDeleteALL;//??﹞????????? 0-????????1-????
	BYTE  byRes[62];
}NET_DVR_PARKING_CARD_CTRL_PARAM, *LPNET_DVR_PARKING_CARD_CTRL_PARAM;

//TME????℅???????
typedef struct tagNET_DVR_TME_VEHICLE_RESULT_
{
	DWORD   dwSize;
	WORD    wLaneid; //??????1??32?“?‾????????????????????
	BYTE    byCamLaneId; //?????角?迆??????1??16?“?角?迆?????????????????????????????角????
	BYTE    byRes1; //㊣???
	DWORD   dwChanIndex; //?“????
	NET_DVR_PLATE_INFO  struPlateInfo; //?????????芍??
	NET_DVR_VEHICLE_INFO struVehicleInfo; //????????
	BYTE    byMonitoringSiteID[48]; //?角????㊣角??
	BYTE    byDeviceID[48]; //?豕㊣?㊣角??
	BYTE    byDir;     //?角??﹞??辰??0-???邦 1 ??????2 ???? 
	BYTE    byRes2;
	WORD    wBackList; //㊣那??????﹞?㊣“?????? 0 ㊣赤????????????????  1 ㊣赤????????
	DWORD   dwPicNum; //?????????“??picGroupNum???????迆㊣赤㊣?????????????????????????????????struVehicleInfoEx?“?? 
	NET_ITS_PICTURE_INFO struPicInfo[4];  //????????,???“℅??角4????
	BYTE    byPassVehicleID[32];    //?????“??ID 
	BYTE    byCardNo[48]; // ?“??
	BYTE    bySwipeTime[32];//???????“?㊣??  ?㊣????????yyyymmddhh24missfff
	DWORD   dwCharge;      //??﹞????? ?“﹞???
	BYTE    byHistory;     //??﹞????迆?﹞????  0-﹞?  1-??
	BYTE    byLetPass;     //??﹞???﹞?????0-??﹞?????1-﹞???  2-????
	BYTE    byRes3[186];
} NET_DVR_TME_VEHICLE_RESULT, *LPNET_DVR_TME_VEHICLE_RESULT;

//???????赤?‾℅??芍????
typedef struct tagNET_DVR_MVMRegisterInfo_
{
	DWORD  dwSize;         //?芍?????車??
	char   sDetectorID[16];   //?足???‾ID
	char   sManagerID[16];    //???赤?‾ID
	char   sSim[20];       //?“??????
	DWORD  dwLocalIP;      //㊣???IPv4???﹞??????dwLocalIP=0x01020304,?辰IP???﹞??1.2.3.4
	DWORD  dwLocalIPMask;  //㊣???????℅???????????????dwLocalIP
	DWORD  dwLocalGateway; //㊣???????????????dwLocalIP
	DWORD  dwDstIP;        //??㊣那IP????????dwLocalIP
	BYTE   byMACAddr[6];   //㊣???mac???﹞
	WORD  wLocalPort;     //㊣???????
	WORD  wFirmwareYear;  //?赤??∼?㊣??那﹞?
	BYTE   byFirmwareMonth;    //?赤??∼?㊣???﹞?
	BYTE   byFirmwareDay;  //?赤??∼?㊣???
	BYTE   byMajorVersion; //∼?㊣????????∼
	BYTE   byMinorVersion; //∼?㊣????????車
	BYTE   byRes[170];
}NET_DVR_MVMRegisterInfo, *LPNET_DVR_MVMRegisterInfo;

//????℅???????
typedef struct tagNET_DVR_SingleMagneticStatus_
{
	DWORD  dwSize;             //?芍?????車??
	char   sDetectorID[16];       //?足???‾ID
	char   sManagerID[16];        //???赤?‾ID
	char   sParkNum[16];       //????㊣角??
	NET_DVR_TIME_V30 struDetectorTime;  //?足???㊣??
	DWORD  dwRssi;             //????????????????????﹞??∫-137~0dbm??????????﹞?????????????????????
	BYTE   byParkinglotState;  //????℅?????0-??????1-????
	BYTE   byBatteryState;     //????℅?????0-100%??1-75%??2-50%??3-25%??4-????5%
	BYTE   byDeviceState;      //?豕㊣?℅???	0-??????1-????
	BYTE   byCMD;              //0-????㊣???㊣“????1-?足???‾????㊣“??
	BYTE   byRes[184];
}NET_DVR_SingleMagneticStatus, *LPNET_DVR_SingleMagneticStatus;

//????????????
typedef struct tagNET_DVR_PARKING_VEHICLE
{
	DWORD   dwSize;
	DWORD   dwChannel;//??????1?“?車???????角?“???豕㊣???
	char    szLicense[MAX_LICENSE_LEN/*16*/];//????????
	char    szRelateCardNo[MAX_CARDNO_LEN/*48*/];//?????“??
	NET_DVR_TIME_V30 struStartTime;//???∫?????㊣??
	NET_DVR_TIME_V30 struEndTime;//???∫?芍???㊣??
	BYTE    byVehicleType;//?????角????0-??????????1-????????2-?車????
	BYTE    byPlateColor;//?????????????? VCA_PLATE_COLOR
	BYTE    byRes[126];
}NET_DVR_PARKING_VEHICLE, *LPNET_DVR_PARKING_VEHICLE;

//??﹞?????????
typedef    struct tagNET_DVR_CHARGEACCOUNT_CFG
{
	DWORD   dwSize;//?芍?????車??
	float   fAccount;//??????﹞?????
	BYTE    byRes[128];
}NET_DVR_CHARGEACCOUNT_CFG, *LPNET_DVR_CHARGEACCOUNT_CFG;

//???????㊣???????豕㊣??角????????????
typedef    struct tagNET_DVR_PXMULTICTRL_CFG
{
	DWORD        dwSize;//?芍?????車??
	DWORD        dwMultiChansWaitTime;//?角????℅????????㊣???“1~300s??
	BYTE         byMultiChansCapEnabled;//??﹞??????角????℅??? 0-﹞???1-??
	BYTE        byRes[127];
}NET_DVR_PXMULTICTRL_CFG, *LPNET_DVR_PXMULTICTRL_CFG;

//???????㊣?????迆??????????
typedef    struct tagNET_DVR_PXOFFLINE_CFG
{
	DWORD   dwSize;//?芍?????車??
	BYTE    byEnabled;//??﹞??????㊣?????迆??????0-?????? 1-????
	BYTE    byChargeEnabled;//??﹞????迆??﹞? 0-﹞???1-??
	BYTE    byAlarmEnabled;//??﹞????????迆㊣“?? 0-﹞???1-??
	BYTE    byRecordSource;//?????迆?迆???? 0-???? 1-???“
	DWORD   dwTimeWait;//?㊣?????????迆?????∼???????㊣???“1-300????
					   /**
					   realeaseMode&(0x1<<0) ???“??﹞???
					   realeaseMode&(0x1<<1) ???“?“﹞???
					   realeaseMode&(0x1<<2) ???㊣??﹞???
					   realeaseMode&(0x1<<3) ???㊣?“﹞???
					   realeaseMode&(0x1<<4) ??????﹞???
					   realeaseMode&(0x1<<5) ???“??????﹞??辰℅???﹞???
					   realeaseMode&(0x1<<6) ???㊣??????﹞??辰℅???﹞???
					   */
	DWORD   dwRealeaseMode; //﹞???﹞?????∼???㊣赤??
	BYTE    byVehCardmatch;//???“????  0-﹞???1-??
	BYTE    bySingleInSingleOut;//???????? 0-﹞???1-??
	BYTE    byRes[126];
}NET_DVR_PXOFFLINE_CFG, *LPNET_DVR_PXOFFLINE_CFG;

typedef    struct tagNET_DVR_PARKINGSAPCE_CFG
{
	DWORD    dwSize;//?芍?????車??
	DWORD     dwTotalParkingLot;//℅?????????
	DWORD    dwCurrParkingLot;//?㊣?∼???角????????
	BYTE    byRes[128];
}NET_DVR_PARKINGSAPCE_CFG, *LPNET_DVR_PARKINGSAPCE_CFG;

typedef    struct tagNET_DVR_PAPERCHARGEINFO_CFG
{
	DWORD   dwSize;//?芍?????車??
	char    szBarCode[LEN_16];//???????“16??℅?﹞?????
	char    szLicense[MAX_LICENSE_LEN]; //????????
	char    szVehicleInTime[LEN_32];//?????㊣???“32??℅?﹞??? YYYY-MM-DD HH:MM:SS??
	char    szPaymentTime[LEN_32];//??﹞??㊣???“32??℅?﹞??? YYYY-MM-DD HH:MM:SS??
	float   fPaymentAmount;//??﹞?????
	DWORD   dwPaymentOutFailureTime;//??﹞??????∫?∫?㊣???“DWORD??
	BYTE    byVehicleOutEnabled; //??﹞?????: 0- ﹞???1- ??
	BYTE    byRes[128];
}NET_DVR_PAPERCHARGEINFO_CFG, *LPNET_DVR_PAPERCHARGEINFO_CFG;

//???????㊣??????
typedef    struct tagNET_DVR_ILLEGALCARDFILTERING_CFG
{
	DWORD   dwSize;//?芍?????車??
	char    sLEDDefaultInfo[MAX_LED_INFO_LEN/*512*/]; // LED????????????
	BYTE    byillegalCardFilteringEnabled;//????﹞?﹞“?“????,0~????????1~????
	BYTE    bySendCardSensingCoilEnabled;//﹞??“?迆??﹞?????????????
	BYTE    byWiegendSensingCoilEnabled;//???角???“??﹞?????????????
	BYTE    byGateSwitchEnabled; //??﹞???????????????
	BYTE    byVerifyKeyWriteCardEnabled;//??﹞??谷?∟?????????“
	BYTE    byNoplateTakeCardEnabled;// ??﹞?????????????????﹞???
	BYTE    byRes[126];
}NET_DVR_ILLEGALCARDFILTERING_CFG, *LPNET_DVR_ILLEGALCARDFILTERING_CFG;


//???????????????“??﹞????辰???辰?????芍??
typedef struct tagNET_DVR_TME_CHARGERULE_COND
{
	DWORD   dwSize;
	DWORD   dwChannel;  //?“???? 
	char    szCardNo[32];//?“??
	BYTE    byRes[128];
}NET_DVR_TME_CHARGERULE_COND, *LPNET_DVR_TME_CHARGERULE_COND;

//LED????????????
typedef    struct tagNET_DVR_LEDDISPLAY_CFG
{
	DWORD   dwSize;//?芍?????車??
	char    sDisplayInfo[MAX_LED_INFO_LEN/*512*/]; // LED????????
	BYTE    byDisplayMode;//????﹞???:0~℅車??,1~????,2~????????
	BYTE    bySpeedType;//?????角??:0~?足,1~??,2~??
	BYTE    byShowPlateEnable;//??????????????0~??㊣???1~????
	BYTE    byRes1;
	DWORD   dwShowTime;//?????㊣?∟??1~60??
	BYTE    byRes[128];
}NET_DVR_LEDDISPLAY_CFG, *LPNET_DVR_LEDDISPLAY_CFG;

//??????㊣“????????
typedef    struct tagNET_DVR_VOICEBROADCAST_CFG
{
	DWORD        dwSize;//?芍?????車??
	char        sInfo[MAX_VOICE_INFO_LEN/*128*/]; //??????㊣“????
	BYTE       byBroadcastNum;// ??????㊣“?????? 1~10??
	BYTE       byIntervalTime;// ??????㊣“?????㊣??,1~5s
	BYTE        byRes[126];
}NET_DVR_VOICEBROADCAST_CFG, *LPNET_DVR_VOICEBROADCAST_CFG;

//???㊣?辰??????????
typedef    struct tagNET_DVR_PAPERPRINTFORMAT_CFG
{
	DWORD        dwSize;//?芍?????車??
	char        sTitleInfo[MAX_LITLE_INFO_LEN/*64*/]; //???㊣㊣那??????
	char        sCustomInfo[MAX_CUSTOM_INFO_LEN/*64*/]; //???㊣℅??“??????????
	char        sPhoneNum[MAX_PHONE_NUM_LEN/*16*/];//???????∼
	BYTE        byPrintInTimeEnabled; //??﹞??辰???????㊣??
	BYTE        byRes[127];
}NET_DVR_PAPERPRINTFORMAT_CFG, *LPNET_DVR_PAPERPRINTFORMAT_CFG;


//?????????㊣????
typedef    struct tagNET_DVR_LOCKGATE_TIME_CFG
{
	char        sBeginTime[LEN_32];//?????㊣???“32??℅?﹞??? HH:MM:SS??    
	char        sEndTime[LEN_32];//?芍???㊣???“32??℅?﹞??? HH:MM:SS??
	BYTE        byRes[64];
}NET_DVR_LOCKGATE_TIME_CFG, *LPNET_DVR_LOCKGATE_TIME_CFG;

//????????????
typedef    struct tagNET_DVR_LOCKGATE_CFG
{
	DWORD        dwSize;//?芍?????車??
	NET_DVR_LOCKGATE_TIME_CFG struTime[LOCKGATE_TIME_NUM]; //?????????㊣????
	BYTE        byRes[128];
}NET_DVR_LOCKGATE_CFG, *LPNET_DVR_LOCKGATE_CFG;

//????????℅???
typedef struct NET_DVR_PARKING_DATASTATE_INFO
{
	DWORD   dwSize;
	char    szAppSerialNum[MAX_APP_SERIALNUM_LEN/*32*/];//?????辰????, ?迆㊣赤?㊣?∼?迄??????????
	DWORD   dwParkingNum; //?㊣?∼????????
	DWORD   dwUpdataSerialNum; //?邦???辰????; ?迆㊣赤℅??車?邦?????辰??????
	BYTE    byRes[256];
} NET_DVR_PARKING_DATASTATE_INFO, *LPNET_DVR_PARKING_DATASTATE_INFO;

//????EPTZ????
typedef    struct tagNET_DVR_EPTZ_CFG
{
	DWORD dwSize;
	BYTE    byEnableEPTZ;        //??﹞?????EPTZ, 0-????????1 -????
	BYTE    byRes[503];
}NET_DVR_EPTZ_CFG, *LPNET_DVR_EPTZ_CFG;

//??????????
typedef    struct tagNET_DVR_CENTER_POINT_CFG
{
	DWORD dwSize;
	NET_VCA_POLYGON struRegion;//???辰﹞??∫
	BYTE    byRes[512];
}NET_DVR_CENTER_POINT_CFG, *LPNET_DVR_CENTER_POINT_CFG;

/********************************DS-TME4XX?????迆??﹞? End****************************/

/********************************IPC FF???? Start****************************/
typedef struct tagNET_DVR_FTPUPLOAD_PARAM
{
	char szRuleTypeItem[MAX_SINGLE_FTPPICNAME_LEN/*20*/];
	char szCameraName[MAX_CAMNAME_LEN/*32*/];
	BYTE byRes[64];
}NET_DVR_FTPUPLOAD_PARAM, *LPNET_DVR_FTPUPLOAD_PARAM;

//char szRuleTypeItem[MAX_SINGLE_FTPPICNAME_LEN/*20*/];
//?????????????“℅?﹞???  capture_time,plate_No,alarm_type,camera_name
//??℅谷??㊣那㊣赤?????車???辰

//char szCameraName[MAX_CAMNAME_LEN/*32*/];
//??????szRuleTypeItem??℅???㊣赤???????? camera_name ???谷??

typedef struct tagNET_DVR_FTPUPLOADCFG
{
	DWORD dwSize;
	BYTE byEventType; //?????角????0-??????1-?????足??
	BYTE byMode; //?????邦????????0-??????1-℅??“??
	BYTE byRes[62];
	NET_DVR_FTPUPLOAD_PARAM  struCustomVehicle[MAX_FTPNAME_NUM/*12*/];
	BYTE byRes1[1024];
}NET_DVR_FTPUPLOADCFG, *LPNET_DVR_FTPUPLOADCFG;

/********************************IPC FF???? End****************************/

//????﹞???????????
typedef struct tagNET_DVR_PUBLISH_UPGRADE_COND
{
	DWORD dwSize;
	DWORD dwUpgradeType;    //?????角????1-∼???????????2-∼?????℅谷????
	DWORD dwTerminalNum;    //????????????????∼??????????㊣???∫
	DWORD *pTerminalNo;     //?豕????????????????∼??????????㊣???∫
	DWORD dwGroupNo;        //????℅谷????∼?????℅谷?????㊣???∫
	BYTE  byRes[32];
}NET_DVR_PUBLISH_UPGRADE_COND, *LPNET_DVR_PUBLISH_UPGRADE_COND;
//WEP????????
typedef struct tagNET_DVR_WEP_KEY_CFG
{
	char   csWEPKey[WEP_KEY_MAX_SIZE/*32*/];//?????????? 
	BYTE    byRes[64];
}NET_DVR_WEP_KEY_CFG, *LPNET_DVR_WEP_KEY_CFG;

typedef struct tagNET_DVR_SUB_UPGRADE_PROGRESS
{
	DWORD dwTerminalNo; //??????
	DWORD dwProgress;   //??????????????0-100??101㊣赤?????????????????足??,,102-?????????∫∼???103-????∼邦∼?㊣?????????104-﹞???????????105-﹞?﹞“????????∼邦
}NET_DVR_SUB_UPGRADE_PROGRESS, *LPNET_DVR_SUB_UPGRADE_PROGRESS;

typedef struct tagNET_DVR_UPGRADE_PROGRESS_RESULT
{
	DWORD  dwSize;
	DWORD  dwMainProgress;      //?‾??????0-100
	DWORD  dwSubProgressNum;    //℅?????????
	LPNET_DVR_SUB_UPGRADE_PROGRESS  lpStruSubProgress; //?‾??????????℅???????dwSubProgressNum??NET_DVR_SUB_UPGRADE_PROGRESS????
	BYTE   byRes[32];
}NET_DVR_UPGRADE_PROGRESS_RESULT, *LPNET_DVR_UPGRADE_PROGRESS_RESULT;

//????﹞???﹞????‾????﹞???????
typedef struct tagNET_DVR_SCHEDULE_PROGRESS_COND
{
	DWORD dwSize;
	DWORD dwScheduleNo;     //??????
	BYTE  byProgressType;   //???????????角????1-∼?℅谷??????????2-∼???????????????3-∼?℅谷??????????
	BYTE  byRes1[3];
	DWORD dwGroupNo;        //????℅谷???辰℅谷?????????角????1??3?㊣???∫
	DWORD dwTerminalNo;     //?????????????角????2?㊣???∫
	BYTE  byRes2[32];
}NET_DVR_SCHEDULE_PROGRESS_COND, *LPNET_DVR_SCHEDULE_PROGRESS_COND;

typedef struct tagNET_DVR_SUB_SCHEDULE_PROGRESS
{
	DWORD dwTerminalNo; //??????
	DWORD dwProgress;   //????????﹞?????????0-100??101㊣赤????????????﹞????????足??,102㊣赤??????????????????℅?,103-????????????104-??????????105-﹞????‾??????????????
}NET_DVR_SUB_SCHEDULE_PROGRESS, *LPNET_DVR_SUB_SCHEDULE_PROGRESS;

typedef struct tagNET_DVR_SCHEDULE_PROGRESS_RESULT
{
	DWORD  dwSize;
	DWORD  dwMainProgress;      //?‾??????0-100??∼?℅谷?????????㊣????℅谷????﹞?????????∼??????????????㊣??????????????﹞???????
	DWORD  dwSubProgressNum;    //℅???????????∼?℅谷?????㊣???∫??㊣赤??℅谷???‾????????????
	LPNET_DVR_SUB_SCHEDULE_PROGRESS  lpStruSubProgress; //?‾????????﹞?????℅???????∼?℅谷?????㊣???∫??dwSubProgressNum??NET_DVR_SUB_SCHEDULE_PROGRESS????
	BYTE   byRes[32];
}NET_DVR_SCHEDULE_PROGRESS_RESULT, *LPNET_DVR_SCHEDULE_PROGRESS_RESULT;

//????﹞???????????
typedef struct tagNET_DVR_INSERTPLAY_PROGRESS_COND
{
	DWORD dwSize;
	BYTE   byInsertType;    //?????角????1-??????2-????
	BYTE   byRes3[3];
	DWORD dwInsertNo;        //?????????角????????????????㊣角?????????????角????????????????㊣角??
	BYTE  byProgressType;   //???????????角????1-∼?℅谷??????????2-∼?????????????
	BYTE  byRes1[3];
	DWORD dwGroupNo;        //????℅谷?????????角????1?㊣???∫
	DWORD dwTerminalNo;     //?????????????角????2?㊣???∫
	BYTE  byRes2[32];
}NET_DVR_INSERTPLAY_PROGRESS_COND, *LPNET_DVR_INSERTPLAY_PROGRESS_COND;

typedef struct tagNET_DVR_SUB_INSERTPLAY_PROGRESS
{
	DWORD dwTerminalNo; //??????
	DWORD dwProgress;   //??????????????0-100??101㊣赤?????????????????足??,102㊣赤??????????????????℅?,103㊣赤??????????,104????????㊣?????
}NET_DVR_SUB_INSERTPLAY_PROGRESS, *LPNET_DVR_SUB_INSERTPLAY_PROGRESS;

typedef struct tagNET_DVR_INSERTPLAY_PROGRESS_RESULT
{
	DWORD  dwSize;
	DWORD  dwMainProgress;      //?‾??????0-100??∼?℅谷?????????㊣????℅谷??????????∼??????????????㊣??????????????????
	DWORD  dwSubProgressNum;    //℅???????????∼?℅谷?????㊣???∫??㊣赤??℅谷???‾????????????
	LPNET_DVR_SUB_INSERTPLAY_PROGRESS  lpStruSubProgress; //?‾??????????℅???????∼?℅谷?????㊣???∫??dwSubProgressNum??NET_DVR_SUB_INSERTPLAY_PROGRESS????
	BYTE   byRes[32];
}NET_DVR_INSERTPLAY_PROGRESS_RESULT, *LPNET_DVR_INSERTPLAY_PROGRESS_RESULT;




//WEP????
typedef struct tagNET_DVR_WEP_CFG
{
	BYTE   byAuthenticationType;//?赤﹞??谷?∟?角????0~?????谷?∟??1~???赤??????2~℅????谷?∟
	BYTE   byDefaultTransmitKeyIndex;//??????????????????1~4??????????struEncryptionKeyCfg????????????????
									 /*
									 ?㊣??64???????㊣??ASCII??????℅?﹞??∟????5????
									 ?㊣??128???????㊣??ASCII??????℅?﹞??∟????13????
									 */
	BYTE   byWepKeyLenType;//?????角????0~   64????????1~  128????????
	BYTE   byKeyType;// ?????角????0~   ASCII????1~  16??????
	NET_DVR_WEP_KEY_CFG struWEPKeyCfg[WEP_KEY_MAX_NUM/*4*/];// WEP??????????℅??車?∫??4????
	BYTE   byRes[128];
}NET_DVR_WEP_CFG, *LPNET_DVR_WEP_CFG;

//WPA????
typedef struct tagNET_DVR_WPA_CFG
{
	BYTE   byAlgorithmType; //??﹞“?角????0~TKIP, 1~AES, 2~TKIP/AES
	BYTE   byWPAKeyLen;// WPA???赤?????∟??????????8~63????????csSharedKey??????℅?﹞??∟??
	BYTE   byDefaultPassword;//??﹞?????????WPA????
	BYTE   byRes1;
	char   csSharedKey[WPA_KEY_MAX_SIZE/*64*/];//WPA???赤????,??8-63??ASCII℅?﹞?
	BYTE   byRes[128];
}NET_DVR_WPA_CFG, *LPNET_DVR_WPA_CFG;


typedef struct tagNET_DVR_WIRELESS_SECURITY_CFG
{
	BYTE   bySecurityMode; //∼?????????0~????,1~WEP,2~WPA-personal, 3~WPA2-personal
	NET_DVR_WEP_CFG  struWEPCfg; //?㊣∼?????????????WEP?㊣?迆?∫??
	NET_DVR_WPA_CFG  struWPACfg; //?㊣∼?????????????WPA-personal??WPA2-personal?㊣?迆?∫??
	BYTE    byRes[256];
} NET_DVR_WIRELESS_SECURITY_CFG, *LPNET_DVR_WIRELESS_SECURITY_CFG;

//wifi????????????(?那??∼?)
typedef struct tagNET_DVR_WIRELESSSERVER_FULLVERSION_CFG
{
	DWORD    dwSize;//?芍?????車??
	BYTE    byWifiAPEnabled;  //??﹞?????????AP??0-﹞???1- ??
	BYTE    byBroadcastEnabled; // ??﹞???????????0-﹞???1-??
	BYTE    byWlanShareEnabled; //??﹞????????赤??0-﹞???1-??
	BYTE    byDHCPEnabled; //??﹞?????DHCP??0-﹞???1-??
	BYTE    bySSID[IW_ESSID_MAX_SIZE]; //SSID
	BYTE    byRes1[11];
	BYTE    byIPType; //IP???﹞?角????0-IPv4,1-IPv6
	NET_DVR_IPADDR    struIPAddr;  //IP???﹞
	NET_DVR_IPADDR    struIPMask;  //???????﹞
	NET_DVR_IPADDR    struGatewayIPMask;  //???????﹞
	NET_DVR_IPADDR    struStartIPAddrPool;  //IP?????????﹞
	NET_DVR_IPADDR    struEndIPAddrPool;  // IP???芍?????﹞
	NET_DVR_IPADDR    struDNSServerIpAddr[MAX_DNS_SERVER_NUM]; //DNS???﹞
	NET_DVR_WIRELESS_SECURITY_CFG struWirelessSecurityCfg;//????∼???????????
	BYTE    byRes[256];
}NET_DVR_WIRELESSSERVER_FULLVERSION_CFG, *LPNET_DVR_WIRELESSSERVER_FULLVERSION_CFG;

typedef struct tagNET_DVR_OPTICAL_DEV_CHAN_INFO
{
	DWORD dwChannel;    //?“??????0?????∫
	BYTE byChannelName[NAME_LEN];
	BYTE bySignal;  //??﹞?????????0-????1-????????
	BYTE bySignalType;  //???????角????1-㊣那????2-?????????????㊣???∫??????
	BYTE byRes[10];
}NET_DVR_OPTICAL_DEV_CHAN_INFO, *LPNET_DVR_OPTICAL_DEV_CHAN_INFO;

typedef struct tagNET_DVR_OPTICAL_DEV_NODE
{
	BYTE  byValid;    //??﹞????∫??0-???∫??1-???∫
	BYTE  byRes1[3];
	DWORD dwDevNo;    //?????迆??
	BYTE  byDevName[NAME_LEN];   //?????????迆????
	BYTE  byDevID[MAX_ID_LEN];   //?????迆???赤ID???豕㊣??“??㊣那????????
	NET_DVR_OPTICAL_DEV_CHAN_INFO struChannel[MAX_CHANNUM];
	BYTE  byRes2[32];
}NET_DVR_OPTICAL_DEV_NODE, *LPNET_DVR_OPTICAL_DEV_NODE;

#define MAX_OPTICAL_DEV_NODE 32     //℅??角?????????迆??

typedef struct tagNET_DVR_OPTICAL_PORT_INFO
{
	DWORD dwSize;
	BYTE  byValid;   //??﹞?????????????0-????1-????????
	BYTE  byLinkType;    //???﹞?角????1-?﹞????2-??????????
	BYTE  byPortWorkMode;    //?????∟℅‾??????0-???∫??1-?‾????2-?“?????㊣???﹞?角?????﹞???㊣???∫??????
	BYTE  byRes1[1];
	DWORD dwPairPort;    //???????????????﹞?角?????﹞???㊣???∫???‾???㊣?????????“???????“???㊣???????????‾????
	NET_DVR_OPTICAL_DEV_NODE struDevInfo[MAX_OPTICAL_DEV_NODE]; //?????????迆?豕㊣?????
	BYTE  byRes2[32];
}NET_DVR_OPTICAL_PORT_INFO, *LPNET_DVR_OPTICAL_PORT_INFO;

typedef struct tagNET_DVR_OPTICAL_CHAN_RELATE_CFG
{
	DWORD dwSize;
	BYTE  byEnable;    //??﹞??????????迆??????0-﹞???﹞?0-??
	BYTE  byRes1[3];
	DWORD dwDevNo;    //?????迆??
	DWORD dwOpticalPort;  //??????
	BYTE  byDevID[MAX_ID_LEN];   //?????迆???赤ID
	DWORD dwInputChanNo;  //?????迆?????“????
	BYTE  byRes2[64];
}NET_DVR_OPTICAL_CHAN_RELATE_CFG, *LPNET_DVR_OPTICAL_CHAN_RELATE_CFG;

typedef  struct tagNET_DVR_START_FILE_TO_CLOUD_COND
{
	DWORD    dwSize;
	BYTE    aCameraID[MAX_CAMERAID_LEN];    //㊣角???‾ID
	DWORD      dwPoolID;    //??????ID
	DWORD      dwRepPoolID;    //???角??ID
	WORD      wReplication;    //???角﹞???
	BYTE       byRes[178];
}NET_DVR_START_FILE_TO_CLOUD_COND, *LPNET_DVR_START_FILE_TO_CLOUD_COND;

typedef  struct     tagNET_DVR_START_PICTURE_FROM_CLOUD_COND
{
	DWORD       dwSize;
	BYTE        aCameraID[MAX_CAMERAID_LEN];    //㊣角???‾ID
	NET_DVR_TIME_V30    struBeginTime;    //?????㊣??
	NET_DVR_TIME_V30    struEndTime;        //?芍???㊣??
	DWORD   dwPicType;        //?????角????∼???㊣赤??
							  //bit0-JPG
							  //bit1-BMP
							  //bit2-PNG
	BYTE    byRes1[3];
	BYTE    byZoomType;    //0-????﹞?,1-∼?㊣???,2-∼??車??,3-∼?﹞?㊣???
	union
	{
		BYTE    uLen[32];
		struct
		{
			BYTE        byScale;         //1~99
		}struScale;
		struct
		{
			BYTE        byQuality;    //1~99
		}struQuality;
		struct
		{
			DWORD       dwWidth;
			DWORD       dwHeight;
		}struResolution; //??㊣那﹞?㊣???
	}uZoomParam;
	DOWNLOAD_DATA_CB    fnDownloadFileCallBack;    //???????‾????
	void*   pUser;    //???∫????????
	BYTE    byRes[372];
}NET_DVR_START_PICTURE_FROM_CLOUD_COND, *LPNET_DVR_START_PICTURE_FROM_CLOUD_COND;

typedef     struct    tagNET_DVR_START_PICTURE_FROM_CLOUD_RET
{
	DWORD       dwSize;
	DWORD       dwFileCount;    //????????
	BYTE        byRes[120];
}NET_DVR_START_PICTURE_FROM_CLOUD_RET, *LPNET_DVR_START_PICTURE_FROM_CLOUD_RET;

typedef  struct
{
	DWORD       dwSize;
	NET_DVR_TIME_V30    struTime;    //?????㊣??
	DWORD       dwPicLen;    //?????∟??
	BYTE        byPicType;    //????????,1-jpg,2-bmp,3-png
	BYTE        byRes[107];
}NET_DVR_PICTURE_FROM_CLOUD_RET, *LPNET_DVR_PICTURE_FROM_CLOUD_RET;

typedef struct tagNET_DVR_ACS_EXTERNAL_DEV_CFG
{
	DWORD dwSize;
	BYTE byIDCardUpMode;  //?赤﹞??∟??????㊣“??0??????18???赤﹞??∟????1??????????????
	BYTE byRes1;
	BYTE byCardVerifyMode; //???“???∟??????0?????????????∟??1?????∫?????“???∟??2?????“????
	BYTE byACSDevType; //?豕㊣???????1???赤﹞??∟???“?‾??2??IC???“?‾??3???????????“?‾??4?????????“?‾??5??℅?﹞???+?????????“?‾??6?????“?‾??7??℅?﹞?????8???????﹞??9?????????谷??10?????∟?豕㊣?
	BYTE byDoorMode; //???????角????0????????1????????
	BYTE byRes2;
	WORD wDevDetailType; //???豕???????豕㊣???????0-iDR210??1-IDM10??2-?????赤﹞??∟?????‾
	BYTE byRes[300];
}NET_DVR_ACS_EXTERNAL_DEV_CFG, *LPNET_DVR_ACS_EXTERNAL_DEV_CFG;

typedef struct tagNET_DVR_PERSONNEL_CHANNEL_CFG
{
	DWORD dwSize;
	BYTE byInMode;            //??????????0??????1??????2℅?????
	BYTE byOutMode;         //??????????0??????1??????2℅?????
	BYTE byWorkMode;        //?∟℅‾??????0???㊣??1???∟??2??㊣???3?????? 
	BYTE byRes[301];
}NET_DVR_PERSONNEL_CHANNEL_CFG, *LPNET_DVR_PERSONNEL_CHANNEL_CFG;

#define MAX_ID_NUM_LEN                  32  //℅??車?赤﹞??∟???∟??
#define MAX_ID_NAME_LEN                 128   //℅??車?????∟??
#define MAX_ID_ADDR_LEN                 280   //℅??車℅??﹞?∟??
#define MAX_ID_ISSUING_AUTHORITY_LEN    128 //℅??車??﹞??迆???∟??

//?赤﹞??∟????
typedef struct tagNET_DVR_ID_CARD_INFO
{
	DWORD  dwSize;        //?芍???∟??
	BYTE  byName[MAX_ID_NAME_LEN];   //????
	NET_DVR_DATE struBirth; //???迆????
	BYTE byAddr[MAX_ID_ADDR_LEN];  //℅??﹞
	BYTE byIDNum[MAX_ID_NUM_LEN];   //?赤﹞??∟????
	BYTE byIssuingAuthority[MAX_ID_ISSUING_AUTHORITY_LEN];  //??﹞??迆??
	NET_DVR_DATE struStartDate;  //???∫????????
	NET_DVR_DATE struEndDate;  //???∫????????
	BYTE byTermOfValidity;  //??﹞??∟?????∫?? 0-﹞???1-???“???∫???????????∫??
	BYTE   bySex;  //??㊣???1-????2-??
	BYTE  byNation;
	BYTE byRes[101];
}NET_DVR_ID_CARD_INFO, *LPNET_DVR_ID_CARD_INFO;

//?赤﹞??∟????㊣“??
typedef struct tagNET_DVR_ID_CARD_INFO_ALARM
{
	DWORD  dwSize;        //?芍???∟??
	NET_DVR_ID_CARD_INFO    struIDCardCfg;//?赤﹞??∟????
	DWORD dwMajor; //㊣“???‾?角?????????那?“??
	DWORD dwMinor; //㊣“?????角?????????那?“??
	NET_DVR_TIME_V30  struSwipeTime; //?㊣??
	BYTE    byNetUser[MAX_NAMELEN];//??????℅‾?????∫??
	NET_DVR_IPADDR    struRemoteHostAddr;//?????‾?迆???﹞
	DWORD dwCardReaderNo; //???“?‾㊣角??????0???∫
	DWORD dwDoorNo; //??㊣角??????0???∫
	DWORD dwPicDataLen;   //?????????車????????0??㊣赤???車????????
	char    *pPicData;
	BYTE byCardType; //?“?角????1-???“?“??2-???????“??3-???????“??4-???邦?“??5-?????“??6-?????“??7-??㊣??“??8-?????“????0???∫
	BYTE byDeviceNo;                             // ?豕㊣?㊣角??????0?㊣???∫?“???∫﹞??∫1-255??
	BYTE byRes2[2];
	DWORD dwFingerPrintDataLen;                  // ?????????車????????0??㊣赤???車????????
	char *pFingerPrintData;
	DWORD dwCapturePicDataLen;                   // ℅????????????車????????0??㊣赤???車????????
	char *pCapturePicData;
	BYTE byRes[188];
}NET_DVR_ID_CARD_INFO_ALARM, *LPNET_DVR_ID_CARD_INFO_ALARM;

//?赤﹞??∟???????????????芍??
typedef struct tagNET_DVR_ID_CARD_BLACK_LIST_COND
{
	DWORD       dwSize;
	BYTE        byRes[256];          //㊣???
}NET_DVR_ID_CARD_BLACK_LIST_COND, *LPNET_DVR_ID_CARD_BLACK_LIST_COND;

//?赤﹞??∟??????????????
typedef struct tagNET_DVR_ID_CARD_BLACK_LIST_CFG
{
	DWORD                     dwSize;
	NET_DVR_ID_CARD_INFO      struIDCardCfg;          // ?赤﹞??∟????
	DWORD                     dwFingerPrintDataLen;   // ?赤﹞??∟?????????車????????0??㊣赤???車????????
	char                      *pFingerPrintData;
	DWORD                     dwPicDataLen;           // ?赤﹞??∟?????????車????????0??㊣赤???車????????
	char                      *pPicData;
	BYTE                      byRes[128];
}NET_DVR_ID_CARD_BLACK_LIST_CFG, *LPNET_DVR_ID_CARD_BLACK_LIST_CFG;

//A =℅???℅?﹞? [a..z, A..Z]??N = ??℅?℅?﹞? [0..9]??S = ????℅?﹞? [??<??]??B=??????????
typedef struct tagNET_DVR_PASSPORT_INFO
{
	DWORD  dwSize;           //?芍???∟??
	BYTE    byOCR;             //0-??℅??∟????????1- OCR??㊣???????
	BYTE    byRes1[3];           //㊣???
	BYTE    byType[MAX_PASSPORT_TYPE_LEN];         //?∟???角?????????角??A??S
	BYTE    byCountryIssue[MAX_PASSPORT_INFO_LEN];  //??﹞??迆?辰??﹞??迆?????????角??A??S
	BYTE    byName[MAX_PASSPORT_NAME_LEN];       //???????????角??A??S
	BYTE    byPassportNo[MAX_PASSPORT_NUM_LEN];    //?∟?????????????角??A??N??S
	BYTE    byNationality[MAX_NATIONALITY_LEN];    //?迆?? ???????角??A??S
	NET_DVR_DATE struBirth;       //???迆????
	NET_DVR_DATE struExpireDate;  //???∫????????
	BYTE  bySex;                  //??㊣???1-????2-??
	BYTE  byRes2[35];              //㊣???
	BYTE  byLocalName[MAX_PASSPORT_INFO_LEN];      //㊣??迆???????????角??B
	BYTE  byNumber[MAX_PASSPORT_INFO_LEN];         //???????????????角??A??N??S
	BYTE  byPlaceOfBirth[MAX_PASSPORT_INFO_LEN];     //???迆?????????角??B
	BYTE  byAddr[MAX_PASSPORT_INFO_LEN];           //???﹞???????角??A??N??S??B
	BYTE  byPhone[MAX_PASSPORT_INFO_LEN];          //???∼???????角??N??S
	BYTE  byJob[MAX_PASSPORT_INFO_LEN];             //?∼?????????角??B
	BYTE  byTitle[MAX_PASSPORT_INFO_LEN];            //?∼?????????角??B
	BYTE  byResume[MAX_PASSPORT_INFO_LEN];         //?辰?迆???????角??B
	BYTE  byOtherNumber[MAX_PASSPORT_INFO_LEN];         //?????????∟?????????????角??A??N??S??B
	BYTE  byMonitoring[MAX_PASSPORT_MONITOR_LEN];         //?角?∟???????????角??B
	BYTE  byRes[128];
}NET_DVR_PASSPORT_INFO, *LPNET_DVR_PASSPORT_INFO;

//?∟??????????
typedef struct tagNET_DVR_PASSPORT_ALARM
{
	DWORD  dwSize;        //?芍???∟??
	DWORD dwMajor; //㊣“???‾?角?????????那?“??
	DWORD dwMinor; //㊣“?????角?????????那?“??
	NET_DVR_TIME_V30  struSwipeTime; //?㊣??
	BYTE	byNetUser[MAX_NAMELEN];//??????℅‾?????∫??
	NET_DVR_IPADDR	struRemoteHostAddr;//?????‾?迆???﹞
	DWORD dwCardReaderNo; //???“?‾㊣角??????0???∫
	BYTE  byCardType; //?“?角????1-???“?“??2-???????“??3-???????“??4-???邦?“??5-?????“??6-?????“??7-??㊣??“??8-?????“????0???∫
	BYTE byRes2[11];
	NET_DVR_PASSPORT_INFO struPassportInfo;//?∟??????
	DWORD dwFaceDataLen;     //?????????車????????0??㊣赤???車????????
	char    *pFaceData;
	DWORD dwPicDataLen;      //?????∟???????????車????????0??㊣赤???車????????
	char    *pPicData;          //∼??? [ISO/IEC 10918-1] ?????????????∟??????
	DWORD dwCapturePicDataLen;   //℅????????????車????????0??㊣赤???車????????
	char    *pCapturePicData;
	BYTE byRes[128];
}NET_DVR_PASSPORT_ALARM, *LPNET_DVR_PASSPORT_ALARM;

typedef struct tagNET_DVR_PASSNUM_INFO_ALARM
{
	DWORD  dwSize;        //?芍???∟??
	DWORD  dwAccessChannel;    //???㊣?“????
	NET_DVR_TIME_V30  struSwipeTime; //?㊣??
	BYTE    byNetUser[MAX_NAMELEN];//??????℅‾?????∫??
	NET_DVR_IPADDR    struRemoteHostAddr;//?????‾?迆???﹞
	DWORD    dwEntryTimes;    //???㊣????????
	DWORD    dwExitTimes;        //???㊣????????
	DWORD    dwTotalTimes;        //???㊣????℅??????? 
	BYTE byRes[300];
}NET_DVR_PASSNUM_INFO_ALARM, *LPNET_DVR_PASSNUM_INFO_ALARM;
typedef struct tagNET_DVR_UPLOAD_VIDEO_INFO
{
	DWORD   dwSize;
	DWORD   dwVideoMangeNo;  //???????赤??
	BYTE    byVideoType;  //???????? 0-AVI 1-WMV 2-MP4 3-FLV 3-VOD 4-MKV 5-RMVB 
	BYTE    byRes1[3];  //㊣???
	BYTE    sVideoName[NAME_LEN];  //???????? 
	NET_DVR_TIME_V30 struTime;  //?????????㊣??
	BYTE     byRes[132];
} NET_DVR_UPLOAD_VIDEO_INFO, *LPNET_DVR_UPLOAD_VIDEO_INFO;

typedef struct tagNET_DVR_DEVICE_FILE_INFO
{
	DWORD   dwSize;
	BYTE    sFileName[NAME_LEN];  //????????
	DWORD    dwManageNo;     //(????????)
	NET_DVR_TIME_EX  struTime;    //?????????㊣?? 
	BYTE    byUsed;          //??﹞?????????0-????????1-???? ?“??????????
	BYTE    byRes[127];
} NET_DVR_DEVICE_FILE_INFO, *LPNET_DVR_DEVICE_FILE_INFO;

typedef struct  tagNET_DVR_PLAY_ITEM
{
	DWORD    dwSize;
	BYTE    byItemType;  //??﹞????角????1-???? 2-???? 3-??﹞???㊣赤 
	BYTE    byRes[3];    //㊣???
	DWORD    dwPlayManageNo;   //??﹞????赤??
	DWORD    dwPlayPicTime; //??﹞??????㊣??????????, (?角???????????∫) 
	BYTE    byRes2[64];
} NET_DVR_PLAY_ITEM, *LPNET_DVR_PLAY_ITEM;

typedef struct tagNET_DVR_DEVICE_PLAYLIST
{
	DWORD    dwSize;
	BYTE    byEnable;  //??﹞????∫?? 0-???∫  !0-???∫
	BYTE    byPlayType;  //??﹞???????1-???﹞??﹞?
	BYTE    byVaildItemNum;    //???∫??﹞???????
	BYTE    byRes[1];
	NET_DVR_PLAY_ITEM struPlayItem[PLAYLIST_ITEM_NUM]; //??﹞??????∼byVaildItemNum???∫
	BYTE     byPlaylistName[PLAYLIST_NAME_LEN];  //??﹞???㊣赤????   
	DWORD   dwPlaylistNo;    //??﹞???㊣赤???“???????∫??
	BYTE     byRes2[128];
} NET_DVR_DEVICE_PLAYLIST, *LPNET_DVR_DEVICE_PLAYLIST;
typedef struct tagNET_DVR_PLAYLIST_ITEM_CTRL
{
	DWORD    dwSize;
	BYTE    byCtrlType;  //??℅‾?角???? 1-?赤????﹞???  2-??????﹞???  3-??????﹞???????
	BYTE    byPlayIndex;  //??﹞??辰???? ??1????
	NET_DVR_PLAY_ITEM struPlayItem;    //??﹞???
	BYTE   byNewPlayIndex;   //????﹞??辰????0???∫
	BYTE   byRes[63];
}NET_DVR_PLAYLIST_ITEM_CTRL, *LPNET_DVR_PLAYLIST_ITEM_CTRL;
typedef struct tagNET_DVR_PLAN_ITEM
{
	NET_DVR_PLAY_ITEM struPlanPlayItem;       //??﹞???    
	NET_DVR_TIME_SEGMENT struTimeSegment;     //?㊣????????
	BYTE  byRes[16];
} NET_DVR_PLAN_ITEM, *LPNET_DVR_PLAN_ITEM;

typedef struct tagNET_DVR_PLAYPLAN_CFG
{
	DWORD    dwSize;
	BYTE    byEnable;  //??﹞?????,  0-?????? !0-????
	BYTE    byPlanMode;   //??????????1-??????  2-??????
	BYTE    byRes[2];
	NET_DVR_PLAN_ITEM struPlanItem[MAX_DAYS][MAX_TIMESEGMENT_V30];
	DWORD    dwPlayPlanNo;   //??﹞????????“?????㊣???∫??
	BYTE    byPlayPlanName[NAME_LEN]; //??﹞?????????
	BYTE    byRes2[32];
} NET_DVR_PLAYPLAN_CFG, *LPNET_DVR_PLAYPLAN_CFG;
typedef struct tagNET_DVR_WINDOW_PLAYPLAN_CFG
{
	DWORD dwSize;
	BYTE byEnable;    //??﹞???????﹞??????? 0-?????? !0-????
	BYTE byRes[3];
	DWORD dwPlayPlanNo;   //??﹞???????
	BYTE byRes2[32];
} NET_DVR_WINDOW_PLAYPLAN_CFG, *LPNET_DVR_WINDOW_PLAYPLAN_CFG;
typedef struct tagNET_DVR_DEV_PLAYCTRL
{
	DWORD   dwSize;
	BYTE    byControlType;  //?????角????1-????????2-????????3-??????﹞???4-??????﹞?????????﹞? 
	BYTE    byRes[131];
} NET_DVR_DEV_PLAYCTRL, *LPNET_DVR_DEV_PLAYCTRL;

typedef union tagNET_DVR_PLAYITEM_INFO
{
	struct   //??????﹞?
	{
		DWORD  dwPlayItem;   //??﹞???
		BYTE    byPlayItemName[NAME_LEN]; //??﹞???????
		BYTE    byRes2[8];
	} struPlayItem;
	struct  //??﹞???㊣赤
	{
		DWORD  dwPlaylistNo;  //??﹞???㊣赤??
		BYTE    byPlaylistName[NAME_LEN]; //??﹞???㊣赤????
		WORD   wPlayIndex;    //??﹞?????
		BYTE    byPlayType;    //??﹞???㊣赤????????﹞??角?? 1-???? 2-????  
		BYTE    byRes[3];
		DWORD  dwPlayItem;   //??﹞???    
		BYTE    byPlayItemName[NAME_LEN]; //??﹞???????
		BYTE    byRes2[16];
	} struPlaylistItem;
	struct  //??﹞???????
	{
		DWORD  dwPlayPlanNo;  //??﹞??????? 
		NET_DVR_TIME_SEGMENT struTime;      //??????﹞??㊣????
		BYTE    byPlayType;  //??﹞???????????﹞??角??  1-???? 2-???? 3-??﹞???㊣赤
		BYTE    byRes[3];
		DWORD  dwPlaylistNo;  //??﹞???㊣赤??
		BYTE    byPlaylistName[NAME_LEN]; //??﹞???㊣赤????
		DWORD  dwPlayItem;   //??﹞???
		BYTE    byPlayItemName[NAME_LEN]; //??﹞???????
		WORD   wPlayIndex;    //??﹞?????
		BYTE    byRes2[18];
	} struPlayPlanItem;
}NET_DVR_PLAYITEM_INFO, *LPNET_DVR_PLAYITEM_INFO;
typedef struct tagNET_DVR_PLAYING_INFO
{
	DWORD    dwSize;
	BYTE    byPlayWay;   //??﹞?﹞????? 1-??????﹞?  2-??﹞???㊣赤  3-??﹞????? 4-???????? 5-???㊣????
	BYTE    byCurPlayType; //??????﹞??????角???? 1-???? 2-???????????????????㊣?????㊣???∫
	BYTE    byPlayState;    //??﹞?℅?????1-??????﹞???2-??﹞???????3-??﹞?????
	BYTE    byAudioState;    //????????℅?????0-????1-??
	NET_DVR_PLAYITEM_INFO  struPlayItemInfo;  //??﹞???????
	BYTE    byRes2[16];
} NET_DVR_PLAYING_INFO, *LPNET_DVR_PLAYING_INFO;

typedef struct tagNET_DVR_ONLINEUSER_COND //?????芍??
{
	DWORD   dwSize;
	DWORD  dwChannel;//?“?????“?∼????????1??
	BYTE   byRes[128];
}NET_DVR_ONLINEUSER_COND, *LPNET_DVR_ONLINEUSER_COND;

typedef struct tagNET_DVR_ONLINEUSER_CFG //?????芍??
{
	DWORD   dwSize;
	BYTE   byID;//???∫?辰????
	BYTE   byUserType;//???∫?角?? 0-???“???∫??1-??℅‾?㊣??2-???????∫
	BYTE   byDataType;//????℅????角??:0-?足??????1-??????2-?芍??
	BYTE   byRes;
	NET_DVR_IPADDR  struIpAddr;//IP???﹞    
	NET_DVR_TIME_V30  struLoginTime;//?????㊣??
	char   szUserName[NAME_LEN/*32*/];//???∫??
	BYTE   byRes1[128];
}NET_DVR_ONLINEUSER_CFG, *LPNET_DVR_ONLINEUSER_CFG;

//????????℅???
typedef    struct tagNET_DVR_STORAGE_DETECTION
{
	DWORD    dwSize;//?芍?????車??
	BYTE    byHealthState;//????℅???0-??????1-????2-??????3-????
	BYTE    bySDCardState;//SDcard℅??? 0-??????1-????,2-????,3-?????“
	WORD    wAbnormalPowerLoss;//?足????????
	WORD    wBadBlocks;//???谷??
	BYTE    byRemainingLife; //SD?“???角???邦; 0~100%
	BYTE    byRes[125];
}NET_DVR_STORAGE_DETECTION, *LPNET_DVR_STORAGE_DETECTION;

//?????????足??㊣“??????
typedef struct tagNET_DVR_STORAGE_DETECTION_ALARM
{
	DWORD   dwSize;
	DWORD     dwRelativeTime; //?角???㊣㊣那
	DWORD    dwAbsTime; //?????㊣㊣那
	NET_VCA_DEV_INFO  struDevInfo;   //?∼???豕㊣?????
	DWORD   dwCardID;   //?“ID
	WORD    wAbnormalPowerLoss;//?足????????
	WORD    wBadBlocks;//???谷??
	BYTE    byHealthState;//????℅???0-??????1-????2-??????3-????
	BYTE    byRes1[3];
	float   fResidualLife; //SD?“ ?∟?????角???邦
	BYTE    byRes[118];
}NET_DVR_STORAGE_DETECTION_ALARM, *LPNET_DVR_STORAGE_DETECTION_ALARM;


//?????足??????????????
typedef    struct tagNET_DVR_STORAGE_RWLOCK
{
	DWORD   dwSize;//?芍?????車??
	BYTE    byEnabled;//???? 0-??㊣???1-????
	BYTE    byRes[3];
	char    szPassWD[PASSWD_LEN/*16*/]; //????????????
	char    szOriginalPassWD[PASSWD_LEN/*16*/]; //????????
	BYTE    byRes1[128];
}NET_DVR_STORAGE_RWLOCK, *LPNET_DVR_STORAGE_RWLOCK;

//?????足????????????
typedef    struct tagNET_DVR_STORAGE_UNLOCK
{
	DWORD   dwSize;//?芍?????車??
	char    szPassWD[PASSWD_LEN/*16*/]; //????
	BYTE    byRes1[128];
}NET_DVR_STORAGE_UNLOCK, *LPNET_DVR_STORAGE_UNLOCK;


typedef    struct tagNET_DVR_PTZTRACKSTATUS
{
	DWORD        dwSize;//?芍?????車??
	BYTE          byID;//?????豕㊣???ID (℅???byLinkageType﹞?0???㊣?辰?迆?∫)
	BYTE      byLinkageType;//??????℅‾0-????????1-?????辰?迆?豕㊣??迆℅?
	BYTE      byRes[254];
}NET_DVR_PTZTRACKSTATUS, *LPNET_DVR_PTZTRACKSTATUS;

#define MAX_PROXY_COUNT 32

typedef struct tagNET_DVR_SOCKS_PROXY_PARA
{
	BYTE  byIP[129];  //?迆?赤﹞????‾???﹞
	BYTE  byAuthType; //???∟﹞????????㊣??????????℅??? 
	WORD  wPort;      //?迆?赤﹞????‾????
	BYTE  byRes2[64]; //?????????????∟﹞?????㊣????豕??????㊣???℅?????????????
}NET_DVR_SOCKS_PROXY_PARA, *LPNET_DVR_SOCKS_PROXY_PARA;

typedef struct tagNET_DVR_SOCKS_PROXYS
{
	NET_DVR_SOCKS_PROXY_PARA struProxy[MAX_PROXY_COUNT];
}NET_DVR_SOCKS_PROXYS, *LPNET_DVR_SOCKS_PROXYS;

typedef struct tagNET_DVR_GET_FIGURE_COND
{
	DWORD                     dwLength;         //?芍???∟??
	DWORD                    dwChannel;         //?“??
	NET_DVR_TIME_V30        struTimePoint;    //?㊣????
	BYTE  byID[STREAM_ID_LEN/*32*/];      //ID????
	BYTE                      byRes[32];
}NET_DVR_GET_FIGURE_COND, *LPNET_DVR_GET_FIGURE_COND;

typedef struct tagNET_DVR_FIGURE_INFO
{
	DWORD   dwPicLen;     //?????∟??
	char     *pPicBuf;     //????????
}NET_DVR_FIGURE_INFO, *LPNET_DVR_FIGURE_INFO;

//???????角????
typedef    struct tagNET_DVR_MANUALRANGING_CFG
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞????????????角??0- ﹞???1- ??
	BYTE        byRes[127];
}NET_DVR_MANUALRANGING_CFG, *LPNET_DVR_MANUALRANGING_CFG;

typedef struct tagNET_DVR_VIDEO_INTERCOM_ALARM_CFG
{
	DWORD           dwSize;            //?芍?????車??
	BYTE           byDoorNotCloseAlarm;   //??﹞???????????㊣“????0-????????1-????
	BYTE            byRes[603];         //㊣???
}NET_DVR_VIDEO_INTERCOM_ALARM_CFG, *LPNET_DVR_VIDEO_INTERCOM_ALARM_CFG;

typedef struct tagNET_DVR_PACKET_INFO_EX
{
	WORD     wWidth;         //width
	WORD     wHeight;        //height
	DWORD    dwTimeStamp;    //lower time stamp
	DWORD    dwTimeStampHigh;//higher time stamp 
	DWORD    dwYear;            //year
	DWORD    dwMonth;         //month
	DWORD    dwDay;           //day
	DWORD    dwHour;          //hour
	DWORD    dwMinute;        //minute
	DWORD    dwSecond;        //second
	DWORD    dwMillisecond;   //millisecond
	DWORD    dwFrameNum;     //frame num
	DWORD    dwFrameRate;    //frame rate,?㊣????????0?㊣??0x80000002:㊣赤??1/2?????????赤????0x80000010??1/16????
	DWORD    dwFlag;         //flag E??㊣那??
	DWORD    dwFilePos;      //file pos
	DWORD     dwPacketType;    //Packet type:0 -file head??1 -video I frame??2- video B frame?? 3- video P frame?? 10- audio packet?? 11- private packet
	DWORD     dwPacketSize;   //packet size
	unsigned char*    pPacketBuffer;  //packet buffer
	BYTE     byRes1[4];
	DWORD    dwPacketMode;   //?辰∼邦﹞???:0-㊣?????1-FU_A?辰∼邦﹞???
	BYTE     byRes2[16];
	DWORD    dwReserved[6];    //reserved[0] ㊣赤???????????角?? 
							   //reserved[1] ㊣赤???????????????﹞????
							   //reserved[2] ㊣赤???????????????﹞????
							   //reserved[3] ㊣赤?????????????∟??
							   //reserved[4] ??????/∼邦???㊣??????\?㊣????
							   //reserved[5].??bit??㊣那????﹞?????P??????P??1????????P??0;     lizhonghu 20150203
}NET_DVR_PACKET_INFO_EX, *LPNET_DVR_PACKET_INFO_EX;

typedef BOOL(*DEV_WORK_STATE_CB)(void* pUserdata, int iUserID, LPNET_DVR_WORKSTATE_V40 lpWorkState);

typedef struct tagNetDVRCheckDevState
{
	DWORD                dwTimeout;      //?“?㊣?足???豕㊣??∟℅‾℅?????????ms????0?㊣??㊣赤????????????(30000)??℅???????1000
	DEV_WORK_STATE_CB    fnStateCB;
	void*                pUserData;
	BYTE                byRes[60];
}NET_DVR_CHECK_DEV_STATE, *LPNET_DVR_CHECK_DEV_STATE;

#define COURSE_NAME_LEN_128                128    //????????
#define INSTRUCTOR_NAME_LEN_64            64    //????????
#define MAX_UUID_LEN            64    //????????UUID

//?????????芍????
typedef    struct tagNET_DVR_COURSE_LIST_COND
{
	DWORD                    dwSize;
	NET_DVR_TIME_V30        struStartTime;   //?????????㊣??
	NET_DVR_TIME_V30        struEndTime;   //?????芍???㊣??
	BYTE                       byCourseName[COURSE_NAME_LEN_128];  //????????
	BYTE                       byInstructorName[INSTRUCTOR_NAME_LEN_64]; //????????
	BYTE                   byCourseType; //??㊣赤?角????0-??????1-????
	BYTE                    byRes[603];
}NET_DVR_COURSE_LIST_COND, *LPNET_DVR_COURSE_LIST_COND;

typedef struct  tagNET_DVR_COURSE_CFG
{
	DWORD            dwSize;
	NET_DVR_TIME_V30        struStartTime;   //?????????㊣??
	NET_DVR_TIME_V30        struEndTime;   //?????????㊣??
	BYTE            byCourseName[COURSE_NAME_LEN_128];
	BYTE            byInstructorName[INSTRUCTOR_NAME_LEN_64];
	BYTE            byCourseDescription[COURSE_DESCRIPTION_LEN /*256*/];
	BYTE            byRecUUID[MAX_UUID_LEN/*64*/];  //??????㊣赤UUID
	BYTE           byCourseType;//??㊣赤?角????0-??????1-??????㊣赤
	BYTE            byRes[303];
}NET_DVR_COURSE_CFG, *LPNET_DVR_COURSE_CFG;

typedef struct tagNET_DVR_RECORD_STATUS
{
	DWORD       dwSize;              //?芍?????車??
	BYTE        byRecUUID[MAX_UUID_LEN/*64*/];  //??????㊣赤UUID
	BYTE        byRecordStatus;         //????℅?????0-??????1-??㊣?,2-??????????3-????
	BYTE        byRes1[3];              //㊣???℅???
	DWORD       dwRecordingTime;      //???????㊣?∟????????????℅??車??12*60*60
	BYTE        byRes[596];              //㊣???℅??? 
}NET_DVR_RECORD_STATUS, *LPNET_DVR_RECORD_STATUS;

typedef struct tagNET_DVR_MANUAL_CURRICULUM_CFG
{
	DWORD       dwSize;              //?芍?????車??
	BYTE        byRecUUID[MAX_UUID_LEN/*64*/];  //??????㊣赤UUID
	BYTE           byCourseName[COURSE_NAME_LEN_128];  //????????
	BYTE           byInstructorName[INSTRUCTOR_NAME_LEN_64]; //????????
	BYTE        byCourseDescription[COURSE_DESCRIPTION_LEN /*256*/];
	BYTE        byCmdType;            //?邦????0-???????? 1-?芍?? 2-???? 3-????,4-??????㊣???5-?芍????㊣?
	BYTE         byRes[303];              //㊣???℅???
}NET_DVR_MANUAL_CURRICULUM_CFG, *LPNET_DVR_MANUAL_CURRICULUM_CFG;

typedef struct tagNET_DVR_IMAGE_DIFF_DETECTION_CFG
{
	DWORD       dwSize;              //?芍?????車??
	NET_VCA_POLYGON struRegion;    //???辰﹞??∫
	BYTE       byEnabled;    //??﹞???????0-????????1-????
	BYTE        byThreshold;             //????[0,100]
	BYTE         bySensitivity;        //?谷???? [0,100]
	BYTE        byVideoInputType;  //???????????角????0-℅?????1-HDMI??2-VGA
	BYTE     byRes[300];              //㊣???℅??? 
}NET_DVR_IMAGE_DIFF_DETECTION_CFG, *LPNET_DVR_IMAGE_DIFF_DETECTION_CFG;

typedef struct tagNET_DVR_RECORDING_PUBLISH_FILE_COND
{
	DWORD            dwSize;
	DWORD            dwChannel;
	BYTE             byFileID[MAX_ID_LEN_128/*128*/];  //﹞???????ID
	BYTE             byRes[300];
}NET_DVR_RECORDING_PUBLISH_FILE_COND, *LPNET_DVR_RECORDING_PUBLISH_FILE_COND;

typedef struct tagNET_DVR_RECORDING_PUBLISH_FILE_INFO
{
	DWORD            dwSize;
	NET_DVR_TIME_V30        struStartTime;   //?????????㊣??
	NET_DVR_TIME_V30        struEndTime;   //?????????㊣??
	BYTE            byCourseName[COURSE_NAME_LEN_128];
	BYTE            byInstructorName[INSTRUCTOR_NAME_LEN_64];
	BYTE            byCourseDescription[COURSE_DESCRIPTION_LEN /*256*/];
	BYTE     byRes[300];              //㊣???℅??? 
}NET_DVR_RECORDING_PUBLISH_FILE_INFO, *LPNET_DVR_RECORDING_PUBLISH_FILE_INFO;

//????????
typedef struct tagNET_DVR_SCREEN_POINT
{
	WORD wX; //X℅?㊣那
	WORD wY; //Y℅?㊣那
}NET_DVR_SCREEN_POINT, *LPNET_DVR_SCREEN_POINT;

typedef struct tagNET_DVR_MOUSE_PARAM
{
	BYTE byMouseEvent;                   //?車㊣那??????1-?車㊣那℅車?邦∼?????2-?車㊣那℅車?邦??????3-?車㊣那???邦∼?????4-?車㊣那???邦??????
										 //5-?車㊣那??????6-?車㊣那℅車?邦???‾??7-?車㊣那℅車?邦???‾??8-?車㊣那???邦???‾??9-????∼?????
										 //10-??????????11-?????辰????12-?????辰??
	BYTE byRes1[3];
	NET_DVR_SCREEN_POINT struMousePoint; //?車㊣那℅?㊣那????
	BYTE byRes2[8];
}NET_DVR_MOUSE_PARAM, *LPNET_DVR_MOUSE_PARAM;

typedef struct tagNET_DVR_MARK_PARAM
{
	BYTE byMarkEvent;           //㊣那℅???????1-????㊣那℅???2-㊣那℅??芍????3-?邦??㊣那℅??∟??℅???
	BYTE byMarkTool;           //㊣那℅??∟????0-???∫??1-??㊣???2-???∟????㊣那℅???????1?㊣???∫
	BYTE byLineWidth;          //??????????0-???∫??1-????2-????3-????㊣那℅???????1?㊣???∫
	BYTE byMouseEvent;         //?車㊣那??????㊣那℅???????1?㊣???∫??0-???∫??1-?車㊣那℅車?邦∼?????2-?車㊣那℅車?邦??????3-?車㊣那????
	NET_DVR_RGB_COLOR struColor;    //㊣那℅???????㊣那℅??∟??????㊣??㊣???∫
	NET_DVR_SCREEN_POINT struPoint; //㊣那℅?℅?㊣那????
	BYTE byRes[4];
}NET_DVR_MARK_PARAM, *LPNET_DVR_MARK_PARAM;

typedef struct tagNET_DVR_KEYBOARD_PARM
{
	DWORD dwKeyValue; //﹞???????ASCII㊣赤????????????∼??邦???﹞?“
	BYTE  byRes[12];
}NET_DVR_KEYBOARD_PARAM, *LPNET_DVR_KEYBOARD_PARAM;

typedef struct tagNET_DVR_PPT_PARAM
{
	BYTE  byPPTAction;              //PPT??℅‾??1-?辰??﹞?????2-????﹞?????3-????????????4-????????????
									//5-????????6-????????7-????X????8-?∟??㊣?????9-?∟??㊣?????10-?∟??㊣?????
	BYTE  byRes1[3];
	NET_DVR_SCREEN_POINT struPoint; //?∟??㊣?℅?㊣那??????PPT??℅‾??10?㊣???∫
	DWORD dwPPTNo;                  //PPT????????PPT??℅‾??7?㊣???∫
	BYTE  byRes2[4];
}NET_DVR_PPT_PARAM, *LPNET_DVR_PPT_PARAM;

typedef struct tagNET_DVR_REMOTE_CTRL_PARAM
{
	BYTE byRemoteCtrlCmd;   //?????????邦????1-?????????∼????2-??㊣??????㊣?∼?∼????3-?辰????????4-??㊣???????5-??????????6-???迆??7-????℅?????8-㊣赤??
	BYTE byRes1[3];
	DWORD dwCtrlParam;    //??℅‾???????㊣byRemoteCtrlCmd??3??4??5?㊣??㊣赤????℅‾???????‾?????㊣byRemoteCtrlCmd??8?㊣㊣赤??㊣赤???角????0-???∫??1-㊣赤??
	BYTE byRes2[8];
}NET_DVR_REMOTE_CTRL_PARAM, *LPNET_DVR_REMOTE_CTRL_PARAM;

typedef struct tagNET_DVR_SPOTLIGHT_PARAM
{
	BYTE  byCmd;                    //???????邦????0-??㊣?????????1-????????????2-??????????????
	BYTE  byRes1[3];
	NET_DVR_SCREEN_POINT struPoint; //????????????℅?㊣那?????????????????㊣???∫
	DWORD dwRadius;                 //??????∼???
	BYTE  byRes2[4];
} NET_DVR_SPOTLIGHT_PARAM, *LPNET_DVR_SPOTLIGHT_PARAM;

typedef struct tagNET_DVR_TOUCHPAD_PARAM
{
	BYTE byMouseEvent;  //?車㊣那??????1-?車㊣那℅車?邦∼?????2-?車㊣那℅車?邦??????3-?車㊣那???邦∼?????4-?車㊣那???邦??????
						//5-?車㊣那??????6-?車㊣那℅車?邦???‾??7-?車㊣那℅車?邦???‾??8-?車㊣那???邦???‾??9-????∼?????
						//10-??????????11-?????辰????12-?????辰??
	BYTE byRes1[3];
	int iXDisplacement; //X?芍??????????㊣赤???辰????????????㊣赤???辰℅車???????車㊣那?????㊣???∫
	int iYDisplacement; //Y?芍??????????㊣赤???辰????????????㊣赤???辰?????????車㊣那?????㊣???∫
	BYTE byRes2[4];
}NET_DVR_TOUCHPAD_PARAM, *LPNET_DVR_TOUCHPAD_PARAM;

typedef struct tagNET_DVR_MEDIA_LIST_PARAM
{
	BYTE byOperateCmd;     //??℅‾?邦????1-??????????????2-??????????????3-????ppt??????4-??㊣??角??????????
	BYTE byRes[15];
}NET_DVR_MEDIA_LIST_PARAM, *LPNET_DVR_MEDIA_LIST_PARAM;

typedef union tagNET_DVR_SCREEN_CTRL_PARAM
{
	NET_DVR_MOUSE_PARAM struMouseParam;             //?車㊣那???????邦???角????1?㊣???∫
	NET_DVR_MARK_PARAM struMarkParam;               //㊣那℅????????邦???角????2?㊣???∫
	NET_DVR_KEYBOARD_PARAM struKeyboardInfo;        //?邦?????????邦???角????3?㊣???∫
	NET_DVR_PPT_PARAM struPPTParam;                 //PPT???????邦???角????4?㊣???∫
	NET_DVR_REMOTE_CTRL_PARAM struRemoteCtrlParam;  //??????℅‾???????邦???角????5?㊣???∫
	NET_DVR_SPOTLIGHT_PARAM struSpotLight;          //?????????????邦???角????6?㊣???∫
	NET_DVR_TOUCHPAD_PARAM struTouchPadParam;        //????∼????????邦????????7?㊣???∫
	NET_DVR_MEDIA_LIST_PARAM struMediaListParam;    //?角???????????邦???角????8?㊣???∫
	BYTE byRes[16];
}NET_DVR_SCREEN_CTRL_PARAM, *LPNET_DVR_SCREEN_CTRL_PARAM;

typedef struct tagNET_DVR_SCREEN_CTRL_CMD
{
	DWORD dwSize;
	BYTE  byCmdType;                               //?邦???角????1-?車㊣那??2-㊣那℅???3-?邦????4-PPT??5-??????℅‾??6-????????7-????∼???8-?????角????????
	BYTE  byRes1[3];
	NET_DVR_SCREEN_CTRL_PARAM struScreenCtrlParam; //????????????
}NET_DVR_SCREEN_CTRL_CMD, *LPNET_DVR_SCREEN_CTRL_CMD;

typedef struct tagNET_DVR_FILE_RESPONSE_PARAM
{
	BYTE byFileState;       //??????℅‾℅?????1-????????????2-?辰???????∫∼???3-?辰??????????
	BYTE byRes1[3];
	DWORD dwErrorFileIndex; //??????℅‾???????‾????
	BYTE byRes2[24];
} NET_DVR_FILE_RESPONSE_PARAM, *LPNET_DVR_FILE_RESPONSE_PARAM;

typedef struct tagNET_DVR_PPT_RESPONSE_PARAM
{
	BYTE  byCurrentState;   //?㊣?∼PPT℅?????1 - ????﹞?????2 - ﹞?????????3 - PPT????㊣???4 - ppt??㊣??∟?辰?迆?迆?∟?????∫∼???5 - ?辰??﹞?????????6 - ?辰??﹞????∫∼???7 - ppt??????????8 - ???????迆???∫∼???9 - ???????迆??????
	BYTE  byRes1[3];
	DWORD dwCurrentPage;    //PPT????????PPT℅?????1,7,8?㊣???∫
	DWORD dwFileIndex;        //PPT?????‾????
	DWORD dwTotalPageNum;    //PPT℅???????PPT℅?????5?㊣???∫
	BYTE  byRes2[16];
}NET_DVR_PPT_RESPONSE_PARAM, *LPNET_DVR_PPT_RESPONSE_PARAM;

typedef union tagNET_DVR_SCREEN_RESPONSE_PARAM
{
	BYTE byRes[32];
	NET_DVR_PPT_RESPONSE_PARAM  struPPTParam;  //PPT????
	NET_DVR_FILE_RESPONSE_PARAM    struFileParam; //??????℅‾?足??????
}NET_DVR_SCREEN_RESPONSE_PARAM, *LPNET_DVR_SCREEN_RESPONSE_PARAM;

typedef struct tagNET_DVR_SCREEN_RESPONSE_CMD
{
	DWORD dwSize;
	BYTE  byResponseCmd; //?????足???邦???角????1-PPT??2-??????℅‾
	BYTE  byRes1[3];
	NET_DVR_SCREEN_RESPONSE_PARAM struResonseParam; //?????足??????
	BYTE  byRes2[16];
}NET_DVR_SCREEN_RESPONSE_CMD, *LPNET_DVR_SCREEN_RESPONSE_CMD;

typedef struct tagNET_DVR_SCREEN_FILE_COND
{
	DWORD dwSize;
	BYTE  byFileType; //?????角????1-??????2-??????3-??????0xff-?迄???????角??
	BYTE  byRes[127];
}NET_DVR_SCREEN_FILE_COND, *LPNET_DVR_SCREEN_FILE_COND;

typedef struct tagNET_DVR_SCREEN_FILE_INFO
{
	DWORD dwSize;
	DWORD dwFileIndex;     //?????‾?????????“??
	BYTE  byFileType;      //?????角????1-??????2-??????3-??????4-????
	BYTE  byPictureFormat; //???????????????角?????????㊣???∫??1-bmp,2-jpeg,3-png,4-swf,5-gif 
	BYTE  byVideoFormat;   //???????????????角?????????㊣???∫??1-avi,2-wmv,3-mp4,4-flv,5-vod,6-mkv,7-rmvb
	BYTE  byDocumentFormat; //??????????0-ppt??1-txt??2-doc??3-xls???????角????3?㊣???∫
	BYTE  byFileName[NET_SDK_MAX_FILE_PATH]; //??????????
	DWORD dwFileSize;     //?????車??????????℅???
	DWORD dwPPTPage;      //ppt???????????㊣???????辰????PPT?????????㊣???∫
	BYTE byOtherFileFormat[8]; //?????角???????????????“????.dat??.dll???????????角????4?㊣???∫
	BYTE byRes1[56];
}NET_DVR_SCREEN_FILE_INFO, *LPNET_DVR_SCREEN_FILE_INFO;

typedef struct tagNET_DVR_SCREEN_CONFIG
{
	DWORD dwSize;
	BYTE  byVolume;             //??????0-100
	BYTE  byContrast;           //??㊣?????0-100
	BYTE  byBrightness;         //??????0-100
	BYTE  byScreenShowEnabled;  //??????????????0-????﹞?0-??
	BYTE  byScreenLocked;       //???“??????0-??????﹞?0-???“
	BYTE  byBlackScreenEnabled; //??????????0-??????????﹞?0-????
	BYTE  byRes[30];
}NET_DVR_SCREEN_CONFIG, *LPNET_DVR_SCREEN_CONFIG;

typedef struct tagNET_DVR_SCREEM_FILE_UPLOAD_PARAM
{
	DWORD dwSize;
	BYTE  byFileType;      //?????角????1-??????2-??????3-??????4-????
	BYTE  byPictureFormat; //??????????1-BMP??2-JPEG??3-PNG??4-SWF??5-GIF???????角????1?㊣???∫
	BYTE  byVideoFormat;   //??????????1-AVI??2-WMV??3-MP4??4-FLV??5-VOD??6-MKV??7-RMVB???????角????2?㊣???∫
	BYTE  byDocumentFormat; //??????????0-ppt??1-txt??2-doc??3-xls???????角????3?㊣???∫
	BYTE  byFileName[NET_SDK_MAX_FILE_PATH]; //????????
	BYTE  byOtherFileFormat[8]; //?????角???????????????“????.dat??.dll???????????角????4?㊣???∫
	BYTE  byRes1[56];
}NET_DVR_SCREEM_FILE_UPLOAD_PARAM, *LPNET_DVR_SCREEM_FILE_UPLOAD_PARAM;

typedef struct tagNET_DVR_SCREEM_FILE_DOWNLOAD_PARAM
{
	DWORD dwSize;
	DWORD dwFileIndex;  //?????‾??
	DWORD dwPPTPageNo;  //????PPT?????????㊣???∫????0㊣赤??????PPT㊣??赤????????㊣赤??PPT??????
	BYTE  byRes2[64];
}NET_DVR_SCREEM_FILE_DOWNLOAD_PARAM, *LPNET_DVR_SCREEM_FILE_DOWNLOAD_PARAM;

typedef struct tagNET_DVR_TV_SCREEN_COND
{
	DWORD  dwSize;//?芍???∟??
	DWORD    dwChannel;//?“????
	WORD    wTVScreenNo;//??????㊣角?? 0-??????????
	BYTE     byRes[62];     //㊣???
}NET_DVR_TV_SCREEN_COND, *LPNET_DVR_TV_SCREEN_COND;

typedef struct tagNET_DVR_TV_SCREEN_CFG
{
	DWORD    dwSize;//?芍???∟??
	DWORD    dwPicStayTime;//?????????㊣?? ?“0~255s??
	BYTE     byRes[256];     //㊣???
}NET_DVR_TV_SCREEN_CFG, *LPNET_DVR_TV_SCREEN_CFG;

//?????豕㊣?℅??????????????????芍????
typedef struct tagNET_DVR_BV_CALIB_COND
{
	DWORD  dwSize;  //?芍???∟??
	DWORD dwChannels;  //?“????
	BYTE  byRes[300]; //㊣???
}NET_DVR_BV_CALIB_COND, *LPNET_DVR_BV_CALIB_COND;

typedef struct tagNET_DVR_BV_CALIB_PIC
{
	DWORD  dwSize;  //?芍???∟??
	DWORD  dwPicID;
	DWORD dwPicLen1;//????1?∟??
	DWORD dwPicLen2;//????2?∟??
	char*   pPicBuffer1;//????????
	char*   pPicBuffer2;//????????
	BYTE  byRes[600]; //㊣???
}NET_DVR_BV_CALIB_PIC, *LPNET_DVR_BV_CALIB_PIC;


//????????????㊣那?“?芍??
typedef struct tagNET_DVR_BV_CALIB_PARAM
{
	DWORD  dwPicID;
	NET_VCA_POINT struPoint;//????℅?㊣那
	BYTE  byRes[32]; //㊣???
}NET_DVR_BV_CALIB_PARAM, *LPNET_DVR_BV_CALIB_PARAM;

typedef struct tagNET_DVR_BV_CALIB_INFO
{
	DWORD  dwSize;  //?芍???∟??
	DWORD  dwBVCalibNumber; //?迄㊣?????
	NET_DVR_BV_CALIB_PARAM struBVCalibParam[12];
	DWORD  dwHumanHeight;  //?????????赤????????cm
	DWORD  dwChannel;  //?“????
	BYTE  byRes[300]; //㊣???
}NET_DVR_BV_CALIB_INFO, *LPNET_DVR_BV_CALIB_INFO;

typedef struct tagNET_DVR_BV_CALIB_RESULT
{
	DWORD  dwSize;  //?芍???∟??
	DWORD dwCameraHeight;  //?????迆??????????cm
	float fPitchAngle;    //?????迆????????[0??, 60??], ?“?????? + 360??* 1000
	float fInclineAngle;   //?????迆?㊣????[-20??,20??]???“?????? + 360?? * 1000
	BYTE  byRes[300]; //㊣???
}NET_DVR_BV_CALIB_RESULT, *LPNET_DVR_BV_CALIB_RESULT;

//????????????????????
typedef struct tagNET_DVR_BV_HCORRECTION_COND
{
	DWORD  dwSize;  //?芍???∟??
	DWORD dwChannels;  //?“????
	DWORD  dwPicID;
	BYTE  byRes[300]; //㊣???
}NET_DVR_BV_HCORRECTION_COND, *LPNET_DVR_BV_HCORRECTION_COND;

typedef struct tagNET_DVR_BV_HCORRECTION_CFG
{
	DWORD  dwSize;  //?芍???∟??
	DWORD  dwHumanHeight;  //?????????赤????????cm
	BYTE  byRes[300]; //㊣???
}NET_DVR_BV_HCORRECTION_CFG, *LPNET_DVR_BV_HCORRECTION_CFG;


//????????????
typedef    struct tagNET_DVR_TMEVOICE_CFG
{
	DWORD      dwSize;//?芍?????車??
	BYTE       byVoiceSpeed;//???? 0~100
	BYTE       byVoicePitch; //???‾ 0~100
	BYTE       byVoiceVolum; //????0~100
	BYTE       byVoicePlateEnable;//??????????㊣“???? ,0~??㊣???1~????
								  /*?迄?????角??
								  3  = Xiaoyan (female, Chinese)
								  51 = Jiu Xu (male, Chinese)
								  52 = Duo Xu (male, Chinese)
								  53 = Xiaoping (female, Chinese)
								  54 = Donald Duck (male, Chinese)
								  55 = Baby Xu (child, Chinese)
								  */
	DWORD     dwVoiceRole; //?迄?????角
	char      sInfo[MAX_TMEVOICE_LEN/*64*/]; //??????㊣“?????“??????????????㊣“????????????
	char      sFileName[MAX_TMEVOICE_LEN/*64*/]; //??????????
	BYTE      byRes[64];
}NET_DVR_TMEVOICE_CFG, *LPNET_DVR_TMEVOICE_CFG;

//????∼?????????
typedef struct tagNET_DVR_INPUT_BOARD_CFG
{
	DWORD    dwSize;
	DWORD    dwSlotNo;           //????∼???????
	BYTE    byFullFrameEnable;  //??﹞?????????????????0-????????1-????
	BYTE    byRes[3];           //??℅???????
	BYTE    byRes1[64];         //㊣???
}NET_DVR_INPUT_BOARD_CFG, *LPNET_DVR_INPUT_BOARD_CFG;

typedef struct tagNET_DVR_INPUT_BOARD_CFG_LIST
{
	DWORD    dwSize;
	NET_DVR_INPUT_BOARD_CFG struBoardList[MAX_NUM_INPUT_BOARD]; //????∼???????????㊣赤
}NET_DVR_INPUT_BOARD_CFG_LIST, *LPNET_DVR_INPUT_BOARD_CFG_LIST;

/******************************∼???﹞?﹞??????角??????????∼??? begin******************************************/
//?????????豕㊣??????????芍????
typedef struct _NET_DVR_ENCRYPT_DEVICE_COND
{
	DWORD  dwSize;     //?芍?????車??
	DWORD  dwChannel;     //?“????
	BYTE   byAlgorithm; //??????﹞“??0-㊣?????1-RSA,2-SM2
	BYTE   byModelLen; //???∟??0-㊣?????1-1024??,2-2048??,3-256??
	BYTE   byCERTSaveLocation; //?∟?谷㊣??????????迄???豕㊣?﹞???????????????????0-㊣?????1-??????????(?“??USB?????豕㊣?),2-?豕㊣???
	BYTE   byRes[29];
}NET_DVR_ENCRYPT_DEVICE_COND, *LPNET_DVR_ENCRYPT_DEVICE_COND;
//?????????豕㊣??????芍????
typedef struct _NET_DVR_ENCRYPT_DEVICE_INFO
{
	DWORD  dwSize;     //?芍?????車??
	BYTE   byAlgorithm; //??????﹞“??0-㊣?????1-RSA,2-SM2
	BYTE   byModelLen; //???∟??0-㊣?????1-1024??,2-2048??,3-256??
	BYTE   byRes1[30];  //㊣???
	DWORD  dwPublicKeyLen;        //?????∟??
	char   szPublicKey[MAX_PUBLIC_KEY_LEN];       //???? 
	char   szChipSerialNumber[CHIP_SERIALNO_LEN];   //?????辰????
	char   szDeviceID[ENCRYPT_DEV_ID_LEN];     //?豕㊣?ID
	BYTE   byRes2[128];
}NET_DVR_ENCRYPT_DEVICE_INFO, *LPNET_DVR_ENCRYPT_DEVICE_INFO;
//?????∟?谷?????芍????
typedef struct _NET_DVR_ENCRYPT_CERT_PARAM
{
	DWORD dwSize;
	WORD wCertType; //?∟?谷?角????0-CA?迄?∟?谷??1-?????∟?谷,2-?????∟?谷??3- SM2??????????
	BYTE byRes1[2]; //㊣???
	DWORD dwCertLen; //?∟?谷?∟??
	BYTE  byRes2[32];
	char* pCertBuf;  //?∟?谷??????
}NET_DVR_ENCRYPT_CERT_PARAM, *LPNET_DVR_ENCRYPT_CERT_PARAM;
/******************************∼???﹞?﹞??????角??????????∼??? end******************************************/
#define MAX_RING_NAME_LEN_128                128    //?????????∟??
typedef struct tagNET_DVR_RING_UPLOAD_CFG
{
	DWORD        dwSize;
	DWORD        dwRingID; //?????辰????[1,8]
	BYTE     byRingName[MAX_RING_NAME_LEN_128/*128*/];   //????????
	DWORD     dwRingSize;   //?????車??
	BYTE        byRingType;   //?????角????0-wav
	BYTE        byRes[363];
}NET_DVR_RING_UPLOAD_CFG, *LPNET_DVR_RING_UPLOAD_CFG;

typedef struct tagNET_DVR_RING_SEARCH_COND
{
	DWORD        dwSize;
	DWORD        dwRingID; //?????辰???????????谷???????豕?????????“?豕??0??㊣赤???????辰???谷??
	BYTE        byRes[300];
}NET_DVR_RING_SEARCH_COND, *LPNET_DVR_RING_SEARCH_COND;

typedef struct tagNET_DVR_RING_SEARCH_CFG
{
	DWORD        dwSize;
	DWORD        dwRingID; //?????辰????[1,8]
	BYTE     byRingName[MAX_RING_NAME_LEN_128/*128*/];   //????????
	DWORD     dwRingSize;   //?????車??
	BYTE        byRingType;   //?????角????0-wav
	BYTE        byRes[303];
}NET_DVR_RING_SEARCH_CFG, *LPNET_DVR_RING_SEARCH_CFG;

//㊣“??????
typedef struct tagNET_DVR_ALARMCTRL_CFG
{
	DWORD   dwSize;
	BYTE    byListenPicUploadEnabled;//?角??????????????
	BYTE    byRes[259];
}NET_DVR_ALARMCTRL_CFG, *LPNET_DVR_ALARMCTRL_CFG;

typedef struct tagNET_DVR_VEHICLEFLOW_COND
{
	DWORD dwSize;
	DWORD dwChannel;//?“????
	BYTE   byLane;//????????1~6????,0???迄????????
	BYTE   byRes1[3];
	NET_DVR_TIME_V30 struStartTime;//?????㊣??
	NET_DVR_TIME_V30 struEndTime;//?芍???㊣??
	BYTE   byRes[256];
}NET_DVR_VEHICLEFLOW_COND, *LPNET_DVR_VEHICLEFLOW_COND;

typedef struct tagNET_DVR_VEHICLEFLOW_INFO
{
	DWORD dwVehicleFlowValue;//???????㊣?????????‾??
	BYTE   byRes[64];
}NET_DVR_VEHICLEFLOW_INFO, *LPNET_DVR_VEHICLEFLOW_INFO;

typedef struct tagNET_DVR_VEHICLEFLOW_CFG
{
	DWORD dwSize;
	NET_DVR_VEHICLEFLOW_INFO struVehFlow[MAX_VEHICLEFLOW_INFO/*24*/];
	BYTE   byRes[512];
}NET_DVR_VEHICLEFLOW_CFG, *LPNET_DVR_VEHICLEFLOW_CFG;

//?????芍????
typedef struct tagNET_DVR_IPADDR_FILTER_COND
{
	DWORD dwSize;
	DWORD dwChannel;//?“????
	BYTE  byRes[64];
}NET_DVR_IPADDR_FILTER_COND, *LPNET_DVR_IPADDR_FILTER_COND;

typedef    struct tagNET_DVR_TEMPHUMSENSOR
{
	DWORD      dwSize;//?芍?????∟??
	BYTE        byEnable;//???? 0-????1-??
	BYTE          byCtrlMode;//???????? 0-??????????????1-??????????????2-??????????????
	BYTE        byTemperatureValue;//??????????0~100??????,?㊣??????????0?辰??2?㊣?迆?∫
	BYTE        byHumidityValue;//??????????0~100???㊣??????????1?辰??2?㊣?迆?∫
	BYTE        byFanSwitch;//﹞?????????0-????1-??
	BYTE        byThermometryUnit;//????????: 0-???????“??????1-???????““H????2-??????(K)??
	BYTE        byRes[62];
}NET_DVR_TEMPHUMSENSOR, *LPNET_DVR_TEMPHUMSENSOR;

//?℅??????????
typedef struct tagNET_DVR_POSTRADARSPEED_CFG
{
	DWORD   dwSize;//?芍?????車??
	BYTE    byLaneType; //???﹞?角????0~??????,1~???????﹞,2~?????足???﹞,0xff~???????﹞
	BYTE    byRes1[3];
	DWORD   dwInterval; //????℅???????????????ms
	DWORD   dwSignSpeed;//㊣那??????(????)??????km/h
	DWORD   dwSpeedLimit;//??????(????)??????km/h
	DWORD   dwBigCarSignSpeed;//㊣那??????(?車??)??????km/h
	DWORD   dwBigCarSpeedLimit;//???????“?車??????????km/h
	DWORD   dwLowSpeedLimit;// ????????????????km/h
	DWORD   dwBigCarLowSpeedLimit;// ?車??????????????km/h
	BYTE    byCheckPostEnabled; //?????“??℅???
	BYTE    byOverSpeedEnabled; //????????℅???
	BYTE    byRes[246];
}NET_DVR_POSTRADARSPEED_CFG, *LPNET_DVR_POSTRADARSPEED_CFG;

//?℅??????????
typedef struct tagNET_DVR_POSTRADARPARAM_CFG
{
	DWORD   dwSize;//?芍?????車??
	BYTE    bySoftWareVersion[32];//?赤??∼?㊣??? ????????
	BYTE    byID; //??????
	BYTE    byWorkMode; //?∟℅‾??????0~????,1~???﹞,2~????,3~??????????,4~????,0xff~????
	BYTE    bySpeedType; //??????????0~??℅???,1~??℅???,2~??℅???,0xff~????
	BYTE    byDirectionFilter; //﹞??辰??????0~??????,1~???????辰,2~???????辰
	DWORD   dwAngleCorrect;//????????[0,70]
	DWORD   dwSensitivity;// ?谷????[11,240]
	DWORD   dwSpeedLowLimit;// ????????[1,150km/h]
	DWORD   dwTrigDistance;// ??﹞??角??[0,40m]
	BYTE    byRes[256];
}NET_DVR_POSTRADARPARAM_CFG, *LPNET_DVR_POSTRADARPARAM_CFG;

typedef struct tagNET_DVR_CLOUD_URL_COND
{
	DWORD   dwSize;
	BYTE    byType;     //???角??0-㊣?????1- OneDrive  2-GoogleDrive 3-DropBox
	BYTE    byRes[63];
}NET_DVR_CLOUD_URL_COND, *LPNET_DVR_CLOUD_URL_COND;

typedef struct tagNET_DVR_CLOUD_URL
{
	DWORD   dwSize;
	char    szURL[256]; //??????URL
	BYTE    byRes[256];
}NET_DVR_CLOUD_URL, *LPNET_DVR_CLOUD_URL;

typedef struct tagNET_DVR_CLOUD_CFG
{
	DWORD    dwSize;
	BYTE    byEnable;    //0-????????1-????
	BYTE    byType;        //???角??0-㊣?????1- OneDrive  2-GoogleDrive 3-DropBox
	BYTE    byStatus;    //℅????????? 0-㊣??? 1-???? 2-??????
	BYTE    byRes1;
	char    szAuthCode[CODE_LEN]; //???“??
	char    szAlias[ALIAS_LEN];    //㊣?????????
	INT64    i64TotalCapability;            //℅???????????????????MB
	INT64    i64UsedSpace;                //??????????????????????MB
	BYTE    byRes2[256];
}NET_DVR_CLOUD_CFG, *LPNET_DVR_CLOUD_CFG;

typedef struct tagNET_DVR_CLOUD_UPLOADSTRATEGY_COND
{
	DWORD    dwSize;
	DWORD    dwChannel;    //?“????
	BYTE    byRes[254];    //???????????‾ID℅?㊣???
}NET_DVR_CLOUD_UPLOADSTRATEGY_COND, *LPNET_DVR_CLOUD_UPLOADSTRATEGY_COND;

typedef struct tagNET_DVR_CLOUD_UPLOADSTRATEGY
{
	DWORD      dwSize;
	BYTE    byStrategyType;    //?????角??0-????????1-??????2-????
	BYTE    byRes1[3];
	DWORD    dwRecordType;    //?????角??byStrategyType ??1?㊣???∫??∼???㊣赤??
							  /*0x00: ??????*/
							  /*0x01: ????????*/
							  /*0x02: ?????足??*/
							  /*0x04: ??????㊣“???角??*/
							  /*0x08: ?????角??*/
	BYTE    byRes[256];
}NET_DVR_CLOUD_UPLOADSTRATEGY, *LPNET_DVR_CLOUD_UPLOADSTRATEGY;

//?????那?????足?谷????????
typedef  struct tagNET_DVR_RECORD_CHECK_COND
{
	DWORD    dwSize;
	NET_DVR_STREAM_INFO    struStreamInfo;
	BYTE   byCheckType;        //?足??﹞???,0--??????﹞??那??,1--??????﹞??那??&?㊣?∫???????????㊣??
	BYTE   byRes1[3];
	NET_DVR_TIME_EX struBeginTime;    //?足?????????????㊣??
	NET_DVR_TIME_EX struEndTime;    //?足?????????芍???㊣??
	BYTE   byRes[128];
}NET_DVR_RECORD_CHECK_COND, *LPNET_DVR_RECORD_CHECK_COND;

//?????那?????足?谷?芍??
typedef  struct tagNET_DVR_RECORD_CHECK_RET
{
	DWORD    dwSize;
	BYTE   byRecordNotComplete;    //??????﹞??那????0--?那??,1--???那??
	BYTE   byRes1[3];
	NET_DVR_TIME_EX struBeginTime;    //?㊣?∫???????????㊣????byCheckType??byRecordNotComplete??????1?㊣???∫
	NET_DVR_TIME_EX struEndTime;    //?㊣?∫???????芍???㊣????byCheckType??byRecordNotComplete??????1?㊣???∫
	BYTE   byRes[128];
}NET_DVR_RECORD_CHECK_RET, *LPNET_DVR_RECORD_CHECK_RET;

//?赤??????????????????
typedef  struct tagNET_DVR_ADD_RECORD_PASSBACK_MANUAL_COND
{
	DWORD    dwSize;
	NET_DVR_STREAM_INFO    struStreamInfo;
	BYTE   byRes[128];
}NET_DVR_ADD_RECORD_PASSBACK_MANUAL_COND, *LPNET_DVR_ADD_RECORD_PASSBACK_MANUAL_COND;

//?赤??????????????????
typedef  struct tagNET_DVR_ADD_RECORD_PASSBACK_MANUAL_CFG
{
	DWORD    dwSize;
	NET_DVR_TIME_EX struBeginTime;    //???????????????㊣??
	NET_DVR_TIME_EX struEndTime;    //???????????芍???㊣??
	BYTE   byRes[128];
}NET_DVR_ADD_RECORD_PASSBACK_MANUAL_CFG, *LPNET_DVR_ADD_RECORD_PASSBACK_MANUAL_CFG;

//????????????
typedef  struct tagNET_DVR_RECORD_PASSBACK_TASK_CFG
{
	DWORD    dwSize;
	DWORD dwTaskID;        //????ID
	BYTE   byRes[160];
}NET_DVR_RECORD_PASSBACK_TASK_CFG, *LPNET_DVR_RECORD_PASSBACK_TASK_CFG;

//?????迄??????????????????????
typedef struct tagNET_DVR_RECORD_PASSBACK_MANUAL_COND
{
	DWORD    dwSize;
	BYTE    byType;     //????﹞???,0--???????????角??????1--?迄???‾ID???????角????, 2--??????????????3--?迄???‾ID??????????4???迄??????ID????????
	BYTE    byTimeSegmentQuety; //??﹞??????㊣??﹞??∫?谷????0-????????1-????
	BYTE    byRes1[2];  //㊣???
	NET_DVR_STREAM_INFO    struStreamInfo; //?‾id?????“72℅????????迄???‾ID???????角?????㊣???∫
	NET_DVR_TIME_EX struBeginTime;      //?谷???????㊣????byTimeSegmentQuety?????㊣???∫
	NET_DVR_TIME_EX struEndTime;        //?谷???芍???㊣????byTimeSegmentQuety?????㊣???∫
	DWORD dwTaskID;        //????ID, byType????4?㊣???∫
	BYTE    byRes[108];                //㊣???
}NET_DVR_RECORD_PASSBACK_MANUAL_COND, *LPNET_DVR_RECORD_PASSBACK_MANUAL_COND;

//?????迄??????????????????
typedef struct tagNET_DVR_RECORD_PASSBACK_MANUAL_TASK_RET
{
	DWORD        dwSize;
	NET_DVR_STREAM_INFO    struStreamInfo;    //?‾id?????“72℅????????迄???‾ID???????角?????㊣???∫
	DWORD        dwTaskID;        //????ID
	NET_DVR_TIME_EX    struStartTime;  //???????????????㊣??
	NET_DVR_TIME_EX    struStopTime;   //???????????芍???㊣??
	BYTE        byTaskStatus;    //????℅?????0--????????1--????????2--??????, 3--??????, 4--?????∫∼?
	BYTE        byRes1[3];
	NET_DVR_TIME_EX    struExecuteStartTime;//?????????????????㊣????byTaskStatus??1??2???∫
	NET_DVR_TIME_EX    struExecuteStopTime;//?????????????芍???㊣????byTaskStatus??2???∫
	BYTE        byRes[128];        //㊣???
}NET_DVR_RECORD_PASSBACK_MANUAL_TASK_RET, *LPNET_DVR_RECORD_PASSBACK_MANUAL_TASK_RET;

//????????????????????
typedef struct tagNET_DVR_RECORD_PASSBACK_MANUAL_CTRL
{
	DWORD    dwSize;
	BYTE    byControlType;    //????﹞???,0--?????迄????????????1--?????迄??????????
	BYTE    byRes[131];        //㊣???
}NET_DVR_RECORD_PASSBACK_MANUAL_CTRL, *LPNET_DVR_RECORD_PASSBACK_MANUAL_CTRL;

//????????????????????
typedef struct tagNET_DVR_DEL_RECORD_PASSBACK_MANUAL_COND
{
	DWORD    dwSize;
	BYTE    byDelType;    //????﹞???,0--?迄??????ID??????1--?迄???‾ID??????????2--????????????
	BYTE    byRes[131];    //㊣???
}NET_DVR_DEL_RECORD_PASSBACK_MANUAL_COND, *LPNET_DVR_DEL_RECORD_PASSBACK_MANUAL_COND;

//????????????????????
typedef struct tagNET_DVR_DEL_RECORD_PASSBACK_MANUAL_CFG
{
	DWORD    dwSize;
	DWORD    dwTaskID;    //????????????ID???迄??????ID?????????㊣???∫
	NET_DVR_STREAM_INFO    struStreamInfo;    //?‾id?????“72℅????????迄???‾ID?????????㊣???∫
	BYTE    byRes[128];    //㊣???
}NET_DVR_DEL_RECORD_PASSBACK_MANUAL_CFG, *LPNET_DVR_DEL_RECORD_PASSBACK_MANUAL_CFG;

typedef struct tagNET_DVR_PASSBACK_DAY
{
	BYTE    byAllDay;    //??﹞????????足????
	BYTE    byRes[3];    //㊣???
}NET_DVR_PASSBACK_DAY, *LPNET_DVR_PASSBACK_DAY;

typedef struct tagNET_DVR_PASSBACK_SCHED
{
	NET_DVR_SCHEDTIME    struPassBackTime;    //?????????㊣???????????㊣??-?芍???㊣??
	BYTE        byRes[4];        //㊣???
}NET_DVR_PASSBACK_SCHED, *LPNET_DVR_PASSBACK_SCHED;

//????????????????
typedef struct tagNET_DVR_RECORD_PASSBACK_SCH_CFG_
{
	DWORD    dwSize;
	BYTE    byEnable;        //??﹞???????0--????????1--????
	BYTE    byPassBackWeek;    //??﹞?∼?????????0--﹞???1--????????1?㊣struPassBackDay??struPassBackSched???∫
	BYTE    byRes1[2];            //㊣???
	NET_DVR_PASSBACK_DAY    struPassBackDay[MAX_DAYS];  //???足????????
	NET_DVR_PASSBACK_SCHED    struPassBackSched[MAX_DAYS][MAX_TIMESEGMENT_V30];    //?㊣????????????
	BYTE   byRes[128];        //㊣???
}NET_DVR_RECORD_PASSBACK_SCH_CFG, *LPNET_DVR_RECORD_PASSBACK_SCH_CFG;

//?????迆?﹞????????????
typedef struct tagNET_DVR_RECORD_PASSBACK_HISTORY_PLAN_CFG_
{
	DWORD    dwSize;    //∼?㊣??﹞
	BYTE    byEnable;        //??﹞???????0--????????1--????
	BYTE    byRes1[3];            //㊣???
	NET_DVR_PASSBACK_DAY        struPassBackDay[MAX_DAYS];  //???足????????
	NET_DVR_PASSBACK_SCHED    struPassBackSched[MAX_DAYS][MAX_TIMESEGMENT_V30];    //?㊣????????????
	BYTE   byRes[256];        //㊣???
}NET_DVR_RECORD_PASSBACK_HISTORY_PLAN_CFG, *LPNET_DVR_RECORD_PASSBACK_HISTORY_PLAN_CFG;

//?????赤????
typedef struct tagNET_DVR_DEV_STORAGE_CFG
{
	DWORD    dwSize;
	DWORD    dwCapacityTotal;        //?豕㊣?????(CVR㊣赤???????赤)℅?????(????)??????MB
	DWORD    dwFreeSpaceTotal;        //?豕㊣?????(CVR㊣赤???????赤)???角℅?????(????)??????MB
	DWORD    dwLockedRecordSpace;    //?豕㊣???????????????(CVR㊣赤???????赤)℅?????(????)??????MB
	DWORD    dwUnLockedSpace;        //?豕㊣???????????(CVR㊣赤???????赤)℅?????(????),∼邦?????????????????角??????????????MB
	BYTE    byRes[512];                //㊣???
}NET_DVR_DEV_STORAGE_CFG, *LPNET_DVR_DEV_STORAGE_CFG;

//???邦????CVR?“V50??
typedef struct tagNET_DVR_ONE_KEY_CFG_V50
{
	DWORD   dwSize;//?芍?????車??
	BYTE    byRaidType;   //RAID?角????0-raid5,1-raid6,2-raid95?“Vraid??,3-?????????????????“raid
	BYTE    bySpareRaidProportion;   //??㊣?????raid?“?車??????㊣???,0--?“0:1??,1--?“1:1??,2--?“1:2??,3--?“1:3??,4--?“1:4??,5--?“1:5??,6--?“1:6??,7--?“6:1??,8--?“5:1??,9--?“4:1??,10--?“3:1??,11--?“2:1??
	BYTE    byPicQuota;   //?????赤㊣?????﹞??∫0~100
	BYTE    byRes[257];
}NET_DVR_ONE_KEY_CFG_V50, *LPNET_DVR_ONE_KEY_CFG_V50;

typedef struct tagNET_DVR_ONE_KEY_RESULT_V51
{
	DWORD   dwState;    //℅????????那??㊣?℅???℅?????
	BYTE    byProgress;   //??℅‾??????0~100
	BYTE    byRes[259];
}NET_DVR_ONE_KEY_RESULT_V51, *LPNET_DVR_ONE_KEY_RESULT_V51;

typedef struct tagNET_DVR_ONE_KEY_CFG_SAN_V50
{
	DWORD   dwSize;//?芍?????車??
	BYTE    byRaidType;   //RAID?角????0-raid5,1-raid6
	BYTE    bySpareRaidProportion;   //??㊣?????raid?“?車??????㊣???,0--?“0:1??,1--?“1:1??,2--?“1:2??,3--?“1:3??,4--?“1:4??,5--?“1:5??,6--?“1:6??,7--?“6:1??,8--?“5:1??,9--?“4:1??,10--?“3:1??,11--?“2:1??    
	BYTE    byRes[254];
}NET_DVR_ONE_KEY_CFG_SAN_V50, *LPNET_DVR_ONE_KEY_CFG_SAN_V50;

typedef    struct tagNET_DVR_REC_PASSBACK_BASIC_CFG
{
	DWORD        dwSize;//?芍?????車??
	DWORD     dwStartTime;  //?足???∼???????㊣???“??????﹞?????
	DWORD     dwStopTime;  //?足???∼???芍???㊣???“??????﹞?????
	WORD    wMaxTotalConcurrenceNum;   //??﹞??????﹞??????,????????㊣角???‾?﹞????????????????????
	WORD    wMaxDvrConcurrenceNum;     //???“DVR??﹞??????“????????
	BYTE    byRes[256];
}NET_DVR_REC_PASSBACK_BASIC_CFG, *LPNET_DVR_REC_PASSBACK_BASIC_CFG;

//?豕㊣??????????∫????
typedef struct tagNET_DVR_ONLINE_USER_INFO_
{
	DWORD    dwSize;
	WORD    wOnlineUserCount;    //?????豕㊣??????∫??
	BYTE   byRes[514];    //㊣???
}NET_DVR_ONLINE_USER_INFO, *LPNET_DVR_ONLINE_USER_INFO;

//?谷??????℅??車??????????
typedef struct tagNET_DVR_RECORD_SEGMENT_COND_
{
	DWORD        dwSize;
	NET_DVR_STREAM_INFO    struStreanInfo;
	NET_DVR_TIME_EX    struStartTime;  //?????㊣??
	NET_DVR_TIME_EX    struStopTime;    //?芍???㊣??
	BYTE        byRes[256];        //㊣???
}NET_DVR_RECORD_SEGMENT_COND, *LPNET_DVR_RECORD_SEGMENT_COND;

//?谷??????℅??車??﹞???????
typedef struct tagNET_DVR_RECORD_SEGMENT_RET_
{
	DWORD    dwSize;
	DWORD    dwRecordTotalSize;    //????℅??車????????MB
	BYTE    byRes[256];        //㊣???
}NET_DVR_RECORD_SEGMENT_RET, *LPNET_DVR_RECORD_SEGMENT_RET;
typedef struct tagNET_DVR_ACCESSORY_CARD_INFO
{
	DWORD   dwSize;
	BYTE    szAccessoryCardInfo[MAX_ACCESSORY_CARD/*256*/];//????∼?(????∼???????∼?)????????
	BYTE    byRes[512];
}NET_DVR_ACCESSORY_CARD_INFO, *LPNET_DVR_ACCESSORY_CARD_INFO;
//?谷???????????芍????
typedef struct tagNET_DVR_SEARCH_INFO_COND
{
	DWORD                   dwSize;
	BYTE                    byCommand;    //?谷????????0-??????1-?迄??
	BYTE                    byRes1[3];
	DWORD                   dwEmployeeNo; //?∟???“?谷????????????0-?????㊣???∫??
	BYTE                    byName[NAME_LEN];   //?????“?谷????????????0-?????㊣???∫??
	NET_DVR_TIME_V30        struStartTime;      //?????㊣??
	NET_DVR_TIME_V30        struEndTime;        //?芍???㊣??
	BYTE                    byRes[128];            //㊣???
}NET_DVR_SEARCH_INFO_COND, *LPNET_DVR_SEARCH_INFO_COND;

//??????∼角????
typedef struct tagNET_DVR_SCHEDULE_CHOICE
{
	BYTE                    byScheduleType;        //∼角???角????0-????∼角??1-???“∼角??2-?∟?㊣∼角
	BYTE                    byScheduleNo;       //∼角??㊣角??
	BYTE                    byRes[14];          //㊣???
}NET_DVR_SCHEDULE_CHOICE, *LPNET_DVR_SCHEDULE_CHOICE;
//  B20 V1.5
typedef struct tagNET_DVR_DISPINPUT_CFG
{
	DWORD  dwSize;
	DWORD  dwDispInputNo; //??????????
	DWORD  dwEDIDFileNo; //??????EDID????㊣角??
	BYTE   byRes[32];
}NET_DVR_DISPINPUT_CFG, *LPNET_DVR_DISPINPUT_CFG;

//??∼角?????芍????
typedef struct tagNET_DVR_SCHEDULE_PLAN
{
	DWORD                   dwSize;
	BYTE                    bySchedulePlanNo;   //??∼角????㊣角??,????﹞??∫?迄????????﹞???
	BYTE                    bySchedulePlanType; //??∼角?????角????0-??????1-????
	BYTE                    byEnable;           //????
	BYTE                    byRes1;
	NET_DVR_SCHEDULE_CHOICE struScheduleChoice[DAYS_A_WEEK];  //∼角??????
	NET_DVR_TIME_V30        struStartTime;      //?????㊣??
	NET_DVR_TIME_V30        struEndTime;        //?芍???㊣??
	BYTE                    byHolidayNo;        //????℅谷㊣角??
	BYTE                    byRes[63];          //㊣???
}NET_DVR_SCHEDULE_PLAN, *LPNET_DVR_SCHEDULE_PLAN;
typedef struct tagNET_DVR_DISPINPUT_CFG_LIST
{
	DWORD  dwSize;
	DWORD  dwDispInputNum; //﹞?????NET_DVR_DISPINPUT_CFG?芍????????
	LPNET_DVR_DISPINPUT_CFG lpstruBuffer; //??????????
	DWORD  dwBufferSize; //???????車??
	BYTE   byRes[32];
}NET_DVR_DISPINPUT_CFG_LIST, *LPNET_DVR_DISPINPUT_CFG_LIST;

//??????∼角????
typedef struct tagNET_DVR_SCHEDULE_INFO_CFG
{
	DWORD                  dwSize;
	DWORD                  dwEmployeeNo;        //?∟??
	BYTE                   byName[NAME_LEN];    //????
	BYTE                   byDepartmentName[NAME_LEN];   //????????
	NET_DVR_SCHEDULE_PLAN  struSchedulePlan;    //??∼角????
	BYTE                   byRes[128];          //㊣???
}NET_DVR_SCHEDULE_INFO_CFG, *LPNET_DVR_SCHEDULE_INFO_CFG;

//??????????℅?????
typedef struct tagNET_DVR_ATTENDANCE_SUMMARY_CFG
{
	DWORD                 dwSize;
	DWORD                 dwEmployeeNo; //?∟??
	BYTE                  byName[NAME_LEN];  //????
	BYTE                  byDepartmentName[NAME_LEN];  //????????
	DWORD                 dwWorkStandard;    //㊣那℅??∟℅‾?㊣???“﹞?????
	DWORD                 dwWorkActual; //?????∟℅‾?㊣???“﹞?????
	DWORD                 dwLateTimes;  //????????
	DWORD                 dwLateMinutes;//?????????㊣???“﹞?????
	DWORD                 dwLeaveEarlyTimes;    //????????
	DWORD                 dwLeaveEarlyMinutes;  //?????????㊣???“﹞?????
	DWORD                 dwOvertimeStandard;   //㊣那℅???∼角?㊣???“﹞?????
	DWORD                 dwOvertimeActual;     //??????∼角?㊣???“﹞?????
	DWORD                 dwAttendanceStandard; //㊣那℅??????足???“?足??
	DWORD                 dwAttendanceActual;   //?????????足???“?足??
	DWORD                 dwAbsentDays;         //???∟?足???“?足??
	BYTE                  byRes[128];           //㊣???
}NET_DVR_ATTENDANCE_SUMMARY_CFG, *LPNET_DVR_ATTENDANCE_SUMMARY_CFG;

//????????????????
typedef struct tagNET_DVR_ATTENDANCE_RECORD_CFG
{
	DWORD                 dwSize;
	DWORD                 dwEmployeeNo; //?∟??
	BYTE                  byName[NAME_LEN];     //????
	BYTE                  byDepartmentName[NAME_LEN];  //????????
	NET_DVR_TIME_V30      struAttendanceTime;   //?????㊣??
	BYTE                  byRes[128];   //㊣???
}NET_DVR_ATTENDANCE_RECORD_CFG, *LPNET_DVR_ATTENDANCE_RECORD_CFG;

//?????㊣????????
typedef struct tagNET_DVR_ATTENDANCE_TIME
{
	NET_DVR_TIME_V30      struOnDutyTime;   //??∼角?㊣??
	NET_DVR_TIME_V30      struOffDutyTime;  //??∼角?㊣??
}NET_DVR_ATTENDANCE_TIME, *LPNET_DVR_ATTENDANCE_TIME;

//?????足??????????
typedef struct tagNET_DVR_ABNORMAL_CFG
{
	DWORD                 dwSize;
	DWORD                 dwEmployeeNo;     //?∟??
	BYTE                  byName[NAME_LEN]; //????
	BYTE                  byDepartmentName[NAME_LEN];  //????????
	NET_DVR_ATTENDANCE_TIME struAttendanceTime[ABNORMAL_INFO_NUM]; //?足???㊣????
	DWORD                 dwLateMinutes;    //?????㊣???“﹞?????
	DWORD                 dwLeaveEarlyMinutes; //?????㊣???“﹞?????
	DWORD                 dwAbsenceMinutes; //?㊣???㊣???“﹞?????
	DWORD                 dwTotalMinutes;   //?????㊣???“﹞?????
	BYTE                  byRes[128];     //㊣???
}NET_DVR_ABNORMAL_CFG, *LPNET_DVR_ABNORMAL_CFG;

typedef struct tagNET_DVR_CARD_CFG_V50
{
	DWORD dwSize;
	DWORD dwModifyParamType;
	// ?豕?????????“???????豕???“?????㊣???∫??∼???㊣赤?????????迆㊣赤??????????1???豕????????0????????
	// #define CARD_PARAM_CARD_VALID       0x00000001 //?“??﹞????∫????
	// #define CARD_PARAM_VALID            0x00000002  //???∫??????
	// #define CARD_PARAM_CARD_TYPE        0x00000004  //?“?角??????
	// #define CARD_PARAM_DOOR_RIGHT       0x00000008  //???“??????
	// #define CARD_PARAM_LEADER_CARD      0x00000010  //?℅?“????
	// #define CARD_PARAM_SWIPE_NUM        0x00000020  //℅??車???“????????
	// #define CARD_PARAM_GROUP            0x00000040  //?迄????℅谷????
	// #define CARD_PARAM_PASSWORD         0x00000080  //?“????????
	// #define CARD_PARAM_RIGHT_PLAN       0x00000100  //?“?“??????????
	// #define CARD_PARAM_SWIPED_NUM       0x00000200  //?????“????
	// #define CARD_PARAM_EMPLOYEE_NO      0x00000400  //?∟??
	// #define CARD_PARAM_NAME             0x00000800  //????
	// #define CARD_PARAM_DEPARTMENT_NO    0x00001000  //????㊣角??
	// #define CARD_SCHEDULE_PLAN_NO       0x00002000  //??∼角????㊣角??
	// #define CARD_SCHEDULE_PLAN_TYPE     0x00004000  //??∼角?????角??
	// #define CARD_ROOM_NUMBER            0x00008000  //﹞?????
	// #define CARD_SIM_NO                 0x00010000  //SIM?“???“???迆????
	// #define CARD_FLOOR_NUMBER           0x00020000  //??????
	// #define CARD_USER_TYPE              0x00040000  //???∫?角??
	BYTE byCardNo[ACS_CARD_NO_LEN]; //?“??
	BYTE byCardValid; //?“??﹞????∫??0-???∫??1-???∫?“?????????“???豕???㊣????0???????????????㊣??℅?????????1??
	BYTE byCardType; //?“?角????1-???“?“??2-???????“??3-???????“??4-???邦?“??5-?????“??6-?????“??7-??㊣??“??8-?????“??9-?㊣?∟?“??10-???㊣?“??11-???㊣???赤?“?“???????“???㊣?“?“????㊣??赤???????????????????“?“
	BYTE byLeaderCard; //??﹞????℅?“??1-????0-﹞?
	BYTE byUserType; // 0 “C ???“???∫1 - ???赤?㊣???∫;
	BYTE byDoorRight[MAX_DOOR_NUM_256]; //???“??(?????“???????“??)??∼???㊣赤????1?????“????0?????“????????????????㊣赤???????“????1-N??﹞????“??
	NET_DVR_VALID_PERIOD_CFG struValid; //???∫??????
	BYTE  byBelongGroup[MAX_GROUP_NUM_128]; //?迄????℅谷??∼?℅???㊣赤????1-??????0-??????
	BYTE byCardPassword[CARD_PASSWORD_LEN]; //?“????
	WORD wCardRightPlan[MAX_DOOR_NUM_256][MAX_CARD_RIGHT_PLAN_NUM]; //?“?“????????????????????∼?㊣角???????????“??????????????∼??????“???辰??﹞??????赤
	DWORD dwMaxSwipeTime; //℅??車???“??????0?????????????“??????????
	DWORD dwSwipeTime; //?????“????
	WORD wRoomNumber;  //﹞?????
	SHORT wFloorNumber;   //????
	DWORD dwEmployeeNo;   //?∟???“???∫ID??
	BYTE byName[NAME_LEN];   //????
	WORD wDepartmentNo;   //????㊣角??
	WORD wSchedulePlanNo;   //??∼角????㊣角??
	BYTE bySchedulePlanType;  //??∼角?????角????0-????????1-??????2-????
	BYTE byRightType;  //??﹞??“???角????0-???“﹞??“?“????1-???????“????2-?????“???“?????????豕㊣????????“??????????﹞????????“???“?谷???“??????℅??車???“?????“???????????????∫?????????????“?????“???“????APP?????????????????????????“﹞??“?“????????
	BYTE byRes2[2];
	DWORD dwLockID;  //??ID
	BYTE byLockCode[MAX_LOCK_CODE_LEN];    //???迆??
	BYTE byRoomCode[MAX_DOOR_CODE_LEN];  //﹞????迆??
										 //∼???㊣赤????0-???“????1-???“??
										 //??0??㊣赤????????㊣“??
										 //??1??㊣赤?????????芍????
										 //??2??㊣赤???????????“
										 //??3??㊣赤?????“??
										 //??4??㊣赤????﹞???????
										 //??5??㊣赤???????邦????
	DWORD dwCardRight;      //?“?“??
	DWORD dwPlanTemplate;   //??????∼?(???足)?‾?㊣??????﹞???????∼???㊣赤????0--????????1-????
	DWORD dwCardUserId;    //???“??ID
	BYTE byCardModelType;  //0-????1- MIFARE S50??2- MIFARE S70??3- FM1208 CPU?“??4- FM1216 CPU?“??5-?迆??CPU?“??6-?赤﹞??∟??7- NFC
	BYTE byRes3[51];
	BYTE bySIMNum[NAME_LEN/*32*/]; //SIM?“???“???迆????
}NET_DVR_CARD_CFG_V50, *LPNET_DVR_CARD_CFG_V50;

typedef  struct tagNET_DVR_CAPTURE_FINGERPRINT_COND
{
	DWORD  dwSize;
	BYTE   byFingerPrintPicType;    //?????角????0-??????
	BYTE   byFingerNo;              //????㊣角????﹞??∫1-10
	BYTE   byRes[126];
}NET_DVR_CAPTURE_FINGERPRINT_COND, *LPNET_DVR_CAPTURE_FINGERPRINT_COND;

typedef  struct tagNET_DVR_CAPTURE_FINGERPRINT_CFG
{
	DWORD dwSize;
	DWORD dwFingerPrintDataSize;    //?????????車??
	BYTE  byFingerData[MAX_FINGER_PRINT_LEN];        //????????????
	DWORD dwFingerPrintPicSize;    //?????????車????????0?㊣???迆㊣赤??????????????
	char* pFingerPrintPicBuffer;       //????????????
	BYTE  byFingerNo;              //????㊣角????﹞??∫1-10
	BYTE  byFingerPrintQuality;    //??????????﹞??∫1-100
	BYTE  byRes[62];
}NET_DVR_CAPTURE_FINGERPRINT_CFG, *LPNET_DVR_CAPTURE_FINGERPRINT_CFG;

typedef  struct tagNET_DVR_CAPTURE_FACE_COND
{
	DWORD  dwSize;
	BYTE   byRes[128];
}NET_DVR_CAPTURE_FACE_COND, *LPNET_DVR_CAPTURE_FACE_COND;

typedef  struct tagNET_DVR_CAPTURE_FACE_CFG
{
	DWORD  dwSize;
	DWORD  dwFaceTemplate1Size;  //??????∼?1?????車????????0?㊣???迆㊣赤????????∼?1????
	char*  pFaceTemplate1Buffer; //??????∼?1?????????“???車??2.5k??
	DWORD  dwFaceTemplate2Size;  //??????∼?2?????車????????0?㊣???迆㊣赤????????∼?2????
	char*  pFaceTemplate2Buffer; //??????∼?2?????????“???車??2.5K??
	DWORD  dwFacePicSize;        //?????????????車????????0?㊣???迆㊣赤??????????????
	char*  pFacePicBuffer;       //????????????????
	BYTE   byFaceQuality1;        //??????????﹞??∫1-100
	BYTE   byFaceQuality2;        //??????????﹞??∫1-100
	BYTE   byCaptureProgress;    //?????????????∼????????????????0-??????????????100-???????????“????????????100?㊣??????????????????
	BYTE   byRes[125];
}NET_DVR_CAPTURE_FACE_CFG, *LPNET_DVR_CAPTURE_FACE_CFG;

//?谷??????????????????????????????
typedef struct tagNET_DVR_REC_PASSBACK_MANUAL_EXECUTABLE_SEND
{
	DWORD   dwSize;
	NET_DVR_STREAM_INFO struStreamInfo; //?‾id?????“72℅?????
	BYTE    byRes[128];                 //㊣???
}NET_DVR_REC_PASSBACK_MANUAL_EXECUTABLE_SEND, *LPNET_DVR_REC_PASSBACK_MANUAL_EXECUTABLE_SEND;

//?谷??????????????????????????????
typedef struct tagNET_DVR_REC_PASSBACK_MANUAL_EXECUTABLE_RET
{
	DWORD   dwSize;
	NET_DVR_STREAM_INFO struStreamInfo; //?‾id?????“72℅?????
	BYTE    byExecutable;           //0-??????????????1-??????????????
	BYTE    byUnexecutableReason;   //???????????????辰, 0-?豕????????1-㊣角???‾????????2-?‾ID????????3-CVR?足????4-??????????, 5-㊣角???‾???∫???辰?????赤, 6-?∼???豕㊣???????, 7-???????辰
	BYTE    byRes[254];             //㊣???
}NET_DVR_REC_PASSBACK_MANUAL_EXECUTABLE_RET, *LPNET_DVR_REC_PASSBACK_MANUAL_EXECUTABLE_RET;

typedef struct tagNET_DVR_STREAM_MEDIA_CFG
{
	DWORD   dwSize;
	BYTE    sUrl[MAX_URL_LEN];
	BYTE    byRes[512]; //㊣???
}NET_DVR_STREAM_MEDIA_CFG, *LPNET_DVR_STREAM_MEDIA_CFG;

//?????足?????????辰????
typedef struct tagNET_DVR_SHIPSDETECTION_REGION_CFG
{

	BYTE    byRuleID;
	BYTE    byEnable;     //????
	BYTE    bySensitivity;  //?谷??????????﹞??∫[1,100]
	BYTE    byFrameOverlayEnabled;//??????﹞??????足???辰
	BYTE   byRes[36];
	NET_ITC_POLYGON struPolygon; //??﹞????辰
	NET_VCA_LINE struTriggerLine;  //??﹞???
}NET_DVR_SHIPSDETECTION_REGION_CFG, *LPNET_DVR_SHIPSDETECTION_REGION_CFG;

typedef struct tagNET_DVR_SHIPSDETECTION_CFG
{
	DWORD dwSize;
	BYTE    byEnable;//????
	BYTE   byRes1[3];
	float    fLookDownUpAngle;//?豕㊣??????????????﹞?????????車????
	float    fHorizontalHeight;//?豕㊣??????????????﹞?????????車????
	NET_DVR_SHIPSDETECTION_REGION_CFG struShipsDetectionRegion[MAX_SHIPSDETE_REGION_NUM];//?????足?????????辰????
	BYTE   byRes[256];
}NET_DVR_SHIPSDETECTION_CFG, *LPNET_DVR_SHIPSDETECTION_CFG;

typedef    struct tagNET_DVR_TEMPERATURE_COLOR
{
	/*
	????0~????㊣“???角???㊣??<highTemperature>℅????迆?∫,?㊣?????????????㊣???芍??????????㊣那℅???
	????1~????㊣“???角???㊣, <lowTemperature>℅????迆?∫,?㊣?????????????㊣???芍??????????㊣那℅???
	????2~????㊣“???角???㊣??<highTemperature>??<lowTemperature>℅????迆?∫???㊣???????????????????㊣???芍??????????㊣那℅???
	????3~㊣???㊣“???角???㊣??<highTemperature>??<lowTemperature>℅????迆?∫???㊣???????????????????㊣???芍??????????㊣那℅???
	????4~????㊣“???角????<nullAlarm>℅????迆?∫????㊣?㊣“????*/
	BYTE     byType;//????㊣“???????????角????0~??㊣“???角???“??㊣?????1~????㊣“???角????2~????㊣“???角????3~????㊣“???角????4~㊣???㊣“???角??
	BYTE     byRes1[3];
	int        iHighTemperature;//????????-273~10000
	int        iLowTemperature;//????????-273~10000
	BYTE     byRes[8];
}NET_DVR_TEMPERATURE_COLOR, *LPNET_DVR_TEMPERATURE_COLOR;

typedef    struct tagNET_DVR_THERMOMETRY_BASICPARAM
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE        byStreamOverlay; //???‾??????????????0- ﹞???1- ??
	BYTE         byPictureOverlay;//℅?????????????????0- ﹞???1- ??
	BYTE        byThermometryRange;//????﹞??∫: 0-??????,1-(-20~150),2-(0~550)?“????????????????????????,3-(??????:0-650????????????:32-1200“H),4-?“??????: -40-150????,5-(??????: 0~1200??)?“?????????????????????????迄???????????豕?“????????﹞??∫??????????6-(??????: -20-120??,0xff-℅???
	BYTE        byThermometryUnit;//????????: 0-???????“??????1-???????““H????2-??????(K)??
	BYTE        byThermometryCurve;//?????迆??????????﹞?????0-??㊣???1-????1?“?芍?辰?????‾????????????2-????2?“℅??辰?????‾??????????
	BYTE        byFireImageModea;//??﹞???????????0-㊣?????1-??∼℅??????2-????????????3-????????(℅???0???∼㊣?????㊣????????∼??????????)    
	BYTE        byShowTempStripEnable;//????????????????0- ﹞???1- ??
	float       fEmissivity;//﹞?????(﹞????? ???﹞?????????車????)[0.01, 1.00](?????????辰??﹞?????????㊣??足)
	BYTE         byDistanceUnit;//?角??????: 0-?℅?“m????1-?????“feet??,2-???℅(centimeter)
	BYTE         byEnviroHumidity;//?﹞???角????????????﹞??∫??0~100%
	BYTE        byRes2[2];
	NET_DVR_TEMPERATURE_COLOR struTempColor;//????㊣“??????
	int            iEnviroTemperature;//?﹞????????????﹞??∫??-273~10000??????
	int          iCorrectionVolume;//????????????????﹞??∫??-100~100
								   /* bit0-????????????0-????????1-??????
								   bit1-℅???????????0-????????1-??????
								   bit2-℅???????????0-????????1-??????
								   */
	BYTE       bySpecialPointThermType;// ??????????????
	BYTE       byReflectiveEnabled;//﹞?????????????0- ﹞???1- ??
	WORD       wDistance;//?角??(m)[0, 10000]
	float      fReflectiveTemperature;//﹞??????? ???﹞???????車????
	float      fAlert;//?∟????????????-100.0-1000.0???“???﹞?????????車??????
	float      fAlarm;//㊣“????????????-100.0-1000.0???“???﹞?????????車??????
	float         fThermalOpticalTransmittance;// ???∫??????, ???﹞?????????車3????﹞??∫0.001-1.000??????1.000
	float      fExternalOpticsWindowCorrection;//???????∫????????????20????﹞??∫??-40.0~80.0????????????????????????????℅?
	BYTE       byDisplayMaxTemperatureEnabled;// ????℅????? 0-?????? 1-????
	BYTE       byDisplayMinTemperatureEnabled;// ????℅????? 0-?????? 1-????
	BYTE       byDisplayAverageTemperatureEnabled;// ???????迄?? 0-?????? 1-????
	BYTE       byThermometryInfoDisplayposition;// ???????????????? 0-㊣??? 1-?迆?????辰 2-????℅車????
	DWORD        dwAlertFilteringTime;//?????∟???????㊣??,??????
	DWORD        dwAlarmFilteringTime;//????㊣“???????㊣??,??????
	BYTE       byRes[52];
}NET_DVR_THERMOMETRY_BASICPARAM, *LPNET_DVR_THERMOMETRY_BASICPARAM;

typedef    struct tagNET_DVR_THERMOMETRY_COND
{
	DWORD        dwSize;//?芍?????車??
	DWORD        dwChannel;
	WORD        wPresetNo;//0-㊣???
	BYTE        byRes[62];
}NET_DVR_THERMOMETRY_COND, *LPNET_DVR_THERMOMETRY_COND;

typedef    struct tagNET_DVR_THERMOMETRY_PRESETINFO_PARAM
{
	BYTE    byEnabled;  //??﹞???????0- ﹞???1- ??
	BYTE    byRuleID;//???辰ID 0-㊣赤?????∫????1???? ?“list???????????????∫????
	WORD    wDistance;//?角??(m)[0, 10000]
	float   fEmissivity;//﹞?????(﹞????? ???﹞?????????車????)[0.01, 1.00](?????????辰??﹞?????????㊣??足)
	BYTE    byDistanceUnit;//?角??????: 0-?℅?“m????1-?????“feet??,2-???℅(centimeter)
	BYTE    byRes[2];
	BYTE    byReflectiveEnabled;//﹞?????????????0- ﹞???1- ??
	float   fReflectiveTemperature;//﹞??????? ???﹞???????車2??
	char    szRuleName[NAME_LEN/*32*/];//???辰????    
	BYTE    byRes1[63];
	BYTE    byRuleCalibType;//???辰㊣那?“?角?? 0-????1-?辰??2-??
	NET_VCA_POINT struPoint;//??????℅?㊣那?“?㊣???辰㊣那?“?角????"??"???㊣?辰?迆?∫??
	NET_VCA_POLYGON struRegion;//???辰?????“?㊣???辰㊣那?“?角????"?辰"?辰??"??"???㊣?辰?迆?∫??
}NET_DVR_THERMOMETRY_PRESETINFO_PARAM, *LPNET_DVR_THERMOMETRY_PRESETINFO_PARAM;


typedef    struct tagNET_DVR_THERMOMETRY_PRESETINFO
{
	DWORD        dwSize;//?芍?????車??
	WORD        wPresetNo;//0-㊣???
	BYTE        byRes[2];
	NET_DVR_THERMOMETRY_PRESETINFO_PARAM struPresetInfo[MAX_THERMOMETRY_REGION_NUM/*40*/];
}NET_DVR_THERMOMETRY_PRESETINFO, *LPNET_DVR_THERMOMETRY_PRESETINFO;


typedef struct tagNET_DVR_BASE_STATION_INFO_ALARM
{
	DWORD        dwSize;
	DWORD        dwChannel;//?“????
	char         sNetBarWaCode[16];//???迄㊣角??
	char         sCollectionEquipmentID[24];//?????豕㊣?㊣角??
	char         sMCC[4];//?????迆????
	char         sMNC[4];//??????????
	char         sLAC[36];//????????
	char         sCI[36];//??????㊣???
	char         sBSCI[36];//?迄????㊣???
	char         sBCCH[36];//????????????
	char         sLEV[36];//????㊣“??????
	char         sCollectionEquipmentLongitude[12];//?????豕㊣?????
	char         sCollectionEquipmentLatitude[12];//?????豕㊣?????
	char         sCaptureTime[20];//?????㊣?? ?㊣??????yyyy-MM-dd hh:mm:ss
	BYTE         byRes[256];
}NET_DVR_BASE_STATION_INFO_ALARM, *LPNET_DVR_BASE_STATION_INFO_ALARM;


typedef    struct tagNET_DVR_THERMOMETRY_ALARMRULE_PARAM
{
	BYTE      byEnable;
	BYTE      byRuleID;//???辰ID
	BYTE      byRule;//㊣“??????㊣???﹞??? 0-?????車??,1-????????,2-?????車??,3-????????,4-???迄???車??,5-???迄??????,6-?????車??,7-????????    
	BYTE      byRes;
	char      szRuleName[NAME_LEN];//???辰????
	float      fAlert;//?∟??????
	float      fAlarm;//㊣“??????
	float      fThreshold;//????????
	DWORD        dwAlertFilteringTime;//?????∟???????㊣??,??????
	DWORD        dwAlarmFilteringTime;//????㊣“???????㊣??,??????
	BYTE      byRes1[56];
}NET_DVR_THERMOMETRY_ALARMRULE_PARAM, *LPNET_DVR_THERMOMETRY_ALARMRULE_PARAM;

typedef    struct tagNET_DVR_THERMOMETRY_ALARMRULE
{
	DWORD        dwSize;//?芍?????車??
	NET_DVR_THERMOMETRY_ALARMRULE_PARAM  struThermometryAlarmRuleParam[THERMOMETRY_ALARMRULE_NUM];
	BYTE        byRes[128];
}NET_DVR_THERMOMETRY_ALARMRULE, *LPNET_DVR_THERMOMETRY_ALARMRULE;


typedef    struct tagNET_DVR_THERMOMETRY_DIFFCOMPARISON_PARAM
{
	BYTE       byEnable;
	BYTE       byRuleID;//???辰ID,0-㊣赤?????∫??﹞??∫????1????
	BYTE       byAlarmID1;
	BYTE       byAlarmID2;
	BYTE       byRule;//㊣“??????㊣???﹞???0-?????車??,1-????????,2-?????車??,3-????????,4-???迄???車??,5-???迄??????,6-?????車??,7-????????
	BYTE       byRes[3];
	float      fTemperatureDiff;//??????
	DWORD      dwAlarmFilteringTime;//????㊣“???????㊣??,??????
	BYTE       byRes1[28];
}NET_DVR_THERMOMETRY_DIFFCOMPARISON_PARAM, *LPNET_DVR_THERMOMETRY_DIFFCOMPARISON_PARAM;

typedef    struct tagNET_DVR_THERMOMETRY_DIFFCOMPARISON
{
	DWORD        dwSize;//?芍?????車??
	NET_DVR_THERMOMETRY_DIFFCOMPARISON_PARAM  struDiffComparison[MAX_THERMOMETRY_DIFFCOMPARISON_NUM/*8*/];
	BYTE        byRes[64];
}NET_DVR_THERMOMETRY_DIFFCOMPARISON, *LPNET_DVR_THERMOMETRY_DIFFCOMPARISON;


//???㊣?????足???????芍??
typedef struct tagNET_DVR_REALTIME_THERMOMETRY_COND
{
	DWORD       dwSize;
	DWORD       dwChan;//?“????????1??????0xffffffff?迆㊣赤?????????“??
	BYTE        byRuleID; //???辰ID 0-?迆㊣赤???????????辰?????????辰ID??1???? 
						  /*
						  1-?“?㊣???????豕㊣??????????????‾?????辰??????????℅???????℅??????????迄????????????
						  2-????????????????????????????℅??????辰??℅??????辰?????迄???辰???????????????車??????2?????????辰????℅???????℅??????????迄???????????車?????????????㊣???????迄????2?????????辰????℅???????℅??????????迄??????????
						  */
	BYTE        byMode; //?∟?????????? 0-㊣????“?????????豕㊣?????1-?“?㊣??????2-????????
	WORD        wInterval; //?????????????????????∫????1~3600S????0?辰????3600S????????
	BYTE        byRes[60]; //㊣???
}NET_DVR_REALTIME_THERMOMETRY_COND, *LPNET_DVR_REALTIME_THERMOMETRY_COND;

typedef struct tagNET_DVR_POINT_THERM_CFG
{
	float        fTemperature;//?㊣?∼????
	NET_VCA_POINT struPoint;//??????℅?㊣那?“?㊣???辰㊣那?“?角?????????㊣?辰?迆?∫??
	BYTE    byRes[120];
}NET_DVR_POINT_THERM_CFG, *LPNET_DVR_POINT_THERM_CFG;

typedef struct tagNET_DVR_LINEPOLYGON_THERM_CFG
{
	float       fMaxTemperature;//℅?????
	float        fMinTemperature;//℅?????
	float       fAverageTemperature;//???迄??
	float        fTemperatureDiff;//????
	NET_VCA_POLYGON struRegion;//???辰?“?㊣???辰㊣那?“?角?????辰/?????㊣?辰?迆?∫??
	BYTE    byRes[32];
}NET_DVR_LINEPOLYGON_THERM_CFG, *LPNET_DVR_LINEPOLYGON_THERM_CFG;

typedef struct tagNET_DVR_THERMOMETRY_UPLOAD
{
	DWORD       dwSize;
	DWORD       dwRelativeTime;     // ?角???㊣㊣那
	DWORD       dwAbsTime;            // ?????㊣㊣那
	char        szRuleName[NAME_LEN/*32*/];//???辰????
	BYTE        byRuleID;//???辰ID??
	BYTE        byRuleCalibType;//???辰㊣那?“?角?? 0-????1-?辰??2-??
	WORD        wPresetNo; //?∟??????
	NET_DVR_POINT_THERM_CFG struPointThermCfg;
	NET_DVR_LINEPOLYGON_THERM_CFG struLinePolygonThermCfg;
	BYTE        byThermometryUnit;//????????: 0-???????“??????1-???????““H????2-??????(K)
	BYTE        byDataType;//????℅????角??:0-?足??????1-??????2-?芍??
	BYTE		byRes1;
	/*
	bit0-????????????0-???∫????1-?∫????
	bit1-℅???????????0-???∫????1-?∫????
	bit2-℅???????????0-???∫????1-?∫????
	*/
	BYTE      bySpecialPointThermType;// ??﹞??∫????????????
	float	   fCenterPointTemperature;//??????????,???﹞?????????車????(-40-1500),?“??????+100??*10 ?“??bySpecialPointThermType??????﹞??∫??????????
	float	   fHighestPointTemperature;//℅?????????,???﹞?????????車????(-40-1500),?“??????+100??*10?“??bySpecialPointThermType??????﹞??∫??℅???????
	float	   fLowestPointTemperature;//℅?????????,???﹞?????????車????(-40-1500),?“??????+100??*10?“??bySpecialPointThermType??????﹞??∫??℅???????
	NET_VCA_POINT struHighestPoint;//?????辰????℅???????????℅?㊣那?“?㊣???辰㊣那?“?角?????????辰???㊣?辰?迆?∫??
	NET_VCA_POINT struLowestPoint;//?????辰????℅???????????℅?㊣那?“?㊣???辰㊣那?“?角?????????辰???㊣?辰?迆?∫??
	BYTE       byIsFreezedata;//??﹞????????芍 0-﹞? 1-??
	BYTE        byRes2[3];
	DWORD       dwChan; //?“???????谷?????????“??????0xffffffff?㊣??℅????迆?∫
	BYTE          byRes[88];
}NET_DVR_THERMOMETRY_UPLOAD, *LPNET_DVR_THERMOMETRY_UPLOAD;

//????㊣“???“?足????????????????㊣???㊣“????
typedef struct tagNET_DVR_THERMOMETRY_ALARM
{
	DWORD   dwSize;
	DWORD   dwChannel;//?“????
	BYTE    byRuleID;//???辰ID
	BYTE    byThermometryUnit;//????????: 0-???????“??????1-???????““H????2-??????(K)
	WORD    wPresetNo; //?∟??????
	NET_PTZ_INFO  struPtzInfo;//ptz℅?㊣那????
	BYTE    byAlarmLevel;//0-?∟?? 1-㊣“??
	BYTE    byAlarmType;/*㊣“???角?? 0-℅??????? 1-℅??????? 2-???迄???? 3-???? 4-???????? 5-????????*/
	BYTE    byAlarmRule;//0-?車????1-????
	BYTE    byRuleCalibType;//???辰㊣那?“?角?? 0-????1-?辰??2??
	NET_VCA_POINT struPoint;//??????℅?㊣那?“?㊣???辰㊣那?“?角?????????㊣?辰?迆?∫??
	NET_VCA_POLYGON struRegion;//???辰?“?㊣???辰㊣那?“?角?????辰???㊣?辰?迆?∫??
	float   fRuleTemperature;/*???????辰????,???﹞?????????車????(-40-1000),?“??????+100?? */
	float   fCurrTemperature;/*?㊣?∼????,???﹞?????????車????(-40-1000),?“??????+100?? */
	DWORD   dwPicLen;//???????????∟??
	DWORD   dwThermalPicLen;//???????????∟??
	DWORD   dwThermalInfoLen;//???????????????∟??
	char*   pPicBuff; ///??????????????
	char*   pThermalPicBuff;// ??????????????
	char*   pThermalInfoBuff; //??????????????????
	NET_VCA_POINT struHighestPoint;//?????辰????℅???????????℅?㊣那?“?㊣???辰㊣那?“?角?????????辰???㊣?辰?迆?∫??
	float   fToleranceTemperature;/* ????????,???﹞?????????車????(-40-1000),?“??????+100?? */
	DWORD   dwAlertFilteringTime;//?????∟???????㊣?? ?????? ﹞??∫??0-200??????????0??
	DWORD   dwAlarmFilteringTime;//????㊣“???????㊣?? ?????? ﹞??∫??0-200??????????0??
	DWORD   dwTemperatureSuddenChangeCycle;//??????㊣?????????????????
	float   fTemperatureSuddenChangeValue;//??????㊣???,???﹞?????????車????(?車??0)
	BYTE    byPicTransType;        //????????????﹞???: 0-????????1-url
	BYTE    byRes[39];
}NET_DVR_THERMOMETRY_ALARM, *LPNET_DVR_THERMOMETRY_ALARM;


//????㊣“??
typedef struct tagNET_DVR_THERMOMETRY_DIFF_ALARM
{
	DWORD   dwSize;
	DWORD   dwChannel;//?“????
	BYTE    byAlarmID1;//???辰AlarmID1
	BYTE    byAlarmID2;//???辰AlarmID2
	WORD    wPresetNo; //?∟??????
	BYTE    byAlarmLevel;//0-?∟?? 1-㊣“??
	BYTE    byAlarmType;/*㊣“???角?? 0-℅??????? 1-℅??????? 2-???迄????*/
	BYTE    byAlarmRule;//0-?車????1-????
	BYTE    byRuleCalibType;//???辰㊣那?“?角?? 0-????1-?辰??2??
	NET_VCA_POINT struPoint[2];//??????℅?㊣那?“?㊣???辰㊣那?“?角?????????㊣?辰?迆?∫????℅谷??㊣那0?迆㊣赤℅?AlarmID1????℅谷??㊣那1?迆㊣赤℅?AlarmID2.
	NET_VCA_POLYGON struRegion[2];//???辰?“?㊣???辰㊣那?“?角?????辰???㊣?辰?迆?∫????℅谷??㊣那0?迆㊣赤℅?AlarmID1????℅谷??㊣那1?迆㊣赤℅?AlarmID2.
	float   fRuleTemperatureDiff;/*???????辰????,???﹞?????????車????(-40-1000)??*/
	float   fCurTemperatureDiff;/*?㊣?∼????,???﹞?????????車????(-40-1000),?“??????+100?? */
	NET_PTZ_INFO  struPtzInfo;//ptz℅?㊣那????
	DWORD   dwPicLen;//???????????∟??
	DWORD   dwThermalPicLen;//???????????∟??
	DWORD   dwThermalInfoLen;//???????????????∟??
	char*   pPicBuff; ///??????????????
	char*   pThermalPicBuff;// ??????????????
	char*   pThermalInfoBuff; //??????????????????
	BYTE    byThermometryUnit;//????????: 0-???????“??????1-???????““H????2-??????(K)
	BYTE    byPicTransType;        //????????????﹞???: 0-????????1-url
	BYTE    byRes1[2];
	float   fToleranceTemperature;/*????????,???﹞?????????車????(-40-1000),?“??????+100?? */
	DWORD   dwAlarmFilteringTime;//????㊣“???????㊣?? ?????? ﹞??∫??0-200??????????0??
	BYTE    byRes[52];
}NET_DVR_THERMOMETRY_DIFF_ALARM, *LPNET_DVR_THERMOMETRY_DIFF_ALARM;

typedef  struct  //?????芍??
{
	DWORD   dwSize;
	DWORD  dwChannel;//?“?????“?∼????????1??
	BYTE   byRes[128];
}NET_DVR_SHIPSCOUNT_COND, *LPNET_DVR_SHIPSCOUNT_COND;


//?????????????????芍??
typedef struct tagNET_DVR_SHIPSCOUNT_CFG
{
	DWORD dwSize;
	DWORD dwUpShipsCount; //??????????
	DWORD dwDownShipsCount; //??????????
	DWORD dwLeftShipsCount; //℅車????????
	DWORD dwRightShipsCount; //??????????
	DWORD dwTotalCount;//????℅?????
	DWORD dwRelativeTime; //?豕㊣??角???????????????角???㊣㊣那
	DWORD dwAbsTime; //?豕㊣??角???????????????????㊣㊣那
	BYTE   byDataType;//????℅????角??:0-?足??????1-??????2-?芍??
	BYTE   byRes[255];
}NET_DVR_SHIPSCOUNT_CFG, *LPNET_DVR_SHIPSCOUNT_CFG;

//????????
typedef struct tagNET_DVR_SHIPSINFO
{
	float     fShipsLength; //?????∟????1~1000.0m?????﹞?????????車????
	float     fShipsHeight; //??????????1~1000.0m?????﹞?????????車????
	float     fShipsWidth;  //?????赤????1~1000.0m?????﹞?????????車????
	float     fShipsSpeed;  //??????????1~1000.0m/s?????﹞?????????車????
	BYTE      byShipsDirection;//????﹞??辰??0~up,1~down,2~left,3~right
	BYTE      byShipsDetState;//?????足??℅?????0~???????足??????1~???﹞?足????2~?????足??
	BYTE      byTriggerLineID;//?足????ID
	BYTE      byRes[61];
	NET_VCA_POLYGON  struShipsRect; //???????辰???谷?????????角?????車???“??????????????????)??﹞?㊣???
} NET_DVR_SHIPSINFO, *LPNET_DVR_SHIPSINFO;

//?????足??㊣“??????
typedef struct tagNET_DVR_SHIPSDETECTION_ALARM
{
	DWORD   dwSize;
	NET_VCA_DEV_INFO  struDevInfo;   //?豕㊣?????
	DWORD   dwRelativeTime; //?角???㊣㊣那
	DWORD   dwAbsTime; //?????㊣㊣那
	BYTE    byShipsNum; //????????(???????足????????????)
	BYTE    byShipsNumHead;//????????(???﹞?足????????)
	BYTE    byShipsNumEnd; //????????(?????足????????)
	BYTE    byPicTransType;        //????????????﹞???: 0-????????1-url
	NET_DVR_SHIPSINFO struShipInfo[MAX_SHIPS_NUM/*20*/];//??????????℅??車?∫??20??
	DWORD   dwPicLen;//???????????∟??
	DWORD   dwThermalPicLen;//???????????∟??
	BYTE*   pPicBuffer;    //??????????????????
	BYTE*   pThermalPicBuffer;    //??????????????????
	WORD    wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE    byTimeDiffFlag;      /*?㊣??℅?????﹞????∫  0-?㊣?????∫?? 1-?㊣?????∫ */
	char    cTimeDifferenceH;         /*??UTC???㊣???“???㊣????-12 ... +14?? +㊣赤??????,??byTimeDiffFlag??1?㊣???∫*/
	char    cTimeDifferenceM;      	/*??UTC???㊣???“﹞???????-30, 30, 45?? +㊣赤????????byTimeDiffFlag??1?㊣???∫*/
	BYTE    byRes[251];
}NET_DVR_SHIPSDETECTION_ALARM, *LPNET_DVR_SHIPSDETECTION_ALARM;

typedef    struct tagNET_DVR_THERMAL_PIP
{
	DWORD     dwSize;//?芍?????車??
	BYTE      byEnable;//??﹞?????
	BYTE      byPipMode;// ????????????0~??????????1~??????????2-???“????
	BYTE      byOverlapType;//?????角???????????????????????車?迆?∫??0~??????????????????????1~????????????????????
	BYTE      byTransparency;//???‾?? 0~100
	NET_VCA_POLYGON struPipRegion;//?????????辰????
	BYTE      byImageFusionRatio;//????????㊣???,???????????迆?∫ 0-100 ????75
	BYTE      byBorderFusionRatio;//㊣???????㊣???,???????????迆?∫ 0-100 ????100
	BYTE      byRes[638];
}NET_DVR_THERMAL_PIP, *LPNET_DVR_THERMAL_PIP;

typedef    struct tagNET_DVR_RULESLINE_CFG
{
	NET_DVR_RGB_COLOR struRGB;// RGB??????R?“?足??????G?“????????B?“?????? ﹞??∫0-255
	BYTE      byRes[128];
}NET_DVR_RULESLINE_CFG, *LPNET_DVR_RULESLINE_CFG;

typedef    struct tagNET_DVR_THERMAL_INTELRULE_DISPLAY
{
	DWORD       dwSize;//?芍?????車??
					   /*
					   fontSizeType:??℅????車??㊣????‾??????﹞????芍?迄????㊣??????∼?∟???∼?????赤????????㊣?℅??????車????????????????㊣?????/8*(0.01*?∟???∼???赤??)
					   ㊣????‾????????????
					   0~8㊣????“????
					   1~12㊣????“㊣那℅???
					   2~16㊣????“?車??
					   3~20㊣????“???車??
					   4~24㊣????“???車??
					   */
	BYTE      byFontSizeType;
	BYTE      byRes1[3];
	NET_DVR_RULESLINE_CFG struNormalRulesLineCfg;//???????辰???角??????????
	NET_DVR_RULESLINE_CFG struAlertRulesLineCfg;//?∟?????辰???角??????????
	NET_DVR_RULESLINE_CFG struAlarmRulesLineCfg;//㊣“?????辰???角??????????
	BYTE      byRes[640];
}NET_DVR_THERMAL_INTELRULE_DISPLAY, *LPNET_DVR_THERMAL_INTELRULE_DISPLAY;

typedef struct tagNET_DVR_BAREDATAOVERLAY_CFG
{
	DWORD   dwSize;
	BYTE    byEnable;//????
	BYTE    byIntervalTime;// ???????㊣??????????????1 2 3 4 5.????????????????3??
	BYTE    byRes[258];
}NET_DVR_BAREDATAOVERLAY_CFG, *LPNET_DVR_BAREDATAOVERLAY_CFG;

//?????????????芍??
typedef    struct tagNET_DVR_THERMOMETRY_TRIGGER_COND
{
	DWORD    dwSize;//?芍?????車??
	DWORD    dwChan;//?“????
	DWORD    dwPreset;//?∟???????“???∼???∫??,???豕??????
	BYTE     byRes[256];
}NET_DVR_THERMOMETRY_TRIGGER_COND, *LPNET_DVR_THERMOMETRY_TRIGGER_COND;

//??????㊣迄
typedef    struct tagNET_DVR_MANUALDEICING_CFG
{
	DWORD        dwSize;//?芍?????車??
	BYTE        byEnabled; //??﹞???????????㊣迄 ??0~??㊣???1~????
	BYTE        byRes[127];
}NET_DVR_MANUALDEICING_CFG, *LPNET_DVR_MANUALDEICING_CFG;

//?????角LED?????‾
typedef struct tagNET_DVR_INPUT_SOURCE_TEXT_COND
{
	DWORD    dwSize;
	DWORD    dwInputSourceNo;    //??????㊣角??
	DWORD    dwTextNo;        //??㊣?㊣角??
	BYTE    byRes[32];
}NET_DVR_INPUT_SOURCE_TEXT_COND, *LPNET_DVR_INPUT_SOURCE_TEXT_COND;

typedef struct tagNET_DVR_INPUT_SOURCE_TEXT
{
	DWORD        dwSize;
	DWORD        dwTextNo;            //??㊣?㊣角??
	BYTE        byEnable;            //??﹞???????0-????????1-????
	BYTE        byFontSize;            //℅????車??
	BYTE        byBkGroudMode;        //㊣??∼??????1-???‾??2-????
	BYTE        byRes[1];
	DWORD        dwXPosition;            //℅?﹞???????????℅車????X℅?㊣那?????????角??℅?㊣那
	DWORD        dwYPosition;            //℅?﹞???????????℅車????Y℅?㊣那?????????角??℅?㊣那
	NET_DVR_RGB_COLOR struForegroudColor;    //℅?﹞??∼?∼??
	NET_DVR_RGB_COLOR struBackgroudColor; //℅?﹞?㊣??∼??
	BYTE        byTextContent[MAX_LEN_TEXT_CONTENT];    //℅?﹞?????
	BYTE        byRes1[64];
}NET_DVR_INPUT_SOURCE_TEXT, *LPNET_DVR_INPUT_SOURCE_TEXT;

typedef struct tagNET_DVR_INPUT_SOURCE_TEXT_LIST
{
	DWORD    dwSize;
	NET_DVR_INPUT_SOURCE_TEXT struTextList[MAX_NUM_INPUT_SOURCE_TEXT]; //??㊣???㊣赤
	BYTE    byRes[64];
}NET_DVR_INPUT_SOURCE_TEXT_LIST, *LPNET_DVR_INPUT_SOURCE_TEXT_LIST;

typedef struct  tagNET_DVR_INPUT_SOURCE_RESOLUTION
{
	DWORD  dwSize;
	DWORD  dwInputSignalNo;  //??????㊣角??
	BYTE  byEnabled;  //℅??“??﹞?㊣?????﹞?????
	BYTE  byRes;
	WORD  wImageWidth;     //?????赤??
	WORD  wImageHeight;  //????????
	WORD  wRefreshRate;     //????????
	BYTE    byColorDepth;  //??????????32????16????8??????????
	BYTE    byScanType;  //?“?豕?角????1-?????“?豕??2-?????“?豕
	BYTE    byRes1[62];
}NET_DVR_INPUT_SOURCE_RESOLUTION, *LPNET_DVR_INPUT_SOURCE_RESOLUTION;

typedef struct tagNET_DVR_INPUT_SOURCE_RESOLUTION_LIST
{
	DWORD dwSize;
	DWORD dwInputSignalCnt; //?豕㊣???????????????
	LPNET_DVR_INPUT_SOURCE_RESOLUTION lpstruBuffer; //??????????
	DWORD dwBufferSize; //???????車??
	BYTE  byRes[32];
}NET_DVR_INPUT_SOURCE_RESOLUTION_LIST, *LPNET_DVR_INPUT_SOURCE_RESOLUTION_LIST;

typedef struct tagNET_DVR_LED_AREA_COND
{
	DWORD dwSize;
	DWORD dwVideoWallNo; //??????㊣角??
	DWORD dwLEDAreaNo; //LED???辰㊣角??
	BYTE   byRes[32];
}NET_DVR_LED_AREA_COND, *LPNET_DVR_LED_AREA_COND;

typedef struct tagNET_DVR_LED_AREA_INFO
{
	DWORD dwSize;
	DWORD dwLEDAreaNo; //LED???辰㊣角??
	NET_DVR_RECTCFG_EX struRect; //???????辰
	DWORD dwaOutputNo[MAX_NUM_OUTPUT_CHANNEL]; //????????㊣赤
	BYTE  byAreaType; //???辰?角????0-LED???辰??1-LCD???辰
	BYTE  byRes[31];
}NET_DVR_LED_AREA_INFO, *LPNET_DVR_LED_AREA_INFO;

typedef struct tagNET_DVR_LED_AREA_INFO_LIST
{
	DWORD dwSize;
	DWORD dwLEDAreaNum; //LED???辰????
	LPNET_DVR_LED_AREA_INFO lpstruBuffer; //??????????
	DWORD dwBufferSize; //???????車??
	BYTE   byRes[32];
}NET_DVR_LED_AREA_INFO_LIST, *LPNET_DVR_LED_AREA_INFO_LIST;

//????????????
typedef struct tagNET_DVR_CALL_WAITTING_CFG
{
	DWORD   dwSize;    //?芍?????車??
	BYTE    byEnable;    //??﹞?????????????, 0--????????1--????
	BYTE    byRes1;
	WORD    wWaitTime;//?????????㊣??????????
	BYTE    byRes[512];
}NET_DVR_CALL_WAITTING_CFG, *LPNET_DVR_CALL_WAITTING_CFG;

//????????
typedef struct tagNET_DVR_ALARM_LAMP_CFG
{
	DWORD   dwSize;    //?芍?????車??
	BYTE    byEnable;    //??﹞??????????“?㊣????, 0--????????1--????
	BYTE    byRes1;
	WORD   wFlashDuration;//?????“?㊣?????????㊣??????????
	WORD   wFlashIntervalTime;//?????????????㊣??????????
	BYTE    byRes[510];
}NET_DVR_ALARM_LAMP_CFG, *LPNET_DVR_ALARM_LAMP_CFG;

//?????芍??????
typedef struct tagNET_DVR_VOICE_PROMPTION_CFG
{
	DWORD   dwSize;    //?芍?????車??
	BYTE    byEnable;    //??﹞??????????芍??, 0--????????1--????
	BYTE    byRes1[3];
	BYTE    byCenterBusyFile[NAME_LEN];//????﹞㊣???芍????????????
	BYTE    byRefusedFile[NAME_LEN];//?????芍????????????
	BYTE    byHangUpFile[NAME_LEN];//?????芍???芍????????????
	BYTE    byCallWaittingFile[NAME_LEN];//???????辰????????
	BYTE    byConsultWaittingFile[NAME_LEN];//????℅??????辰????????
	BYTE    byRes[480];
}NET_DVR_VOICE_PROMPTION_CFG, *LPNET_DVR_VOICE_PROMPTION_CFG;

//???㊣㊣“?????赤
typedef struct tagNET_DVR_EMERGENCE_ALARM_RSP_CTRL_CFG
{
	DWORD   dwSize;        //?芍?????車??
	BYTE    byCommand;    //?????邦????0--centerbusy??1--refuse
	BYTE    byType;        //???赤?角????0?????㊣㊣“????1??????℅???
	BYTE    byRes[510];
}NET_DVR_EMERGENCE_ALARM_RSP_CTRL_CFG, *LPNET_DVR_EMERGENCE_ALARM_RSP_CTRL_CFG;

///////////*????????????_V50/////////////
typedef struct _tagNET_DVR_ALARMHOST_NETPARAM_V50
{
	DWORD     dwSize;
	NET_DVR_IPADDR  struIP;
	WORD     wPort;
	BYTE    byAddressType;    //0 - ??????, 1 - ipv4/ipv6???﹞??2 - ?辰??
	BYTE    byEnable; //??????0-????????1-????
	BYTE    byDomainName[MAX_DOMAIN_NAME/*64*/]; //?辰????GPRS???????????????????????㊣??℅????迄???∫
	BYTE    byReportProtocol;        //1-private 2-NAL2300, 3-Ehome
	BYTE    byDevID[ACCOUNTNUM_LEN_32/*32*/]; //???谷??NAL2300?㊣???∫
	BYTE    byProtocolVersion;            //EHome???谷∼?㊣???0-??????,1“Cv2.0??2“Cv4.0??3-v5.0
	BYTE    byRes1[3];
	BYTE    byEHomeKey[NET_SDK_EHOME_KEY_LEN];            //EHome Key?“????EHome 5.0∼?㊣???
	BYTE    byRes2[28]; //GPRS???辰?????????????“??﹞????‾???????????迄?????豕????????﹞????‾???????∟??????℅???
} NET_DVR_ALARMHOST_NETPARAM_V50, *LPNET_DVR_ALARMHOST_NETPARAM_V50;

typedef struct _tagNET_DVR_ALARMHOST_NETCFG_V50
{
	DWORD dwSize;
	NET_DVR_ALARMHOST_NETPARAM_V50   struNetCenter[MAX_CENTERNUM];
	BYTE        byRes1[128];
} NET_DVR_ALARMHOST_NETCFG_V50, *LPNET_DVR_ALARMHOST_NETCFG_V50;
//??㊣那﹞?℅∼?????角??
typedef enum tagSTREAM_TYPE {
	STREAM_PS = 0x1,   //PS?????????‾????????????????????????
	STREAM_3GPP = 0x2,   //3GPP????????????????
}STREAM_TYPE;
typedef enum tagNET_SDK_INIT_CFG_TYPE
{
	NET_SDK_INIT_CFG_TYPE_CHECK_MODULE_COM = 0, //??????㊣????????足?谷
	NET_SDK_INIT_CFG_ABILITY = 1,   //sdk?∫????????????????
	NET_SDK_INIT_CFG_SDK_PATH = 2,  //?豕??℅谷?????????﹞??
	NET_SDK_INIT_CFG_LIBEAY_PATH = 3, //?豕??OpenSSL??libeay32.dll/libcrypto.so/libcrypto.dylib?迄???﹞??
	NET_SDK_INIT_CFG_SSLEAY_PATH = 4  //?豕??OpenSSL??ssleay32.dll/libssl.so/libssl.dylib?迄???﹞??
}NET_SDK_INIT_CFG_TYPE;

typedef struct tagNET_DVR_INIT_CHECK_MODULE_COM
{
	BYTE byEnable; //????㊣??????足?谷?迆?? 0-????????1-????
	BYTE byRes[255];
}NET_DVR_INIT_CHECK_MODULE_COM, *LPNET_DVR_INIT_CHECK_MODULE_COM;
//SDK?∫????℅??車?﹞????????
typedef enum _INIT_CFG_MAX_NUM
{
	INIT_CFG_NUM_2048 = 2048,   // 2048?﹞
	INIT_CFG_NUM_5120 = 5120,   //5120?﹞
	INIT_CFG_NUM_10240 = 10240,   // 10240?﹞
	INIT_CFG_NUM_15360 = 15360,   // 15360?﹞
	INIT_CFG_NUM_20480 = 20480,   // 20480?﹞
}INIT_CFG_MAX_NUM;

typedef struct tagNET_DVR_INIT_CFG_ABILITY
{
	INIT_CFG_MAX_NUM    enumMaxLoginUsersNum;                //℅??角???赤??℅??芍???∫??????
	INIT_CFG_MAX_NUM   enumMaxAlarmNum;                      //℅??車???????﹞??
	BYTE    byRes[64];
}NET_DVR_INIT_CFG_ABILITY, *LPNET_DVR_INIT_CFG_ABILITY;

typedef struct tagNET_DVR_LOCAL_SDK_PATH
{
	char sPath[NET_SDK_MAX_FILE_PATH];//℅谷???????﹞
	BYTE byRes[128];
}NET_DVR_LOCAL_SDK_PATH, *LPNET_DVR_LOCAL_SDK_PATH;

typedef struct tagNET_DVR_SDKMEMPOOL_CFG
{
	BYTE byRes[256];
}NET_DVR_SDKMEMPOOL_CFG, *LPNET_DVR_SDKMEMPOOL_CFG;


typedef struct tagNET_DVR_RES_INFO
{
	DWORD dwImageWidth; //?????赤??
	DWORD dwImageHeight; //????????
}NET_DVR_RES_INFO, *LPNET_DVR_RES_INFO;

typedef struct tagNET_DVR_VS_INPUT_CHAN_INIT
{
	DWORD dwSize;
	DWORD dwVSInputChan; //?谷?????????“????
	DWORD dwResNums; //﹞?㊣?????????
	NET_DVR_RES_INFO struResList[MAX_RES_NUM_ONE_VS_INPUT_CHAN]; //﹞?㊣?????㊣赤
	BYTE byRes[32];
}NET_DVR_VS_INPUT_CHAN_INIT, *LPNET_DVR_VS_INPUT_CHAN_INIT;

typedef struct tagNET_DVR_VS_INPUT_CHAN_INIT_LIST
{
	DWORD dwSize;
	NET_DVR_VS_INPUT_CHAN_INIT struChanList[MAX_VS_INPUT_CHAN_NUM]; //?“????㊣赤
	BYTE byRes[32];
}NET_DVR_VS_INPUT_CHAN_INIT_LIST, *LPNET_DVR_VS_INPUT_CHAN_INIT_LIST;

typedef struct tagNET_DVR_VS_INPUT_CHAN_CFG
{
	DWORD dwSize;
	DWORD dwVSInputChan; //?谷?????????“????
	NET_DVR_RES_INFO struResolutin; //﹞?㊣???
	BYTE byRes[64];
}NET_DVR_VS_INPUT_CHAN_CFG, *LPNET_DVR_VS_INPUT_CHAN_CFG;

typedef struct tagNET_DVR_VS_NETSRC_CFG
{
	DWORD dwSize;
	DWORD dwVSInputChan; //?谷?????????“????
	BYTE byDispUrl[MAX_URL_LEN]; //????URL
	BYTE byEnabled; //??﹞?????URL
	BYTE byRes[127];
}NET_DVR_VS_NETSRC_CFG, *LPNET_DVR_VS_NETSRC_CFG;

typedef struct tagNET_DVR_EDID_FILE_INFO
{
	DWORD   dwSize;
	DWORD   dwEDIDFileNo; //EDID????㊣角??????1????
	BYTE    byFileName[FILE_NAME_LEN]; //EDID????????
	BYTE    byRes[32];
}NET_DVR_EDID_FILE_INFO, *LPNET_DVR_EDID_FILE_INFO;

typedef struct tagNET_DVR_EDID_FILE_INFO_LIST
{
	DWORD   dwSize;
	DWORD   dwEDIDFileNum; //﹞?????NET_DVR_EDID_FILE_INFO????
	LPNET_DVR_EDID_FILE_INFO lpstruBuffer; //??????????
	DWORD   dwBufferSize; //???????車??
	BYTE    byRes[32];
}NET_DVR_EDID_FILE_INFO_LIST, *LPNET_DVR_EDID_FILE_INFO_LIST;

//℅??∼??????OSD
typedef struct tagNET_DVR_OSD_INFO
{
	BYTE byEnabled;  //??﹞?????????-????????﹞???-????
	BYTE byEnabledFlash;  //??﹞?????????-????????﹞???-????
	BYTE byFontSize;  //℅????車????1-?車??2-????3-??
	BYTE byTransparent;  //???‾????????﹞??∫0-100
	NET_DVR_RGB_COLOR struColor;  //℅???????
	WORD wCoordinateX;  //OSD℅車????X℅?㊣那
	WORD wCoordinateY;  //OSD℅車????Y℅?㊣那
	BYTE byContent[MAX_LEN_OSD_CONTENT];  //OSD????
	BYTE byRes[32];
}NET_DVR_OSD_INFO, *LPNET_DVR_OSD_INFO;

typedef struct tagNET_DVR_SUBWND_DECODE_OSD
{
	DWORD dwSize;
	DWORD dwSubWndNo;  //℅??∼?????“4℅???℅谷??﹞?????
	DWORD dwOSDNums;  //??℅??∼????????OSD??????????
	NET_DVR_OSD_INFO struOSDList[MAX_NUM_OSD_ONE_SUBWND];  //OSD??????㊣赤
	BYTE byRes[32];
}NET_DVR_SUBWND_DECODE_OSD, *LPNET_DVR_SUBWND_DECODE_OSD;

typedef struct tagNET_DVR_SUBWND_DECODE_OSD_LIST
{
	DWORD dwSize;
	NET_DVR_SUBWND_DECODE_OSD struSubWndList[MAX_NUM_SPLIT_WND];  //?迄??℅??∼????????OSD
	BYTE byRes[32];
}NET_DVR_SUBWND_DECODE_OSD_LIST, *LPNET_DVR_SUBWND_DECODE_OSD_LIST;

typedef struct tagNET_DVR_DECODE_CHANNEL_OSD
{
	DWORD dwSize;
	NET_DVR_OSD_INFO struOSDInfo[MAX_NUM_OSD];  //OSD??????㊣赤
	BYTE byRes[32];
}NET_DVR_DECODE_CHANNEL_OSD, *LPNET_DVR_DECODE_CHANNEL_OSD;

//??????????????????????
typedef    struct tagNET_DVR_THERMINTELL_PARAM
{
	DWORD   dwSize;//?芍?????車??
	BYTE    byIntellType;  //????????℅????????角??,0~????+????﹞???(????)??1~?????足????2~?????足??,3~??????????, 4~??????????5-????+?????足????6-????+?????足?? 7-????﹞??? 8-????
	BYTE    byRes[127];
}NET_DVR_THERMINTELL_PARAM, *LPNET_DVR_THERMINTELL_PARAM;

typedef struct tagNET_DVR_FACE_THERMOMETRY_ALARM
{
	DWORD   dwSize;
	DWORD   dwChannel;//?“????
	BYTE    byRuleID;                //???????????辰ID:1-40
	BYTE    byRes1[3];
	BYTE    byRuleName[NAME_LEN];    //???辰????
	DWORD   dwRelativeTime; //?角???㊣㊣那
	DWORD   dwAbsTime; //?????㊣㊣那
	BYTE    byFaceDetectionState;//?????足??℅?????0~???足??????????1~???足????????
	BYTE    byThermometryUnit;//????????: 0-???????“??????1-???????““H????2-??????(K)
	BYTE    byAlarmRule;//㊣“?????辰??0-℅??????車????1-℅?????????
	BYTE    byRes2[1];
	float   fAlarmTemperature;//??﹞?㊣“???????“-20.0~120.0???????﹞?????????車1????
	float   fRuleTemperature;// ???辰????㊣“???????“-20.0~60.0???????﹞?????????車1????
	DWORD   dwVisibleLightImageLen;// ???????????∟??
	BYTE    *pVisibleLightImage;  //??????????????
	DWORD   dwFaceImageLen;// ????℅????∟??
	BYTE     *pFaceImage;  //????℅???????
	NET_VCA_RECT  struFaceRegion;//??????㊣那㊣????辰???豕㊣???㊣?℅???????????????℅???℅?㊣那
	float         fMinTemperature;// ℅????????“-20.0~120.0???????﹞?????????車1????
	float         fAverageTemperature;//???迄???“-20.0~120.0???????﹞?????????車1????
	NET_VCA_POINT struMinTemperaturePoint; //℅???????????℅?㊣那
	NET_VCA_POINT struMaxTemperaturePoint;//℅???????????℅?㊣那
	BYTE     byRes[720];
}NET_DVR_FACE_THERMOMETRY_ALARM, *LPNET_DVR_FACE_THERMOMETRY_ALARM;

//????GUID????
typedef struct tagNET_DVR_GUID_FILE_EXPORT
{
	DWORD   dwSize;
	char    sLoginPassWord[NET_SDK_MAX_LOGIN_PASSWORD_LEN/*128*/];    //???∫????????
	BYTE    byRes[128];
}NET_DVR_GUID_FILE_EXPORT, *LPNET_DVR_GUID_FILE_EXPORT;

//???∫???????????谷
typedef struct tagNET_DVR_LOGIN_PASSWORDCFG
{
	DWORD   dwSize;
	char    sLoginPassWord[NET_SDK_MAX_LOGIN_PASSWORD_LEN/*128*/];    //???∫????????
	BYTE    byRes[256];
}NET_DVR_LOGIN_PASSWORDCFG, *LPNET_DVR_LOGIN_PASSWORDCFG;

//????∼???????????
typedef struct tagNET_DVR_SINGLE_SECURITY_QUESTION_CFG
{
	DWORD   dwSize;
	DWORD   dwId;//?辰???“∼????????辰??????????
	char    sAnswer[NET_SDK_MAX_ANSWER_LEN/*256*/];//??∼??“?????㊣??????
	BYTE    byMark;//㊣那??  0-???豕?? 1-???豕??
	BYTE    byRes[127];
}NET_DVR_SINGLE_SECURITY_QUESTION_CFG, *LPNET_DVR_SINGLE_SECURITY_QUESTION_CFG;

//∼???????????
typedef struct tagNET_DVR_SECURITY_QUESTION_CFG
{
	DWORD   dwSize;
	NET_DVR_SINGLE_SECURITY_QUESTION_CFG  struSecurityQuestion[NET_SDK_MAX_QUESTION_LIST_LEN/*32*/];//∼?????????㊣赤
	char    sLoginPassWord[NET_SDK_MAX_LOGIN_PASSWORD_LEN/*128*/];//admin???∫????????
	BYTE    byRes[512];
}NET_DVR_SECURITY_QUESTION_CFG, *LPNET_DVR_SECURITY_QUESTION_CFG;

typedef    struct tagNET_DVR_ALARMIN_TRIGGER_COND
{
	DWORD   dwSize;
	DWORD   dwChannel;  //?“????????1????
	DWORD   dwAlarmInNo;//﹞?????????0????
	BYTE    byRes[256];
}NET_DVR_ALARMIN_TRIGGER_COND, *LPNET_DVR_ALARMIN_TRIGGER_COND;

typedef    struct tagNET_DVR_FACELIB_GUARD_COND
{
	DWORD   dwSize;
	DWORD   dwChannel;  //?“????
	char    szFDID[68];//????????ID
	BYTE    byRes[128];
}NET_DVR_FACELIB_GUARD_COND, *LPNET_DVR_FACELIB_GUARD_COND;

typedef struct tagNET_DVR_GUID_FILE_STATUS_INFO
{
	DWORD   dwSize;
	BYTE    byLockStatus; //0???????“??1?????“
	BYTE    byPasswd;     //0:?????赤?車??1?????????﹞??℅?:?????????“?㊣???∫??
	BYTE    byRetryNum;   //???角??????????℅?:?????????“?㊣???∫
	BYTE    byRes1;
	DWORD   dwLockTime;   //???角???“?㊣????????????℅?:???????“?㊣???∫
	BYTE    byRes[128];
}NET_DVR_GUID_FILE_STATUS_INFO, *LPNET_DVR_GUID_FILE_STATUS_INFO;


//????????????
typedef    struct tagNET_DVR_THERMOMETRY_MODE
{
	DWORD     dwSize;//?芍?????車??
	BYTE      byMode;//??????????0~???“??????1~℅“??????
	BYTE      byThermometryROIEnabled; //????ROI???? 0-㊣??? 1-?????? 2-?????“?迄????????????????
	BYTE      byRes[62];
}NET_DVR_THERMOMETRY_MODE, *LPNET_DVR_THERMOMETRY_MODE;

//???????角????﹞“??∼?㊣?????
typedef    struct tagNET_DVR_THERMAL_ALGINFO
{
	DWORD     dwSize;//?芍?????車??
	char      sThermometryAlgName[NET_SDK_MAX_THERMOMETRYALGNAME/*128*/];//??????﹞“??∼?㊣?????
	char      sShipsAlgName[NET_SDK_MAX_SHIPSALGNAME /*128*/];//??????﹞“??∼?㊣?????
	char      sFireAlgName[NET_SDK_MAX_FIRESALGNAME /*128*/];//?????足????﹞“??∼?㊣?????
	BYTE      byRes[768];
}NET_DVR_THERMAL_ALGINFO, *LPNET_DVR_THERMAL_ALGINFO;

//???‾???“????
typedef    struct tagNET_DVR_CURRENT_LOCK
{
	DWORD     dwSize;//?芍?????車??
	BYTE      byCurrentLock;//???“???㊣???迆???“???‾??0~?????“??1~???‾???“??2~3/4?‾???“??3~∼??‾???“
	BYTE      byRes[255];
}NET_DVR_CURRENT_LOCK, *LPNET_DVR_CURRENT_LOCK;

//??㊣???㊣“???“????????﹞?????
typedef struct tagNET_VCA_FACESNAP_RAWDATA_ALARM_
{
	DWORD  dwSize;   //?芍???車??
	DWORD  dwRelativeTime;       // ?角???㊣㊣那
	DWORD  dwAbsTime;            // ?????㊣㊣那
	NET_VCA_DEV_INFO struDevInfo;  //?∼???豕㊣?????
	DWORD  dwJsonDataLen;        //json?????“????????0-??????????﹞?0㊣赤?????????“???芍?????車?迆℅???json?????∟????
	BYTE*  pJsonBuff;// json????????
	BYTE   byRes[256];           // ㊣???℅???
}NET_VCA_FACESNAP_RAWDATA_ALARM, *LPNET_VCA_FACESNAP_RAWDATA_ALARM;

//LED????????????
typedef struct tagNET_SDK_LED_SCREEN_CHECK_PARAM
{
	DWORD dwSize;
	BYTE byOperateType; //??℅‾?角????1-??????????????2-?????∟????3-????????????
	BYTE byIsRGBSynChk;	//RGB??﹞??????‾????0-???∫????!0-?∫????byOperateType??1??2?㊣???∫
	BYTE byRes1[2];
	WORD wRgbPermil;    //RGB?????‾?????∫﹞?㊣???byOperateType??1??2??byIsRGBSynChk﹞????㊣???∫
	WORD wRedPermil;    //?足???‾?????∫﹞?㊣???byOperateType??1??2??byIsRGBSynChk?????㊣???∫
	WORD wGreenPermil;  //?????‾?????∫﹞?㊣???byOperateType??1??2??byIsRGBSynChk?????㊣???∫
	WORD wBluePermil;   //?????‾?????∫﹞?㊣???byOperateType??1??2??byIsRGBSynChk?????㊣???∫
	DWORD dwRectCount;  //???????辰??????
	NET_DVR_RECTCFG_EX struRectList[MAX_SCREEN_AREA_NUM];   //???????辰??㊣赤?????辰??﹞?
	BYTE byRes2[64];
}NET_SDK_LED_SCREEN_CHECK_PARAM, *LPNET_SDK_LED_SCREEN_CHECK_PARAM;

//LED?????????足??????
typedef struct tagNET_SDK_SCREEN_CHECK_RESPONSE_DATA
{
	DWORD dwSize;
	BYTE byDataType;                //?????角????1-?????“????????????2-℅???
	BYTE byOperateType;             //??℅‾?角????1-??????????????2-?????∟????3-????????????
	BYTE byProgress;                //??????byDataType??1?㊣???∫??0-100
	BYTE byStatus;                  //℅?????byDataType??2?㊣???∫??1-LED???????辰?????∫∼???2-LED???????辰???????????“??????
	NET_DVR_RECTCFG_EX struRect;    //LED???????辰??byDataType??2?㊣???∫
	BYTE byRes[64];
}NET_SDK_SCREEN_CHECK_RESPONSE_DATA, *LPNET_SDK_SCREEN_CHECK_RESPONSE_DATA;

typedef struct tagNET_DVR_PLAY_BY_NAME_PARA
{
	char szFileName[100]; //??﹞???????
	BYTE byDownload;    //??﹞????? 0-﹞???1-??
	BYTE byRes1[127];
	HWND hWnd;  //??﹞????∼????㊣迆????????????SDK???????????‾??????????????????
	NET_DVR_ADDRESS struAddr; //?????迄????????CS???﹞?????????????????谷???㊣?芍﹞???
							  //????????㊣赤??㊣????????﹞
	BYTE byRes2[256];
}NET_DVR_PLAY_BY_NAME_PARA, *LPNET_DVR_PLAY_BY_NAME_PARA;

//∼???????????????????????
typedef struct tagNET_DVR_DOWNLOAD_BY_NAME_COND
{
	char *pFileName; //??﹞?????????∼邦??\0??℅??車100℅???
	char *pSavedFileName;//????㊣???????
	NET_DVR_ADDRESS struAddr; //?????迄????????CS???﹞?????????????????谷???㊣?芍﹞???
							  //????????㊣赤??㊣????????﹞
	BYTE byRes[256];
}NET_DVR_DOWNLOAD_BY_NAME_COND, *LPNET_DVR_DOWNLOAD_BY_NAME_COND;

typedef struct tagNET_DVR_PIC_PARAM   //?谷???芍???芍????
{
	char *pDVRFileName;  //????????∼邦??\0??℅??車64℅???
	char *pSavedFileBuf; //㊣??????????????????????????那????﹞?
	DWORD dwBufLen; //???????車??
	DWORD *lpdwRetLen; //???????????????∟??????????????NULL
	NET_DVR_ADDRESS struAddr; //?????迄???????﹞???????????谷???㊣?芍﹞???
	BYTE byRes[256];   //㊣???℅???
}NET_DVR_PIC_PARAM, *LPNET_DVR_PIC_PARAM;

#define NET_SDK_MAX_INDENTITY_KEY_LEN 64 //??????℅‾?????∟??

//????????????????
typedef struct tagNET_DVR_FACELIB_COND
{
	DWORD       dwSize;
	char        szFDID[NET_SDK_MAX_FDID_LEN/*256*/];//??????ID
	BYTE        byConcurrent;//?豕㊣???﹞????赤 0-????????1-????
	BYTE        byCover;//??﹞??????????? 0-﹞???1-??
	BYTE        byCustomFaceLibID;//FDID??﹞???℅??“????0-??????1-????
								  /*?㊣?㊣/ISAPI/Intelligent/channels/<ID>/faceContrast/capabilities?㊣??????﹞???isSupportNoSaveUploadPicture?????????㊣??
								  ?迆㊣赤﹞???﹞????赤?????????∫????㊣???????????????℅‾:?㊣???????????????豕㊣??“???????車???芍??????????????????????
								  ℅???????℅‾??﹞“????﹞????赤???㊣??????*/
	BYTE        byPictureSaveMode;//????????㊣?????????0-㊣?????1-??㊣???;
	BYTE        byIdentityKey[NET_SDK_MAX_INDENTITY_KEY_LEN/*64*/];//??????℅‾????
	BYTE        byRes[60];
}NET_DVR_FACELIB_COND, *LPNET_DVR_FACELIB_COND;

typedef  struct  tagNET_DVR_EXPORT_PUBLISH_SCHEDULE
{
	DWORD       dwScheduleID;// ?????‾??
	DOWNLOAD_DATA_CB    fnDownloadFileCallBack;    //???????‾????
	void*   pUser;    //???∫????????
	BYTE    byRes[32];
}NET_DVR_EXPORT_PUBLISH_SCHEDULE, *LPNET_DVR_EXPORT_PUBLISH_SCHEDULE;

typedef struct tagNET_DVR_GBT28181_AUDIO_OUTPUT_COND
{
	DWORD dwSize;
	DWORD  dwAudioChannel;//?????????“????
	BYTE   byRes[128];
}NET_DVR_GBT28181_AUDIO_OUTPUT_COND, *LPNET_DVR_GBT28181_AUDIO_OUTPUT_COND;

//GBT28181???谷???????????“?????? ?????芍??
typedef struct tagNET_DVR_GBT28181_AUDIO_OUTPUT_CFG
{
	DWORD                   dwSize;
	char    szAudioOutNumID[MAX_COMPRESSIONID_LEN];//?豕㊣?????????㊣角??ID
	BYTE             byRes[256];
}NET_DVR_GBT28181_AUDIO_OUTPUT_CFG, *LPNET_DVR_GBT28181_AUDIO_OUTPUT_CFG;

typedef struct tagNET_DVR_NOTICE_VIDEO_DATA
{
	DWORD dwSize;
	DWORD dwFileSize;     //?????車??????????℅???
	BYTE  byNoticeNumber[MAX_NOTICE_NUMBER_LEN]; //????㊣角??
	BYTE  byRes[2016];
}NET_DVR_NOTICE_VIDEO_DATA, *LPNET_DVR_NOTICE_VIDEO_DATA;

typedef struct tagNET_DVR_NOTICE_VIDEO_DATA_COND
{
	DWORD       dwSize;
	BYTE  byRes[256];          //㊣???
}NET_DVR_NOTICE_VIDEO_DATA_COND, *LPNET_DVR_NOTICE_VIDEO_DATA_COND;

typedef struct tagNET_DVR_NOTICE_VIDEO_DATA_CFG
{
	DWORD    dwSize;
	DWORD dwDataLen;     //?????∟??
	char*  pDataBuffer;     //????????
	BYTE  byDataType;      //?????角????0-???∫??1-?芍?????????“NET_DVR_NOTICE_VIDEO_DATA????2-????????
	BYTE  byRes[63];
}NET_DVR_NOTICE_VIDEO_DATA_CFG, *LPNET_DVR_NOTICE_VIDEO_DATA_CFG;

typedef struct tagNET_DVR_UPGRADE_FIRMWARE_INFO
{
	DWORD dwMagicNumber;    /* ?∫??℅????????“??0x484b5753 */
	DWORD dwCheckSum;       /* ?????﹞???谷?? */
	DWORD dwHeadLen;        /* ?????﹞?∟?? */
	DWORD dwFileNums;       /* ???????? */
	DWORD dwLanguage;       /* ??????1-?????辰?角??????2-???? */
	DWORD dwDeviceClassID;  /* 1 “C DS9000 DVR */
	DWORD dwOemCode;        /* 1 “C hikvision  */
	BYTE  byUpgradeVersion; /* ????∼?㊣?: 0xFE - ?豕????flash, ram, DSP ram ??????*/
	BYTE  byResFeature[15]; /* ㊣???℅??? */
	BYTE  byFlashSize;      /* 0 - do not need check; 1 - 16M; 2 - 32M; 3 - 64M  */
	BYTE  byRamSize;        /* 0 - do not need check; 1 - 128M; 2 - 256M; 3 - 512M; 4 - 1024M*/
	BYTE  byDspRamSize;     /* 0 - do not need check; 1 - 64M; 2 - 128M; 3 - 256M */
	BYTE  byRes[17];        /* ㊣??? */
}NET_DVR_UPGRADE_FIRMWARE_INFO, *LPNET_DVR_UPGRADE_FIRMWARE_INFO;


typedef struct tagNET_DVR_SCHEDULE_FILE_RET
{
	DWORD   dwSize;
	char   szFileName[32];    //??????
	DWORD   dwFileLen;  //?????∟??
	BYTE    byRes[64];
}NET_DVR_SCHEDULE_FILE_RET, *LPNET_DVR_SCHEDULE_FILE_RET;

#define NET_SDK_MAX_EXAM_ROUND_NO       64  //????????㊣角??℅??車?∟??
#define NET_SDK_MAX_EXAM_NO             64  //????㊣角??℅??車?∟??
#define NET_SDK_MAX_EXAM_SUBJECT        64  //????????℅??車?∟??
#define NET_SDK_MAX_TEACHER_NO          64  //?角??????㊣角??℅??車?∟??
#define NET_SDK_MAX_TEACHER_NAME        64  //?角??????????℅??車?∟??
#define NET_SDK_MAX_EXAMINEE_NO         64  //???迆㊣角??℅??車?∟??
#define NET_SDK_MAX_ADMISSION_TICKET    64  //℅????∟??℅??車?∟??

typedef struct tagNET_DVR_EXAM_INFO_COND
{
	DWORD dwSize;
	DWORD dwExamNumber; //????????????
	BYTE  byRes[128];
}NET_DVR_EXAM_INFO_COND, *LPNET_DVR_EXAM_INFO_COND;

typedef struct tagNET_DVR_EXAM_INFO_CFG
{
	DWORD dwSize;
	BYTE  byExamRoundNo[NET_SDK_MAX_EXAM_ROUND_NO/*64*/]; //????????㊣角???“??????????????
	BYTE  byExamNo[NET_SDK_MAX_EXAM_NO/*64*/]; //????㊣角???“??????????∼邦???角????????
	BYTE  byExamSubject[NET_SDK_MAX_EXAM_SUBJECT/*64*/]; //????????
	BYTE  byTeacherNo[NET_SDK_MAX_TEACHER_NO/*64*/]; //?角??????㊣角??
	BYTE  byTeacherName[NET_SDK_MAX_TEACHER_NAME/*64*/]; //?角??????????
	NET_DVR_TIME    struStartTime; //?????????㊣??
	NET_DVR_TIME    struEndTime; //?????芍???㊣??
	BYTE  byExamInfoValid; //??????????﹞????∫??0-???∫??1-???∫?“????????????㊣角??????????????????℅?????0?㊣?迆㊣赤??????
	BYTE  byRes[127];
}NET_DVR_EXAM_INFO_CFG, *LPNET_DVR_EXAM_INFO_CFG;

typedef struct tagNET_DVR_EXAM_INFO_STATUS
{
	DWORD dwSize;
	BYTE  byExamRoundNo[NET_SDK_MAX_EXAM_ROUND_NO/*64*/]; //????????㊣角???“??????????????
	BYTE  byStatus;  //??﹞?℅?????0-???∫??1-?∫∼???2-?????“?迆㊣赤????????????﹞???﹞???????
	BYTE  byRes[127];
}NET_DVR_EXAM_INFO_STATUS, *LPNET_DVR_EXAM_INFO_STATUS;

typedef struct tagNET_DVR_EXAMINEE_INFO_COND
{
	DWORD dwSize;
	DWORD dwExamineeNumber; //???迆????????
	BYTE  byRes[128];
}NET_DVR_EXAMINEE_INFO_COND, *LPNET_DVR_EXAMINEE_INFO_COND;

typedef struct tagNET_DVR_EXAMINEE_INFO_CFG
{
	DWORD dwSize;
	BYTE  byExamineeNo[NET_SDK_MAX_EXAMINEE_NO/*64*/]; //???迆㊣角??
	BYTE  byAdmissionTicket[NET_SDK_MAX_ADMISSION_TICKET/*64*/]; //℅????∟??
	BYTE  byExamRoundNo[NET_SDK_MAX_EXAM_ROUND_NO/*64*/]; //????????㊣角???“??????????????
	BYTE  byName[NAME_LEN/*32*/]; //????
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???迆???????“??
	BYTE  bySex; //??㊣???0-???∫??1-????2-??
	BYTE  byExamineeInfoValid; //???迆??????﹞????∫??0-???∫??1-???∫?“???????迆㊣角????????????㊣角?????????迆????????℅?????0?㊣?迆㊣赤??????
	BYTE  byRes[126];
}NET_DVR_EXAMINEE_INFO_CFG, *LPNET_DVR_EXAMINEE_INFO_CFG;

typedef struct tagNET_DVR_EXAMINEE_INFO_STATUS
{
	DWORD dwSize;
	BYTE  byExamineeNo[NET_SDK_MAX_EXAMINEE_NO/*64*/]; //???迆㊣角??
	BYTE  byExamRoundNo[NET_SDK_MAX_EXAM_ROUND_NO/*64*/]; //????????㊣角???“??????????????
	BYTE  byStatus;  //??﹞?℅?????0-???∫??1-?∫∼???2-?????“?迆㊣赤?????迆??????﹞???﹞???????
	BYTE  byRes[127];
}NET_DVR_EXAMINEE_INFO_STATUS, *LPNET_DVR_EXAMINEE_INFO_STATUS;

typedef struct tagNET_DVR_EXAM_COMPARE_RESULT_COND
{
	DWORD dwSize;
	BYTE  byExamRoundNo[NET_SDK_MAX_EXAM_ROUND_NO/*64*/]; //????????㊣角???“??????????????
	BYTE  byExamNo[NET_SDK_MAX_EXAM_NO/*64*/]; //????㊣角???“??????????∼邦???角????????
	NET_DVR_TIME    struStartTime; //?????㊣??
	NET_DVR_TIME    struEndTime; //?芍???㊣??
	BYTE  byRes[512];
}NET_DVR_EXAM_COMPARE_RESULT_COND, *LPNET_DVR_EXAM_COMPARE_RESULT_COND;

typedef struct tagNET_DVR_EXAM_COMPARE_RESULT_CFG
{
	DWORD dwSize;
	NET_DVR_TIME    struTime; //?㊣??
	BYTE  byExamineeNo[NET_SDK_MAX_EXAMINEE_NO/*64*/]; //???迆㊣角??
	BYTE  byAdmissionTicket[NET_SDK_MAX_ADMISSION_TICKET/*64*/]; //℅????∟??
	BYTE  byExamNo[NET_SDK_MAX_EXAM_NO/*64*/]; //????㊣角???“??????????∼邦???角????????
	BYTE  byExamRoundNo[NET_SDK_MAX_EXAM_ROUND_NO/*64*/]; //????????㊣角???“??????????????
	BYTE  byName[NAME_LEN/*32*/]; //????
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???迆???????“??
	DWORD dwPicDataLen; //㊣???℅????????????車????????0??㊣赤???車????????
	char  *pPicData; //㊣???℅???????????
	BYTE  byRes[256];
}NET_DVR_EXAM_COMPARE_RESULT_CFG, *LPNET_DVR_EXAM_COMPARE_RESULT_CFG;

typedef struct tagNET_DVR_BLACK_LIST_PICTURE_COND
{
	DWORD       dwSize;
	DWORD       dwPictureNum; //????????
	BYTE  byRes[128];
}NET_DVR_BLACK_LIST_PICTURE_COND, *LPNET_DVR_BLACK_LIST_PICTURE_COND;

typedef struct tagNET_DVR_BLACK_LIST_PICTURE_STATUS
{
	DWORD       dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN/*32*/]; //?“??
	BYTE  byStatus; //℅?????0-???∫????1-???赤????2-?????∫∼???3-????
	BYTE  byRes[63];
}NET_DVR_BLACK_LIST_PICTURE_STATUS, *LPNET_DVR_BLACK_LIST_PICTURE_STATUS;

typedef struct tagNET_DVR_BLACK_LIST_PICTURE_CFG
{
	DWORD  dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN/*32*/]; //?“??
	BYTE  byName[NAME_LEN/*32*/]; //????
	BYTE  bySex; //??㊣???0-???∫??1-????2-??
	BYTE  byPictureValid; //????????????﹞????∫??0-???∫??1-???∫?“????∼??“????????????????????℅?????0?㊣?迆㊣赤???????????㊣??????????????????
	BYTE  byRes1[2];
	DWORD dwPictureLen; //???????????∟???“?????車????????1M??
	char*  pPictureBuffer; //??????????????
	BYTE  byRes[128];
}NET_DVR_BLACK_LIST_PICTURE_CFG, *LPNET_DVR_BLACK_LIST_PICTURE_CFG;

typedef struct tagNET_DVR_UPLOAD_ID_BLACK_LIST_COND
{
	DWORD       dwSize;
	DWORD       dwBlackListNum; //??????????
	BYTE  byRes[128];
}NET_DVR_UPLOAD_ID_BLACK_LIST_COND, *LPNET_DVR_UPLOAD_ID_BLACK_LIST_COND;

typedef struct tagNET_DVR_UPLOAD_ID_BLACK_LIST_CFG
{
	DWORD       dwSize;
	NET_DVR_ID_CARD_INFO  struIDCardCfg;//?赤﹞??∟?????“???芍?????????????赤﹞??∟??????㊣???????????℅?????????????
	BYTE  byBlackListValid; //?赤﹞??∟????????﹞????∫??0-???∫??1-???∫?“????∼??赤﹞??∟?????????赤﹞??∟??????????℅?????0?㊣?迆㊣赤??????
	BYTE  byRes[127];
}NET_DVR_UPLOAD_ID_BLACK_LIST_CFG, *LPNET_DVR_UPLOAD_ID_BLACK_LIST_CFG;

typedef struct tagNET_DVR_UPLOAD_ID_BLACK_LIST_STATUS
{
	DWORD       dwSize;
	BYTE  byIDNum[MAX_ID_NUM_LEN];   //?赤﹞??∟????
	BYTE  byStatus; //℅?????0-???∫??1-???赤????2-?????∫∼???3-????
	BYTE  byRes[63];
}NET_DVR_UPLOAD_ID_BLACK_LIST_STATUS, *LPNET_DVR_UPLOAD_ID_BLACK_LIST_STATUS;

typedef struct tagNET_DVR_ALARM_ISAPI_INFO
{
	char * pAlarmData;           // ㊣“??????
	DWORD dwAlarmDataLen;   // ㊣“???????∟??
	BYTE byDataType;        // 0-invalid,1-xml,2-json
	BYTE byPicturesNumber;  // ????????
	BYTE byRes[2];
	void * pPicPackData;         // ????㊣??∟??﹞?
	BYTE byRes1[32];
}NET_DVR_ALARM_ISAPI_INFO, *LPNET_DVR_ALARM_ISAPI_INFO;

typedef struct tagNET_DVR_ALARM_ISAPI_PICDATA
{
	DWORD dwPicLen;
	BYTE byPicType;  //????????: 1- jpg
	BYTE byRes[3];
	char szFilename[MAX_FILE_PATH_LEN];
	BYTE *pPicData;
}NET_DVR_ALARM_ISAPI_PICDATA, *LPNET_DVR_ALARM_ISAPI_PICDATA;

typedef struct tagNET_DVR_FORMAT_HDD
{
	DWORD dwSize;//?芍?????∟??
	DWORD dwDiskNo;//??????????0??????0xff㊣赤?????迄?????????∫?“??∼邦?“??????????
	NET_DVR_IPADDR struLocateIP;//???????迄???豕㊣???IP?“???????????赤????V50??????????szHDLocateIP??????
	BYTE byRes[16];
}NET_DVR_FORMAT_HDD, *LPNET_DVR_FORMAT_HDD;

typedef struct tagNET_DVR_CHECK_FACE_PICTURE_COND
{
	DWORD       dwSize;
	DWORD       dwPictureNum; //????????
	BYTE  byCheckTemplate; //0-???谷??????﹞???﹞“?“????????1-???谷???????“????????﹞?????
	BYTE  byRes[127];
}NET_DVR_CHECK_FACE_PICTURE_COND, *LPNET_DVR_CHECK_FACE_PICTURE_COND;

typedef struct tagNET_DVR_CHECK_FACE_PICTURE_CFG
{
	DWORD       dwSize;
	DWORD dwPictureNo; //????㊣角??
	DWORD dwPictureLen; //?????∟???“?????車????????200k??
	char*  pPictureBuffer; //????????
	DWORD dwFaceTemplateLen;  //?????“???????∟??
	char*  pFaceTemplateBuffer;   //?????“??????????
	BYTE  byRes[248];
}NET_DVR_CHECK_FACE_PICTURE_CFG, *LPNET_DVR_CHECK_FACE_PICTURE_CFG;

typedef struct tagNET_DVR_CHECK_FACE_PICTURE_STATUS
{
	DWORD       dwSize;
	DWORD dwPictureNo; //????㊣角??
	BYTE  byCheckStatus; //???谷?芍????0-???∫??1-?“????????2-?“???∫∼???3-???????谷?“???足????4-????????????5-??????????6-??????????7-??????℅車??8-??????????9-???????㊣??℅???
						 //10 - ???????㊣??℅???11-???????角????12-????????∼???????13-????????∼???????,14-???????????車
	BYTE  byRes[127];
}NET_DVR_CHECK_FACE_PICTURE_STATUS, *LPNET_DVR_CHECK_FACE_PICTURE_STATUS;

typedef struct tagNET_SDK_NPQ_STATE_SINGLE
{
	DWORD  dwRttUs;			//rtt??????us
	DWORD  dwRealRttUs;		//???㊣rtt??????us
	DWORD  dwBitRate;        //??????????bps
	BYTE   byLossFraction;	//??∼邦????????1/256
	BYTE   byLossFraction2;	//???????????車????∼邦??????????????????????????1/256
	BYTE   byRes[126];
}NET_SDK_NPQ_STATE_SINGLE, *LPNET_SDK_NPQ_STATE_SINGLE;


typedef struct tagNET_SDK_NPQ_STATE
{
	DWORD                       dwSize;
	NET_SDK_NPQ_STATE_SINGLE    struAudioState;  //????????℅???
	NET_SDK_NPQ_STATE_SINGLE    struVideoState;  //????????℅???
	BYTE                        byRes[256];
}NET_SDK_NPQ_STATE, *LPNET_SDK_NPQ_STATE;

typedef struct tagNET_SDK_NPQ_NOTIFY_PARAM
{
	LONG   iVersion;				//?芍????∼?㊣??????????車????
	DWORD dwBitRate;		//???? ????bps
	BOOL   bHaveBitrate;			//????℅?????﹞????∫㊣那??
	BOOL   bHaveForceIframe;		//????I??℅?????﹞????∫㊣那??
	BOOL   bForceIframe;			//????I??
	BOOL   bHaveScale;			    //scale℅?????﹞????∫㊣那??,??﹞??㊣??℅??????∫,???“??SDK?足﹞?????????
	float  fScale;				    //scale????  1??2??4??8,??﹞??㊣??℅??????∫,???“??SDK?足﹞?????????
	BYTE   res[240];
}NET_SDK_NPQ_NOTIFY_PARAM, *LPNET_SDK_NPQ_NOTIFY_PARAM;

//㊣“???????谷???????芍????
typedef	struct tagNET_DVR_ALARM_SEARCH_COND
{
	DWORD                       dwSize;
	NET_DVR_TIME_SEARCH_COND    strStartTime; //?????㊣??,?㊣???????辰?迆㊣赤???“???㊣????????
	NET_DVR_TIME_SEARCH_COND    strStopTime;  //?芍???㊣??, ?㊣???????辰?迆㊣赤???“???㊣????????
											  /*
											  ㊣“???邦??????℅???????㊣“????﹞??角???角???????∼?∫????
											  COMM_VCA_ALARM 	0x4993  ?????足??㊣“??
											  COMM_UPLOAD_FACESNAP_RESULT    0x1112  ??????㊣??芍??????
											  COMM_SNAP_MATCH_ALAR    0x2902  ????㊣????芍??????
											  */
	DWORD                      dwAlarmComm;   //?????邦?????????迆㊣赤??????㊣“???邦????????
	char                       sAlarmUID[64];   //UID㊣那???“????㊣“???㊣?豕㊣?﹞?????UID㊣那????64℅??????∟?????????????㊣???“???﹞????????????????????﹞???℅谷????,?????辰?迆㊣赤????﹞?UID
	BYTE                       byRes[128];
}NET_DVR_ALARM_SEARCH_COND, *LPNET_DVR_ALARM_SEARCH_COND;
//㊣“???????谷???芍???芍????
typedef	struct tagNET_DVR_ALARM_SEARCH_RESULT
{
	DWORD                   dwSize;
	/*
	㊣“???邦??????℅???????㊣“????﹞??角???角???????∼?∫????
	COMM_VCA_ALARM 	0x4993    ?????足??㊣“??
	COMM_UPLOAD_FACESNAP_RESULT    0x1112  ??????㊣??芍??????
	COMM_SNAP_MATCH_ALARM   0x2902 ????㊣????芍??????
	*/
	DWORD                   dwAlarmComm;
	/*
	㊣“??????????℅???????㊣“???????角???????∼?∫????
	?㊣COMM_VCA_ALARM?㊣????㊣“????????JSON㊣“??
	?㊣COMM_UPLOAD_FACESNAP_RESULT?㊣????㊣“????????NET_VCA_FACESNAP_RESULT
	?㊣COMM_SNAP_MATCH_ALARM?㊣????㊣“????????NET_VCA_FACESNAP_MATCH_ALARM
	*/
	DWORD                   dwAlarmLen;//㊣“??????????pAlarmInfo???????辰???????∟??
	char                    *pAlarmInfo;
	NET_DVR_ALARMER         struAlarmer;
	BYTE                    byRes[128];
}NET_DVR_ALARM_SEARCH_RESULT, *LPNET_DVR_ALARM_SEARCH_RESULT;

typedef struct tagNET_DVR_FACE_AND_TEMPLATE_COND
{
	DWORD dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“???“?豕???㊣?????????豕????
	DWORD dwFaceNum; //?豕???辰???????????????????㊣????0xffffffff㊣赤???????迄??????????
	BYTE  byRes[128];          //㊣???
}NET_DVR_FACE_AND_TEMPLATE_COND, *LPNET_DVR_FACE_AND_TEMPLATE_COND;

typedef struct tagNET_DVR_FACE_AND_TEMPLATE_CFG
{
	DWORD dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“?? 
	DWORD dwFaceLen;  //?????????∟???“?????車????????200k??
	char*  pFaceBuffer;   //????????????
	DWORD dwFaceTemplateLen;  //?????“???????∟??
	char*  pFaceTemplateBuffer;   //?????“??????????
	BYTE  byRes[116];
}NET_DVR_FACE_AND_TEMPLATE_CFG, *LPNET_DVR_FACE_AND_TEMPLATE_CFG;

typedef struct tagNET_DVR_FACE_AND_TEMPLATE_STATUS
{
	DWORD dwSize;
	BYTE  byCardNo[ACS_CARD_NO_LEN]; //???????????“??
	BYTE  byRecvStatus;//??????﹞?℅?????∼?℅???㊣赤????0-?∫∼???1-??????2-???????迆?“?????????迆??
	BYTE  byRes[131];
}NET_DVR_FACE_AND_TEMPLATE_STATUS, *LPNET_DVR_FACE_AND_TEMPLATE_STATUS;

typedef struct tagNET_DVR_SINGLE_HEATMAP_RESULT_PDC
{
	DWORD  dwMaxHeatMapValue;//℅??車??????
	DWORD  dwMinHeatMapValue;//℅?????????
	DWORD  dwTimeHeatMapValue;// (?㊣????????)???迄??????
	WORD   wArrayLine;//?????????????? 
	WORD   wArrayColumn;//?????????????? ?“?㊣????????0???㊣?辰??????????????????????????
	BYTE*  pBuffer;  //??????????????????????
	BYTE   byRes[32];
}NET_DVR_SINGLE_HEATMAP_RESULT_PDC, *LPNET_DVR_SINGLE_HEATMAP_RESULT_PDC;

//??????㊣“??????
typedef struct tagNET_DVR_HEATMAP_RESULT_PDC
{
	DWORD  dwSize;
	NET_DVR_TIME_EX   struStartTime;/*?????㊣??*/
	NET_DVR_TIME_EX   struEndTime;/*?芍???㊣??*/
	NET_VCA_DEV_INFO  struDevInfo;/*?豕㊣?????*/
	WORD   wDevInfoIvmsChannelEx;     //??NET_VCA_DEV_INFO????byIvmsChannel?????角??????㊣赤???邦?車???????????∫????byIvmsChannel????????????????℅??車??255???????∫??∼?㊣???????wDevInfoIvmsChannelEx??
	BYTE   byBrokenNetHttp;     //????????㊣那??????0-??????????????1-????????
	BYTE   byArrayUnitType;//???車?????????角???“???車???????????????????????????角????,1-byte, 2-short,4- int
						   /*
						   struSingleHeatMap[0]:㊣赤??∼?????????????????????????????????????
						   struSingleHeatMap[1]:㊣赤??∼?????????????????????????????????????
						   */
	NET_DVR_SINGLE_HEATMAP_RESULT_PDC struSingleHeatMap[2];
	WORD   wCurNumber;//?㊣?∼????
	WORD   wLeaveNumber;//????????
	BYTE   byRes1[60];
}NET_DVR_HEATMAP_RESULT_PDC, *LPNET_DVR_HEATMAP_RESULT_PDC;

//?豕㊣??∫??AI??﹞????“???????????????足??????
typedef struct _NET_AIOP_VIDEO_HEAD_
{
	DWORD dwSize;      //dwSize = sizeof(NET_AIOP_VIDEO_HEAD)
	DWORD dwChannel;    //?豕㊣?﹞????“?????“??????
	NET_DVR_SYSTEM_TIME     struTime; 	//?㊣??
	char  szTaskID[64];     //????????ID????℅?????????????﹞?
	DWORD dwAIOPDataSize;   //????AIOPDdata?????∟??
	DWORD dwPictureSize;    //????﹞????????∟??
	char  szMPID[64];        //?足??????∼邦ID??????????AIOP???足?????????????????“??URI(GET /ISAPI/Intelligent/AIOpenPlatform/algorithmModel/management?format=json)?????㊣?∼?豕㊣???????????∼邦??label description??????
	BYTE  *pBufferAIOPData;  //AIOPDdata????
	BYTE  *pBufferPicture;//????﹞???????????
	BYTE  byRes[184];
}NET_AIOP_VIDEO_HEAD, *LPNET_AIOP_VIDEO_HEAD;

//?豕㊣??∫??AI??﹞????“???????????????足??????
typedef struct _NET_AIOP_PICTURE_HEAD_
{
	DWORD dwSize;           //dwSize = sizeof(NET_AIOP_PICTURE_HEAD)
	NET_DVR_SYSTEM_TIME    struTime; 	//?㊣??
	char  szPID[64];        //??????﹞???????ID????℅?????????????﹞?
	DWORD dwAIOPDataSize;   //????AIOPDdata?????∟??
	BYTE  byStatus;         //℅???????0-??????1-?????車???赤?車
	BYTE byRes1[3];
	char szMPID[64]; //?足??????∼邦ID??????????AIOP???足????????????
	BYTE *pBufferAIOPData;//AIOPDdata????
	BYTE byRes[184];
}NET_AIOP_PICTURE_HEAD, *LPNET_AIOP_PICTURE_HEAD;

#define MAX_FILE_NAME_LEN		100     //℅??車???????∟
typedef struct tagNET_DVR_DOOR_FILE_UPLOAD_PARAM
{
	DWORD dwSize;
	DWORD dwFileSize;     //?????車??????????℅???
	BYTE  byFileName[MAX_FILE_NAME_LEN]; //????????
	BYTE  byRes1[256];
}NET_DVR_DOOR_FILE_UPLOAD_PARAM, *LPNET_DVR_DOOR_FILE_UPLOAD_PARAM;

#define AUDIO_FILE_NAME_LEN  32  //?????????????∟??
//????????????????
typedef struct tagNET_DVR_TRANS_AUDIO_INFO
{
	DWORD  dwSize;                        //?芍?????車??
	char   sAudioName[AUDIO_FILE_NAME_LEN];  //????????????
	BYTE   byAudioFormat;	               //??????????????0-wav
	BYTE   byRes[127];
}NET_DVR_TRANS_AUDIO_INFO, *LPNET_DVR_TRANS_AUDIO_INFO;

typedef struct _NET_AIOP_POLLING_VIDEO_HEAD_
{
	DWORD dwSize;			//dwSize = sizeof(NET_AIOP_POLLING_VIDEO_HEAD)		
	DWORD dwChannel;      //?豕㊣?﹞????“?????“????(℅?SDK???谷)??
	NET_DVR_SYSTEM_TIME     struTime; 	//?㊣??
	char  szTaskID[64];    //????℅???????ID????℅???????℅?????????﹞?
	DWORD dwAIOPDataSize;	//????AIOPDdata?????∟??
	DWORD dwPictureSize;	//????﹞????????∟??
	char  szMPID[64]; //?足??????∼邦ID??????????AIOP???足????????????
	BYTE  *pBufferAIOPData;//AIOPDdata????
	BYTE  *pBufferPicture;//????﹞???????????
	BYTE  byRes[184];
} NET_AIOP_POLLING_VIDEO_HEAD, *LPNET_AIOP_POLLING_VIDEO_HEAD;

typedef struct _NET_AIOP_POLLING_SNAP_HEAD_
{
	DWORD dwSize;			//dwSize = sizeof(NET_AIOP_POLLING_SNAP_HEAD)		
	DWORD dwChannel;      //?豕㊣?﹞????“?????“????(℅?SDK???谷)??
	NET_DVR_SYSTEM_TIME     struTime; 	//?㊣??
	char  szTaskID[64];    //????℅???????ID????℅???????℅?????????﹞?
	DWORD dwAIOPDataSize;	//????AIOPDdata?????∟??
	DWORD dwPictureSize;	//????﹞????????∟??
	char  szMPID[64];       //?足??????∼邦ID??????????AIOP???足????????????
	BYTE  *pBufferAIOPData;//AIOPDdata????
	BYTE  *pBufferPicture;//﹞???????????
	BYTE  byRes[184];
} NET_AIOP_POLLING_SNAP_HEAD, *LPNET_AIOP_POLLING_SNAP_HEAD;

typedef struct tagNET_DVR_AI_ALGORITHM_MODEL
{
	DWORD dwSize;
	DWORD dwDescribeLength;  //{AlgorithmModel} ?????∟??
	char* pDescribeBuffer; //{AlgorithmModel}????
	BYTE byRes[128];
}NET_DVR_AI_ALGORITHM_MODEL, *LPNET_DVR_AI_ALGORITHM_MODEL;

#if (defined __linux__)
typedef struct _NET_DVR_AUDIOENCInfo                     /* ???? */
{
	DWORD            in_frame_size;                /* ?????????????車??(BYTES)????GetInfoParam????﹞???         */
	int            reserved[16];                 /* ㊣??? */
} NET_DVR_AUDIOENC_INFO;
/* ㊣角?????? */
typedef enum _ENUM_AUDIO_ENC_MODE
{
	AMR_MR475_ = 0,        /* 4.75 kb/s */
	AMR_MR515_,          /* 5.15 kb/s */
	AMR_MR59_,            /* 5.90 kb/s */
	AMR_MR67_,            /* 6.70 kb/s */
	AMR_MR74_,            /* 7.40 kb/s */
	AMR_MR795_,            /* 7.95 kb/s */
	AMR_MR102_,            /* 10.2 kb/s */
	AMR_MR122_,          /* 12.2 kb/s */

	AMR_MRDTX_,            /* ??????    */
	AMR_N_MODES_
}ENUM_AUDIO_ENC_MODE;
// ????㊣角??
typedef struct _NET_DVR_AUDIOENC_PROCESS_PARAM_
{
	unsigned char		*in_buf;                      /* ????buf */
	unsigned char		*out_buf;                     /* ????buf */
	DWORD			out_frame_size;               /* ㊣角???????車??BYTE?? */

	int				g726enc_reset;                /* ???????? */
	int				g711_type;                    /* g711㊣角???角??,0 - U law, 1- A law */
	ENUM_AUDIO_ENC_MODE	enc_mode;                     /* ????㊣角????????AMR㊣角?????? */
	int				reserved[16];                 /* ㊣??? */
}NET_DVR_AUDIOENC_PROCESS_PARAM;

typedef struct _NET_DVR_AUDIODECInfo                     /* ???? */
{
	int            nchans;                         /* ?迄???? */
	int            sample_rate;                  /* ???迄?? */
	int            aacdec_profile;               /* ㊣角???????辰?? */
	int            reserved[16];                 /* ㊣??? */
} NET_DVR_AUDIODEC_INFO;


// ????????
typedef struct _NET_DVR_AUDIODEC_PROCESS_PARAM
{
	unsigned char		*in_buf;                      /* ????????buf */
	unsigned char		*out_buf;                     /* ????????buf */
	DWORD			in_data_size;                 /* ????in_buf??????byte?? */
	DWORD			proc_data_size;               /* ?????????????赤in_buf???????車??bytes */
	DWORD			out_frame_size;               /* ?????????車????BYTE?? */
	NET_DVR_AUDIODEC_INFO		dec_info;                     /* ???????????? */

	int				g726dec_reset;                /* ???????? */
	int				g711_type;                    /* g711㊣角???角??,0 - U law, 1- A law */
	int				reserved[16];                 /* ㊣??? */
} NET_DVR_AUDIODEC_PROCESS_PARAM;
const unsigned int G726_EBCIN_DECOUT_SIZE = 640; // G726??㊣角???????????∼???????????????車???“?“?∟??
#if (defined __x86_64__)
const unsigned int G726_ENC_OUT_SIZE = 160; // G726??????????㊣角???????車???“?“?∟??
const unsigned int G726_DEC_IN_SIZE = 200; // G726?????????????????∟???“?“?∟??
#else // if (defined __i386__)
const unsigned int G726_ENC_OUT_SIZE = 80; // G726??????????㊣角???????車???“?“?∟??
const unsigned int G726_DEC_IN_SIZE = 80; // G726?????????????????∟???“?“?∟??
#endif // (defined __x86_64__)
#endif // (defined __linux__)

										  /********************************SDK?????????迄?‾*********************************/
NET_DVR_API BOOL __stdcall NET_DVR_Init();
NET_DVR_API BOOL __stdcall NET_DVR_Cleanup();

//NET_DVR_SetDVRMessage??????
#ifdef _WIN32
NET_DVR_API BOOL __stdcall NET_DVR_SetDVRMessage(UINT nMessage, HWND hWnd);
NET_DVR_API BOOL __stdcall NET_DVR_SetExceptionCallBack_V30(UINT nMessage, HWND hWnd, void (CALLBACK* fExceptionCallBack)(DWORD dwType, LONG lUserID, LONG lHandle, void *pUser), void *pUser);
#elif defined(__linux__) || defined(__APPLE__)
NET_DVR_API BOOL __stdcall NET_DVR_SetExceptionCallBack_V30(UINT reserved1, void* reserved2, void (CALLBACK* fExceptionCallBack)(DWORD dwType, LONG lUserID, LONG lHandle, void *pUser), void *pUser);
/*Linux℅“?? */
#if defined(__linux__)
NET_DVR_API BOOL NET_DVR_DrawAreaInit(INITINFO InitInfo, DWORD iUseSDL = 1);
NET_DVR_API BOOL NET_DVR_DrawAreaRelease();
#endif
#endif

NET_DVR_API BOOL __stdcall NET_DVR_SetDVRMessCallBack(BOOL(CALLBACK *fMessCallBack)(LONG lCommand, char *sDVRIP, char *pBuf, DWORD dwBufLen));
NET_DVR_API BOOL __stdcall NET_DVR_SetDVRMessCallBack_EX(BOOL(CALLBACK *fMessCallBack_EX)(LONG lCommand, LONG lUserID, char *pBuf, DWORD dwBufLen));
NET_DVR_API BOOL __stdcall NET_DVR_SetDVRMessCallBack_NEW(BOOL(CALLBACK *fMessCallBack_NEW)(LONG lCommand, char *sDVRIP, char *pBuf, DWORD dwBufLen, WORD dwLinkDVRPort));
NET_DVR_API BOOL __stdcall NET_DVR_SetDVRMessageCallBack(BOOL(CALLBACK *fMessageCallBack)(LONG lCommand, char *sDVRIP, char *pBuf, DWORD dwBufLen, DWORD dwUser), DWORD dwUser);
typedef void (CALLBACK *MSGCallBack)(LONG lCommand, NET_DVR_ALARMER *pAlarmer, char *pAlarmInfo, DWORD dwBufLen, void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetDVRMessageCallBack_V30(MSGCallBack fMessageCallBack, void* pUser);
typedef BOOL(CALLBACK *MSGCallBack_V31)(LONG lCommand, NET_DVR_ALARMER *pAlarmer, char *pAlarmInfo, DWORD dwBufLen, void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetDVRMessageCallBack_V31(MSGCallBack_V31 fMessageCallBack, void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetDVRMessageCallBack_V50(int iIndex, MSGCallBack fMessageCallBack, void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetDVRMessageCallBack_V51(int iIndex, MSGCallBack fMsgCallBack, void* pUser);

NET_DVR_API BOOL __stdcall NET_DVR_SetConnectTime(DWORD dwWaitTime = 3000, DWORD dwTryTimes = 3);
NET_DVR_API BOOL __stdcall NET_DVR_SetReconnect(DWORD dwInterval = 30000, BOOL bEnableRecon = TRUE);
NET_DVR_API DWORD __stdcall NET_DVR_GetSDKVersion();
NET_DVR_API DWORD __stdcall NET_DVR_GetSDKBuildVersion();
NET_DVR_API int __stdcall NET_DVR_IsSupport();
NET_DVR_API BOOL __stdcall NET_DVR_StartListen(char *sLocalIP, WORD wLocalPort);
NET_DVR_API BOOL __stdcall NET_DVR_StopListen();

NET_DVR_API LONG __stdcall NET_DVR_StartListen_V30(char *sLocalIP, WORD wLocalPort, MSGCallBack DataCallback, void* pUserData = NULL);
NET_DVR_API BOOL __stdcall NET_DVR_StopListen_V30(LONG lListenHandle);
NET_DVR_API LONG __stdcall NET_DVR_Login(char *sDVRIP, WORD wDVRPort, char *sUserName, char *sPassword, LPNET_DVR_DEVICEINFO lpDeviceInfo);
NET_DVR_API LONG __stdcall NET_DVR_Login_V30(char *sDVRIP, WORD wDVRPort, char *sUserName, char *sPassword, LPNET_DVR_DEVICEINFO_V30 lpDeviceInfo);

NET_DVR_API LONG __stdcall NET_DVR_Login_V40(LPNET_DVR_USER_LOGIN_INFO pLoginInfo, LPNET_DVR_DEVICEINFO_V40 lpDeviceInfo);
NET_DVR_API BOOL __stdcall NET_DVR_Login_Check(char *sDVRIP, WORD wDVRPort, char *sUserName, char *sPassword, LPNET_DVR_DEVICEINFO_V30 lpDeviceInfo);
NET_DVR_API BOOL __stdcall NET_DVR_Logout(LONG lUserID);
NET_DVR_API BOOL __stdcall NET_DVR_Logout_V30(LONG lUserID);
NET_DVR_API DWORD __stdcall NET_DVR_GetLastError();
NET_DVR_API char* __stdcall NET_DVR_GetErrorMsg(LONG *pErrorNo = NULL);
NET_DVR_API BOOL __stdcall NET_DVR_SetShowMode(DWORD dwShowType, COLORREF colorKey);
NET_DVR_API BOOL __stdcall NET_DVR_GetDVRIPByResolveSvr(char *sServerIP, WORD wServerPort, BYTE *sDVRName, WORD wDVRNameLen, BYTE *sDVRSerialNumber, WORD wDVRSerialLen, char* sGetIP);
NET_DVR_API BOOL  __stdcall NET_DVR_GetDVRIPByResolveSvr_EX(char *sServerIP, WORD wServerPort, BYTE *sDVRName, WORD wDVRNameLen, BYTE *sDVRSerialNumber, WORD wDVRSerialLen, char* sGetIP, DWORD *dwPort);

//?∟???角??????
NET_DVR_API LONG __stdcall NET_DVR_PlayDirect(char *sDVRIP, char *sUserName, char *sPassword, \
	LPNET_DVR_CLIENTINFO lpClientInfo, void(CALLBACK *fRealDataCallBack_V30) (LONG lRealHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, void* pUser) = NULL, void* pUser = NULL, BOOL bBlocked = FALSE);
NET_DVR_API LONG __stdcall NET_DVR_RealPlay(LONG lUserID, LPNET_DVR_CLIENTINFO lpClientInfo);
NET_DVR_API LONG __stdcall NET_DVR_RealPlay_V30(LONG lUserID, LPNET_DVR_CLIENTINFO lpClientInfo, void(CALLBACK *fRealDataCallBack_V30) (LONG lRealHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, void* pUser) = NULL, void* pUser = NULL, BOOL bBlocked = FALSE);
NET_DVR_API BOOL __stdcall NET_DVR_StopRealPlay(LONG lRealHandle);
NET_DVR_API BOOL __stdcall NET_DVR_StopPlayDirect(LONG lRealHandle);
NET_DVR_API BOOL __stdcall NET_DVR_RigisterDrawFun(LONG lRealHandle, void (CALLBACK* fDrawFun)(LONG lRealHandle, HDC hDc, DWORD dwUser), DWORD dwUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetPlayerBufNumber(LONG lRealHandle, DWORD dwBufNum);
NET_DVR_API BOOL __stdcall NET_DVR_ThrowBFrame(LONG lRealHandle, DWORD dwNum);
NET_DVR_API BOOL __stdcall NET_DVR_SetAudioMode(DWORD dwMode);
NET_DVR_API BOOL __stdcall NET_DVR_OpenSound(LONG lRealHandle);
NET_DVR_API BOOL __stdcall NET_DVR_CloseSound();
NET_DVR_API BOOL __stdcall NET_DVR_OpenSoundShare(LONG lRealHandle);
NET_DVR_API BOOL __stdcall NET_DVR_CloseSoundShare(LONG lRealHandle);
NET_DVR_API BOOL __stdcall NET_DVR_Volume(LONG lRealHandle, WORD wVolume);
NET_DVR_API BOOL __stdcall NET_DVR_SaveRealData(LONG lRealHandle, char *sFileName);
NET_DVR_API BOOL __stdcall NET_DVR_StopSaveRealData(LONG lRealHandle);
NET_DVR_API BOOL __stdcall NET_DVR_SetRealDataCallBack(LONG lRealHandle, void(CALLBACK *fRealDataCallBack) (LONG lRealHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, DWORD dwUser), DWORD dwUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetRealDataCallBackEx(LONG lRealHandle, void(CALLBACK *fRealDataCallBack) (LONG lRealHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, void *pUser), void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetStandardDataCallBack(LONG lRealHandle, void(CALLBACK *fStdDataCallBack) (LONG lRealHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, DWORD dwUser), DWORD dwUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetStandardDataCallBackEx(LONG lRealHandle, void(CALLBACK *fStdDataCallBack) (LONG lRealHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, void *pUser), void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_CapturePicture(LONG lRealHandle, char *sPicFileName);//bmp
NET_DVR_API BOOL __stdcall NET_DVR_SetCapturePictureMode(DWORD dwCaptureMode);

//?????迆??I??
NET_DVR_API BOOL __stdcall NET_DVR_MakeKeyFrame(LONG lUserID, LONG lChannel);//?‾???‾
NET_DVR_API BOOL __stdcall NET_DVR_MakeKeyFrameSub(LONG lUserID, LONG lChannel);//℅????‾

																				//???“?????角??????
NET_DVR_API BOOL __stdcall NET_DVR_PTZControl(LONG lRealHandle, DWORD dwPTZCommand, DWORD dwStop);
NET_DVR_API BOOL __stdcall NET_DVR_PTZControl_Other(LONG lUserID, LONG lChannel, DWORD dwPTZCommand, DWORD dwStop);
NET_DVR_API BOOL __stdcall NET_DVR_TransPTZ(LONG lRealHandle, char *pPTZCodeBuf, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_TransPTZ_Other(LONG lUserID, LONG lChannel, char *pPTZCodeBuf, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_PTZPreset(LONG lRealHandle, DWORD dwPTZPresetCmd, DWORD dwPresetIndex);
NET_DVR_API BOOL __stdcall NET_DVR_PTZPreset_Other(LONG lUserID, LONG lChannel, DWORD dwPTZPresetCmd, DWORD dwPresetIndex);
NET_DVR_API BOOL __stdcall NET_DVR_TransPTZ_EX(LONG lRealHandle, char *pPTZCodeBuf, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_PTZControl_EX(LONG lRealHandle, DWORD dwPTZCommand, DWORD dwStop);
NET_DVR_API BOOL __stdcall NET_DVR_PTZPreset_EX(LONG lRealHandle, DWORD dwPTZPresetCmd, DWORD dwPresetIndex);
NET_DVR_API BOOL __stdcall NET_DVR_PTZCruise(LONG lRealHandle, DWORD dwPTZCruiseCmd, BYTE byCruiseRoute, BYTE byCruisePoint, WORD wInput);
NET_DVR_API BOOL __stdcall NET_DVR_PTZCruise_Other(LONG lUserID, LONG lChannel, DWORD dwPTZCruiseCmd, BYTE byCruiseRoute, BYTE byCruisePoint, WORD wInput);
NET_DVR_API BOOL __stdcall NET_DVR_PTZCruise_EX(LONG lRealHandle, DWORD dwPTZCruiseCmd, BYTE byCruiseRoute, BYTE byCruisePoint, WORD wInput);
NET_DVR_API BOOL __stdcall NET_DVR_PTZTrack(LONG lRealHandle, DWORD dwPTZTrackCmd);
NET_DVR_API BOOL __stdcall NET_DVR_PTZTrack_Other(LONG lUserID, LONG lChannel, DWORD dwPTZTrackCmd);
NET_DVR_API BOOL __stdcall NET_DVR_PTZTrack_EX(LONG lRealHandle, DWORD dwPTZTrackCmd);
NET_DVR_API BOOL __stdcall NET_DVR_PTZControlWithSpeed(LONG lRealHandle, DWORD dwPTZCommand, DWORD dwStop, DWORD dwSpeed);
NET_DVR_API BOOL __stdcall NET_DVR_PTZControlWithSpeed_Other(LONG lUserID, LONG lChannel, DWORD dwPTZCommand, DWORD dwStop, DWORD dwSpeed);
NET_DVR_API BOOL __stdcall NET_DVR_PTZControlWithSpeed_EX(LONG lRealHandle, DWORD dwPTZCommand, DWORD dwStop, DWORD dwSpeed);
NET_DVR_API BOOL __stdcall NET_DVR_GetPTZCruise(LONG lUserID, LONG lChannel, LONG lCruiseRoute, LPNET_DVR_CRUISE_RET lpCruiseRet);


//?????谷??????﹞?
NET_DVR_API LONG __stdcall NET_DVR_FindFile(LONG lUserID, LONG lChannel, DWORD dwFileType, LPNET_DVR_TIME lpStartTime, LPNET_DVR_TIME lpStopTime);
NET_DVR_API LONG __stdcall NET_DVR_FindNextFile(LONG lFindHandle, LPNET_DVR_FIND_DATA lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_FindClose(LONG lFindHandle);
NET_DVR_API LONG __stdcall NET_DVR_FindNextFile_V30(LONG lFindHandle, LPNET_DVR_FINDDATA_V30 lpFindData);
NET_DVR_API LONG __stdcall NET_DVR_FindNextFile_V40(LONG lFindHandle, LPNET_DVR_FINDDATA_V40 lpFindData);
NET_DVR_API LONG __stdcall NET_DVR_FindNextFile_V50(LONG lFindHandle, LPNET_DVR_FINDDATA_V50 lpFindData);
NET_DVR_API LONG __stdcall NET_DVR_FindFile_V30(LONG lUserID, LPNET_DVR_FILECOND pFindCond);
NET_DVR_API LONG __stdcall NET_DVR_FindFile_V50(LONG lUserID, LPNET_DVR_FILECOND_V50 pFindCond);
NET_DVR_API BOOL __stdcall NET_DVR_FindClose_V30(LONG lFindHandle);

NET_DVR_API BOOL __stdcall NET_DVR_LockFileByName(LONG lUserID, char *sLockFileName);
NET_DVR_API BOOL __stdcall NET_DVR_UnlockFileByName(LONG lUserID, char *sUnlockFileName);
NET_DVR_API BOOL __stdcall NET_DVR_LockFileByNameV40(LONG lUserID, BOOL bLock, const NET_DVR_LOCK_FILE_BY_NAME_PARA *lpLockFilePara);
NET_DVR_API LONG __stdcall NET_DVR_PlayBackByName(LONG lUserID, char *sPlayBackFileName, HWND hWnd);
NET_DVR_API LONG __stdcall NET_DVR_PlayBackByTime(LONG lUserID, LONG lChannel, LPNET_DVR_TIME lpStartTime, LPNET_DVR_TIME lpStopTime, HWND hWnd);
NET_DVR_API LONG __stdcall NET_DVR_PlayBackReverseByName(LONG lUserID, char *sPlayBackFileName, HWND hWnd);
NET_DVR_API LONG __stdcall NET_DVR_PlayBackByName_V50(LONG lUserID, LPNET_DVR_PLAY_BY_NAME_PARA pParam);
NET_DVR_API LONG __stdcall NET_DVR_PlayBackReverseByName_V50(LONG lUserID, LPNET_DVR_PLAY_BY_NAME_PARA pParam);

NET_DVR_API BOOL __stdcall NET_DVR_PlayBackControl(LONG lPlayHandle, DWORD dwControlCode, DWORD dwInValue, DWORD *LPOutValue);
NET_DVR_API BOOL __stdcall NET_DVR_StopPlayBack(LONG lPlayHandle);
NET_DVR_API BOOL __stdcall NET_DVR_SetPlayDataCallBack(LONG lPlayHandle, void(CALLBACK *fPlayDataCallBack) (LONG lPlayHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, DWORD dwUser), DWORD dwUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetPlayBackESCallBack(LONG lPlayHandle, void (CALLBACK *fPlayESCallBack)(LONG lPlayHandle, NET_DVR_PACKET_INFO_EX *struPackInfo, void* pUser), void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetPlayDataCallBack_V40(LONG lPlayHandle, void(CALLBACK *fPlayDataCallBack_V40) (LONG lPlayHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, void *pUser), void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_PlayBackSaveData(LONG lPlayHandle, char *sFileName);
NET_DVR_API BOOL __stdcall NET_DVR_StopPlayBackSave(LONG lPlayHandle);
NET_DVR_API BOOL __stdcall NET_DVR_GetPlayBackOsdTime(LONG lPlayHandle, LPNET_DVR_TIME lpOsdTime);
NET_DVR_API BOOL __stdcall NET_DVR_PlayBackCaptureFile(LONG lPlayHandle, char *sFileName);
NET_DVR_API LONG __stdcall NET_DVR_GetFileByName(LONG lUserID, char *sDVRFileName, char *sSavedFileName);
NET_DVR_API LONG __stdcall NET_DVR_GetFileByName_V50(LONG lUserID, LPNET_DVR_DOWNLOAD_BY_NAME_COND pParam);
NET_DVR_API LONG __stdcall NET_DVR_GetFileByTime(LONG lUserID, LONG lChannel, LPNET_DVR_TIME lpStartTime, LPNET_DVR_TIME lpStopTime, char *sSavedFileName);
NET_DVR_API BOOL __stdcall NET_DVR_StopGetFile(LONG lFileHandle);
NET_DVR_API int __stdcall NET_DVR_GetDownloadPos(LONG lFileHandle);
NET_DVR_API int    __stdcall NET_DVR_GetPlayBackPos(LONG lPlayHandle);

//????
NET_DVR_API LONG __stdcall NET_DVR_AdapterUpgrade(LONG lUserID, char *sFileName);
NET_DVR_API LONG __stdcall NET_DVR_Upgrade(LONG lUserID, char *sFileName);
NET_DVR_API LONG __stdcall NET_DVR_VcalibUpgrade(LONG lUserID, LONG lChannel, char const *sFileName);
NET_DVR_API int __stdcall NET_DVR_GetUpgradeState(LONG lUpgradeHandle);
NET_DVR_API int __stdcall NET_DVR_GetUpgradeProgress(LONG lUpgradeHandle);
NET_DVR_API BOOL __stdcall NET_DVR_CloseUpgradeHandle(LONG lUpgradeHandle);
NET_DVR_API BOOL __stdcall NET_DVR_SetNetworkEnvironment(DWORD dwEnvironmentLevel);
//??????????????
NET_DVR_API LONG __stdcall NET_DVR_FormatDisk(LONG lUserID, LONG lDiskNumber);
NET_DVR_API LONG __stdcall NET_DVR_FormatDisk_V50(LONG lUserID, NET_DVR_FORMAT_HDD *lpStruHddFormatCond);
NET_DVR_API BOOL __stdcall NET_DVR_GetFormatProgress(LONG lFormatHandle, LONG *pCurrentFormatDisk, LONG *pCurrentDiskPos, LONG *pFormatStatic);
NET_DVR_API BOOL __stdcall NET_DVR_CloseFormatHandle(LONG lFormatHandle);
//㊣“??
NET_DVR_API LONG __stdcall NET_DVR_SetupAlarmChan(LONG lUserID);
NET_DVR_API BOOL __stdcall NET_DVR_CloseAlarmChan(LONG lAlarmHandle);
NET_DVR_API LONG __stdcall NET_DVR_SetupAlarmChan_V30(LONG lUserID);
NET_DVR_API BOOL __stdcall NET_DVR_CloseAlarmChan_V30(LONG lAlarmHandle);
//????????
NET_DVR_API LONG __stdcall NET_DVR_StartVoiceCom(LONG lUserID, void(CALLBACK *fVoiceDataCallBack)(LONG lVoiceComHandle, char *pRecvDataBuffer, DWORD dwBufSize, BYTE byAudioFlag, DWORD dwUser), DWORD dwUser);
NET_DVR_API LONG __stdcall NET_DVR_StartVoiceCom_V30(LONG lUserID, DWORD dwVoiceChan, BOOL bNeedCBNoEncData, void(CALLBACK *fVoiceDataCallBack)(LONG lVoiceComHandle, char *pRecvDataBuffer, DWORD dwBufSize, BYTE byAudioFlag, void* pUser), void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetVoiceComClientVolume(LONG lVoiceComHandle, WORD wVolume);
NET_DVR_API BOOL __stdcall NET_DVR_StopVoiceCom(LONG lVoiceComHandle);
//????℅?﹞?
NET_DVR_API LONG __stdcall NET_DVR_StartVoiceCom_MR(LONG lUserID, void(CALLBACK *fVoiceDataCallBack)(LONG lVoiceComHandle, char *pRecvDataBuffer, DWORD dwBufSize, BYTE byAudioFlag, DWORD dwUser), DWORD dwUser);
NET_DVR_API LONG __stdcall NET_DVR_StartVoiceCom_MR_V30(LONG lUserID, DWORD dwVoiceChan, void(CALLBACK *fVoiceDataCallBack)(LONG lVoiceComHandle, char *pRecvDataBuffer, DWORD dwBufSize, BYTE byAudioFlag, void* pUser), void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_VoiceComSendData(LONG lVoiceComHandle, char *pSendBuf, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_GetCurrentAudioCompress(LONG lUserID, LPNET_DVR_COMPRESSION_AUDIO lpCompressAudio);
NET_DVR_API BOOL __stdcall NET_DVR_GetCurrentAudioCompress_V50(LONG lUserID, LPNET_DVR_AUDIO_CHANNEL lpAudioChannel, LPNET_DVR_COMPRESSION_AUDIO lpCompressAudio);
//????????
NET_DVR_API BOOL __stdcall NET_DVR_ClientAudioStart();
NET_DVR_API BOOL __stdcall NET_DVR_ClientAudioStart_V30(void(CALLBACK *fVoiceDataCallBack)(char *pRecvDataBuffer, DWORD dwBufSize, void * pUser), void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_ClientAudioStop();
NET_DVR_API BOOL __stdcall NET_DVR_AddDVR(LONG lUserID);
NET_DVR_API LONG __stdcall NET_DVR_AddDVR_V30(LONG lUserID, DWORD dwVoiceChan);
NET_DVR_API BOOL __stdcall NET_DVR_DelDVR(LONG lUserID);
NET_DVR_API BOOL __stdcall NET_DVR_DelDVR_V30(LONG lVoiceHandle);
//???‾?“???豕??
NET_DVR_API LONG __stdcall NET_DVR_SerialStart(LONG lUserID, LONG lSerialPort, void(CALLBACK *fSerialDataCallBack)(LONG lSerialHandle, char *pRecvDataBuffer, DWORD dwBufSize, DWORD dwUser), DWORD dwUser);
//485℅‾?????‾?“???㊣???豕?????‾?“???????辰???????“????485???豕??????????(㊣????“????)
NET_DVR_API LONG __stdcall NET_DVR_SerialStart_V40(LONG lUserID, void* lpInBuffer, LONG dwInBufferSize, void(CALLBACK *fSerialDataCallBack)(LONG lSerialHandle, LONG lCHannel, char *pRecvDataBuffer, DWORD dwBufSize, void* pUser), void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SerialSend(LONG lSerialHandle, LONG lChannel, char *pSendBuf, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_SerialStop(LONG lSerialHandle);
NET_DVR_API BOOL __stdcall NET_DVR_SendTo232Port(LONG lUserID, char *pSendBuf, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_SendToSerialPort(LONG lUserID, DWORD dwSerialPort, DWORD dwSerialIndex, char *pSendBuf, DWORD dwBufSize);

#if (!defined __linux__)
//Decoding nBitrate = 16000
NET_DVR_API void* __stdcall NET_DVR_InitG722Decoder(int nBitrate = 16000);
NET_DVR_API BOOL __stdcall NET_DVR_DecodeG722Frame(void *pDecHandle, BYTE* pInBuffer, BYTE* pOutBuffer);
//Encoding
NET_DVR_API void* __stdcall NET_DVR_InitG722Encoder();
NET_DVR_API BOOL __stdcall NET_DVR_EncodeG722Frame(void *pEncodeHandle, BYTE* pInBuffer, BYTE* pOutBuffer);
#elif (defined __linux__)
NET_DVR_API void* __stdcall NET_DVR_InitG722Decoder();
NET_DVR_API BOOL __stdcall NET_DVR_DecodeG722Frame(void *handle, NET_DVR_AUDIODEC_PROCESS_PARAM * param);
//Encoding
NET_DVR_API void* __stdcall NET_DVR_InitG722Encoder(NET_DVR_AUDIOENC_INFO* enc_info);
NET_DVR_API BOOL __stdcall NET_DVR_EncodeG722Frame(void *handle, NET_DVR_AUDIOENC_PROCESS_PARAM* param);
#endif // _WIN32
NET_DVR_API void __stdcall NET_DVR_ReleaseG722Decoder(void *pDecHandle);
NET_DVR_API void __stdcall NET_DVR_ReleaseG722Encoder(void *pEncodeHandle);

//????
NET_DVR_API void* __stdcall NET_DVR_InitG726Decoder(void** pDecMoudle);
NET_DVR_API void __stdcall NET_DVR_ReleaseG726Decoder(void *pDecHandle);
NET_DVR_API BOOL __stdcall NET_DVR_DecodeG726Frame(void *pDecMoudle, BYTE* pInBuffer, BYTE* pOutBuffer, BYTE byReset);

//㊣角??
NET_DVR_API void* __stdcall NET_DVR_InitG726Encoder(void** pEncMoudle);
NET_DVR_API BOOL __stdcall NET_DVR_EncodeG726Frame(void *pEncMoudle, BYTE* pInBuffer, BYTE* pOutBuffer, BYTE byReset);
NET_DVR_API void __stdcall NET_DVR_ReleaseG726Encoder(void *pEncHandle);

//????????㊣???????
NET_DVR_API BOOL __stdcall NET_DVR_ClickKey(LONG lUserID, LONG lKeyIndex);
//?????????豕㊣???????????
NET_DVR_API BOOL __stdcall NET_DVR_StartDVRRecord(LONG lUserID, LONG lChannel, LONG lRecordType);
NET_DVR_API BOOL __stdcall NET_DVR_StopDVRRecord(LONG lUserID, LONG lChannel);
//?????“
NET_DVR_API BOOL __stdcall NET_DVR_InitDevice_Card(long *pDeviceTotalChan);
NET_DVR_API BOOL __stdcall NET_DVR_ReleaseDevice_Card();
NET_DVR_API BOOL __stdcall NET_DVR_InitDDraw_Card(HWND hParent, COLORREF colorKey);
NET_DVR_API BOOL __stdcall NET_DVR_ReleaseDDraw_Card();
NET_DVR_API LONG __stdcall NET_DVR_RealPlay_Card(LONG lUserID, LPNET_DVR_CARDINFO lpCardInfo, long lChannelNum);
NET_DVR_API BOOL __stdcall NET_DVR_ResetPara_Card(LONG lRealHandle, LPNET_DVR_DISPLAY_PARA lpDisplayPara);
NET_DVR_API BOOL __stdcall NET_DVR_RefreshSurface_Card();
NET_DVR_API BOOL __stdcall NET_DVR_ClearSurface_Card();
NET_DVR_API BOOL __stdcall NET_DVR_RestoreSurface_Card();
NET_DVR_API BOOL __stdcall NET_DVR_OpenSound_Card(LONG lRealHandle);
NET_DVR_API BOOL __stdcall NET_DVR_CloseSound_Card(LONG lRealHandle);
NET_DVR_API BOOL __stdcall NET_DVR_SetVolume_Card(LONG lRealHandle, WORD wVolume);
NET_DVR_API BOOL __stdcall NET_DVR_AudioPreview_Card(LONG lRealHandle, BOOL bEnable);
NET_DVR_API LONG __stdcall NET_DVR_GetCardLastError_Card();
NET_DVR_API HANDLE __stdcall NET_DVR_GetChanHandle_Card(LONG lRealHandle);
NET_DVR_API BOOL __stdcall NET_DVR_CapturePicture_Card(LONG lRealHandle, char *sPicFileName);
NET_DVR_API BOOL __stdcall NET_DVR_GetSerialNum_Card(long lChannelNum, DWORD *pDeviceSerialNo);
NET_DVR_API LONG __stdcall NET_DVR_FindDVRLog(LONG lUserID, LONG lSelectMode, DWORD dwMajorType, DWORD dwMinorType, LPNET_DVR_TIME lpStartTime, LPNET_DVR_TIME lpStopTime);
NET_DVR_API LONG __stdcall NET_DVR_FindNextLog(LONG lLogHandle, LPNET_DVR_LOG lpLogData);
NET_DVR_API BOOL __stdcall NET_DVR_FindLogClose(LONG lLogHandle);
NET_DVR_API LONG __stdcall NET_DVR_FindDVRLog_V30(LONG lUserID, LONG lSelectMode, DWORD dwMajorType, DWORD dwMinorType, LPNET_DVR_TIME lpStartTime, LPNET_DVR_TIME lpStopTime, BOOL bOnlySmart = FALSE);
NET_DVR_API LONG __stdcall NET_DVR_FindNextLog_V30(LONG lLogHandle, LPNET_DVR_LOG_V30 lpLogData);
NET_DVR_API LONG __stdcall NET_DVR_FindDVRLog_V50(LONG lUserID, LPNET_DVR_FIND_LOG_COND pFindCond);
NET_DVR_API LONG __stdcall NET_DVR_FindNextLog_V50(LONG lLogHandle, LPNET_DVR_LOG_V50 lpLogData);
NET_DVR_API BOOL __stdcall NET_DVR_FindLogClose_V30(LONG lLogHandle);
NET_DVR_API LONG __stdcall NET_DVR_FindAlarmHostLog(LONG lUserID, LONG lSelectMode, NET_DVR_ALARMHOST_SEARCH_LOG_PARAM *lpSearchParam);
NET_DVR_API LONG __stdcall NET_DVR_FindNextAlarmHostLog(LONG lFindHandle, NET_DVR_ALARMHOST_LOG_RET *lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_FindAlarmHostLogClose(LONG lFindHandle);
NET_DVR_API LONG __stdcall NET_DVR_FindFileByCard(LONG lUserID, LONG lChannel, DWORD dwFileType, int nFindType, BYTE *sCardNumber, LPNET_DVR_TIME lpStartTime, LPNET_DVR_TIME lpStopTime);
NET_DVR_API BOOL __stdcall NET_DVR_CaptureJPEGPicture(LONG lUserID, LONG lChannel, LPNET_DVR_JPEGPARA lpJpegPara, char *sPicFileName);
NET_DVR_API BOOL __stdcall NET_DVR_CaptureJPEGPicture_NEW(LONG lUserID, LONG lChannel, LPNET_DVR_JPEGPARA lpJpegPara, char *sJpegPicBuffer, DWORD dwPicSize, LPDWORD lpSizeReturned);
NET_DVR_API BOOL __stdcall NET_DVR_CapturePicture_V50(LONG lUserID, LONG lChannel, LPNET_DVR_PICPARAM_V50  lpPicParam, char *sPicBuffer, DWORD dwPicSize, LPDWORD lpSizeReturned);
NET_DVR_API BOOL __stdcall NET_DVR_CaptureJPEGPicture_WithAppendData(LONG lUserID, LONG lChannel, NET_DVR_JPEGPICTURE_WITH_APPENDDATA *lpJpegWithAppend);
NET_DVR_API int __stdcall NET_DVR_GetRealPlayerIndex(LONG lRealHandle);
NET_DVR_API int __stdcall NET_DVR_GetPlayBackPlayerIndex(LONG lPlayHandle);
NET_DVR_API BOOL __stdcall NET_DVR_SetScaleCFG(LONG lUserID, DWORD dwScale);
NET_DVR_API BOOL __stdcall NET_DVR_GetScaleCFG(LONG lUserID, DWORD *lpOutScale);
NET_DVR_API BOOL __stdcall NET_DVR_SetScaleCFG_V30(LONG lUserID, LPNET_DVR_SCALECFG pScalecfg);
NET_DVR_API BOOL __stdcall NET_DVR_GetScaleCFG_V30(LONG lUserID, LPNET_DVR_SCALECFG pScalecfg);
NET_DVR_API BOOL __stdcall NET_DVR_SetATMPortCFG(LONG lUserID, WORD wATMPort);
NET_DVR_API BOOL __stdcall NET_DVR_GetATMPortCFG(LONG lUserID, WORD *LPOutATMPort);
NET_DVR_API BOOL __stdcall NET_DVR_InitDDrawDevice();
NET_DVR_API BOOL __stdcall NET_DVR_ReleaseDDrawDevice();
NET_DVR_API LONG __stdcall NET_DVR_GetDDrawDeviceTotalNums();
NET_DVR_API BOOL __stdcall NET_DVR_SetDDrawDevice(LONG lPlayPort, DWORD nDeviceNum);

NET_DVR_API BOOL __stdcall NET_DVR_PTZSelZoomIn(LONG lRealHandle, LPNET_DVR_POINT_FRAME pStruPointFrame);
NET_DVR_API BOOL __stdcall NET_DVR_PTZSelZoomIn_EX(LONG lUserID, LONG lChannel, LPNET_DVR_POINT_FRAME pStruPointFrame);
NET_DVR_API BOOL __stdcall NET_DVR_StartDecode(LONG lUserID, LONG lChannel, LPNET_DVR_DECODERINFO lpDecoderinfo);
NET_DVR_API BOOL __stdcall NET_DVR_StopDecode(LONG lUserID, LONG lChannel);
NET_DVR_API BOOL __stdcall NET_DVR_GetDecoderState(LONG lUserID, LONG lChannel, LPNET_DVR_DECODERSTATE lpDecoderState);
NET_DVR_API BOOL __stdcall NET_DVR_SetDecInfo(LONG lUserID, LONG lChannel, LPNET_DVR_DECCFG lpDecoderinfo);
NET_DVR_API BOOL __stdcall NET_DVR_GetDecInfo(LONG lUserID, LONG lChannel, LPNET_DVR_DECCFG lpDecoderinfo);
NET_DVR_API BOOL __stdcall NET_DVR_SetDecTransPort(LONG lUserID, LPNET_DVR_PORTCFG lpTransPort);
NET_DVR_API BOOL __stdcall NET_DVR_GetDecTransPort(LONG lUserID, LPNET_DVR_PORTCFG lpTransPort);
NET_DVR_API BOOL __stdcall NET_DVR_DecPlayBackCtrl(LONG lUserID, LONG lChannel, DWORD dwControlCode, DWORD dwInValue, DWORD *LPOutValue, LPNET_DVR_PLAYREMOTEFILE lpRemoteFileInfo);
NET_DVR_API BOOL __stdcall NET_DVR_StartDecSpecialCon(LONG lUserID, LONG lChannel, LPNET_DVR_DECCHANINFO lpDecChanInfo);
NET_DVR_API BOOL __stdcall NET_DVR_StopDecSpecialCon(LONG lUserID, LONG lChannel, LPNET_DVR_DECCHANINFO lpDecChanInfo);
NET_DVR_API BOOL __stdcall NET_DVR_DecCtrlDec(LONG lUserID, LONG lChannel, DWORD dwControlCode);
NET_DVR_API BOOL __stdcall NET_DVR_DecCtrlScreen(LONG lUserID, LONG lChannel, DWORD dwControl);
NET_DVR_API BOOL __stdcall NET_DVR_GetDecCurLinkStatus(LONG lUserID, LONG lChannel, LPNET_DVR_DECSTATUS lpDecStatus);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixStartDynamic(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_DYNAMIC_DEC lpDynamicInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixStopDynamic(LONG lUserID, DWORD dwDecChanNum);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDecChanInfo(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_DEC_CHAN_INFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetLoopDecChanInfo(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_LOOP_DECINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetLoopDecChanInfo(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_LOOP_DECINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetLoopDecChanEnable(LONG lUserID, DWORD dwDecChanNum, DWORD dwEnable);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetLoopDecChanEnable(LONG lUserID, DWORD dwDecChanNum, LPDWORD lpdwEnable);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetLoopDecEnable(LONG lUserID, LPDWORD lpdwEnable);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetDecChanEnable(LONG lUserID, DWORD dwDecChanNum, DWORD dwEnable);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDecChanEnable(LONG lUserID, DWORD dwDecChanNum, LPDWORD lpdwEnable);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDecChanStatus(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_DEC_CHAN_STATUS lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetVideoStandard(LONG lUserID, DWORD dwDecChanNum, LPDWORD lpdwVideoStandard);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetVideoStandard(LONG lUserID, DWORD dwDecChanNum, DWORD dwVideoStandard);

//2007-12-22 ?????∫?????? 
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetTranInfo(LONG lUserID, LPNET_DVR_MATRIX_TRAN_CHAN_CONFIG lpTranInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetTranInfo(LONG lUserID, LPNET_DVR_MATRIX_TRAN_CHAN_CONFIG lpTranInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetRemotePlay(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_DEC_REMOTE_PLAY lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetRemotePlayControl(LONG lUserID, DWORD dwDecChanNum, DWORD dwControlCode, DWORD dwInValue, DWORD *LPOutValue);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetRemotePlayStatus(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_DEC_REMOTE_PLAY_STATUS lpOuter);
//2009-4-13 ????
NET_DVR_API BOOL __stdcall NET_DVR_MatrixStartDynamic_V30(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_PU_STREAM_CFG lpDynamicInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetLoopDecChanInfo_V30(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_LOOP_DECINFO_V30 lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetLoopDecChanInfo_V30(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_LOOP_DECINFO_V30 lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDecChanInfo_V30(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_DEC_CHAN_INFO_V30 lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetTranInfo_V30(LONG lUserID, LPNET_DVR_MATRIX_TRAN_CHAN_CONFIG_V30 lpTranInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetTranInfo_V30(LONG lUserID, LPNET_DVR_MATRIX_TRAN_CHAN_CONFIG_V30 lpTranInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDisplayCfg(LONG lUserID, DWORD dwDispChanNum, LPNET_DVR_VGA_DISP_CHAN_CFG lpDisplayCfg);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetDisplayCfg(LONG lUserID, DWORD dwDispChanNum, LPNET_DVR_VGA_DISP_CHAN_CFG lpDisplayCfg);

NET_DVR_API LONG __stdcall NET_DVR_MatrixStartPassiveDecode(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_PASSIVEMODE lpPassiveMode /*, void(CALLBACK *fPassiveDataCallBack)(LONG lPassiveHandle, char * pSendBuf, DWORD dwBufSize, DWORD dwStatus, DWORD dwUser), DWORD dwUser*/);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSendData(LONG lPassiveHandle, char *pSendBuf, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixStopPassiveDecode(LONG lPassiveHandle);
NET_DVR_API BOOL __stdcall NET_DVR_UploadLogo(LONG lUserID, DWORD dwDispChanNum, LPNET_DVR_DISP_LOGOCFG lpDispLogoCfg, char *sLogoBuffer);
#define    NET_DVR_SHOWLOGO            1        /*????LOGO*/
#define    NET_DVR_HIDELOGO            2        /*????LOGO*/  
NET_DVR_API BOOL __stdcall NET_DVR_LogoSwitch(LONG lUserID, DWORD dwDecChan, DWORD dwLogoSwitch);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDeviceStatus(LONG lUserID, LPNET_DVR_DECODER_WORK_STATUS lpDecoderCfg);

#define    DISP_CMD_ENLARGE_WINDOW                1    /*?????“??﹞??車?????∼??*/
#define    DISP_CMD_RENEW_WINDOW                2    /*?????“???∼??????*/
#define    DISP_CMD_OPENAUDIO                    3    /*?????“???辰??????*/
#define    DISP_CMD_CLOSEAUDIO                    4    /*?????“????㊣?????*/

NET_DVR_API BOOL __stdcall NET_DVR_MatrixDiaplayControl(LONG lUserID, DWORD dwDispChanNum, DWORD dwDispChanCmd, DWORD dwCmdParam);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixPassiveDecodeControl(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_PASSIVEDECODE_CONTROL lpInter);
NET_DVR_API LONG __stdcall NET_DVR_MatrixGetPassiveDecodeStatus(LONG lPassiveHandle);

NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDecChanCfg(LONG lUserID, DWORD dwDecChan, LPNET_DVR_MATRIX_DECCHAN_CONTROL lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetDecChanCfg(LONG lUserID, DWORD dwDecChan, LPNET_DVR_MATRIX_DECCHAN_CONTROL lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_RefreshPlay(LONG lPlayHandle);
//??????????
NET_DVR_API BOOL __stdcall NET_DVR_RestoreConfig(LONG lUserID);
//㊣???????
NET_DVR_API BOOL __stdcall NET_DVR_SaveConfig(LONG lUserID);
//????
NET_DVR_API BOOL __stdcall NET_DVR_RebootDVR(LONG lUserID);
//??㊣?DVR
NET_DVR_API BOOL __stdcall NET_DVR_ShutDownDVR(LONG lUserID);

//???????? begin
NET_DVR_API BOOL __stdcall NET_DVR_GetDVRConfig(LONG lUserID, DWORD dwCommand, LONG lChannel, LPVOID lpOutBuffer, DWORD dwOutBufferSize, LPDWORD lpBytesReturned);
NET_DVR_API BOOL __stdcall NET_DVR_SetDVRConfig(LONG lUserID, DWORD dwCommand, LONG lChannel, LPVOID lpInBuffer, DWORD dwInBufferSize);
NET_DVR_API BOOL __stdcall NET_DVR_GetDVRWorkState_V30(LONG lUserID, LPNET_DVR_WORKSTATE_V30 lpWorkState);
NET_DVR_API BOOL __stdcall NET_DVR_GetDVRWorkState(LONG lUserID, LPNET_DVR_WORKSTATE lpWorkState);
NET_DVR_API BOOL __stdcall NET_DVR_SetVideoEffect(LONG lUserID, LONG lChannel, DWORD dwBrightValue, DWORD dwContrastValue, DWORD dwSaturationValue, DWORD dwHueValue);
NET_DVR_API BOOL __stdcall NET_DVR_GetVideoEffect(LONG lUserID, LONG lChannel, DWORD *pBrightValue, DWORD *pContrastValue, DWORD *pSaturationValue, DWORD *pHueValue);
NET_DVR_API BOOL __stdcall NET_DVR_ClientGetframeformat(LONG lUserID, LPNET_DVR_FRAMEFORMAT lpFrameFormat);
NET_DVR_API BOOL __stdcall NET_DVR_ClientSetframeformat(LONG lUserID, LPNET_DVR_FRAMEFORMAT lpFrameFormat);
NET_DVR_API BOOL __stdcall NET_DVR_GetAtmFrameFormat_V30(LONG lUserID, LONG lAtmChannel, LPNET_DVR_ATM_FRAMEFORMAT_V30 lpFrameFormat);
NET_DVR_API BOOL __stdcall NET_DVR_SetAtmFrameFormat_V30(LONG lUserID, LONG lAtmChannel, LPNET_DVR_ATM_FRAMEFORMAT_V30 lpFrameFormat);
NET_DVR_API BOOL __stdcall NET_DVR_GetAtmProtocol(LONG lUserID, LPNET_DVR_ATM_PROTOCOL lpAtmProtocol);
NET_DVR_API BOOL __stdcall NET_DVR_GetAlarmOut_V30(LONG lUserID, LPNET_DVR_ALARMOUTSTATUS_V30 lpAlarmOutState);
NET_DVR_API BOOL __stdcall NET_DVR_GetAlarmOut(LONG lUserID, LPNET_DVR_ALARMOUTSTATUS lpAlarmOutState);
NET_DVR_API BOOL __stdcall NET_DVR_SetAlarmOut(LONG lUserID, LONG lAlarmOutPort, LONG lAlarmOutStatic);

//?????????‾??
NET_DVR_API BOOL __stdcall NET_DVR_ClientSetVideoEffect(LONG lRealHandle, DWORD dwBrightValue, DWORD dwContrastValue, DWORD dwSaturationValue, DWORD dwHueValue);
NET_DVR_API BOOL __stdcall NET_DVR_ClientGetVideoEffect(LONG lRealHandle, DWORD *pBrightValue, DWORD *pContrastValue, DWORD *pSaturationValue, DWORD *pHueValue);

//????????
NET_DVR_API BOOL __stdcall NET_DVR_GetConfigFile(LONG lUserID, char *sFileName);
NET_DVR_API BOOL __stdcall NET_DVR_SetConfigFile(LONG lUserID, char *sFileName);
NET_DVR_API BOOL __stdcall NET_DVR_GetConfigFile_V30(LONG lUserID, char *sOutBuffer, DWORD dwOutSize, DWORD *pReturnSize);

NET_DVR_API BOOL __stdcall NET_DVR_GetConfigFile_EX(LONG lUserID, char *sOutBuffer, DWORD dwOutSize);
NET_DVR_API BOOL __stdcall NET_DVR_SetConfigFile_EX(LONG lUserID, char *sInBuffer, DWORD dwInSize);

//????????????????????
NET_DVR_API BOOL __stdcall NET_DVR_SetLogToFile(DWORD nLogLevel = 0, char * strLogDir = NULL, BOOL bAutoDel = TRUE);
NET_DVR_API BOOL __stdcall NET_DVR_GetSDKState(LPNET_DVR_SDKSTATE pSDKState);
NET_DVR_API BOOL __stdcall NET_DVR_GetSDKAbility(LPNET_DVR_SDKABL pSDKAbl);
NET_DVR_API BOOL __stdcall NET_DVR_GetPTZProtocol(LONG lUserID, NET_DVR_PTZCFG *pPtzcfg);
//?∼??∼????“
NET_DVR_API BOOL __stdcall NET_DVR_LockPanel(LONG lUserID);
NET_DVR_API BOOL __stdcall NET_DVR_UnLockPanel(LONG lUserID);

NET_DVR_API BOOL __stdcall NET_DVR_SetRtspConfig(LONG lUserID, DWORD dwCommand, LPNET_DVR_RTSPCFG lpInBuffer, DWORD dwInBufferSize);
NET_DVR_API BOOL __stdcall NET_DVR_GetRtspConfig(LONG lUserID, DWORD dwCommand, LPNET_DVR_RTSPCFG lpOutBuffer, DWORD dwOutBufferSize);

//??????????
NET_DVR_API BOOL __stdcall NET_DVR_GetDeviceAbility(LONG lUserID, DWORD dwAbilityType, char* pInBuf, DWORD dwInLength, char* pOutBuf, DWORD dwOutLength);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetSubSystemInfo(LONG lUserID, LPNET_DVR_ALLSUBSYSTEMINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetSubSystemInfo(LONG lUserID, LPNET_DVR_ALLSUBSYSTEMINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetCodeSplitter(LONG lUserID, DWORD dwCodeChan, LPNET_DVR_CODESPLITTERINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetCodeSplitter(LONG lUserID, DWORD dwCodeChan, LPNET_DVR_CODESPLITTERINFO lpInter);

//????
//?豕??/???????????邦℅?
NET_DVR_API BOOL __stdcall NET_DVR_SetBehaviorParamKey(LONG lUserID, LONG lChannel, DWORD dwParameterKey, int nValue);
NET_DVR_API BOOL __stdcall NET_DVR_GetBehaviorParamKey(LONG lUserID, LONG lChannel, DWORD dwParameterKey, int *pValue);

//????/?豕??????﹞?????㊣那????????
NET_DVR_API BOOL __stdcall NET_DVR_GetVCADrawMode(LONG lUserID, LONG lChannel, LPNET_VCA_DRAW_MODE lpDrawMode);



NET_DVR_API BOOL __stdcall NET_DVR_SetVCADrawMode(LONG lUserID, LONG lChannel, LPNET_VCA_DRAW_MODE lpDrawMode);

//?辰?迆?迆℅??????豕??????
NET_DVR_API BOOL __stdcall NET_DVR_SetTrackMode(LONG lUserID, LONG lChannel, LPNET_DVR_TRACK_MODE lpTrackMode);
NET_DVR_API BOOL __stdcall NET_DVR_GetTrackMode(LONG lUserID, LONG lChannel, LPNET_DVR_TRACK_MODE lpTrackMode);

//??????????
NET_DVR_API BOOL __stdcall NET_VCA_RestartLib(LONG lUserID, LONG lChannel);

NET_DVR_API BOOL __stdcall NET_DVR_SaveRealData_V30(LONG lRealHandle, DWORD dwTransType, char *sFileName);

#if (!defined __linux__)
NET_DVR_API BOOL __stdcall NET_DVR_EncodeG711Frame(DWORD iType, BYTE *pInBuffer, BYTE *pOutBuffer);
NET_DVR_API BOOL __stdcall NET_DVR_DecodeG711Frame(DWORD iType, BYTE *pInBuffer, BYTE *pOutBuffer);
#elif (defined __linux__)
NET_DVR_API BOOL __stdcall NET_DVR_EncodeG711Frame(LPVOID handle, NET_DVR_AUDIOENC_PROCESS_PARAM *p_enc_proc_param);
NET_DVR_API BOOL __stdcall NET_DVR_DecodeG711Frame(LPVOID handle, NET_DVR_AUDIODEC_PROCESS_PARAM *p_dec_proc_param);
NET_DVR_API LPVOID __stdcall NET_DVR_InitG711Decoder();
NET_DVR_API LPVOID __stdcall NET_DVR_InitG711Encoder(NET_DVR_AUDIOENC_INFO *enc_info);
NET_DVR_API BOOL __stdcall NET_DVR_ReleaseG711Encoder(LPVOID pEncodeHandle);
NET_DVR_API BOOL __stdcall NET_DVR_ReleaseG711Decoder(LPVOID pDecHandle);
#endif //(defined _WIN32)

NET_DVR_API LONG __stdcall NET_DVR_FindFileByEvent(LONG lUserID, LPNET_DVR_SEARCH_EVENT_PARAM  lpSearchEventParam);
NET_DVR_API LONG __stdcall NET_DVR_FindFileByEvent_V40(LONG lUserID, LPNET_DVR_SEARCH_EVENT_PARAM_V40  lpSearchEventParam);
NET_DVR_API LONG __stdcall NET_DVR_FindFileByEvent_V50(LONG lUserID, LPNET_DVR_SEARCH_EVENT_PARAM_V50 lpSearchEventParam);
NET_DVR_API LONG __stdcall NET_DVR_FindNextEvent(LONG lSearchHandle, LPNET_DVR_SEARCH_EVENT_RET lpSearchEventRet);
NET_DVR_API LONG __stdcall NET_DVR_FindNextEvent_V40(LONG lSearchHandle, LPNET_DVR_SEARCH_EVENT_RET_V40 lpSearchEventRet);
NET_DVR_API LONG __stdcall NET_DVR_FindNextEvent_V50(LONG lFindHandle, LPNET_DVR_SEARCH_EVENT_RET_V50 lpSearchEventRet);
//???????? NET_DVR_FindClose

NET_DVR_API LONG __stdcall NET_DVR_FindPDCInfo(LONG lUserID, LONG lChannel, LPNET_DVR_TIME lpStartTime, LPNET_DVR_TIME lpStopTime);
NET_DVR_API LONG __stdcall NET_DVR_FindNextPDCInfo(LONG lFindHandle, LPNET_DVR_PDC_QUERY lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_FindPDCClose(LONG lFindHandle);

// ㊣那?“???谷 
#define NET_DVR_PDC_VERIFY_CALIBRATION          1    //?㊣????1????PDC㊣那?“???谷 pdc????????NET_VCA_POINT   ???????? NET_VCA_RECT?芍??
#define NET_DVR_VERIFY_BEHAVIOR_CALIBRATION     2    // ????﹞???㊣那?“?????谷 
#define NET_DVR_VERIFY_ITS_CALIBRATION            3    // ???????“㊣那?“???谷 
#define NET_DVR_VERIFY_BV_CALIBRATION            5    //????㊣那?“???谷

NET_DVR_API BOOL __stdcall  NET_DVR_VerifyCalibration(LONG lUserID, DWORD dwCommand, LONG lChannel, LPVOID lpInBuffer, DWORD dwInBufferSize, LPVOID lpOuterBuffer, DWORD dwOuterBufferSize);
NET_DVR_API BOOL __stdcall  NET_DVR_ResetCounter(LONG lUserID, LONG lChannel);

NET_DVR_API BOOL __stdcall NET_DVR_GetPtzPosition(LONG lUserID, LONG lChannel, LONG lPositionID, LPNET_DVR_PTZ_POSITION lpPtzPosition);
NET_DVR_API BOOL __stdcall NET_DVR_SetPtzPosition(LONG lUserID, LONG lChannel, LONG lPositionID, LPNET_DVR_PTZ_POSITION lpPtzPosition);
NET_DVR_API BOOL __stdcall NET_DVR_SetPatrolTrack(LONG lUserID, LONG lChannel, LONG lPatrolIndex, LPNET_DVR_PATROL_TRACKCFG lpPatrolTrack);
NET_DVR_API BOOL __stdcall NET_DVR_GetPatrolTrack(LONG lUserID, LONG lChannel, LONG lPatrolIndex, LPNET_DVR_PATROL_TRACKCFG lpPatrolTrack);
NET_DVR_API LONG __stdcall NET_DVR_FindNextLog_MATRIX(LONG lLogHandle, LPNET_DVR_LOG_MATRIX lpLogData);
NET_DVR_API LONG __stdcall NET_DVR_FindDVRLog_Matrix(LONG lUserID, LONG lSelectMode, DWORD dwMajorType, DWORD dwMinorType, LPNET_DVR_VEDIOPLATLOG lpVedioPlatLog, LPNET_DVR_TIME lpStartTime, LPNET_DVR_TIME lpStopTime);

NET_DVR_API BOOL __stdcall NET_DVR_ManualSnap(LONG lUserID, NET_DVR_MANUALSNAP const* lpInter, LPNET_DVR_PLATE_RESULT lpOuter);
NET_DVR_API BOOL __stdcall NET_DVR_ContinuousShoot(LONG lUserID, LPNET_DVR_SNAPCFG lpInter);

NET_DVR_API BOOL __stdcall NET_DVR_GetPTZProtocol_Ex(LONG lUserID, LONG lChannel, NET_DVR_PTZCFG *pPtzcfg);

NET_DVR_API LONG __stdcall NET_DVR_StartEmailTest(LONG lUserID);
NET_DVR_API BOOL __stdcall NET_DVR_StopEmailTest(LONG lEmailTestHandle);
NET_DVR_API BOOL __stdcall NET_DVR_GetEmailTestProgress(LONG lEmailTestHandle, DWORD* pState);
NET_DVR_API BOOL __stdcall NET_DVR_GetIPCProtoList(LONG lUserID, LPNET_DVR_IPC_PROTO_LIST lpProtoList);
NET_DVR_API BOOL __stdcall NET_DVR_GetIPCProtoList_V41(LONG lUserID, LPNET_DVR_IPC_PROTO_LIST_V41 lpProtoList);
NET_DVR_API LONG __stdcall NET_DVR_SmartSearch(LONG lUserID, LPNET_DVR_SMART_SEARCH_PARAM lpSmartSearchParam);
NET_DVR_API LONG __stdcall NET_DVR_SmartSearch_V40(LONG lUserID, LPNET_DVR_SMART_SEARCH_PARAM_V40 lpSmartSearchParam);
NET_DVR_API LONG __stdcall NET_DVR_SearchNextInfo(LONG lSearchHandle, LPNET_DVR_SMART_SEARCH_RET lpSmartSearchRet);
NET_DVR_API BOOL __stdcall NET_DVR_StopSearch(LONG lSearchHandle);

// IP San ?????????谷??
NET_DVR_API LONG __stdcall NET_DVR_FindIpSanDirectory(LONG lUserID, LPNET_DVR_IPSAN_SERACH_PARAM lpIpsanSearchParam);
NET_DVR_API LONG __stdcall NET_DVR_FindNextDirectory(LONG lFindHandle, LPNET_DVR_IPSAN_SERACH_RET lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_FindDirectoryClose(LONG lFindHandle);

typedef void (CALLBACK *REALDATACALLBACK) (LONG lPlayHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, void* pUser);

NET_DVR_API LONG __stdcall NET_DVR_ZeroStartPlay(LONG lUserID, LPNET_DVR_CLIENTINFO lpClientInfo, REALDATACALLBACK fRealDataCallBack_V30 = NULL, void* pUser = NULL, BOOL bBlocked = TRUE);

NET_DVR_API BOOL __stdcall NET_DVR_ZeroStopPlay(LONG lPlayHandle);
NET_DVR_API BOOL __stdcall NET_DVR_ZeroMakeKeyFrame(LONG lUserID, LONG lZeroChan);
NET_DVR_API BOOL __stdcall NET_DVR_PlayBackControl_V40(LONG lPlayHandle, DWORD dwControlCode, LPVOID lpInBuffer = NULL, DWORD dwInLen = 0, LPVOID lpOutBuffer = NULL, DWORD *lpOutLen = NULL);
NET_DVR_API BOOL __stdcall NET_DVR_ZeroTurnOver(LONG lUserID, LONG lChannel, BOOL bNextPreview);

NET_DVR_API BOOL __stdcall NET_DVR_GetDiskList(LONG lUserID, LPNET_DVR_DISKABILITY_LIST lpDiskList);
NET_DVR_API LONG __stdcall NET_DVR_Backup(LONG lUserID, DWORD dwBackupType, LPVOID lpBackupBuff, DWORD dwBackupBuffSize);
NET_DVR_API LONG __stdcall NET_DVR_BackupByName(LONG lUserID, LPNET_DVR_BACKUP_NAME_PARAM lpBackupByName);
NET_DVR_API LONG __stdcall NET_DVR_BackupByTime(LONG lUserID, LPNET_DVR_BACKUP_TIME_PARAM lpBackupBytime);
NET_DVR_API BOOL __stdcall NET_DVR_GetBackupProgress(LONG lHandle, DWORD* pState);
NET_DVR_API BOOL __stdcall NET_DVR_StopBackup(LONG lHandle);

NET_DVR_API BOOL __stdcall NET_DVR_GetSadpInfoList(LONG lUserID, LPNET_DVR_SADPINFO_LIST lpSadpInfoList);
NET_DVR_API BOOL __stdcall NET_DVR_UpdateSadpInfo(LONG lUserID, LPNET_DVR_SADP_VERIFY lpSadpVerify, LPNET_DVR_SADPINFO lpSadpInfo);

NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetSubDecSystemJoinInfo(LONG lUserID, LPNET_DVR_ALLDECSUBSYSTEMJOININFO lpInter);

NET_DVR_API BOOL __stdcall NET_DVR_SetCodeSplitterAssociate(LONG lUserID, DWORD dwDecoderChan, DWORD dwSlotNum, LPNET_DVR_CODESPLITTERASSOCIATE lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_GetCodeSplitterAssociate(LONG lUserID, DWORD dwDecoderChan, DWORD dwSlotNum, LPNET_DVR_CODESPLITTERASSOCIATE lpInter);

NET_DVR_API BOOL __stdcall NET_DVR_InquestGetCDRWScheme(LONG lUserID, LPNET_DVR_INQUEST_CDRW_CFG lpCDRWCfg);
NET_DVR_API BOOL __stdcall NET_DVR_InquestSetCDRWScheme(LONG lUserID, LPNET_DVR_INQUEST_CDRW_CFG lpCDRWCfg);
NET_DVR_API BOOL __stdcall NET_DVR_InquestDeleteFile(LONG lUserID, LPNET_DVR_INQUEST_FILES lpDeleteFile);
NET_DVR_API BOOL __stdcall NET_DVR_InquestCDWByFile(LONG lUserID, LPNET_DVR_INQUEST_FILES lpCdrwFile);
NET_DVR_API LONG __stdcall NET_DVR_InquestUploadFile(LONG lUserID, char *sFileName);
NET_DVR_API BOOL __stdcall NET_DVR_InquestUploadClose(LONG lUploadHandle);
NET_DVR_API LONG __stdcall NET_DVR_InquestGetUploadState(LONG lUploadHandle, LPDWORD pProgress);
NET_DVR_API BOOL __stdcall NET_DVR_InquestStartCDW(LONG lUserID, BOOL bPause);
NET_DVR_API BOOL __stdcall NET_DVR_InquestStopCDW(LONG lUserID, BOOL bCancelWrite);
NET_DVR_API BOOL __stdcall NET_DVR_InquestGetCDWState(LONG lUserID, LPNET_DVR_INQUEST_CDRW_STATUS pStatus);
NET_DVR_API BOOL __stdcall NET_DVR_InquestGetPIPStatus(LONG lUserID, LPNET_DVR_INQUEST_PIP_STATUS pStatus);
NET_DVR_API BOOL __stdcall NET_DVR_InquestSetPIPStatus(LONG lUserID, LPNET_DVR_INQUEST_PIP_STATUS pStatus);
NET_DVR_API BOOL __stdcall NET_DVR_InquestCheckSecretKey(LONG lUserID, BOOL *bSecretSet);
NET_DVR_API BOOL __stdcall NET_DVR_InquestSetSecretKey(LONG lUserID, LPNET_DVR_INQUEST_SECRET_INFO pSecretInfo);
NET_DVR_API BOOL __stdcall NET_DVR_InquestStreamEncrypt(LONG lUserID, LONG lChannel, BOOL bEncrypt);
NET_DVR_API BOOL __stdcall NET_DVR_InquestGetEncryptState(LONG  lUserID, LONG lChannel, BOOL *bEncrypt);
NET_DVR_API LONG __stdcall NET_DVR_InquestFindFile(LONG lUserID);
NET_DVR_API LONG __stdcall NET_DVR_InquestFindNextFile(LONG lFindHandle, LPNET_DVR_INQUEST_FILEINFO lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_InquestFindClose(LONG lFindHandle);

// 9000RH
NET_DVR_API LONG __stdcall NET_DVR_RaidFastConfig(LONG lUserID, char *sName);
NET_DVR_API BOOL __stdcall NET_DVR_FastConfigProcess(LONG lHandle, DWORD *pState);
NET_DVR_API BOOL __stdcall NET_DVR_CloseFastConfig(LONG lHandle);
NET_DVR_API BOOL __stdcall NET_DVR_GetArraySpaceAlloc(LONG lUserID, DWORD dwSlot, LPNET_DVR_ARRAY_SPACE_ALLOC_INFO lpOutBuf);
NET_DVR_API BOOL __stdcall NET_DVR_DelArray(LONG lUserID, DWORD dwID);
NET_DVR_API BOOL __stdcall NET_DVR_CreateArray(LONG lUserID, LPNET_DVR_OPERATE_ARRAY_PARAM lpArrayParam);
NET_DVR_API BOOL __stdcall NET_DVR_CalcArraySize(LONG lUserID, LPNET_DVR_OPERATE_ARRAY_PARAM lpArrayParam, UINT64* lpArraySize);
NET_DVR_API BOOL __stdcall NET_DVR_MigrateArray(LONG lUserID, LPNET_DVR_OPERATE_ARRAY_PARAM lpArrayParam);
NET_DVR_API BOOL __stdcall NET_DVR_RebuildArray(LONG lUserID, LPNET_DVR_OPERATE_ARRAY_PARAM lpArrayParam);
NET_DVR_API BOOL __stdcall NET_DVR_CreateVD(LONG lUserID, LPNET_DVR_OPERATE_VD_PARAM lpVDParam);
NET_DVR_API BOOL __stdcall NET_DVR_CreateVDEx(LONG lUserID, LPNET_DVR_OPERATE_VD_PARAM_EX lpVDParamEx);
NET_DVR_API BOOL __stdcall NET_DVR_DelVD(LONG lUserID, DWORD dwID);
NET_DVR_API BOOL __stdcall NET_DVR_RepairVD(LONG lUserID, DWORD dwID);
NET_DVR_API BOOL __stdcall NET_DVR_SetSpareDisk(LONG lUserID, LPNET_DVR_SPARE_DISK_PARAM lpSpareDisk);
NET_DVR_API BOOL __stdcall NET_DVR_GetPDList(LONG lUserID, LPNET_DVR_PHY_DISK_LIST lpPDList);
NET_DVR_API BOOL __stdcall NET_DVR_GetArrayList(LONG lUserID, LPNET_DVR_ARRAY_LIST lpArrayList);
NET_DVR_API BOOL __stdcall NET_DVR_GetVDList(LONG lUserID, LPNET_DVR_VD_LIST lpVDList);
NET_DVR_API LONG __stdcall NET_DVR_ExpandDisk(LONG lUserID, DWORD dwVDSLot);
NET_DVR_API BOOL __stdcall NET_DVR_GetExpandProgress(LONG lExpandHandle, DWORD* pState);
NET_DVR_API BOOL __stdcall NET_DVR_CloseExpandHandle(LONG lExpandHandle);
NET_DVR_API LONG __stdcall NET_DVR_AlgoDebugStart(LONG lUserID, LONG lCHannel, void(CALLBACK *fAlgoLibInfoCallBack)(LONG lHandle, LONG lChannel, char *pRecvDataBuffer, DWORD dwBufSize, void* pUser), void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_AlgoDebugSend(LONG lHandle, LONG lChannel, char *pSendBuf, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_AlgoDebugStop(LONG lHandle);
NET_DVR_API BOOL __stdcall NET_DVR_SetLogPrint(BOOL bLogPrint);
NET_DVR_API BOOL __stdcall NET_DVR_SetLogPrintAction(DWORD nLogLevel, DWORD nToDevice, BOOL bEnable, int Reserve1, int Reserve2);

NET_DVR_API BOOL __stdcall NET_DVR_GetPositionRule(LONG lUserID, LONG lChannel, LONG lPositionIndex, LPNET_DVR_POSITION_RULE_CFG lpPositionRule);
NET_DVR_API BOOL __stdcall NET_DVR_GetPositionRule_V41(LONG lUserID, LONG lChannel, LONG lPositionIndex, LPNET_DVR_POSITION_RULE_CFG_V41 lpPositionRule);
NET_DVR_API BOOL __stdcall NET_DVR_SetPositionRule(LONG lUserID, LONG lChannel, LONG lPositionIndex, LPNET_DVR_POSITION_RULE_CFG lpPositionRule);
NET_DVR_API BOOL __stdcall NET_DVR_SetPositionRule_V41(LONG lUserID, LONG lChannel, LONG lPositionIndex, LPNET_DVR_POSITION_RULE_CFG_V41 lpPositionRule);
NET_DVR_API BOOL __stdcall NET_DVR_SetPositionLimitAngle(LONG lUserID, LONG lChannel, LONG lPositionIndex, LPNET_DVR_LIMIT_ANGLE lpLimitAngle);
NET_DVR_API BOOL __stdcall NET_DVR_GetPositionLimitAngle(LONG lUserID, LONG lChannel, LONG lPositionIndex, LPNET_DVR_LIMIT_ANGLE lpLimitAngle);
NET_DVR_API BOOL __stdcall NET_DVR_GetPtzPosition(LONG lUserID, LONG lChannel, LONG lPositionID, LPNET_DVR_PTZ_POSITION lpPtzPosition);
NET_DVR_API BOOL __stdcall NET_DVR_SetPtzPosition(LONG lUserID, LONG lChannel, LONG lPositionID, LPNET_DVR_PTZ_POSITION lpPtzPosition);
NET_DVR_API BOOL __stdcall NET_DVR_SetPatrolTrack(LONG lUserID, LONG lChannel, LONG lPatrolIndex, LPNET_DVR_PATROL_TRACKCFG lpPatrolTrack);
NET_DVR_API BOOL __stdcall NET_DVR_GetPatrolTrack(LONG lUserID, LONG lChannel, LONG lPatrolIndex, LPNET_DVR_PATROL_TRACKCFG lpPatrolTrack);
NET_DVR_API BOOL __stdcall NET_DVR_SetPatrolLimitAngle(LONG lUserID, LONG lChannel, LONG lPatrolIndex, LPNET_DVR_LIMIT_ANGLE lpLimitAngle);
NET_DVR_API BOOL __stdcall NET_DVR_GetPatrolLimitAngle(LONG lUserID, LONG lChannel, LONG lPatrolIndex, LPNET_DVR_LIMIT_ANGLE lpLimitAngle);
NET_DVR_API BOOL __stdcall NET_DVR_SetSceneMode(LONG  lUserID, LONG lChannel, DWORD dwSceneMode);
NET_DVR_API BOOL __stdcall NET_DVR_GetSceneMode(LONG lUserID, LONG lChannel, DWORD  *pSceneMode);
NET_DVR_API BOOL __stdcall NET_DVR_GetVCAVersion(LONG lUserID, LONG lChannel, LPNET_DVR_VCA_VERSION lpVersion);

NET_DVR_API BOOL __stdcall NET_DVR_ContinuousShoot(LONG lUserID, LPNET_DVR_SNAPCFG lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixPicAdjust(LONG lUserID, DWORD dwDispChan, DWORD dwPicAdjust, DWORD dwCmdParam);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmJoinedRecord(LONG lUserID, DWORD dwChan, DWORD dwAlarmSeq, DWORD dwRecordTime, DWORD dwRes);
NET_DVR_API BOOL __stdcall NET_DVR_GetUnitedMatrixInfo(LONG lUserID, LPNET_DVR_UNITEDMATRIXINFO lpInter);
typedef LONG(CALLBACK * REGCallBack)(LONG lUserID, LPNET_DVR_REGCALLBACKPARAM pRegCallbackParam, LPNET_DVR_LOGONREPONSEPARAM pInterParam, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetRegisterCallBack(REGCallBack fRegCallBack, void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_PreviewRequest(LONG lUserID, LONG lChannel, LPNET_DVR_PREVIEWPARAM lpPreviewParam, LPNET_DVR_DEVICENATINFO lpOuter);
typedef LONG(CALLBACK * PREVIEWRESPONSECallBack)(LONG lUserID, LONG lStreamHandle, LPNET_DVR_PREVIEWCALLBACKPARAM pPewviewCallbackParam, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetPreviewResponseCallBack(PREVIEWRESPONSECallBack fPreviewResponseCallBack, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_PlaybackRequest(LONG lUserID, LPNET_DVR_PLAYBACKREQUESTPARAM lpPlayBackRequestParam);
typedef LONG(CALLBACK * PLAYBACKRESPONSECallBack)(LONG lUserID, LONG lPlaybackHandle, LPNET_DVR_PLAYBACKCALLBACKPARAM lpPlaybackParam, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetPlaybackResponseCallBack(PLAYBACKRESPONSECallBack fPlaybackResponseCallBack, void *pUser);
typedef LONG(CALLBACK * VOICERESPONSECallBack)(LONG lUserID, LONG lVoiceHandle, LONG lVoiceChannel, BYTE nAudioType, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetVoiceResponseCallBack(VOICERESPONSECallBack fVoiceResponseCallBack, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_VoiceRequest(LONG lUserID, LPNET_DVR_VOICEREQUESTPARAM lpVoiceParam);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmSetupRequest(LONG lUserID, LPNET_DVR_ALARMSETUPREQUESTPARAM lpAlarmSetupParam);
NET_DVR_API BOOL __stdcall NET_DVR_GetDialParam(LONG lUserID, LPNET_DVR_DIALREQUEST lpDialRequest, LPNET_DVR_DIALPARAM lpDialParam);
NET_DVR_API BOOL __stdcall NET_DVR_SetDialParam(LONG lUserID, LPNET_DVR_DIALREQUEST lpDialRequest, LPNET_DVR_DIALPARAM lpDialParam);
NET_DVR_API BOOL __stdcall NET_DVR_GetSmsListInfo(LONG lUserID, LPNET_DVR_TIME_EX lpStartTime, LPNET_DVR_TIME_EX lpStopTime, LPNET_DVR_SMSLISTINFO lpSmsListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_GetSmsContent(LONG lUserID, DWORD dwSmsIndex, LPNET_DVR_SMSCONTENT lpSmsContent);
NET_DVR_API BOOL __stdcall NET_DVR_SendSms(LONG lUserID, LPNET_DVR_SMSCONTENT lpSmsContent);
NET_DVR_API LONG __stdcall NET_DVR_StartServer(char *sLocalIP, WORD wLocalPort, BYTE byMode);
NET_DVR_API BOOL __stdcall NET_DVR_StopServer(LONG lServerHandle);
NET_DVR_API LONG __stdcall NET_DVR_StartRecvNakedDataListen(NAKED_DATA_TYPE type, LPNET_DVR_NAKED_DATA_PARAM pParams);
NET_DVR_API BOOL __stdcall NET_DVR_StopRecvNakedDataListen(LONG lNakedDataRecvHandle);
typedef void(CALLBACK * NAKEDDAtACALLBACK)(DWORD typeInfo, char *pInfo, DWORD dwInfoLen, DWORD dwIPLen, void* pUser);
NET_DVR_API BOOL __stdcall  NET_DVR_SetNakedDataRecvCallBack(LONG lNakedDataRecvHandle, void(CALLBACK *fNakedDataCallBack)(DWORD dwTypeInfo, NET_DVR_NAKED_DATA_INFO *pStruNakedDataInfo, char *pInfo, DWORD dwInfoLen, void* pUser), void* pUser);

typedef LONG(CALLBACK * ALARMSETUPRESPONSECallBack)(LONG lUserID, LONG lAlarmHandle, void * pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetAlarmSetupResponseCallBack(ALARMSETUPRESPONSECallBack fAlarmSetupResponseCallBack, void * pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SpringJPEGPicture(LONG lUserID, LONG lChannel, NET_DVR_PUSHJPEGPARA const *lpJpegPara);
NET_DVR_API BOOL __stdcall NET_DVR_SetPushModeParam(LPNET_DVR_PUSHMODEPARAM pPushParam);

NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostSetupAlarmChan(LONG lUserID, NET_DVR_ALARMIN_SETUP *lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostCloseAlarmChan(LONG lUserID, NET_DVR_ALARMIN_SETUP *lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_BypassAlarmChan(LONG lUserID, NET_DVR_ALARMIN_SETUP *lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_UnBypassAlarmChan(LONG lUserID, NET_DVR_ALARMIN_SETUP *lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostAssistantControl(LONG lUserID, DWORD dwType, DWORD dwNumber, DWORD dwCmdParam);
NET_DVR_API BOOL __stdcall NET_DVR_SetAirCondition(LONG lUserID, LONG l485Index, NET_DVR_AIR_CONDITION_PARAM* lpAirConditionParam);
NET_DVR_API BOOL __stdcall NET_DVR_GetAirCondition(LONG lUserID, LONG l485Index, NET_DVR_AIR_CONDITION_PARAM* lpAirConditionParam);
NET_DVR_API BOOL __stdcall NET_DVR_GetDeviceTypeList(LONG lUserID, NET_DVR_DEVICE_TYPE_LIST *lpDeviceTypeList);
NET_DVR_API BOOL __stdcall NET_DVR_GetDeviceProtoList(LONG lUserID, LONG lDeviceType, NET_DVR_DEVICE_PROTO_LIST *lpDeviceProtoList);
NET_DVR_API BOOL __stdcall NET_DVR_GetBatteryVoltage(LONG lUserID, float *pVoltage);
NET_DVR_API BOOL __stdcall NET_DVR_SetAlarmDeviceUser(LONG lUserID, LONG lUserIndex, NET_DVR_ALARM_DEVICE_USER* lpDeviceUser);
NET_DVR_API BOOL __stdcall NET_DVR_GetAlarmDeviceUser(LONG lUserID, LONG lUserIndex, NET_DVR_ALARM_DEVICE_USER* lpDeviceUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetKeyboardUser(LONG lUserID, LONG lUserIndex, NET_DVR_KEYBOARD_USER* lpKeyboardUser);
NET_DVR_API BOOL __stdcall NET_DVR_GetKeyboardUser(LONG lUserID, LONG lUserIndex, NET_DVR_KEYBOARD_USER* lpKeyboardUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetOperateUser(LONG lUserID, LONG lUserIndex, NET_DVR_OPERATE_USER* lpOperateUser);
NET_DVR_API BOOL __stdcall NET_DVR_GetOperateUser(LONG lUserID, LONG lUserIndex, NET_DVR_OPERATE_USER* lpOperateUser);
NET_DVR_API BOOL __stdcall NET_DVR_ControlGateway(LONG lUserID, LONG lGatewayIndex, DWORD dwStaic);
NET_DVR_API BOOL __stdcall NET_DVR_SetAlarmHostOut(LONG lUserID, LONG lAlarmOutPort, LONG lAlarmOutStatic);
typedef void(CALLBACK *fAlarmHostSerialDataCallBack)
(LONG lSerialHandle, LONG lPort, LONG lDateType, char *pRecvDataBuffer, DWORD  dwBufSize, void *pUser);
NET_DVR_API LONG __stdcall NET_DVR_AlarmHostSerialStart(LONG lUserID, LONG lSerialType, fAlarmHostSerialDataCallBack cbSerialDataCallBack, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostSerialSend(LONG lSerialHandle, LONG lPort, char *pSendBuf, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostSerialStop(LONG  lSerialHandle);
NET_DVR_API BOOL __stdcall NET_DVR_GetMatrixPuChan(LONG lUserID, LONG lChanType, NET_DVR_PU_CHAN_LIST* lpChanList);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixAlarmOffMonitor(LONG lUserID, DWORD dwMonID, DWORD dwCamID);
NET_DVR_API BOOL __stdcall NET_DVR_GetCameraListInfo(LONG lUserID, DWORD dwCamNum, DWORD dwStartCam, LPNET_DVR_MATRIX_CAMERALIST lpCamListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_GetMonitorListInfo(LONG lUserID, DWORD dwMonNum, DWORD dwStartMon, LPNET_DVR_MATRIX_MONITORLIST lpMonListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_GetGlobalNum(LONG lUserID, DWORD *dwCamNum, DWORD *dwMonNum);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetUnitedMatrixInfo(LONG lUserID, LPNET_DVR_ALLUNITEDMATRIXINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetUnitedMatrixInfo(LONG lUserID, LPNET_DVR_ALLUNITEDMATRIXINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetGatewayInfo(LONG lUserID, LPNET_DVR_MATRIXGATEWAYINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetGatewayInfo(LONG lUserID, LPNET_DVR_MATRIXGATEWAYINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSpanSwitch(LONG lUserID, BYTE nSwitchMode, LPNET_DVR_MATRIXSWITCH lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixStartSwitch(LONG lUserID, LPNET_DVR_MATRIXSWITCHCTRL lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetConfigFile(LONG lUserID, LPNET_DVR_MATRIXDATABASE lpInter, char *sInBuffer, DWORD dwInSize);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetConfigFile(LONG lUserID, LPNET_DVR_MATRIXDATABASE lpInter, char  *sOutBuffer, DWORD   dwOutSize, DWORD   *pReturnSize);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetSubSystemInfo_V40(LONG lUserID, LPNET_DVR_ALLSUBSYSTEMINFO_V40 lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetSubSystemInfo_V40(LONG lUserID, LPNET_DVR_ALLSUBSYSTEMINFO_V40 lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetSubDecSystemJoinInfo_V40(LONG lUserID, LPNET_DVR_ALLDECSUBSYSTEMJOININFO_V40 lpInter);
typedef void (CALLBACK *FLOWTESTCALLBACK)(LONG lFlowHandle, LPNET_DVR_FLOW_INFO pFlowInfo, void *pUser);
NET_DVR_API LONG __stdcall NET_DVR_StartNetworkFlowTest(LONG lUserID, NET_DVR_FLOW_TEST_PARAM* pFlowTest, FLOWTESTCALLBACK fFlowTestCallback, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_StopNetworkFlowTest(LONG lHandle);
NET_DVR_API LONG __stdcall NET_DVR_FindRecordLabel(LONG lUserID, LPNET_DVR_FIND_LABEL lpFindLabel);
NET_DVR_API LONG __stdcall NET_DVR_FindNextLabel(LONG lFindHandle, LPNET_DVR_FINDLABEL_DATA lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_StopFindLabel(LONG lFindHandle);
NET_DVR_API BOOL __stdcall NET_DVR_InsertRecordLabel(LONG lPlayHandle, NET_DVR_RECORD_LABEL* lpRecordLabel, NET_DVR_LABEL_IDENTIFY *lpLableIdentify);
NET_DVR_API BOOL __stdcall NET_DVR_DelRecordLabel(LONG lUserID, NET_DVR_DEL_LABEL_PARAM* lpDelLabelParam);
NET_DVR_API BOOL __stdcall NET_DVR_ModifyRecordLabel(LONG lUserID, NET_DVR_MOD_LABEL_PARAM * lpModLabelParam);
NET_DVR_API BOOL __stdcall NET_DVR_CapturePlaybackPictureBlock(LONG lPlayHandle, char *sPicFileName, DWORD dwTimeOut);
NET_DVR_API BOOL __stdcall NET_DVR_CapturePlaybackPictureBlock_New(LONG lPlayHandle, char *pPicBuf, DWORD dwPicSize, DWORD *lpSizeReturned);
NET_DVR_API LONG __stdcall NET_DVR_FindPicture(LONG lUserID, NET_DVR_FIND_PICTURE_PARAM* pFindParam);
NET_DVR_API LONG __stdcall NET_DVR_FindNextPicture(LONG lFindHandle, LPNET_DVR_FIND_PICTURE lpFindData);
NET_DVR_API LONG __stdcall NET_DVR_FindNextPicture_V40(LONG lFindHandle, LPNET_DVR_FIND_PICTURE_V40 lpFindData);
NET_DVR_API LONG __stdcall NET_DVR_FindNextPicture_V50(LONG lFindHandle, LPNET_DVR_FIND_PICTURE_V50 lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_CloseFindPicture(LONG lFindHandle);
NET_DVR_API BOOL __stdcall NET_DVR_GetPicture(LONG lUserID, char *sDVRFileName, const char *sSavedFileName);
NET_DVR_API BOOL __stdcall NET_DVR_GetPicture_V30(LONG lUserID, char *sDVRFileName, char *sSavedFileBuf, DWORD dwBufLen, DWORD *lpdwRetLen);
NET_DVR_API BOOL __stdcall NET_DVR_GetPicture_V50(LONG lUserID, LPNET_DVR_PIC_PARAM lpPicParam);
NET_DVR_API LONG __stdcall NET_DVR_BackupPicture(LONG lUserID, NET_DVR_BACKUP_PICTURE_PARAM *lpBackupPicture);
NET_DVR_API LONG __stdcall NET_DVR_GetUpgradeStep(LONG lUpgradeHandle, LONG *pSubProgress);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetEncodeJoint(LONG lUserID, LONG lChannel, LPNET_DVR_ENCODE_JOINT_PARAM lpEncodeJoint);
NET_DVR_API BOOL  __stdcall NET_DVR_GetLocalIP(char strIP[16][16], DWORD *pValidNum, BOOL *pEnableBind);
NET_DVR_API BOOL  __stdcall NET_DVR_SetValidIP(DWORD dwIPIndex, BOOL bEnableBind);
NET_DVR_API BOOL __stdcall NET_DVR_GetVcaDevWorkState(LONG lUserID, LPNET_DVR_VCA_DEV_WORKSTATUS lpWorkState);
NET_DVR_API BOOL  __stdcall NET_DVR_SetRecvTimeOut(DWORD nRecvTimeOut = 5000); //℅???3000????
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDisplayCfg_V40(LONG lUserID, DWORD dwDispChanNum, LPNET_DVR_VGA_DISP_CHAN_CFG_V40 lpDisplayCfg);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetDisplayCfg_V40(LONG lUserID, DWORD dwDispChanNum, LPNET_DVR_VGA_DISP_CHAN_CFG_V40 lpDisplayCfg);
NET_DVR_API BOOL __stdcall NET_DVR_ShutterCompensation(LONG lUserID);
NET_DVR_API BOOL __stdcall NET_DVR_CorrectDeadPixel(LONG lUserID, LONG lChannel, LPNET_DVR_CORRECT_DEADPIXEL_PARAM lpInParam);
NET_DVR_API BOOL __stdcall NET_DVR_CustomConfig(LONG lUserID, LONG lChannel, LPVOID lpInBuffer, DWORD dwInBufferSize, LPVOID lpOutBuffer, DWORD dwOutBufferSize, LPDWORD lpBytesReturned);
NET_DVR_API BOOL __stdcall NET_DVR_GetHistoricDataInfo(LONG lUserID, LONG lChannel, LPNET_DVR_HISTORICDATACFG lpHisData);
NET_DVR_API BOOL __stdcall NET_DVR_GetHistoricData(LONG lUserID, LONG lChannel, LPNET_DVR_PLATE_RESULT lpOuter);
NET_DVR_API BOOL __stdcall NET_DVR_ClearHistoricData(LONG lUserID, LONG lChannel);
NET_DVR_API LONG  __stdcall NET_DVR_InquestUploadFile_V30(LONG lUserID, LPNET_DVR_INQUEST_ROOM lpInquestRoom, char *sFileName);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestDeleteFile_V30(LONG lUserID, LPNET_DVR_INQUEST_ROOM lpInquestRoom, LPNET_DVR_INQUEST_FILES lpDeleteFile);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestGetPIPStatus_V30(LONG lUserID, LPNET_DVR_INQUEST_ROOM lpInquestRoom, LPNET_DVR_INQUEST_PIP_STATUS lpStatus);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestSetPIPStatus_V30(LONG lUserID, LPNET_DVR_INQUEST_ROOM lpInquestRoom, LPNET_DVR_INQUEST_PIP_STATUS lpStatus);
NET_DVR_API BOOL __stdcall NET_DVR_InquestGetPIPStatus_V40(LONG lUserID, NET_DVR_INQUEST_ROOM const *lpInquestRoom, LPNET_DVR_INQUEST_PIP_STATUS_V40 lpStatus);
NET_DVR_API BOOL __stdcall NET_DVR_InquestSetPIPStatus_V40(LONG lUserID, NET_DVR_INQUEST_ROOM const *lpInquestRoom, LPNET_DVR_INQUEST_PIP_STATUS_V40 lpStatus);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestGetSystemInfo(LONG lUserID, LPNET_DVR_INQUEST_SYSTEM_INFO lpSystemInfo);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestSetSystemInfo(LONG lUserID, LPNET_DVR_INQUEST_SYSTEM_INFO lpSystemInfo);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestSendMessage(LONG lUserID, LPNET_DVR_INQUEST_ROOM lpInquestRoom, LPNET_DVR_INQUEST_MESSAGE lpInquestMessage);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestStartCDW_V30(LONG lUserID, LPNET_DVR_INQUEST_ROOM lpInquestRoom, BOOL bNotBurn);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestStopCDW_V30(LONG lUserID, LPNET_DVR_INQUEST_ROOM lpInquestRoom, BOOL bCancelWrite);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestGetCDWState_V30(LONG lUserID, LPNET_DVR_INQUEST_ROOM lpInquestRoom, LPNET_DVR_INQUEST_CDRW_STATUS pStatus);
NET_DVR_API LONG  __stdcall NET_DVR_InquestResumeEvent(LONG lUserID, LPNET_DVR_INQUEST_RESUME_EVENT lpResumeEvent);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestGetResumeProgress(LONG lHandle, DWORD* pState);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestStopResume(LONG lHandle);
NET_DVR_API LONG  __stdcall NET_DVR_InquestFindFile_V30(LONG lUserID, LPNET_DVR_INQUEST_ROOM pInquestRoom);
NET_DVR_API BOOL  __stdcall NET_DVR_InquestGetDeviceVersion(LONG lUserID, LPNET_DVR_INQUEST_DEVICE_VERSION lpVersionInfo);
NET_DVR_API BOOL  __stdcall NET_DVR_SetSDKSecretKey(LONG lUserID, char *sSecretKey);
NET_DVR_API BOOL __stdcall NET_DVR_LockFileByTime(LONG lUserID, LPNET_DVR_TIME_LOCK lpLockPara, LPNET_DVR_LOCK_RETURN lpLockReturn);
NET_DVR_API BOOL __stdcall NET_DVR_UnlockFileByTime(LONG lUserID, LPNET_DVR_TIME_LOCK lpLockPara, LPNET_DVR_LOCK_RETURN lpLockReturn);
NET_DVR_API BOOL __stdcall NET_DVR_ScreenZoomIn(LONG lUserID, LPNET_DVR_SCREENZOOM pStruScreen);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetAllCameraInfo(LONG lUserID, LPNET_DVR_MATRIX_CAMERALIST lpCamListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetSingleCameraInfo(LONG lUserID, DWORD dwCameraId, LPNET_MATRIX_CAMERAINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixAddCamera(LONG lUserID, DWORD dwCameraNum, BYTE *pBuffer, DWORD dwBufLength);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixModCameraInfo(LONG lUserID, LPNET_MATRIX_CAMERAINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixDelCamera(LONG lUserID, DWORD dwCameraId);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetAllMonitorInfo(LONG lUserID, LPNET_DVR_MATRIX_MONITORLIST lpMonListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetSingleMonitorInfo(LONG lUserID, DWORD dwMonitorId, LPNET_MATRIX_MONITORINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixAddMonitor(LONG lUserID, DWORD dwMonitorNum, BYTE *pBuffer, DWORD dwBufLength);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixModMonitorInfo(LONG lUserID, LPNET_MATRIX_MONITORINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixDelMonitor(LONG lUserID, DWORD dwMonitorId);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetAllMatrixInfo(LONG lUserID, LPNET_DVR_MATRIXLIST lpMatrixListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_GetSingleMatrixInfo(LONG lUserID, DWORD dwMatrixId, LPNET_MATRIX_MATRIXINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_AddMatrix(LONG lUserID, LPNET_MATRIX_MATRIXINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_ModMatrixInfo(LONG lUserID, LPNET_MATRIX_MATRIXINFO lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_DelMatrix(LONG lUserID, DWORD dwMatrixId);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetUartParam(LONG lUserID, DWORD dwSerialChan, LPNET_MATRIX_UARTPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetUartParam(LONG lUserID, DWORD dwSerialChan, LPNET_MATRIX_UARTPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetUserInfo(LONG lUserID, DWORD dwUserNum, LPNET_MATRIX_USERPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixAddUser(LONG lUserID, DWORD dwUserNum, LPNET_MATRIX_USERPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixModUserInfo(LONG lUserID, DWORD dwUserNum, LPNET_MATRIX_USERPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixDelUser(LONG lUserID, DWORD dwUserNum);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetResourceInfo(LONG lUserID, DWORD dwResourceNum, LPNET_MATRIX_RESOURSEGROUPPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixAddResourceInfo(LONG lUserID, DWORD dwResourceNum, LPNET_MATRIX_RESOURSEGROUPPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixModResourceInfo(LONG lUserID, DWORD dwResourceNum, LPNET_MATRIX_RESOURSEGROUPPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixDelResourceInfo(LONG lUserID, DWORD dwResourceNum);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetUserGroupInfo(LONG lUserID, DWORD dwUserGroupNum, LPNET_MATRIX_USERGROUPPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixAddUserGroupInfo(LONG lUserID, DWORD dwUserGroupNum, LPNET_MATRIX_USERGROUPPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixModUserGroupInfo(LONG lUserID, DWORD dwUserGroupNum, LPNET_MATRIX_USERGROUPPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixDelUserGroup(LONG lUserID, DWORD dwUserGroupNum);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetAllTrunkInfo(LONG lUserID, LPNET_DVR_MATRIX_TRUNKLIST lpTrunkListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetTrunkInfo(LONG lUserID, DWORD dwTrunkNum, LPNET_MATRIX_TRUNKPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixAddTrunk(LONG lUserID, LPNET_MATRIX_TRUNKPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixModTrunkInfo(LONG lUserID, LPNET_MATRIX_TRUNKPARAM lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixTrunkCtrl(LONG lUserID, DWORD dwTrunkNum, BYTE byCtrlMode);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixTrunkStatusQuery(LONG lUserID, DWORD dwTrunkNum, BYTE *byTrunkStatus);

NET_DVR_API BOOL __stdcall NET_DVR_FindBackgroundPic(LONG lUserID, DWORD dwPicID, BYTE *pPicBuffer, DWORD *lpPicLen);
NET_DVR_API BOOL __stdcall NET_DVR_DetectImage(LONG lUserID, LPNET_VCA_FD_PROCIMG_CFG lpFDProcImg, LPNET_VCA_FD_PROCIMG_RESULT lpOutBuf);
NET_DVR_API BOOL __stdcall NET_DVR_GetPictureModel(LONG lUserID, LPNET_VCA_REGISTER_PIC lpInBuf, LPNET_VCA_PICMODEL_RESULT lpOutBuf);
NET_DVR_API BOOL __stdcall NET_DVR_AddBlackList(LONG lUserID, LONG lChannel, LPNET_VCA_BLACKLIST_PARA lpInter);
NET_DVR_API LONG __stdcall NET_DVR_FindBlackList(LONG lUserID, LPNET_VCA_BLACKLIST_COND lpBlackListCond);
NET_DVR_API LONG __stdcall NET_DVR_FindNextBlackList(LONG lFindHandle, LPNET_VCA_BLACKLIST_INFO lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_FindBlackListClose(LONG lFindHandle);
NET_DVR_API BOOL __stdcall NET_DVR_GetBlackListPicture(LONG lUserID, DWORD dwRegisterID, LPNET_VCA_BLACKLIST_PIC lpOutBuffer);
NET_DVR_API BOOL __stdcall NET_DVR_UpdateBlackList(LONG lUserID, LONG lChannel, LPNET_VCA_BLACKLIST_PARA lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_DelBlackList(LONG lUserID, LONG lChannel, DWORD dwRegisterID);
NET_DVR_API LONG __stdcall NET_DVR_FindSnapPicture(LONG lUserID, LPNET_VCA_FIND_PICTURECOND lpFindParam);
NET_DVR_API LONG __stdcall NET_DVR_FindNextSnapPic(LONG lFindHandle, LPNET_VCA_SUB_SNAPPIC_DATA lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_FindSnapPicClose(LONG lFindHandle);
NET_DVR_API LONG __stdcall NET_DVR_AdvanceFindSnapPicture(LONG lUserID, LPNET_VCA_FIND_PICTURECOND_ADVANCE lpFindParam);
NET_DVR_API LONG __stdcall NET_DVR_FindFaceMatchAlarm(LONG lUserID, LPNET_VCA_FIND_PICTURECOND lpFindParam);
NET_DVR_API LONG __stdcall NET_DVR_FindNextFaceMatchAlarm(LONG lFindHandle, LPNET_VCA_FACESNAP_MATCH_ALARM_LOG lpFaceMatchAlarmLog);
NET_DVR_API BOOL __stdcall NET_DVR_FindFaceMatchAlarmClose(LONG lFindHandle);
NET_DVR_API BOOL __stdcall NET_DVR_GetFaceMatchPic(LONG lUserID, LPNET_VCA_FACEMATCH_PICCOND lpMatchCond, LPNET_VCA_FACEMATCH_PICTURE lpMatchPic);
NET_DVR_API BOOL __stdcall NET_DVR_FastAddBlackList(LONG lUserID, LONG lChannel, LPNET_VCA_BLACKLIST_FASTREGISTER_PARA lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetRemotePlay_V41(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_DEC_REMOTE_PLAY_V41 lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDisplayCfg_V41(LONG lUserID, DWORD dwDispChanNum, LPNET_DVR_MATRIX_VOUTCFG lpVoutCfg);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetDisplayCfg_V41(LONG lUserID, DWORD dwDispChanNum, LPNET_DVR_MATRIX_VOUTCFG lpDisplayCfg);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDeviceStatus_V41(LONG lUserID, LPNET_DVR_DECODER_WORK_STATUS_V41 lpDecoderCfg);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetSceneCfg(LONG lUserID, DWORD dwSceneNum, LPNET_DVR_MATRIX_SCENECFG lpSceneCfg);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetSceneCfg(LONG lUserID, DWORD dwSceneNum, LPNET_DVR_MATRIX_SCENECFG lpSceneCfg);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSceneControl(LONG lUserID, DWORD dwSceneNum, DWORD dwCmd, DWORD dwCmdParam);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetCurrentSceneMode(LONG lUserID, DWORD *dwSceneNum);
NET_DVR_API BOOL __stdcall NET_DVR_GetAllValidWinInfo(LONG lUserID, LPNET_DVR_WINLIST lpWinListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_ScreenWinCtrl(LONG lUserID, DWORD dwWinIndex, DWORD dwCommand, LPNET_DVR_SCREEN_WINCFG lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_GetScreenInputStatus(LONG lUserID, LPNET_DVR_SCREENINPUTSTATUS lpStatus);
NET_DVR_API LONG __stdcall NET_DVR_PicUpload(LONG lUserID, char const *sFileName, LPNET_DVR_PICTURECFG lpPictureCfg);
NET_DVR_API LONG __stdcall NET_DVR_GetPicUploadProgress(LONG lUploadHandle);
NET_DVR_API BOOL __stdcall  NET_DVR_CloseUploadHandle(LONG lUploadHandle);
NET_DVR_API BOOL __stdcall NET_DVR_PicControl(LONG lUserID, BYTE byUseType, BYTE byPicIndex, BYTE byCtrlCmd);
NET_DVR_API LONG __stdcall NET_DVR_GetPicUploadState(LONG lUploadHandle);
NET_DVR_API BOOL __stdcall NET_DVR_ScreenCtrl(LONG lUserID, DWORD dwDeviceNum, LPNET_DVR_SCREEN_CONTROL lpStruScreenCtrl);
typedef void (CALLBACK *SCREENPICDATACB)(LONG nScreenPicHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, void *pUser);
NET_DVR_API LONG __stdcall NET_DVR_StartScreenPic(LONG nUserID, DWORD nInputNum, SCREENPICDATACB PicDataCallback, void *pUserData);
NET_DVR_API BOOL __stdcall NET_DVR_StopScreenPic(LONG nScreenPicHandle);
NET_DVR_API BOOL __stdcall NET_DVR_FocusOnePush(LONG lUserID, LONG lChannel);
NET_DVR_API BOOL __stdcall NET_DVR_ResetLens(LONG lUserID, LONG lChannel);

typedef void(CALLBACK *fRemoteConfigCallback)(DWORD dwType, void* lpBuffer, DWORD dwBufLen, void* pUserData);
NET_DVR_API LONG __stdcall NET_DVR_StartRemoteConfig(LONG lUserID, DWORD dwCommand, LPVOID lpInBuffer, DWORD dwInBufferLen, fRemoteConfigCallback cbStateCallback, LPVOID pUserData);
NET_DVR_API BOOL __stdcall NET_DVR_StopRemoteConfig(LONG lHandle);
NET_DVR_API LONG __stdcall NET_DVR_GetNextRemoteConfig(LONG lHandle, void* lpOutBuff, DWORD dwOutBuffSize);
NET_DVR_API BOOL __stdcall NET_DVR_GetRemoteConfigState(LONG lHandle, void *pState);
NET_DVR_API BOOL __stdcall NET_DVR_SendRemoteConfig(LONG lHandle, DWORD dwDataType, char *pSendBuf, DWORD dwBufSize);

typedef void(CALLBACK *fLongCfgStateCallback)(LONG lHandle, DWORD dwState, LPVOID pUserData);
NET_DVR_API BOOL __stdcall NET_DVR_CloseLongCfgHandle(LONG lHandle);
NET_DVR_API LONG __stdcall NET_DVR_RaidPullDiskStart(LONG lUserID, LONG lRaidID, fLongCfgStateCallback cbStateCallback, LPVOID pUserData);
NET_DVR_API LONG __stdcall NET_DVR_ScanRaidStart(LONG lUserID, fLongCfgStateCallback cbStateCallback, LPVOID pUserData);
NET_DVR_API LONG __stdcall NET_DVR_SetAccessCameraInfo(LONG lUserID, DWORD dwChannel, LPNET_DVR_ACCESS_CAMERA_INFO lpCameraInfo, fLongCfgStateCallback cbStateCallback, LPVOID pUserData);

NET_DVR_API BOOL __stdcall NET_DVR_InquiryRecordTimeSpan(LONG lUserID, DWORD dwChannel, NET_DVR_RECORD_TIME_SPAN_INQUIRY const *lpInquiry, LPNET_DVR_RECORD_TIME_SPAN lpResult);
NET_DVR_API BOOL __stdcall NET_DVR_UpdateRecordIndex(LONG lUserID, DWORD dwChannel);
NET_DVR_API BOOL __stdcall NET_DVR_GetUpnpNatState(LONG lUserID, LPNET_DVR_UPNP_NAT_STATE lpState);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetLoopDecChanInfo_EX(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_LOOP_DECINFO_EX lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetLoopDecChanInfo_EX(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_LOOP_DECINFO_EX lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixStartDynamic_EX(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_PU_STREAM_CFG_EX lpDynamicInfo);
NET_DVR_API BOOL __stdcall NET_DVR_GetTrunkListInfo(LONG lUserID, DWORD dwTrunkNum, DWORD dwStartTrunk, LPNET_DVR_MATRIX_TRUNKLIST lpTrunkListInfo, DWORD *pReturnSize);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetSubDecSystemJoinInfo_V41(LONG lUserID, LPNET_DVR_ALLDECSUBSYSTEMJOININFO_V41 lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostSubSystemSetupAlarmChan(LONG lUserID, DWORD dwSubSystemNum);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostSubSystemCloseAlarmChan(LONG lUserID, DWORD dwSubSystemNum);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostClearAlarm(LONG lUserID, DWORD dwSubSystemNum);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostArrayBypass(LONG lUserID);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostArrayBypassResume(LONG lUserID);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostSetReportMode(LONG lUserID, LONG lCenterNum, LPVOID lpInputBuf, DWORD dwInputBufLen);
NET_DVR_API BOOL __stdcall NET_DVR_AlarmHostGetReportMode(LONG lUserID, LPVOID lpOutputBuf, DWORD dwOutputBufLen);
NET_DVR_API LONG __stdcall NET_DVR_StartUploadAudio(LONG lUserID, DWORD dwAudioNum, DWORD dwAudioType, char const *sAudioFileName);
NET_DVR_API LONG __stdcall NET_DVR_StartDownloadAudio(LONG lUserID, DWORD dwAudioNum, char const *sAudioFileName);
NET_DVR_API BOOL __stdcall NET_DVR_StopAudioOperate(LONG lAudioHandle);
NET_DVR_API LONG __stdcall NET_DVR_GetAudioProgress(LONG lAudioHandle);
NET_DVR_API BOOL __stdcall NET_DVR_AudioCtrl(LONG lUserID, DWORD dwAudioNum, DWORD dwCtrlParam);
NET_DVR_API BOOL __stdcall NET_DVR_GetDeviceConfig(LONG lUserID, DWORD dwCommand, DWORD dwCount, LPVOID lpInBuffer, DWORD dwInBufferSize, LPVOID lpStatusList, LPVOID lpOutBuffer, DWORD dwOutBufferSize);
NET_DVR_API BOOL __stdcall NET_DVR_SetDeviceConfig(LONG lUserID, DWORD dwCommand, DWORD dwCount, LPVOID lpInBuffer, DWORD dwInBufferSize, LPVOID lpStatusList, LPVOID lpInParamBuffer, DWORD dwInParamBufferSize);
NET_DVR_API BOOL __stdcall NET_DVR_LockStreamFileByTime(LONG lUserID, LPNET_DVR_STREAM_TIME_LOCK lpLockPara, LPNET_DVR_LOCK_RETURN lpLockReturn);
NET_DVR_API BOOL __stdcall NET_DVR_UnlockStreamFileByTime(LONG lUserID, LPNET_DVR_STREAM_TIME_LOCK lpLockPara, LPNET_DVR_LOCK_RETURN lpLockReturn);
NET_DVR_API BOOL __stdcall NET_DVR_StartManualRecord(LONG lUserID, LPNET_DVR_MANUAL_RECORD_PARA lpManualRecPara);
NET_DVR_API BOOL __stdcall NET_DVR_StopManualRecord(LONG lUserID, LPNET_DVR_STREAM_INFO pIDInfo);
NET_DVR_API LONG __stdcall NET_DVR_PlayBackReverseByName(LONG lUserID, char *sPlayBackFileName, HWND hWnd);
NET_DVR_API LONG __stdcall NET_DVR_PlayBackByTime_V40(LONG lUserID, NET_DVR_VOD_PARA const* pVodPara);
NET_DVR_API LONG __stdcall NET_DVR_PlayBackByTime_V50(LONG lUserID, NET_DVR_VOD_PARA_V50 const* pVodPara);
NET_DVR_API LONG __stdcall NET_DVR_PlayBackReverseByTime_V40(LONG lUserID, HWND hWnd, LPNET_DVR_PLAYCOND pPlayCond);
NET_DVR_API LONG __stdcall NET_DVR_GetFileByTime_V40(LONG lUserID, char *sSavedFileName, LPNET_DVR_PLAYCOND  pDownloadCond);
NET_DVR_API LONG __stdcall NET_DVR_FindFile_V40(LONG lUserID, LPNET_DVR_FILECOND_V40 pFindCond);
NET_DVR_API LONG __stdcall NET_DVR_SetupAlarmChan_V41(LONG lUserID, LPNET_DVR_SETUPALARM_PARAM lpSetupParam);
NET_DVR_API BOOL __stdcall NET_DVR_AddDataBase(LONG lUserID, LPNET_VCA_DATABASE_PARAM lpInBuf);
NET_DVR_API LONG __stdcall NET_DVR_FindDataBase(LONG lUserID, LPNET_VCA_FIND_DATABASE_COND lpInBuf);
NET_DVR_API LONG __stdcall NET_DVR_FindNextDataBase(LONG lFindHandle, LPNET_VCA_DATABASE_PARAM lpOutBuf);
NET_DVR_API BOOL __stdcall NET_DVR_FindDataBaseClose(LONG lFindHandle);
NET_DVR_API BOOL __stdcall NET_DVR_UpdateDataBase(LONG lUserID, LPNET_VCA_DATABASE_PARAM lpInBuf);
NET_DVR_API BOOL __stdcall NET_DVR_DeleteDataBase(LONG lUserID, LPNET_VCA_DELETE_DATABASE_COND lpCond);
typedef void(CALLBACK *fSearchDBCallBack)(LONG lHandle, DWORD dwType, DWORD dwResultNum, BYTE* pBuffer, DWORD dwBufSize, void *pUser);
NET_DVR_API LONG __stdcall NET_DVR_InquireSnapDBRecord(LONG lUserID, DWORD dwDataBaseID, LPNET_VCA_INQUIRE_SNAPDB_COND lpInBuf, fSearchDBCallBack cbSearchDBCallBack, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_GetInquireSnapDBProgress(LONG lInquireHandle, DWORD* pState);
NET_DVR_API BOOL __stdcall NET_DVR_DeleteSnapDBRecord(LONG lUserID, DWORD dwDataBaseID, LPNET_VCA_DELETE_SNAPRECORD_COND lpInBuf);
NET_DVR_API LONG __stdcall NET_DVR_SearchSnapDB(LONG lUserID, LPNET_VCA_SEARCH_SNAPDB_COND lpInBuf, fSearchDBCallBack cbSearchDBCallBack, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_GetSearchSnapDBProgress(LONG lSearchHandle, DWORD* pState);
NET_DVR_API BOOL __stdcall NET_DVR_AddFaceDBRecord(LONG lUserID, DWORD dwDataBaseID, LPNET_VCA_DATARECORD_INFO lpInBuf);
NET_DVR_API BOOL __stdcall NET_DVR_FastAddFaceDBRecord(LONG lUserID, DWORD dwDataBaseID, LPNET_VCA_FAST_DATARECORD_INFO lpInBuf);
NET_DVR_API LONG __stdcall NET_DVR_InquireFaceDBRecord(LONG lUserID, LPNET_VCA_DATARECORD_COND lpInBuf, fSearchDBCallBack cbInquireDBCallBack, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_GetInquireFaceDBProgress(LONG lInquireHandle, DWORD* pState);
NET_DVR_API BOOL __stdcall NET_DVR_UpdateFaceDBRecord(LONG lUserID, DWORD dwDataBaseID, LPNET_VCA_DATARECORD_INFO lpInBuf);
NET_DVR_API BOOL __stdcall NET_DVR_DeleteFaceDBRecord(LONG lUserID, DWORD dwDataBaseID, LPNET_VCA_DELETE_RECORD_COND lpInBuf);
typedef void(CALLBACK *fSearchDBCallBack)(LONG lSearchHandle, DWORD dwType, DWORD dwResultNum, BYTE* pBuffer, DWORD dwBufSize, void *pUser);
NET_DVR_API LONG __stdcall NET_DVR_SearchFaceDB(LONG lUserID, LPNET_VCA_SEARCH_FACEDB_COND lpInBuf, fSearchDBCallBack cbSearchDBCallBack, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_GetSearchFaceDBProgress(LONG lSearchHandle, DWORD* pState);
NET_DVR_API BOOL __stdcall NET_DVR_StopSearchDB(LONG lHandle);
NET_DVR_API BOOL __stdcall NET_DVR_FindMatchPicture(LONG lUserID, LPNET_VCA_FIND_MATCHPIC_COND lpFindCond, LPNET_VCA_FIND_MATCHPIC_RESULT lpFindResult);
NET_DVR_API BOOL __stdcall NET_DVR_RemoteControl(LONG lUserID, DWORD dwCommand, LPVOID lpInBuffer, DWORD dwInBufferSize);

NET_DVR_API BOOL __stdcall NET_DVR_PicViewRequest(LONG lUserID, NET_DVR_PIC_VIEW_PARAM *lpPicViewParam);
typedef LONG(CALLBACK *PicViewCallBack)(LPNET_DVR_PICVIEW_CALLBACKPARAM pStruPicViewParam, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetPicViewResponseCallBack(PicViewCallBack fPicViewResponseCallBack, void *pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetPicViewDataCallBack(LONG lPicViewHandle, SCREENPICDATACB fPicDataCallback, void *pUserData);
NET_DVR_API BOOL __stdcall NET_DVR_GetDevList(LONG lUserID, LPNET_DVR_DEVLIST lpDevListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_GetScreenList(LONG lUserID, LPNET_DVR_SCREENLIST lpScreenListInfo);
NET_DVR_API BOOL __stdcall NET_DVR_SetScreenRelation(LONG lUserID, NET_DVR_DISP_SCREEN const* lpScreenInfo);
NET_DVR_API BOOL __stdcall NET_DVR_TextShowCtrl(LONG lUserID, DWORD dwDeviceIndex, LPNET_DVR_TEXTSHOW lpText);
NET_DVR_API LONG __stdcall NET_DVR_StartUpgrade(LONG lUserID, LPNET_DVR_OPERATE_DEVICE lpStruOperate, DVCS_UPGRADESTATE_CB UpgradeStateCallback, void *pUserData);
NET_DVR_API BOOL __stdcall NET_DVR_StopUpgrade(LONG lUserID, LPNET_DVR_OPERATE_DEVICE lpStruOperate, LONG lUpgradeHandle);
NET_DVR_API BOOL __stdcall NET_DVR_AddNetSignal(LONG lUserID, LPNET_DVR_NETSIGNAL_INFO lpStruSignal, void* lpOutBuf, DWORD dwBufLen);
NET_DVR_API LONG __stdcall NET_DVR_StartPicPreview(LONG lUserID, NET_DVR_START_PIC_VIEW_INFO const* lpStruStartPicView, SCREENPICDATACB PicDataCallback, void *pUserData);
NET_DVR_API BOOL __stdcall NET_DVR_GetDeviceStatus(LONG lUserID, DWORD dwCommand, DWORD dwCount, LPVOID lpInBuffer, DWORD dwInBufferSize, LPVOID lpStatusList, LPVOID lpOutBuffer, DWORD dwOutBufferSize);
NET_DVR_API BOOL __stdcall NET_DVR_GetPlanList(LONG lUserID, DWORD dwDevNum, LPNET_DVR_PLAN_LIST lpPlanList);
NET_DVR_API BOOL __stdcall NET_DVR_GetInputSignalList(LONG lUserID, DWORD dwDevNum, LPNET_DVR_INPUT_SIGNAL_LIST lpInputSignalList);
NET_DVR_API BOOL __stdcall NET_DVR_GetInputSignalList_V40(LONG lUserID, DWORD dwDevNum, LPNET_DVR_INPUT_SIGNAL_LIST lpInputSignalList);

NET_DVR_API LONG __stdcall NET_DVR_UploadFile(LONG lUserID, DWORD dwUploadType, LPVOID lpInBuffer, DWORD dwInBufferSize, char* sFileName);
NET_DVR_API LONG __stdcall NET_DVR_UploadFile_V40(LONG lUserID, DWORD dwUploadType, LPVOID lpInBuffer, DWORD dwInBufferSize, char const * sFileName, LPVOID lpOutBuffer, DWORD dwOutBufferSize);
NET_DVR_API LONG __stdcall NET_DVR_GetUploadState(LONG lUploadHandle, LPDWORD pProgress);
NET_DVR_API BOOL __stdcall NET_DVR_GetUploadResult(LONG lUploadHandle, LPVOID lpOutBuffer, DWORD dwOutBufferSize);
NET_DVR_API BOOL __stdcall NET_DVR_UploadClose(LONG lUploadHandle);
NET_DVR_API LONG __stdcall NET_DVR_StartUploadFile(LONG lUserID, LPNET_DVR_UPLOAD_PARAM  lpStruUploadParam);
NET_DVR_API LONG __stdcall NET_DVR_GetUploadFileProgress(LONG lFileHandle);
NET_DVR_API LONG __stdcall NET_DVR_GetUploadFileState(LONG lFileHandle);
NET_DVR_API BOOL __stdcall NET_DVR_StopUploadFile(LONG lFileHandle);
NET_DVR_API LONG __stdcall NET_DVR_StartDownloadFile(LONG lUserID, LPNET_DVR_DOWNLOAD_PARAM lpStruDownloadParam);
NET_DVR_API LONG __stdcall NET_DVR_GetDownloadFileProgress(LONG lFileHandle);
NET_DVR_API LONG __stdcall NET_DVR_GetDownloadFileState(LONG lFileHandle);
NET_DVR_API BOOL __stdcall NET_DVR_StopDownloadFile(LONG lFileHandle);
NET_DVR_API BOOL __stdcall NET_DVR_DownloadControl(LONG lDownloadHandle, NET_SDK_DOWNLOAD_CONTROL_TYPE_ENUM enumDownloadType, void* lpInBuffer, DWORD dwInBufferLen, void* lpOutBuffer, DWORD dwOutBufferLen);
NET_DVR_API LONG __stdcall NET_DVR_UploadSend(LONG lUploadHandle, const NET_DVR_SEND_PARAM_IN *pstruSendParamIN, void* lpOutBuffer);


NET_DVR_API BOOL __stdcall NET_DVR_GetMobileDevStatus(LONG lUserID, DWORD dwStatusType, LPNET_DVR_MB_MOBILEDEV_STATUS lpstruMobileDevStatus);
NET_DVR_API BOOL __stdcall NET_DVR_SetVoiceDataCallBack(LONG lVoiceComHandle, BOOL bNeedCBNoEncData, void(CALLBACK *fVoiceDataCallBack)(LONG lVoiceComHandle, char *pRecvDataBuffer, DWORD dwBufSize, BYTE byAudioFlag, void* pUser), void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetTransparentParam(LONG lUserID, char *sInBuffer, DWORD dwInSize);
NET_DVR_API BOOL __stdcall NET_DVR_GetTransparentParam(LONG lUserID, char *sInBuffer, DWORD dwInSize, char *sOutBuffer, DWORD dwOutSize);

NET_DVR_API BOOL __stdcall NET_DVR_SetSDKLocalConfig(LPNET_DVR_SDKLOCAL_CFG lpSdkLocalCfg);
NET_DVR_API BOOL __stdcall NET_DVR_GetSDKLocalConfig(LPNET_DVR_SDKLOCAL_CFG lpSdkLocalCfg);

NET_DVR_API BOOL __stdcall NET_DVR_SetSDKLocalCfg(NET_SDK_LOCAL_CFG_TYPE enumType, const void *lpInBuff);
NET_DVR_API BOOL __stdcall NET_DVR_GetSDKLocalCfg(NET_SDK_LOCAL_CFG_TYPE enumType, void* lpOutBuff);

NET_DVR_API LONG __stdcall NET_DVR_OpticalUpgrade(LONG lUserID, char const *sFileName, LPNET_DVR_OPTICAL_INFO lpOpticalInfo);
typedef void(CALLBACK *fGPSDataCallback)(LONG nHandle, DWORD dwState, void* lpBuffer, DWORD dwBufLen, void* pUserData);
NET_DVR_API LONG __stdcall NET_DVR_GetVehicleGpsInfo(LONG nUserID, LPNET_DVR_GET_GPS_DATA_PARAM lpGPSDataParam, fGPSDataCallback cbGPSDataCallback, void* pUser);

NET_DVR_API BOOL __stdcall NET_DVR_ClosePreview(LONG lUserID, DWORD nSessionID);
NET_DVR_API BOOL __stdcall NET_DVR_ClosePlayBack(LONG lUserID, DWORD nSessionID);
NET_DVR_API LONG __stdcall NET_DVR_RealPlay_V40(LONG lUserID, LPNET_DVR_PREVIEWINFO lpPreviewInfo, REALDATACALLBACK fRealDataCallBack_V30 = NULL, void* pUser = NULL);
NET_DVR_API LONG __stdcall NET_DVR_RealPlaySpecial(LONG lUserID, LPNET_DVR_PREVIEWINFO_SPECIAL lpPreviewInfo, REALDATACALLBACK fRealDataCallBack_V30 = NULL, void* pUser = NULL);

NET_DVR_API LONG __stdcall NET_DVR_StartDownload(LONG lUserID, DWORD dwDownloadType, LPVOID lpInBuffer, DWORD dwInBufferSize, const char *sFileName);
NET_DVR_API LONG __stdcall NET_DVR_GetDownloadState(LONG lDownloadHandle, LPDWORD pProgress);
NET_DVR_API int  __stdcall NET_DVR_GetDownloadStateInfo(LONG lDownloadHandle, void* pStatusInfo);
NET_DVR_API BOOL __stdcall NET_DVR_StopDownload(LONG lHandle);

NET_DVR_API BOOL __stdcall NET_DVR_MatrixStartDynamic_V41(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_PU_STREAM_CFG_V41 lpDynamicInfo);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetLoopDecChanInfo_V41(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_LOOP_DECINFO_V41 lpOuter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixSetLoopDecChanInfo_V41(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_LOOP_DECINFO_V41 lpInter);
NET_DVR_API BOOL __stdcall NET_DVR_MatrixGetDecChanInfo_V41(LONG lUserID, DWORD dwDecChanNum, LPNET_DVR_MATRIX_DEC_CHAN_INFO_V41 lpOuter);

NET_DVR_API LONG __stdcall NET_DVR_StartT1Test(LONG lUserID, LPNET_DVR_ALARMHOST_DOWNLOAD_PARAM lpStruDownloadParam);
NET_DVR_API BOOL __stdcall NET_DVR_StopTT1Test(BOOL lHandle);
NET_DVR_API BOOL __stdcall NET_DVR_GetT1TestStatus(LONG lHandle, LONG *pStatus);
NET_DVR_API BOOL __stdcall NET_DVR_SendT1TestData(LONG lHandle, DWORD dwDataType, char *pSendBuf, DWORD dwSendBufLen);

NET_DVR_API BOOL __stdcall NET_DVR_UploadLogo_NEW(LONG lUserID, DWORD dwLogoNo, LPNET_DVR_MATRIX_LOGO_INFO lpLogoInfo, char *sLogoBuffer);
NET_DVR_API BOOL __stdcall NET_DVR_DownloadLogo(LONG lUserID, DWORD dwLogoNo, LPNET_DVR_MATRIX_LOGO_INFO lpLogoInfo, char *sLogoBuffer, DWORD dwLogoBufferSize);
NET_DVR_API LONG __stdcall NET_DVR_StartPassiveTransCode(LONG lUserID, NET_DVR_STREAM_INFO const *pStreamInfo, NET_DVR_COMPRESSIONCFG_V30 const *pDstTransInfo, NET_DVR_PASSIVETRANSINFO const *pPassiveTransInfo, void(CALLBACK *fTransCodeDataCallBack) (LONG lPassiveHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, void* pUser) = NULL, void* pUser = NULL);
NET_DVR_API BOOL __stdcall NET_DVR_TransCodeInputData(LONG lPassiveHandle, BYTE *pBuffer, DWORD dwBufSize);
NET_DVR_API BOOL __stdcall NET_DVR_StopPassiveTransCode(LONG lPassiveHandle);
NET_DVR_API LONG __stdcall NET_DVR_GetPassiveTransChanNum(LONG lPassiveHandle);
NET_DVR_API BOOL __stdcall NET_DVR_SetDeviceConfigEx(LONG lUserID, DWORD dwCommand, DWORD dwCount, NET_DVR_IN_PARAM *lpInParam, NET_DVR_OUT_PARAM *lpOutParam);

NET_DVR_API BOOL __stdcall NET_DVR_GetSTDConfig(LONG lUserID, DWORD dwCommand, LPNET_DVR_STD_CONFIG lpConfigParam);
NET_DVR_API BOOL __stdcall NET_DVR_SetSTDConfig(LONG lUserID, DWORD dwCommand, LPNET_DVR_STD_CONFIG lpConfigParam);
NET_DVR_API BOOL __stdcall NET_DVR_GetSTDAbility(LONG lUserID, DWORD dwAbilityType, LPNET_DVR_STD_ABILITY  lpAbilityParam);
NET_DVR_API BOOL __stdcall NET_DVR_STDControl(LONG lUserID, DWORD dwCommand, LPNET_DVR_STD_CONTROL lpControlParam);
NET_DVR_API BOOL __stdcall NET_DVR_STDXMLConfig(LONG lUserID, NET_DVR_XML_CONFIG_INPUT* lpInputParam, NET_DVR_XML_CONFIG_OUTPUT* lpOutputParam);
NET_DVR_API LONG __stdcall NET_DVR_Upgrade_V40(DWORD lUserID, DWORD dwUpgradeType, char const *sFileName, void *pInbuffer, DWORD dwBufferLen);
NET_DVR_API LONG __stdcall NET_DVR_Upgrade_V50(DWORD lUserID, LPNET_DVR_UPGRADE_PARAM lpUpgradeParam);

NET_DVR_API BOOL __stdcall NET_DVR_DetectImage_V50(LONG lUserID, LPNET_VCA_FD_PROCIMG_CFG lpFDProcImg, LPNET_VCA_FD_PROCIMG_RESULT_V50 lpOutBuf);

NET_DVR_API LONG __stdcall NET_DVR_SmartSearchPicture(LONG lUserID, NET_DVR_SMART_SEARCH_PIC_PARA * pFindParam);
NET_DVR_API LONG __stdcall NET_DVR_FindNextSmartPicture(LONG lFindHandle, LPNET_DVR_SMART_SEARCH_PIC_RET lpFindData);
NET_DVR_API BOOL __stdcall NET_DVR_CloseSmartSearchPicture(LONG lFindHandle);
NET_DVR_API BOOL __stdcall NET_DVR_SetESCallBack(LONG iRealHandle, void(__stdcall *fnESCallback)(LONG lPreviewHandle, DWORD dwDataType, BYTE *pBuffer, DWORD dwBufSize, void* pUser), void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_SetESRealPlayCallBack(LONG iRealHandle, void(__stdcall *fPlayESCallBack)(LONG lPreviewHandle, NET_DVR_PACKET_INFO_EX *pstruPackInfo, void* pUser), void* pUser);
NET_DVR_API BOOL __stdcall NET_DVR_ActivateDevice(char* sDVRIP, WORD wDVRPort, LPNET_DVR_ACTIVATECFG    lpActivateCfg);
NET_DVR_API BOOL __stdcall NET_DVR_GetAddrInfoByServer(DWORD     dwQueryType, void* pInBuf, DWORD dwInBufLen, void* pOutBuf, DWORD dwOutBufLen);
NET_DVR_API BOOL __stdcall NET_DVR_StartGetDevState(LPNET_DVR_CHECK_DEV_STATE pParams);
NET_DVR_API BOOL __stdcall NET_DVR_StopGetDevState();
NET_DVR_API BOOL __stdcall NET_DVR_RigisterPlayBackDrawFun(LONG lPlayHandle, void(__stdcall *fDrawFun)(LONG lPlayHandle, HDC hDc, DWORD dwUser), DWORD dwUser);

NET_DVR_API BOOL __stdcall NET_DVR_SetSDKInitCfg(NET_SDK_INIT_CFG_TYPE enumType, void* const lpInBuff);
NET_DVR_API BOOL __stdcall NET_DVR_ReleaseSDKMemPool(LPNET_DVR_SDKMEMPOOL_CFG lpSdkMemPoolCfg);

NET_DVR_API BOOL __stdcall NET_DVR_CapturePictureBlock(LONG iRealHandle, char const *sPicFileName, DWORD dwTimeOut);


NET_DVR_API BOOL __stdcall NET_DVR_CapturePictureBlock_New(LONG iRealHandle, char *pPicBuf, DWORD dwPicSize, DWORD *lpSizeReturned);

NET_DVR_API BOOL __stdcall NET_DVR_ChangeWndResolution(LONG iRealHandle);

NET_DVR_API LONG __stdcall  NET_DVR_SDKChannelToISAPI(LONG lUserID, LONG lInChannel, BOOL bSDKToISAPI);

NET_DVR_API BOOL __stdcall NET_DVR_STDXMLConfig_Conv(LONG lUserID, NET_DVR_XML_CONFIG_INPUT* lpInputParam, NET_DVR_XML_CONFIG_OUTPUT* lpOutputParam);

NET_DVR_API LONG __stdcall NET_DVR_SetupAlarmChan_V50(LONG iUserID, LPNET_DVR_SETUPALARM_PARAM_V50 lpSetupParam, char *pSub, DWORD dwSubSize);

NET_DVR_API BOOL __stdcall NET_DVR_GetAlarmSubscribe(LONG lAlarmHandle, char *pData, DWORD dwDataLen);

NET_DVR_API BOOL __stdcall NET_DVR_SetAlarmSubscribe(LONG lAlarmHandle, char *pData, DWORD dwDataLen);

NET_DVR_API BOOL __stdcall NET_DVR_GetNPQStat(LONG lHandle, NET_SDK_NPQ_STATE* pStruStat);

NET_DVR_API BOOL __stdcall NET_DVR_SetNPQNotifyParam(LONG lHandle, NET_SDK_NPQ_NOTIFY_PARAM* pNotifyParam);

NET_DVR_API BOOL __stdcall NET_DVR_PlaybackGetNPQStat(LONG lHandle, NET_SDK_NPQ_STATE* pStruStat);
NET_DVR_API BOOL __stdcall NET_DVR_RenderPrivateData(LONG lRealHandle, int iIntelType, BOOL bTrue);
NET_DVR_API BOOL __stdcall NET_DVR_RenderPrivateDataEx(LONG lRealHandle, int iIntelType, int iSubType, BOOL bTrue);

NET_DVR_API BOOL __stdcall NET_DVR_PlaybackSetNPQNotifyParam(LONG lHandle, NET_SDK_NPQ_NOTIFY_PARAM* pNotifyParam);

#endif //

