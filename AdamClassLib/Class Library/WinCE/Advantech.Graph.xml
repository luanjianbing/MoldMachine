<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Advantech.Graph</name>
    </assembly>
    <members>
        <member name="T:Advantech.Graph.LightStyle">
            <summary>
            The style of the control.
            </summary>
        </member>
        <member name="F:Advantech.Graph.LightStyle.Round">
            <summary>
            Round style.
            </summary>
        </member>
        <member name="F:Advantech.Graph.LightStyle.Rectangle">
            <summary>
            Rectangle style.
            </summary>
        </member>
        <member name="F:Advantech.Graph.LightStyle.TriangleUp">
            <summary>
            Triangle style points up.
            </summary>
        </member>
        <member name="F:Advantech.Graph.LightStyle.TriangleDown">
            <summary>
            Triangle style points down.
            </summary>
        </member>
        <member name="F:Advantech.Graph.LightStyle.TriangleLeft">
            <summary>
            Triangle style points left.
            </summary>
        </member>
        <member name="F:Advantech.Graph.LightStyle.TriangleRight">
            <summary>
            Triangle style points right.
            </summary>
        </member>
        <member name="T:Advantech.Graph.AdamLight">
            <summary>
            The AdamLight graphic control
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamLight.#ctor">
            <summary>
            The AdamLight constructor.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamLight.OnResize(System.EventArgs)">
            <summary>
            The OnResize event.
            </summary>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Advantech.Graph.AdamLight.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint event
            </summary>
            <param name="pe">PaintEventArgs</param>
        </member>
        <member name="M:Advantech.Graph.AdamLight.StartBlinking(System.Int32)">
            <summary>
            Start light autoblinking
            </summary>
            <param name="i_iInterval">The blinking interval. The value must be greater than or equal 50. Otherwise, the interval 50 ms is used.</param>
        </member>
        <member name="M:Advantech.Graph.AdamLight.StopBlinking(System.Boolean)">
            <summary>
            Stop light autoblinking.
            </summary>
            <param name="i_bValue">The light status after the blinking stoped.</param>
        </member>
        <member name="F:Advantech.Graph.AdamLight.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamLight.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Advantech.Graph.AdamLight.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamLight.Registration">
            <summary>
            Get/set the registration key.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamLight.LightOnColor">
            <summary>
            Get/set the color of the light when it is On.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamLight.LightOffColor">
            <summary>
            Get/set the color of the light when it is Off.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamLight.Value">
            <summary>
            Get/set the light to be On or Off.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamLight.Style">
            <summary>
            Get/set the light style.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamLight.BackColor">
            <summary>
            Get/set the BackColor of the control.
            </summary>
        </member>
        <member name="T:Advantech.Graph.AdamKnob">
            <summary>
            The AdamKnob graphic control
            </summary>
        </member>
        <member name="F:Advantech.Graph.AdamKnob.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.OnValueChanged(System.Object)">
            <summary>
            Invoke the ValueChanged event; called  when value is changed
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.#ctor">
            <summary>
            The AdamKnob constructor.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.OnResize(System.EventArgs)">
            <summary>
            The OnResize event.
            </summary>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint event
            </summary>
            <param name="pe">PaintEventArgs</param>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.IsPointIn(System.Drawing.Point)">
            <summary>
            Check whether the point is in the knob
            </summary>
            <param name="p">Point to be Checked</param>
            <returns>true is Point is in the knob, else false</returns>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.GetValueFromPosition(System.Drawing.Point)">
            <summary>
            converts geomatrical position in to value..
            </summary>
            <param name="p">Point that is to be converted</param>
            <returns>Value derived from position</returns>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Advantech.Graph.AdamKnob.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Fires when the user presses a key.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Advantech.Graph.AdamKnob.ValueChanged">
            <summary>
            An event that clients can use to be notified whenever the Value is Changed. 
            </summary>                     
        </member>
        <member name="P:Advantech.Graph.AdamKnob.Registration">
            <summary>
            Get/set the registration key.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.BackLightColor">
            <summary>
            Get/set the back light color of the meter.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.BackDarkColor">
            <summary>
            Get/set the back dark color of the meter.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.TickColor">
            <summary>
            Get/set the color of the tick lines.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.NeedleColor">
            <summary>
            Get/set the color of needle.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.Maximum">
            <summary>
            Get/set the maximum value of the grid.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.Minimum">
            <summary>
            Get/set the minimum value of the grid.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.Value">
            <summary>
            Get/set the value of the needle.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.MajorTickCount">
            <summary>
            Get/set the total of the major tick.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.MinorTickCount">
            <summary>
            Get/set the total of the minor tick.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.Unit">
            <summary>
            Get/set the unit string.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplayShown">
            <summary>
            Get/set whether the LED display object should be shown
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplayAutoCenter">
            <summary>
            Get/set whether the LED display is autocentered.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplayBackLightColor">
            <summary>
            Get/set the LED display back light color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplayBackDarkColor">
            <summary>
            Get/set the LED display back dark color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplayDigitalCount">
            <summary>
            Get/set the LED display back dark color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplayLedOffColor">
            <summary>
            Get/set the LED display off color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplayLedOnColor">
            <summary>
            Get/set the LED display on color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplayLineWidth">
            <summary>
            Get/set the LED display digit line width.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplaySize">
            <summary>
            Get/set the LED display digit size.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamKnob.DisplayDecimalPoint">
            <summary>
            Get/set the LED display deciaml point.
            </summary>
        </member>
        <member name="T:Advantech.Graph.AdamComComponent">
            <summary>
            AdamComComponent class. The class is based on AdamCom class. The class is very useful for
            using with Advantech Adam serial devices.
            </summary>
        </member>
        <member name="F:Advantech.Graph.AdamComComponent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.#ctor">
            <summary>
            AdamComComponent class. The class is based on AdamCom class. The class is very useful for
            using with Advantech Adam serial devices.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.OpenComPort">
            <summary>
            Open the COM port and get the COM port setting from system
            </summary>
            <returns>True if port opened successfully.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.CloseComPort">
            <summary>
            Close the COM port.
            </summary>
            <returns>True if executed successfully.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.Configuration(System.Int32)">
            <summary>
            ADAM-4000 ADAM-5000 Configuration object
            </summary>
            <param name="i_iAddr">The module address which is ranged from 0 to 255</param>
            <returns>If COM port was opended, then AdamConfig object returned. Otherwise, return null.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.DigitalInput(System.Int32)">
            <summary>
            ADAM-4000 ADAM-5000 DigitalInput object
            </summary>
            <param name="i_iAddr">The module address which is ranged from 0 to 255</param>
            <returns>If COM port was opended, then DigitalInput object returned. Otherwise, return null.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.DigitalOutput(System.Int32)">
            <summary>
            ADAM-4000 ADAM-5000 DigitalOutput object
            </summary>
            <param name="i_iAddr">The module address which is ranged from 0 to 255</param>
            <returns>If COM port was opended, then DigitalOutput object returned. Otherwise, return null.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.AnalogInput(System.Int32)">
            <summary>
            ADAM-4000 ADAM-5000 AnalogInput object
            </summary>
            <param name="i_iAddr">The module address which is ranged from 0 to 255</param>
            <returns>If COM port was opended, then AnalogInput object returned. Otherwise, return null.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.AnalogOutput(System.Int32)">
            <summary>
            ADAM-4000 ADAM-5000 AnalogOutput object
            </summary>
            <param name="i_iAddr">The module address which is ranged from 0 to 255</param>
            <returns>If COM port was opended, then AnalogOutput object returned. Otherwise, return null.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.Modbus(System.Int32)">
            <summary>
            ADAM-4000 Modbus object
            </summary>
            <param name="i_iAddr">The module address which is ranged from 0 to 255</param>
            <returns>If COM port was opended, then Modbus object returned. Otherwise, return null.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.Alarm(System.Int32)">
            <summary>
            ADAM-4000 ADAM-5000 Alarm object
            </summary>
            <param name="i_iAddr">The module address which is ranged from 0 to 255</param>
            <returns>If COM port was opended, then Alarm object returned. Otherwise, return null.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.Counter(System.Int32)">
            <summary>
            ADAM-4000 ADAM-5000 Counter object
            </summary>
            <param name="i_iAddr">The module address which is ranged from 0 to 255</param>
            <returns>If COM port was opended, then Counter object returned. Otherwise, return null.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.Pid(System.Int32)">
            <summary>
            ADAM-4000 PID object
            </summary>
            <param name="i_iAddr">The module address which is ranged from 0 to 255</param>
            <returns>If COM port was opended, then PID object returned. Otherwise, return null.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamComComponent.AdamTransaction(System.String,System.String@)">
            <summary>
            Send and receive ASCII command for ADAM modules 
            </summary>
            <param name="i_szSend">The command string to send</param>
            <param name="o_szRecv">The responsed string received</param>
            <returns>True if the transaction success.</returns>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.Port">
            <summary>
            Get/set the COM port number of the component.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.Timeout">
            <summary>
            Get/set the timeout value of the COM port.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.Baudrate">
            <summary>
            Get/set the baudrate of the COM port.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.Databits">
            <summary>
            Get/set the data bits of the COM port.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.Parity">
            <summary>
            Get/set the parity of the COM port.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.Stopbits">
            <summary>
            Get/set the stop bits of the COM port.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.Checksum">
            <summary>
            Get/set the checksum enabled status for Advantech ASCII protocol.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.LastError">
            <summary>
            The last error code when function return false.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.AdamComObject">
            <summary>
            The AdamCom object. User must check this value is not null before using it.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamComComponent.IsOpen">
            <summary>
            The COM port open status.
            </summary>
        </member>
        <member name="T:Advantech.Graph.ValueChangedEventHandler">
            <summary>
             A delegate type for hooking up ValueChanged notifications. 
            </summary>
        </member>
        <member name="T:Advantech.Graph.AdamNumLed">
            <summary>
            The AdamNumLed graphic control
            </summary>
        </member>
        <member name="F:Advantech.Graph.AdamNumLed.m_digitMatric">
            <summary>
                 0
               * * *
             1 * 3 * 2
               * * *
             4 *   * 5
               * * *
                 6
            </summary>
                                          0  1  2  3  4  5  6
        </member>
        <member name="M:Advantech.Graph.AdamNumLed.#ctor">
            <summary>
            The AdamNumLed graphic control constructor
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamNumLed.DrawDot(XrossOne.Drawing.GraphicsX,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="gp"></param>
            <param name="index">0: draw blank, 1: draw colon, 2: draw dot</param>
            <param name="x1"></param>
            <param name="x2"></param>
            <param name="y1"></param>
            <param name="y2"></param>
            <param name="y3"></param>
        </member>
        <member name="M:Advantech.Graph.AdamNumLed.OnResize(System.EventArgs)">
            <summary>
            The OnResize event.
            </summary>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Advantech.Graph.AdamNumLed.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint event
            </summary>
            <param name="pe">PaintEventArgs</param>
        </member>
        <member name="F:Advantech.Graph.AdamNumLed.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamNumLed.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Advantech.Graph.AdamNumLed.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamNumLed.Registration">
            <summary>
            Get/set the registration key.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamNumLed.LedOnColor">
            <summary>
            Get/set the color of the LED when it is On.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamNumLed.LedOffColor">
            <summary>
            Get/set the color of the LED when it is Off.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamNumLed.DigitCount">
            <summary>
            Get/set the number of the LED digit. The number is between 1 and 10.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamNumLed.Value">
            <summary>
            Get/set the digit numbers to be shown. Only number, dot and colon will be displayed.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamNumLed.LineWidth">
            <summary>
            Get/set the size of the LED line. The size is between 1 and 10.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamNumLed.BackLightColor">
            <summary>
            Get/set the light back color of the control.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamNumLed.BackDarkColor">
            <summary>
            Get/set the dark back color of the control.
            </summary>
        </member>
        <member name="T:Advantech.Graph.AdamSocketComponent">
            <summary>
            AdamSocketComponent class. The class is based on AdamSocket class. The class is very useful for
            using with Advantech Adam serial devices.
            </summary>
        </member>
        <member name="F:Advantech.Graph.AdamSocketComponent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.#ctor">
            <summary>
            AdamSocketComponent class. The class is based on AdamSocket class. The class is very useful for
            using with Advantech Adam serial devices.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.Connect">
            <summary>
            Connect the remote module.
            </summary>
            <returns>True, if successed, otherwise false.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.Disconnect">
            <summary>
            Disconnect the remote module.
            </summary>
            <returns>True, if successed, otherwise false.</returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.Configuration">
            <summary>
            ADAM-5000TCP ADAM-6000 Configuration object
            </summary>
            <returns>The Configuration object</returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.DigitalInput">
            <summary>
            ADAM-5000TCP ADAM-6000 DigitalInput object
            </summary>
            <returns>The DigitalInput object</returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.DigitalOutput">
            <summary>
            ADAM-5000TCP ADAM-6000 DigitalOutput object
            </summary>
            <returns>The DigitalOutput object</returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.AnalogInput">
            <summary>
            ADAM-5000TCP ADAM-6000 AnalogInput object
            </summary>
            <returns>The AnalogInput object</returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.AnalogOutput">
            <summary>
            ADAM-5000TCP ADAM-6000 AnalogOutput object
            </summary>
            <returns>The AnalogOutput object</returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.Modbus">
            <summary>
            ADAM-5000TCP ADAM-6000 Modbus object
            </summary>
            <returns>The Modbus object</returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.Alarm">
            <summary>
            ADAM-5000TCP ADAM-6000 Alarm object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.Counter">
            <summary>
            ADAM-5000TCP ADAM-6000 Counter object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.Pid">
            <summary>
            ADAM-6000 PID object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Advantech.Graph.AdamSocketComponent.AdamTransaction(System.String,System.String@)">
            <summary>
            Send and receive ASCII command for ADAM modules 
            </summary>
            <param name="i_szSend">The command string to send</param>
            <param name="o_szRecv">The responsed string received</param>
            <returns>True if the transaction success.</returns>
        </member>
        <member name="P:Advantech.Graph.AdamSocketComponent.IPAddress">
            <summary>
            Get/set the IP address which the component connects to.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSocketComponent.AdamSeriesType">
            <summary>
            Get/set the Adam series type of the connecting module. Only Adam5000Tcp and Adam6000 are acceptable.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSocketComponent.AdamProtocolType">
            <summary>
            Get/set the protocol type which the component uses. Only Tcp and Udp are acceptable.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSocketComponent.ConnectTimeout">
            <summary>
            Get/set the connecting timeout.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSocketComponent.SendTimeout">
            <summary>
            Get/set the sending timeout.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSocketComponent.RecvTimeout">
            <summary>
            Get/set the receiving timeout.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSocketComponent.LastError">
            <summary>
            The last error code when function return false.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSocketComponent.AdamSocketObject">
            <summary>
            The AdamSocket object.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSocketComponent.Connected">
            <summary>
            The connection status.
            </summary>
        </member>
        <member name="T:Advantech.Graph.Shape">
            <summary>
            The shape of the control.
            </summary>
        </member>
        <member name="F:Advantech.Graph.Shape.Rectangle">
            <summary>
            Rectangle shape.
            </summary>
        </member>
        <member name="F:Advantech.Graph.Shape.Triangle">
            <summary>
            Triangle shape.
            </summary>
        </member>
        <member name="T:Advantech.Graph.AdamIndicator">
            <summary>
            The AdamIndicator graphic control
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamIndicator.#ctor">
            <summary>
            The AdamIndicator constructor.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamIndicator.OnResize(System.EventArgs)">
            <summary>
            OnResize event handler.
            </summary>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Advantech.Graph.AdamIndicator.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint event
            </summary>
            <param name="pe">PaintEventArgs</param>
        </member>
        <member name="F:Advantech.Graph.AdamIndicator.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamIndicator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Advantech.Graph.AdamIndicator.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.Registration">
            <summary>
            Get/set the registration key.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.IndicatorOnColor">
            <summary>
            Get/set the color of the indicator bar when it is On.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.IndicatorOffColor">
            <summary>
            Get/set the color of the indicator when it is Off.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.Maximum">
            <summary>
            Get/set the maximum value of the indicator.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.Minimum">
            <summary>
            Get/set the minimum value of the indicator.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.Value">
            <summary>
            Get/set the value of the indicator.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.LineWidth">
            <summary>
            Get/set the width of the indicator lines.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.Orientation">
            <summary>
            Get/set the orientation of the control.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.Shape">
            <summary>
            Get/set the shape of the indicator.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamIndicator.BackColor">
            <summary>
            Get/set the BackColor of the control.
            </summary>
        </member>
        <member name="T:Advantech.Graph.AdamMeter">
            <summary>
            The AdamMeter graphic control
            </summary>
            <summary>
            The AdamMeter graphic control
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamMeter.#ctor">
            <summary>
            The AdamMeter constructor.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamMeter.OnResize(System.EventArgs)">
            <summary>
            The OnResize event.
            </summary>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Advantech.Graph.AdamMeter.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint event
            </summary>
            <param name="pe">PaintEventArgs</param>
        </member>
        <member name="F:Advantech.Graph.AdamMeter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamMeter.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Advantech.Graph.AdamMeter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.Registration">
            <summary>
            Get/set the registration key.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.BackLightColor">
            <summary>
            Get/set the back light color of the meter.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.BackDarkColor">
            <summary>
            Get/set the back dark color of the meter.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.TickColor">
            <summary>
            Get/set the color of the tick lines.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.CenterColor">
            <summary>
            Get/set the color of center.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.CenterWidth">
            <summary>
            Get/set the width of center.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.NeedleColor">
            <summary>
            Get/set the color of needle.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.Maximum">
            <summary>
            Get/set the maximum value of the grid.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.Minimum">
            <summary>
            Get/set the minimum value of the grid.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.Value">
            <summary>
            Get/set the value of the needle.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.MajorTickCount">
            <summary>
            Get/set the total of the major tick.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.MinorTickCount">
            <summary>
            Get/set the total of the minor tick.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.Unit">
            <summary>
            Get/set the unit string.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplayShown">
            <summary>
            Get/set whether the LED display object should be shown
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplayAutoCenter">
            <summary>
            Get/set whether the LED display is autocentered.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplayBackLightColor">
            <summary>
            Get/set the LED display back light color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplayBackDarkColor">
            <summary>
            Get/set the LED display back dark color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplayDigitalCount">
            <summary>
            Get/set the LED display back dark color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplayLedOffColor">
            <summary>
            Get/set the LED display off color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplayLedOnColor">
            <summary>
            Get/set the LED display on color.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplayLineWidth">
            <summary>
            Get/set the LED display digit line width.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplaySize">
            <summary>
            Get/set the LED display digit size.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.DisplayDecimalPoint">
            <summary>
            Get/set the LED display deciaml point.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamMeter.Font">
            <summary>
            The Font of the label
            </summary>
        </member>
        <member name="T:Advantech.Graph.AdamTrend">
            <summary>
            The AdamTrend graphic control
            </summary>
        </member>
        <member name="F:Advantech.Graph.AdamTrend.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Advantech.Graph.AdamTrend.m_OutX">
            <summary>
            The last column outside the panel
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.#ctor">
            <summary>
            The AdamTrend graphic control constructor
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.DrawGridLines(System.Drawing.Graphics)">
            <summary>
            Draw the grid lines.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.DrawHorLab(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Draw horizontal label
            </summary>
            <param name="panelGraph"></param>
            <param name="bDrawLabLine"></param>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.DrawDataLines(System.Drawing.Graphics,System.Single[])">
            <summary>
            Prepare the image before drawing.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.OnResize(System.EventArgs)">
            <summary>
            The OnResize event.
            </summary>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint event
            </summary>
            <param name="pe">PaintEventArgs</param>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.UpdateGraph(System.Single[])">
            <summary>
            Force to update the graph.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.ClearGraph">
            <summary>
            Force to clear the graph. 
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.UpdateGraphSequence(System.Int32,System.Single[][],System.Boolean[])">
            <summary>
            Force to update the sequence graph.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.DrawDataLinesSequence(System.Drawing.Graphics,System.Single[][],System.Int32,System.Boolean[])">
            <summary>
            Prepare the sequence image before drawing.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamTrend.CopyGraphSequenceToGraph">
            <summary>
            Force to copy the sequence graph to graph (for sequence graph connection).
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.Registration">
            <summary>
            Get/set the registration key.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.GridBackColor">
            <summary>
            Get/set the back color of the grid lines.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.GridColor">
            <summary>
            Get/set the color of the grid lines.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.DrawType">
            <summary>
            Get/set the draw type of the lines.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.Pen0Color">
            <summary>
            Get/set the color of the data line[0].
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.Pen1Color">
            <summary>
            Get/set the color of the data line[1].
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.Pen2Color">
            <summary>
            Get/set the color of the data line[2].
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.Pen3Color">
            <summary>
            Get/set the color of the data line[3].
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.Pen4Color">
            <summary>
            Get/set the color of the data line[4].
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.Pen5Color">
            <summary>
            Get/set the color of the data line[5].
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.Pen6Color">
            <summary>
            Get/set the color of the data line[6].
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.Pen7Color">
            <summary>
            Get/set the color of the data line[7].
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.GridLineSize">
            <summary>
            Get/set the distance between two grid lines.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.MaximumY">
            <summary>
            Get/set the maximum value of the Y-axis.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.MinimumY">
            <summary>
            Get/set the minimum value of the Y-axis.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.StepSize">
            <summary>
            Get/set the X-axis movement steps.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.HorLabOrientation">
            <summary>
            Get/set the horizontal label layout
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.VerLabOrientation">
            <summary>
            Get/set the vertical label layout
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.VerLabUnit">
            <summary>
            Get/set the vertical label unit string.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamTrend.HorLabType">
            <summary>
            Get/set the horizontal label type.
            </summary>
        </member>
        <member name="T:Advantech.Graph.Crypto">
            <summary>
            Encrypts and decrypts data using the crypto APIs.
            </summary>
        </member>
        <member name="M:Advantech.Graph.Crypto.Win32Encrypt(System.String,System.Byte[])">
            <summary>
            Encrypt data. Use passphrase to generate the encryption key. 
            Returns a byte array that contains the encrypted data.
            </summary>
        </member>
        <member name="M:Advantech.Graph.Crypto.Win32Decrypt(System.String,System.Byte[])">
            <summary>
            Decrypt data. Use passphrase to generate the encryption key. 
            Returns a byte array that contains the decrypted data.
            </summary>
        </member>
        <member name="M:Advantech.Graph.Crypto.Win32GetCryptoKey(System.IntPtr,System.String)">
            <summary>
            Create a crypto key form a passphrase. This key is 
            used to encrypt and decrypt data.
            </summary>
        </member>
        <member name="M:Advantech.Graph.Crypto.Win32Failed(System.String)">
            <summary>
            Throws SystemException with GetLastError information.
            </summary>
        </member>
        <member name="M:Advantech.Graph.Crypto.WinCEEncrypt(System.String,System.Byte[])">
            <summary>
            Encrypt data. Use passphrase to generate the encryption key. 
            Returns a byte array that contains the encrypted data.
            </summary>
        </member>
        <member name="M:Advantech.Graph.Crypto.WinCEDecrypt(System.String,System.Byte[])">
            <summary>
            Decrypt data. Use passphrase to generate the encryption key. 
            Returns a byte array that contains the decrypted data.
            </summary>
        </member>
        <member name="M:Advantech.Graph.Crypto.WinCEGetCryptoKey(System.IntPtr,System.String)">
            <summary>
            Create a crypto key form a passphrase. This key is 
            used to encrypt and decrypt data.
            </summary>
        </member>
        <member name="M:Advantech.Graph.Crypto.WinCEFailed(System.String)">
            <summary>
            Throws SystemException with GetLastError information.
            </summary>
        </member>
        <member name="T:Advantech.Graph.DrawType">
            <summary>
            The shape of the control.
            </summary>
        </member>
        <member name="F:Advantech.Graph.DrawType.Analog">
            <summary>
            Analog shape.
            </summary>
        </member>
        <member name="F:Advantech.Graph.DrawType.Digital">
            <summary>
            Digital shape.
            </summary>
        </member>
        <member name="T:Advantech.Graph.enumVerLabOrientation">
            <summary>
            Vertical label orientation enumeration
            </summary>
        </member>
        <member name="F:Advantech.Graph.enumVerLabOrientation.Non">
            <summary>
            Non
            </summary>
        </member>
        <member name="F:Advantech.Graph.enumVerLabOrientation.Left">
            <summary>
            Left type
            </summary>
        </member>
        <member name="F:Advantech.Graph.enumVerLabOrientation.Right">
            <summary>
            Right type
            </summary>
        </member>
        <member name="T:Advantech.Graph.enumHorLabOrientation">
            <summary>
            Horizontal label orientation enumeration
            </summary>
        </member>
        <member name="F:Advantech.Graph.enumHorLabOrientation.Non">
            <summary>
            Non
            </summary>
        </member>
        <member name="F:Advantech.Graph.enumHorLabOrientation.Up">
            <summary>
            Up type
            </summary>
        </member>
        <member name="F:Advantech.Graph.enumHorLabOrientation.Bottom">
            <summary>
            Bottom type
            </summary>
        </member>
        <member name="T:Advantech.Graph.enumHorLabType">
            <summary>
            Horizontal label type enumeration
            </summary>
        </member>
        <member name="F:Advantech.Graph.enumHorLabType.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:Advantech.Graph.enumHorLabType.Span">
            <summary>
            Span
            </summary>
        </member>
        <member name="F:Advantech.Graph.enumHorLabType.Step">
            <summary>
            Step
            </summary>
        </member>
        <member name="T:Advantech.Graph.HorLabTag">
            <summary>
            The horizontal label tag
            </summary>
        </member>
        <member name="F:Advantech.Graph.HorLabTag.szNum">
            <summary>
            Label string
            </summary>
        </member>
        <member name="F:Advantech.Graph.HorLabTag.iLocationX">
            <summary>
            Location X
            </summary>
        </member>
        <member name="F:Advantech.Graph.HorLabTag.m_dataTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="M:Advantech.Graph.HorLabTag.#ctor">
            <summary>
            The horizontal label tag constructor
            </summary>
        </member>
        <member name="M:Advantech.Graph.HorLabTag.ShiftLocation(System.Int32)">
            <summary>
            Shift the location
            </summary>
            <param name="sftX"></param>
        </member>
        <member name="P:Advantech.Graph.HorLabTag.dataTime">
            <summary>
            Create dataTime
            </summary>
        </member>
        <member name="T:Advantech.Graph.AdamSwitch">
            <summary>
            The AdamSwitch graphic control
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamSwitch.#ctor">
            <summary>
            The AdamSwitch constructor.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamSwitch.OnResize(System.EventArgs)">
            <summary>
            The OnResize event.
            </summary>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Advantech.Graph.AdamSwitch.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint event
            </summary>
            <param name="pe">PaintEventArgs</param>
        </member>
        <member name="F:Advantech.Graph.AdamSwitch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Advantech.Graph.AdamSwitch.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Advantech.Graph.AdamSwitch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSwitch.Registration">
            <summary>
            Get/set the registration key.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSwitch.Value">
            <summary>
            Get/set the swicth to be On or Off.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSwitch.StretchImage">
            <summary>
            Get/set whether the image should be stretched.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSwitch.SwitchOnImage">
            <summary>
            Get/set the image when the switch On.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSwitch.SwitchOnString">
            <summary>
            Get/set the string when the switch On.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSwitch.SwitchOffImage">
            <summary>
            Get/set the image when the switch Off.
            </summary>
        </member>
        <member name="P:Advantech.Graph.AdamSwitch.SwitchOffString">
            <summary>
            Get/set the string when the switch Off.
            </summary>
        </member>
    </members>
</doc>
